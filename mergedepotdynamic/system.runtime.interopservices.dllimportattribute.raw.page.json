{"content":"    \r\n    <h1 id=\"System_Runtime_InteropServices_DllImportAttribute\">\r\n      <span class=\"lang-csharp\">DllImportAttribute</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Indicates that the attributed method is exposed by an unmanaged dynamic-link library (DLL) as a static entry point.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.AttributeUsage(System.AttributeTargets.Method, Inherited=false)]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class DllImportAttribute : Attribute</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">System.Attribute</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DllImportAttribute</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttribute_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttribute(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_\" data-linktype=\"relative-path\">GetCustomAttributes(Module)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetCustomAttributes_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">GetCustomAttributes(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefaultAttribute\" data-linktype=\"relative-path\">IsDefaultAttribute()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_\" data-linktype=\"relative-path\">IsDefined(Assembly,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Assembly_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Assembly,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(MemberInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_MemberInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(MemberInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_\" data-linktype=\"relative-path\">IsDefined(Module,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_Module_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(Module,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo,Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_IsDefined_System_Reflection_ParameterInfo_System_Type_System_Boolean_\" data-linktype=\"relative-path\">IsDefined(ParameterInfo,Type,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_Match_System_Object_\" data-linktype=\"relative-path\">Match(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetIDsOfNames_System_Guid__System_IntPtr_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfo_System_UInt32_System_UInt32_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.GetTypeInfo(UInt32,UInt32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_GetTypeInfoCount_System_UInt32__\" data-linktype=\"relative-path\">_Attribute.GetTypeInfoCount(UInt32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_System_Runtime_InteropServices__Attribute_Invoke_System_UInt32_System_Guid__System_UInt32_System_Int16_System_IntPtr_System_IntPtr_System_IntPtr_System_IntPtr_\" data-linktype=\"relative-path\">_Attribute.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.attribute#System_Attribute_TypeId\" data-linktype=\"relative-path\">TypeId</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>You can apply this attribute to methods.  </p>\n<p> The DllImportAttribute attribute provides the information needed to call a function exported from an unmanaged DLL. As a minimum requirement, you must supply the name of the DLL containing the entry point.  </p>\n<p> You apply this attribute directly to C# and C++ method definitions; however, the Visual Basic compiler emits this attribute when you use the <code>Declare</code> statement. For complex method definitions that include <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute#System_Runtime_InteropServices_DllImportAttribute_BestFitMapping\" data-linktype=\"relative-path\">BestFitMapping</a>, <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute#System_Runtime_InteropServices_DllImportAttribute_CallingConvention\" data-linktype=\"relative-path\">CallingConvention</a>, <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute#System_Runtime_InteropServices_DllImportAttribute_ExactSpelling\" data-linktype=\"relative-path\">ExactSpelling</a>, <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute#System_Runtime_InteropServices_DllImportAttribute_PreserveSig\" data-linktype=\"relative-path\">PreserveSig</a>, <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute#System_Runtime_InteropServices_DllImportAttribute_SetLastError\" data-linktype=\"relative-path\">SetLastError</a>, or <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute#System_Runtime_InteropServices_DllImportAttribute_ThrowOnUnmappableChar\" data-linktype=\"relative-path\">ThrowOnUnmappableChar</a> fields, you apply this attribute directly to Visual Basic method definitions.  </p>\n<p> <strong>Note</strong> JScript does not support this attribute. You can use C# or Visual Basic wrapper classes to access unmanaged API methods from JScript programs.  </p>\n<p> For additional information about using the platform invoke service to access functions in unmanaged DLLs, see <a href=\"../Topic/Consuming%20Unmanaged%20DLL%20Functions.md\" data-linktype=\"relative-path\">Consuming Unmanaged DLL Functions</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The DllImportAttribute does not support marshaling of generic types.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_DllImportAttribute__ctor_System_String_\" data-linktype=\"self-bookmark\">DllImportAttribute(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a> class with the name of the DLL containing the method to import.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_DllImportAttribute_BestFitMapping\" data-linktype=\"self-bookmark\">BestFitMapping</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_DllImportAttribute_CallingConvention\" data-linktype=\"self-bookmark\">CallingConvention</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates the calling convention of an entry point.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_DllImportAttribute_CharSet\" data-linktype=\"self-bookmark\">CharSet</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates how to marshal string parameters to the method and controls name mangling.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_DllImportAttribute_EntryPoint\" data-linktype=\"self-bookmark\">EntryPoint</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates the name or ordinal of the DLL entry point to be called.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_DllImportAttribute_ExactSpelling\" data-linktype=\"self-bookmark\">ExactSpelling</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Controls whether the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute#System_Runtime_InteropServices_DllImportAttribute_CharSet\" data-linktype=\"relative-path\">CharSet</a> field causes the common language runtime to search an unmanaged DLL for entry-point names other than the one specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_DllImportAttribute_PreserveSig\" data-linktype=\"self-bookmark\">PreserveSig</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether unmanaged methods that have <code>HRESULT</code> or <code>retval</code> return values are directly translated or whether <code>HRESULT</code> or <code>retval</code> return values are automatically converted to exceptions.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_DllImportAttribute_SetLastError\" data-linktype=\"self-bookmark\">SetLastError</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the callee calls the <code>SetLastError</code> Win32 API function before returning from the attributed method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_DllImportAttribute_ThrowOnUnmappableChar\" data-linktype=\"self-bookmark\">ThrowOnUnmappableChar</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI &quot;?&quot; character.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_InteropServices_DllImportAttribute_Value\" data-linktype=\"self-bookmark\">Value</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the DLL file that contains the entry point.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_DllImportAttribute__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_InteropServices_DllImportAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DllImportAttribute(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a> class with the name of the DLL containing the method to import.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DllImportAttribute (string dllName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dllName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the DLL that contains the unmanaged method. This can include an assembly display name, if the DLL is included in an assembly.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If an unmanaged DLL file is included in an assembly, for example, by using the linker or the <code>/linkresource</code> compiler option, you can specify the assembly display name as part of <code>dllName</code>. For example, if an unmanaged DLL named <code>unmanaged.dll</code> is included in a managed assembly named <code>MyAssembly</code>, the attribute might be specified as shown in the following code.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Runtime.InteropServices.DllImportAttribute#2\">[DllImport(&quot;unmanaged.dll, MyAssembly, Version= 1.0.0.0,&quot;\n &quot;Culture=neutral, PublicKeyToken=a77e0ba5eab10125&quot;)]\nint SomeFuncion1(int parm);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.DllImportAttribute#2\">    &lt;DllImport(&quot;unmanaged.dll, MyAssembly, Version= 1.0.0.0,&quot; + _\n     &quot;Culture=neutral, PublicKeyToken=a77e0ba5eab10125&quot;)&gt; _\n    Public Shared Function DummyFuncion1(parm As Integer) As Integer\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.DllImportAttribute#2\">    [DllImport(&quot;unmanaged.dll, MyAssembly, Version= 1.0.0.0,&quot; +\n     &quot;Culture=neutral, PublicKeyToken=a77e0ba5eab10125&quot;)]\n    static extern int SomeFuncion1(int parm);\n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a> attribute to import the Win32 <code>MessageBox</code> function.  The code example then calls the imported method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.DllImport.Canonical#1\">using System;\nusing System.Runtime.InteropServices;\n\nclass Example\n{\n    // Use DllImport to import the Win32 MessageBox function.\n    [DllImport(&quot;user32.dll&quot;, CharSet = CharSet.Unicode)]\n    public static extern int MessageBox(IntPtr hWnd, String text, String caption, uint type);\n    \n    static void Main()\n    {\n        // Call the MessageBox function using platform invoke.\n        MessageBox(new IntPtr(0), &quot;Hello World!&quot;, &quot;Hello Dialog&quot;, 0);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.DllImport.Canonical#1\">Imports System\nImports System.Runtime.InteropServices\n\nModule Example\n\n    &#39; Use DllImport to import the Win32 MessageBox function.\n    &lt;DllImport(&quot;user32.dll&quot;, CharSet:=CharSet.Unicode)&gt; _\n    Function MessageBox(ByVal hwnd As IntPtr, ByVal t As String, ByVal caption As String, ByVal t2 As UInt32) As Integer\n    End Function\n\n\n    Sub Main()\n        &#39; Call the MessageBox function using platform invoke.\n        MessageBox(New IntPtr(0), &quot;Hello World!&quot;, &quot;Hello Dialog&quot;, 0)\n    End Sub\n\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_DllImportAttribute_BestFitMapping\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BestFitMapping</div>        \r\n          </div>\r\n    \r\n            <p>Enables or disables best-fit mapping behavior when converting Unicode characters to ANSI characters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool BestFitMapping;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>true</code>, best-fit mapping behavior is enabled; otherwise, best-fit mapping is disabled. The BestFitMapping field is <code>true</code> by default. Settings for this field override the any level settings for the <a class=\"xref\" href=\"system.runtime.interopservices.bestfitmappingattribute\" data-linktype=\"relative-path\">System.Runtime.InteropServices.BestFitMappingAttribute</a> attribute.  </p>\n<p> The common language runtime converts to ANSI characters any managed Unicode characters passed to an unmanaged method executing on Windows 98 or Windows Me. Best-fit mapping enables the interop marshaler to provide a close-matching character when no exact match exists. For example, the marshaler converts the Unicode copyright character to &#39;c&#39; for unmanaged methods that accept ANSI characters. Some characters lack a best-fit representation; these characters are called unmappable. Unmappable characters are usually converted to the default &#39;?&#39; ANSI character.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Certain Unicode characters are converted to dangerous characters, such as the backslash &#39;\\&#39; character, which can inadvertently change a path. By setting the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute#System_Runtime_InteropServices_DllImportAttribute_ThrowOnUnmappableChar\" data-linktype=\"relative-path\">ThrowOnUnmappableChar</a> field to <code>true</code>, you can signal the presence of an unmappable character to the caller by throwing an exception.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> You cannot change the default values provided by the BestFitMapping and <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute#System_Runtime_InteropServices_DllImportAttribute_ThrowOnUnmappableChar\" data-linktype=\"relative-path\">ThrowOnUnmappableChar</a> fields when passing a managed array whose elements are ANSI Chars or LPSTRs to an unmanaged safe array. Best-fit mapping is always enabled and no exception is thrown. Be aware that this combination can compromise your security model.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In some cases, Visual Basic developers use the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a>, instead of the <code>Declare</code> statement, to define a DLL function in managed code. Setting the BestFitMapping field is one of those cases. The following example shows how to apply the strictest character mapping security to a platform invoke method definitions by specifying the ANSI character set, disabling best fit mapping behavior, and throwing an exception on unmapped Unicode characters.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Runtime.InteropServices.DllImportAttribute#3\">[DllImport(&quot;My.dll&quot;, CharSet=CharSet::Ansi,\n               BestFitMapping=false,\n               ThrowOnUnmappableChar=true)]\nint SomeFuncion2(int parm);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.DllImportAttribute#3\">    &lt;DllImport(&quot;My.dll&quot;, CharSet := CharSet.Ansi, _\n                   BestFitMapping := false, _\n                   ThrowOnUnmappableChar := true)&gt; _\n    Public Shared Function SomeFuncion2(parm As Integer) As Integer\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.DllImportAttribute#3\">    [DllImport(&quot;My.dll&quot;, CharSet=CharSet.Ansi,\n                   BestFitMapping=false,\n                   ThrowOnUnmappableChar=true)]\n    static extern int SomeFuncion2(int parm);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_DllImportAttribute_CallingConvention\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CallingConvention</div>        \r\n          </div>\r\n    \r\n            <p>Indicates the calling convention of an entry point.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.InteropServices.CallingConvention CallingConvention;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You set this field to one of the <a class=\"xref\" href=\"system.runtime.interopservices.callingconvention\" data-linktype=\"relative-path\">CallingConvention</a> enumeration members. The default value for the CallingConvention field is <a class=\"xref\" href=\"system.runtime.interopservices.callingconvention\" data-linktype=\"relative-path\">CallingConvention</a>, which in turn defaults to <a class=\"xref\" href=\"system.runtime.interopservices.callingconvention\" data-linktype=\"relative-path\">CallingConvention</a> convention.  </p>\n<p> For more information, see Calling Convention in the MSDN library.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In some cases, Visual Basic developers use the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a>, instead of the <code>Declare</code> statement, to define a DLL function in managed code. Setting the CallingConvention field is one of those cases.  </p>\n<p> System.Runtime.InteropServices.DllImportAttribute#1</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_DllImportAttribute_CharSet\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CharSet</div>        \r\n          </div>\r\n    \r\n            <p>Indicates how to marshal string parameters to the method and controls name mangling.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Runtime.InteropServices.CharSet CharSet;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this field with a member of the <a class=\"xref\" href=\"system.runtime.interopservices.charset\" data-linktype=\"relative-path\">CharSet</a> enumeration to specify the marshaling behavior of string parameters and to specify which entry-point name to invoke (the exact name given or a name ending with &quot;A&quot; or &quot;W&quot;). The default enumeration member for C# and Visual Basic is <code>CharSet.Ansi</code> and the default enumeration member for C++ is <code>CharSet.None</code>, which is equivalent to <code>CharSet.Ansi</code>. In Visual Basic, you use the <code>Declare</code> statement to specify the <code>CharSet</code> field.  </p>\n<p> The <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute#System_Runtime_InteropServices_DllImportAttribute_ExactSpelling\" data-linktype=\"relative-path\">ExactSpelling</a> field influences the behavior of the <code>CharSet</code> field in determining which entry-point name to invoke. For a detailed description and examples of the string marshaling and name matching behavior associated with the <code>CharSet</code> field, see <a href=\"../Topic/Specifying%20a%20Character%20Set.md\" data-linktype=\"relative-path\">Specifying a Character Set</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a> attribute to import the Win32 <code>MessageBox</code> function.  The code example then calls the imported method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.DllImport.Canonical#1\">using System;\nusing System.Runtime.InteropServices;\n\nclass Example\n{\n    // Use DllImport to import the Win32 MessageBox function.\n    [DllImport(&quot;user32.dll&quot;, CharSet = CharSet.Unicode)]\n    public static extern int MessageBox(IntPtr hWnd, String text, String caption, uint type);\n    \n    static void Main()\n    {\n        // Call the MessageBox function using platform invoke.\n        MessageBox(new IntPtr(0), &quot;Hello World!&quot;, &quot;Hello Dialog&quot;, 0);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.DllImport.Canonical#1\">Imports System\nImports System.Runtime.InteropServices\n\nModule Example\n\n    &#39; Use DllImport to import the Win32 MessageBox function.\n    &lt;DllImport(&quot;user32.dll&quot;, CharSet:=CharSet.Unicode)&gt; _\n    Function MessageBox(ByVal hwnd As IntPtr, ByVal t As String, ByVal caption As String, ByVal t2 As UInt32) As Integer\n    End Function\n\n\n    Sub Main()\n        &#39; Call the MessageBox function using platform invoke.\n        MessageBox(New IntPtr(0), &quot;Hello World!&quot;, &quot;Hello Dialog&quot;, 0)\n    End Sub\n\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_DllImportAttribute_EntryPoint\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EntryPoint</div>        \r\n          </div>\r\n    \r\n            <p>Indicates the name or ordinal of the DLL entry point to be called.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string EntryPoint;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can specify the entry-point name by supplying a string indicating the name of the DLL containing the entry point, or you can identify the entry point by its ordinal. Ordinals are prefixed with the # sign, for example, #1. If you omit this field, the common language runtime uses the name of the.NET method marked with the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a>.  </p>\n<p> For additional information, see <a href=\"../Topic/Identifying%20Functions%20in%20DLLs.md\" data-linktype=\"relative-path\">Identifying Functions in DLLs</a>. For examples showing how to use the EntryPoint field, see <a href=\"../Topic/Specifying%20an%20Entry%20Point.md\" data-linktype=\"relative-path\">Specifying an Entry Point</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a> attribute to import the Win32 <code>MessageBox</code> function.  The code example uses the EntryPoint property to specify the function to import and then changes the name to <code>MyNewMessageBoxMethod</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.DllImport.EntryPoint#1\">Imports System\nImports System.Runtime.InteropServices\n\nModule Example\n\n    &#39; Use DllImport to import the Win32 MessageBox function.\n    &#39; Specify the method to import using the EntryPoint field and \n    &#39; then change the name to MyNewMessageBoxMethod.\n    &lt;DllImport(&quot;user32.dll&quot;, CharSet:=CharSet.Unicode, EntryPoint:=&quot;MessageBox&quot;)&gt; _\n    Function MyNewMessageBoxMethod(ByVal hwnd As IntPtr, ByVal t As String, ByVal caption As String, ByVal t2 As UInt32) As Integer\n    End Function\n\n\n    Sub Main()\n        &#39; Call the MessageBox function using platform invoke.\n        MyNewMessageBoxMethod(New IntPtr(0), &quot;Hello World!&quot;, &quot;Hello Dialog&quot;, 0)\n    End Sub\n\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.DllImport.EntryPoint#1\">using System;\nusing System.Runtime.InteropServices;\n\nclass Example\n{\n    // Use DllImport to import the Win32 MessageBox function.\n    // Specify the method to import using the EntryPoint field and \n    // then change the name to MyNewMessageBoxMethod.\n    [DllImport(&quot;user32.dll&quot;, CharSet = CharSet.Unicode, EntryPoint = &quot;MessageBox&quot;)]\n    public static extern int MyNewMessageBoxMethod(IntPtr hWnd, String text, String caption, uint type);\n    \n    static void Main()\n    {\n        // Call the MessageBox function using platform invoke.\n        MyNewMessageBoxMethod(new IntPtr(0), &quot;Hello World!&quot;, &quot;Hello Dialog&quot;, 0);\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_DllImportAttribute_ExactSpelling\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExactSpelling</div>        \r\n          </div>\r\n    \r\n            <p>Controls whether the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute#System_Runtime_InteropServices_DllImportAttribute_CharSet\" data-linktype=\"relative-path\">CharSet</a> field causes the common language runtime to search an unmanaged DLL for entry-point names other than the one specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ExactSpelling;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>false</code>, the entry point name appended with the letter A is invoked when the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute#System_Runtime_InteropServices_DllImportAttribute_CharSet\" data-linktype=\"relative-path\">System.Runtime.InteropServices.DllImportAttribute.CharSet</a> field is set to <code>CharSet.Ansi</code>, and the entry-point name appended with the letter W is invoked when the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute#System_Runtime_InteropServices_DllImportAttribute_CharSet\" data-linktype=\"relative-path\">System.Runtime.InteropServices.DllImportAttribute.CharSet</a> field is set to the <code>CharSet.Unicode</code>. Typically, managed compilers set this field.  </p>\n<p> The following table shows the relationship between the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute#System_Runtime_InteropServices_DllImportAttribute_CharSet\" data-linktype=\"relative-path\">CharSet</a> and ExactSpelling fields, based on default values imposed by the programming language. You can override the default setting, but do so with caution.  </p>\n<table>\n<thead>\n<tr>\n<th>Language</th>\n<th>ANSI</th>\n<th>Unicode</th>\n<th>Auto</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Visual Basic</td>\n<td>ExactSpelling:=True</td>\n<td>ExactSpelling:=True</td>\n<td>ExactSpelling:=False</td>\n</tr>\n<tr>\n<td>C#</td>\n<td>ExactSpelling=false</td>\n<td>ExactSpelling=false</td>\n<td>ExactSpelling=false</td>\n</tr>\n<tr>\n<td>C++</td>\n<td>ExactSpelling=false</td>\n<td>ExactSpelling=false</td>\n<td>ExactSpelling=false</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In some cases, Visual Basic developers use the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a>, instead of using the <code>Declare</code> statement, to define a DLL function in managed code. Setting the ExactSpelling field is one of those cases.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Runtime.InteropServices.DllImportAttribute#4\">[DllImport(&quot;user32.dll&quot;, CharSet=CharSet::Ansi, ExactSpelling=true)]\nint MessageBoxA(IntPtr hWnd, String^ Text,\n                String^ Caption, unsigned int Type);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.DllImportAttribute#4\">Public Class Win32\n    &lt;DllImport(&quot;user32.dll&quot;, ExactSpelling := False)&gt; _\n    Public Shared Function MessageBox(hWnd As IntPtr, text As String, _\n               caption As String, type As UInteger) As Integer\n    End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.DllImportAttribute#4\">public class Win32\n{\n    [DllImport(&quot;user32.dll&quot;, CharSet=CharSet.Unicode,\n        ExactSpelling=true)]\n    public static extern int MessageBoxW(IntPtr hWnd, String text,\n                                String caption, uint type);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_DllImportAttribute_PreserveSig\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PreserveSig</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether unmanaged methods that have <code>HRESULT</code> or <code>retval</code> return values are directly translated or whether <code>HRESULT</code> or <code>retval</code> return values are automatically converted to exceptions.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool PreserveSig;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Set the PreserveSig field to <code>true</code> to directly translate unmanaged signatures with <code>HRESULT</code> or <code>retval</code> values; set it to <code>false</code> to automatically convert <code>HRESULT</code> or <code>retval</code> values to exceptions. By default, the PreserveSig field is <code>true</code>.  </p>\n<p> When <code>true</code>, the resulting method signature returns an integer value that contains the <code>HRESULT</code> value.  In this case, you must manually inspect the return value and respond accordingly in your application.  </p>\n<p> When you set the PreserveSig field to <code>false</code>, the resulting method signature contains a void return type instead of an integer (<code>HRESULT</code>) return type.  When the unmanaged method produces an <code>HRESULT</code>, the runtime automatically ignores a return value of <code>S_OK</code> (or 0) and does not throw an exception.  For <code>HRESULT</code>s other than <code>S_OK</code>, the runtime automatically throws an exception that corresponds to the <code>HRESULT</code>.  Note that the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a> attribute only performs this conversion to methods that return an <code>HRESULT</code>.  </p>\n<p> You might decide to change the default error reporting behavior from <code>HRESULT</code>s to exceptions in cases where exceptions better fit the error reporting structure of your application.  </p>\n<p> This field is similar to the <a class=\"xref\" href=\"system.runtime.interopservices.preservesigattribute\" data-linktype=\"relative-path\">PreserveSigAttribute</a>; however, in contrast to the PreserveSig field, the default value for the attribute is <code>false</code>.  </p>\n<p> In some cases, Visual Basic developers use the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a>, instead of using the <code>Declare</code> statement, to define a DLL function in managed code. Setting the PreserveSig field is one of those cases.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a> to import the unmanaged <code>SHAutoComplete</code> function once with the PreserveSig field set to <code>true</code> and again with the PreserveSig field set to <code>false</code>.  This code example causes the <code>SHAutoComplete</code> function to generate any errors with an exception one time and an <code>HRESULT</code> the next.  </p>\n<pre><code class=\"lang-cs\" name=\"Runtime.InteropServices.PreserveSigAttribute#1\">using System;\nusing System.Collections.Generic;\nusing System.Runtime.InteropServices;\n\ninternal class Win32\n{\n    // The SHAutoComplete function allows you\n    // to add auto-compete functionality to your\n    // Windows Forms text boxes. In .NET Framework\n    // 1.1 and earlier, you can use SHAutoComplete.\n    // Later versions have this ability built in without\n    // requiring platform invoke.\n\n    // See the MSDN documentation of the\n    // SHAutoComplete function for the\n    // complete set of flags.\n    public enum SHAutoCompleteFlags\n    {\n        SHACF_DEFAULT = 0x00000000,\n        SHACF_FILESYSTEM = 0x00000001\n    }\n\n    // Use the DllImportAttribute to import the SHAutoComplete function.\n    // Set the PreserveSig to false to specify exception errors.\n    [DllImportAttribute(&quot;shlwapi.dll&quot;, EntryPoint = &quot;SHAutoComplete&quot;, ExactSpelling = true, PreserveSig = false)]\n    public static extern void SHAutoComplete(IntPtr hwndEdit, SHAutoCompleteFlags dwFlags);\n\n    // Use the DllImportAttribute to import the SHAutoComplete function.\n    // Use the default value of the PreserveSig field to specify HRESULT errors.\n    [DllImportAttribute(&quot;shlwapi.dll&quot;, EntryPoint = &quot;SHAutoComplete&quot;, ExactSpelling = true)]\n    public static extern int SHAutoCompleteHRESULT(IntPtr hwndEdit, SHAutoCompleteFlags dwFlags);\n}\n\n\nstatic class Program\n{\n    static void Main()\n    {\n        Run();\n    }\n\n    static void Run()\n    {\n        // Create a null (nothing in Visual Basic) IntPtr\n        // to pass to the SHAutoComplete method.  Doing so\n        // creates a failure and demonstrates the two ways\n        // that the PreserveSig property allows you to handle\n        // failures.\n        // Normally, you would pass a handle to a managed\n        // Windows Forms text box.\n        IntPtr iPtr = new IntPtr(0);\n\n        // Call the SHAutoComplete function using exceptions.\n        try\n        {\n            Console.WriteLine(&quot;Calling the SHAutoComplete method with the PreserveSig field set to false.&quot;);\n\n            Win32.SHAutoComplete(iPtr, Win32.SHAutoCompleteFlags.SHACF_DEFAULT);\n        }\n        catch (Exception e)\n        {\n            Console.WriteLine(&quot;Exception handled: &quot; + e.Message);\n        }\n\n        Console.WriteLine(&quot;Calling the SHAutoComplete method with the PreserveSig field set to true.&quot;);\n\n        // Call the SHAutoComplete function using HRESULTS.\n        int HRESULT = Win32.SHAutoCompleteHRESULT(iPtr, Win32.SHAutoCompleteFlags.SHACF_DEFAULT);\n\n        Console.WriteLine(&quot;HRESULT handled: &quot; + HRESULT.ToString());\n\n\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Runtime.InteropServices.PreserveSigAttribute#1\">Imports System\nImports System.Collections.Generic\nImports System.ComponentModel\nImports System.Runtime.InteropServices\n\n\n\nModule Win32\n    &#39; The SHAutoComplete function allows you \n    &#39; to add auto-compete functionality to your\n    &#39; Windows Forms text boxes. In .NET Framework \n    &#39; 1.1 and earlier, you can use SHAutoComplete.\n    &#39; Later versions have this ability built in without\n    &#39; requiring platform invoke.\n    &#39; See the MSDN documentation of the \n    &#39; SHAutoComplete function for the \n    &#39; complete set of flags.\n\n    Public Enum SHAutoCompleteFlags\n        SHACF_DEFAULT = &amp;H1\n        SHACF_FILESYSTEM = &amp;H1\n    End Enum \n\n\n    &#39; Use the DllImportAttribute to import the SHAutoComplete function. \n    &#39; Set the PreserveSig to false to specify exception errors.\n    &lt;DllImportAttribute(&quot;shlwapi.dll&quot;, EntryPoint:=&quot;SHAutoComplete&quot;, ExactSpelling:=True, PreserveSig:=False)&gt; _\n    Public Sub SHAutoComplete(ByVal hwndEdit As IntPtr, ByVal dwFlags As SHAutoCompleteFlags)\n    End Sub\n\n\n    &#39; Use the DllImportAttribute to import the SHAutoComplete function. \n    &#39; Use the default value of the PreserveSig field to specify HRESULT errors.\n    &lt;DllImportAttribute(&quot;shlwapi.dll&quot;, EntryPoint:=&quot;SHAutoComplete&quot;, ExactSpelling:=True)&gt; _\n    Public Function SHAutoCompleteHRESULT(ByVal hwndEdit As IntPtr, ByVal dwFlags As SHAutoCompleteFlags) As Integer\n    End Function\nEnd Module\n\n\n\nModule Program\n\n    Sub Main()\n        Run()\n\n    End Sub\n\n\n    Sub Run()\n        &#39; Create a null (nothing in Visual Basic) IntPtr\n        &#39; to pass to the SHAutoComplete method.  Doing so\n        &#39; creates a failure and demonstrates the two ways  \n        &#39; that the PreserveSig property allows you to handle \n        &#39; failures.  \n        &#39; Normally, you would pass a handle to a managed\n        &#39; Windows Forms text box.\n        Dim iPtr As New IntPtr(0)\n\n        &#39; Call the SHAutoComplete function using exceptions.\n        Try\n            Console.WriteLine(&quot;Calling the SHAutoComplete method with the PreserveSig field set to false.&quot;)\n\n            Win32.SHAutoComplete(iPtr,Win32.SHAutoCompleteFlags.SHACF_DEFAULT)\n        Catch e As Exception\n            Console.WriteLine(&quot;Exception handled: &quot; + e.Message)\n        End Try\n\n        Console.WriteLine(&quot;Calling the SHAutoComplete method with the PreserveSig field set to true.&quot;)\n\n        &#39; Call the SHAutoComplete function using HRESULTS.\n        Dim HRESULT As Integer = Win32.SHAutoCompleteHRESULT(iPtr,Win32.SHAutoCompleteFlags.SHACF_DEFAULT)\n\n        Console.WriteLine(&quot;HRESULT handled: &quot; + HRESULT.ToString())\n\n    End Sub\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_DllImportAttribute_SetLastError\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetLastError</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the callee calls the <code>SetLastError</code> Win32 API function before returning from the attributed method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool SetLastError;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>true</code> to indicate that the callee will call <code>SetLastError</code>; otherwise, <code>false</code>. The default is <code>false</code>.  </p>\n<p> The runtime marshaler calls <code>GetLastError</code> and caches the value returned to prevent it from being overwritten by other API calls. You can retrieve the error code by calling <a class=\"xref\" href=\"system.runtime.interopservices.marshal#System_Runtime_InteropServices_Marshal_GetLastWin32Error_\" data-linktype=\"relative-path\">GetLastWin32Error</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In some cases, Visual Basic developers use the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a>, instead of using the <code>Declare</code> statement, to define a DLL function in managed code. Setting the SetLastError field is one of those cases.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Runtime.InteropServices.DllImportAttribute#5\">[DllImport(&quot;user32.dll&quot;, SetLastError=true)]\nint MessageBoxA(IntPtr hWnd, String^ Text,\n                String^ Caption, unsigned int Type);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.DllImportAttribute#5\">Public Class Win32\n    &lt;DllImport(&quot;user32.dll&quot;, SetLastError := true)&gt; _\n    Public Shared Function MessageBoxA(hWnd As IntPtr, text As String, _\n               caption As String, type As UInteger) As Integer\n    End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.DllImportAttribute#5\">public class Win32\n{\n    [DllImport(&quot;user32.dll&quot;, SetLastError=true)]\n    public static extern int MessageBoxA(IntPtr hWnd, String text,\n                                String caption, uint type);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_DllImportAttribute_ThrowOnUnmappableChar\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ThrowOnUnmappableChar</div>        \r\n          </div>\r\n    \r\n            <p>Enables or disables the throwing of an exception on an unmappable Unicode character that is converted to an ANSI &quot;?&quot; character.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ThrowOnUnmappableChar;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>true</code> to indicate that an exception is thrown each time the interop marshaler converts an unmappable character; <code>false</code> to indicate that the ThrowOnUnmappableChar field is disabled. This field is <code>false</code> by default.  </p>\n<p> The common language runtime converts to ANSI characters any managed Unicode characters passed to an unmanaged method executing on Windows 98 or Windows Me. Best-fit mapping enables the interop marshaler to provide a close-matching character when no exact match exists. For example, the marshaler converts the Unicode copyright character to &#39;c&#39; for unmanaged methods that accept ANSI characters. Some characters lack a best-fit representation; these characters are called unmappable. Unmappable characters are usually converted to the default &#39;?&#39; ANSI character.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> Certain Unicode characters are converted to dangerous characters, such as the backslash &#39;\\&#39; character, which can inadvertently change a path. By setting the ThrowOnUnmappableChar field to <code>true</code>, you can signal the presence of an unmappable character to the caller by throwing an exception.  </p>\n</div>\n<div class=\"CAUTION\"><h5>Caution</h5><p> You cannot change the default values provided by the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute#System_Runtime_InteropServices_DllImportAttribute_BestFitMapping\" data-linktype=\"relative-path\">BestFitMapping</a> and ThrowOnUnmappableChar fields when passing a managed array whose elements are ANSI Chars or LPSTRs to an unmanaged safe array. Best-fit mapping is always enabled and no exception is thrown. Be aware that this combination can compromise your security model.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In some cases, Visual Basic developers use the <a class=\"xref\" href=\"system.runtime.interopservices.dllimportattribute\" data-linktype=\"relative-path\">DllImportAttribute</a> to define a DLL function in managed code, instead of using the <code>Declare</code> statement. Setting the ThrowOnUnmappableChar field is one of those cases. The following example shows how to apply the strictest character mapping security to a platform invoke method definitions by specifying the ANSI character set, disabling best fit mapping behavior, and throwing an exception on unmapped Unicode characters.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Runtime.InteropServices.DllImportAttribute#3\">[DllImport(&quot;My.dll&quot;, CharSet=CharSet::Ansi,\n               BestFitMapping=false,\n               ThrowOnUnmappableChar=true)]\nint SomeFuncion2(int parm);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Runtime.InteropServices.DllImportAttribute#3\">    &lt;DllImport(&quot;My.dll&quot;, CharSet := CharSet.Ansi, _\n                   BestFitMapping := false, _\n                   ThrowOnUnmappableChar := true)&gt; _\n    Public Shared Function SomeFuncion2(parm As Integer) As Integer\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Runtime.InteropServices.DllImportAttribute#3\">    [DllImport(&quot;My.dll&quot;, CharSet=CharSet.Ansi,\n                   BestFitMapping=false,\n                   ThrowOnUnmappableChar=true)]\n    static extern int SomeFuncion2(int parm);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_InteropServices_DllImportAttribute_Value\">\r\n    \r\n            <a id=\"System_Runtime_InteropServices_DllImportAttribute_Value_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Value</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the DLL file that contains the entry point.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Value { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the DLL file that contains the entry point.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can provide a full or relative path. If you provide no path, the DLL must be in the current path at run time, unless the DLL is loaded by some other means. Be aware, however, that using a fully qualified path can introduce inaccuracy if the DLL is moved.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.InteropServices.DllImportAttribute.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.InteropServices.DllImportAttribute.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.DllImportAttribute\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.DllImportAttribute..ctor\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.DllImportAttribute.BestFitMapping\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.DllImportAttribute.CallingConvention\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.DllImportAttribute.CharSet\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.DllImportAttribute.EntryPoint\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.DllImportAttribute.ExactSpelling\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.DllImportAttribute.PreserveSig\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.DllImportAttribute.SetLastError\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar\">\r\n<meta name=\"APIName\" content=\"System.Runtime.InteropServices.DllImportAttribute.Value\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"be7ffb3f-cb03-ca2b-afb3-fefcd1380d07\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Runtime.InteropServices\\DllImportAttribute.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Indicates that the attributed method is exposed by an unmanaged dynamic-link library (DLL) as a static entry point.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.InteropServices/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.InteropServices.DllImportAttribute\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.InteropServices.DllImportAttribute.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.InteropServices.DllImportAttribute.yml","open_to_public_contributors":true,"api_name":["System.Runtime.InteropServices.DllImportAttribute","System.Runtime.InteropServices.DllImportAttribute..ctor","System.Runtime.InteropServices.DllImportAttribute.BestFitMapping","System.Runtime.InteropServices.DllImportAttribute.CallingConvention","System.Runtime.InteropServices.DllImportAttribute.CharSet","System.Runtime.InteropServices.DllImportAttribute.EntryPoint","System.Runtime.InteropServices.DllImportAttribute.ExactSpelling","System.Runtime.InteropServices.DllImportAttribute.PreserveSig","System.Runtime.InteropServices.DllImportAttribute.SetLastError","System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar","System.Runtime.InteropServices.DllImportAttribute.Value"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.InteropServices.DllImportAttribute","System::Runtime::InteropServices::DllImportAttribute","System.Runtime.InteropServices.DllImportAttribute.#ctor","System::Runtime::InteropServices::DllImportAttribute::#ctor","System.Runtime.InteropServices.DllImportAttribute.BestFitMapping","System::Runtime::InteropServices::DllImportAttribute::BestFitMapping","System.Runtime.InteropServices.DllImportAttribute.CallingConvention","System::Runtime::InteropServices::DllImportAttribute::CallingConvention","System.Runtime.InteropServices.DllImportAttribute.CharSet","System::Runtime::InteropServices::DllImportAttribute::CharSet","System.Runtime.InteropServices.DllImportAttribute.EntryPoint","System::Runtime::InteropServices::DllImportAttribute::EntryPoint","System.Runtime.InteropServices.DllImportAttribute.ExactSpelling","System::Runtime::InteropServices::DllImportAttribute::ExactSpelling","System.Runtime.InteropServices.DllImportAttribute.PreserveSig","System::Runtime::InteropServices::DllImportAttribute::PreserveSig","System.Runtime.InteropServices.DllImportAttribute.SetLastError","System::Runtime::InteropServices::DllImportAttribute::SetLastError","System.Runtime.InteropServices.DllImportAttribute.ThrowOnUnmappableChar","System::Runtime::InteropServices::DllImportAttribute::ThrowOnUnmappableChar","System.Runtime.InteropServices.DllImportAttribute.Value","System::Runtime::InteropServices::DllImportAttribute::Value"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"be7ffb3f-cb03-ca2b-afb3-fefcd1380d07","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Runtime.InteropServices\\DllImportAttribute.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.InteropServices/DllImportAttribute.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DllImportAttribute class | Microsoft Docs","_op_ogTitle":"DllImportAttribute class","description":"Indicates that the attributed method is exposed by an unmanaged dynamic-link library (DLL) as a static entry point.\n","toc_asset_id":"_splitted/System.Runtime.InteropServices/toc.json","toc_rel":"_splitted/System.Runtime.InteropServices/toc.json","source_url":"","ms.assetid":"System.Runtime.InteropServices.DllImportAttribute","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.interopservices.dllimportattribute","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.interopservices.dllimportattribute","fileRelativePath":"System.Runtime.InteropServices.DllImportAttribute.html"},"themesRelativePathToOutputRoot":"_themes/"}