{"content":"    \r\n    <h1 id=\"System_Xml_XmlWriter\">\r\n      <span class=\"lang-csharp\">XmlWriter</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a writer that provides a fast, non-cached, forward-only way to generate streams or files that contain XML data.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class XmlWriter : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XmlWriter</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The XmlWriter class writes XML data to a stream, file, text reader, or string. It supports the W3C <a href=\"http://www.w3.org/TR/2006/REC-xml-20060816/\" data-linktype=\"external\">Extensible Markup Language (XML) 1.0 (fourth edition)</a> and <a href=\"http://www.w3.org/TR/REC-xml-names/\" data-linktype=\"external\">Namespaces in XML 1.0 (third edition)</a> recommendations.  </p>\n<p> The members of the XmlWriter class enable you to:  </p>\n<ul>\n<li><p>Verify that the characters are legal XML characters and that element and attribute names are valid XML names.  </p>\n</li>\n<li><p>Verify that the XML document is well-formed.  </p>\n</li>\n<li><p>Encode binary bytes as Base64 or BinHex, and write out the resulting text.  </p>\n</li>\n<li><p>Pass values by using common language runtime types instead of strings, to avoid having to manually perform value conversions.  </p>\n</li>\n<li><p>Write multiple documents to one output stream.  </p>\n</li>\n<li><p>Write valid names, qualified names, and name tokens.  </p>\n<p>In this section:  </p>\n<p><a href=\"#create\" data-linktype=\"self-bookmark\">Creating an XML writer</a><br><a href=\"#output\" data-linktype=\"self-bookmark\">Specifying the output format</a><br><a href=\"#conformance\" data-linktype=\"self-bookmark\">Data conformance</a><br><a href=\"#writing_elements\" data-linktype=\"self-bookmark\">Writing elements</a><br><a href=\"#writing_attributes\" data-linktype=\"self-bookmark\">Writing attributes</a><br><a href=\"#handling_ns\" data-linktype=\"self-bookmark\">Handling namespaces</a><br><a href=\"#writing_types\" data-linktype=\"self-bookmark\">Writing typed data</a><br><a href=\"#close\" data-linktype=\"self-bookmark\">Closing the XML writer</a><br><a href=\"#async\" data-linktype=\"self-bookmark\">Asynchronous programming</a><br><a href=\"#security\" data-linktype=\"self-bookmark\">Security considerations</a>  </p>\n</li>\n</ul>\n<p><a name=\"create\"></a>   </p>\n<h2 id=\"creating-an-xml-writer\">Creating an XML writer</h2>\n<p> To create an XmlWriter instance, use the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_Create_\" data-linktype=\"relative-path\">Create</a> method. To specify the set of features you want to enable on the XML writer, pass an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> to the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_Create_\" data-linktype=\"relative-path\">Create</a> method. Otherwise, default settings are used. See the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_Create_\" data-linktype=\"relative-path\">Create</a> reference pages for details.  </p>\n<p><a name=\"output\"></a>   </p>\n<h2 id=\"specifying-the-output-format\">Specifying the output format</h2>\n<p> The <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> class includes several properties that control how XmlWriter output is formatted:  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Encoding_\" data-linktype=\"relative-path\">Encoding</a></td>\n<td>Specifies the text encoding to use. The default is <code>Encoding.UTF8</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Indent_\" data-linktype=\"relative-path\">Indent</a></td>\n<td>Indicates whether to indent elements. The default is <code>false</code> (no indentation).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_IndentChars_\" data-linktype=\"relative-path\">IndentChars</a></td>\n<td>Specifies the character string to use when indenting. The default is two spaces.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineChars_\" data-linktype=\"relative-path\">NewLineChars</a></td>\n<td>Specifies the character string to use for line breaks. The default is <code>\\r\\n</code> (carriage return, line feed).</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineHandling_\" data-linktype=\"relative-path\">NewLineHandling</a></td>\n<td>Specifies how to handle newline characters.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineOnAttributes_\" data-linktype=\"relative-path\">NewLineOnAttributes</a></td>\n<td>Indicates whether to write attributes on a new line. <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Indent_\" data-linktype=\"relative-path\">Indent</a> should be set to <code>true</code> when using this property. The default is <code>false</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_OmitXmlDeclaration_\" data-linktype=\"relative-path\">OmitXmlDeclaration</a></td>\n<td>Indicates whether to write an XML declaration. The default is <code>false</code>.</td>\n</tr>\n</tbody>\n</table>\n<p> The <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Indent_\" data-linktype=\"relative-path\">Indent</a> and <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_IndentChars_\" data-linktype=\"relative-path\">IndentChars</a> properties control how insignificant white space is formatted. For example, to indent element nodes:  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter_v2#8\">Dim settings As New XmlWriterSettings()\nsettings.Indent = True\nsettings.IndentChars = vbTab\nDim writer As XmlWriter = XmlWriter.Create(&quot;books.xml&quot;, settings)\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter_v2#8\">        XmlWriterSettings settings = new XmlWriterSettings();\n        settings.Indent = true;\n        settings.IndentChars = &quot;\\t&quot;;\n        XmlWriter writer = XmlWriter.Create(&quot;books.xml&quot;, settings);\n</code></pre><p> Use the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineOnAttributes_\" data-linktype=\"relative-path\">NewLineOnAttributes</a> to write each attribute on a new line with one extra level of indentation:  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter_v2#9\">Dim settings As New XmlWriterSettings()\nsettings.Indent = True\nsettings.NewLineOnAttributes = True\nDim writer As XmlWriter = XmlWriter.Create(&quot;books.xml&quot;, settings)\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter_v2#9\">        XmlWriterSettings settings = new XmlWriterSettings();\n        settings.Indent = true;\n        settings.NewLineOnAttributes = true;\n        XmlWriter writer = XmlWriter.Create(&quot;books.xml&quot;, settings);\n</code></pre><p><a name=\"conformance\"></a>   </p>\n<h2 id=\"data-conformance\">Data conformance</h2>\n<p> An XML writer uses two properties from the <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> class to check for data conformance:  </p>\n<ul>\n<li><p>The <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_CheckCharacters_\" data-linktype=\"relative-path\">CheckCharacters</a> property instructs the XML writer to check characters and throw an <a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a> exception if any characters are outside the legal range, as defined by the W3C.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_ConformanceLevel_\" data-linktype=\"relative-path\">ConformanceLevel</a> property configures the XML writer to check that the stream being written complies with the rules for a well-formed XML 1.0 document or document fragment, as defined by the W3C. The three conformance levels are described in the following table. The default is <a class=\"xref\" href=\"system.xml.conformancelevel\" data-linktype=\"relative-path\">ConformanceLevel</a>. For details, see the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_ConformanceLevel_\" data-linktype=\"relative-path\">ConformanceLevel</a> property and the <a class=\"xref\" href=\"system.xml.conformancelevel\" data-linktype=\"relative-path\">System.Xml.ConformanceLevel</a> enumeration.  </p>\n<table>\n<thead>\n<tr>\n<th>Level</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.conformancelevel\" data-linktype=\"relative-path\">ConformanceLevel</a></td>\n<td>The XML output conforms to the rules for a well-formed XML 1.0 document and can be processed by any conforming processor.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.conformancelevel\" data-linktype=\"relative-path\">ConformanceLevel</a></td>\n<td>The XML output conforms to the rules for a well-formed XML 1.0 document fragment.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.conformancelevel\" data-linktype=\"relative-path\">ConformanceLevel</a></td>\n<td>The XML writer determines which level of conformation checking to apply (document or fragment) based on the incoming data.</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<p><a name=\"writing_elements\"></a>   </p>\n<h2 id=\"writing-elements\">Writing elements</h2>\n<p> You can use the following XmlWriter methods to write element nodes. For examples, see the methods listed.  </p>\n<table>\n<thead>\n<tr>\n<th>Use</th>\n<th>To</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteElementString_\" data-linktype=\"relative-path\">WriteElementString</a></td>\n<td>Write an entire element  node, including a string value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartElement_\" data-linktype=\"relative-path\">WriteStartElement</a></td>\n<td>To write an element value by using multiple method calls.  For example, you can call <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteValue_\" data-linktype=\"relative-path\">WriteValue</a> to write a typed value, <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteCharEntity_\" data-linktype=\"relative-path\">WriteCharEntity</a> to write a character entity, <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeString_\" data-linktype=\"relative-path\">WriteAttributeString</a> to write an attribute, or you can write a child element. This is a more sophisticated version of the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteElementString_\" data-linktype=\"relative-path\">WriteElementString</a> method.<br><br> To close the element, you call the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteEndElement_\" data-linktype=\"relative-path\">WriteEndElement</a> or <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteFullEndElement_\" data-linktype=\"relative-path\">WriteFullEndElement</a> method.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteNode_\" data-linktype=\"relative-path\">WriteNode</a></td>\n<td>To copy an element node found at the current position of an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> or <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> object. When called, it copies everything from the source object to the XmlWriter instance.</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"writing_attributes\"></a>   </p>\n<h2 id=\"writing-attributes\">Writing attributes</h2>\n<p> You can use the following XmlWriter methods to write attributes on element nodes. These methods can also be used to create namespace declarations on an element, as discussed in the next section.  </p>\n<table>\n<thead>\n<tr>\n<th>Use</th>\n<th>To</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeString_\" data-linktype=\"relative-path\">WriteAttributeString</a></td>\n<td>To write an entire attribute node, including a string value.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartAttribute_\" data-linktype=\"relative-path\">WriteStartAttribute</a></td>\n<td>To write the attribute value using multiple method calls. For example, you can call <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteValue_\" data-linktype=\"relative-path\">WriteValue</a> to write a typed value. This is a more sophisticated version of the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteElementString_\" data-linktype=\"relative-path\">WriteElementString</a> method.<br><br> To close the element, you call the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteEndAttribute_\" data-linktype=\"relative-path\">WriteEndAttribute</a> method.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributes_\" data-linktype=\"relative-path\">WriteAttributes</a></td>\n<td>To copy all the attributes found at the current position of an <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> object. The attributes that are written depend on the type of node the reader is currently positioned on:<br><br> -   For an attribute node, it writes the current attribute, and then the rest of the attributes until the element closing tag.<br>-   For an element node, it writes all attributes contained by the element.<br>-   For an XML declaration node, it writes all the attributes in the declaration.<br>-   For all other node types, the method throws an exception.</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"handling_ns\"></a>   </p>\n<h2 id=\"handling-namespaces\">Handling namespaces</h2>\n<p> Namespaces are used to qualify element and attribute names in an XML document. Namespace prefixes associate elements and attributes with namespaces, which are in turn associated with URI references. Namespaces create element and attribute name uniqueness in an XML document.  </p>\n<p> The XmlWriter maintains a namespace stack that corresponds to all the namespaces defined in the current namespace scope. When writing elements and attributes you can utilize namespaces in the following ways:  </p>\n<ul>\n<li><p>Declare namespaces manually by using the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeString_\" data-linktype=\"relative-path\">WriteAttributeString</a> method. This can be useful when you know how to best optimize the number of namespace declarations. For an example, see the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeString_System_String_System_String_System_String_System_String_\" data-linktype=\"relative-path\">WriteAttributeString(String,String,String,String)</a> method.  </p>\n</li>\n<li><p>Override the current namespace declaration with a new namespace. In the following code, the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeString_\" data-linktype=\"relative-path\">WriteAttributeString</a> method changes the namespace URI for the <code>&quot;x&quot;</code> prefix from <code>&quot;123&quot;</code> to <code>&quot;abc&quot;</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter_v2#18\">writer.WriteStartElement(&quot;x&quot;, &quot;root&quot;, &quot;123&quot;)\nwriter.WriteStartElement(&quot;item&quot;)\nwriter.WriteAttributeString(&quot;xmlns&quot;, &quot;x&quot;, Nothing, &quot;abc&quot;)\nwriter.WriteEndElement()\nwriter.WriteEndElement()\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter_v2#18\">        writer.WriteStartElement(&quot;x&quot;, &quot;root&quot;, &quot;123&quot;);\n        writer.WriteStartElement(&quot;item&quot;);\n        writer.WriteAttributeString(&quot;xmlns&quot;, &quot;x&quot;, null, &quot;abc&quot;);\n        writer.WriteEndElement();\n        writer.WriteEndElement();\n</code></pre><p> The code generates the following XML string:  </p>\n<pre><code>&lt;x:root xmlns:x=&quot;123&quot;&gt;  \n  &lt;item xmlns:x=&quot;abc&quot; /&gt;  \n&lt;/x:root&gt;\n</code></pre></li>\n<li><p>Specify a namespace prefix when writing attributes or elements. Many of the methods used to write element and attributes enable you to do this. For example, the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartElement_System_String_System_String_System_String_\" data-linktype=\"relative-path\">WriteStartElement(String,String,String)</a> method writes a start tag and associates it with a specified namespace and prefix.  </p>\n</li>\n</ul>\n<p><a name=\"writing_types\"></a>   </p>\n<h2 id=\"writing-typed-data\">Writing typed data</h2>\n<p> The <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteValue_\" data-linktype=\"relative-path\">WriteValue</a> method accepts a common language runtime (CLR) object, converts the input value to its string representation according to XML schema definition language (XSD) data type conversion rules, and writes it out by using the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteString_\" data-linktype=\"relative-path\">WriteString</a> method. This is easier than using the methods in the <a class=\"xref\" href=\"system.xml.xmlconvert\" data-linktype=\"relative-path\">XmlConvert</a> class to convert the typed data to a string value before writing it out.  </p>\n<p> When writing to text, the typed value is serialized to text by using the <a class=\"xref\" href=\"system.xml.xmlconvert\" data-linktype=\"relative-path\">XmlConvert</a> rules for that schema type.  </p>\n<p> For default XSD data types that correspond to CLR types, see the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteValue_\" data-linktype=\"relative-path\">WriteValue</a> method.  </p>\n<p> The XmlWriter can also be used to write to an XML data store. For example, the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> class can create an XmlWriter object to create nodes for an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> object. If the data store has schema information available to it, the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteValue_\" data-linktype=\"relative-path\">WriteValue</a> method throws an exception if you try to convert to a type that is not allowed.If the data store does not have schema information available to it, the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteValue_\" data-linktype=\"relative-path\">WriteValue</a> method treats all values as an <code>xsd:anySimpleType</code> type.  </p>\n<p><a name=\"close\"></a>   </p>\n<h2 id=\"closing-the-xml-writer\">Closing the XML writer</h2>\n<p> When you use XmlWriter methods to output XML, the elements and attributes are not written until you call the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_Close_\" data-linktype=\"relative-path\">Close</a> method. For example, if you are using XmlWriter to populate an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> object, you won&#39;t be able to see the written elements and attributes in the target document until you close the XmlWriter instance.  </p>\n<p><a name=\"async\"></a>   </p>\n<h2 id=\"asynchronous-programming\">Asynchronous programming</h2>\n<p> Most of the XmlWriter methods have asynchronous counterparts that have &quot;Async&quot; at the end of their method names. For example, the asynchronous equivalent of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeString_\" data-linktype=\"relative-path\">WriteAttributeString</a> is <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeStringAsync_\" data-linktype=\"relative-path\">WriteAttributeStringAsync</a>.  </p>\n<p> For the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteValue_\" data-linktype=\"relative-path\">WriteValue</a> method, which doesn&#39;t have an asynchronous counterpart, convert the return value to a string and use the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStringAsync_\" data-linktype=\"relative-path\">WriteStringAsync</a> method instead.  </p>\n<p><a name=\"security\"></a>   </p>\n<h2 id=\"security-considerations\">Security considerations</h2>\n<p> Consider the following when working with the XmlWriter class:  </p>\n<ul>\n<li><p>Exceptions thrown by the XmlWriter can disclose path information that you do not want bubbled up to the app. Your app must catch exceptions and process them appropriately.  </p>\n</li>\n<li><p>XmlWriter does not validate any data that is passed to the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteDocType_\" data-linktype=\"relative-path\">WriteDocType</a> or <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteRaw_\" data-linktype=\"relative-path\">WriteRaw</a> method. You should not pass arbitrary data to these methods.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter__ctor\" data-linktype=\"self-bookmark\">XmlWriter()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_Settings\" data-linktype=\"self-bookmark\">Settings</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object used to create this <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteState\" data-linktype=\"self-bookmark\">WriteState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, gets the state of the writer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_XmlLang\" data-linktype=\"self-bookmark\">XmlLang</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, gets the current <code>xml:lang</code> scope.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_XmlSpace\" data-linktype=\"self-bookmark\">XmlSpace</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, gets an <a class=\"xref\" href=\"system.xml.xmlspace\" data-linktype=\"relative-path\">XmlSpace</a> representing the current <code>xml:space</code> scope.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, closes this stream and the underlying stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_Create_System_IO_Stream_\" data-linktype=\"self-bookmark\">Create(Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the specified stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_Create_System_IO_TextWriter_\" data-linktype=\"self-bookmark\">Create(TextWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_Create_System_String_\" data-linktype=\"self-bookmark\">Create(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the specified filename.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_Create_System_Text_StringBuilder_\" data-linktype=\"self-bookmark\">Create(StringBuilder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the specified <a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_Create_System_Xml_XmlWriter_\" data-linktype=\"self-bookmark\">Create(XmlWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_Create_System_IO_Stream_System_Xml_XmlWriterSettings_\" data-linktype=\"self-bookmark\">Create(Stream,XmlWriterSettings)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the stream and <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_Create_System_IO_TextWriter_System_Xml_XmlWriterSettings_\" data-linktype=\"self-bookmark\">Create(TextWriter,XmlWriterSettings)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> and <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_Create_System_String_System_Xml_XmlWriterSettings_\" data-linktype=\"self-bookmark\">Create(String,XmlWriterSettings)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the filename and <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_Create_System_Text_StringBuilder_System_Xml_XmlWriterSettings_\" data-linktype=\"self-bookmark\">Create(StringBuilder,XmlWriterSettings)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the <a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a> and <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_Create_System_Xml_XmlWriter_System_Xml_XmlWriterSettings_\" data-linktype=\"self-bookmark\">Create(XmlWriter,XmlWriterSettings)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> and <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> objects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_Flush\" data-linktype=\"self-bookmark\">Flush()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_FlushAsync\" data-linktype=\"self-bookmark\">FlushAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_LookupPrefix_System_String_\" data-linktype=\"self-bookmark\">LookupPrefix(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, returns the closest prefix defined in the current namespace scope for the namespace URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteAttributes_System_Xml_XmlReader_System_Boolean_\" data-linktype=\"self-bookmark\">WriteAttributes(XmlReader,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes out all the attributes found at the current position in the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteAttributesAsync_System_Xml_XmlReader_System_Boolean_\" data-linktype=\"self-bookmark\">WriteAttributesAsync(XmlReader,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes out all the attributes found at the current position in the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteAttributeString_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteAttributeString(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes out the attribute with the specified local name and value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteAttributeString_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteAttributeString(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes an attribute with the specified local name, namespace URI, and value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteAttributeString_System_String_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteAttributeString(String,String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes out the attribute with the specified prefix, local name, namespace URI, and value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteAttributeStringAsync_System_String_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteAttributeStringAsync(String,String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes out the attribute with the specified prefix, local name, namespace URI, and value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteBase64_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">WriteBase64(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, encodes the specified binary bytes as Base64 and writes out the resulting text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteBase64Async_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">WriteBase64Async(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteBinHex_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">WriteBinHex(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, encodes the specified binary bytes as <code>BinHex</code> and writes out the resulting text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteBinHexAsync_System_Byte___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">WriteBinHexAsync(Byte[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously encodes the specified binary bytes as <code>BinHex</code> and writes out the resulting text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteCData_System_String_\" data-linktype=\"self-bookmark\">WriteCData(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteCDataAsync_System_String_\" data-linktype=\"self-bookmark\">WriteCDataAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteCharEntity_System_Char_\" data-linktype=\"self-bookmark\">WriteCharEntity(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, forces the generation of a character entity for the specified Unicode character value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteCharEntityAsync_System_Char_\" data-linktype=\"self-bookmark\">WriteCharEntityAsync(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously forces the generation of a character entity for the specified Unicode character value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteChars_System_Char___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">WriteChars(Char[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes text one buffer at a time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteCharsAsync_System_Char___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">WriteCharsAsync(Char[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes text one buffer at a time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteComment_System_String_\" data-linktype=\"self-bookmark\">WriteComment(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes out a comment <!--...--> containing the specified text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteCommentAsync_System_String_\" data-linktype=\"self-bookmark\">WriteCommentAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes out a comment <!--...--> containing the specified text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteDocType_System_String_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteDocType(String,String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes the DOCTYPE declaration with the specified name and optional attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteDocTypeAsync_System_String_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteDocTypeAsync(String,String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes the DOCTYPE declaration with the specified name and optional attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteElementString_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteElementString(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an element with the specified local name and value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteElementString_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteElementString(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an element with the specified local name, namespace URI, and value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteElementString_System_String_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteElementString(String,String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes an element with the specified prefix, local name, namespace URI, and value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteElementStringAsync_System_String_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteElementStringAsync(String,String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes an element with the specified prefix, local name, namespace URI, and value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteEndAttribute\" data-linktype=\"self-bookmark\">WriteEndAttribute()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, closes the previous <span class=\"xref\">stem.Xml.XmlWriter.WriteStartAttribute*</span> call.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteEndAttributeAsync\" data-linktype=\"self-bookmark\">WriteEndAttributeAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously closes the previous <span class=\"xref\">stem.Xml.XmlWriter.WriteStartAttribute*</span> call.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteEndDocument\" data-linktype=\"self-bookmark\">WriteEndDocument()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, closes any open elements or attributes and puts the writer back in the Start state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteEndDocumentAsync\" data-linktype=\"self-bookmark\">WriteEndDocumentAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously closes any open elements or attributes and puts the writer back in the Start state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteEndElement\" data-linktype=\"self-bookmark\">WriteEndElement()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, closes one element and pops the corresponding namespace scope.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteEndElementAsync\" data-linktype=\"self-bookmark\">WriteEndElementAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously closes one element and pops the corresponding namespace scope.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteEntityRef_System_String_\" data-linktype=\"self-bookmark\">WriteEntityRef(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes out an entity reference as <code>&amp;name;</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteEntityRefAsync_System_String_\" data-linktype=\"self-bookmark\">WriteEntityRefAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes out an entity reference as <code>&amp;name;</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteFullEndElement\" data-linktype=\"self-bookmark\">WriteFullEndElement()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, closes one element and pops the corresponding namespace scope.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteFullEndElementAsync\" data-linktype=\"self-bookmark\">WriteFullEndElementAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously closes one element and pops the corresponding namespace scope.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteName_System_String_\" data-linktype=\"self-bookmark\">WriteName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (<a href=\"http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name\" data-linktype=\"external\">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name</a>).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteNameAsync_System_String_\" data-linktype=\"self-bookmark\">WriteNameAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (<a href=\"http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name\" data-linktype=\"external\">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name</a>).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteNmToken_System_String_\" data-linktype=\"self-bookmark\">WriteNmToken(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (<a href=\"http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name\" data-linktype=\"external\">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name</a>).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteNmTokenAsync_System_String_\" data-linktype=\"self-bookmark\">WriteNmTokenAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (<a href=\"http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name\" data-linktype=\"external\">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name</a>).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteNode_System_Xml_XmlReader_System_Boolean_\" data-linktype=\"self-bookmark\">WriteNode(XmlReader,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, copies everything from the reader to the writer and moves the reader to the start of the next sibling.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteNode_System_Xml_XPath_XPathNavigator_System_Boolean_\" data-linktype=\"self-bookmark\">WriteNode(XPathNavigator,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies everything from the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> object to the writer. The position of the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> remains unchanged.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteNodeAsync_System_Xml_XmlReader_System_Boolean_\" data-linktype=\"self-bookmark\">WriteNodeAsync(XmlReader,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously copies everything from the reader to the writer and moves the reader to the start of the next sibling.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteNodeAsync_System_Xml_XPath_XPathNavigator_System_Boolean_\" data-linktype=\"self-bookmark\">WriteNodeAsync(XPathNavigator,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously copies everything from the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> object to the writer. The position of the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> remains unchanged.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteProcessingInstruction_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteProcessingInstruction(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteProcessingInstructionAsync_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteProcessingInstructionAsync(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteQualifiedName_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteQualifiedName(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteQualifiedNameAsync_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteQualifiedNameAsync(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteRaw_System_String_\" data-linktype=\"self-bookmark\">WriteRaw(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes raw markup manually from a string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteRaw_System_Char___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">WriteRaw(Char[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes raw markup manually from a character buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteRawAsync_System_String_\" data-linktype=\"self-bookmark\">WriteRawAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes raw markup manually from a string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteRawAsync_System_Char___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">WriteRawAsync(Char[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes raw markup manually from a character buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteStartAttribute_System_String_\" data-linktype=\"self-bookmark\">WriteStartAttribute(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the start of an attribute with the specified local name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteStartAttribute_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteStartAttribute(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the start of an attribute with the specified local name and namespace URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteStartAttribute_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteStartAttribute(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes the start of an attribute with the specified prefix, local name, and namespace URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteStartAttributeAsync_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteStartAttributeAsync(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes the start of an attribute with the specified prefix, local name, and namespace URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteStartDocument\" data-linktype=\"self-bookmark\">WriteStartDocument()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes the XML declaration with the version &quot;1.0&quot;.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteStartDocument_System_Boolean_\" data-linktype=\"self-bookmark\">WriteStartDocument(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes the XML declaration with the version &quot;1.0&quot; and the standalone attribute.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteStartDocumentAsync\" data-linktype=\"self-bookmark\">WriteStartDocumentAsync()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes the XML declaration with the version &quot;1.0&quot;.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteStartDocumentAsync_System_Boolean_\" data-linktype=\"self-bookmark\">WriteStartDocumentAsync(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes the XML declaration with the version &quot;1.0&quot; and the standalone attribute.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteStartElement_System_String_\" data-linktype=\"self-bookmark\">WriteStartElement(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes out a start tag with the specified local name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteStartElement_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteStartElement(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes the specified start tag and associates it with the given namespace.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteStartElement_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteStartElement(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteStartElementAsync_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">WriteStartElementAsync(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes the specified start tag and associates it with the given namespace and prefix.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteString_System_String_\" data-linktype=\"self-bookmark\">WriteString(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes the given text content.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteStringAsync_System_String_\" data-linktype=\"self-bookmark\">WriteStringAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes the given text content.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteSurrogateCharEntity_System_Char_System_Char_\" data-linktype=\"self-bookmark\">WriteSurrogateCharEntity(Char,Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, generates and writes the surrogate character entity for the surrogate character pair.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteSurrogateCharEntityAsync_System_Char_System_Char_\" data-linktype=\"self-bookmark\">WriteSurrogateCharEntityAsync(Char,Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously generates and writes the surrogate character entity for the surrogate character pair.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteValue_System_Boolean_\" data-linktype=\"self-bookmark\">WriteValue(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteValue_System_DateTime_\" data-linktype=\"self-bookmark\">WriteValue(DateTime)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteValue_System_DateTimeOffset_\" data-linktype=\"self-bookmark\">WriteValue(DateTimeOffset)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteValue_System_Decimal_\" data-linktype=\"self-bookmark\">WriteValue(Decimal)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteValue_System_Double_\" data-linktype=\"self-bookmark\">WriteValue(Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteValue_System_Int32_\" data-linktype=\"self-bookmark\">WriteValue(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteValue_System_Int64_\" data-linktype=\"self-bookmark\">WriteValue(Int64)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteValue_System_Object_\" data-linktype=\"self-bookmark\">WriteValue(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the object value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteValue_System_Single_\" data-linktype=\"self-bookmark\">WriteValue(Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a single-precision floating-point number.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteValue_System_String_\" data-linktype=\"self-bookmark\">WriteValue(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteWhitespace_System_String_\" data-linktype=\"self-bookmark\">WriteWhitespace(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, writes out the given white space.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlWriter_WriteWhitespaceAsync_System_String_\" data-linktype=\"self-bookmark\">WriteWhitespaceAsync(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Asynchronously writes out the given white space.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter__ctor\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlWriter()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected XmlWriter ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_Settings\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_Settings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Settings</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object used to create this <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Xml.XmlWriterSettings Settings { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object used to create this writer instance. If this writer was not created using the <span class=\"xref\">stem.Xml.XmlWriter.Create*</span> method, this property returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> class is used to specify the set of features to support on the created writer instance. The <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object returned by the Settings property cannot be modified. Any attempt to change individual settings results in an exception being thrown.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteState\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteState</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, gets the state of the writer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract System.Xml.WriteState WriteState { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.writestate\" data-linktype=\"relative-path\">WriteState</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.xml.writestate\" data-linktype=\"relative-path\">WriteState</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_XmlLang\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_XmlLang_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlLang</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, gets the current <code>xml:lang</code> scope.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string XmlLang { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The current <code>xml:lang</code> scope.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property allows one component to find out in what state another component has left the writer. For example, perhaps one component wants to tell another which language help text to generate. The language information is communicated by writing an <code>xml:lang</code> attribute.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_XmlSpace\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_XmlSpace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlSpace</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, gets an <a class=\"xref\" href=\"system.xml.xmlspace\" data-linktype=\"relative-path\">XmlSpace</a> representing the current <code>xml:space</code> scope.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Xml.XmlSpace XmlSpace { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlspace\" data-linktype=\"relative-path\">XmlSpace</a></div>\r\n                  </div>\r\n                  <p>An <code>XmlSpace</code> representing the current <code>xml:space</code> scope.  </p>\n <table><thead><tr><th> Value<br>\n </th><th> Meaning<br>\n </th></tr></thead><tbody><tr><td><code>None</code></td><td> This is the default if no <code>xml:space</code> scope exists.<br>\n </td></tr><tr><td><code>Default</code></td><td> The current scope is <code>xml:space</code>=&quot;default&quot;.<br>\n </td></tr><tr><td><code>Preserve</code></td><td> The current scope is <code>xml:space</code>=&quot;preserve&quot;.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This allows one component to find out what state another component has left the writer in.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_Close\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, closes this stream and the underlying stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any elements or attributes left open are automatically closed.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When you use the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> methods to output XML, the elements and attributes will not be written until you call the Close method. For example, if you are using the XmlWriter to populate an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>, until you close the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>, you will not be able to observe the written elements and attributes in the target document.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes an XML node.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter.Close#1\">Option Explicit\nOption Strict\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    \n  Public Shared Sub Main()\n\n     &#39; Create a writer to write XML to the console.\n     Dim settings As XmlWriterSettings = new XmlWriterSettings()\n     settings.Indent = true\n     settings.OmitXmlDeclaration = true\n     Dim writer As XmlWriter = XmlWriter.Create(Console.Out, settings)\n\n     &#39; Write the book element.\n     writer.WriteStartElement(&quot;book&quot;)\n        \n     &#39; Write the title element.\n     writer.WriteStartElement(&quot;title&quot;)\n     writer.WriteString(&quot;Pride And Prejudice&quot;)\n     writer.WriteEndElement()\n        \n     &#39; Write the close tag for the root element.\n     writer.WriteEndElement()\n        \n     &#39; Write the XML and close the writer.\n     writer.Close()\n\n  End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlWriter.Close#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   \n   // Create a writer to write XML to the console.\n   XmlWriterSettings^ settings = gcnew XmlWriterSettings;\n   settings-&gt;Indent = true;\n   settings-&gt;OmitXmlDeclaration = true;\n   XmlWriter^ writer = XmlWriter::Create( Console::Out, settings );\n   \n   // Write the book element.\n   writer-&gt;WriteStartElement( L&quot;book&quot; );\n   \n   // Write the title element.\n   writer-&gt;WriteStartElement( L&quot;title&quot; );\n   writer-&gt;WriteString( L&quot;Pride And Prejudice&quot; );\n   writer-&gt;WriteEndElement();\n   \n   // Write the close tag for the root element.\n   writer-&gt;WriteEndElement();\n   \n   // Write the XML and close the writer.\n   writer-&gt;Close();\n   return 1;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter.Close#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample {\n  \n  public static void Main() {\n  \n     // Create a writer to write XML to the console.\n     XmlWriterSettings settings = new XmlWriterSettings();\n     settings.Indent = true;\n     settings.OmitXmlDeclaration = true;\n     XmlWriter writer = XmlWriter.Create(Console.Out, settings);\n\n     // Write the book element.\n     writer.WriteStartElement(&quot;book&quot;);\n\n     // Write the title element.\n     writer.WriteStartElement(&quot;title&quot;);\n     writer.WriteString(&quot;Pride And Prejudice&quot;);\n     writer.WriteEndElement();\n\n     // Write the close tag for the root element.\n     writer.WriteEndElement();\n             \n     // Write the XML and close the writer.\n     writer.Close();  \n\n  }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_Create_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the specified stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.XmlWriter Create (System.IO.Stream output);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>output</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream to which you want to write. The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> writes XML 1.0 text syntax and appends it to the specified stream.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>stream</code> value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you use this overload, an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object with the following default settings is used to create the XML writer:  </p>\n<table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_CheckCharacters_\" data-linktype=\"relative-path\">CheckCharacters</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_CloseOutput_\" data-linktype=\"relative-path\">CloseOutput</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_ConformanceLevel_\" data-linktype=\"relative-path\">ConformanceLevel</a></td>\n<td><a class=\"xref\" href=\"system.xml.conformancelevel\" data-linktype=\"relative-path\">System.Xml.ConformanceLevel</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Encoding_\" data-linktype=\"relative-path\">Encoding</a></td>\n<td><a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF8\" data-linktype=\"relative-path\">System.Text.Encoding.UTF8</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Indent_\" data-linktype=\"relative-path\">Indent</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_IndentChars_\" data-linktype=\"relative-path\">IndentChars</a></td>\n<td>Two spaces</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NamespaceHandling_\" data-linktype=\"relative-path\">NamespaceHandling</a></td>\n<td><a class=\"xref\" href=\"system.xml.namespacehandling\" data-linktype=\"relative-path\">NamespaceHandling</a> (no removal)</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineChars_\" data-linktype=\"relative-path\">NewLineChars</a></td>\n<td><code>\\r\\n</code> (carriage return, new line)</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineHandling_\" data-linktype=\"relative-path\">NewLineHandling</a></td>\n<td><a class=\"xref\" href=\"system.xml.newlinehandling\" data-linktype=\"relative-path\">System.Xml.NewLineHandling</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineOnAttributes_\" data-linktype=\"relative-path\">NewLineOnAttributes</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_OmitXmlDeclaration_\" data-linktype=\"relative-path\">OmitXmlDeclaration</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_OutputMethod_\" data-linktype=\"relative-path\">OutputMethod</a></td>\n<td><a class=\"xref\" href=\"system.xml.xmloutputmethod\" data-linktype=\"relative-path\">System.Xml.XmlOutputMethod</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_WriteEndDocumentOnClose_\" data-linktype=\"relative-path\">WriteEndDocumentOnClose</a></td>\n<td><code>true</code></td>\n</tr>\n</tbody>\n</table>\n<p> If you want to specify the features to support on the created writer, use an overload that takes an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object as one of its arguments, and pass in an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object with your custom settings.  </p>\n<p> Also, XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM. To omit the BOM, create a new <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object and set the Encoding property to be a new <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a> object with the Boolean value in the constructor set to false.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes an XML fragment to a memory stream. (It uses the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_Create_System_IO_Stream_System_Xml_XmlWriterSettings_\" data-linktype=\"relative-path\">Create(Stream,XmlWriterSettings)</a> overload, which also configures the settings on the new XML writer instance.)  </p>\n<pre><code class=\"lang-cs\" name=\"XmlWriterSettings.CloseOutput#1\">XmlWriterSettings settings = new XmlWriterSettings();\nsettings.OmitXmlDeclaration = true;\nsettings.ConformanceLevel = ConformanceLevel.Fragment;\nsettings.CloseOutput = false;\n\n// Create the XmlWriter object and write some content.\nMemoryStream strm = new MemoryStream();\nXmlWriter writer = XmlWriter.Create(strm, settings);\nwriter.WriteElementString(&quot;orderID&quot;, &quot;1-456-ab&quot;);\nwriter.WriteElementString(&quot;orderID&quot;, &quot;2-36-00a&quot;);\nwriter.Flush();\nwriter.Close();\n\n// Do additonal processing on the stream.\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlWriterSettings.CloseOutput#1\">Dim settings As XmlWriterSettings = New XmlWriterSettings()\nsettings.OmitXmlDeclaration = true\nsettings.ConformanceLevel = ConformanceLevel.Fragment\nsettings.CloseOutput = false\n\n&#39; Create the XmlWriter object and write some content.\nDim strm as MemoryStream = new MemoryStream()\nDim writer As XmlWriter = XmlWriter.Create(strm, settings)\nwriter.WriteElementString(&quot;orderID&quot;, &quot;1-456-ab&quot;)\nwriter.WriteElementString(&quot;orderID&quot;, &quot;2-36-00a&quot;)\nwriter.Flush()\nwriter.Close()\n\n&#39; Do additonal processing on the stream.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_Create_System_IO_TextWriter_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(TextWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.XmlWriter Create (System.IO.TextWriter output);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>output</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to which you want to write. The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> writes XML 1.0 text syntax and appends it to the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>text</code> value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you use this overload, an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object with default settings is used to create the XML writer.  </p>\n<table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_CheckCharacters_\" data-linktype=\"relative-path\">CheckCharacters</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_CloseOutput_\" data-linktype=\"relative-path\">CloseOutput</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_ConformanceLevel_\" data-linktype=\"relative-path\">ConformanceLevel</a></td>\n<td><a class=\"xref\" href=\"system.xml.conformancelevel\" data-linktype=\"relative-path\">System.Xml.ConformanceLevel</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Encoding_\" data-linktype=\"relative-path\">Encoding</a></td>\n<td><a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF8\" data-linktype=\"relative-path\">System.Text.Encoding.UTF8</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Indent_\" data-linktype=\"relative-path\">Indent</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_IndentChars_\" data-linktype=\"relative-path\">IndentChars</a></td>\n<td>Two spaces</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NamespaceHandling_\" data-linktype=\"relative-path\">NamespaceHandling</a></td>\n<td><a class=\"xref\" href=\"system.xml.namespacehandling\" data-linktype=\"relative-path\">NamespaceHandling</a> (no removal)</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineChars_\" data-linktype=\"relative-path\">NewLineChars</a></td>\n<td><code>\\r\\n</code> (carriage return, new line)</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineHandling_\" data-linktype=\"relative-path\">NewLineHandling</a></td>\n<td><a class=\"xref\" href=\"system.xml.newlinehandling\" data-linktype=\"relative-path\">System.Xml.NewLineHandling</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineOnAttributes_\" data-linktype=\"relative-path\">NewLineOnAttributes</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_OmitXmlDeclaration_\" data-linktype=\"relative-path\">OmitXmlDeclaration</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_OutputMethod_\" data-linktype=\"relative-path\">OutputMethod</a></td>\n<td><a class=\"xref\" href=\"system.xml.xmloutputmethod\" data-linktype=\"relative-path\">System.Xml.XmlOutputMethod</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_WriteEndDocumentOnClose_\" data-linktype=\"relative-path\">WriteEndDocumentOnClose</a></td>\n<td><code>true</code></td>\n</tr>\n</tbody>\n</table>\n<p> If you want to specify the features to support on the created writer, use an overload that takes an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object as one of its arguments, and pass in an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object with your custom settings.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a writer that outputs to the console.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter_v2#3\">Using writer As XmlWriter = XmlWriter.Create(Console.Out)\n  writer.WriteStartElement(&quot;book&quot;)\n  writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;)\n  writer.WriteEndElement()\n  writer.Flush()\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter_v2#3\">        using (XmlWriter writer = XmlWriter.Create(Console.Out))\n        {\n            writer.WriteStartElement(&quot;book&quot;);\n            writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;);\n            writer.WriteEndElement();\n            writer.Flush();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_Create_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the specified filename.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.XmlWriter Create (string outputFileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>outputFileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file to which you want to write. The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> creates a file at the specified path and writes to it in XML 1.0 text syntax. The <code>outputFileName</code> must be a file system path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>url</code> value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you use this overload, an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object with default settings is used to create the XML writer.  </p>\n<table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_CheckCharacters_\" data-linktype=\"relative-path\">CheckCharacters</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_CloseOutput_\" data-linktype=\"relative-path\">CloseOutput</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_ConformanceLevel_\" data-linktype=\"relative-path\">ConformanceLevel</a></td>\n<td><a class=\"xref\" href=\"system.xml.conformancelevel\" data-linktype=\"relative-path\">System.Xml.ConformanceLevel</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Encoding_\" data-linktype=\"relative-path\">Encoding</a></td>\n<td><a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF8\" data-linktype=\"relative-path\">System.Text.Encoding.UTF8</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Indent_\" data-linktype=\"relative-path\">Indent</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_IndentChars_\" data-linktype=\"relative-path\">IndentChars</a></td>\n<td>Two spaces</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NamespaceHandling_\" data-linktype=\"relative-path\">NamespaceHandling</a></td>\n<td><a class=\"xref\" href=\"system.xml.namespacehandling\" data-linktype=\"relative-path\">NamespaceHandling</a> (no removal)</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineChars_\" data-linktype=\"relative-path\">NewLineChars</a></td>\n<td><code>\\r\\n</code> (carriage return, new line)</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineHandling_\" data-linktype=\"relative-path\">NewLineHandling</a></td>\n<td><a class=\"xref\" href=\"system.xml.newlinehandling\" data-linktype=\"relative-path\">System.Xml.NewLineHandling</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineOnAttributes_\" data-linktype=\"relative-path\">NewLineOnAttributes</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_OmitXmlDeclaration_\" data-linktype=\"relative-path\">OmitXmlDeclaration</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_OutputMethod_\" data-linktype=\"relative-path\">OutputMethod</a></td>\n<td><a class=\"xref\" href=\"system.xml.xmloutputmethod\" data-linktype=\"relative-path\">System.Xml.XmlOutputMethod</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_WriteEndDocumentOnClose_\" data-linktype=\"relative-path\">WriteEndDocumentOnClose</a></td>\n<td><code>true</code></td>\n</tr>\n</tbody>\n</table>\n<p> If you want to specify the features to support on the created XML writer, use an overload that takes an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object as one of its arguments, and pass in a <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object with your custom settings.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object and writes a book node.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter_v2#2\">Using writer As XmlWriter = XmlWriter.Create(&quot;output.xml&quot;)\n  writer.WriteStartElement(&quot;book&quot;)\n  writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;)\n  writer.WriteEndElement()\n  writer.Flush()\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter_v2#2\">        using (XmlWriter writer = XmlWriter.Create(&quot;output.xml&quot;))\n        {\n            writer.WriteStartElement(&quot;book&quot;);\n            writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;);\n            writer.WriteEndElement();\n            writer.Flush();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_Create_System_Text_StringBuilder_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(StringBuilder)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the specified <a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.XmlWriter Create (System.Text.StringBuilder output);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>output</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a> to which to write to. Content written by the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> is appended to the <a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>builder</code> value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you use this overload, an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object with default settings is used to create the XML writer.  </p>\n<table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_CheckCharacters_\" data-linktype=\"relative-path\">CheckCharacters</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_CloseOutput_\" data-linktype=\"relative-path\">CloseOutput</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_ConformanceLevel_\" data-linktype=\"relative-path\">ConformanceLevel</a></td>\n<td><a class=\"xref\" href=\"system.xml.conformancelevel\" data-linktype=\"relative-path\">System.Xml.ConformanceLevel</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Encoding_\" data-linktype=\"relative-path\">Encoding</a></td>\n<td><a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF8\" data-linktype=\"relative-path\">System.Text.Encoding.UTF8</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Indent_\" data-linktype=\"relative-path\">Indent</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_IndentChars_\" data-linktype=\"relative-path\">IndentChars</a></td>\n<td>Two spaces</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NamespaceHandling_\" data-linktype=\"relative-path\">NamespaceHandling</a></td>\n<td><a class=\"xref\" href=\"system.xml.namespacehandling\" data-linktype=\"relative-path\">NamespaceHandling</a> (no removal)</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineChars_\" data-linktype=\"relative-path\">NewLineChars</a></td>\n<td><code>\\r\\n</code> (carriage return, new line)</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineHandling_\" data-linktype=\"relative-path\">NewLineHandling</a></td>\n<td><a class=\"xref\" href=\"system.xml.newlinehandling\" data-linktype=\"relative-path\">System.Xml.NewLineHandling</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineOnAttributes_\" data-linktype=\"relative-path\">NewLineOnAttributes</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_OmitXmlDeclaration_\" data-linktype=\"relative-path\">OmitXmlDeclaration</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_OutputMethod_\" data-linktype=\"relative-path\">OutputMethod</a></td>\n<td><a class=\"xref\" href=\"system.xml.xmloutputmethod\" data-linktype=\"relative-path\">System.Xml.XmlOutputMethod</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_WriteEndDocumentOnClose_\" data-linktype=\"relative-path\">WriteEndDocumentOnClose</a></td>\n<td><code>true</code></td>\n</tr>\n</tbody>\n</table>\n<p> If you want to specify the features to support on the created XML writer, use an overload that takes an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object as one of its arguments, and pass in a <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object with your custom settings.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_Create_System_Xml_XmlWriter_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(XmlWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>output</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object that you want to use as the underlying writer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object that is wrapped around the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>writer</code> value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method allows you add features to an underlying <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object. The underlying <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object can be an object created by the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_Create_\" data-linktype=\"relative-path\">Create</a> method, or an object created using the <a class=\"xref\" href=\"system.xml.xmltextwriter\" data-linktype=\"relative-path\">XmlTextWriter</a> implementation.  </p>\n<p> When you use this overload, an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object with default settings is used to create the XML writer.  </p>\n<table>\n<thead>\n<tr>\n<th>Setting</th>\n<th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_CheckCharacters_\" data-linktype=\"relative-path\">CheckCharacters</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_CloseOutput_\" data-linktype=\"relative-path\">CloseOutput</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_ConformanceLevel_\" data-linktype=\"relative-path\">ConformanceLevel</a></td>\n<td><a class=\"xref\" href=\"system.xml.conformancelevel\" data-linktype=\"relative-path\">System.Xml.ConformanceLevel</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Encoding_\" data-linktype=\"relative-path\">Encoding</a></td>\n<td><a class=\"xref\" href=\"system.text.encoding#System_Text_Encoding_UTF8\" data-linktype=\"relative-path\">System.Text.Encoding.UTF8</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Indent_\" data-linktype=\"relative-path\">Indent</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_IndentChars_\" data-linktype=\"relative-path\">IndentChars</a></td>\n<td>Two spaces</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NamespaceHandling_\" data-linktype=\"relative-path\">NamespaceHandling</a></td>\n<td><a class=\"xref\" href=\"system.xml.namespacehandling\" data-linktype=\"relative-path\">NamespaceHandling</a> (no removal)</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineChars_\" data-linktype=\"relative-path\">NewLineChars</a></td>\n<td><code>\\r\\n</code> (carriage return, new line)</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineHandling_\" data-linktype=\"relative-path\">NewLineHandling</a></td>\n<td><a class=\"xref\" href=\"system.xml.newlinehandling\" data-linktype=\"relative-path\">System.Xml.NewLineHandling</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_NewLineOnAttributes_\" data-linktype=\"relative-path\">NewLineOnAttributes</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_OmitXmlDeclaration_\" data-linktype=\"relative-path\">OmitXmlDeclaration</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_OutputMethod_\" data-linktype=\"relative-path\">OutputMethod</a></td>\n<td><a class=\"xref\" href=\"system.xml.xmloutputmethod\" data-linktype=\"relative-path\">System.Xml.XmlOutputMethod</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_WriteEndDocumentOnClose_\" data-linktype=\"relative-path\">WriteEndDocumentOnClose</a></td>\n<td><code>true</code></td>\n</tr>\n</tbody>\n</table>\n<p> If you want to specify the features to support on the created XML writer, use an overload that takes an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object as one of its arguments, and pass in a <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object with your custom settings.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_Create_System_IO_Stream_System_Xml_XmlWriterSettings_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(Stream,XmlWriterSettings)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the stream and <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.XmlWriter Create (System.IO.Stream output, System.Xml.XmlWriterSettings settings);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>output</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The stream to which you want to write. The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> writes XML 1.0 text syntax and appends it to the specified stream.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>settings</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object used to configure the new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance. If this is <code>null</code>, a <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> with default settings is used.  </p>\n<p> If the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> is being used with the <span class=\"xref\">stem.Xml.Xsl.XslCompiledTransform.Transform*</span> method, you should use the <span class=\"xref\">stem.Xml.Xsl.XslCompiledTransform.OutputSettings*</span> property to obtain an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object with the correct settings. This ensures that the created <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object has the correct output settings.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>stream</code> value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>XmlWriter always writes a Byte Order Mark (BOM) to the underlying data stream; however, some streams must not have a BOM. To omit the BOM, create a new <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object and set the Encoding property to be a new <a class=\"xref\" href=\"system.text.utf8encoding\" data-linktype=\"relative-path\">UTF8Encoding</a> object with the Boolean value in the constructor set to false.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes an XML fragment to a memory stream.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlWriterSettings.CloseOutput#1\">XmlWriterSettings settings = new XmlWriterSettings();\nsettings.OmitXmlDeclaration = true;\nsettings.ConformanceLevel = ConformanceLevel.Fragment;\nsettings.CloseOutput = false;\n\n// Create the XmlWriter object and write some content.\nMemoryStream strm = new MemoryStream();\nXmlWriter writer = XmlWriter.Create(strm, settings);\nwriter.WriteElementString(&quot;orderID&quot;, &quot;1-456-ab&quot;);\nwriter.WriteElementString(&quot;orderID&quot;, &quot;2-36-00a&quot;);\nwriter.Flush();\nwriter.Close();\n\n// Do additonal processing on the stream.\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlWriterSettings.CloseOutput#1\">Dim settings As XmlWriterSettings = New XmlWriterSettings()\nsettings.OmitXmlDeclaration = true\nsettings.ConformanceLevel = ConformanceLevel.Fragment\nsettings.CloseOutput = false\n\n&#39; Create the XmlWriter object and write some content.\nDim strm as MemoryStream = new MemoryStream()\nDim writer As XmlWriter = XmlWriter.Create(strm, settings)\nwriter.WriteElementString(&quot;orderID&quot;, &quot;1-456-ab&quot;)\nwriter.WriteElementString(&quot;orderID&quot;, &quot;2-36-00a&quot;)\nwriter.Flush()\nwriter.Close()\n\n&#39; Do additonal processing on the stream.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_Create_System_IO_TextWriter_System_Xml_XmlWriterSettings_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(TextWriter,XmlWriterSettings)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> and <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.XmlWriter Create (System.IO.TextWriter output, System.Xml.XmlWriterSettings settings);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>output</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a> to which you want to write. The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> writes XML 1.0 text syntax and appends it to the specified <a class=\"xref\" href=\"system.io.textwriter\" data-linktype=\"relative-path\">TextWriter</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>settings</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object used to configure the new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance. If this is <code>null</code>, a <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> with default settings is used.  </p>\n<p> If the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> is being used with the <span class=\"xref\">stem.Xml.Xsl.XslCompiledTransform.Transform*</span> method, you should use the <span class=\"xref\">stem.Xml.Xsl.XslCompiledTransform.OutputSettings*</span> property to obtain an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object with the correct settings. This ensures that the created <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object has the correct output settings.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>text</code> value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes out an XML string.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter_v2#4\">Dim settings As New XmlWriterSettings()\nsettings.OmitXmlDeclaration = True\nDim sw As New StringWriter()\n        \nUsing writer As XmlWriter = XmlWriter.Create(sw, settings)\n  writer.WriteStartElement(&quot;book&quot;)\n  writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;)\n  writer.WriteEndElement()\n  writer.Flush()\n            \n  Dim output As String = sw.ToString()\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter_v2#4\">        XmlWriterSettings settings = new XmlWriterSettings();\n        settings.OmitXmlDeclaration = true;\n        StringWriter sw = new StringWriter();\n\n        using (XmlWriter writer = XmlWriter.Create(sw, settings))\n        {\n            writer.WriteStartElement(&quot;book&quot;);\n            writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;);\n            writer.WriteEndElement();\n            writer.Flush();\n\n            String output = sw.ToString();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_Create_System_String_System_Xml_XmlWriterSettings_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(String,XmlWriterSettings)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the filename and <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.XmlWriter Create (string outputFileName, System.Xml.XmlWriterSettings settings);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>outputFileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The file to which you want to write. The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> creates a file at the specified path and writes to it in XML 1.0 text syntax. The <code>outputFileName</code> must be a file system path.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>settings</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object used to configure the new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance. If this is <code>null</code>, a <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> with default settings is used.  </p>\n<p> If the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> is being used with the <span class=\"xref\">stem.Xml.Xsl.XslCompiledTransform.Transform*</span> method, you should use the <span class=\"xref\">stem.Xml.Xsl.XslCompiledTransform.OutputSettings*</span> property to obtain an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object with the correct settings. This ensures that the created <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object has the correct output settings.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>url</code> value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object with the defined settings.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriterSettings.Indent#1\">Imports System\nImports System.IO\nImports System.Xml\nImports System.Text\nImports Microsoft.VisualBasic\n\nPublic Class Sample \n\n  Public Shared Sub Main() \n  \n    Dim writer As XmlWriter = Nothing\n\n    Try \n\n       &#39; Create an XmlWriterSettings object with the correct options. \n       Dim settings As XmlWriterSettings = New XmlWriterSettings()\n       settings.Indent = true\n       settings.IndentChars = (ControlChars.Tab)\n       settings.OmitXmlDeclaration = true\n\n       &#39; Create the XmlWriter object and write some content.\n       writer = XmlWriter.Create(&quot;data.xml&quot;, settings)\n       writer.WriteStartElement(&quot;book&quot;)\n       writer.WriteElementString(&quot;item&quot;, &quot;tesing&quot;)\n       writer.WriteEndElement()\n\t\n       writer.Flush()\n\n      Finally\n         If Not (writer Is Nothing) Then\n            writer.Close()\n         End If\n      End Try\n\n   End Sub \nEnd Class \n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriterSettings.Indent#1\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Text;\n\npublic class Sample {\n\n  public static void Main() {\n  \n    XmlWriter writer = null;\n\n    try {\n\n       // Create an XmlWriterSettings object with the correct options. \n       XmlWriterSettings settings = new XmlWriterSettings();\n       settings.Indent = true;\n       settings.IndentChars = (&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot;);\n       settings.OmitXmlDeclaration = true;\n\n       // Create the XmlWriter object and write some content.\n       writer = XmlWriter.Create(&quot;data.xml&quot;, settings);\n       writer.WriteStartElement(&quot;book&quot;);\n       writer.WriteElementString(&quot;item&quot;, &quot;tesing&quot;);\n       writer.WriteEndElement();\n\t\n       writer.Flush();\n\n     } \n     finally  {\n        if (writer != null)\n          writer.Close();\n     }\n  } \n} \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_Create_System_Text_StringBuilder_System_Xml_XmlWriterSettings_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(StringBuilder,XmlWriterSettings)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the <a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a> and <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.XmlWriter Create (System.Text.StringBuilder output, System.Xml.XmlWriterSettings settings);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>output</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a> to which to write to. Content written by the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> is appended to the <a class=\"xref\" href=\"system.text.stringbuilder\" data-linktype=\"relative-path\">StringBuilder</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>settings</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object used to configure the new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance. If this is <code>null</code>, a <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> with default settings is used.  </p>\n<p> If the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> is being used with the <span class=\"xref\">stem.Xml.Xsl.XslCompiledTransform.Transform*</span> method, you should use the <span class=\"xref\">stem.Xml.Xsl.XslCompiledTransform.OutputSettings*</span> property to obtain an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object with the correct settings. This ensures that the created <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object has the correct output settings.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>builder</code> value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_Create_System_Xml_XmlWriter_System_Xml_XmlWriterSettings_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_Create_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Create(XmlWriter,XmlWriterSettings)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance using the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> and <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> objects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Xml.XmlWriter Create (System.Xml.XmlWriter output, System.Xml.XmlWriterSettings settings);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>output</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object that you want to use as the underlying writer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>settings</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object used to configure the new <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance. If this is <code>null</code>, a <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> with default settings is used.  </p>\n<p> If the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> is being used with the <span class=\"xref\">stem.Xml.Xsl.XslCompiledTransform.Transform*</span> method, you should use the <span class=\"xref\">stem.Xml.Xsl.XslCompiledTransform.OutputSettings*</span> property to obtain an <a class=\"xref\" href=\"system.xml.xmlwritersettings\" data-linktype=\"relative-path\">XmlWriterSettings</a> object with the correct settings. This ensures that the created <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object has the correct output settings.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object that is wrapped around the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>writer</code> value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method allows you add additional features to an underlying <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object. The underlying <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> object can be an object created by the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_Create_\" data-linktype=\"relative-path\">Create</a> method, or an object created using the <a class=\"xref\" href=\"system.xml.xmltextwriter\" data-linktype=\"relative-path\">XmlTextWriter</a> implementation.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_Dispose\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by the current instance of the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_Flush\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_Flush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flush()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void Flush ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is called instead of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_Close_\" data-linktype=\"relative-path\">Close</a> when you want to write more to the underlying stream without losing what is still in the buffer.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_FlushAsync_\" data-linktype=\"relative-path\">FlushAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes two XML fragments.  </p>\n<pre><code class=\"lang-cpp\" name=\"XmlWriter.Flush#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nvoid main()\n{\n   \n   // Create an XmlWriter to write XML fragments.\n   XmlWriterSettings^ settings = gcnew XmlWriterSettings;\n   settings-&gt;ConformanceLevel = ConformanceLevel::Fragment;\n   settings-&gt;Indent = true;\n   XmlWriter^ writer = XmlWriter::Create( Console::Out, settings );\n   \n   // Write an XML fragment.\n   writer-&gt;WriteStartElement( L&quot;book&quot; );\n   writer-&gt;WriteElementString( L&quot;title&quot;, L&quot;Pride And Prejudice&quot; );\n   writer-&gt;WriteEndElement();\n   writer-&gt;Flush();\n   \n   // Write another XML fragment.\n   writer-&gt;WriteStartElement( L&quot;cd&quot; );\n   writer-&gt;WriteElementString( L&quot;title&quot;, L&quot;Americana&quot; );\n   writer-&gt;WriteEndElement();\n   writer-&gt;Flush();\n   \n   // Close the writer.\n   writer-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlWriter.Flush#1\">Imports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n\n  Public Shared Sub Main()\n\n     &#39; Create an XmlWriter to write XML fragments.\n     Dim settings As XmlWriterSettings = new XmlWriterSettings()\n     settings.ConformanceLevel = ConformanceLevel.Fragment\n     settings.Indent = true\n     Dim writer As XmlWriter = XmlWriter.Create(Console.Out, settings)\n\t\n     &#39; Write an XML fragment.\n     writer.WriteStartElement(&quot;book&quot;)\n     writer.WriteElementString(&quot;title&quot;, &quot;Pride And Prejudice&quot;)\n     writer.WriteEndElement()\n     writer.Flush()\n\n     &#39; Write another XML fragment.\n     writer.WriteStartElement(&quot;cd&quot;)\n     writer.WriteElementString(&quot;title&quot;, &quot;Americana&quot;)\n     writer.WriteEndElement()\n     writer.Flush()  \n\n     &#39;Close the writer.\n     writer.Close()\n\n  End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter.Flush#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample {\n\n  public static void Main() {\n \n     // Create an XmlWriter to write XML fragments.\n     XmlWriterSettings settings = new XmlWriterSettings();\n     settings.ConformanceLevel = ConformanceLevel.Fragment;\n     settings.Indent = true;\n     XmlWriter writer = XmlWriter.Create(Console.Out, settings);\n     \n     // Write an XML fragment.\n     writer.WriteStartElement(&quot;book&quot;);\n     writer.WriteElementString(&quot;title&quot;, &quot;Pride And Prejudice&quot;);\n     writer.WriteEndElement();\n     writer.Flush();\n\n     // Write another XML fragment.\n     writer.WriteStartElement(&quot;cd&quot;);\n     writer.WriteElementString(&quot;title&quot;, &quot;Americana&quot;);\n     writer.WriteEndElement();\n     writer.Flush();  \n\n     // Close the writer.\n     writer.Close();\n  }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_FlushAsync\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_FlushAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FlushAsync()</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task FlushAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>Flush</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_Flush_\" data-linktype=\"relative-path\">Flush</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_LookupPrefix_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_LookupPrefix_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LookupPrefix(String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, returns the closest prefix defined in the current namespace scope for the namespace URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract string LookupPrefix (string ns);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI whose prefix you want to find.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The matching prefix or <code>null</code> if no matching namespace URI is found in the current scope.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>ns</code> is either <code>null</code> or <code>String.Empty</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes out a book.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlWriter.WriteElementString#1\">using System;\nusing System.IO;\nusing System.Xml;\n \n public class Sample\n {\n   private const string m_Document = &quot;sampledata.xml&quot;;\n \n   public static void Main() {\n   \n      XmlWriter writer = null;\n\n      try {\n     \n        XmlWriterSettings settings = new XmlWriterSettings();\n        settings.Indent = true;\n        writer = XmlWriter.Create (m_Document, settings);\n           \n        writer.WriteComment(&quot;sample XML fragment&quot;);\n     \n        // Write an element (this one is the root).\n        writer.WriteStartElement(&quot;book&quot;);\n \n        // Write the namespace declaration.\n        writer.WriteAttributeString(&quot;xmlns&quot;, &quot;bk&quot;, null, &quot;urn:samples&quot;);\n    \n        // Write the genre attribute.\n        writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;);\n         \n        // Write the title.\n        writer.WriteStartElement(&quot;title&quot;);\n        writer.WriteString(&quot;The Handmaid&#39;s Tale&quot;);\n        writer.WriteEndElement();\n               \n        // Write the price.\n        writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;);\n      \n        // Lookup the prefix and write the ISBN element.\n        string prefix = writer.LookupPrefix(&quot;urn:samples&quot;);\n        writer.WriteStartElement(prefix, &quot;ISBN&quot;, &quot;urn:samples&quot;);\n        writer.WriteString(&quot;1-861003-78&quot;);\n        writer.WriteEndElement();\n\n        // Write the style element (shows a different way to handle prefixes).\n        writer.WriteElementString(&quot;style&quot;, &quot;urn:samples&quot;, &quot;hardcover&quot;);\n \n        // Write the close tag for the root element.\n        writer.WriteEndElement();\n               \n        // Write the XML to file and close the writer.\n        writer.Flush();\n        writer.Close();\n      }\n\n      finally {\n        if (writer != null)\n           writer.Close();\n     } \n   }\n \n }\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlWriter.WriteElementString#1\">Option Strict\nOption Explicit\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    Private Shared m_Document As String = &quot;sampledata.xml&quot;\n    \n    Public Shared Sub Main()\n        Dim writer As XmlWriter = Nothing\n        \n      Try\n\n        Dim settings As XmlWriterSettings = new XmlWriterSettings()\n        settings.Indent = true\n        writer = XmlWriter.Create (m_Document, settings)\n            \n        writer.WriteComment(&quot;sample XML fragment&quot;)\n            \n        &#39; Write an element (this one is the root).\n        writer.WriteStartElement(&quot;book&quot;)\n            \n        &#39; Write the namespace declaration.\n        writer.WriteAttributeString(&quot;xmlns&quot;, &quot;bk&quot;, Nothing, &quot;urn:samples&quot;)\n            \n        &#39; Write the genre attribute.\n        writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;)\n            \n        &#39; Write the title.\n        writer.WriteStartElement(&quot;title&quot;)\n        writer.WriteString(&quot;The Handmaid&#39;s Tale&quot;)\n        writer.WriteEndElement()\n            \n        &#39; Write the price.\n        writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;)\n            \n        &#39; Lookup the prefix and write the ISBN element.\n        Dim prefix As String = writer.LookupPrefix(&quot;urn:samples&quot;)\n        writer.WriteStartElement(prefix, &quot;ISBN&quot;, &quot;urn:samples&quot;)\n        writer.WriteString(&quot;1-861003-78&quot;)\n        writer.WriteEndElement()\n            \n        &#39; Write the style element (shows a different way to handle prefixes).\n        writer.WriteElementString(&quot;style&quot;, &quot;urn:samples&quot;, &quot;hardcover&quot;)\n            \n        &#39; Write the close tag for the root element.\n        writer.WriteEndElement()\n            \n        &#39; Write the XML to file and close the writer.\n        writer.Flush()\n        writer.Close()\n        \n        Finally\n            If Not (writer Is Nothing) Then\n                writer.Close()\n            End If\n        End Try\n\n    End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlWriter.WriteElementString#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\npublic ref class Sample\n{\nprivate:\n   static String^ m_Document = L&quot;sampledata.xml&quot;;\n\npublic:\n   static void Main()\n   {\n      XmlWriter^ writer = nullptr;\n      try\n      {\n         XmlWriterSettings^ settings = gcnew XmlWriterSettings;\n         settings-&gt;Indent = true;\n         writer = XmlWriter::Create( m_Document,settings );\n         writer-&gt;WriteComment( L&quot;sample XML fragment&quot; );\n         \n         // Write an element (this one is the root).\n         writer-&gt;WriteStartElement( L&quot;book&quot; );\n         \n         // Write the namespace declaration.\n         writer-&gt;WriteAttributeString( L&quot;xmlns&quot;, L&quot;bk&quot;, nullptr, L&quot;urn:samples&quot; );\n         \n         // Write the genre attribute.\n         writer-&gt;WriteAttributeString( L&quot;genre&quot;, L&quot;novel&quot; );\n         \n         // Write the title.\n         writer-&gt;WriteStartElement( L&quot;title&quot; );\n         writer-&gt;WriteString( L&quot;The Handmaid&#39;s Tale&quot; );\n         writer-&gt;WriteEndElement();\n         \n         // Write the price.\n         writer-&gt;WriteElementString( L&quot;price&quot;, L&quot;19.95&quot; );\n         \n         // Lookup the prefix and write the ISBN element.\n         String^ prefix = writer-&gt;LookupPrefix( L&quot;urn:samples&quot; );\n         writer-&gt;WriteStartElement( prefix, L&quot;ISBN&quot;, L&quot;urn:samples&quot; );\n         writer-&gt;WriteString( L&quot;1-861003-78&quot; );\n         writer-&gt;WriteEndElement();\n         \n         // Write the style element (shows a different way to handle prefixes).\n         writer-&gt;WriteElementString( L&quot;style&quot;, L&quot;urn:samples&quot;, L&quot;hardcover&quot; );\n         \n         // Write the close tag for the root element.\n         writer-&gt;WriteEndElement();\n         \n         // Write the XML to file and close the writer.\n         writer-&gt;Flush();\n         writer-&gt;Close();\n      }\n      finally\n      {\n         if ( writer != nullptr )\n                  writer-&gt;Close();\n      }\n\n   }\n\n};\n\nvoid main()\n{\n   Sample::Main();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteAttributes_System_Xml_XmlReader_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteAttributes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteAttributes(XmlReader,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes out all the attributes found at the current position in the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteAttributes (System.Xml.XmlReader reader, bool defattr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>XmlReader</code> from which to copy the attributes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>defattr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to copy the default attributes from the <code>XmlReader</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>reader</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a></div>\r\n                  </div>\r\n                  <p>The reader is not positioned on an <code>element</code>, <code>attribute</code> or <code>XmlDeclaration</code> node.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the reader is positioned on an <code>element</code> node <code>WriteAttributes</code> copies all the contained attributes. If the reader is positioned on an <code>attribute</code> node, this method writes the current attribute, then the rest of the attributes until the element closing tag. If the reader is positioned on an <code>XmlDeclaration</code> node, this method writes all the attributes in the declaration. If the reader is positioned on any other node type this method throws an <a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a>.  </p>\n<p> If this method is called using <a class=\"xref\" href=\"system.xml.xmlvalidatingreader\" data-linktype=\"relative-path\">XmlValidatingReader</a>, to ensure well-formed XML any content (which has been expanded from the entities) that could result in an invalid document is replaced when written. For example, if an attribute includes an <code>&amp;gt;</code> entity that has been expanded, to ensure a well-formed document the expanded &gt; is replaced when written out with <code>&amp;gt;</code>.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributesAsync_\" data-linktype=\"relative-path\">WriteAttributesAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example copies all the elements to the output, changes the tag names to upper case, and copies all the attributes unchanged.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlWriter.WriteAttributes#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample {\n\n  public static void Main() {\n \n    XmlReader reader = XmlReader.Create(&quot;test1.xml&quot;);\n    XmlWriterSettings settings = new XmlWriterSettings();\n    settings.Indent = true;\n    XmlWriter writer = XmlWriter.Create(Console.Out);\n\n    while (reader.Read()) {\n      if (reader.NodeType == XmlNodeType.Element) {\n        writer.WriteStartElement(reader.Name.ToUpper());\n        writer.WriteAttributes(reader, false);\n        if (reader.IsEmptyElement) writer.WriteEndElement();\n      }\n      else if (reader.NodeType == XmlNodeType.EndElement) {\n        writer.WriteEndElement();\n      }\n    }\n    writer.Close();\n    reader.Close();\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlWriter.WriteAttributes#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nvoid main()\n{\n   XmlReader^ reader = XmlReader::Create( L&quot;test1.xml&quot; );\n   XmlWriterSettings^ settings = gcnew XmlWriterSettings;\n   settings-&gt;Indent = true;\n   XmlWriter^ writer = XmlWriter::Create( Console::Out );\n   while ( reader-&gt;Read() )\n   {\n      if ( reader-&gt;NodeType == XmlNodeType::Element )\n      {\n         writer-&gt;WriteStartElement( reader-&gt;Name-&gt;ToUpper() );\n         writer-&gt;WriteAttributes( reader, false );\n         if ( reader-&gt;IsEmptyElement )\n                  writer-&gt;WriteEndElement();\n      }\n      else\n      if ( reader-&gt;NodeType == XmlNodeType::EndElement )\n      {\n         writer-&gt;WriteEndElement();\n      }\n   }\n\n   writer-&gt;Close();\n   reader-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlWriter.WriteAttributes#1\">Option Strict\nOption Explicit\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    \n  Public Shared Sub Main()\n\n    Dim reader As XmlReader = XmlReader.Create(&quot;test1.xml&quot;)\n    Dim settings As XmlWriterSettings = new XmlWriterSettings()\n    settings.Indent = true\n    Dim writer As XmlWriter = XmlWriter.Create(Console.Out)\n        \n      While reader.Read()\n          If reader.NodeType = XmlNodeType.Element Then\n              writer.WriteStartElement(reader.Name.ToUpper())\n              writer.WriteAttributes(reader, False)\n              If reader.IsEmptyElement Then\n                 writer.WriteEndElement()\n              End If\n          Else\n              If reader.NodeType = XmlNodeType.EndElement Then\n                  writer.WriteEndElement()\n              End If\n          End If\n      End While\n      writer.Close()\n      reader.Close()\n\n    End Sub &#39;Main\nEnd Class &#39;Sample\n</code></pre><p> The example uses the file, <code>test1.xml</code>, as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlWriter.WriteAttributes#2\">&lt;test a=&quot;1&quot; b=&quot;2&quot;&gt;\n    &lt;item c=&quot;3&quot; d=&quot;4&quot; e=&quot;5&quot; f=&quot;6&quot;/&gt;\n&lt;/test&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteAttributesAsync_System_Xml_XmlReader_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteAttributesAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteAttributesAsync(XmlReader,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes out all the attributes found at the current position in the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteAttributesAsync (System.Xml.XmlReader reader, bool defattr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>XmlReader</code> from which to copy the attributes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>defattr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to copy the default attributes from the <code>XmlReader</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteAttributes</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributes_\" data-linktype=\"relative-path\">WriteAttributes</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteAttributeString_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteAttributeString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteAttributeString(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes out the attribute with the specified local name and value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteAttributeString (string localName, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>xml:space</code> or <code>xml:lang</code> attribute value is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>WriteAttributeString</code> does the following:  </p>\n<ul>\n<li><p>If the attribute value includes double or single quotes, they are replaced with <code>&amp;quot;</code> and <code>&amp;apos;</code> respectively.  </p>\n</li>\n<li><p>If writing an <code>xml:space</code> attribute, the writer verifies the attribute value is valid. (Valid values are <code>preserve</code> or <code>default</code>.)  </p>\n</li>\n<li><p>If writing an <code>xml:lang</code> attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.  </p>\n<p>For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeStringAsync_\" data-linktype=\"relative-path\">WriteAttributeStringAsync</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes out a book.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlWriter.WriteElementString#1\">using System;\nusing System.IO;\nusing System.Xml;\n \n public class Sample\n {\n   private const string m_Document = &quot;sampledata.xml&quot;;\n \n   public static void Main() {\n   \n      XmlWriter writer = null;\n\n      try {\n     \n        XmlWriterSettings settings = new XmlWriterSettings();\n        settings.Indent = true;\n        writer = XmlWriter.Create (m_Document, settings);\n           \n        writer.WriteComment(&quot;sample XML fragment&quot;);\n     \n        // Write an element (this one is the root).\n        writer.WriteStartElement(&quot;book&quot;);\n \n        // Write the namespace declaration.\n        writer.WriteAttributeString(&quot;xmlns&quot;, &quot;bk&quot;, null, &quot;urn:samples&quot;);\n    \n        // Write the genre attribute.\n        writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;);\n         \n        // Write the title.\n        writer.WriteStartElement(&quot;title&quot;);\n        writer.WriteString(&quot;The Handmaid&#39;s Tale&quot;);\n        writer.WriteEndElement();\n               \n        // Write the price.\n        writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;);\n      \n        // Lookup the prefix and write the ISBN element.\n        string prefix = writer.LookupPrefix(&quot;urn:samples&quot;);\n        writer.WriteStartElement(prefix, &quot;ISBN&quot;, &quot;urn:samples&quot;);\n        writer.WriteString(&quot;1-861003-78&quot;);\n        writer.WriteEndElement();\n\n        // Write the style element (shows a different way to handle prefixes).\n        writer.WriteElementString(&quot;style&quot;, &quot;urn:samples&quot;, &quot;hardcover&quot;);\n \n        // Write the close tag for the root element.\n        writer.WriteEndElement();\n               \n        // Write the XML to file and close the writer.\n        writer.Flush();\n        writer.Close();\n      }\n\n      finally {\n        if (writer != null)\n           writer.Close();\n     } \n   }\n \n }\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlWriter.WriteElementString#1\">Option Strict\nOption Explicit\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    Private Shared m_Document As String = &quot;sampledata.xml&quot;\n    \n    Public Shared Sub Main()\n        Dim writer As XmlWriter = Nothing\n        \n      Try\n\n        Dim settings As XmlWriterSettings = new XmlWriterSettings()\n        settings.Indent = true\n        writer = XmlWriter.Create (m_Document, settings)\n            \n        writer.WriteComment(&quot;sample XML fragment&quot;)\n            \n        &#39; Write an element (this one is the root).\n        writer.WriteStartElement(&quot;book&quot;)\n            \n        &#39; Write the namespace declaration.\n        writer.WriteAttributeString(&quot;xmlns&quot;, &quot;bk&quot;, Nothing, &quot;urn:samples&quot;)\n            \n        &#39; Write the genre attribute.\n        writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;)\n            \n        &#39; Write the title.\n        writer.WriteStartElement(&quot;title&quot;)\n        writer.WriteString(&quot;The Handmaid&#39;s Tale&quot;)\n        writer.WriteEndElement()\n            \n        &#39; Write the price.\n        writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;)\n            \n        &#39; Lookup the prefix and write the ISBN element.\n        Dim prefix As String = writer.LookupPrefix(&quot;urn:samples&quot;)\n        writer.WriteStartElement(prefix, &quot;ISBN&quot;, &quot;urn:samples&quot;)\n        writer.WriteString(&quot;1-861003-78&quot;)\n        writer.WriteEndElement()\n            \n        &#39; Write the style element (shows a different way to handle prefixes).\n        writer.WriteElementString(&quot;style&quot;, &quot;urn:samples&quot;, &quot;hardcover&quot;)\n            \n        &#39; Write the close tag for the root element.\n        writer.WriteEndElement()\n            \n        &#39; Write the XML to file and close the writer.\n        writer.Flush()\n        writer.Close()\n        \n        Finally\n            If Not (writer Is Nothing) Then\n                writer.Close()\n            End If\n        End Try\n\n    End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlWriter.WriteElementString#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\npublic ref class Sample\n{\nprivate:\n   static String^ m_Document = L&quot;sampledata.xml&quot;;\n\npublic:\n   static void Main()\n   {\n      XmlWriter^ writer = nullptr;\n      try\n      {\n         XmlWriterSettings^ settings = gcnew XmlWriterSettings;\n         settings-&gt;Indent = true;\n         writer = XmlWriter::Create( m_Document,settings );\n         writer-&gt;WriteComment( L&quot;sample XML fragment&quot; );\n         \n         // Write an element (this one is the root).\n         writer-&gt;WriteStartElement( L&quot;book&quot; );\n         \n         // Write the namespace declaration.\n         writer-&gt;WriteAttributeString( L&quot;xmlns&quot;, L&quot;bk&quot;, nullptr, L&quot;urn:samples&quot; );\n         \n         // Write the genre attribute.\n         writer-&gt;WriteAttributeString( L&quot;genre&quot;, L&quot;novel&quot; );\n         \n         // Write the title.\n         writer-&gt;WriteStartElement( L&quot;title&quot; );\n         writer-&gt;WriteString( L&quot;The Handmaid&#39;s Tale&quot; );\n         writer-&gt;WriteEndElement();\n         \n         // Write the price.\n         writer-&gt;WriteElementString( L&quot;price&quot;, L&quot;19.95&quot; );\n         \n         // Lookup the prefix and write the ISBN element.\n         String^ prefix = writer-&gt;LookupPrefix( L&quot;urn:samples&quot; );\n         writer-&gt;WriteStartElement( prefix, L&quot;ISBN&quot;, L&quot;urn:samples&quot; );\n         writer-&gt;WriteString( L&quot;1-861003-78&quot; );\n         writer-&gt;WriteEndElement();\n         \n         // Write the style element (shows a different way to handle prefixes).\n         writer-&gt;WriteElementString( L&quot;style&quot;, L&quot;urn:samples&quot;, L&quot;hardcover&quot; );\n         \n         // Write the close tag for the root element.\n         writer-&gt;WriteEndElement();\n         \n         // Write the XML to file and close the writer.\n         writer-&gt;Flush();\n         writer-&gt;Close();\n      }\n      finally\n      {\n         if ( writer != nullptr )\n                  writer-&gt;Close();\n      }\n\n   }\n\n};\n\nvoid main()\n{\n   Sample::Main();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteAttributeString_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteAttributeString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteAttributeString(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes an attribute with the specified local name, namespace URI, and value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteAttributeString (string localName, string ns, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI to associate with the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>xml:space</code> or <code>xml:lang</code> attribute value is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace. If <code>localName</code> is &quot;xmlns&quot; then this method also treats this as a namespace declaration. In this case, the <code>ns</code> argument can be <code>null</code>.  </p>\n<p> <code>WriteAttributeString</code> does the following:  </p>\n<ul>\n<li><p>If the attribute value includes double or single quotes, they are replaced with <code>&amp;quot;</code> and <code>&amp;apos;</code> respectively.  </p>\n</li>\n<li><p>If writing an <code>xml:space</code> attribute, the writer verifies the attribute value is valid. (Valid values are <code>preserve</code> or <code>default</code>.)  </p>\n</li>\n<li><p>If writing an <code>xml:lang</code> attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.  </p>\n<p>For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeStringAsync_\" data-linktype=\"relative-path\">WriteAttributeStringAsync</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeString_\" data-linktype=\"relative-path\">WriteAttributeString</a> method to write a namespace declaration.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlWriter.WriteAttributeString#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample {\n\n  public static void Main() {\n \n     XmlWriter writer = null;\n\n     writer = XmlWriter.Create(&quot;sampledata.xml&quot;);\n        \n     // Write the root element.\n     writer.WriteStartElement(&quot;book&quot;);\n\n     // Write the xmlns:bk=&quot;urn:book&quot; namespace declaration.\n     writer.WriteAttributeString(&quot;xmlns&quot;,&quot;bk&quot;, null,&quot;urn:book&quot;);\n  \n     // Write the bk:ISBN=&quot;1-800-925&quot; attribute.\n     writer.WriteAttributeString(&quot;ISBN&quot;, &quot;urn:book&quot;, &quot;1-800-925&quot;);\n\n     writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;);\n\n     // Write the close tag for the root element.\n     writer.WriteEndElement();\n             \n     // Write the XML to file and close the writer.\n     writer.Flush();\n     writer.Close();  \n\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlWriter.WriteAttributeString#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nvoid main()\n{\n   XmlWriter^ writer = nullptr;\n   writer = XmlWriter::Create( L&quot;sampledata.xml&quot; );\n   \n   // Write the root element.\n   writer-&gt;WriteStartElement( L&quot;book&quot; );\n   \n   // Write the xmlns:bk=&quot;urn:book&quot; namespace declaration.\n   writer-&gt;WriteAttributeString( L&quot;xmlns&quot;, L&quot;bk&quot;, nullptr, L&quot;urn:book&quot; );\n   \n   // Write the bk:ISBN=&quot;1-800-925&quot; attribute.\n   writer-&gt;WriteAttributeString( L&quot;ISBN&quot;, L&quot;urn:book&quot;, L&quot;1-800-925&quot; );\n   writer-&gt;WriteElementString( L&quot;price&quot;, L&quot;19.95&quot; );\n   \n   // Write the close tag for the root element.\n   writer-&gt;WriteEndElement();\n   \n   // Write the XML to file and close the writer.\n   writer-&gt;Flush();\n   writer-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlWriter.WriteAttributeString#1\">Imports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample \n\n  Public Shared Sub Main() \n \n     Dim writer As XmlWriter = Nothing\n\n     writer = XmlWriter.Create(&quot;sampledata.xml&quot;)\n        \n     &#39; Write the root element.\n     writer.WriteStartElement(&quot;book&quot;)\n\n     &#39; Write the xmlns:bk=&quot;urn:book&quot; namespace declaration.\n     writer.WriteAttributeString(&quot;xmlns&quot;,&quot;bk&quot;, Nothing,&quot;urn:book&quot;)\n  \n     &#39; Write the bk:ISBN=&quot;1-800-925&quot; attribute.\n     writer.WriteAttributeString(&quot;ISBN&quot;, &quot;urn:book&quot;, &quot;1-800-925&quot;)\n\n     writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;)\n\n     &#39; Write the close tag for the root element.\n     writer.WriteEndElement()\n             \n     &#39; Write the XML to file and close the writer.\n     writer.Flush()\n     writer.Close()  \n\n  End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteAttributeString_System_String_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteAttributeString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteAttributeString(String,String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes out the attribute with the specified prefix, local name, namespace URI, and value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteAttributeString (string prefix, string localName, string ns, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prefix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace prefix of the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI of the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>xml:space</code> or <code>xml:lang</code> attribute value is invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a></div>\r\n                  </div>\r\n                  <p>The <code>localName</code> or <code>ns</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method writes out the attribute with a user defined namespace prefix and associates it with the given namespace. If the prefix is &quot;xmlns&quot; then this method also treats this as a namespace declaration and associates the declared prefix with the namespace URI provided in the given attribute value. In this case the <code>ns</code> argument can be <code>null</code>.  </p>\n<p> <code>WriteAttributeString</code> does the following:  </p>\n<ul>\n<li><p>If the attribute value includes double or single quotes, they are replaced with <code>&amp;quot;</code> and <code>&amp;apos;</code> respectively.  </p>\n</li>\n<li><p>If writing an <code>xml:space</code> attribute, the writer verifies the attribute value is valid. (Valid values are <code>preserve</code> or <code>default</code>.)  </p>\n</li>\n<li><p>If writing an <code>xml:lang</code> attribute, the writer does not verify that the attribute value is valid according to the W3C XML 1.0 recommendation.  </p>\n<p>For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeStringAsync_\" data-linktype=\"relative-path\">WriteAttributeStringAsync</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeString_\" data-linktype=\"relative-path\">WriteAttributeString</a> method to write a namespace declaration.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlWriter.WriteAttributeString#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample {\n\n  public static void Main() {\n \n     XmlWriter writer = null;\n\n     writer = XmlWriter.Create(&quot;sampledata.xml&quot;);\n        \n     // Write the root element.\n     writer.WriteStartElement(&quot;book&quot;);\n\n     // Write the xmlns:bk=&quot;urn:book&quot; namespace declaration.\n     writer.WriteAttributeString(&quot;xmlns&quot;,&quot;bk&quot;, null,&quot;urn:book&quot;);\n  \n     // Write the bk:ISBN=&quot;1-800-925&quot; attribute.\n     writer.WriteAttributeString(&quot;ISBN&quot;, &quot;urn:book&quot;, &quot;1-800-925&quot;);\n\n     writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;);\n\n     // Write the close tag for the root element.\n     writer.WriteEndElement();\n             \n     // Write the XML to file and close the writer.\n     writer.Flush();\n     writer.Close();  \n\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlWriter.WriteAttributeString#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nvoid main()\n{\n   XmlWriter^ writer = nullptr;\n   writer = XmlWriter::Create( L&quot;sampledata.xml&quot; );\n   \n   // Write the root element.\n   writer-&gt;WriteStartElement( L&quot;book&quot; );\n   \n   // Write the xmlns:bk=&quot;urn:book&quot; namespace declaration.\n   writer-&gt;WriteAttributeString( L&quot;xmlns&quot;, L&quot;bk&quot;, nullptr, L&quot;urn:book&quot; );\n   \n   // Write the bk:ISBN=&quot;1-800-925&quot; attribute.\n   writer-&gt;WriteAttributeString( L&quot;ISBN&quot;, L&quot;urn:book&quot;, L&quot;1-800-925&quot; );\n   writer-&gt;WriteElementString( L&quot;price&quot;, L&quot;19.95&quot; );\n   \n   // Write the close tag for the root element.\n   writer-&gt;WriteEndElement();\n   \n   // Write the XML to file and close the writer.\n   writer-&gt;Flush();\n   writer-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlWriter.WriteAttributeString#1\">Imports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample \n\n  Public Shared Sub Main() \n \n     Dim writer As XmlWriter = Nothing\n\n     writer = XmlWriter.Create(&quot;sampledata.xml&quot;)\n        \n     &#39; Write the root element.\n     writer.WriteStartElement(&quot;book&quot;)\n\n     &#39; Write the xmlns:bk=&quot;urn:book&quot; namespace declaration.\n     writer.WriteAttributeString(&quot;xmlns&quot;,&quot;bk&quot;, Nothing,&quot;urn:book&quot;)\n  \n     &#39; Write the bk:ISBN=&quot;1-800-925&quot; attribute.\n     writer.WriteAttributeString(&quot;ISBN&quot;, &quot;urn:book&quot;, &quot;1-800-925&quot;)\n\n     writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;)\n\n     &#39; Write the close tag for the root element.\n     writer.WriteEndElement()\n             \n     &#39; Write the XML to file and close the writer.\n     writer.Flush()\n     writer.Close()  \n\n  End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteAttributeStringAsync_System_String_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteAttributeStringAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteAttributeStringAsync(String,String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes out the attribute with the specified prefix, local name, namespace URI, and value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task WriteAttributeStringAsync (string prefix, string localName, string ns, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prefix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace prefix of the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI of the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteAttributeString</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeString_\" data-linktype=\"relative-path\">WriteAttributeString</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteBase64_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteBase64_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteBase64(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, encodes the specified binary bytes as Base64 and writes out the resulting text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteBase64 (byte[] buffer, int index, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Byte array to encode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The position in the buffer indicating the start of the bytes to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> or <code>count</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> The buffer length minus <code>index</code> is less than <code>count</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For example, the byte buffer may contain the binary contents of a GIF image. This clearly would not be valid XML. The <code>Base64</code> encoding is designed to represent arbitrary byte sequences in a text form comprised of the 65 US-ASCII characters ([A-Za-z0-9+/=]) where each character encodes 6 bits of the binary data. For more information, see Requests for Comments (RFC) 1521 located on the Request for Comments Web site at <a href=\"http://www.rfc-editor.org/\" data-linktype=\"external\">http://www.rfc-editor.org/</a>.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteBase64Async_\" data-linktype=\"relative-path\">WriteBase64Async</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the WriteBase64 method to write <code>Base64</code> data. The <code>Base64</code> data is embedded within an <code>&lt;image&gt;</code> element.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlReader_Read_Write_Binary#3\">    Public Shared Sub Base64EncodeImageFile() \n        \n        Dim bufferSize As Integer = 1000\n        Dim buffer(bufferSize) As Byte\n        Dim readBytes As Integer = 0\n        \n        Using writer As XmlWriter = XmlWriter.Create(&quot;output.xml&quot;)\n\n                Dim inputFile As New FileStream(&quot;C:\\artFiles\\sunset.jpg&quot;, FileMode.OpenOrCreate, FileAccess.Read, FileShare.Read)\n                writer.WriteStartDocument()\n                writer.WriteStartElement(&quot;image&quot;)\n                Dim br As New BinaryReader(inputFile)\n                Console.WriteLine(vbCr + vbLf + &quot;Writing Base64 data...&quot;)\n                \n                Do\n                    readBytes = br.Read(buffer, 0, bufferSize)\n                    writer.WriteBase64(buffer, 0, readBytes)\n                Loop While bufferSize &lt;= readBytes\n                br.Close()\n            \n            writer.WriteEndElement() &#39; &lt;/image&gt;\n            writer.WriteEndDocument()\n\n        End Using\n     \n    End Sub &#39;Base64EncodeImageFile\n    \n</code></pre><pre><code class=\"lang-cs\" name=\"XmlReader_Read_Write_Binary#3\">\npublic static void Base64EncodeImageFile() {\n\n  int bufferSize = 1000;\n  byte[] buffer = new byte[bufferSize];\n  int readBytes = 0;\n\t\n  using (XmlWriter writer = XmlWriter.Create(&quot;output.xml&quot;)) {\n\n       FileStream inputFile = new FileStream(@&quot;C:\\artFiles\\sunset.jpg&quot;,\n                                                                    FileMode.OpenOrCreate, FileAccess.Read, FileShare.Read);\n       writer.WriteStartDocument();\n       writer.WriteStartElement(&quot;image&quot;);\n       BinaryReader br = new BinaryReader(inputFile);\n       Console.WriteLine(&quot;\\r<br>Writing Base64 data...&quot;);\n\n       do {\n          readBytes = br.Read(buffer, 0, bufferSize);\n          writer.WriteBase64(buffer, 0, readBytes);\n       } while (bufferSize &lt;= readBytes);\n       br.Close();\n\t\t\n    writer.WriteEndElement();// &lt;/image&gt;\n    writer.WriteEndDocument();\n\t\t\n  }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteBase64Async_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteBase64Async_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteBase64Async(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously encodes the specified binary bytes as Base64 and writes out the resulting text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteBase64Async (byte[] buffer, int index, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Byte array to encode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The position in the buffer indicating the start of the bytes to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteBase64</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteBase64_\" data-linktype=\"relative-path\">WriteBase64</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteBinHex_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteBinHex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteBinHex(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, encodes the specified binary bytes as <code>BinHex</code> and writes out the resulting text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteBinHex (byte[] buffer, int index, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Byte array to encode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The position in the buffer indicating the start of the bytes to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> or <code>count</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> The buffer length minus <code>index</code> is less than <code>count</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteBinHexAsync_\" data-linktype=\"relative-path\">WriteBinHexAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the WriteBinHex method to write <code>BinHex</code> data. The <code>BinHex</code> data is embedded within an <code>&lt;image&gt;</code> element.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlReader_Read_Write_Binary#1\">    Public Shared Sub BinHexEncodeImageFile() \n        \n        Dim bufferSize As Integer = 1000\n        Dim buffer(bufferSize) As Byte\n        Dim readBytes As Integer = 0\n        \n        Using writer As XmlWriter = XmlWriter.Create(&quot;output.xml&quot;)\n\n                Dim inputFile As New FileStream(&quot;C:\\artFiles\\sunset.jpg&quot;, FileMode.OpenOrCreate, FileAccess.Read, FileShare.Read)\n                writer.WriteStartDocument()\n                writer.WriteStartElement(&quot;image&quot;)\n                Dim br As New BinaryReader(inputFile)\n                Console.WriteLine(vbCr + vbLf + &quot;Writing BinHex data...&quot;)\n                \n                Do\n                    readBytes = br.Read(buffer, 0, bufferSize)\n                    writer.WriteBinHex(buffer, 0, readBytes)\n                Loop While bufferSize &lt;= readBytes\n                br.Close()\n\n            writer.WriteEndElement() &#39; &lt;/image&gt;\n            writer.WriteEndDocument()\n\n        End Using\n     \n    End Sub &#39;BinHexEncodeImageFile\n    \n</code></pre><pre><code class=\"lang-cs\" name=\"XmlReader_Read_Write_Binary#1\">\npublic static void BinHexEncodeImageFile() {\n\n  int bufferSize = 1000;\n  byte[] buffer = new byte[bufferSize];\n  int readBytes = 0;\n\t\n  using (XmlWriter writer = XmlWriter.Create(&quot;output.xml&quot;)) {\n       FileStream inputFile = new FileStream(@&quot;C:\\artFiles\\sunset.jpg&quot;, FileMode.OpenOrCreate, \n                                                                    FileAccess.Read, FileShare.Read);\n       writer.WriteStartDocument();\n       writer.WriteStartElement(&quot;image&quot;);\n       BinaryReader br = new BinaryReader(inputFile);\n       Console.WriteLine(&quot;\\r<br>Writing BinHex data...&quot;);\n\n       do {\n          readBytes = br.Read(buffer, 0, bufferSize);\n          writer.WriteBinHex(buffer, 0, readBytes);\n       } while (bufferSize &lt;= readBytes);\n       br.Close();\n\n    writer.WriteEndElement();// &lt;/image&gt;\n    writer.WriteEndDocument();\n\t\t\n  }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteBinHexAsync_System_Byte___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteBinHexAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteBinHexAsync(Byte[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously encodes the specified binary bytes as <code>BinHex</code> and writes out the resulting text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteBinHexAsync (byte[] buffer, int index, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Byte array to encode.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The position in the buffer indicating the start of the bytes to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of bytes to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteBinHex</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteBinHex_\" data-linktype=\"relative-path\">WriteBinHex</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteCData_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteCData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteCData(String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteCData (string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to place inside the CDATA block.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The text would result in a non-well formed XML document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>text</code> is either <code>null</code> or <code>String.Empty</code>, this method writes an empty CDATA block, for example &lt;![CDATA[]]&gt;.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteCDataAsync_\" data-linktype=\"relative-path\">WriteCDataAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes an XML file representing a book.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter.WriteStartDocument#1\">Option Strict\nOption Explicit\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    Private Const filename As String = &quot;sampledata.xml&quot;\n    \n  Public Shared Sub Main()\n\n     Dim settings As XmlWriterSettings = new XmlWriterSettings()\n     settings.Indent = true\n     Dim writer As XmlWriter = XmlWriter.Create(filename, settings)\n        \n     &#39; Write the Processing Instruction node.\n     Dim PItext As String = &quot;type=&quot;&quot;text/xsl&quot;&quot; href=&quot;&quot;book.xsl&quot;&quot;&quot;\n     writer.WriteProcessingInstruction(&quot;xml-stylesheet&quot;, PItext)\n        \n     &#39;Write the DocumentType node.\n     writer.WriteDocType(&quot;book&quot;, Nothing, Nothing, &quot;&lt;!ENTITY h &quot;&quot;hardcover&quot;&quot;&gt;&quot;)\n        \n     &#39; Write a Comment node.\n     writer.WriteComment(&quot;sample XML&quot;)\n        \n     &#39; Write the root element.\n     writer.WriteStartElement(&quot;book&quot;)\n        \n     &#39; Write the genre attribute\n     writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;)\n        \n     &#39; Write the ISBN attribute.\n     writer.WriteAttributeString(&quot;ISBN&quot;, &quot;1-8630-014&quot;)\n        \n     &#39; Write the title.\n     writer.WriteElementString(&quot;title&quot;, &quot;The Handmaid&#39;s Tale&quot;)\n        \n     &#39; Write the style element.\n     writer.WriteStartElement(&quot;style&quot;)\n     writer.WriteEntityRef(&quot;h&quot;)\n     writer.WriteEndElement()\n       \n     &#39; Write the price.\n     writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;)\n        \n     &#39; Write CDATA.\n     writer.WriteCData(&quot;Prices 15% off!!&quot;)\n        \n     &#39; Write the close tag for the root element.\n     writer.WriteEndElement()\n        \n     writer.WriteEndDocument()\n        \n     &#39; Write the XML to file and close the writer\n     writer.Flush()\n     writer.Close()\n        \n    End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter.WriteStartDocument#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample {\n\n  private const string filename = &quot;sampledata.xml&quot;;\n\n  public static void Main() {\n  \n     XmlWriterSettings settings = new XmlWriterSettings();\n     settings.Indent = true;\n     XmlWriter writer = XmlWriter.Create(filename, settings);\n\n     // Write the Processing Instruction node.\n     String PItext=&quot;type=\\&quot;text/xsl\\&quot; href=\\&quot;book.xsl\\&quot;&quot;;\n     writer.WriteProcessingInstruction(&quot;xml-stylesheet&quot;, PItext);\n\n     // Write the DocumentType node.\n     writer.WriteDocType(&quot;book&quot;, null , null, &quot;&lt;!ENTITY h \\&quot;hardcover\\&quot;&gt;&quot;);\n        \n     // Write a Comment node.\n     writer.WriteComment(&quot;sample XML&quot;);\n    \n     // Write the root element.\n     writer.WriteStartElement(&quot;book&quot;);\n\n     // Write the genre attribute.\n     writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;);\n    \n     // Write the ISBN attribute.\n     writer.WriteAttributeString(&quot;ISBN&quot;, &quot;1-8630-014&quot;);\n\n     // Write the title.\n     writer.WriteElementString(&quot;title&quot;, &quot;The Handmaid&#39;s Tale&quot;);\n              \n     // Write the style element.\n     writer.WriteStartElement(&quot;style&quot;);\n     writer.WriteEntityRef(&quot;h&quot;);\n     writer.WriteEndElement(); \n\n     // Write the price.\n     writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;);\n\n     // Write CDATA.\n     writer.WriteCData(&quot;Prices 15% off!!&quot;);\n\n     // Write the close tag for the root element.\n     writer.WriteEndElement();\n             \n     writer.WriteEndDocument();\n\n     // Write the XML to file and close the writer.\n     writer.Flush();\n     writer.Close();  \n  }\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteCDataAsync_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteCDataAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteCDataAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteCDataAsync (string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to place inside the CDATA block.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteCData</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteCData_\" data-linktype=\"relative-path\">WriteCData</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteCharEntity_System_Char_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteCharEntity_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteCharEntity(Char)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, forces the generation of a character entity for the specified Unicode character value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteCharEntity (char ch);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ch</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Unicode character for which to generate a character entity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The character is in the surrogate pair character range, <code>0xd800</code> - <code>0xdfff</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method writes the Unicode character in hexadecimal character entity reference format.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteCharEntityAsync_\" data-linktype=\"relative-path\">WriteCharEntityAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>See <a class=\"xref\" href=\"system.xml.xmltextwriter#System_Xml_XmlTextWriter_WriteCharEntity_\" data-linktype=\"relative-path\">WriteCharEntity</a> for an example using this method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteCharEntityAsync_System_Char_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteCharEntityAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteCharEntityAsync(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously forces the generation of a character entity for the specified Unicode character value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteCharEntityAsync (char ch);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ch</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Unicode character for which to generate a character entity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteCharEntity</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteCharEntity_\" data-linktype=\"relative-path\">WriteCharEntity</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteChars_System_Char___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteChars_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteChars(Char[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes text one buffer at a time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteChars (char[] buffer, int index, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Character array containing the text to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The position in the buffer indicating the start of the text to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> or <code>count</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> The buffer length minus <code>index</code> is less than <code>count</code>; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>buffer</code> parameter value is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method can be used to write large amounts of text one buffer at a time.  </p>\n<p> Special handling must be done to ensure the <code>WriteChars</code> method does not split surrogate pair characters across multiple buffer writes. The XML specification defines the valid ranges for surrogate pairs.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteCharsAsync_\" data-linktype=\"relative-path\">WriteCharsAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"XmlWriter.WriteChars#1\">\t\t\tusing (XmlWriter writer = XmlWriter.Create(&quot;WriteChars.xml&quot;))\n\t\t\t{\n\t\t\t\twriter.WriteStartDocument();\n\n\t\t\t\tchar[] ch = new char[4];\n\t\t\t\tch[0] = &#39;t&#39;;\n\t\t\t\tch[1] = &#39;e&#39;;\n\t\t\t\tch[2] = &#39;x&#39;;\n\t\t\t\tch[3] = &#39;t&#39;;\n\n\t\t\t\twriter.WriteStartElement(&quot;WriteCharacters&quot;);\n\t\t\t\twriter.WriteChars(ch, 0, ch.Length);\n\t\t\t\twriter.WriteEndElement();\n\t\t\t\twriter.WriteEndDocument();\n\t\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteCharsAsync_System_Char___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteCharsAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteCharsAsync(Char[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes text one buffer at a time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteCharsAsync (char[] buffer, int index, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Character array containing the text to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The position in the buffer indicating the start of the text to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteChars</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteChars_\" data-linktype=\"relative-path\">WriteChars</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteComment_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteComment_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteComment(String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes out a comment <!--...--> containing the specified text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteComment (string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Text to place inside the comment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The text would result in a non-well-formed XML document.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>text</code> is either <code>null</code> or <code>String.Empty</code>, this method writes a comment with no data content, for example &lt;!----&gt;.  </p>\n<p> If <code>text</code> contains an invalid sequence of two dashes &quot;--&quot; the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> can either throw an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> (<a class=\"xref\" href=\"system.xml.xmltextwriter\" data-linktype=\"relative-path\">XmlTextWriter</a> objects) or insert a space between the dashes &quot;- -&quot; so that the text is a valid XML comment (<a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> objects created by the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_Create_\" data-linktype=\"relative-path\">Create</a> method).  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteCommentAsync_\" data-linktype=\"relative-path\">WriteCommentAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes an XML file representing a book.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter.WriteStartDocument#1\">Option Strict\nOption Explicit\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    Private Const filename As String = &quot;sampledata.xml&quot;\n    \n  Public Shared Sub Main()\n\n     Dim settings As XmlWriterSettings = new XmlWriterSettings()\n     settings.Indent = true\n     Dim writer As XmlWriter = XmlWriter.Create(filename, settings)\n        \n     &#39; Write the Processing Instruction node.\n     Dim PItext As String = &quot;type=&quot;&quot;text/xsl&quot;&quot; href=&quot;&quot;book.xsl&quot;&quot;&quot;\n     writer.WriteProcessingInstruction(&quot;xml-stylesheet&quot;, PItext)\n        \n     &#39;Write the DocumentType node.\n     writer.WriteDocType(&quot;book&quot;, Nothing, Nothing, &quot;&lt;!ENTITY h &quot;&quot;hardcover&quot;&quot;&gt;&quot;)\n        \n     &#39; Write a Comment node.\n     writer.WriteComment(&quot;sample XML&quot;)\n        \n     &#39; Write the root element.\n     writer.WriteStartElement(&quot;book&quot;)\n        \n     &#39; Write the genre attribute\n     writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;)\n        \n     &#39; Write the ISBN attribute.\n     writer.WriteAttributeString(&quot;ISBN&quot;, &quot;1-8630-014&quot;)\n        \n     &#39; Write the title.\n     writer.WriteElementString(&quot;title&quot;, &quot;The Handmaid&#39;s Tale&quot;)\n        \n     &#39; Write the style element.\n     writer.WriteStartElement(&quot;style&quot;)\n     writer.WriteEntityRef(&quot;h&quot;)\n     writer.WriteEndElement()\n       \n     &#39; Write the price.\n     writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;)\n        \n     &#39; Write CDATA.\n     writer.WriteCData(&quot;Prices 15% off!!&quot;)\n        \n     &#39; Write the close tag for the root element.\n     writer.WriteEndElement()\n        \n     writer.WriteEndDocument()\n        \n     &#39; Write the XML to file and close the writer\n     writer.Flush()\n     writer.Close()\n        \n    End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter.WriteStartDocument#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample {\n\n  private const string filename = &quot;sampledata.xml&quot;;\n\n  public static void Main() {\n  \n     XmlWriterSettings settings = new XmlWriterSettings();\n     settings.Indent = true;\n     XmlWriter writer = XmlWriter.Create(filename, settings);\n\n     // Write the Processing Instruction node.\n     String PItext=&quot;type=\\&quot;text/xsl\\&quot; href=\\&quot;book.xsl\\&quot;&quot;;\n     writer.WriteProcessingInstruction(&quot;xml-stylesheet&quot;, PItext);\n\n     // Write the DocumentType node.\n     writer.WriteDocType(&quot;book&quot;, null , null, &quot;&lt;!ENTITY h \\&quot;hardcover\\&quot;&gt;&quot;);\n        \n     // Write a Comment node.\n     writer.WriteComment(&quot;sample XML&quot;);\n    \n     // Write the root element.\n     writer.WriteStartElement(&quot;book&quot;);\n\n     // Write the genre attribute.\n     writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;);\n    \n     // Write the ISBN attribute.\n     writer.WriteAttributeString(&quot;ISBN&quot;, &quot;1-8630-014&quot;);\n\n     // Write the title.\n     writer.WriteElementString(&quot;title&quot;, &quot;The Handmaid&#39;s Tale&quot;);\n              \n     // Write the style element.\n     writer.WriteStartElement(&quot;style&quot;);\n     writer.WriteEntityRef(&quot;h&quot;);\n     writer.WriteEndElement(); \n\n     // Write the price.\n     writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;);\n\n     // Write CDATA.\n     writer.WriteCData(&quot;Prices 15% off!!&quot;);\n\n     // Write the close tag for the root element.\n     writer.WriteEndElement();\n             \n     writer.WriteEndDocument();\n\n     // Write the XML to file and close the writer.\n     writer.Flush();\n     writer.Close();  \n  }\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteCommentAsync_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteCommentAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteCommentAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes out a comment <!--...--> containing the specified text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteCommentAsync (string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Text to place inside the comment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteComment</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteComment_\" data-linktype=\"relative-path\">WriteComment</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteDocType_System_String_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteDocType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteDocType(String,String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes the DOCTYPE declaration with the specified name and optional attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteDocType (string name, string pubid, string sysid, string subset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the DOCTYPE. This must be non-empty.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pubid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>If non-null it also writes PUBLIC &quot;pubid&quot; &quot;sysid&quot; where <code>pubid</code> and <code>sysid</code> are replaced with the value of the given arguments.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sysid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>If <code>pubid</code> is <code>null</code> and <code>sysid</code> is non-null it writes SYSTEM &quot;sysid&quot; where <code>sysid</code> is replaced with the value of this argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>subset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>If non-null it writes [subset] where subset is replaced with the value of this argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value for <code>name</code> would result in invalid XML.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method does not check for invalid characters in <code>pubid</code>, <code>sysid</code> or <code>subset</code>. It also does not check that the internal subset is well-formed.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> does not validate the data that is passed to the WriteDocType method. You should not pass arbitrary data to this method.  </p>\n</div>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteDocTypeAsync_\" data-linktype=\"relative-path\">WriteDocTypeAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes an XML file representing a book.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter.WriteStartDocument#1\">Option Strict\nOption Explicit\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    Private Const filename As String = &quot;sampledata.xml&quot;\n    \n  Public Shared Sub Main()\n\n     Dim settings As XmlWriterSettings = new XmlWriterSettings()\n     settings.Indent = true\n     Dim writer As XmlWriter = XmlWriter.Create(filename, settings)\n        \n     &#39; Write the Processing Instruction node.\n     Dim PItext As String = &quot;type=&quot;&quot;text/xsl&quot;&quot; href=&quot;&quot;book.xsl&quot;&quot;&quot;\n     writer.WriteProcessingInstruction(&quot;xml-stylesheet&quot;, PItext)\n        \n     &#39;Write the DocumentType node.\n     writer.WriteDocType(&quot;book&quot;, Nothing, Nothing, &quot;&lt;!ENTITY h &quot;&quot;hardcover&quot;&quot;&gt;&quot;)\n        \n     &#39; Write a Comment node.\n     writer.WriteComment(&quot;sample XML&quot;)\n        \n     &#39; Write the root element.\n     writer.WriteStartElement(&quot;book&quot;)\n        \n     &#39; Write the genre attribute\n     writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;)\n        \n     &#39; Write the ISBN attribute.\n     writer.WriteAttributeString(&quot;ISBN&quot;, &quot;1-8630-014&quot;)\n        \n     &#39; Write the title.\n     writer.WriteElementString(&quot;title&quot;, &quot;The Handmaid&#39;s Tale&quot;)\n        \n     &#39; Write the style element.\n     writer.WriteStartElement(&quot;style&quot;)\n     writer.WriteEntityRef(&quot;h&quot;)\n     writer.WriteEndElement()\n       \n     &#39; Write the price.\n     writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;)\n        \n     &#39; Write CDATA.\n     writer.WriteCData(&quot;Prices 15% off!!&quot;)\n        \n     &#39; Write the close tag for the root element.\n     writer.WriteEndElement()\n        \n     writer.WriteEndDocument()\n        \n     &#39; Write the XML to file and close the writer\n     writer.Flush()\n     writer.Close()\n        \n    End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter.WriteStartDocument#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample {\n\n  private const string filename = &quot;sampledata.xml&quot;;\n\n  public static void Main() {\n  \n     XmlWriterSettings settings = new XmlWriterSettings();\n     settings.Indent = true;\n     XmlWriter writer = XmlWriter.Create(filename, settings);\n\n     // Write the Processing Instruction node.\n     String PItext=&quot;type=\\&quot;text/xsl\\&quot; href=\\&quot;book.xsl\\&quot;&quot;;\n     writer.WriteProcessingInstruction(&quot;xml-stylesheet&quot;, PItext);\n\n     // Write the DocumentType node.\n     writer.WriteDocType(&quot;book&quot;, null , null, &quot;&lt;!ENTITY h \\&quot;hardcover\\&quot;&gt;&quot;);\n        \n     // Write a Comment node.\n     writer.WriteComment(&quot;sample XML&quot;);\n    \n     // Write the root element.\n     writer.WriteStartElement(&quot;book&quot;);\n\n     // Write the genre attribute.\n     writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;);\n    \n     // Write the ISBN attribute.\n     writer.WriteAttributeString(&quot;ISBN&quot;, &quot;1-8630-014&quot;);\n\n     // Write the title.\n     writer.WriteElementString(&quot;title&quot;, &quot;The Handmaid&#39;s Tale&quot;);\n              \n     // Write the style element.\n     writer.WriteStartElement(&quot;style&quot;);\n     writer.WriteEntityRef(&quot;h&quot;);\n     writer.WriteEndElement(); \n\n     // Write the price.\n     writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;);\n\n     // Write CDATA.\n     writer.WriteCData(&quot;Prices 15% off!!&quot;);\n\n     // Write the close tag for the root element.\n     writer.WriteEndElement();\n             \n     writer.WriteEndDocument();\n\n     // Write the XML to file and close the writer.\n     writer.Flush();\n     writer.Close();  \n  }\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteDocTypeAsync_System_String_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteDocTypeAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteDocTypeAsync(String,String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes the DOCTYPE declaration with the specified name and optional attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteDocTypeAsync (string name, string pubid, string sysid, string subset);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the DOCTYPE. This must be non-empty.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pubid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>If non-null it also writes PUBLIC &quot;pubid&quot; &quot;sysid&quot; where <code>pubid</code> and <code>sysid</code> are replaced with the value of the given arguments.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sysid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>If <code>pubid</code> is <code>null</code> and <code>sysid</code> is non-null it writes SYSTEM &quot;sysid&quot; where <code>sysid</code> is replaced with the value of this argument.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>subset</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>If non-null it writes [subset] where subset is replaced with the value of this argument.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteDocType</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteDocType_\" data-linktype=\"relative-path\">WriteDocType</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteElementString_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteElementString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteElementString(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an element with the specified local name and value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteElementString (string localName, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>localName</code> value is <code>null</code> or an empty string.  </p>\n<p> -or-  </p>\n<p> The parameter values are not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteElementStringAsync_\" data-linktype=\"relative-path\">WriteElementStringAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses several write methods to create an XML fragment.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlWriter.WriteElementString#1\">using System;\nusing System.IO;\nusing System.Xml;\n \n public class Sample\n {\n   private const string m_Document = &quot;sampledata.xml&quot;;\n \n   public static void Main() {\n   \n      XmlWriter writer = null;\n\n      try {\n     \n        XmlWriterSettings settings = new XmlWriterSettings();\n        settings.Indent = true;\n        writer = XmlWriter.Create (m_Document, settings);\n           \n        writer.WriteComment(&quot;sample XML fragment&quot;);\n     \n        // Write an element (this one is the root).\n        writer.WriteStartElement(&quot;book&quot;);\n \n        // Write the namespace declaration.\n        writer.WriteAttributeString(&quot;xmlns&quot;, &quot;bk&quot;, null, &quot;urn:samples&quot;);\n    \n        // Write the genre attribute.\n        writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;);\n         \n        // Write the title.\n        writer.WriteStartElement(&quot;title&quot;);\n        writer.WriteString(&quot;The Handmaid&#39;s Tale&quot;);\n        writer.WriteEndElement();\n               \n        // Write the price.\n        writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;);\n      \n        // Lookup the prefix and write the ISBN element.\n        string prefix = writer.LookupPrefix(&quot;urn:samples&quot;);\n        writer.WriteStartElement(prefix, &quot;ISBN&quot;, &quot;urn:samples&quot;);\n        writer.WriteString(&quot;1-861003-78&quot;);\n        writer.WriteEndElement();\n\n        // Write the style element (shows a different way to handle prefixes).\n        writer.WriteElementString(&quot;style&quot;, &quot;urn:samples&quot;, &quot;hardcover&quot;);\n \n        // Write the close tag for the root element.\n        writer.WriteEndElement();\n               \n        // Write the XML to file and close the writer.\n        writer.Flush();\n        writer.Close();\n      }\n\n      finally {\n        if (writer != null)\n           writer.Close();\n     } \n   }\n \n }\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlWriter.WriteElementString#1\">Option Strict\nOption Explicit\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    Private Shared m_Document As String = &quot;sampledata.xml&quot;\n    \n    Public Shared Sub Main()\n        Dim writer As XmlWriter = Nothing\n        \n      Try\n\n        Dim settings As XmlWriterSettings = new XmlWriterSettings()\n        settings.Indent = true\n        writer = XmlWriter.Create (m_Document, settings)\n            \n        writer.WriteComment(&quot;sample XML fragment&quot;)\n            \n        &#39; Write an element (this one is the root).\n        writer.WriteStartElement(&quot;book&quot;)\n            \n        &#39; Write the namespace declaration.\n        writer.WriteAttributeString(&quot;xmlns&quot;, &quot;bk&quot;, Nothing, &quot;urn:samples&quot;)\n            \n        &#39; Write the genre attribute.\n        writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;)\n            \n        &#39; Write the title.\n        writer.WriteStartElement(&quot;title&quot;)\n        writer.WriteString(&quot;The Handmaid&#39;s Tale&quot;)\n        writer.WriteEndElement()\n            \n        &#39; Write the price.\n        writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;)\n            \n        &#39; Lookup the prefix and write the ISBN element.\n        Dim prefix As String = writer.LookupPrefix(&quot;urn:samples&quot;)\n        writer.WriteStartElement(prefix, &quot;ISBN&quot;, &quot;urn:samples&quot;)\n        writer.WriteString(&quot;1-861003-78&quot;)\n        writer.WriteEndElement()\n            \n        &#39; Write the style element (shows a different way to handle prefixes).\n        writer.WriteElementString(&quot;style&quot;, &quot;urn:samples&quot;, &quot;hardcover&quot;)\n            \n        &#39; Write the close tag for the root element.\n        writer.WriteEndElement()\n            \n        &#39; Write the XML to file and close the writer.\n        writer.Flush()\n        writer.Close()\n        \n        Finally\n            If Not (writer Is Nothing) Then\n                writer.Close()\n            End If\n        End Try\n\n    End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlWriter.WriteElementString#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\npublic ref class Sample\n{\nprivate:\n   static String^ m_Document = L&quot;sampledata.xml&quot;;\n\npublic:\n   static void Main()\n   {\n      XmlWriter^ writer = nullptr;\n      try\n      {\n         XmlWriterSettings^ settings = gcnew XmlWriterSettings;\n         settings-&gt;Indent = true;\n         writer = XmlWriter::Create( m_Document,settings );\n         writer-&gt;WriteComment( L&quot;sample XML fragment&quot; );\n         \n         // Write an element (this one is the root).\n         writer-&gt;WriteStartElement( L&quot;book&quot; );\n         \n         // Write the namespace declaration.\n         writer-&gt;WriteAttributeString( L&quot;xmlns&quot;, L&quot;bk&quot;, nullptr, L&quot;urn:samples&quot; );\n         \n         // Write the genre attribute.\n         writer-&gt;WriteAttributeString( L&quot;genre&quot;, L&quot;novel&quot; );\n         \n         // Write the title.\n         writer-&gt;WriteStartElement( L&quot;title&quot; );\n         writer-&gt;WriteString( L&quot;The Handmaid&#39;s Tale&quot; );\n         writer-&gt;WriteEndElement();\n         \n         // Write the price.\n         writer-&gt;WriteElementString( L&quot;price&quot;, L&quot;19.95&quot; );\n         \n         // Lookup the prefix and write the ISBN element.\n         String^ prefix = writer-&gt;LookupPrefix( L&quot;urn:samples&quot; );\n         writer-&gt;WriteStartElement( prefix, L&quot;ISBN&quot;, L&quot;urn:samples&quot; );\n         writer-&gt;WriteString( L&quot;1-861003-78&quot; );\n         writer-&gt;WriteEndElement();\n         \n         // Write the style element (shows a different way to handle prefixes).\n         writer-&gt;WriteElementString( L&quot;style&quot;, L&quot;urn:samples&quot;, L&quot;hardcover&quot; );\n         \n         // Write the close tag for the root element.\n         writer-&gt;WriteEndElement();\n         \n         // Write the XML to file and close the writer.\n         writer-&gt;Flush();\n         writer-&gt;Close();\n      }\n      finally\n      {\n         if ( writer != nullptr )\n                  writer-&gt;Close();\n      }\n\n   }\n\n};\n\nvoid main()\n{\n   Sample::Main();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteElementString_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteElementString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteElementString(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an element with the specified local name, namespace URI, and value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteElementString (string localName, string ns, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI to associate with the element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>localName</code> value is <code>null</code> or an empty string.  </p>\n<p> -or-  </p>\n<p> The parameter values are not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteElementStringAsync_\" data-linktype=\"relative-path\">WriteElementStringAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses several write methods to create an XML fragment.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlWriter.WriteElementString#1\">using System;\nusing System.IO;\nusing System.Xml;\n \n public class Sample\n {\n   private const string m_Document = &quot;sampledata.xml&quot;;\n \n   public static void Main() {\n   \n      XmlWriter writer = null;\n\n      try {\n     \n        XmlWriterSettings settings = new XmlWriterSettings();\n        settings.Indent = true;\n        writer = XmlWriter.Create (m_Document, settings);\n           \n        writer.WriteComment(&quot;sample XML fragment&quot;);\n     \n        // Write an element (this one is the root).\n        writer.WriteStartElement(&quot;book&quot;);\n \n        // Write the namespace declaration.\n        writer.WriteAttributeString(&quot;xmlns&quot;, &quot;bk&quot;, null, &quot;urn:samples&quot;);\n    \n        // Write the genre attribute.\n        writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;);\n         \n        // Write the title.\n        writer.WriteStartElement(&quot;title&quot;);\n        writer.WriteString(&quot;The Handmaid&#39;s Tale&quot;);\n        writer.WriteEndElement();\n               \n        // Write the price.\n        writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;);\n      \n        // Lookup the prefix and write the ISBN element.\n        string prefix = writer.LookupPrefix(&quot;urn:samples&quot;);\n        writer.WriteStartElement(prefix, &quot;ISBN&quot;, &quot;urn:samples&quot;);\n        writer.WriteString(&quot;1-861003-78&quot;);\n        writer.WriteEndElement();\n\n        // Write the style element (shows a different way to handle prefixes).\n        writer.WriteElementString(&quot;style&quot;, &quot;urn:samples&quot;, &quot;hardcover&quot;);\n \n        // Write the close tag for the root element.\n        writer.WriteEndElement();\n               \n        // Write the XML to file and close the writer.\n        writer.Flush();\n        writer.Close();\n      }\n\n      finally {\n        if (writer != null)\n           writer.Close();\n     } \n   }\n \n }\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlWriter.WriteElementString#1\">Option Strict\nOption Explicit\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    Private Shared m_Document As String = &quot;sampledata.xml&quot;\n    \n    Public Shared Sub Main()\n        Dim writer As XmlWriter = Nothing\n        \n      Try\n\n        Dim settings As XmlWriterSettings = new XmlWriterSettings()\n        settings.Indent = true\n        writer = XmlWriter.Create (m_Document, settings)\n            \n        writer.WriteComment(&quot;sample XML fragment&quot;)\n            \n        &#39; Write an element (this one is the root).\n        writer.WriteStartElement(&quot;book&quot;)\n            \n        &#39; Write the namespace declaration.\n        writer.WriteAttributeString(&quot;xmlns&quot;, &quot;bk&quot;, Nothing, &quot;urn:samples&quot;)\n            \n        &#39; Write the genre attribute.\n        writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;)\n            \n        &#39; Write the title.\n        writer.WriteStartElement(&quot;title&quot;)\n        writer.WriteString(&quot;The Handmaid&#39;s Tale&quot;)\n        writer.WriteEndElement()\n            \n        &#39; Write the price.\n        writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;)\n            \n        &#39; Lookup the prefix and write the ISBN element.\n        Dim prefix As String = writer.LookupPrefix(&quot;urn:samples&quot;)\n        writer.WriteStartElement(prefix, &quot;ISBN&quot;, &quot;urn:samples&quot;)\n        writer.WriteString(&quot;1-861003-78&quot;)\n        writer.WriteEndElement()\n            \n        &#39; Write the style element (shows a different way to handle prefixes).\n        writer.WriteElementString(&quot;style&quot;, &quot;urn:samples&quot;, &quot;hardcover&quot;)\n            \n        &#39; Write the close tag for the root element.\n        writer.WriteEndElement()\n            \n        &#39; Write the XML to file and close the writer.\n        writer.Flush()\n        writer.Close()\n        \n        Finally\n            If Not (writer Is Nothing) Then\n                writer.Close()\n            End If\n        End Try\n\n    End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlWriter.WriteElementString#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\npublic ref class Sample\n{\nprivate:\n   static String^ m_Document = L&quot;sampledata.xml&quot;;\n\npublic:\n   static void Main()\n   {\n      XmlWriter^ writer = nullptr;\n      try\n      {\n         XmlWriterSettings^ settings = gcnew XmlWriterSettings;\n         settings-&gt;Indent = true;\n         writer = XmlWriter::Create( m_Document,settings );\n         writer-&gt;WriteComment( L&quot;sample XML fragment&quot; );\n         \n         // Write an element (this one is the root).\n         writer-&gt;WriteStartElement( L&quot;book&quot; );\n         \n         // Write the namespace declaration.\n         writer-&gt;WriteAttributeString( L&quot;xmlns&quot;, L&quot;bk&quot;, nullptr, L&quot;urn:samples&quot; );\n         \n         // Write the genre attribute.\n         writer-&gt;WriteAttributeString( L&quot;genre&quot;, L&quot;novel&quot; );\n         \n         // Write the title.\n         writer-&gt;WriteStartElement( L&quot;title&quot; );\n         writer-&gt;WriteString( L&quot;The Handmaid&#39;s Tale&quot; );\n         writer-&gt;WriteEndElement();\n         \n         // Write the price.\n         writer-&gt;WriteElementString( L&quot;price&quot;, L&quot;19.95&quot; );\n         \n         // Lookup the prefix and write the ISBN element.\n         String^ prefix = writer-&gt;LookupPrefix( L&quot;urn:samples&quot; );\n         writer-&gt;WriteStartElement( prefix, L&quot;ISBN&quot;, L&quot;urn:samples&quot; );\n         writer-&gt;WriteString( L&quot;1-861003-78&quot; );\n         writer-&gt;WriteEndElement();\n         \n         // Write the style element (shows a different way to handle prefixes).\n         writer-&gt;WriteElementString( L&quot;style&quot;, L&quot;urn:samples&quot;, L&quot;hardcover&quot; );\n         \n         // Write the close tag for the root element.\n         writer-&gt;WriteEndElement();\n         \n         // Write the XML to file and close the writer.\n         writer-&gt;Flush();\n         writer-&gt;Close();\n      }\n      finally\n      {\n         if ( writer != nullptr )\n                  writer-&gt;Close();\n      }\n\n   }\n\n};\n\nvoid main()\n{\n   Sample::Main();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteElementString_System_String_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteElementString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteElementString(String,String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes an element with the specified prefix, local name, namespace URI, and value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteElementString (string prefix, string localName, string ns, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prefix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The prefix of the element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI of the element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>localName</code> value is <code>null</code> or an empty string.  </p>\n<p> -or-  </p>\n<p> The parameter values are not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteElementStringAsync_\" data-linktype=\"relative-path\">WriteElementStringAsync</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteElementStringAsync_System_String_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteElementStringAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteElementStringAsync(String,String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes an element with the specified prefix, local name, namespace URI, and value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task WriteElementStringAsync (string prefix, string localName, string ns, string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prefix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The prefix of the element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI of the element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value of the element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteElementString</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteElementString_\" data-linktype=\"relative-path\">WriteElementString</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteEndAttribute\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteEndAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEndAttribute()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, closes the previous <span class=\"xref\">stem.Xml.XmlWriter.WriteStartAttribute*</span> call.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteEndAttribute ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If you call <code>WriteStartAttribute</code>, you can close the attribute with this method.  </p>\n<p> You can also close the attribute by calling <code>WriteStartAttribute</code> again, calling <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeString_\" data-linktype=\"relative-path\">WriteAttributeString</a>, or calling <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteEndElement_\" data-linktype=\"relative-path\">WriteEndElement</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When you use the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> methods to output XML, the elements and attributes will not be written until you call the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_Close_\" data-linktype=\"relative-path\">Close</a> method. For example, if you are using the XmlWriter to populate an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>, until you close the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>, you will not be able to observe the written elements and attributes in the target document.  </p>\n</div>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteEndAttributeAsync_\" data-linktype=\"relative-path\">WriteEndAttributeAsync</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteEndAttributeAsync\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteEndAttributeAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEndAttributeAsync()</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously closes the previous <span class=\"xref\">stem.Xml.XmlWriter.WriteStartAttribute*</span> call.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Threading.Tasks.Task WriteEndAttributeAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteEndAttribute</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteEndAttribute_\" data-linktype=\"relative-path\">WriteEndAttribute</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteEndDocument\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteEndDocument_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEndDocument()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, closes any open elements or attributes and puts the writer back in the Start state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteEndDocument ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The XML document is invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> When you use the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> methods to output XML, the elements and attributes will not be written until you call the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_Close_\" data-linktype=\"relative-path\">Close</a> method. For example, if you are using the XmlWriter to populate an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>, until you close the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>, you will not be able to observe the written elements and attributes in the target document.  </p>\n</div>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteEndDocumentAsync_\" data-linktype=\"relative-path\">WriteEndDocumentAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes an XML file representing a book.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter.WriteStartDocument#1\">Option Strict\nOption Explicit\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    Private Const filename As String = &quot;sampledata.xml&quot;\n    \n  Public Shared Sub Main()\n\n     Dim settings As XmlWriterSettings = new XmlWriterSettings()\n     settings.Indent = true\n     Dim writer As XmlWriter = XmlWriter.Create(filename, settings)\n        \n     &#39; Write the Processing Instruction node.\n     Dim PItext As String = &quot;type=&quot;&quot;text/xsl&quot;&quot; href=&quot;&quot;book.xsl&quot;&quot;&quot;\n     writer.WriteProcessingInstruction(&quot;xml-stylesheet&quot;, PItext)\n        \n     &#39;Write the DocumentType node.\n     writer.WriteDocType(&quot;book&quot;, Nothing, Nothing, &quot;&lt;!ENTITY h &quot;&quot;hardcover&quot;&quot;&gt;&quot;)\n        \n     &#39; Write a Comment node.\n     writer.WriteComment(&quot;sample XML&quot;)\n        \n     &#39; Write the root element.\n     writer.WriteStartElement(&quot;book&quot;)\n        \n     &#39; Write the genre attribute\n     writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;)\n        \n     &#39; Write the ISBN attribute.\n     writer.WriteAttributeString(&quot;ISBN&quot;, &quot;1-8630-014&quot;)\n        \n     &#39; Write the title.\n     writer.WriteElementString(&quot;title&quot;, &quot;The Handmaid&#39;s Tale&quot;)\n        \n     &#39; Write the style element.\n     writer.WriteStartElement(&quot;style&quot;)\n     writer.WriteEntityRef(&quot;h&quot;)\n     writer.WriteEndElement()\n       \n     &#39; Write the price.\n     writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;)\n        \n     &#39; Write CDATA.\n     writer.WriteCData(&quot;Prices 15% off!!&quot;)\n        \n     &#39; Write the close tag for the root element.\n     writer.WriteEndElement()\n        \n     writer.WriteEndDocument()\n        \n     &#39; Write the XML to file and close the writer\n     writer.Flush()\n     writer.Close()\n        \n    End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter.WriteStartDocument#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample {\n\n  private const string filename = &quot;sampledata.xml&quot;;\n\n  public static void Main() {\n  \n     XmlWriterSettings settings = new XmlWriterSettings();\n     settings.Indent = true;\n     XmlWriter writer = XmlWriter.Create(filename, settings);\n\n     // Write the Processing Instruction node.\n     String PItext=&quot;type=\\&quot;text/xsl\\&quot; href=\\&quot;book.xsl\\&quot;&quot;;\n     writer.WriteProcessingInstruction(&quot;xml-stylesheet&quot;, PItext);\n\n     // Write the DocumentType node.\n     writer.WriteDocType(&quot;book&quot;, null , null, &quot;&lt;!ENTITY h \\&quot;hardcover\\&quot;&gt;&quot;);\n        \n     // Write a Comment node.\n     writer.WriteComment(&quot;sample XML&quot;);\n    \n     // Write the root element.\n     writer.WriteStartElement(&quot;book&quot;);\n\n     // Write the genre attribute.\n     writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;);\n    \n     // Write the ISBN attribute.\n     writer.WriteAttributeString(&quot;ISBN&quot;, &quot;1-8630-014&quot;);\n\n     // Write the title.\n     writer.WriteElementString(&quot;title&quot;, &quot;The Handmaid&#39;s Tale&quot;);\n              \n     // Write the style element.\n     writer.WriteStartElement(&quot;style&quot;);\n     writer.WriteEntityRef(&quot;h&quot;);\n     writer.WriteEndElement(); \n\n     // Write the price.\n     writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;);\n\n     // Write CDATA.\n     writer.WriteCData(&quot;Prices 15% off!!&quot;);\n\n     // Write the close tag for the root element.\n     writer.WriteEndElement();\n             \n     writer.WriteEndDocument();\n\n     // Write the XML to file and close the writer.\n     writer.Flush();\n     writer.Close();  \n  }\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteEndDocumentAsync\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteEndDocumentAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEndDocumentAsync()</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously closes any open elements or attributes and puts the writer back in the Start state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteEndDocumentAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteEndDocument</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteEndDocument_\" data-linktype=\"relative-path\">WriteEndDocument</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteEndElement\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteEndElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEndElement()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, closes one element and pops the corresponding namespace scope.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteEndElement ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the element contains no content, a short end tag &quot;/&gt;&quot; is written; otherwise, a full end tag is written.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When you use the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> methods to output XML, the elements and attributes will not be written until you call the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_Close_\" data-linktype=\"relative-path\">Close</a> method. For example, if you are using the XmlWwriter to populate an <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a>, until you close the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>, you will not be able to observe the written elements and attributes in the target document.  </p>\n</div>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteEndElementAsync_\" data-linktype=\"relative-path\">WriteEndElementAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the WriteEndElement and the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteFullEndElement_\" data-linktype=\"relative-path\">WriteFullEndElement</a> methods.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlWriter.WriteFullEndElement#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample {\n\n  public static void Main() {\n  \n     // Create a writer to write XML to the console.\n     XmlWriterSettings settings = new XmlWriterSettings();\n     settings.Indent = true;\n     XmlWriter writer = XmlWriter.Create(Console.Out, settings);\n\n     // Write the root element.\n     writer.WriteStartElement(&quot;order&quot;);\n\n     // Write an element with attributes.\n     writer.WriteStartElement(&quot;item&quot;);\n     writer.WriteAttributeString(&quot;date&quot;, &quot;2/19/01&quot;);\n     writer.WriteAttributeString(&quot;orderID&quot;, &quot;136A5&quot;);\n\n     // Write a full end element. Because this element has no\n     // content, calling WriteEndElement would have written a\n     // short end tag &#39;/&gt;&#39;.\n     writer.WriteFullEndElement();\n\n     writer.WriteEndElement();\n             \n     // Write the XML to file and close the writer\n     writer.Close();  \n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlWriter.WriteFullEndElement#1\">Option Explicit\nOption Strict\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    \n  Public Shared Sub Main()\n\n     &#39; Create a writer to write XML to the console.\n     Dim settings As XmlWriterSettings = new XmlWriterSettings()\n     settings.Indent = true\n     Dim writer As XmlWriter = XmlWriter.Create(Console.Out, settings)\n        \n     &#39; Write the root element.\n     writer.WriteStartElement(&quot;order&quot;)\n        \n     &#39; Write an element with attributes.\n     writer.WriteStartElement(&quot;item&quot;)\n     writer.WriteAttributeString(&quot;date&quot;, &quot;2/19/01&quot;)\n     writer.WriteAttributeString(&quot;orderID&quot;, &quot;136A5&quot;)\n        \n     &#39; Write a full end element. Because this element has no\n     &#39; content, calling WriteEndElement would have written a\n     &#39; short end tag &#39;/&gt;&#39;.\n     writer.WriteFullEndElement()\n        \n     writer.WriteEndElement()\n\n     &#39; Write the XML to file and close the writer\n     writer.Close()\n\n    End Sub &#39;Main\nEnd Class &#39;Sample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteEndElementAsync\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteEndElementAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEndElementAsync()</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously closes one element and pops the corresponding namespace scope.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteEndElementAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteEndElement</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteEndElement_\" data-linktype=\"relative-path\">WriteEndElement</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteEntityRef_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteEntityRef_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEntityRef(String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes out an entity reference as <code>&amp;name;</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteEntityRef (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the entity reference.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is either <code>null</code> or <code>String.Empty</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteEntityRefAsync_\" data-linktype=\"relative-path\">WriteEntityRefAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes an XML file representing a book.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter.WriteStartDocument#1\">Option Strict\nOption Explicit\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    Private Const filename As String = &quot;sampledata.xml&quot;\n    \n  Public Shared Sub Main()\n\n     Dim settings As XmlWriterSettings = new XmlWriterSettings()\n     settings.Indent = true\n     Dim writer As XmlWriter = XmlWriter.Create(filename, settings)\n        \n     &#39; Write the Processing Instruction node.\n     Dim PItext As String = &quot;type=&quot;&quot;text/xsl&quot;&quot; href=&quot;&quot;book.xsl&quot;&quot;&quot;\n     writer.WriteProcessingInstruction(&quot;xml-stylesheet&quot;, PItext)\n        \n     &#39;Write the DocumentType node.\n     writer.WriteDocType(&quot;book&quot;, Nothing, Nothing, &quot;&lt;!ENTITY h &quot;&quot;hardcover&quot;&quot;&gt;&quot;)\n        \n     &#39; Write a Comment node.\n     writer.WriteComment(&quot;sample XML&quot;)\n        \n     &#39; Write the root element.\n     writer.WriteStartElement(&quot;book&quot;)\n        \n     &#39; Write the genre attribute\n     writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;)\n        \n     &#39; Write the ISBN attribute.\n     writer.WriteAttributeString(&quot;ISBN&quot;, &quot;1-8630-014&quot;)\n        \n     &#39; Write the title.\n     writer.WriteElementString(&quot;title&quot;, &quot;The Handmaid&#39;s Tale&quot;)\n        \n     &#39; Write the style element.\n     writer.WriteStartElement(&quot;style&quot;)\n     writer.WriteEntityRef(&quot;h&quot;)\n     writer.WriteEndElement()\n       \n     &#39; Write the price.\n     writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;)\n        \n     &#39; Write CDATA.\n     writer.WriteCData(&quot;Prices 15% off!!&quot;)\n        \n     &#39; Write the close tag for the root element.\n     writer.WriteEndElement()\n        \n     writer.WriteEndDocument()\n        \n     &#39; Write the XML to file and close the writer\n     writer.Flush()\n     writer.Close()\n        \n    End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter.WriteStartDocument#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample {\n\n  private const string filename = &quot;sampledata.xml&quot;;\n\n  public static void Main() {\n  \n     XmlWriterSettings settings = new XmlWriterSettings();\n     settings.Indent = true;\n     XmlWriter writer = XmlWriter.Create(filename, settings);\n\n     // Write the Processing Instruction node.\n     String PItext=&quot;type=\\&quot;text/xsl\\&quot; href=\\&quot;book.xsl\\&quot;&quot;;\n     writer.WriteProcessingInstruction(&quot;xml-stylesheet&quot;, PItext);\n\n     // Write the DocumentType node.\n     writer.WriteDocType(&quot;book&quot;, null , null, &quot;&lt;!ENTITY h \\&quot;hardcover\\&quot;&gt;&quot;);\n        \n     // Write a Comment node.\n     writer.WriteComment(&quot;sample XML&quot;);\n    \n     // Write the root element.\n     writer.WriteStartElement(&quot;book&quot;);\n\n     // Write the genre attribute.\n     writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;);\n    \n     // Write the ISBN attribute.\n     writer.WriteAttributeString(&quot;ISBN&quot;, &quot;1-8630-014&quot;);\n\n     // Write the title.\n     writer.WriteElementString(&quot;title&quot;, &quot;The Handmaid&#39;s Tale&quot;);\n              \n     // Write the style element.\n     writer.WriteStartElement(&quot;style&quot;);\n     writer.WriteEntityRef(&quot;h&quot;);\n     writer.WriteEndElement(); \n\n     // Write the price.\n     writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;);\n\n     // Write CDATA.\n     writer.WriteCData(&quot;Prices 15% off!!&quot;);\n\n     // Write the close tag for the root element.\n     writer.WriteEndElement();\n             \n     writer.WriteEndDocument();\n\n     // Write the XML to file and close the writer.\n     writer.Flush();\n     writer.Close();  \n  }\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteEntityRefAsync_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteEntityRefAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteEntityRefAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes out an entity reference as <code>&amp;name;</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteEntityRefAsync (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the entity reference.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteEntityRef</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteEntityRef_\" data-linktype=\"relative-path\">WriteEntityRef</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteFullEndElement\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteFullEndElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteFullEndElement()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, closes one element and pops the corresponding namespace scope.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteFullEndElement ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method always writes the full end tag. This is useful when dealing with elements that must include a full end tag. For example, browsers expect HTML script blocks to be closed with &quot;&lt;/script&gt;&quot;.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteFullEndElementAsync_\" data-linktype=\"relative-path\">WriteFullEndElementAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteEndElement_\" data-linktype=\"relative-path\">WriteEndElement</a> and the WriteFullEndElement methods.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlWriter.WriteFullEndElement#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample {\n\n  public static void Main() {\n  \n     // Create a writer to write XML to the console.\n     XmlWriterSettings settings = new XmlWriterSettings();\n     settings.Indent = true;\n     XmlWriter writer = XmlWriter.Create(Console.Out, settings);\n\n     // Write the root element.\n     writer.WriteStartElement(&quot;order&quot;);\n\n     // Write an element with attributes.\n     writer.WriteStartElement(&quot;item&quot;);\n     writer.WriteAttributeString(&quot;date&quot;, &quot;2/19/01&quot;);\n     writer.WriteAttributeString(&quot;orderID&quot;, &quot;136A5&quot;);\n\n     // Write a full end element. Because this element has no\n     // content, calling WriteEndElement would have written a\n     // short end tag &#39;/&gt;&#39;.\n     writer.WriteFullEndElement();\n\n     writer.WriteEndElement();\n             \n     // Write the XML to file and close the writer\n     writer.Close();  \n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlWriter.WriteFullEndElement#1\">Option Explicit\nOption Strict\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    \n  Public Shared Sub Main()\n\n     &#39; Create a writer to write XML to the console.\n     Dim settings As XmlWriterSettings = new XmlWriterSettings()\n     settings.Indent = true\n     Dim writer As XmlWriter = XmlWriter.Create(Console.Out, settings)\n        \n     &#39; Write the root element.\n     writer.WriteStartElement(&quot;order&quot;)\n        \n     &#39; Write an element with attributes.\n     writer.WriteStartElement(&quot;item&quot;)\n     writer.WriteAttributeString(&quot;date&quot;, &quot;2/19/01&quot;)\n     writer.WriteAttributeString(&quot;orderID&quot;, &quot;136A5&quot;)\n        \n     &#39; Write a full end element. Because this element has no\n     &#39; content, calling WriteEndElement would have written a\n     &#39; short end tag &#39;/&gt;&#39;.\n     writer.WriteFullEndElement()\n        \n     writer.WriteEndElement()\n\n     &#39; Write the XML to file and close the writer\n     writer.Close()\n\n    End Sub &#39;Main\nEnd Class &#39;Sample\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteFullEndElementAsync\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteFullEndElementAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteFullEndElementAsync()</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously closes one element and pops the corresponding namespace scope.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteFullEndElementAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteFullEndElement</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteFullEndElement_\" data-linktype=\"relative-path\">WriteFullEndElement</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteName_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteName(String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (<a href=\"http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name\" data-linktype=\"external\">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name</a>).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteName (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is not a valid XML name; or <code>name</code> is either <code>null</code> or <code>String.Empty</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <a class=\"xref\" href=\"system.xml.xmltextwriter#System_Xml_XmlTextWriter_Namespaces_\" data-linktype=\"relative-path\">Namespaces</a> is set to <code>true</code>, <code>WriteName</code> also checks that the name is also valid according to the W3C Namespaces in XML recommendation.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteNameAsync_\" data-linktype=\"relative-path\">WriteNameAsync</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteNameAsync_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteNameAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteNameAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (<a href=\"http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name\" data-linktype=\"external\">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name</a>).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteNameAsync (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteName</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteName_\" data-linktype=\"relative-path\">WriteName</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteNmToken_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteNmToken_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteNmToken(String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (<a href=\"http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name\" data-linktype=\"external\">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name</a>).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteNmToken (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>name</code> is not a valid NmToken; or <code>name</code> is either <code>null</code> or <code>String.Empty</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteNmTokenAsync_\" data-linktype=\"relative-path\">WriteNmTokenAsync</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteNmTokenAsync_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteNmTokenAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteNmTokenAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes out the specified name, ensuring it is a valid NmToken according to the W3C XML 1.0 recommendation (<a href=\"http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name\" data-linktype=\"external\">http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name</a>).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteNmTokenAsync (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteNmToken</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteNmToken_\" data-linktype=\"relative-path\">WriteNmToken</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteNode_System_Xml_XmlReader_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteNode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteNode(XmlReader,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, copies everything from the reader to the writer and moves the reader to the start of the next sibling.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteNode (System.Xml.XmlReader reader, bool defattr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> to read from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>defattr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to copy the default attributes from the <code>XmlReader</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>reader</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>reader</code> contains invalid characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table shows the supported node types for this method.  </p>\n<table>\n<thead>\n<tr>\n<th>NodeType</th>\n<th>WriteNode Behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>None</code></td>\n<td>Writes out all the nodes irrespective of type. That is, the writer consumes the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> and writes out all the nodes read including attributes, processing instructions, comments, and so on.<br><br> This situation occurs when the <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> is in an initial state. (The <a class=\"xref\" href=\"system.xml.xmlreader#System_Xml_XmlReader_ReadState_\" data-linktype=\"relative-path\">ReadState</a> property returns <code>ReaderState.Initial</code>).</td>\n</tr>\n<tr>\n<td><code>Element</code></td>\n<td>Writes out the element node and any attribute nodes.</td>\n</tr>\n<tr>\n<td><code>Attribute</code></td>\n<td>No operation. Use <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartAttribute_\" data-linktype=\"relative-path\">WriteStartAttribute</a> or <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeString_\" data-linktype=\"relative-path\">WriteAttributeString</a> instead.</td>\n</tr>\n<tr>\n<td><code>Text</code></td>\n<td>Writes out the text node.</td>\n</tr>\n<tr>\n<td><code>CDATA</code></td>\n<td>Writes out the CDATA section node.</td>\n</tr>\n<tr>\n<td><code>EntityReference</code></td>\n<td>Writes out the entity reference node.</td>\n</tr>\n<tr>\n<td><code>ProcessingInstruction</code></td>\n<td>Writes out the processing instruction node.</td>\n</tr>\n<tr>\n<td><code>Comment</code></td>\n<td>Writes out the comment node.</td>\n</tr>\n<tr>\n<td><code>DocumentType</code></td>\n<td>Writes out the document type node.</td>\n</tr>\n<tr>\n<td><code>SignificantWhitespace</code></td>\n<td>Writes out the significant white space node.</td>\n</tr>\n<tr>\n<td><code>Whitespace</code></td>\n<td>Writes out the white space node.</td>\n</tr>\n<tr>\n<td><code>EndElement</code></td>\n<td>Writes out the end element tag.</td>\n</tr>\n<tr>\n<td><code>EndEntity</code></td>\n<td>No operation.</td>\n</tr>\n<tr>\n<td><code>XmlDeclaration</code></td>\n<td>Writes out the XML declaration node.</td>\n</tr>\n</tbody>\n</table>\n<p> If the reader is in the initial state, this method moves the reader to the end of file. If the reader is already at the end of file or in a closed state, this method is non-operational.  </p>\n<p> The following C# code copies an entire XML input document to the console:  </p>\n<pre><code>XmlReader reader = XmlReader.Create(myfile);  \nXmlWriter writer = XmlWriter.Create(Console.Out);  \nwriter.WriteNode(reader, false);\n</code></pre><p> If you have moved off the root node and are positioned elsewhere in the document the following C# example correctly writes out the nodes.  </p>\n<pre><code>XmlReader reader = XmlReader.Create(myfile);  \nreader.Read(); // Read PI  \nreader.Read(); // Read Comment  \nreader.Read(); // Read DOCType  \nXmlWriter writer = XmlWriter.Create(Console.Out);  \nwhile (!reader.EOF){  \n  writer.WriteNode(reader, false);  \n }\n</code></pre><p> If the reader is configured to return white space and the writer has is configured to indent output, <code>WriteNode</code> may produce strange output. You will essentially be getting double formatting.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteNodeAsync_\" data-linktype=\"relative-path\">WriteNodeAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes the first and last book nodes out to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"XmlWriter.WriteNode#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlTextReader^ reader = gcnew XmlTextReader( &quot;books.xml&quot; );\n   reader-&gt;WhitespaceHandling = WhitespaceHandling::None;\n   \n   // Move the reader to the first book element.\n   reader-&gt;MoveToContent();\n   reader-&gt;Read();\n   \n   // Create a writer that outputs to the console.\n   XmlTextWriter^ writer = gcnew XmlTextWriter( Console::Out );\n   writer-&gt;Formatting = Formatting::Indented;\n   \n   // Write the start tag.\n   writer-&gt;WriteStartElement( &quot;myBooks&quot; );\n   \n   // Write the first book.\n   writer-&gt;WriteNode( reader, false );\n   \n   // Skip the second book.\n   reader-&gt;Skip();\n   \n   // Write the last book.\n   writer-&gt;WriteNode( reader, false );\n   writer-&gt;WriteEndElement();\n   \n   // Close the writer and the reader.\n   writer-&gt;Close();\n   reader-&gt;Close();\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter.WriteNode#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample{\n\n  public static void Main(){\n\n    XmlTextReader reader = new XmlTextReader(&quot;books.xml&quot;);\n    reader.WhitespaceHandling = WhitespaceHandling.None;\n\n    //Move the reader to the first book element.\n    reader.MoveToContent();\n    reader.Read();\n\n    //Create a writer that outputs to the console.\n    XmlTextWriter writer = new XmlTextWriter (Console.Out);\n    writer.Formatting = Formatting.Indented;\n\t\n    //Write the start tag.\n    writer.WriteStartElement(&quot;myBooks&quot;);\n\n    //Write the first book.\n    writer.WriteNode(reader, false);\n\n    //Skip the second book.\n    reader.Skip();\n\n    //Write the last book.\n    writer.WriteNode(reader, false);\n    writer.WriteEndElement();\n\n    //Close the writer and the reader.\n    writer.Close();\n    reader.Close();\n\n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlWriter.WriteNode#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim reader as XmlTextReader = new XmlTextReader(&quot;books.xml&quot;)\n    reader.WhitespaceHandling = WhitespaceHandling.None\n\n    &#39;Move the reader to the first book element.\n    reader.MoveToContent()\n    reader.Read()\n\n    &#39;Create a writer that outputs to the console.\n    Dim writer as XmlTextWriter = new XmlTextWriter (Console.Out)\n    writer.Formatting = Formatting.Indented\n\t\n    &#39;Write the start tag.\n    writer.WriteStartElement(&quot;myBooks&quot;)\n\n    &#39;Write the first book.\n    writer.WriteNode(reader, false)\n\n    &#39;Skip the second book.\n    reader.Skip()\n\n    &#39;Write the last book.\n    writer.WriteNode(reader, false)\n    writer.WriteEndElement()\n\n    &#39;Close the writer and the reader.\n    writer.Close()\n    reader.Close()\n\n  end sub\nend class\n</code></pre><p> The example uses the file, <code>books.xml</code>, as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XmlWriter.WriteNode#2\">&lt;bookstore&gt;\n  &lt;book genre=&quot;autobiography&quot; publicationdate=&quot;1981&quot; ISBN=&quot;1-861003-11-0&quot;&gt;\n    &lt;title&gt;The Autobiography of Benjamin Franklin&lt;/title&gt;\n    &lt;author&gt;\n      &lt;first-name&gt;Benjamin&lt;/first-name&gt;\n      &lt;last-name&gt;Franklin&lt;/last-name&gt;\n    &lt;/author&gt;\n    &lt;price&gt;8.99&lt;/price&gt;\n  &lt;/book&gt;\n  &lt;book genre=&quot;novel&quot; publicationdate=&quot;1967&quot; ISBN=&quot;0-201-63361-2&quot;&gt;\n    &lt;title&gt;The Confidence Man&lt;/title&gt;\n    &lt;author&gt;\n      &lt;first-name&gt;Herman&lt;/first-name&gt;\n      &lt;last-name&gt;Melville&lt;/last-name&gt;\n    &lt;/author&gt;\n    &lt;price&gt;11.99&lt;/price&gt;\n  &lt;/book&gt;\n  &lt;book genre=&quot;philosophy&quot; publicationdate=&quot;1991&quot; ISBN=&quot;1-861001-57-6&quot;&gt;\n    &lt;title&gt;The Gorgias&lt;/title&gt;\n    &lt;author&gt;\n      &lt;name&gt;Plato&lt;/name&gt;\n    &lt;/author&gt;\n    &lt;price&gt;9.99&lt;/price&gt;\n  &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteNode_System_Xml_XPath_XPathNavigator_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteNode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteNode(XPathNavigator,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Copies everything from the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> object to the writer. The position of the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> remains unchanged.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteNode (System.Xml.XPath.XPathNavigator navigator, bool defattr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>navigator</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> to copy from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>defattr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to copy the default attributes; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>navigator</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table shows the supported <code>XPath</code> node types for this method.  </p>\n<table>\n<thead>\n<tr>\n<th>XPathNodeType</th>\n<th>WriteNode Behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>Root</code></td>\n<td>Writes out all the nodes irrespective of type. That is, the writer consumes the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> and writes out all the nodes from the root node (including attributes, processing instructions, comments and so on.)</td>\n</tr>\n<tr>\n<td><code>Element</code></td>\n<td>Writes out the element node and any attribute nodes.</td>\n</tr>\n<tr>\n<td><code>Attribute</code></td>\n<td>No operation. Use <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartAttribute_\" data-linktype=\"relative-path\">WriteStartAttribute</a> or <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeString_\" data-linktype=\"relative-path\">WriteAttributeString</a> instead.</td>\n</tr>\n<tr>\n<td><code>Text</code></td>\n<td>Writes out the text node.</td>\n</tr>\n<tr>\n<td><code>Namespace</code></td>\n<td>No operation. Use the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartAttribute_\" data-linktype=\"relative-path\">WriteStartAttribute</a> or <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeString_\" data-linktype=\"relative-path\">WriteAttributeString</a> method to write the namespace declaration.</td>\n</tr>\n<tr>\n<td><code>ProcessingInstruction</code></td>\n<td>Writes out the processing instruction node.</td>\n</tr>\n<tr>\n<td><code>Comment</code></td>\n<td>Writes out the comment node.</td>\n</tr>\n<tr>\n<td><code>SignificantWhitespace</code></td>\n<td>Writes out the significant white space node.</td>\n</tr>\n<tr>\n<td><code>Whitespace</code></td>\n<td>Writes out the white space node.</td>\n</tr>\n</tbody>\n</table>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteNodeAsync_\" data-linktype=\"relative-path\">WriteNodeAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the WriteNode method to copy the first book node from a document and write it to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlWriteNode_nav#1\">using System;\nusing System.IO;\nusing System.Xml;\nusing System.Xml.XPath;\n\npublic class Sample\n{\n\n    public static void Main()\n    {\n\n        XPathDocument doc = new XPathDocument(&quot;books.xml&quot;);\n        XPathNavigator nav = doc.CreateNavigator();\n\n        // Create a writer that outputs to the console.\n        XmlWriter writer = XmlWriter.Create(Console.Out);\n\n        // Write the start tag.\n        writer.WriteStartElement(&quot;myBooks&quot;);\n\n        // Write the first book.\n        nav.MoveToChild(&quot;bookstore&quot;, &quot;&quot;);\n        nav.MoveToChild(&quot;book&quot;, &quot;&quot;);\n        writer.WriteNode(nav, false);\n\n        // Close the start tag.\n        writer.WriteEndElement();\n\n        // Close the writer.\n        writer.Close();\n\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlWriteNode_nav#1\">Imports System\nImports System.IO\nImports System.Xml\nImports System.Xml.XPath\n\nModule Module1\n\n    Sub Main()\n\n        Dim doc As XPathDocument = New XPathDocument(&quot;books.xml&quot;)\n        Dim nav As XPathNavigator = doc.CreateNavigator()\n\n        &#39; Create a writer that outputs to the console.\n        Dim writer As XmlWriter = XmlWriter.Create(Console.Out)\n\n        &#39; Write the start tag.\n        writer.WriteStartElement(&quot;myBooks&quot;)\n\n        &#39; Write the first book.\n        nav.MoveToChild(&quot;bookstore&quot;, &quot;&quot;)\n        nav.MoveToChild(&quot;book&quot;, &quot;&quot;)\n        writer.WriteNode(nav, False)\n\n        &#39; Close the start tag.\n        writer.WriteEndElement()\n\n        &#39; Close the writer.\n        writer.Close()\n\n    End Sub\nEnd Module\n</code></pre><p> The example uses the books.xml file as input.  </p>\n<pre><code class=\"lang-xml\" name=\"XPathXMLExamples#1\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt; \n&lt;bookstore&gt;\n    &lt;book genre=&quot;autobiography&quot; publicationdate=&quot;1981-03-22&quot; ISBN=&quot;1-861003-11-0&quot;&gt;\n        &lt;title&gt;The Autobiography of Benjamin Franklin&lt;/title&gt;\n        &lt;author&gt;\n            &lt;first-name&gt;Benjamin&lt;/first-name&gt;\n            &lt;last-name&gt;Franklin&lt;/last-name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;8.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book genre=&quot;novel&quot; publicationdate=&quot;1967-11-17&quot; ISBN=&quot;0-201-63361-2&quot;&gt;\n        &lt;title&gt;The Confidence Man&lt;/title&gt;\n        &lt;author&gt;\n            &lt;first-name&gt;Herman&lt;/first-name&gt;\n            &lt;last-name&gt;Melville&lt;/last-name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;11.99&lt;/price&gt;\n    &lt;/book&gt;\n    &lt;book genre=&quot;philosophy&quot; publicationdate=&quot;1991-02-15&quot; ISBN=&quot;1-861001-57-6&quot;&gt;\n        &lt;title&gt;The Gorgias&lt;/title&gt;\n        &lt;author&gt;\n            &lt;name&gt;Plato&lt;/name&gt;\n        &lt;/author&gt;\n        &lt;price&gt;9.99&lt;/price&gt;\n    &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteNodeAsync_System_Xml_XmlReader_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteNodeAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteNodeAsync(XmlReader,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously copies everything from the reader to the writer and moves the reader to the start of the next sibling.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteNodeAsync (System.Xml.XmlReader reader, bool defattr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>reader</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlreader\" data-linktype=\"relative-path\">XmlReader</a> to read from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>defattr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to copy the default attributes from the <code>XmlReader</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteNode</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteNode_\" data-linktype=\"relative-path\">WriteNode</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteNodeAsync_System_Xml_XPath_XPathNavigator_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteNodeAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteNodeAsync(XPathNavigator,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously copies everything from the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> object to the writer. The position of the <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> remains unchanged.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteNodeAsync (System.Xml.XPath.XPathNavigator navigator, bool defattr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>navigator</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xpath.xpathnavigator\" data-linktype=\"relative-path\">XPathNavigator</a> to copy from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>defattr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to copy the default attributes; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteNode</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteNode_\" data-linktype=\"relative-path\">WriteNode</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteProcessingInstruction_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteProcessingInstruction_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteProcessingInstruction(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteProcessingInstruction (string name, string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the processing instruction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to include in the processing instruction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The text would result in a non-well formed XML document.  </p>\n<p> <code>name</code> is either <code>null</code> or <code>String.Empty</code>.  </p>\n<p> This method is being used to create an XML declaration after <span class=\"xref\">stem.Xml.XmlWriter.WriteStartDocument*</span> has already been called.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method can be used to write the XML declaration (rather than <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartDocument_\" data-linktype=\"relative-path\">WriteStartDocument</a>). This could result in the encoding attribute being incorrectly written. For example, the following C# code would result in an invalid XML document because the default encoding is UTF-8.  </p>\n<pre><code>XmlWriter writer = XmlWriter.Create(&quot;output.xml&quot;);  \nwriter.WriteProcessingInstruction(&quot;xml&quot;, &quot;version=&#39;1.0&#39; encoding=&#39;UTF-16&#39;&quot;);  \nwriter.WriteStartElement(&quot;root&quot;);  \nwriter.Close();\n</code></pre><p> If <code>text</code> is either <code>null</code> or <code>String.Empty</code>, this method writes a <code>ProcessingInstruction</code> with no data content, for example &lt;?name?&gt;.  </p>\n<p> If text contains an invalid sequence of &quot;?&gt;&quot;, the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> can either throw an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> (<a class=\"xref\" href=\"system.xml.xmltextwriter\" data-linktype=\"relative-path\">XmlTextWriter</a> objects) or insert a space &quot;? &gt;&quot; to avoid writing invalid XML (<a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> objects created by the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_Create_\" data-linktype=\"relative-path\">Create</a> method).  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteProcessingInstructionAsync_\" data-linktype=\"relative-path\">WriteProcessingInstructionAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes an XML file representing a book.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter.WriteStartDocument#1\">Option Strict\nOption Explicit\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    Private Const filename As String = &quot;sampledata.xml&quot;\n    \n  Public Shared Sub Main()\n\n     Dim settings As XmlWriterSettings = new XmlWriterSettings()\n     settings.Indent = true\n     Dim writer As XmlWriter = XmlWriter.Create(filename, settings)\n        \n     &#39; Write the Processing Instruction node.\n     Dim PItext As String = &quot;type=&quot;&quot;text/xsl&quot;&quot; href=&quot;&quot;book.xsl&quot;&quot;&quot;\n     writer.WriteProcessingInstruction(&quot;xml-stylesheet&quot;, PItext)\n        \n     &#39;Write the DocumentType node.\n     writer.WriteDocType(&quot;book&quot;, Nothing, Nothing, &quot;&lt;!ENTITY h &quot;&quot;hardcover&quot;&quot;&gt;&quot;)\n        \n     &#39; Write a Comment node.\n     writer.WriteComment(&quot;sample XML&quot;)\n        \n     &#39; Write the root element.\n     writer.WriteStartElement(&quot;book&quot;)\n        \n     &#39; Write the genre attribute\n     writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;)\n        \n     &#39; Write the ISBN attribute.\n     writer.WriteAttributeString(&quot;ISBN&quot;, &quot;1-8630-014&quot;)\n        \n     &#39; Write the title.\n     writer.WriteElementString(&quot;title&quot;, &quot;The Handmaid&#39;s Tale&quot;)\n        \n     &#39; Write the style element.\n     writer.WriteStartElement(&quot;style&quot;)\n     writer.WriteEntityRef(&quot;h&quot;)\n     writer.WriteEndElement()\n       \n     &#39; Write the price.\n     writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;)\n        \n     &#39; Write CDATA.\n     writer.WriteCData(&quot;Prices 15% off!!&quot;)\n        \n     &#39; Write the close tag for the root element.\n     writer.WriteEndElement()\n        \n     writer.WriteEndDocument()\n        \n     &#39; Write the XML to file and close the writer\n     writer.Flush()\n     writer.Close()\n        \n    End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter.WriteStartDocument#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample {\n\n  private const string filename = &quot;sampledata.xml&quot;;\n\n  public static void Main() {\n  \n     XmlWriterSettings settings = new XmlWriterSettings();\n     settings.Indent = true;\n     XmlWriter writer = XmlWriter.Create(filename, settings);\n\n     // Write the Processing Instruction node.\n     String PItext=&quot;type=\\&quot;text/xsl\\&quot; href=\\&quot;book.xsl\\&quot;&quot;;\n     writer.WriteProcessingInstruction(&quot;xml-stylesheet&quot;, PItext);\n\n     // Write the DocumentType node.\n     writer.WriteDocType(&quot;book&quot;, null , null, &quot;&lt;!ENTITY h \\&quot;hardcover\\&quot;&gt;&quot;);\n        \n     // Write a Comment node.\n     writer.WriteComment(&quot;sample XML&quot;);\n    \n     // Write the root element.\n     writer.WriteStartElement(&quot;book&quot;);\n\n     // Write the genre attribute.\n     writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;);\n    \n     // Write the ISBN attribute.\n     writer.WriteAttributeString(&quot;ISBN&quot;, &quot;1-8630-014&quot;);\n\n     // Write the title.\n     writer.WriteElementString(&quot;title&quot;, &quot;The Handmaid&#39;s Tale&quot;);\n              \n     // Write the style element.\n     writer.WriteStartElement(&quot;style&quot;);\n     writer.WriteEntityRef(&quot;h&quot;);\n     writer.WriteEndElement(); \n\n     // Write the price.\n     writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;);\n\n     // Write CDATA.\n     writer.WriteCData(&quot;Prices 15% off!!&quot;);\n\n     // Write the close tag for the root element.\n     writer.WriteEndElement();\n             \n     writer.WriteEndDocument();\n\n     // Write the XML to file and close the writer.\n     writer.Flush();\n     writer.Close();  \n  }\n\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteProcessingInstructionAsync_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteProcessingInstructionAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteProcessingInstructionAsync(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteProcessingInstructionAsync (string name, string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the processing instruction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to include in the processing instruction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteProcessingInstruction</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteProcessingInstruction_\" data-linktype=\"relative-path\">WriteProcessingInstruction</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteQualifiedName_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteQualifiedName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteQualifiedName(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteQualifiedName (string localName, string ns);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI for the name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>localName</code> is either <code>null</code> or <code>String.Empty</code>.  </p>\n<p> <code>localName</code> is not a valid name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>ns</code> maps to the current default namespace, no prefix is generated.  </p>\n<p> When writing attribute values, this method generates a prefix if <code>ns</code> is not found. When writing element content, it throws an exception if <code>ns</code> is not found.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If a class derived from the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> does not override this method <code>localName</code> is not checked to be a valid W3C XML name. In such case, before calling this method, the validity of the string can be checked by <a class=\"xref\" href=\"system.xml.xmlreader#System_Xml_XmlReader_IsName_\" data-linktype=\"relative-path\">IsName</a> method.  </p>\n</div>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteQualifiedNameAsync_\" data-linktype=\"relative-path\">WriteQualifiedNameAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The example writes the following element:  </p>\n<pre><code>&lt;root xmlns:x=&quot;urn:abc&quot;&gt;  \n  &lt;item href=&quot;#x:test&quot;/&gt;  \n&lt;/root&gt;\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlWriter_v2#5\">Dim settings As New XmlWriterSettings()\nsettings.Indent = True\nsettings.OmitXmlDeclaration = True\nUsing writer As XmlWriter = XmlWriter.Create(Console.Out, settings)\n  writer.WriteStartElement(&quot;root&quot;)\n  writer.WriteAttributeString(&quot;xmlns&quot;, &quot;x&quot;, Nothing, &quot;urn:abc&quot;)\n  writer.WriteStartElement(&quot;item&quot;)\n  writer.WriteStartAttribute(&quot;href&quot;, Nothing)\n  writer.WriteString(&quot;#&quot;)\n  writer.WriteQualifiedName(&quot;test&quot;, &quot;urn:abc&quot;)\n  writer.WriteEndAttribute()\n  writer.WriteEndElement()\n  writer.WriteEndElement()\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter_v2#5\">        XmlWriterSettings settings = new XmlWriterSettings();\n        settings.Indent = true;\n        settings.OmitXmlDeclaration = true;\n        using (XmlWriter writer = XmlWriter.Create(Console.Out, settings))\n        {\n            writer.WriteStartElement(&quot;root&quot;);\n            writer.WriteAttributeString(&quot;xmlns&quot;, &quot;x&quot;, null, &quot;urn:abc&quot;);\n            writer.WriteStartElement(&quot;item&quot;);\n            writer.WriteStartAttribute(&quot;href&quot;, null);\n            writer.WriteString(&quot;#&quot;);\n            writer.WriteQualifiedName(&quot;test&quot;, &quot;urn:abc&quot;);\n            writer.WriteEndAttribute();\n            writer.WriteEndElement();\n            writer.WriteEndElement();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteQualifiedNameAsync_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteQualifiedNameAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteQualifiedNameAsync(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes out the namespace-qualified name. This method looks up the prefix that is in scope for the given namespace.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteQualifiedNameAsync (string localName, string ns);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI for the name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteQualifiedName</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteQualifiedName_\" data-linktype=\"relative-path\">WriteQualifiedName</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteRaw_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteRaw_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteRaw(String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes raw markup manually from a string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteRaw (string data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>String containing the text to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>data</code> is either <code>null</code> or <code>String.Empty</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method does not escape special characters.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> does not validate the data that is passed to the WriteRaw method. You should not pass arbitrary data to this method.  </p>\n</div>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteRawAsync_\" data-linktype=\"relative-path\">WriteRawAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>See <a class=\"xref\" href=\"system.xml.xmltextwriter#System_Xml_XmlTextWriter_WriteRaw_\" data-linktype=\"relative-path\">WriteRaw</a> for an example using this method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteRaw_System_Char___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteRaw_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteRaw(Char[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes raw markup manually from a character buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteRaw (char[] buffer, int index, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Character array containing the text to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The position within the buffer indicating the start of the text to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>buffer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> or <code>count</code> is less than zero.  </p>\n<p> -or-  </p>\n<p> The buffer length minus <code>index</code> is less than <code>count</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method does not escape special characters.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> does not validate the data that is passed to the WriteRaw method. You should not pass arbitrary data to this method.  </p>\n</div>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteRawAsync_\" data-linktype=\"relative-path\">WriteRawAsync</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteRawAsync_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteRawAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteRawAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes raw markup manually from a string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteRawAsync (string data);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>data</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>String containing the text to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteRaw</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteRaw_\" data-linktype=\"relative-path\">WriteRaw</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteRawAsync_System_Char___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteRawAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteRawAsync(Char[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes raw markup manually from a character buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteRawAsync (char[] buffer, int index, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>buffer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Character array containing the text to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The position within the buffer indicating the start of the text to write.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of characters to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteRaw</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteRaw_\" data-linktype=\"relative-path\">WriteRaw</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteStartAttribute_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteStartAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteStartAttribute(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the start of an attribute with the specified local name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteStartAttribute (string localName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enables you to write a value using multiple Write methods.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartAttributeAsync_\" data-linktype=\"relative-path\">WriteStartAttributeAsync</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteStartAttribute_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteStartAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteStartAttribute(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the start of an attribute with the specified local name and namespace URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteStartAttribute (string localName, string ns);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI of the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is a more advanced version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteAttributeString_\" data-linktype=\"relative-path\">WriteAttributeString</a> that allows you to write an attribute value using multiple write methods, such as <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteString_\" data-linktype=\"relative-path\">WriteString</a>, <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteQualifiedName_\" data-linktype=\"relative-path\">WriteQualifiedName</a>, and so on.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartAttributeAsync_\" data-linktype=\"relative-path\">WriteStartAttributeAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>See <a class=\"xref\" href=\"system.xml.xmltextwriter#System_Xml_XmlTextWriter_WriteStartAttribute_\" data-linktype=\"relative-path\">WriteStartAttribute</a> for an example using this method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteStartAttribute_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteStartAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteStartAttribute(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes the start of an attribute with the specified prefix, local name, and namespace URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteStartAttribute (string prefix, string localName, string ns);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prefix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace prefix of the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI for the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method enables you to write a value using multiple Write methods.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartAttributeAsync_\" data-linktype=\"relative-path\">WriteStartAttributeAsync</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteStartAttributeAsync_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteStartAttributeAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteStartAttributeAsync(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes the start of an attribute with the specified prefix, local name, and namespace URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Threading.Tasks.Task WriteStartAttributeAsync (string prefix, string localName, string ns);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prefix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace prefix of the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI for the attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteStartAttribute</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartAttribute_\" data-linktype=\"relative-path\">WriteStartAttribute</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteStartDocument\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteStartDocument_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteStartDocument()</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes the XML declaration with the version &quot;1.0&quot;.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteStartDocument ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The encoding level of the document is determined by how the writer is implemented. For example, if an <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> object is specified in the <code>XmlTextWriter</code> constructor, this determines the value of the encoding attribute. This method does not create a standalone attribute.  </p>\n<p> When <code>WriteStartDocument</code> is called the writer validates that what you are writing is a well-formed XML document. For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on. If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.  </p>\n<p> If <code>WriteStartDocument</code> has been called and then the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteProcessingInstruction_\" data-linktype=\"relative-path\">WriteProcessingInstruction</a> method is used to create another XML declaration, an exception will be thrown.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartDocumentAsync_\" data-linktype=\"relative-path\">WriteStartDocumentAsync</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteStartDocument_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteStartDocument_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteStartDocument(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes the XML declaration with the version &quot;1.0&quot; and the standalone attribute.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteStartDocument (bool standalone);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>standalone</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>If <code>true</code>, it writes &quot;standalone=yes&quot;; if <code>false</code>, it writes &quot;standalone=no&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The encoding level of the document is determined by how the writer is implemented. For example, if an <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> object is specified in the <code>XmlTextWriter</code> constructor, this determines the value of the encoding attribute.  </p>\n<p> When <code>WriteStartDocument</code> is called, the writer validates that what you are writing is a well-formed XML document. For example, it checks that the XML declaration is the first node, that one and only one root-level element exists, and so on. If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.  </p>\n<p> If <code>WriteStartDocument</code> has been called and then the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteProcessingInstruction_\" data-linktype=\"relative-path\">WriteProcessingInstruction</a> method is used to create another XML declaration, an exception will be thrown.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartDocumentAsync_\" data-linktype=\"relative-path\">WriteStartDocumentAsync</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteStartDocumentAsync\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteStartDocumentAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteStartDocumentAsync()</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes the XML declaration with the version &quot;1.0&quot;.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteStartDocumentAsync ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteStartDocument</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartDocument_\" data-linktype=\"relative-path\">WriteStartDocument</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteStartDocumentAsync_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteStartDocumentAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteStartDocumentAsync(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes the XML declaration with the version &quot;1.0&quot; and the standalone attribute.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteStartDocumentAsync (bool standalone);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>standalone</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>If <code>true</code>, it writes &quot;standalone=yes&quot;; if <code>false</code>, it writes &quot;standalone=no&quot;.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteStartDocument</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartDocument_\" data-linktype=\"relative-path\">WriteStartDocument</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteStartElement_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteStartElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteStartElement(String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes out a start tag with the specified local name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteStartElement (string localName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartElementAsync_\" data-linktype=\"relative-path\">WriteStartElementAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes an XML node.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter.Close#1\">Option Explicit\nOption Strict\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    \n  Public Shared Sub Main()\n\n     &#39; Create a writer to write XML to the console.\n     Dim settings As XmlWriterSettings = new XmlWriterSettings()\n     settings.Indent = true\n     settings.OmitXmlDeclaration = true\n     Dim writer As XmlWriter = XmlWriter.Create(Console.Out, settings)\n\n     &#39; Write the book element.\n     writer.WriteStartElement(&quot;book&quot;)\n        \n     &#39; Write the title element.\n     writer.WriteStartElement(&quot;title&quot;)\n     writer.WriteString(&quot;Pride And Prejudice&quot;)\n     writer.WriteEndElement()\n        \n     &#39; Write the close tag for the root element.\n     writer.WriteEndElement()\n        \n     &#39; Write the XML and close the writer.\n     writer.Close()\n\n  End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlWriter.Close#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   \n   // Create a writer to write XML to the console.\n   XmlWriterSettings^ settings = gcnew XmlWriterSettings;\n   settings-&gt;Indent = true;\n   settings-&gt;OmitXmlDeclaration = true;\n   XmlWriter^ writer = XmlWriter::Create( Console::Out, settings );\n   \n   // Write the book element.\n   writer-&gt;WriteStartElement( L&quot;book&quot; );\n   \n   // Write the title element.\n   writer-&gt;WriteStartElement( L&quot;title&quot; );\n   writer-&gt;WriteString( L&quot;Pride And Prejudice&quot; );\n   writer-&gt;WriteEndElement();\n   \n   // Write the close tag for the root element.\n   writer-&gt;WriteEndElement();\n   \n   // Write the XML and close the writer.\n   writer-&gt;Close();\n   return 1;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter.Close#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample {\n  \n  public static void Main() {\n  \n     // Create a writer to write XML to the console.\n     XmlWriterSettings settings = new XmlWriterSettings();\n     settings.Indent = true;\n     settings.OmitXmlDeclaration = true;\n     XmlWriter writer = XmlWriter.Create(Console.Out, settings);\n\n     // Write the book element.\n     writer.WriteStartElement(&quot;book&quot;);\n\n     // Write the title element.\n     writer.WriteStartElement(&quot;title&quot;);\n     writer.WriteString(&quot;Pride And Prejudice&quot;);\n     writer.WriteEndElement();\n\n     // Write the close tag for the root element.\n     writer.WriteEndElement();\n             \n     // Write the XML and close the writer.\n     writer.Close();  \n\n  }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteStartElement_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteStartElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteStartElement(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes the specified start tag and associates it with the given namespace.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void WriteStartElement (string localName, string ns);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI to associate with the element. If this namespace is already in scope and has an associated prefix, the writer automatically writes that prefix also.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>After calling this method you can either write attributes, or create content using <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteComment_\" data-linktype=\"relative-path\">WriteComment</a>, <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteString_\" data-linktype=\"relative-path\">WriteString</a>, or <code>WriteStartElement</code> for child elements. You can close the element with either <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteEndElement_\" data-linktype=\"relative-path\">WriteEndElement</a> or <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteFullEndElement_\" data-linktype=\"relative-path\">WriteFullEndElement</a>. For example, the following C# code:  </p>\n<pre><code>writer.WriteStartElement(&quot;item&quot;,null);  \nwriter.WriteString(&quot;some text&quot;);  \nwriter.WriteEndElement();\n</code></pre><p> Generates the following output:  </p>\n<pre><code>&lt;item&gt;some text&lt;/item&gt;\n</code></pre><p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartElementAsync_\" data-linktype=\"relative-path\">WriteStartElementAsync</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteStartElement_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteStartElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteStartElement(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes the specified start tag and associates it with the given namespace and prefix.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteStartElement (string prefix, string localName, string ns);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prefix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace prefix of the element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI to associate with the element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoderfallbackexception\" data-linktype=\"relative-path\">EncoderFallbackException</a></div>\r\n                  </div>\r\n                  <p>There is a character in the buffer that is a valid XML character but is not valid for the output encoding. For example, if the output encoding is ASCII, you should only use characters from the range of 0 to 127 for element and attribute names. The invalid character might be in the argument of this method or in an argument of previous methods that were writing to the buffer. Such characters are escaped by character entity references when possible (for example, in text nodes or attribute values). However, the character entity reference is not allowed in element and attribute names, comments, processing instructions, or CDATA sections.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartElementAsync_\" data-linktype=\"relative-path\">WriteStartElementAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes out an XML fragment.  </p>\n<pre><code class=\"lang-cs\" name=\"XmlWriter.WriteElementString#1\">using System;\nusing System.IO;\nusing System.Xml;\n \n public class Sample\n {\n   private const string m_Document = &quot;sampledata.xml&quot;;\n \n   public static void Main() {\n   \n      XmlWriter writer = null;\n\n      try {\n     \n        XmlWriterSettings settings = new XmlWriterSettings();\n        settings.Indent = true;\n        writer = XmlWriter.Create (m_Document, settings);\n           \n        writer.WriteComment(&quot;sample XML fragment&quot;);\n     \n        // Write an element (this one is the root).\n        writer.WriteStartElement(&quot;book&quot;);\n \n        // Write the namespace declaration.\n        writer.WriteAttributeString(&quot;xmlns&quot;, &quot;bk&quot;, null, &quot;urn:samples&quot;);\n    \n        // Write the genre attribute.\n        writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;);\n         \n        // Write the title.\n        writer.WriteStartElement(&quot;title&quot;);\n        writer.WriteString(&quot;The Handmaid&#39;s Tale&quot;);\n        writer.WriteEndElement();\n               \n        // Write the price.\n        writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;);\n      \n        // Lookup the prefix and write the ISBN element.\n        string prefix = writer.LookupPrefix(&quot;urn:samples&quot;);\n        writer.WriteStartElement(prefix, &quot;ISBN&quot;, &quot;urn:samples&quot;);\n        writer.WriteString(&quot;1-861003-78&quot;);\n        writer.WriteEndElement();\n\n        // Write the style element (shows a different way to handle prefixes).\n        writer.WriteElementString(&quot;style&quot;, &quot;urn:samples&quot;, &quot;hardcover&quot;);\n \n        // Write the close tag for the root element.\n        writer.WriteEndElement();\n               \n        // Write the XML to file and close the writer.\n        writer.Flush();\n        writer.Close();\n      }\n\n      finally {\n        if (writer != null)\n           writer.Close();\n     } \n   }\n \n }\n</code></pre><pre><code class=\"lang-vb\" name=\"XmlWriter.WriteElementString#1\">Option Strict\nOption Explicit\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    Private Shared m_Document As String = &quot;sampledata.xml&quot;\n    \n    Public Shared Sub Main()\n        Dim writer As XmlWriter = Nothing\n        \n      Try\n\n        Dim settings As XmlWriterSettings = new XmlWriterSettings()\n        settings.Indent = true\n        writer = XmlWriter.Create (m_Document, settings)\n            \n        writer.WriteComment(&quot;sample XML fragment&quot;)\n            \n        &#39; Write an element (this one is the root).\n        writer.WriteStartElement(&quot;book&quot;)\n            \n        &#39; Write the namespace declaration.\n        writer.WriteAttributeString(&quot;xmlns&quot;, &quot;bk&quot;, Nothing, &quot;urn:samples&quot;)\n            \n        &#39; Write the genre attribute.\n        writer.WriteAttributeString(&quot;genre&quot;, &quot;novel&quot;)\n            \n        &#39; Write the title.\n        writer.WriteStartElement(&quot;title&quot;)\n        writer.WriteString(&quot;The Handmaid&#39;s Tale&quot;)\n        writer.WriteEndElement()\n            \n        &#39; Write the price.\n        writer.WriteElementString(&quot;price&quot;, &quot;19.95&quot;)\n            \n        &#39; Lookup the prefix and write the ISBN element.\n        Dim prefix As String = writer.LookupPrefix(&quot;urn:samples&quot;)\n        writer.WriteStartElement(prefix, &quot;ISBN&quot;, &quot;urn:samples&quot;)\n        writer.WriteString(&quot;1-861003-78&quot;)\n        writer.WriteEndElement()\n            \n        &#39; Write the style element (shows a different way to handle prefixes).\n        writer.WriteElementString(&quot;style&quot;, &quot;urn:samples&quot;, &quot;hardcover&quot;)\n            \n        &#39; Write the close tag for the root element.\n        writer.WriteEndElement()\n            \n        &#39; Write the XML to file and close the writer.\n        writer.Flush()\n        writer.Close()\n        \n        Finally\n            If Not (writer Is Nothing) Then\n                writer.Close()\n            End If\n        End Try\n\n    End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlWriter.WriteElementString#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\npublic ref class Sample\n{\nprivate:\n   static String^ m_Document = L&quot;sampledata.xml&quot;;\n\npublic:\n   static void Main()\n   {\n      XmlWriter^ writer = nullptr;\n      try\n      {\n         XmlWriterSettings^ settings = gcnew XmlWriterSettings;\n         settings-&gt;Indent = true;\n         writer = XmlWriter::Create( m_Document,settings );\n         writer-&gt;WriteComment( L&quot;sample XML fragment&quot; );\n         \n         // Write an element (this one is the root).\n         writer-&gt;WriteStartElement( L&quot;book&quot; );\n         \n         // Write the namespace declaration.\n         writer-&gt;WriteAttributeString( L&quot;xmlns&quot;, L&quot;bk&quot;, nullptr, L&quot;urn:samples&quot; );\n         \n         // Write the genre attribute.\n         writer-&gt;WriteAttributeString( L&quot;genre&quot;, L&quot;novel&quot; );\n         \n         // Write the title.\n         writer-&gt;WriteStartElement( L&quot;title&quot; );\n         writer-&gt;WriteString( L&quot;The Handmaid&#39;s Tale&quot; );\n         writer-&gt;WriteEndElement();\n         \n         // Write the price.\n         writer-&gt;WriteElementString( L&quot;price&quot;, L&quot;19.95&quot; );\n         \n         // Lookup the prefix and write the ISBN element.\n         String^ prefix = writer-&gt;LookupPrefix( L&quot;urn:samples&quot; );\n         writer-&gt;WriteStartElement( prefix, L&quot;ISBN&quot;, L&quot;urn:samples&quot; );\n         writer-&gt;WriteString( L&quot;1-861003-78&quot; );\n         writer-&gt;WriteEndElement();\n         \n         // Write the style element (shows a different way to handle prefixes).\n         writer-&gt;WriteElementString( L&quot;style&quot;, L&quot;urn:samples&quot;, L&quot;hardcover&quot; );\n         \n         // Write the close tag for the root element.\n         writer-&gt;WriteEndElement();\n         \n         // Write the XML to file and close the writer.\n         writer-&gt;Flush();\n         writer-&gt;Close();\n      }\n      finally\n      {\n         if ( writer != nullptr )\n                  writer-&gt;Close();\n      }\n\n   }\n\n};\n\nvoid main()\n{\n   Sample::Main();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteStartElementAsync_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteStartElementAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteStartElementAsync(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes the specified start tag and associates it with the given namespace and prefix.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteStartElementAsync (string prefix, string localName, string ns);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prefix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace prefix of the element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the element.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace URI to associate with the element.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteStartElement</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStartElement_\" data-linktype=\"relative-path\">WriteStartElement</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteString_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteString(String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes the given text content.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteString (string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The text string contains an invalid surrogate pair.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><code>WriteString</code> does the following:  </p>\n<ul>\n<li><p>The characters <code>&amp;</code>, <code>&lt;</code>, and <code>&gt;</code> are replaced with <code>&amp;amp;</code>, <code>&amp;lt;</code>, and <code>&amp;gt;</code>, respectively.  </p>\n</li>\n<li><p>The default behavior of an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> created using <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_Create_\" data-linktype=\"relative-path\">Create</a> is to throw an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> when attempting to write character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD). These invalid XML characters can be written by creating the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> with the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_CheckCharacters_\" data-linktype=\"relative-path\">CheckCharacters</a> property set to <code>false</code>. Doing so will result in the characters being replaced with numeric character entities (&amp;#0; through &amp;#0x1F). Additionally, an <a class=\"xref\" href=\"system.xml.xmltextwriter\" data-linktype=\"relative-path\">XmlTextWriter</a> created with the <code>new</code> operator will replace the invalid characters with numeric character entities by default.  </p>\n<p><strong>Note</strong> Microsoft does not encourage the practice of writing invalid XML characters since many applications that consume XML are not designed to handle invalid characters.  </p>\n</li>\n<li><p>If <code>WriteString</code> is called in the context of an attribute value, double and single quotes are replaced with <code>&amp;quot;</code> and <code>&amp;apos;</code> respectively.  </p>\n<p>For example, this input string <code>test&lt;item&gt;test</code> is written out as  </p>\n</li>\n</ul>\n<pre><code>test&amp;lt;item&amp;gt;test\n</code></pre><p> If <code>text</code> is either <code>null</code> or <code>String.Empty</code>, this method writes a text node with no data content.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStringAsync_\" data-linktype=\"relative-path\">WriteStringAsync</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes an XML node.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter.Close#1\">Option Explicit\nOption Strict\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    \n  Public Shared Sub Main()\n\n     &#39; Create a writer to write XML to the console.\n     Dim settings As XmlWriterSettings = new XmlWriterSettings()\n     settings.Indent = true\n     settings.OmitXmlDeclaration = true\n     Dim writer As XmlWriter = XmlWriter.Create(Console.Out, settings)\n\n     &#39; Write the book element.\n     writer.WriteStartElement(&quot;book&quot;)\n        \n     &#39; Write the title element.\n     writer.WriteStartElement(&quot;title&quot;)\n     writer.WriteString(&quot;Pride And Prejudice&quot;)\n     writer.WriteEndElement()\n        \n     &#39; Write the close tag for the root element.\n     writer.WriteEndElement()\n        \n     &#39; Write the XML and close the writer.\n     writer.Close()\n\n  End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre><pre><code class=\"lang-cpp\" name=\"XmlWriter.Close#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   \n   // Create a writer to write XML to the console.\n   XmlWriterSettings^ settings = gcnew XmlWriterSettings;\n   settings-&gt;Indent = true;\n   settings-&gt;OmitXmlDeclaration = true;\n   XmlWriter^ writer = XmlWriter::Create( Console::Out, settings );\n   \n   // Write the book element.\n   writer-&gt;WriteStartElement( L&quot;book&quot; );\n   \n   // Write the title element.\n   writer-&gt;WriteStartElement( L&quot;title&quot; );\n   writer-&gt;WriteString( L&quot;Pride And Prejudice&quot; );\n   writer-&gt;WriteEndElement();\n   \n   // Write the close tag for the root element.\n   writer-&gt;WriteEndElement();\n   \n   // Write the XML and close the writer.\n   writer-&gt;Close();\n   return 1;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter.Close#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample {\n  \n  public static void Main() {\n  \n     // Create a writer to write XML to the console.\n     XmlWriterSettings settings = new XmlWriterSettings();\n     settings.Indent = true;\n     settings.OmitXmlDeclaration = true;\n     XmlWriter writer = XmlWriter.Create(Console.Out, settings);\n\n     // Write the book element.\n     writer.WriteStartElement(&quot;book&quot;);\n\n     // Write the title element.\n     writer.WriteStartElement(&quot;title&quot;);\n     writer.WriteString(&quot;Pride And Prejudice&quot;);\n     writer.WriteEndElement();\n\n     // Write the close tag for the root element.\n     writer.WriteEndElement();\n             \n     // Write the XML and close the writer.\n     writer.Close();  \n\n  }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteStringAsync_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteStringAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteStringAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes the given text content.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteStringAsync (string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteString</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteString_\" data-linktype=\"relative-path\">WriteString</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteSurrogateCharEntity_System_Char_System_Char_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteSurrogateCharEntity_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteSurrogateCharEntity(Char,Char)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, generates and writes the surrogate character entity for the surrogate character pair.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteSurrogateCharEntity (char lowChar, char highChar);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>lowChar</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The low surrogate. This must be a value between 0xDC00 and 0xDFFF.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>highChar</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The high surrogate. This must be a value between 0xD800 and 0xDBFF.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>An invalid surrogate character pair was passed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is only applicable on systems that use UTF-16 encoding.  </p>\n<p> The surrogate character entity is written in hexadecimal format. The range for surrogate characters is #x10000 to #x10FFFF. The following formula is used to generate the surrogate character entity: (<code>highChar</code> -0xD800) * 0x400 + (<code>lowChar</code> -0xDC00) + 0x10000  </p>\n<p> For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646]. A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate). These 16-bit units are referred to as a surrogate pair.  </p>\n<p> For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at <a href=\"http://www.unicode.org\" data-linktype=\"external\">http://www.unicode.org</a>, or section 2.2 of the W3C XML 1.0 Recommendation located at <a href=\"http://www.w3.org/TR/REC-xml#charsets\" data-linktype=\"external\">http://www.w3.org/TR/REC-xml#charsets</a>.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteSurrogateCharEntityAsync_\" data-linktype=\"relative-path\">WriteSurrogateCharEntityAsync</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteSurrogateCharEntityAsync_System_Char_System_Char_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteSurrogateCharEntityAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteSurrogateCharEntityAsync(Char,Char)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously generates and writes the surrogate character entity for the surrogate character pair.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteSurrogateCharEntityAsync (char lowChar, char highChar);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>lowChar</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The low surrogate. This must be a value between 0xDC00 and 0xDFFF.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>highChar</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The high surrogate. This must be a value between 0xD800 and 0xDBFF.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteSurrogateCharEntity</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteSurrogateCharEntity_\" data-linktype=\"relative-path\">WriteSurrogateCharEntity</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteValue_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteValue(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteValue (bool value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>An invalid value was specified.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.  </p>\n<p> When the WriteValue method is called, the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteString_\" data-linktype=\"relative-path\">WriteString</a> method.  </p>\n<p> If WriteValue is called multiple times in succession, the values are not delimited by a space. You must call <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteWhitespace_\" data-linktype=\"relative-path\">WriteWhitespace</a> between calls to WriteValue to insert white space. Pass an array type to the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteValue_System_Object_\" data-linktype=\"relative-path\">System.Xml.XmlWriter.WriteValue(Object)</a> overload to write out an array of distinct values.  </p>\n<p> If this method is called on an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance that outputs text-only, the typed value is serialized to text.  </p>\n<p> For asynchronous operations, convert the return value of this method to a string and use the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStringAsync_\" data-linktype=\"relative-path\">WriteStringAsync</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteValue_System_DateTime_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteValue(DateTime)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteValue (DateTime value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>An invalid value was specified.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.  </p>\n<p> When the WriteValue method is called, the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteString_\" data-linktype=\"relative-path\">WriteString</a> method.  </p>\n<p> If WriteValue is called multiple times in succession, the values are not delimited by a space. You must call <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteWhitespace_\" data-linktype=\"relative-path\">WriteWhitespace</a> between calls to WriteValue to insert white space. Pass an array type to the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteValue_System_Object_\" data-linktype=\"relative-path\">System.Xml.XmlWriter.WriteValue(Object)</a> overload to write out an array of distinct values.  </p>\n<p> If this method is called on an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance that outputs text-only, the typed value is serialized to text.  </p>\n<p> For asynchronous operations, convert the return value of this method to a string and use the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStringAsync_\" data-linktype=\"relative-path\">WriteStringAsync</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes a book node using typed data.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter_v2#1\">Dim price As [Double] = 9.95\nDim [date] As New DateTime(2004, 5, 20)\n        \nUsing writer As XmlWriter = XmlWriter.Create(&quot;data.xml&quot;)\n  writer.WriteStartElement(&quot;book&quot;)\n  writer.WriteStartAttribute(&quot;pub-date&quot;)\n  writer.WriteValue([date])\n  writer.WriteEndAttribute()\n            \n  writer.WriteStartElement(&quot;price&quot;)\n  writer.WriteValue(price)\n  writer.WriteEndElement()\n            \n  writer.WriteEndElement()\n  writer.Flush()\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter_v2#1\">        Double price = 9.95;\n        DateTime date = new DateTime(2004, 5, 20);\n\n        using (XmlWriter writer = XmlWriter.Create(&quot;data.xml&quot;))\n        {\n            writer.WriteStartElement(&quot;book&quot;);\n            writer.WriteStartAttribute(&quot;pub-date&quot;);\n            writer.WriteValue(date);\n            writer.WriteEndAttribute();\n\n            writer.WriteStartElement(&quot;price&quot;);\n            writer.WriteValue(price);\n            writer.WriteEndElement();\n\n            writer.WriteEndElement();\n            writer.Flush();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteValue_System_DateTimeOffset_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteValue(DateTimeOffset)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteValue (DateTimeOffset value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For asynchronous operations, convert the return value of this method to a string and use the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStringAsync_\" data-linktype=\"relative-path\">WriteStringAsync</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteValue_System_Decimal_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteValue(Decimal)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteValue (decimal value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a> value to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>An invalid value was specified.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.  </p>\n<p> When the WriteValue method is called, the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteString_\" data-linktype=\"relative-path\">WriteString</a> method.  </p>\n<p> If WriteValue is called multiple times in succession, the values are not delimited by a space. You must call <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteWhitespace_\" data-linktype=\"relative-path\">WriteWhitespace</a> between calls to WriteValue to insert white space. Pass an array type to the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteValue_System_Object_\" data-linktype=\"relative-path\">System.Xml.XmlWriter.WriteValue(Object)</a> overload to write out an array of distinct values.  </p>\n<p> If this method is called on an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance that outputs text-only, the typed value is serialized to text.  </p>\n<p> For asynchronous operations, convert the return value of this method to a string and use the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStringAsync_\" data-linktype=\"relative-path\">WriteStringAsync</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteValue_System_Double_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteValue(Double)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteValue (double value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> value to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>An invalid value was specified.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.  </p>\n<p> When the WriteValue method is called, the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteString_\" data-linktype=\"relative-path\">WriteString</a> method.  </p>\n<p> If WriteValue is called multiple times in succession, the values are not delimited by a space. You must call <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteWhitespace_\" data-linktype=\"relative-path\">WriteWhitespace</a> between calls to WriteValue to insert white space. Pass an array type to the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteValue_System_Object_\" data-linktype=\"relative-path\">System.Xml.XmlWriter.WriteValue(Object)</a> overload to write out an array of distinct values.  </p>\n<p> If this method is called on an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance that outputs text-only, the typed value is serialized to text.  </p>\n<p> For asynchronous operations, convert the return value of this method to a string and use the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStringAsync_\" data-linktype=\"relative-path\">WriteStringAsync</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes a book node using typed data.  </p>\n<pre><code class=\"lang-vb\" name=\"XmlWriter_v2#1\">Dim price As [Double] = 9.95\nDim [date] As New DateTime(2004, 5, 20)\n        \nUsing writer As XmlWriter = XmlWriter.Create(&quot;data.xml&quot;)\n  writer.WriteStartElement(&quot;book&quot;)\n  writer.WriteStartAttribute(&quot;pub-date&quot;)\n  writer.WriteValue([date])\n  writer.WriteEndAttribute()\n            \n  writer.WriteStartElement(&quot;price&quot;)\n  writer.WriteValue(price)\n  writer.WriteEndElement()\n            \n  writer.WriteEndElement()\n  writer.Flush()\nEnd Using\n</code></pre><pre><code class=\"lang-cs\" name=\"XmlWriter_v2#1\">        Double price = 9.95;\n        DateTime date = new DateTime(2004, 5, 20);\n\n        using (XmlWriter writer = XmlWriter.Create(&quot;data.xml&quot;))\n        {\n            writer.WriteStartElement(&quot;book&quot;);\n            writer.WriteStartAttribute(&quot;pub-date&quot;);\n            writer.WriteValue(date);\n            writer.WriteEndAttribute();\n\n            writer.WriteStartElement(&quot;price&quot;);\n            writer.WriteValue(price);\n            writer.WriteEndElement();\n\n            writer.WriteEndElement();\n            writer.Flush();\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteValue_System_Int32_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteValue(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteValue (int value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>An invalid value was specified.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.  </p>\n<p> When the WriteValue method is called, the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteString_\" data-linktype=\"relative-path\">WriteString</a> method.  </p>\n<p> If WriteValue is called multiple times in succession, the values are not delimited by a space. You must call <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteWhitespace_\" data-linktype=\"relative-path\">WriteWhitespace</a> between calls to WriteValue to insert white space. Pass an array type to the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteValue_System_Object_\" data-linktype=\"relative-path\">System.Xml.XmlWriter.WriteValue(Object)</a> overload to write out an array of distinct values.  </p>\n<p> If this method is called on an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance that outputs text-only, the typed value is serialized to text.  </p>\n<p> For asynchronous operations, convert the return value of this method to a string and use the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStringAsync_\" data-linktype=\"relative-path\">WriteStringAsync</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteValue_System_Int64_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteValue(Int64)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteValue (long value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>An invalid value was specified.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.  </p>\n<p> When the WriteValue method is called, the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteString_\" data-linktype=\"relative-path\">WriteString</a> method.  </p>\n<p> If WriteValue is called multiple times in succession, the values are not delimited by a space. You must call <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteWhitespace_\" data-linktype=\"relative-path\">WriteWhitespace</a> between calls to WriteValue to insert white space. Pass an array type to the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteValue_System_Object_\" data-linktype=\"relative-path\">System.Xml.XmlWriter.WriteValue(Object)</a> overload to write out an array of distinct values.  </p>\n<p> If this method is called on an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance that outputs text-only, the typed value is serialized to text.  </p>\n<p> For asynchronous operations, convert the return value of this method to a string and use the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStringAsync_\" data-linktype=\"relative-path\">WriteStringAsync</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteValue_System_Object_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteValue(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the object value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteValue (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object value to write.  </p>\n<p> <strong>Note</strong> With the release of the .NET Framework 3.5, this method accepts <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> as a parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>An invalid value was specified.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>value</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method takes the common language runtime (CLR) object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.  </p>\n<p> If the CLR object is a list type such as <a class=\"xref\" href=\"system.collections.ienumerable\" data-linktype=\"relative-path\">IEnumerable</a>, <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a>, or <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>, it is treated as an array of the value type. The <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteString_\" data-linktype=\"relative-path\">WriteString</a> method.  </p>\n<p> If this method is called on an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance that outputs text-only, the typed value is serialized to text.  </p>\n<p> For asynchronous operations, convert the return value of this method to a string and use the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStringAsync_\" data-linktype=\"relative-path\">WriteStringAsync</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteValue_System_Single_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteValue(Single)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a single-precision floating-point number.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteValue (float value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The single-precision floating-point number to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>An invalid value was specified.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.  </p>\n<p> When the WriteValue method is called, the <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> converts the value to its string representations according to the XML Schema (XSD) data type rules and writes it out using the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteString_\" data-linktype=\"relative-path\">WriteString</a> method.  </p>\n<p> If WriteValue is called multiple times in succession, the values are not delimited by a space. You must call <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteWhitespace_\" data-linktype=\"relative-path\">WriteWhitespace</a> between calls to WriteValue to insert white space. Pass an array type to the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteValue_System_Object_\" data-linktype=\"relative-path\">System.Xml.XmlWriter.WriteValue(Object)</a> overload to write out an array of distinct values.  </p>\n<p> If this method is called on an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance that outputs text-only, the typed value is serialized to text.  </p>\n<p> For asynchronous operations, convert the return value of this method to a string and use the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStringAsync_\" data-linktype=\"relative-path\">WriteStringAsync</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteValue_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteValue(String)</div>        \r\n          </div>\r\n    \r\n            <p>Writes a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void WriteValue (string value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> value to write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>An invalid value was specified.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method takes the common language runtime object and converts the input value to the desired output type using the XML Schema definition language (XSD) data type conversion rules.  </p>\n<p> If WriteValue is called multiple times in succession, the values are not delimited by a space. You must call <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteWhitespace_\" data-linktype=\"relative-path\">WriteWhitespace</a> between calls to WriteValue to insert white space. Pass an array type to the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteValue_System_Object_\" data-linktype=\"relative-path\">System.Xml.XmlWriter.WriteValue(Object)</a> overload to write out an array of distinct values.  </p>\n<p> If this method is called on an <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> instance that outputs text-only, the typed value is serialized to text.  </p>\n<p> For asynchronous operations, use the <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteStringAsync_\" data-linktype=\"relative-path\">WriteStringAsync</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteWhitespace_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteWhitespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteWhitespace(String)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, writes out the given white space.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void WriteWhitespace (string ws);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ws</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string of white space characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The string contains non-white space characters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> method was called before a previous asynchronous operation finished. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œAn asynchronous operation is already in progress.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is used to manually format your document.  </p>\n<p> For the asynchronous version of this method, see <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteWhitespaceAsync_\" data-linktype=\"relative-path\">WriteWhitespaceAsync</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlWriter_WriteWhitespaceAsync_System_String_\">\r\n    \r\n            <a id=\"System_Xml_XmlWriter_WriteWhitespaceAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteWhitespaceAsync(String)</div>        \r\n          </div>\r\n    \r\n            <p>Asynchronously writes out the given white space.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Threading.Tasks.Task WriteWhitespaceAsync (string ws);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ws</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string of white space characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>The task that represents the asynchronous <code>WriteWhitespace</code> operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a> asynchronous method was called without setting the <span class=\"xref\">stem.Xml.XmlWriterSettings.Async*</span> flag to <code>true</code>. In this case, <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown with the message â€œSet XmlWriterSettings.Async to true if you want to use Async Methods.â€</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the asynchronous version of <a class=\"xref\" href=\"system.xml.xmlwriter#System_Xml_XmlWriter_WriteWhitespace_\" data-linktype=\"relative-path\">WriteWhitespace</a>, with the same functionality. To use this method, you must set the <a class=\"xref\" href=\"system.xml.xmlwritersettings#System_Xml_XmlWriterSettings_Async_\" data-linktype=\"relative-path\">Async</a> flag to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlWriter.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlWriter.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.Close\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.Create\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.Flush\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.FlushAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.LookupPrefix\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.Settings\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteAttributes\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteAttributesAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteAttributeString\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteAttributeStringAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteBase64\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteBase64Async\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteBinHex\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteBinHexAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteCData\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteCDataAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteCharEntity\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteCharEntityAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteChars\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteCharsAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteComment\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteCommentAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteDocType\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteDocTypeAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteElementString\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteElementStringAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteEndAttribute\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteEndAttributeAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteEndDocument\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteEndDocumentAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteEndElement\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteEndElementAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteEntityRef\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteEntityRefAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteFullEndElement\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteFullEndElementAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteName\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteNameAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteNmToken\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteNmTokenAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteNode\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteNodeAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteProcessingInstruction\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteProcessingInstructionAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteQualifiedName\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteQualifiedNameAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteRaw\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteRawAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteStartAttribute\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteStartAttributeAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteStartDocument\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteStartDocumentAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteStartElement\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteStartElementAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteState\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteString\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteStringAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteSurrogateCharEntity\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteSurrogateCharEntityAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteValue\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteWhitespace\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.WriteWhitespaceAsync\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.XmlLang\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlWriter.XmlSpace\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"e48fdb11-ce1d-cf4a-06f3-45a5a37cee61\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Xml\\XmlWriter.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a writer that provides a fast, non-cached, forward-only way to generate streams or files that contain XML data.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.XmlWriter\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlWriter.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlWriter.yml","open_to_public_contributors":true,"api_name":["System.Xml.XmlWriter","System.Xml.XmlWriter..ctor","System.Xml.XmlWriter.Close","System.Xml.XmlWriter.Create","System.Xml.XmlWriter.Dispose","System.Xml.XmlWriter.Flush","System.Xml.XmlWriter.FlushAsync","System.Xml.XmlWriter.LookupPrefix","System.Xml.XmlWriter.Settings","System.Xml.XmlWriter.WriteAttributes","System.Xml.XmlWriter.WriteAttributesAsync","System.Xml.XmlWriter.WriteAttributeString","System.Xml.XmlWriter.WriteAttributeStringAsync","System.Xml.XmlWriter.WriteBase64","System.Xml.XmlWriter.WriteBase64Async","System.Xml.XmlWriter.WriteBinHex","System.Xml.XmlWriter.WriteBinHexAsync","System.Xml.XmlWriter.WriteCData","System.Xml.XmlWriter.WriteCDataAsync","System.Xml.XmlWriter.WriteCharEntity","System.Xml.XmlWriter.WriteCharEntityAsync","System.Xml.XmlWriter.WriteChars","System.Xml.XmlWriter.WriteCharsAsync","System.Xml.XmlWriter.WriteComment","System.Xml.XmlWriter.WriteCommentAsync","System.Xml.XmlWriter.WriteDocType","System.Xml.XmlWriter.WriteDocTypeAsync","System.Xml.XmlWriter.WriteElementString","System.Xml.XmlWriter.WriteElementStringAsync","System.Xml.XmlWriter.WriteEndAttribute","System.Xml.XmlWriter.WriteEndAttributeAsync","System.Xml.XmlWriter.WriteEndDocument","System.Xml.XmlWriter.WriteEndDocumentAsync","System.Xml.XmlWriter.WriteEndElement","System.Xml.XmlWriter.WriteEndElementAsync","System.Xml.XmlWriter.WriteEntityRef","System.Xml.XmlWriter.WriteEntityRefAsync","System.Xml.XmlWriter.WriteFullEndElement","System.Xml.XmlWriter.WriteFullEndElementAsync","System.Xml.XmlWriter.WriteName","System.Xml.XmlWriter.WriteNameAsync","System.Xml.XmlWriter.WriteNmToken","System.Xml.XmlWriter.WriteNmTokenAsync","System.Xml.XmlWriter.WriteNode","System.Xml.XmlWriter.WriteNodeAsync","System.Xml.XmlWriter.WriteProcessingInstruction","System.Xml.XmlWriter.WriteProcessingInstructionAsync","System.Xml.XmlWriter.WriteQualifiedName","System.Xml.XmlWriter.WriteQualifiedNameAsync","System.Xml.XmlWriter.WriteRaw","System.Xml.XmlWriter.WriteRawAsync","System.Xml.XmlWriter.WriteStartAttribute","System.Xml.XmlWriter.WriteStartAttributeAsync","System.Xml.XmlWriter.WriteStartDocument","System.Xml.XmlWriter.WriteStartDocumentAsync","System.Xml.XmlWriter.WriteStartElement","System.Xml.XmlWriter.WriteStartElementAsync","System.Xml.XmlWriter.WriteState","System.Xml.XmlWriter.WriteString","System.Xml.XmlWriter.WriteStringAsync","System.Xml.XmlWriter.WriteSurrogateCharEntity","System.Xml.XmlWriter.WriteSurrogateCharEntityAsync","System.Xml.XmlWriter.WriteValue","System.Xml.XmlWriter.WriteWhitespace","System.Xml.XmlWriter.WriteWhitespaceAsync","System.Xml.XmlWriter.XmlLang","System.Xml.XmlWriter.XmlSpace"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.XmlWriter","System::Xml::XmlWriter","System.Xml.XmlWriter.#ctor","System::Xml::XmlWriter::#ctor","System.Xml.XmlWriter.Close","System::Xml::XmlWriter::Close","System.Xml.XmlWriter.Create","System::Xml::XmlWriter::Create","System.Xml.XmlWriter.Dispose","System::Xml::XmlWriter::Dispose","System.Xml.XmlWriter.Flush","System::Xml::XmlWriter::Flush","System.Xml.XmlWriter.FlushAsync","System::Xml::XmlWriter::FlushAsync","System.Xml.XmlWriter.LookupPrefix","System::Xml::XmlWriter::LookupPrefix","System.Xml.XmlWriter.Settings","System::Xml::XmlWriter::Settings","System.Xml.XmlWriter.WriteAttributes","System::Xml::XmlWriter::WriteAttributes","System.Xml.XmlWriter.WriteAttributesAsync","System::Xml::XmlWriter::WriteAttributesAsync","System.Xml.XmlWriter.WriteAttributeString","System::Xml::XmlWriter::WriteAttributeString","System.Xml.XmlWriter.WriteAttributeStringAsync","System::Xml::XmlWriter::WriteAttributeStringAsync","System.Xml.XmlWriter.WriteBase64","System::Xml::XmlWriter::WriteBase64","System.Xml.XmlWriter.WriteBase64Async","System::Xml::XmlWriter::WriteBase64Async","System.Xml.XmlWriter.WriteBinHex","System::Xml::XmlWriter::WriteBinHex","System.Xml.XmlWriter.WriteBinHexAsync","System::Xml::XmlWriter::WriteBinHexAsync","System.Xml.XmlWriter.WriteCData","System::Xml::XmlWriter::WriteCData","System.Xml.XmlWriter.WriteCDataAsync","System::Xml::XmlWriter::WriteCDataAsync","System.Xml.XmlWriter.WriteCharEntity","System::Xml::XmlWriter::WriteCharEntity","System.Xml.XmlWriter.WriteCharEntityAsync","System::Xml::XmlWriter::WriteCharEntityAsync","System.Xml.XmlWriter.WriteChars","System::Xml::XmlWriter::WriteChars","System.Xml.XmlWriter.WriteCharsAsync","System::Xml::XmlWriter::WriteCharsAsync","System.Xml.XmlWriter.WriteComment","System::Xml::XmlWriter::WriteComment","System.Xml.XmlWriter.WriteCommentAsync","System::Xml::XmlWriter::WriteCommentAsync","System.Xml.XmlWriter.WriteDocType","System::Xml::XmlWriter::WriteDocType","System.Xml.XmlWriter.WriteDocTypeAsync","System::Xml::XmlWriter::WriteDocTypeAsync","System.Xml.XmlWriter.WriteElementString","System::Xml::XmlWriter::WriteElementString","System.Xml.XmlWriter.WriteElementStringAsync","System::Xml::XmlWriter::WriteElementStringAsync","System.Xml.XmlWriter.WriteEndAttribute","System::Xml::XmlWriter::WriteEndAttribute","System.Xml.XmlWriter.WriteEndAttributeAsync","System::Xml::XmlWriter::WriteEndAttributeAsync","System.Xml.XmlWriter.WriteEndDocument","System::Xml::XmlWriter::WriteEndDocument","System.Xml.XmlWriter.WriteEndDocumentAsync","System::Xml::XmlWriter::WriteEndDocumentAsync","System.Xml.XmlWriter.WriteEndElement","System::Xml::XmlWriter::WriteEndElement","System.Xml.XmlWriter.WriteEndElementAsync","System::Xml::XmlWriter::WriteEndElementAsync","System.Xml.XmlWriter.WriteEntityRef","System::Xml::XmlWriter::WriteEntityRef","System.Xml.XmlWriter.WriteEntityRefAsync","System::Xml::XmlWriter::WriteEntityRefAsync","System.Xml.XmlWriter.WriteFullEndElement","System::Xml::XmlWriter::WriteFullEndElement","System.Xml.XmlWriter.WriteFullEndElementAsync","System::Xml::XmlWriter::WriteFullEndElementAsync","System.Xml.XmlWriter.WriteName","System::Xml::XmlWriter::WriteName","System.Xml.XmlWriter.WriteNameAsync","System::Xml::XmlWriter::WriteNameAsync","System.Xml.XmlWriter.WriteNmToken","System::Xml::XmlWriter::WriteNmToken","System.Xml.XmlWriter.WriteNmTokenAsync","System::Xml::XmlWriter::WriteNmTokenAsync","System.Xml.XmlWriter.WriteNode","System::Xml::XmlWriter::WriteNode","System.Xml.XmlWriter.WriteNodeAsync","System::Xml::XmlWriter::WriteNodeAsync","System.Xml.XmlWriter.WriteProcessingInstruction","System::Xml::XmlWriter::WriteProcessingInstruction","System.Xml.XmlWriter.WriteProcessingInstructionAsync","System::Xml::XmlWriter::WriteProcessingInstructionAsync","System.Xml.XmlWriter.WriteQualifiedName","System::Xml::XmlWriter::WriteQualifiedName","System.Xml.XmlWriter.WriteQualifiedNameAsync","System::Xml::XmlWriter::WriteQualifiedNameAsync","System.Xml.XmlWriter.WriteRaw","System::Xml::XmlWriter::WriteRaw","System.Xml.XmlWriter.WriteRawAsync","System::Xml::XmlWriter::WriteRawAsync","System.Xml.XmlWriter.WriteStartAttribute","System::Xml::XmlWriter::WriteStartAttribute","System.Xml.XmlWriter.WriteStartAttributeAsync","System::Xml::XmlWriter::WriteStartAttributeAsync","System.Xml.XmlWriter.WriteStartDocument","System::Xml::XmlWriter::WriteStartDocument","System.Xml.XmlWriter.WriteStartDocumentAsync","System::Xml::XmlWriter::WriteStartDocumentAsync","System.Xml.XmlWriter.WriteStartElement","System::Xml::XmlWriter::WriteStartElement","System.Xml.XmlWriter.WriteStartElementAsync","System::Xml::XmlWriter::WriteStartElementAsync","System.Xml.XmlWriter.WriteState","System::Xml::XmlWriter::WriteState","System.Xml.XmlWriter.WriteString","System::Xml::XmlWriter::WriteString","System.Xml.XmlWriter.WriteStringAsync","System::Xml::XmlWriter::WriteStringAsync","System.Xml.XmlWriter.WriteSurrogateCharEntity","System::Xml::XmlWriter::WriteSurrogateCharEntity","System.Xml.XmlWriter.WriteSurrogateCharEntityAsync","System::Xml::XmlWriter::WriteSurrogateCharEntityAsync","System.Xml.XmlWriter.WriteValue","System::Xml::XmlWriter::WriteValue","System.Xml.XmlWriter.WriteWhitespace","System::Xml::XmlWriter::WriteWhitespace","System.Xml.XmlWriter.WriteWhitespaceAsync","System::Xml::XmlWriter::WriteWhitespaceAsync","System.Xml.XmlWriter.XmlLang","System::Xml::XmlWriter::XmlLang","System.Xml.XmlWriter.XmlSpace","System::Xml::XmlWriter::XmlSpace"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"e48fdb11-ce1d-cf4a-06f3-45a5a37cee61","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Xml\\XmlWriter.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml/XmlWriter.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlWriter class | Microsoft Docs","_op_ogTitle":"XmlWriter class","description":"Represents a writer that provides a fast, non-cached, forward-only way to generate streams or files that contain XML data.\n","toc_asset_id":"_splitted/System.Xml/toc.json","toc_rel":"_splitted/System.Xml/toc.json","source_url":"","ms.assetid":"System.Xml.XmlWriter","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmlwriter","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmlwriter","fileRelativePath":"System.Xml.XmlWriter.html"},"themesRelativePathToOutputRoot":"_themes/"}