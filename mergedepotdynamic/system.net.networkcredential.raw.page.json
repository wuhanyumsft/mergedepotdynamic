{"content":"    \r\n    <h1 id=\"System_Net_NetworkCredential\">\r\n      <span class=\"lang-csharp\">NetworkCredential</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides credentials for password-based authentication schemes such as basic, digest, NTLM, and Kerberos authentication.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class NetworkCredential : System.Net.ICredentials, System.Net.ICredentialsByHost</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">NetworkCredential</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The NetworkCredential class is a base class that supplies credentials in password-based authentication schemes such as basic, digest, NTLM, and Kerberos. Classes that implement the <a class=\"xref\" href=\"system.net.icredentials\" data-linktype=\"relative-path\">ICredentials</a> interface, such as the <a class=\"xref\" href=\"system.net.credentialcache\" data-linktype=\"relative-path\">CredentialCache</a> class, return NetworkCredential objects.  </p>\n<p> This class does not support public key-based authentication methods such as Secure Sockets Layer (SSL) client authentication.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkCredential__ctor\" data-linktype=\"self-bookmark\">NetworkCredential()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkCredential__ctor_System_String_System_Security_SecureString_\" data-linktype=\"self-bookmark\">NetworkCredential(String,SecureString)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class with the specified user name and password.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkCredential__ctor_System_String_System_String_\" data-linktype=\"self-bookmark\">NetworkCredential(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class with the specified user name and password.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkCredential__ctor_System_String_System_Security_SecureString_System_String_\" data-linktype=\"self-bookmark\">NetworkCredential(String,SecureString,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class with the specified user name, password, and domain.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkCredential__ctor_System_String_System_String_System_String_\" data-linktype=\"self-bookmark\">NetworkCredential(String,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class with the specified user name, password, and domain.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkCredential_Domain\" data-linktype=\"self-bookmark\">Domain</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the domain or computer name that verifies the credentials.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkCredential_Password\" data-linktype=\"self-bookmark\">Password</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the password for the user name associated with the credentials.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkCredential_SecurePassword\" data-linktype=\"self-bookmark\">SecurePassword</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the password as a <a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkCredential_UserName\" data-linktype=\"self-bookmark\">UserName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the user name associated with the credentials.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkCredential_GetCredential_System_Uri_System_String_\" data-linktype=\"self-bookmark\">GetCredential(Uri,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class for the specified Uniform Resource Identifier (URI) and authentication type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_NetworkCredential_GetCredential_System_String_System_Int32_System_String_\" data-linktype=\"self-bookmark\">GetCredential(String,Int32,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class for the specified host, port, and authentication type.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkCredential__ctor\">\r\n    \r\n            <a id=\"System_Net_NetworkCredential__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NetworkCredential()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public NetworkCredential ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default constructor for the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class initializes all properties to <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkCredential__ctor_System_String_System_Security_SecureString_\">\r\n    \r\n            <a id=\"System_Net_NetworkCredential__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NetworkCredential(String,SecureString)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class with the specified user name and password.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public NetworkCredential (string userName, System.Security.SecureString password);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>userName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The user name associated with the credentials.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password for the user name associated with the credentials.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a> class is not supported on this platform.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The constructor initializes a <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> object with the <a class=\"xref\" href=\"system.net.networkcredential#System_Net_NetworkCredential_UserName_\" data-linktype=\"relative-path\">UserName</a> property set to <code>userName</code> and the <a class=\"xref\" href=\"system.net.networkcredential#System_Net_NetworkCredential_Password_\" data-linktype=\"relative-path\">Password</a> property set to <code>password</code>.  </p>\n<p> The <code>password</code> parameter is a <a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a> instance.  </p>\n<p> If this constructor is called with the <code>password</code> parameter set to <code>null</code>, a new instance of <a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a> is initialized, If secure strings are not supported on this platform, then the <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> is thrown</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkCredential__ctor_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_NetworkCredential__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NetworkCredential(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class with the specified user name and password.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public NetworkCredential (string userName, string password);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>userName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The user name associated with the credentials.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password for the user name associated with the credentials.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The constructor initializes a <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> object with the <a class=\"xref\" href=\"system.net.networkcredential#System_Net_NetworkCredential_UserName_\" data-linktype=\"relative-path\">UserName</a> property set to <code>userName</code> and the <a class=\"xref\" href=\"system.net.networkcredential#System_Net_NetworkCredential_Password_\" data-linktype=\"relative-path\">Password</a> property set to <code>password</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> object using the specified user name and password.  </p>\n<pre><code class=\"lang-cs\" name=\"NetworkCredential_Constructor2#1\">       // Call the onstructor  to create an instance of NetworkCredential with the \n       // specified user name and password.\n       NetworkCredential myCredentials = new NetworkCredential(username,passwd);\n  \n      // Create a WebRequest with the specified URL. \n      WebRequest myWebRequest = WebRequest.Create(url);\n      myCredentials.Domain = domain;\n      myWebRequest.Credentials = myCredentials;\n      Console.WriteLine(&quot;<br><br>Credentials Domain : {0} , UserName : {1} , Password : {2}&quot;,\n      myCredentials.Domain, myCredentials.UserName, myCredentials.Password);\n      Console.WriteLine(&quot;<br><br>Request to Url is sent.Waiting for response...&quot;);\n      \n      \n      // Send the request and wait for a response.\n      WebResponse myWebResponse = myWebRequest.GetResponse(); \n      \n      // Process the response.\n      Console.WriteLine(&quot;<br>Response received successfully.&quot;);\n      // Release the resources of the response object.\n      myWebResponse.Close();\n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkCredential_Constructor2#1\">      // Call the onstructor  to create an instance of NetworkCredential with the\n      // specified user name and password.\n      NetworkCredential^ myCredentials = gcnew NetworkCredential( username,passwd );\n      \n      // Create a WebRequest with the specified URL.\n      WebRequest^ myWebRequest = WebRequest::Create( url );\n      myCredentials-&gt;Domain = domain;\n      myWebRequest-&gt;Credentials = myCredentials;\n      Console::WriteLine( &quot;<br><br>Credentials Domain : {0} , UserName : {1} , Password : {2}&quot;,\n         myCredentials-&gt;Domain, myCredentials-&gt;UserName, myCredentials-&gt;Password );\n      Console::WriteLine( &quot;<br><br>Request to Url is sent.Waiting for response...&quot; );\n      \n      // Send the request and wait for a response.\n      WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n      \n      // Process the response.\n      Console::WriteLine( &quot;<br>Response received successfully.&quot; );\n      \n      // Release the resources of the response object.\n      myWebResponse-&gt;Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"NetworkCredential_Constructor2#1\">            &#39; Call the constructor  to create an instance of NetworkCredential with the\n            &#39; specified user name and password.\n            Dim myCredentials As New NetworkCredential(username, passwd)\n            &#39; Create a WebRequest with the specified URL. \n            Dim myWebRequest As WebRequest = WebRequest.Create(url)\n            myCredentials.Domain = domain\n            myWebRequest.Credentials = myCredentials\n            Console.WriteLine(ControlChars.Cr + ControlChars.Cr + &quot;Credentials Domain : {0} , UserName : {1} , Password : {2}&quot;, myCredentials.Domain, myCredentials.UserName, myCredentials.Password)\n            Console.WriteLine(ControlChars.Cr + ControlChars.Cr + &quot;Request to Url is sent.Waiting for response...&quot;)\n            &#39; Send the request and wait for a response.\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n            &#39; Process the response.\n            Console.WriteLine(ControlChars.Cr + &quot;Response received successfully.&quot;)\n            &#39; Release the resources of the response object.\n            myWebResponse.Close()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkCredential__ctor_System_String_System_Security_SecureString_System_String_\">\r\n    \r\n            <a id=\"System_Net_NetworkCredential__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NetworkCredential(String,SecureString,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class with the specified user name, password, and domain.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public NetworkCredential (string userName, System.Security.SecureString password, string domain);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>userName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The user name associated with the credentials.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password for the user name associated with the credentials.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>domain</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The domain associated with these credentials.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a> class is not supported on this platform.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The constructor initializes a <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> object with the <a class=\"xref\" href=\"system.net.networkcredential#System_Net_NetworkCredential_UserName_\" data-linktype=\"relative-path\">UserName</a> property set to <code>userName</code>, the <a class=\"xref\" href=\"system.net.networkcredential#System_Net_NetworkCredential_Password_\" data-linktype=\"relative-path\">Password</a> property set to <code>password</code>, and the <a class=\"xref\" href=\"system.net.networkcredential#System_Net_NetworkCredential_Domain_\" data-linktype=\"relative-path\">Domain</a> property set to <code>domain</code>.  </p>\n<p> The <code>password</code> parameter is a <a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a> instance.  </p>\n<p> If this constructor is called with the <code>password</code> parameter set to <code>null</code>, a new instance of <a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a> is initialized, If secure strings are not supported on this platform, then the <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> is thrown</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkCredential__ctor_System_String_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_NetworkCredential__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NetworkCredential(String,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class with the specified user name, password, and domain.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public NetworkCredential (string userName, string password, string domain);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>userName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The user name associated with the credentials.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>password</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The password for the user name associated with the credentials.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>domain</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The domain associated with these credentials.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The constructor initializes a <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> object with the <a class=\"xref\" href=\"system.net.networkcredential#System_Net_NetworkCredential_UserName_\" data-linktype=\"relative-path\">UserName</a> property set to <code>userName</code>, the <a class=\"xref\" href=\"system.net.networkcredential#System_Net_NetworkCredential_Password_\" data-linktype=\"relative-path\">Password</a> property set to <code>password</code>, and the <a class=\"xref\" href=\"system.net.networkcredential#System_Net_NetworkCredential_Domain_\" data-linktype=\"relative-path\">Domain</a> property set to <code>domain</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkCredential_Domain\">\r\n    \r\n            <a id=\"System_Net_NetworkCredential_Domain_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Domain</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the domain or computer name that verifies the credentials.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Domain { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the domain associated with the credentials.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Domain property specifies the domain or realm to which the user name belongs. Typically, this is the host computer name where the application runs or the user domain for the currently logged in user.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the Domain property to set the domain associated with the credentials.  </p>\n<pre><code class=\"lang-cs\" name=\"NetworkCredential_UserName_Password_Domain#1\">    // Create an empty instance of the NetworkCredential class.\n    NetworkCredential myCredentials = new NetworkCredential(&quot;&quot;,&quot;&quot;,&quot;&quot;);\n    myCredentials.Domain = domain;\n    myCredentials.UserName = username;\n    myCredentials.Password = passwd;\n\n    // Create a WebRequest with the specified URL. \n    WebRequest myWebRequest = WebRequest.Create(url); \n    myWebRequest.Credentials = myCredentials;\n    Console.WriteLine(&quot;<br><br>User Credentials:- Domain : {0} , UserName : {1} , Password : {2}&quot;,myCredentials.Domain,myCredentials.UserName,myCredentials.Password);\n    \n    // Send the request and wait for a response.\n    Console.WriteLine(&quot;<br><br>Request to Url is sent.Waiting for response...Please wait ...&quot;);\n    WebResponse myWebResponse = myWebRequest.GetResponse();\n    \n    // Process the response.\n    Console.WriteLine(&quot;<br>Response received sucessfully&quot;);\n    \n    // Release the resources of the response object.\n    myWebResponse.Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"NetworkCredential_UserName_Password_Domain#1\">            &#39; Create an empty instance of the NetworkCredential class.\n            Dim myCredentials As New NetworkCredential(&quot;&quot;, &quot;&quot;, &quot;&quot;)\n            myCredentials.Domain = domain\n            myCredentials.UserName = username\n            myCredentials.Password = passwd\n            \n            &#39; Create a WebRequest with the specified URL. \n            Dim myWebRequest As WebRequest = WebRequest.Create(url)\n            myWebRequest.Credentials = myCredentials\n            Console.WriteLine(ControlChars.Cr + ControlChars.Cr + &quot;User Credentials:- Domain : {0} , UserName : {1} , Password : {2}&quot;, myCredentials.Domain, myCredentials.UserName, myCredentials.Password)\n            \n            &#39; Send the request and wait for a response.\n            Console.WriteLine(ControlChars.Cr + ControlChars.Cr + &quot;Request to Url is sent.Waiting for response...Please wait ...&quot;)\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n            &#39; Process the response.\n            Console.WriteLine(ControlChars.Cr + &quot;Response received sucessfully&quot;)\n            &#39; Release the resources of the response object.\n            myWebResponse.Close()\n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkCredential_UserName_Password_Domain#1\">      // Create an empty instance of the NetworkCredential class.\n      NetworkCredential^ myCredentials = gcnew NetworkCredential( &quot;&quot;,&quot;&quot;,&quot;&quot; );\n      myCredentials-&gt;Domain = domain;\n      myCredentials-&gt;UserName = username;\n      myCredentials-&gt;Password = passwd;\n      \n      // Create a WebRequest with the specified URL.\n      WebRequest^ myWebRequest = WebRequest::Create( url );\n      myWebRequest-&gt;Credentials = myCredentials;\n      Console::WriteLine( &quot;<br><br>User Credentials:- Domain : {0} , UserName : {1} , Password : {2}&quot;,\n         myCredentials-&gt;Domain, myCredentials-&gt;UserName, myCredentials-&gt;Password );\n      \n      // Send the request and wait for a response.\n      Console::WriteLine( &quot;<br><br>Request to Url is sent.Waiting for response...Please wait ...&quot; );\n      WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n      \n      // Process the response.\n      Console::WriteLine( &quot;<br>Response received sucessfully&quot; );\n      \n      // Release the resources of the response object.\n      myWebResponse-&gt;Close();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkCredential_Password\">\r\n    \r\n            <a id=\"System_Net_NetworkCredential_Password_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Password</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the password for the user name associated with the credentials.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Password { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The password associated with the credentials. If this <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> instance was initialized with the <code>password</code> parameter set to <code>null</code>, then the Password property will return an empty string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the Password property to set the password associated with the credentials.  </p>\n<pre><code class=\"lang-cs\" name=\"NetworkCredential_UserName_Password_Domain#1\">    // Create an empty instance of the NetworkCredential class.\n    NetworkCredential myCredentials = new NetworkCredential(&quot;&quot;,&quot;&quot;,&quot;&quot;);\n    myCredentials.Domain = domain;\n    myCredentials.UserName = username;\n    myCredentials.Password = passwd;\n\n    // Create a WebRequest with the specified URL. \n    WebRequest myWebRequest = WebRequest.Create(url); \n    myWebRequest.Credentials = myCredentials;\n    Console.WriteLine(&quot;<br><br>User Credentials:- Domain : {0} , UserName : {1} , Password : {2}&quot;,myCredentials.Domain,myCredentials.UserName,myCredentials.Password);\n    \n    // Send the request and wait for a response.\n    Console.WriteLine(&quot;<br><br>Request to Url is sent.Waiting for response...Please wait ...&quot;);\n    WebResponse myWebResponse = myWebRequest.GetResponse();\n    \n    // Process the response.\n    Console.WriteLine(&quot;<br>Response received sucessfully&quot;);\n    \n    // Release the resources of the response object.\n    myWebResponse.Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"NetworkCredential_UserName_Password_Domain#1\">            &#39; Create an empty instance of the NetworkCredential class.\n            Dim myCredentials As New NetworkCredential(&quot;&quot;, &quot;&quot;, &quot;&quot;)\n            myCredentials.Domain = domain\n            myCredentials.UserName = username\n            myCredentials.Password = passwd\n            \n            &#39; Create a WebRequest with the specified URL. \n            Dim myWebRequest As WebRequest = WebRequest.Create(url)\n            myWebRequest.Credentials = myCredentials\n            Console.WriteLine(ControlChars.Cr + ControlChars.Cr + &quot;User Credentials:- Domain : {0} , UserName : {1} , Password : {2}&quot;, myCredentials.Domain, myCredentials.UserName, myCredentials.Password)\n            \n            &#39; Send the request and wait for a response.\n            Console.WriteLine(ControlChars.Cr + ControlChars.Cr + &quot;Request to Url is sent.Waiting for response...Please wait ...&quot;)\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n            &#39; Process the response.\n            Console.WriteLine(ControlChars.Cr + &quot;Response received sucessfully&quot;)\n            &#39; Release the resources of the response object.\n            myWebResponse.Close()\n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkCredential_UserName_Password_Domain#1\">      // Create an empty instance of the NetworkCredential class.\n      NetworkCredential^ myCredentials = gcnew NetworkCredential( &quot;&quot;,&quot;&quot;,&quot;&quot; );\n      myCredentials-&gt;Domain = domain;\n      myCredentials-&gt;UserName = username;\n      myCredentials-&gt;Password = passwd;\n      \n      // Create a WebRequest with the specified URL.\n      WebRequest^ myWebRequest = WebRequest::Create( url );\n      myWebRequest-&gt;Credentials = myCredentials;\n      Console::WriteLine( &quot;<br><br>User Credentials:- Domain : {0} , UserName : {1} , Password : {2}&quot;,\n         myCredentials-&gt;Domain, myCredentials-&gt;UserName, myCredentials-&gt;Password );\n      \n      // Send the request and wait for a response.\n      Console::WriteLine( &quot;<br><br>Request to Url is sent.Waiting for response...Please wait ...&quot; );\n      WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n      \n      // Process the response.\n      Console::WriteLine( &quot;<br>Response received sucessfully&quot; );\n      \n      // Release the resources of the response object.\n      myWebResponse-&gt;Close();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkCredential_SecurePassword\">\r\n    \r\n            <a id=\"System_Net_NetworkCredential_SecurePassword_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SecurePassword</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the password as a <a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.SecureString SecurePassword { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a></div>\r\n                  </div>\r\n                  <p>The password for the user name associated with the credentials.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a> class is not supported on this platform.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If an application attempts to set the SecurePassword property to <code>null</code>, a new instance of <a class=\"xref\" href=\"system.security.securestring\" data-linktype=\"relative-path\">SecureString</a> is initialized, If secure strings are not supported on this platform, then the <a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a> is thrown</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkCredential_UserName\">\r\n    \r\n            <a id=\"System_Net_NetworkCredential_UserName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the user name associated with the credentials.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string UserName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The user name associated with the credentials.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the UserName property to set the user name associated with the credentials.  </p>\n<pre><code class=\"lang-cs\" name=\"NetworkCredential_UserName_Password_Domain#1\">    // Create an empty instance of the NetworkCredential class.\n    NetworkCredential myCredentials = new NetworkCredential(&quot;&quot;,&quot;&quot;,&quot;&quot;);\n    myCredentials.Domain = domain;\n    myCredentials.UserName = username;\n    myCredentials.Password = passwd;\n\n    // Create a WebRequest with the specified URL. \n    WebRequest myWebRequest = WebRequest.Create(url); \n    myWebRequest.Credentials = myCredentials;\n    Console.WriteLine(&quot;<br><br>User Credentials:- Domain : {0} , UserName : {1} , Password : {2}&quot;,myCredentials.Domain,myCredentials.UserName,myCredentials.Password);\n    \n    // Send the request and wait for a response.\n    Console.WriteLine(&quot;<br><br>Request to Url is sent.Waiting for response...Please wait ...&quot;);\n    WebResponse myWebResponse = myWebRequest.GetResponse();\n    \n    // Process the response.\n    Console.WriteLine(&quot;<br>Response received sucessfully&quot;);\n    \n    // Release the resources of the response object.\n    myWebResponse.Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"NetworkCredential_UserName_Password_Domain#1\">            &#39; Create an empty instance of the NetworkCredential class.\n            Dim myCredentials As New NetworkCredential(&quot;&quot;, &quot;&quot;, &quot;&quot;)\n            myCredentials.Domain = domain\n            myCredentials.UserName = username\n            myCredentials.Password = passwd\n            \n            &#39; Create a WebRequest with the specified URL. \n            Dim myWebRequest As WebRequest = WebRequest.Create(url)\n            myWebRequest.Credentials = myCredentials\n            Console.WriteLine(ControlChars.Cr + ControlChars.Cr + &quot;User Credentials:- Domain : {0} , UserName : {1} , Password : {2}&quot;, myCredentials.Domain, myCredentials.UserName, myCredentials.Password)\n            \n            &#39; Send the request and wait for a response.\n            Console.WriteLine(ControlChars.Cr + ControlChars.Cr + &quot;Request to Url is sent.Waiting for response...Please wait ...&quot;)\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n            &#39; Process the response.\n            Console.WriteLine(ControlChars.Cr + &quot;Response received sucessfully&quot;)\n            &#39; Release the resources of the response object.\n            myWebResponse.Close()\n</code></pre><pre><code class=\"lang-cpp\" name=\"NetworkCredential_UserName_Password_Domain#1\">      // Create an empty instance of the NetworkCredential class.\n      NetworkCredential^ myCredentials = gcnew NetworkCredential( &quot;&quot;,&quot;&quot;,&quot;&quot; );\n      myCredentials-&gt;Domain = domain;\n      myCredentials-&gt;UserName = username;\n      myCredentials-&gt;Password = passwd;\n      \n      // Create a WebRequest with the specified URL.\n      WebRequest^ myWebRequest = WebRequest::Create( url );\n      myWebRequest-&gt;Credentials = myCredentials;\n      Console::WriteLine( &quot;<br><br>User Credentials:- Domain : {0} , UserName : {1} , Password : {2}&quot;,\n         myCredentials-&gt;Domain, myCredentials-&gt;UserName, myCredentials-&gt;Password );\n      \n      // Send the request and wait for a response.\n      Console::WriteLine( &quot;<br><br>Request to Url is sent.Waiting for response...Please wait ...&quot; );\n      WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n      \n      // Process the response.\n      Console::WriteLine( &quot;<br>Response received sucessfully&quot; );\n      \n      // Release the resources of the response object.\n      myWebResponse-&gt;Close();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkCredential_GetCredential_System_Uri_System_String_\">\r\n    \r\n            <a id=\"System_Net_NetworkCredential_GetCredential_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCredential(Uri,String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class for the specified Uniform Resource Identifier (URI) and authentication type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.NetworkCredential GetCredential (Uri uri, string authType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI that the client provides authentication for.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>authType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of authentication requested, as defined in the <span class=\"xref\">stem.Net.IAuthenticationModule.AuthenticationType*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the GetCredential method to retrieve a <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> object for the specified URI.  </p>\n<pre><code class=\"lang-cpp\" name=\"NetworkCredential_GetCredential#1\">      // Create an empty instance of the NetworkCredential class.\n      NetworkCredential^ myCredentials = gcnew NetworkCredential( userName,password );\n      \n      // Create a webrequest with the specified URL.\n      WebRequest^ myWebRequest = WebRequest::Create( url );\n      myWebRequest-&gt;Credentials = myCredentials-&gt;GetCredential( gcnew Uri( url ), &quot;&quot; );\n      Console::WriteLine( &quot;<br><br>User Credentials:- UserName : {0} , Password : {1}&quot;,\n         myCredentials-&gt;UserName, myCredentials-&gt;Password );\n      \n      // Send the request and wait for a response.\n      Console::WriteLine( &quot;<br><br>Request to Url is sent.Waiting for response...Please wait ...&quot; );\n      WebResponse^ myWebResponse = myWebRequest-&gt;GetResponse();\n      \n      // Process the response.\n      Console::WriteLine( &quot;<br>Response received sucessfully&quot; );\n      \n      // Release the resources of the response object.\n      myWebResponse-&gt;Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"NetworkCredential_GetCredential#1\">            &#39; Create an empty instance of the NetworkCredential class.\n            Dim myCredentials As New NetworkCredential(userName, password)\n            &#39; Create a WebRequest with the specified URL. \n            Dim myWebRequest As WebRequest = WebRequest.Create(url)\n            &#39; GetCredential returns the same NetworkCredential instance that invoked it, \n            &#39; irrespective of what parameters were provided to it. \n             myWebRequest.Credentials = myCredentials.GetCredential(New Uri(url), &quot;&quot;)\n            Console.WriteLine(ControlChars.Cr + ControlChars.Cr + &quot;User Credentials:- UserName : {0} , Password : {1}&quot;, myCredentials.UserName, myCredentials.Password)\n            &#39; Send the request and wait for a response.\n            Console.WriteLine(ControlChars.Cr + ControlChars.Cr + &quot;Request to Url is sent.Waiting for response...Please wait ...&quot;)\n            Dim myWebResponse As WebResponse = myWebRequest.GetResponse()\n            &#39; Process the response.\n            Console.WriteLine(ControlChars.Cr + &quot;Response received sucessfully&quot;)\n            &#39; Release the resources of the response object.\n            myWebResponse.Close()\n</code></pre><pre><code class=\"lang-cs\" name=\"NetworkCredential_GetCredential#1\">      // Create an empty instance of the NetworkCredential class.\n      NetworkCredential myCredentials = new NetworkCredential(userName,password);\n      // Create a webrequest with the specified URL. \n      WebRequest myWebRequest = WebRequest.Create(url); \n      myWebRequest.Credentials = myCredentials.GetCredential(new Uri(url),&quot;&quot;);\n      Console.WriteLine(&quot;<br><br>User Credentials:- UserName : {0} , Password : {1}&quot;,myCredentials.UserName,myCredentials.Password);\n      // Send the request and wait for a response.\n      Console.WriteLine(&quot;<br><br>Request to Url is sent.Waiting for response...Please wait ...&quot;);\n      WebResponse myWebResponse = myWebRequest.GetResponse();\n      // Process the response.\n         Console.WriteLine(&quot;<br>Response received sucessfully&quot;);\n      // Release the resources of the response object.\n      myWebResponse.Close();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_NetworkCredential_GetCredential_System_String_System_Int32_System_String_\">\r\n    \r\n            <a id=\"System_Net_NetworkCredential_GetCredential_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCredential(String,Int32,String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns an instance of the <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> class for the specified host, port, and authentication type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.NetworkCredential GetCredential (string host, int port, string authenticationType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>host</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The host computer that authenticates the client.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>port</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port on the <code>host</code> that the client communicates with.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>authenticationType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of authentication requested, as defined in the <span class=\"xref\">stem.Net.IAuthenticationModule.AuthenticationType*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.networkcredential\" data-linktype=\"relative-path\">NetworkCredential</a> for the specified host, port, and authentication protocol, or <code>null</code> if there are no credentials available for the specified host, port, and authentication protocol.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of <code>authType</code> corresponds to the <a class=\"xref\" href=\"system.net.iauthenticationmodule#System_Net_IAuthenticationModule_AuthenticationType_\" data-linktype=\"relative-path\">AuthenticationType</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.NetworkCredential.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkCredential\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkCredential..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkCredential.Domain\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkCredential.GetCredential\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkCredential.Password\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkCredential.SecurePassword\">\r\n<meta name=\"APIName\" content=\"System.Net.NetworkCredential.UserName\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-10 02:17 AM\">\r\n<meta name=\"document_id\" content=\"8580adbd-a75d-5e6b-98f0-50dd71fec508\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Net\\NetworkCredential.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides credentials for password-based authentication schemes such as basic, digest, NTLM, and Kerberos authentication.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.NetworkCredential\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.NetworkCredential.yml","open_to_public_contributors":true,"api_name":["System.Net.NetworkCredential","System.Net.NetworkCredential..ctor","System.Net.NetworkCredential.Domain","System.Net.NetworkCredential.GetCredential","System.Net.NetworkCredential.Password","System.Net.NetworkCredential.SecurePassword","System.Net.NetworkCredential.UserName"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.NetworkCredential","System::Net::NetworkCredential","System.Net.NetworkCredential.#ctor","System::Net::NetworkCredential::#ctor","System.Net.NetworkCredential.Domain","System::Net::NetworkCredential::Domain","System.Net.NetworkCredential.GetCredential","System::Net::NetworkCredential::GetCredential","System.Net.NetworkCredential.Password","System::Net::NetworkCredential::Password","System.Net.NetworkCredential.SecurePassword","System::Net::NetworkCredential::SecurePassword","System.Net.NetworkCredential.UserName","System::Net::NetworkCredential::UserName"],"dev_langs":["csharp"],"updated_at":"2017-03-10 02:17 AM","document_id":"8580adbd-a75d-5e6b-98f0-50dd71fec508","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Net\\NetworkCredential.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net/NetworkCredential.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"NetworkCredential class | Microsoft Docs","_op_ogTitle":"NetworkCredential class","description":"Provides credentials for password-based authentication schemes such as basic, digest, NTLM, and Kerberos authentication.\n","toc_asset_id":"_splitted/System.Net/toc.json","toc_rel":"_splitted/System.Net/toc.json","source_url":"","ms.assetid":"System.Net.NetworkCredential","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.networkcredential","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.networkcredential","fileRelativePath":"System.Net.NetworkCredential.html"},"themesRelativePathToOutputRoot":"_themes/"}