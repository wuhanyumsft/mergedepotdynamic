{"content":"    \r\n    <h1 id=\"System_Data_Linq_IMultipleResults\">\r\n      <span class=\"lang-csharp\">IMultipleResults</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents the results of mapped functions or queries with variable return sequences.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IMultipleResults : IDisposable, System.Data.Linq.IFunctionResult</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>In the following SQL code example, the result shape depends on the input (<code>shape =1</code> or <code>shape = 2</code>). The order that the projections are returned is undefined.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_Linq_IMultipleResults_GetResult__1\" data-linktype=\"self-bookmark\">GetResult&lt;TElement&gt;()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the next result as a sequence of a specified type.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_Linq_IMultipleResults_GetResult__1\">\r\n    \r\n            <a id=\"System_Data_Linq_IMultipleResults_GetResult_TElement__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetResult&lt;TElement&gt;()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the next result as a sequence of a specified type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.IEnumerable&lt;TElement&gt; GetResult&lt;TElement&gt; ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<span class=\"xref\">TElement</span>&gt;</div>\r\n                  </div>\r\n                  <p>An enumeration for iterating over the results.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You would use code similar to the following to execute this stored procedure.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must use the GetResult(TElement) pattern to obtain an enumerator of the correct type, based on your knowledge of the stored procedure.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"DLinqSprox#5\">Northwnd db = new Northwnd(@&quot;c:<br>orthwnd.mdf&quot;);\n\n// Assign the results of the procedure with an argument\n// of (1) to local variable &#39;result&#39;.\nIMultipleResults result = db.VariableResultShapes(1);\n\n// Iterate through the list and write results (the company names)\n// to the console.\nforeach(VariableResultShapesResult1 compName in\n    result.GetResult&lt;VariableResultShapesResult1&gt;())\n{\n    Console.WriteLine(compName.CompanyName);\n}\n\n// Pause to view company names; press Enter to continue.\nConsole.ReadLine();\n\n// Assign the results of the procedure with an argument\n// of (2) to local variable &#39;result&#39;.\nIMultipleResults result2 = db.VariableResultShapes(2);\n\n// Iterate through the list and write results (the order IDs)\n// to the console.\nforeach (VariableResultShapesResult2 ord in\n    result2.GetResult&lt;VariableResultShapesResult2&gt;())\n{\n    Console.WriteLine(ord.OrderID);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DLinqSprox#5\">Dim db As New Northwnd(&quot;c:<br>orthwnd.mdf&quot;)\n\n&#39; Assign the results of the procedure with an argument\n&#39; of (1) to local variable &#39;result&#39;.\nDim result As IMultipleResults = db.VariableResultShapes(1)\n\n&#39; Iterate through the list and write results (the company name)\n&#39; to the console.\nFor Each compName As VariableResultShapesResult1 _\n    In result.GetResult(Of VariableResultShapesResult1)()\n    Console.WriteLine(compName.CompanyName)\nNext\n\n&#39; Pause to view company names; press Enter to continue.\nConsole.ReadLine()\n\n&#39; Assign the results of the procedure with an argument\n&#39; of (2) to local variable &#39;result.&#39;\nDim result2 As IMultipleResults = db.VariableResultShapes(2)\n\n&#39; Iterate through the list and write results (the order IDs)\n&#39; to the console.\nFor Each ord As VariableResultShapesResult2 _\n    In result2.GetResult(Of VariableResultShapesResult2)()\n    Console.WriteLine(ord.OrderID)\nNext\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.Linq.IMultipleResults.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.Linq.IMultipleResults.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.IMultipleResults\">\r\n<meta name=\"APIName\" content=\"System.Data.Linq.IMultipleResults.GetResult&lt;TElement&gt;\">\r\n<meta name=\"APILocation\" content=\"System.Data.Linq.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5002b181-5e2c-0322-4195-116b9635a402\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the results of mapped functions or queries with variable return sequences.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Data.Linq/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.Linq.IMultipleResults\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.Linq.IMultipleResults.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.Linq.IMultipleResults.yml","open_to_public_contributors":true,"api_name":["System.Data.Linq.IMultipleResults","System.Data.Linq.IMultipleResults.GetResult<TElement>"],"api_location":["System.Data.Linq.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.Linq.IMultipleResults","System::Data::Linq::IMultipleResults","System.Data.Linq.IMultipleResults.GetResult``1","System::Data::Linq::IMultipleResults::GetResult``1"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5002b181-5e2c-0322-4195-116b9635a402","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Data.Linq/IMultipleResults.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IMultipleResults interface | Microsoft Docs","_op_ogTitle":"IMultipleResults interface","description":"Represents the results of mapped functions or queries with variable return sequences.\n","toc_asset_id":"_splitted/System.Data.Linq/toc.json","toc_rel":"_splitted/System.Data.Linq/toc.json","source_url":"","ms.assetid":"System.Data.Linq.IMultipleResults","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.linq.imultipleresults","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.linq.imultipleresults","fileRelativePath":"System.Data.Linq.IMultipleResults.html"},"themesRelativePathToOutputRoot":"_themes/"}