{"content":"    \r\n    <h1 id=\"System_Web_Services_Discovery_SchemaReference\">\r\n      <span class=\"lang-csharp\">SchemaReference</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a reference in a discovery document to an XML Schema Definition (XSD) language schema. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Xml.Serialization.XmlRoot(&quot;schemaRef&quot;, Namespace=&quot;http://schemas.xmlsoap.org/disco/schema/&quot;)]\npublic sealed class SchemaReference : System.Web.Services.Discovery.DiscoveryReference</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.discovery.discoveryreference\" data-linktype=\"relative-path\">System.Web.Services.Discovery.DiscoveryReference</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SchemaReference</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.discovery.discoveryreference#System_Web_Services_Discovery_DiscoveryReference_ClientProtocol\" data-linktype=\"relative-path\">ClientProtocol</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.discovery.discoveryreference#System_Web_Services_Discovery_DiscoveryReference_FilenameFromUrl_System_String_\" data-linktype=\"relative-path\">FilenameFromUrl(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.discovery.discoveryreference#System_Web_Services_Discovery_DiscoveryReference_Resolve\" data-linktype=\"relative-path\">Resolve()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>XML Web services discovery involves discovering the available XML Web services given, a URL. A The URL typically points to a discovery document, which usually has a.disco file name extension. The discovery document contains references to information about the existance of XML Web services. These references can refer to service descriptions, XSD schemas, or other discovery documents. This class represents a reference to an XSD schema.  </p>\n<p> Within a discovery document, a reference to an XSD schema is contained within a <code>schemaRef</code> XML element. The <code>schemaRef</code> XML element has an XML namespace and a <code>ref</code> attribute. The value of the XML namespace must match the <a class=\"xref\" href=\"system.web.services.discovery.schemareference#System_Web_Services_Discovery_SchemaReference_Namespace\" data-linktype=\"relative-path\">Namespace</a> constant. The value of the <code>ref</code> attribute is placed in the <a class=\"xref\" href=\"system.web.services.discovery.schemareference#System_Web_Services_Discovery_SchemaReference_Ref_\" data-linktype=\"relative-path\">Ref</a> property.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_SchemaReference__ctor\" data-linktype=\"self-bookmark\">SchemaReference()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.services.discovery.schemareference\" data-linktype=\"relative-path\">SchemaReference</a> class using default values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_SchemaReference__ctor_System_String_\" data-linktype=\"self-bookmark\">SchemaReference(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.services.discovery.schemareference\" data-linktype=\"relative-path\">SchemaReference</a> class using the supplied URL as the XSD schema reference.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_SchemaReference_Namespace\" data-linktype=\"self-bookmark\">Namespace</a></div>\r\n          </td>\r\n            <td>\r\n            <p>XML namespace for XSD schema references in discovery documents.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_SchemaReference_DefaultFilename\" data-linktype=\"self-bookmark\">DefaultFilename</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the name of the default file to use when saving the referenced XSD schema.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_SchemaReference_Ref\" data-linktype=\"self-bookmark\">Ref</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the URL to the referenced XSD schema.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_SchemaReference_Schema\" data-linktype=\"self-bookmark\">Schema</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an <a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a> object representing the XSD schema.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_SchemaReference_TargetNamespace\" data-linktype=\"self-bookmark\">TargetNamespace</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <code>targetNamespace</code> XML attribute of the XSD schema.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_SchemaReference_Url\" data-linktype=\"self-bookmark\">Url</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the URL for the schema reference.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_SchemaReference_ReadDocument_System_IO_Stream_\" data-linktype=\"self-bookmark\">ReadDocument(Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads and returns the XSD schema from the passed <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_SchemaReference_Resolve_System_String_System_IO_Stream_\" data-linktype=\"self-bookmark\">Resolve(String,Stream)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Discovery_SchemaReference_WriteDocument_System_Object_System_IO_Stream_\" data-linktype=\"self-bookmark\">WriteDocument(Object,Stream)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Writes the passed XSD schema into the passed <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_SchemaReference__ctor\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_SchemaReference__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SchemaReference()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.services.discovery.schemareference\" data-linktype=\"relative-path\">SchemaReference</a> class using default values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SchemaReference ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"SchemaReference#2\">\n         // Reference the schema document.\n         string myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n         XmlSchema myXmlSchema;\n\n         // Create the client protocol.\n         DiscoveryClientProtocol myDiscoveryClientProtocol = \n             new DiscoveryClientProtocol();\n         myDiscoveryClientProtocol.Credentials = \n             CredentialCache.DefaultCredentials;\n         \n         //  Create a schema reference.\n         SchemaReference mySchemaReferenceNoParam = new SchemaReference();\n         \n         SchemaReference mySchemaReference = new SchemaReference(myStringUrl);\n                  \n         // Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol;\n\n         // Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; + \n             mySchemaReference.DefaultFilename);\n         \n         // Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; + SchemaReference.Namespace);\n         \n         FileStream myStream = \n             new FileStream(myStringUrl,FileMode.OpenOrCreate); \n         \n         // Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream);\n         \n         // Get the schema of referenced document.\n         myXmlSchema = mySchemaReference.Schema;\n         \n         Console.WriteLine(&quot;Reference is : &quot; + mySchemaReference.Ref);      \n         \n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; + \n             mySchemaReference.TargetNamespace);\n\n         Console.WriteLine(&quot;URL is : &quot; + mySchemaReference.Url);\n         \n         // Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema,myStream);\n\n         myStream.Close();\n         mySchemaReference = null;\n</code></pre><pre><code class=\"lang-vb\" name=\"SchemaReference#2\">\n         &#39; Reference the schema document.\n         Dim myStringUrl As String = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;\n         Dim myXmlSchema As XmlSchema\n\n         &#39; Create the client protocol.\n         Dim myDiscoveryClientProtocol As DiscoveryClientProtocol = _\n             New DiscoveryClientProtocol()\n         myDiscoveryClientProtocol.Credentials = _\n             CredentialCache.DefaultCredentials\n\n         &#39; Create a schema reference.\n         Dim mySchemaReferenceNoParam As SchemaReference = New SchemaReference()\n\n         Dim mySchemaReference As SchemaReference = _\n             New SchemaReference(myStringUrl)\n\n         &#39; Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol\n\n         &#39; Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; &amp; _\n             mySchemaReference.DefaultFilename)\n\n         &#39; Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; &amp; SchemaReference.Namespace)\n\n         Dim myStream As FileStream = _\n             New FileStream(myStringUrl, FileMode.OpenOrCreate)\n\n         &#39; Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream)\n\n         &#39; Get the schema of the referenced document.\n         myXmlSchema = mySchemaReference.Schema\n\n         Console.WriteLine(&quot;Reference is : &quot; &amp; mySchemaReference.Ref)\n\n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; &amp; _\n             mySchemaReference.TargetNamespace)\n\n         Console.WriteLine(&quot;URL is : &quot; &amp; mySchemaReference.Url)\n\n         &#39; Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema, myStream)\n\n         myStream.Close()\n         mySchemaReference = Nothing\n</code></pre><pre><code class=\"lang-cpp\" name=\"SchemaReference#2\">      // Reference the schema document.\n      String^ myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n      XmlSchema^ myXmlSchema;\n      \n      // Create the client protocol.\n      DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n      myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n      \n      //  Create a schema reference.\n      SchemaReference^ mySchemaReferenceNoParam = gcnew SchemaReference;\n      SchemaReference^ mySchemaReference = gcnew SchemaReference( myStringUrl );\n      \n      // Set the client protocol.\n      mySchemaReference-&gt;ClientProtocol = myDiscoveryClientProtocol;\n      \n      // Access the default file name associated with the schema reference.\n      Console::WriteLine( &quot;Default filename is : {0}&quot;, mySchemaReference-&gt;DefaultFilename );\n      \n      // Access the namespace associated with schema reference class.\n      Console::WriteLine( &quot;Namespace is : {0}&quot;, SchemaReference::Namespace );\n      FileStream^ myStream = gcnew FileStream( myStringUrl,FileMode::OpenOrCreate );\n      \n      // Read the document in a stream.\n      mySchemaReference-&gt;ReadDocument( myStream );\n      \n      // Get the schema of referenced document.\n      myXmlSchema = mySchemaReference-&gt;Schema;\n      Console::WriteLine( &quot;Reference is : {0}&quot;, mySchemaReference-&gt;Ref );\n      Console::WriteLine( &quot;Target namespace (default empty) is : {0}&quot;, mySchemaReference-&gt;TargetNamespace );\n      Console::WriteLine( &quot;URL is : {0}&quot;, mySchemaReference-&gt;Url );\n      \n      // Write the document in the stream.\n      mySchemaReference-&gt;WriteDocument( myXmlSchema, myStream );\n      myStream-&gt;Close();\n      mySchemaReference = nullptr;\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_SchemaReference__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_SchemaReference__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SchemaReference(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.services.discovery.schemareference\" data-linktype=\"relative-path\">SchemaReference</a> class using the supplied URL as the XSD schema reference.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SchemaReference (string url);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>url</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URL for the XSD schema. Initializes the <span class=\"xref\">stem.Web.Services.Discovery.SchemaReference.Ref*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"SchemaReference#2\">\n         // Reference the schema document.\n         string myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n         XmlSchema myXmlSchema;\n\n         // Create the client protocol.\n         DiscoveryClientProtocol myDiscoveryClientProtocol = \n             new DiscoveryClientProtocol();\n         myDiscoveryClientProtocol.Credentials = \n             CredentialCache.DefaultCredentials;\n         \n         //  Create a schema reference.\n         SchemaReference mySchemaReferenceNoParam = new SchemaReference();\n         \n         SchemaReference mySchemaReference = new SchemaReference(myStringUrl);\n                  \n         // Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol;\n\n         // Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; + \n             mySchemaReference.DefaultFilename);\n         \n         // Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; + SchemaReference.Namespace);\n         \n         FileStream myStream = \n             new FileStream(myStringUrl,FileMode.OpenOrCreate); \n         \n         // Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream);\n         \n         // Get the schema of referenced document.\n         myXmlSchema = mySchemaReference.Schema;\n         \n         Console.WriteLine(&quot;Reference is : &quot; + mySchemaReference.Ref);      \n         \n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; + \n             mySchemaReference.TargetNamespace);\n\n         Console.WriteLine(&quot;URL is : &quot; + mySchemaReference.Url);\n         \n         // Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema,myStream);\n\n         myStream.Close();\n         mySchemaReference = null;\n</code></pre><pre><code class=\"lang-vb\" name=\"SchemaReference#2\">\n         &#39; Reference the schema document.\n         Dim myStringUrl As String = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;\n         Dim myXmlSchema As XmlSchema\n\n         &#39; Create the client protocol.\n         Dim myDiscoveryClientProtocol As DiscoveryClientProtocol = _\n             New DiscoveryClientProtocol()\n         myDiscoveryClientProtocol.Credentials = _\n             CredentialCache.DefaultCredentials\n\n         &#39; Create a schema reference.\n         Dim mySchemaReferenceNoParam As SchemaReference = New SchemaReference()\n\n         Dim mySchemaReference As SchemaReference = _\n             New SchemaReference(myStringUrl)\n\n         &#39; Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol\n\n         &#39; Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; &amp; _\n             mySchemaReference.DefaultFilename)\n\n         &#39; Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; &amp; SchemaReference.Namespace)\n\n         Dim myStream As FileStream = _\n             New FileStream(myStringUrl, FileMode.OpenOrCreate)\n\n         &#39; Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream)\n\n         &#39; Get the schema of the referenced document.\n         myXmlSchema = mySchemaReference.Schema\n\n         Console.WriteLine(&quot;Reference is : &quot; &amp; mySchemaReference.Ref)\n\n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; &amp; _\n             mySchemaReference.TargetNamespace)\n\n         Console.WriteLine(&quot;URL is : &quot; &amp; mySchemaReference.Url)\n\n         &#39; Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema, myStream)\n\n         myStream.Close()\n         mySchemaReference = Nothing\n</code></pre><pre><code class=\"lang-cpp\" name=\"SchemaReference#2\">      // Reference the schema document.\n      String^ myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n      XmlSchema^ myXmlSchema;\n      \n      // Create the client protocol.\n      DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n      myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n      \n      //  Create a schema reference.\n      SchemaReference^ mySchemaReferenceNoParam = gcnew SchemaReference;\n      SchemaReference^ mySchemaReference = gcnew SchemaReference( myStringUrl );\n      \n      // Set the client protocol.\n      mySchemaReference-&gt;ClientProtocol = myDiscoveryClientProtocol;\n      \n      // Access the default file name associated with the schema reference.\n      Console::WriteLine( &quot;Default filename is : {0}&quot;, mySchemaReference-&gt;DefaultFilename );\n      \n      // Access the namespace associated with schema reference class.\n      Console::WriteLine( &quot;Namespace is : {0}&quot;, SchemaReference::Namespace );\n      FileStream^ myStream = gcnew FileStream( myStringUrl,FileMode::OpenOrCreate );\n      \n      // Read the document in a stream.\n      mySchemaReference-&gt;ReadDocument( myStream );\n      \n      // Get the schema of referenced document.\n      myXmlSchema = mySchemaReference-&gt;Schema;\n      Console::WriteLine( &quot;Reference is : {0}&quot;, mySchemaReference-&gt;Ref );\n      Console::WriteLine( &quot;Target namespace (default empty) is : {0}&quot;, mySchemaReference-&gt;TargetNamespace );\n      Console::WriteLine( &quot;URL is : {0}&quot;, mySchemaReference-&gt;Url );\n      \n      // Write the document in the stream.\n      mySchemaReference-&gt;WriteDocument( myXmlSchema, myStream );\n      myStream-&gt;Close();\n      mySchemaReference = nullptr;\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_SchemaReference_Namespace\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Namespace</div>        \r\n          </div>\r\n    \r\n            <p>XML namespace for XSD schema references in discovery documents.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public const string Namespace;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Within a discovery document, a reference to an XSD schema is contained within a <code>schemaRef</code> XML element, which is a part of the XML namespace specified in the Namespace constant.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"SchemaReference#2\">\n         // Reference the schema document.\n         string myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n         XmlSchema myXmlSchema;\n\n         // Create the client protocol.\n         DiscoveryClientProtocol myDiscoveryClientProtocol = \n             new DiscoveryClientProtocol();\n         myDiscoveryClientProtocol.Credentials = \n             CredentialCache.DefaultCredentials;\n         \n         //  Create a schema reference.\n         SchemaReference mySchemaReferenceNoParam = new SchemaReference();\n         \n         SchemaReference mySchemaReference = new SchemaReference(myStringUrl);\n                  \n         // Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol;\n\n         // Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; + \n             mySchemaReference.DefaultFilename);\n         \n         // Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; + SchemaReference.Namespace);\n         \n         FileStream myStream = \n             new FileStream(myStringUrl,FileMode.OpenOrCreate); \n         \n         // Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream);\n         \n         // Get the schema of referenced document.\n         myXmlSchema = mySchemaReference.Schema;\n         \n         Console.WriteLine(&quot;Reference is : &quot; + mySchemaReference.Ref);      \n         \n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; + \n             mySchemaReference.TargetNamespace);\n\n         Console.WriteLine(&quot;URL is : &quot; + mySchemaReference.Url);\n         \n         // Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema,myStream);\n\n         myStream.Close();\n         mySchemaReference = null;\n</code></pre><pre><code class=\"lang-vb\" name=\"SchemaReference#2\">\n         &#39; Reference the schema document.\n         Dim myStringUrl As String = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;\n         Dim myXmlSchema As XmlSchema\n\n         &#39; Create the client protocol.\n         Dim myDiscoveryClientProtocol As DiscoveryClientProtocol = _\n             New DiscoveryClientProtocol()\n         myDiscoveryClientProtocol.Credentials = _\n             CredentialCache.DefaultCredentials\n\n         &#39; Create a schema reference.\n         Dim mySchemaReferenceNoParam As SchemaReference = New SchemaReference()\n\n         Dim mySchemaReference As SchemaReference = _\n             New SchemaReference(myStringUrl)\n\n         &#39; Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol\n\n         &#39; Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; &amp; _\n             mySchemaReference.DefaultFilename)\n\n         &#39; Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; &amp; SchemaReference.Namespace)\n\n         Dim myStream As FileStream = _\n             New FileStream(myStringUrl, FileMode.OpenOrCreate)\n\n         &#39; Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream)\n\n         &#39; Get the schema of the referenced document.\n         myXmlSchema = mySchemaReference.Schema\n\n         Console.WriteLine(&quot;Reference is : &quot; &amp; mySchemaReference.Ref)\n\n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; &amp; _\n             mySchemaReference.TargetNamespace)\n\n         Console.WriteLine(&quot;URL is : &quot; &amp; mySchemaReference.Url)\n\n         &#39; Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema, myStream)\n\n         myStream.Close()\n         mySchemaReference = Nothing\n</code></pre><pre><code class=\"lang-cpp\" name=\"SchemaReference#2\">      // Reference the schema document.\n      String^ myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n      XmlSchema^ myXmlSchema;\n      \n      // Create the client protocol.\n      DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n      myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n      \n      //  Create a schema reference.\n      SchemaReference^ mySchemaReferenceNoParam = gcnew SchemaReference;\n      SchemaReference^ mySchemaReference = gcnew SchemaReference( myStringUrl );\n      \n      // Set the client protocol.\n      mySchemaReference-&gt;ClientProtocol = myDiscoveryClientProtocol;\n      \n      // Access the default file name associated with the schema reference.\n      Console::WriteLine( &quot;Default filename is : {0}&quot;, mySchemaReference-&gt;DefaultFilename );\n      \n      // Access the namespace associated with schema reference class.\n      Console::WriteLine( &quot;Namespace is : {0}&quot;, SchemaReference::Namespace );\n      FileStream^ myStream = gcnew FileStream( myStringUrl,FileMode::OpenOrCreate );\n      \n      // Read the document in a stream.\n      mySchemaReference-&gt;ReadDocument( myStream );\n      \n      // Get the schema of referenced document.\n      myXmlSchema = mySchemaReference-&gt;Schema;\n      Console::WriteLine( &quot;Reference is : {0}&quot;, mySchemaReference-&gt;Ref );\n      Console::WriteLine( &quot;Target namespace (default empty) is : {0}&quot;, mySchemaReference-&gt;TargetNamespace );\n      Console::WriteLine( &quot;URL is : {0}&quot;, mySchemaReference-&gt;Url );\n      \n      // Write the document in the stream.\n      mySchemaReference-&gt;WriteDocument( myXmlSchema, myStream );\n      myStream-&gt;Close();\n      mySchemaReference = nullptr;\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_SchemaReference_DefaultFilename\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_SchemaReference_DefaultFilename_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultFilename</div>        \r\n          </div>\r\n    \r\n            <p>Gets the name of the default file to use when saving the referenced XSD schema.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string DefaultFilename { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Default name to use when saving the referenced XSD schema to a file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"SchemaReference#2\">\n         // Reference the schema document.\n         string myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n         XmlSchema myXmlSchema;\n\n         // Create the client protocol.\n         DiscoveryClientProtocol myDiscoveryClientProtocol = \n             new DiscoveryClientProtocol();\n         myDiscoveryClientProtocol.Credentials = \n             CredentialCache.DefaultCredentials;\n         \n         //  Create a schema reference.\n         SchemaReference mySchemaReferenceNoParam = new SchemaReference();\n         \n         SchemaReference mySchemaReference = new SchemaReference(myStringUrl);\n                  \n         // Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol;\n\n         // Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; + \n             mySchemaReference.DefaultFilename);\n         \n         // Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; + SchemaReference.Namespace);\n         \n         FileStream myStream = \n             new FileStream(myStringUrl,FileMode.OpenOrCreate); \n         \n         // Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream);\n         \n         // Get the schema of referenced document.\n         myXmlSchema = mySchemaReference.Schema;\n         \n         Console.WriteLine(&quot;Reference is : &quot; + mySchemaReference.Ref);      \n         \n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; + \n             mySchemaReference.TargetNamespace);\n\n         Console.WriteLine(&quot;URL is : &quot; + mySchemaReference.Url);\n         \n         // Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema,myStream);\n\n         myStream.Close();\n         mySchemaReference = null;\n</code></pre><pre><code class=\"lang-vb\" name=\"SchemaReference#2\">\n         &#39; Reference the schema document.\n         Dim myStringUrl As String = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;\n         Dim myXmlSchema As XmlSchema\n\n         &#39; Create the client protocol.\n         Dim myDiscoveryClientProtocol As DiscoveryClientProtocol = _\n             New DiscoveryClientProtocol()\n         myDiscoveryClientProtocol.Credentials = _\n             CredentialCache.DefaultCredentials\n\n         &#39; Create a schema reference.\n         Dim mySchemaReferenceNoParam As SchemaReference = New SchemaReference()\n\n         Dim mySchemaReference As SchemaReference = _\n             New SchemaReference(myStringUrl)\n\n         &#39; Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol\n\n         &#39; Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; &amp; _\n             mySchemaReference.DefaultFilename)\n\n         &#39; Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; &amp; SchemaReference.Namespace)\n\n         Dim myStream As FileStream = _\n             New FileStream(myStringUrl, FileMode.OpenOrCreate)\n\n         &#39; Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream)\n\n         &#39; Get the schema of the referenced document.\n         myXmlSchema = mySchemaReference.Schema\n\n         Console.WriteLine(&quot;Reference is : &quot; &amp; mySchemaReference.Ref)\n\n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; &amp; _\n             mySchemaReference.TargetNamespace)\n\n         Console.WriteLine(&quot;URL is : &quot; &amp; mySchemaReference.Url)\n\n         &#39; Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema, myStream)\n\n         myStream.Close()\n         mySchemaReference = Nothing\n</code></pre><pre><code class=\"lang-cpp\" name=\"SchemaReference#2\">      // Reference the schema document.\n      String^ myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n      XmlSchema^ myXmlSchema;\n      \n      // Create the client protocol.\n      DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n      myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n      \n      //  Create a schema reference.\n      SchemaReference^ mySchemaReferenceNoParam = gcnew SchemaReference;\n      SchemaReference^ mySchemaReference = gcnew SchemaReference( myStringUrl );\n      \n      // Set the client protocol.\n      mySchemaReference-&gt;ClientProtocol = myDiscoveryClientProtocol;\n      \n      // Access the default file name associated with the schema reference.\n      Console::WriteLine( &quot;Default filename is : {0}&quot;, mySchemaReference-&gt;DefaultFilename );\n      \n      // Access the namespace associated with schema reference class.\n      Console::WriteLine( &quot;Namespace is : {0}&quot;, SchemaReference::Namespace );\n      FileStream^ myStream = gcnew FileStream( myStringUrl,FileMode::OpenOrCreate );\n      \n      // Read the document in a stream.\n      mySchemaReference-&gt;ReadDocument( myStream );\n      \n      // Get the schema of referenced document.\n      myXmlSchema = mySchemaReference-&gt;Schema;\n      Console::WriteLine( &quot;Reference is : {0}&quot;, mySchemaReference-&gt;Ref );\n      Console::WriteLine( &quot;Target namespace (default empty) is : {0}&quot;, mySchemaReference-&gt;TargetNamespace );\n      Console::WriteLine( &quot;URL is : {0}&quot;, mySchemaReference-&gt;Url );\n      \n      // Write the document in the stream.\n      mySchemaReference-&gt;WriteDocument( myXmlSchema, myStream );\n      myStream-&gt;Close();\n      mySchemaReference = nullptr;\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_SchemaReference_Ref\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_SchemaReference_Ref_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Ref</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the URL to the referenced XSD schema.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Ref { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The URL for the referenced XSD schema. The default value is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In a discovery document, a reference to an XSD schema is contained within a <code>schemaRef</code> XML element. The <code>schemaRef</code> XML element has a <code>ref</code> attribute, which is the URL for the referenced XSD schema. The <a class=\"xref\" href=\"system.web.services.discovery.contractreference#System_Web_Services_Discovery_ContractReference_Ref_\" data-linktype=\"relative-path\">Ref</a> property represents the value of the <code>ref</code> attribute.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"SchemaReference#2\">\n         // Reference the schema document.\n         string myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n         XmlSchema myXmlSchema;\n\n         // Create the client protocol.\n         DiscoveryClientProtocol myDiscoveryClientProtocol = \n             new DiscoveryClientProtocol();\n         myDiscoveryClientProtocol.Credentials = \n             CredentialCache.DefaultCredentials;\n         \n         //  Create a schema reference.\n         SchemaReference mySchemaReferenceNoParam = new SchemaReference();\n         \n         SchemaReference mySchemaReference = new SchemaReference(myStringUrl);\n                  \n         // Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol;\n\n         // Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; + \n             mySchemaReference.DefaultFilename);\n         \n         // Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; + SchemaReference.Namespace);\n         \n         FileStream myStream = \n             new FileStream(myStringUrl,FileMode.OpenOrCreate); \n         \n         // Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream);\n         \n         // Get the schema of referenced document.\n         myXmlSchema = mySchemaReference.Schema;\n         \n         Console.WriteLine(&quot;Reference is : &quot; + mySchemaReference.Ref);      \n         \n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; + \n             mySchemaReference.TargetNamespace);\n\n         Console.WriteLine(&quot;URL is : &quot; + mySchemaReference.Url);\n         \n         // Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema,myStream);\n\n         myStream.Close();\n         mySchemaReference = null;\n</code></pre><pre><code class=\"lang-vb\" name=\"SchemaReference#2\">\n         &#39; Reference the schema document.\n         Dim myStringUrl As String = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;\n         Dim myXmlSchema As XmlSchema\n\n         &#39; Create the client protocol.\n         Dim myDiscoveryClientProtocol As DiscoveryClientProtocol = _\n             New DiscoveryClientProtocol()\n         myDiscoveryClientProtocol.Credentials = _\n             CredentialCache.DefaultCredentials\n\n         &#39; Create a schema reference.\n         Dim mySchemaReferenceNoParam As SchemaReference = New SchemaReference()\n\n         Dim mySchemaReference As SchemaReference = _\n             New SchemaReference(myStringUrl)\n\n         &#39; Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol\n\n         &#39; Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; &amp; _\n             mySchemaReference.DefaultFilename)\n\n         &#39; Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; &amp; SchemaReference.Namespace)\n\n         Dim myStream As FileStream = _\n             New FileStream(myStringUrl, FileMode.OpenOrCreate)\n\n         &#39; Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream)\n\n         &#39; Get the schema of the referenced document.\n         myXmlSchema = mySchemaReference.Schema\n\n         Console.WriteLine(&quot;Reference is : &quot; &amp; mySchemaReference.Ref)\n\n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; &amp; _\n             mySchemaReference.TargetNamespace)\n\n         Console.WriteLine(&quot;URL is : &quot; &amp; mySchemaReference.Url)\n\n         &#39; Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema, myStream)\n\n         myStream.Close()\n         mySchemaReference = Nothing\n</code></pre><pre><code class=\"lang-cpp\" name=\"SchemaReference#2\">      // Reference the schema document.\n      String^ myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n      XmlSchema^ myXmlSchema;\n      \n      // Create the client protocol.\n      DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n      myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n      \n      //  Create a schema reference.\n      SchemaReference^ mySchemaReferenceNoParam = gcnew SchemaReference;\n      SchemaReference^ mySchemaReference = gcnew SchemaReference( myStringUrl );\n      \n      // Set the client protocol.\n      mySchemaReference-&gt;ClientProtocol = myDiscoveryClientProtocol;\n      \n      // Access the default file name associated with the schema reference.\n      Console::WriteLine( &quot;Default filename is : {0}&quot;, mySchemaReference-&gt;DefaultFilename );\n      \n      // Access the namespace associated with schema reference class.\n      Console::WriteLine( &quot;Namespace is : {0}&quot;, SchemaReference::Namespace );\n      FileStream^ myStream = gcnew FileStream( myStringUrl,FileMode::OpenOrCreate );\n      \n      // Read the document in a stream.\n      mySchemaReference-&gt;ReadDocument( myStream );\n      \n      // Get the schema of referenced document.\n      myXmlSchema = mySchemaReference-&gt;Schema;\n      Console::WriteLine( &quot;Reference is : {0}&quot;, mySchemaReference-&gt;Ref );\n      Console::WriteLine( &quot;Target namespace (default empty) is : {0}&quot;, mySchemaReference-&gt;TargetNamespace );\n      Console::WriteLine( &quot;URL is : {0}&quot;, mySchemaReference-&gt;Url );\n      \n      // Write the document in the stream.\n      mySchemaReference-&gt;WriteDocument( myXmlSchema, myStream );\n      myStream-&gt;Close();\n      mySchemaReference = nullptr;\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_SchemaReference_Schema\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_SchemaReference_Schema_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Schema</div>        \r\n          </div>\r\n    \r\n            <p>Gets an <a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a> object representing the XSD schema.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Xml.Schema.XmlSchema Schema { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a> object representing the XSD schema.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Web.Services.Discovery.DiscoveryReference.ClientProtocol*</span> property is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> An error occurred during the download or resolution of the XSD schema using <span class=\"xref\">stem.Web.Services.Discovery.DiscoveryReference.ClientProtocol*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the XSD schema has not been downloaded and added to the <a class=\"xref\" href=\"system.web.services.discovery.discoveryclientprotocol#System_Web_Services_Discovery_DiscoveryClientProtocol_Documents_\" data-linktype=\"relative-path\">Documents</a> property of <a class=\"xref\" href=\"system.web.services.discovery.discoveryreference#System_Web_Services_Discovery_DiscoveryReference_ClientProtocol_\" data-linktype=\"relative-path\">ClientProtocol</a>, an attempt to download and resolve the document is made.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"SchemaReference#2\">\n         // Reference the schema document.\n         string myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n         XmlSchema myXmlSchema;\n\n         // Create the client protocol.\n         DiscoveryClientProtocol myDiscoveryClientProtocol = \n             new DiscoveryClientProtocol();\n         myDiscoveryClientProtocol.Credentials = \n             CredentialCache.DefaultCredentials;\n         \n         //  Create a schema reference.\n         SchemaReference mySchemaReferenceNoParam = new SchemaReference();\n         \n         SchemaReference mySchemaReference = new SchemaReference(myStringUrl);\n                  \n         // Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol;\n\n         // Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; + \n             mySchemaReference.DefaultFilename);\n         \n         // Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; + SchemaReference.Namespace);\n         \n         FileStream myStream = \n             new FileStream(myStringUrl,FileMode.OpenOrCreate); \n         \n         // Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream);\n         \n         // Get the schema of referenced document.\n         myXmlSchema = mySchemaReference.Schema;\n         \n         Console.WriteLine(&quot;Reference is : &quot; + mySchemaReference.Ref);      \n         \n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; + \n             mySchemaReference.TargetNamespace);\n\n         Console.WriteLine(&quot;URL is : &quot; + mySchemaReference.Url);\n         \n         // Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema,myStream);\n\n         myStream.Close();\n         mySchemaReference = null;\n</code></pre><pre><code class=\"lang-vb\" name=\"SchemaReference#2\">\n         &#39; Reference the schema document.\n         Dim myStringUrl As String = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;\n         Dim myXmlSchema As XmlSchema\n\n         &#39; Create the client protocol.\n         Dim myDiscoveryClientProtocol As DiscoveryClientProtocol = _\n             New DiscoveryClientProtocol()\n         myDiscoveryClientProtocol.Credentials = _\n             CredentialCache.DefaultCredentials\n\n         &#39; Create a schema reference.\n         Dim mySchemaReferenceNoParam As SchemaReference = New SchemaReference()\n\n         Dim mySchemaReference As SchemaReference = _\n             New SchemaReference(myStringUrl)\n\n         &#39; Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol\n\n         &#39; Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; &amp; _\n             mySchemaReference.DefaultFilename)\n\n         &#39; Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; &amp; SchemaReference.Namespace)\n\n         Dim myStream As FileStream = _\n             New FileStream(myStringUrl, FileMode.OpenOrCreate)\n\n         &#39; Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream)\n\n         &#39; Get the schema of the referenced document.\n         myXmlSchema = mySchemaReference.Schema\n\n         Console.WriteLine(&quot;Reference is : &quot; &amp; mySchemaReference.Ref)\n\n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; &amp; _\n             mySchemaReference.TargetNamespace)\n\n         Console.WriteLine(&quot;URL is : &quot; &amp; mySchemaReference.Url)\n\n         &#39; Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema, myStream)\n\n         myStream.Close()\n         mySchemaReference = Nothing\n</code></pre><pre><code class=\"lang-cpp\" name=\"SchemaReference#2\">      // Reference the schema document.\n      String^ myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n      XmlSchema^ myXmlSchema;\n      \n      // Create the client protocol.\n      DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n      myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n      \n      //  Create a schema reference.\n      SchemaReference^ mySchemaReferenceNoParam = gcnew SchemaReference;\n      SchemaReference^ mySchemaReference = gcnew SchemaReference( myStringUrl );\n      \n      // Set the client protocol.\n      mySchemaReference-&gt;ClientProtocol = myDiscoveryClientProtocol;\n      \n      // Access the default file name associated with the schema reference.\n      Console::WriteLine( &quot;Default filename is : {0}&quot;, mySchemaReference-&gt;DefaultFilename );\n      \n      // Access the namespace associated with schema reference class.\n      Console::WriteLine( &quot;Namespace is : {0}&quot;, SchemaReference::Namespace );\n      FileStream^ myStream = gcnew FileStream( myStringUrl,FileMode::OpenOrCreate );\n      \n      // Read the document in a stream.\n      mySchemaReference-&gt;ReadDocument( myStream );\n      \n      // Get the schema of referenced document.\n      myXmlSchema = mySchemaReference-&gt;Schema;\n      Console::WriteLine( &quot;Reference is : {0}&quot;, mySchemaReference-&gt;Ref );\n      Console::WriteLine( &quot;Target namespace (default empty) is : {0}&quot;, mySchemaReference-&gt;TargetNamespace );\n      Console::WriteLine( &quot;URL is : {0}&quot;, mySchemaReference-&gt;Url );\n      \n      // Write the document in the stream.\n      mySchemaReference-&gt;WriteDocument( myXmlSchema, myStream );\n      myStream-&gt;Close();\n      mySchemaReference = nullptr;\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_SchemaReference_TargetNamespace\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_SchemaReference_TargetNamespace_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TargetNamespace</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <code>targetNamespace</code> XML attribute of the XSD schema.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string TargetNamespace { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The <code>targetNamespace</code> XML attribute of the XSD schema. The default value is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"SchemaReference#2\">\n         // Reference the schema document.\n         string myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n         XmlSchema myXmlSchema;\n\n         // Create the client protocol.\n         DiscoveryClientProtocol myDiscoveryClientProtocol = \n             new DiscoveryClientProtocol();\n         myDiscoveryClientProtocol.Credentials = \n             CredentialCache.DefaultCredentials;\n         \n         //  Create a schema reference.\n         SchemaReference mySchemaReferenceNoParam = new SchemaReference();\n         \n         SchemaReference mySchemaReference = new SchemaReference(myStringUrl);\n                  \n         // Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol;\n\n         // Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; + \n             mySchemaReference.DefaultFilename);\n         \n         // Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; + SchemaReference.Namespace);\n         \n         FileStream myStream = \n             new FileStream(myStringUrl,FileMode.OpenOrCreate); \n         \n         // Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream);\n         \n         // Get the schema of referenced document.\n         myXmlSchema = mySchemaReference.Schema;\n         \n         Console.WriteLine(&quot;Reference is : &quot; + mySchemaReference.Ref);      \n         \n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; + \n             mySchemaReference.TargetNamespace);\n\n         Console.WriteLine(&quot;URL is : &quot; + mySchemaReference.Url);\n         \n         // Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema,myStream);\n\n         myStream.Close();\n         mySchemaReference = null;\n</code></pre><pre><code class=\"lang-vb\" name=\"SchemaReference#2\">\n         &#39; Reference the schema document.\n         Dim myStringUrl As String = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;\n         Dim myXmlSchema As XmlSchema\n\n         &#39; Create the client protocol.\n         Dim myDiscoveryClientProtocol As DiscoveryClientProtocol = _\n             New DiscoveryClientProtocol()\n         myDiscoveryClientProtocol.Credentials = _\n             CredentialCache.DefaultCredentials\n\n         &#39; Create a schema reference.\n         Dim mySchemaReferenceNoParam As SchemaReference = New SchemaReference()\n\n         Dim mySchemaReference As SchemaReference = _\n             New SchemaReference(myStringUrl)\n\n         &#39; Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol\n\n         &#39; Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; &amp; _\n             mySchemaReference.DefaultFilename)\n\n         &#39; Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; &amp; SchemaReference.Namespace)\n\n         Dim myStream As FileStream = _\n             New FileStream(myStringUrl, FileMode.OpenOrCreate)\n\n         &#39; Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream)\n\n         &#39; Get the schema of the referenced document.\n         myXmlSchema = mySchemaReference.Schema\n\n         Console.WriteLine(&quot;Reference is : &quot; &amp; mySchemaReference.Ref)\n\n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; &amp; _\n             mySchemaReference.TargetNamespace)\n\n         Console.WriteLine(&quot;URL is : &quot; &amp; mySchemaReference.Url)\n\n         &#39; Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema, myStream)\n\n         myStream.Close()\n         mySchemaReference = Nothing\n</code></pre><pre><code class=\"lang-cpp\" name=\"SchemaReference#2\">      // Reference the schema document.\n      String^ myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n      XmlSchema^ myXmlSchema;\n      \n      // Create the client protocol.\n      DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n      myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n      \n      //  Create a schema reference.\n      SchemaReference^ mySchemaReferenceNoParam = gcnew SchemaReference;\n      SchemaReference^ mySchemaReference = gcnew SchemaReference( myStringUrl );\n      \n      // Set the client protocol.\n      mySchemaReference-&gt;ClientProtocol = myDiscoveryClientProtocol;\n      \n      // Access the default file name associated with the schema reference.\n      Console::WriteLine( &quot;Default filename is : {0}&quot;, mySchemaReference-&gt;DefaultFilename );\n      \n      // Access the namespace associated with schema reference class.\n      Console::WriteLine( &quot;Namespace is : {0}&quot;, SchemaReference::Namespace );\n      FileStream^ myStream = gcnew FileStream( myStringUrl,FileMode::OpenOrCreate );\n      \n      // Read the document in a stream.\n      mySchemaReference-&gt;ReadDocument( myStream );\n      \n      // Get the schema of referenced document.\n      myXmlSchema = mySchemaReference-&gt;Schema;\n      Console::WriteLine( &quot;Reference is : {0}&quot;, mySchemaReference-&gt;Ref );\n      Console::WriteLine( &quot;Target namespace (default empty) is : {0}&quot;, mySchemaReference-&gt;TargetNamespace );\n      Console::WriteLine( &quot;URL is : {0}&quot;, mySchemaReference-&gt;Url );\n      \n      // Write the document in the stream.\n      mySchemaReference-&gt;WriteDocument( myXmlSchema, myStream );\n      myStream-&gt;Close();\n      mySchemaReference = nullptr;\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_SchemaReference_Url\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_SchemaReference_Url_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Url</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the URL for the schema reference.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Url { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The URL for the referenced XSD schema. The default value is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For the <a class=\"xref\" href=\"system.web.services.discovery.schemareference\" data-linktype=\"relative-path\">SchemaReference</a> class, the Url property returns the value of the <a class=\"xref\" href=\"system.web.services.discovery.schemareference#System_Web_Services_Discovery_SchemaReference_Ref_\" data-linktype=\"relative-path\">Ref</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"SchemaReference#2\">\n         // Reference the schema document.\n         string myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n         XmlSchema myXmlSchema;\n\n         // Create the client protocol.\n         DiscoveryClientProtocol myDiscoveryClientProtocol = \n             new DiscoveryClientProtocol();\n         myDiscoveryClientProtocol.Credentials = \n             CredentialCache.DefaultCredentials;\n         \n         //  Create a schema reference.\n         SchemaReference mySchemaReferenceNoParam = new SchemaReference();\n         \n         SchemaReference mySchemaReference = new SchemaReference(myStringUrl);\n                  \n         // Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol;\n\n         // Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; + \n             mySchemaReference.DefaultFilename);\n         \n         // Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; + SchemaReference.Namespace);\n         \n         FileStream myStream = \n             new FileStream(myStringUrl,FileMode.OpenOrCreate); \n         \n         // Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream);\n         \n         // Get the schema of referenced document.\n         myXmlSchema = mySchemaReference.Schema;\n         \n         Console.WriteLine(&quot;Reference is : &quot; + mySchemaReference.Ref);      \n         \n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; + \n             mySchemaReference.TargetNamespace);\n\n         Console.WriteLine(&quot;URL is : &quot; + mySchemaReference.Url);\n         \n         // Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema,myStream);\n\n         myStream.Close();\n         mySchemaReference = null;\n</code></pre><pre><code class=\"lang-vb\" name=\"SchemaReference#2\">\n         &#39; Reference the schema document.\n         Dim myStringUrl As String = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;\n         Dim myXmlSchema As XmlSchema\n\n         &#39; Create the client protocol.\n         Dim myDiscoveryClientProtocol As DiscoveryClientProtocol = _\n             New DiscoveryClientProtocol()\n         myDiscoveryClientProtocol.Credentials = _\n             CredentialCache.DefaultCredentials\n\n         &#39; Create a schema reference.\n         Dim mySchemaReferenceNoParam As SchemaReference = New SchemaReference()\n\n         Dim mySchemaReference As SchemaReference = _\n             New SchemaReference(myStringUrl)\n\n         &#39; Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol\n\n         &#39; Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; &amp; _\n             mySchemaReference.DefaultFilename)\n\n         &#39; Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; &amp; SchemaReference.Namespace)\n\n         Dim myStream As FileStream = _\n             New FileStream(myStringUrl, FileMode.OpenOrCreate)\n\n         &#39; Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream)\n\n         &#39; Get the schema of the referenced document.\n         myXmlSchema = mySchemaReference.Schema\n\n         Console.WriteLine(&quot;Reference is : &quot; &amp; mySchemaReference.Ref)\n\n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; &amp; _\n             mySchemaReference.TargetNamespace)\n\n         Console.WriteLine(&quot;URL is : &quot; &amp; mySchemaReference.Url)\n\n         &#39; Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema, myStream)\n\n         myStream.Close()\n         mySchemaReference = Nothing\n</code></pre><pre><code class=\"lang-cpp\" name=\"SchemaReference#2\">      // Reference the schema document.\n      String^ myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n      XmlSchema^ myXmlSchema;\n      \n      // Create the client protocol.\n      DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n      myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n      \n      //  Create a schema reference.\n      SchemaReference^ mySchemaReferenceNoParam = gcnew SchemaReference;\n      SchemaReference^ mySchemaReference = gcnew SchemaReference( myStringUrl );\n      \n      // Set the client protocol.\n      mySchemaReference-&gt;ClientProtocol = myDiscoveryClientProtocol;\n      \n      // Access the default file name associated with the schema reference.\n      Console::WriteLine( &quot;Default filename is : {0}&quot;, mySchemaReference-&gt;DefaultFilename );\n      \n      // Access the namespace associated with schema reference class.\n      Console::WriteLine( &quot;Namespace is : {0}&quot;, SchemaReference::Namespace );\n      FileStream^ myStream = gcnew FileStream( myStringUrl,FileMode::OpenOrCreate );\n      \n      // Read the document in a stream.\n      mySchemaReference-&gt;ReadDocument( myStream );\n      \n      // Get the schema of referenced document.\n      myXmlSchema = mySchemaReference-&gt;Schema;\n      Console::WriteLine( &quot;Reference is : {0}&quot;, mySchemaReference-&gt;Ref );\n      Console::WriteLine( &quot;Target namespace (default empty) is : {0}&quot;, mySchemaReference-&gt;TargetNamespace );\n      Console::WriteLine( &quot;URL is : {0}&quot;, mySchemaReference-&gt;Url );\n      \n      // Write the document in the stream.\n      mySchemaReference-&gt;WriteDocument( myXmlSchema, myStream );\n      myStream-&gt;Close();\n      mySchemaReference = nullptr;\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_SchemaReference_ReadDocument_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_SchemaReference_ReadDocument_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadDocument(Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Reads and returns the XSD schema from the passed <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override object ReadDocument (System.IO.Stream stream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> containing the XSD schema.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a> containing the contents of the referenced XSD schema.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"SchemaReference#2\">\n         // Reference the schema document.\n         string myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n         XmlSchema myXmlSchema;\n\n         // Create the client protocol.\n         DiscoveryClientProtocol myDiscoveryClientProtocol = \n             new DiscoveryClientProtocol();\n         myDiscoveryClientProtocol.Credentials = \n             CredentialCache.DefaultCredentials;\n         \n         //  Create a schema reference.\n         SchemaReference mySchemaReferenceNoParam = new SchemaReference();\n         \n         SchemaReference mySchemaReference = new SchemaReference(myStringUrl);\n                  \n         // Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol;\n\n         // Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; + \n             mySchemaReference.DefaultFilename);\n         \n         // Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; + SchemaReference.Namespace);\n         \n         FileStream myStream = \n             new FileStream(myStringUrl,FileMode.OpenOrCreate); \n         \n         // Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream);\n         \n         // Get the schema of referenced document.\n         myXmlSchema = mySchemaReference.Schema;\n         \n         Console.WriteLine(&quot;Reference is : &quot; + mySchemaReference.Ref);      \n         \n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; + \n             mySchemaReference.TargetNamespace);\n\n         Console.WriteLine(&quot;URL is : &quot; + mySchemaReference.Url);\n         \n         // Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema,myStream);\n\n         myStream.Close();\n         mySchemaReference = null;\n</code></pre><pre><code class=\"lang-vb\" name=\"SchemaReference#2\">\n         &#39; Reference the schema document.\n         Dim myStringUrl As String = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;\n         Dim myXmlSchema As XmlSchema\n\n         &#39; Create the client protocol.\n         Dim myDiscoveryClientProtocol As DiscoveryClientProtocol = _\n             New DiscoveryClientProtocol()\n         myDiscoveryClientProtocol.Credentials = _\n             CredentialCache.DefaultCredentials\n\n         &#39; Create a schema reference.\n         Dim mySchemaReferenceNoParam As SchemaReference = New SchemaReference()\n\n         Dim mySchemaReference As SchemaReference = _\n             New SchemaReference(myStringUrl)\n\n         &#39; Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol\n\n         &#39; Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; &amp; _\n             mySchemaReference.DefaultFilename)\n\n         &#39; Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; &amp; SchemaReference.Namespace)\n\n         Dim myStream As FileStream = _\n             New FileStream(myStringUrl, FileMode.OpenOrCreate)\n\n         &#39; Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream)\n\n         &#39; Get the schema of the referenced document.\n         myXmlSchema = mySchemaReference.Schema\n\n         Console.WriteLine(&quot;Reference is : &quot; &amp; mySchemaReference.Ref)\n\n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; &amp; _\n             mySchemaReference.TargetNamespace)\n\n         Console.WriteLine(&quot;URL is : &quot; &amp; mySchemaReference.Url)\n\n         &#39; Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema, myStream)\n\n         myStream.Close()\n         mySchemaReference = Nothing\n</code></pre><pre><code class=\"lang-cpp\" name=\"SchemaReference#2\">      // Reference the schema document.\n      String^ myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n      XmlSchema^ myXmlSchema;\n      \n      // Create the client protocol.\n      DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n      myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n      \n      //  Create a schema reference.\n      SchemaReference^ mySchemaReferenceNoParam = gcnew SchemaReference;\n      SchemaReference^ mySchemaReference = gcnew SchemaReference( myStringUrl );\n      \n      // Set the client protocol.\n      mySchemaReference-&gt;ClientProtocol = myDiscoveryClientProtocol;\n      \n      // Access the default file name associated with the schema reference.\n      Console::WriteLine( &quot;Default filename is : {0}&quot;, mySchemaReference-&gt;DefaultFilename );\n      \n      // Access the namespace associated with schema reference class.\n      Console::WriteLine( &quot;Namespace is : {0}&quot;, SchemaReference::Namespace );\n      FileStream^ myStream = gcnew FileStream( myStringUrl,FileMode::OpenOrCreate );\n      \n      // Read the document in a stream.\n      mySchemaReference-&gt;ReadDocument( myStream );\n      \n      // Get the schema of referenced document.\n      myXmlSchema = mySchemaReference-&gt;Schema;\n      Console::WriteLine( &quot;Reference is : {0}&quot;, mySchemaReference-&gt;Ref );\n      Console::WriteLine( &quot;Target namespace (default empty) is : {0}&quot;, mySchemaReference-&gt;TargetNamespace );\n      Console::WriteLine( &quot;URL is : {0}&quot;, mySchemaReference-&gt;Url );\n      \n      // Write the document in the stream.\n      mySchemaReference-&gt;WriteDocument( myXmlSchema, myStream );\n      myStream-&gt;Close();\n      mySchemaReference = nullptr;\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_SchemaReference_Resolve_System_String_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_SchemaReference_Resolve_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Resolve(String,Stream)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Resolve (string contentType, System.IO.Stream stream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Discovery_SchemaReference_WriteDocument_System_Object_System_IO_Stream_\">\r\n    \r\n            <a id=\"System_Web_Services_Discovery_SchemaReference_WriteDocument_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteDocument(Object,Stream)</div>        \r\n          </div>\r\n    \r\n            <p>Writes the passed XSD schema into the passed <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteDocument (object document, System.IO.Stream stream);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>document</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.schema.xmlschema\" data-linktype=\"relative-path\">XmlSchema</a> to write into <code>stream</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>stream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> into which the serialized XSD schema is written.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"SchemaReference#2\">\n         // Reference the schema document.\n         string myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n         XmlSchema myXmlSchema;\n\n         // Create the client protocol.\n         DiscoveryClientProtocol myDiscoveryClientProtocol = \n             new DiscoveryClientProtocol();\n         myDiscoveryClientProtocol.Credentials = \n             CredentialCache.DefaultCredentials;\n         \n         //  Create a schema reference.\n         SchemaReference mySchemaReferenceNoParam = new SchemaReference();\n         \n         SchemaReference mySchemaReference = new SchemaReference(myStringUrl);\n                  \n         // Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol;\n\n         // Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; + \n             mySchemaReference.DefaultFilename);\n         \n         // Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; + SchemaReference.Namespace);\n         \n         FileStream myStream = \n             new FileStream(myStringUrl,FileMode.OpenOrCreate); \n         \n         // Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream);\n         \n         // Get the schema of referenced document.\n         myXmlSchema = mySchemaReference.Schema;\n         \n         Console.WriteLine(&quot;Reference is : &quot; + mySchemaReference.Ref);      \n         \n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; + \n             mySchemaReference.TargetNamespace);\n\n         Console.WriteLine(&quot;URL is : &quot; + mySchemaReference.Url);\n         \n         // Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema,myStream);\n\n         myStream.Close();\n         mySchemaReference = null;\n</code></pre><pre><code class=\"lang-vb\" name=\"SchemaReference#2\">\n         &#39; Reference the schema document.\n         Dim myStringUrl As String = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;\n         Dim myXmlSchema As XmlSchema\n\n         &#39; Create the client protocol.\n         Dim myDiscoveryClientProtocol As DiscoveryClientProtocol = _\n             New DiscoveryClientProtocol()\n         myDiscoveryClientProtocol.Credentials = _\n             CredentialCache.DefaultCredentials\n\n         &#39; Create a schema reference.\n         Dim mySchemaReferenceNoParam As SchemaReference = New SchemaReference()\n\n         Dim mySchemaReference As SchemaReference = _\n             New SchemaReference(myStringUrl)\n\n         &#39; Set the client protocol.\n         mySchemaReference.ClientProtocol = myDiscoveryClientProtocol\n\n         &#39; Access the default file name associated with the schema reference.\n         Console.WriteLine(&quot;Default filename is : &quot; &amp; _\n             mySchemaReference.DefaultFilename)\n\n         &#39; Access the namespace associated with schema reference class.\n         Console.WriteLine(&quot;Namespace is : &quot; &amp; SchemaReference.Namespace)\n\n         Dim myStream As FileStream = _\n             New FileStream(myStringUrl, FileMode.OpenOrCreate)\n\n         &#39; Read the document in a stream.\n         mySchemaReference.ReadDocument(myStream)\n\n         &#39; Get the schema of the referenced document.\n         myXmlSchema = mySchemaReference.Schema\n\n         Console.WriteLine(&quot;Reference is : &quot; &amp; mySchemaReference.Ref)\n\n         Console.WriteLine(&quot;Target namespace (default empty) is : &quot; &amp; _\n             mySchemaReference.TargetNamespace)\n\n         Console.WriteLine(&quot;URL is : &quot; &amp; mySchemaReference.Url)\n\n         &#39; Write the document in the stream.\n         mySchemaReference.WriteDocument(myXmlSchema, myStream)\n\n         myStream.Close()\n         mySchemaReference = Nothing\n</code></pre><pre><code class=\"lang-cpp\" name=\"SchemaReference#2\">      // Reference the schema document.\n      String^ myStringUrl = &quot;c:\\\\Inetpub\\\\wwwroot\\\\dataservice.xsd&quot;;\n      XmlSchema^ myXmlSchema;\n      \n      // Create the client protocol.\n      DiscoveryClientProtocol^ myDiscoveryClientProtocol = gcnew DiscoveryClientProtocol;\n      myDiscoveryClientProtocol-&gt;Credentials = CredentialCache::DefaultCredentials;\n      \n      //  Create a schema reference.\n      SchemaReference^ mySchemaReferenceNoParam = gcnew SchemaReference;\n      SchemaReference^ mySchemaReference = gcnew SchemaReference( myStringUrl );\n      \n      // Set the client protocol.\n      mySchemaReference-&gt;ClientProtocol = myDiscoveryClientProtocol;\n      \n      // Access the default file name associated with the schema reference.\n      Console::WriteLine( &quot;Default filename is : {0}&quot;, mySchemaReference-&gt;DefaultFilename );\n      \n      // Access the namespace associated with schema reference class.\n      Console::WriteLine( &quot;Namespace is : {0}&quot;, SchemaReference::Namespace );\n      FileStream^ myStream = gcnew FileStream( myStringUrl,FileMode::OpenOrCreate );\n      \n      // Read the document in a stream.\n      mySchemaReference-&gt;ReadDocument( myStream );\n      \n      // Get the schema of referenced document.\n      myXmlSchema = mySchemaReference-&gt;Schema;\n      Console::WriteLine( &quot;Reference is : {0}&quot;, mySchemaReference-&gt;Ref );\n      Console::WriteLine( &quot;Target namespace (default empty) is : {0}&quot;, mySchemaReference-&gt;TargetNamespace );\n      Console::WriteLine( &quot;URL is : {0}&quot;, mySchemaReference-&gt;Url );\n      \n      // Write the document in the stream.\n      mySchemaReference-&gt;WriteDocument( myXmlSchema, myStream );\n      myStream-&gt;Close();\n      mySchemaReference = nullptr;\n      \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Services.Discovery.SchemaReference.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Services.Discovery.SchemaReference.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.SchemaReference\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.SchemaReference..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.SchemaReference.DefaultFilename\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.SchemaReference.Namespace\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.SchemaReference.ReadDocument\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.SchemaReference.Ref\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.SchemaReference.Resolve\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.SchemaReference.Schema\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.SchemaReference.TargetNamespace\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.SchemaReference.Url\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Discovery.SchemaReference.WriteDocument\">\r\n<meta name=\"APILocation\" content=\"System.Web.Services.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"f6a4b9cd-e266-eeb4-33fc-e355ee6dcbe8\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Web.Services.Discovery\\SchemaReference.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a reference in a discovery document to an XML Schema Definition (XSD) language schema. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.Services.Discovery/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Services.Discovery.SchemaReference\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Services.Discovery.SchemaReference.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Services.Discovery.SchemaReference.yml","open_to_public_contributors":true,"api_name":["System.Web.Services.Discovery.SchemaReference","System.Web.Services.Discovery.SchemaReference..ctor","System.Web.Services.Discovery.SchemaReference.DefaultFilename","System.Web.Services.Discovery.SchemaReference.Namespace","System.Web.Services.Discovery.SchemaReference.ReadDocument","System.Web.Services.Discovery.SchemaReference.Ref","System.Web.Services.Discovery.SchemaReference.Resolve","System.Web.Services.Discovery.SchemaReference.Schema","System.Web.Services.Discovery.SchemaReference.TargetNamespace","System.Web.Services.Discovery.SchemaReference.Url","System.Web.Services.Discovery.SchemaReference.WriteDocument"],"api_location":["System.Web.Services.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Services.Discovery.SchemaReference","System::Web::Services::Discovery::SchemaReference","System.Web.Services.Discovery.SchemaReference.#ctor","System::Web::Services::Discovery::SchemaReference::#ctor","System.Web.Services.Discovery.SchemaReference.DefaultFilename","System::Web::Services::Discovery::SchemaReference::DefaultFilename","System.Web.Services.Discovery.SchemaReference.Namespace","System::Web::Services::Discovery::SchemaReference::Namespace","System.Web.Services.Discovery.SchemaReference.ReadDocument","System::Web::Services::Discovery::SchemaReference::ReadDocument","System.Web.Services.Discovery.SchemaReference.Ref","System::Web::Services::Discovery::SchemaReference::Ref","System.Web.Services.Discovery.SchemaReference.Resolve","System::Web::Services::Discovery::SchemaReference::Resolve","System.Web.Services.Discovery.SchemaReference.Schema","System::Web::Services::Discovery::SchemaReference::Schema","System.Web.Services.Discovery.SchemaReference.TargetNamespace","System::Web::Services::Discovery::SchemaReference::TargetNamespace","System.Web.Services.Discovery.SchemaReference.Url","System::Web::Services::Discovery::SchemaReference::Url","System.Web.Services.Discovery.SchemaReference.WriteDocument","System::Web::Services::Discovery::SchemaReference::WriteDocument"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"f6a4b9cd-e266-eeb4-33fc-e355ee6dcbe8","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Web.Services.Discovery\\SchemaReference.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.Services.Discovery/SchemaReference.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SchemaReference class | Microsoft Docs","_op_ogTitle":"SchemaReference class","description":"Represents a reference in a discovery document to an XML Schema Definition (XSD) language schema. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Web.Services.Discovery/toc.json","toc_rel":"_splitted/System.Web.Services.Discovery/toc.json","source_url":"","ms.assetid":"System.Web.Services.Discovery.SchemaReference","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.services.discovery.schemareference","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.services.discovery.schemareference","fileRelativePath":"System.Web.Services.Discovery.SchemaReference.html"},"themesRelativePathToOutputRoot":"_themes/"}