{"content":"    \r\n    <h1 id=\"System_Linq_Lookup_2\">\r\n      <span class=\"lang-csharp\">Lookup&lt;TKey,TElement&gt;</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a collection of keys each mapped to one or more values.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class Lookup&lt;TKey,TElement&gt; : System.Collections.Generic.IEnumerable&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt;, System.Linq.ILookup&lt;TKey,TElement&gt;</code></pre>\r\n    \r\n    \r\n    \t<h2>Type Parameters</h2>\r\n    \r\n    \t<table class=\"nameValue\">\r\n    \t\t<tr>\r\n    \t\t<td>\r\n    \t\tTKey\r\n    \t\t</td>\r\n    \t\t<td>\r\n    \t\t<p>The type of the keys in the Lookup(TKey,.</p>\n\r\n    \t\t</td>\r\n    \t\t</tr>\r\n    \t\t<tr>\r\n    \t\t<td>\r\n    \t\tTElement\r\n    \t\t</td>\r\n    \t\t<td>\r\n    \t\t<p>The type of the elements of each <span class=\"xref\">stem.Collections.Generic.IEnumerable`1</span> value in the Lookup(TKey,.</p>\n\r\n    \t\t</td>\r\n    \t\t</tr>\r\n    \t</table>\r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Lookup&lt;TKey,TElement&gt;</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A Lookup(TKey, resembles a <a class=\"xref\" href=\"system.collections.generic.dictionary-2\" data-linktype=\"relative-path\">Dictionary&lt;TKey,TValue&gt;</a>. The difference is that a <a class=\"xref\" href=\"system.collections.generic.dictionary-2\" data-linktype=\"relative-path\">Dictionary&lt;TKey,TValue&gt;</a> maps keys to single values, whereas a Lookup(TKey, maps keys to collections of values.  </p>\n<p> You can create an instance of a Lookup(TKey, by calling &lt;xref:System.Linq.Enumerable.ToLookup%2A&gt; on an object that implements <a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable&lt;T&gt;</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> There is no public constructor to create a new instance of a Lookup(TKey,. Additionally, Lookup(TKey, objects are immutable, that is, you cannot add or remove elements or keys from a Lookup(TKey, object after it has been created.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Lookup_2_Count\" data-linktype=\"self-bookmark\">Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of key/value collection pairs in the <span class=\"xref\">stem.Linq.Lookup`2</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Lookup_2_Item__0_\" data-linktype=\"self-bookmark\">Item(TKey)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of values indexed by the specified key.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Lookup_2_ApplyResultSelector__1_System_Func__0_System_Collections_Generic_IEnumerable__1____0__\" data-linktype=\"self-bookmark\">ApplyResultSelector&lt;TResult&gt;(Func&lt;TKey,IEnumerable&lt;TElement&gt;,TResult&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies a transform function to each key and its associated values and returns the results.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Lookup_2_Contains__0_\" data-linktype=\"self-bookmark\">Contains(TKey)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether a specified key is in the <span class=\"xref\">stem.Linq.Lookup`2</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Lookup_2_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a generic enumerator that iterates through the <span class=\"xref\">stem.Linq.Lookup`2</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Linq_Lookup_2_System_Collections_IEnumerable_GetEnumerator\" data-linktype=\"self-bookmark\">IEnumerable.GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an enumerator that iterates through the <span class=\"xref\">stem.Linq.Lookup`2</span>. This class cannot be inherited.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Lookup_2_Count\">\r\n    \r\n            <a id=\"System_Linq_Lookup_2_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Count</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of key/value collection pairs in the <span class=\"xref\">stem.Linq.Lookup`2</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of key/value collection pairs in the <span class=\"xref\">stem.Linq.Lookup`2</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value of the Count property does not change because items cannot be added to or removed from a <a class=\"xref\" href=\"system.linq.lookup-2\" data-linktype=\"relative-path\">Lookup&lt;TKey,TElement&gt;</a> object after it has been created.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use Count to determine the number of key/value collection pairs in a <a class=\"xref\" href=\"system.linq.lookup-2\" data-linktype=\"relative-path\">Lookup&lt;TKey,TElement&gt;</a>. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.linq.lookup-2\" data-linktype=\"relative-path\">Lookup&lt;TKey,TElement&gt;</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Linq.Lookup#2\">            // Get the number of key-collection pairs in the Lookup.\n            int count = lookup.Count;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Linq.Lookup#2\">        &#39; Get the number of key-collection pairs in the Lookup.\n        Dim count As Integer = lookup.Count\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Lookup_2_Item__0_\">\r\n    \r\n            <a id=\"System_Linq_Lookup_2_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(TKey)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of values indexed by the specified key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.IEnumerable&lt;TElement&gt; this[TKey key] { get; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TKey</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key of the desired collection of values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<span class=\"xref\">TElement</span>&gt;</div>\r\n                  </div>\r\n                  <p>The collection of values indexed by the specified key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This indexed property provides the ability to index a specific collection of values in the <a class=\"xref\" href=\"system.linq.lookup-2\" data-linktype=\"relative-path\">Lookup&lt;TKey,TElement&gt;</a> by using the following syntax: <code>myLookup[key]</code> in Visual C# or <code>myLookup(key)</code> in Visual Basic. If the <code>key</code> is not found in the collection, an empty sequence is returned.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use Item to index directly into a <a class=\"xref\" href=\"system.linq.lookup-2\" data-linktype=\"relative-path\">Lookup&lt;TKey,TElement&gt;</a>. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.linq.lookup-2\" data-linktype=\"relative-path\">Lookup&lt;TKey,TElement&gt;</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Linq.Lookup#3\">            // Select a collection of Packages by indexing directly into the Lookup.\n            IEnumerable&lt;string&gt; cgroup = lookup[&#39;C&#39;];\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Linq.Lookup#3\">        &#39; Select a collection of Packages by indexing directly into the Lookup.\n        Dim cgroup As System.Collections.Generic.IEnumerable(Of String) = lookup(&quot;C&quot;c)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Lookup_2_ApplyResultSelector__1_System_Func__0_System_Collections_Generic_IEnumerable__1____0__\">\r\n    \r\n            <a id=\"System_Linq_Lookup_2_ApplyResultSelector_TResult__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ApplyResultSelector&lt;TResult&gt;(Func&lt;TKey,IEnumerable&lt;TElement&gt;,TResult&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Applies a transform function to each key and its associated values and returns the results.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.IEnumerable&lt;TResult&gt; ApplyResultSelector&lt;TResult&gt; (Func&lt;TKey,System.Collections.Generic.IEnumerable&lt;TElement&gt;,TResult&gt; resultSelector);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>resultSelector</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.func-3\" data-linktype=\"relative-path\">Func</a>&lt;<span class=\"xref\">TKey</span>,<a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<span class=\"xref\">TElement</span>&gt;,<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A function to project a result value from each key and its associated values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<span class=\"xref\">TResult</span>&gt;</div>\r\n                  </div>\r\n                  <p>A collection that contains one value for each key/value collection pair in the <span class=\"xref\">stem.Linq.Lookup`2</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Lookup_2_Contains__0_\">\r\n    \r\n            <a id=\"System_Linq_Lookup_2_Contains_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Contains(TKey)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether a specified key is in the <span class=\"xref\">stem.Linq.Lookup`2</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Contains (TKey key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">TKey</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key to find in the <span class=\"xref\">stem.Linq.Lookup`2</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>key</code> is in the <span class=\"xref\">stem.Linq.Lookup`2</span>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use Contains to determine whether a <a class=\"xref\" href=\"system.linq.lookup-2\" data-linktype=\"relative-path\">Lookup&lt;TKey,TElement&gt;</a> contains a specified key. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.linq.lookup-2\" data-linktype=\"relative-path\">Lookup&lt;TKey,TElement&gt;</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Linq.Lookup#4\">            // Determine if there is a key with the value &#39;G&#39; in the Lookup.\n            bool hasG = lookup.Contains(&#39;G&#39;);\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Linq.Lookup#4\">        &#39; Determine if there is a key with the value &#39;G&#39; in the Lookup.\n        Dim hasG As Boolean = lookup.Contains(&quot;G&quot;c)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Lookup_2_GetEnumerator\">\r\n    \r\n            <a id=\"System_Linq_Lookup_2_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a generic enumerator that iterates through the <span class=\"xref\">stem.Linq.Lookup`2</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.IEnumerator&lt;System.Linq.IGrouping&lt;TKey,TElement&gt;&gt; GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerator-1\" data-linktype=\"relative-path\">IEnumerator</a>&lt;<a class=\"xref\" href=\"system.linq.igrouping-2\" data-linktype=\"relative-path\">IGrouping</a>&lt;<span class=\"xref\">TKey</span>,<span class=\"xref\">TElement</span>&gt;&gt;</div>\r\n                  </div>\r\n                  <p>An enumerator for the <span class=\"xref\">stem.Linq.Lookup`2</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how to use GetEnumerator to iterate through the keys and values of a <a class=\"xref\" href=\"system.linq.lookup-2\" data-linktype=\"relative-path\">Lookup&lt;TKey,TElement&gt;</a>. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.linq.lookup-2\" data-linktype=\"relative-path\">Lookup&lt;TKey,TElement&gt;</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Linq.Lookup#5\">            // Iterate through each IGrouping in the Lookup and output the contents.\n            foreach (IGrouping&lt;char, string&gt; packageGroup in lookup)\n            {\n                // Print the key value of the IGrouping.\n                Console.WriteLine(packageGroup.Key);\n                // Iterate through each value in the IGrouping and print its value.\n                foreach (string str in packageGroup)\n                    Console.WriteLine(&quot;    {0}&quot;, str);\n            }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Linq.Lookup#5\">        Dim output As New System.Text.StringBuilder\n        &#39; Iterate through each IGrouping in the Lookup and output the contents.\n        For Each packageGroup As IGrouping(Of Char, String) In lookup\n            &#39; Print the key value of the IGrouping.\n            output.AppendLine(packageGroup.Key)\n            &#39; Iterate through each value in the IGrouping and print its value.\n            For Each str As String In packageGroup\n                output.AppendLine(String.Format(&quot;    {0}&quot;, str))\n            Next\n        Next\n\n        &#39; Display the output.\n        MsgBox(output.ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Linq_Lookup_2_System_Collections_IEnumerable_GetEnumerator\">\r\n    \r\n            <a id=\"System_Linq_Lookup_2_System_Collections_IEnumerable_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IEnumerable.GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an enumerator that iterates through the <span class=\"xref\">stem.Linq.Lookup`2</span>. This class cannot be inherited.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Collections.IEnumerator IEnumerable.GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An enumerator for the <span class=\"xref\">stem.Linq.Lookup`2</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Linq.Lookup-2.yml\">\r\n<meta name=\"APIName\" content=\"System.Linq.Lookup&lt;TKey,TElement&gt;\">\r\n<meta name=\"APIName\" content=\"System.Linq.Lookup&lt;TKey,TElement&gt;.ApplyResultSelector&lt;TResult&gt;\">\r\n<meta name=\"APIName\" content=\"System.Linq.Lookup&lt;TKey,TElement&gt;.Contains\">\r\n<meta name=\"APIName\" content=\"System.Linq.Lookup&lt;TKey,TElement&gt;.Count\">\r\n<meta name=\"APIName\" content=\"System.Linq.Lookup&lt;TKey,TElement&gt;.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Linq.Lookup&lt;TKey,TElement&gt;.Item\">\r\n<meta name=\"APIName\" content=\"System.Linq.Lookup&lt;TKey,TElement&gt;.IEnumerable.GetEnumerator\">\r\n<meta name=\"APILocation\" content=\"System.Core.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-16 06:20 AM\">\r\n<meta name=\"document_id\" content=\"a07098c4-9018-499f-cbb3-340441e744df\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a collection of keys each mapped to one or more values.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Linq/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Linq.Lookup`2\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[],"original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Linq.Lookup-2.yml","open_to_public_contributors":true,"api_name":["System.Linq.Lookup<TKey,TElement>","System.Linq.Lookup<TKey,TElement>.ApplyResultSelector<TResult>","System.Linq.Lookup<TKey,TElement>.Contains","System.Linq.Lookup<TKey,TElement>.Count","System.Linq.Lookup<TKey,TElement>.GetEnumerator","System.Linq.Lookup<TKey,TElement>.Item","System.Linq.Lookup<TKey,TElement>.IEnumerable.GetEnumerator"],"api_location":["System.Core.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Linq.Lookup`2","System::Linq::Lookup`2","System.Linq.Lookup`2.ApplyResultSelector``1","System::Linq::Lookup`2::ApplyResultSelector``1","System.Linq.Lookup`2.Contains","System::Linq::Lookup`2::Contains","System.Linq.Lookup`2.Count","System::Linq::Lookup`2::Count","System.Linq.Lookup`2.GetEnumerator","System::Linq::Lookup`2::GetEnumerator","System.Linq.Lookup`2.Item","System::Linq::Lookup`2::Item","System.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator","System::Linq::Lookup`2::System#Collections#IEnumerable#GetEnumerator"],"dev_langs":["csharp"],"updated_at":"2017-03-16 06:20 AM","document_id":"a07098c4-9018-499f-cbb3-340441e744df","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Linq/Lookup`2.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Lookup<TKey,TElement> class | Microsoft Docs","_op_ogTitle":"Lookup<TKey,TElement> class","description":"Represents a collection of keys each mapped to one or more values.\n","toc_asset_id":"_splitted/System.Linq/toc.json","toc_rel":"_splitted/System.Linq/toc.json","source_url":"","ms.assetid":"System.Linq.Lookup`2","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.linq.lookup-2","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.linq.lookup-2","fileRelativePath":"System.Linq.Lookup-2.html"},"themesRelativePathToOutputRoot":"_themes/"}