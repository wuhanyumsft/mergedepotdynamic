{"content":"    \r\n    <h1 id=\"System_Net_Mail_Attachment\">\r\n      <span class=\"lang-csharp\">Attachment</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents an attachment to an e-mail.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class Attachment : System.Net.Mail.AttachmentBase</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.mail.attachmentbase\" data-linktype=\"relative-path\">System.Net.Mail.AttachmentBase</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Attachment</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.mail.attachmentbase#System_Net_Mail_AttachmentBase_ContentId\" data-linktype=\"relative-path\">ContentId</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.mail.attachmentbase#System_Net_Mail_AttachmentBase_ContentStream\" data-linktype=\"relative-path\">ContentStream</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.mail.attachmentbase#System_Net_Mail_AttachmentBase_ContentType\" data-linktype=\"relative-path\">ContentType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.mail.attachmentbase#System_Net_Mail_AttachmentBase_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.mail.attachmentbase#System_Net_Mail_AttachmentBase_Dispose_System_Boolean_\" data-linktype=\"relative-path\">Dispose(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.net.mail.attachmentbase#System_Net_Mail_AttachmentBase_TransferEncoding\" data-linktype=\"relative-path\">TransferEncoding</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The Attachment class is used with the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> class. All messages include a <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Body_\" data-linktype=\"relative-path\">Body</a>, which contains the content of the message. In addition to the body, you might want to send additional files. These are sent as attachments and are represented as Attachment instances. To add an attachment to a mail message, add it to the <a class=\"xref\" href=\"system.net.mail.mailmessage#System_Net_Mail_MailMessage_Attachments\" data-linktype=\"relative-path\">System.Net.Mail.MailMessage.Attachments</a> collection.  </p>\n<p> Attachment content can be a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>, or file name. You can specify the content in an attachment by using any of the <a class=\"xref\" href=\"system.net.mail.attachment#System_Net_Mail_Attachment__ctor_\" data-linktype=\"relative-path\">Attachment</a> constructors.  </p>\n<p> The MIME Content-Type header information for the attachment is represented by the <a class=\"xref\" href=\"system.net.mail.attachmentbase#System_Net_Mail_AttachmentBase_ContentType_\" data-linktype=\"relative-path\">ContentType</a> property. The Content-Type header specifies the media type and subtype and any associated parameters. Use <a class=\"xref\" href=\"system.net.mail.attachmentbase#System_Net_Mail_AttachmentBase_ContentType_\" data-linktype=\"relative-path\">ContentType</a> to get the instance associated with an attachment.  </p>\n<p> The MIME Content-Disposition header is represented by the <a class=\"xref\" href=\"system.net.mail.attachment#System_Net_Mail_Attachment_ContentDisposition_\" data-linktype=\"relative-path\">ContentDisposition</a> property. The Content-Disposition header specifies the presentation and file time stamps for an attachment. A Content-Disposition header is sent only if the attachment is a file. Use the <a class=\"xref\" href=\"system.net.mail.attachment#System_Net_Mail_Attachment_ContentDisposition_\" data-linktype=\"relative-path\">ContentDisposition</a> property to get the instance associated with an attachment.  </p>\n<p> The MIME Content-Transfer-Encoding header is represented by the <a class=\"xref\" href=\"system.net.mail.attachmentbase#System_Net_Mail_AttachmentBase_TransferEncoding_\" data-linktype=\"relative-path\">TransferEncoding</a> property.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_Attachment__ctor_System_String_\" data-linktype=\"self-bookmark\">Attachment(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class with the specified content string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_Attachment__ctor_System_IO_Stream_System_Net_Mime_ContentType_\" data-linktype=\"self-bookmark\">Attachment(Stream,ContentType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class with the specified stream and content type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_Attachment__ctor_System_IO_Stream_System_String_\" data-linktype=\"self-bookmark\">Attachment(Stream,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class with the specified stream and name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_Attachment__ctor_System_String_System_Net_Mime_ContentType_\" data-linktype=\"self-bookmark\">Attachment(String,ContentType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class with the specified content string and <a class=\"xref\" href=\"system.net.mime.contenttype\" data-linktype=\"relative-path\">ContentType</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_Attachment__ctor_System_String_System_String_\" data-linktype=\"self-bookmark\">Attachment(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class with the specified content string and MIME type information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_Attachment__ctor_System_IO_Stream_System_String_System_String_\" data-linktype=\"self-bookmark\">Attachment(Stream,String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class with the specified stream, name, and MIME type information.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_Attachment_ContentDisposition\" data-linktype=\"self-bookmark\">ContentDisposition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the MIME content disposition for this attachment.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_Attachment_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the MIME content type name value in the content type associated with this attachment.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_Attachment_NameEncoding\" data-linktype=\"self-bookmark\">NameEncoding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the encoding for the <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a><span class=\"xref\">stem.Net.Mail.Attachment.Name*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_Attachment_CreateAttachmentFromString_System_String_System_Net_Mime_ContentType_\" data-linktype=\"self-bookmark\">CreateAttachmentFromString(String,ContentType)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a mail attachment using the content from the specified string, and the specified <a class=\"xref\" href=\"system.net.mime.contenttype\" data-linktype=\"relative-path\">ContentType</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_Attachment_CreateAttachmentFromString_System_String_System_String_\" data-linktype=\"self-bookmark\">CreateAttachmentFromString(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a mail attachment using the content from the specified string, and the specified MIME content type name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Mail_Attachment_CreateAttachmentFromString_System_String_System_String_System_Text_Encoding_System_String_\" data-linktype=\"self-bookmark\">CreateAttachmentFromString(String,String,Encoding,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a mail attachment using the content from the specified string, the specified MIME content type name, character encoding, and MIME header information for the attachment.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_Attachment__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Net_Mail_Attachment__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Attachment(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class with the specified content string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Attachment (string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains a file path to use to create this attachment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>fileName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>fileName</code> is empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The properties are set as follows:  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.net.mime.contenttype#System_Net_Mime_ContentType_MediaType_\" data-linktype=\"relative-path\">MediaType</a></td>\n<td><a class=\"xref\" href=\"system.net.mime.mediatypenames.text#System_Net_Mime_MediaTypeNames_Text_Plain\" data-linktype=\"relative-path\">Plain</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.net.mail.attachmentbase#System_Net_Mail_AttachmentBase_TransferEncoding_\" data-linktype=\"relative-path\">TransferEncoding</a></td>\n<td><a class=\"xref\" href=\"system.net.mime.transferencoding\" data-linktype=\"relative-path\">TransferEncoding</a>.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call this constructor.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#13\">   static void CreateMessageInlineAttachment2( String^ server, String^ textMessage )\n   {\n      \n      // Create a message and set up the recipients.\n      MailMessage^ message = gcnew MailMessage( L&quot;jane@contoso.com&quot;,L&quot;ben@contoso.com&quot;,L&quot;A text message for you.&quot;,L&quot;Message: &quot; );\n      \n      // Attach the message string to this e-mail message.\n      Attachment^ data = gcnew Attachment( textMessage );\n      \n      // Send textMessage as part of the e-mail body.\n      message-&gt;Attachments-&gt;Add( data );\n      ContentType^ content = data-&gt;ContentType;\n      content-&gt;MediaType = MediaTypeNames::Text::Plain;\n      \n      //Send the message.\n      // Include credentials if the server requires them.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#13\">\t\tpublic static void CreateMessageInlineAttachment2(string server, string\n\t\ttextMessage)\n\t\t{\n\t\t\t// Create a message and set up the recipients.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;jane@contoso.com&quot;,\n\t\t\t   &quot;ben@contoso.com&quot;,\n\t\t\t   &quot;A text message for you.&quot;,\n\t\t\t   &quot;Message: &quot;);\n\n\t\t\t// Attach the message string to this e-mail message.\n\t\t\tAttachment data = new Attachment(textMessage);\n\t\t\t// Send textMessage as part of the e-mail body.\n\t\t\tmessage.Attachments.Add(data);\n\t\t\tContentType content = data.ContentType;\n\t\t\tcontent.MediaType = MediaTypeNames.Text.Plain;\n\t\t\t//Send the message.\n\t\t\t// Include credentials if the server requires them.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n\t    try { \n        client.Send(message);\n      }\n      catch (Exception ex) {\n        Console.WriteLine(&quot;Exception caught in CreateMessageInlineAttachment2: {0}&quot;, \n                    ex.ToString() );\n      }\n\t\t\tdata.Dispose();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_Attachment__ctor_System_IO_Stream_System_Net_Mime_ContentType_\">\r\n    \r\n            <a id=\"System_Net_Mail_Attachment__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Attachment(Stream,ContentType)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class with the specified stream and content type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Attachment (System.IO.Stream contentStream, System.Net.Mime.ContentType contentType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentStream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A readable <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> that contains the content for this attachment.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mime.contenttype\" data-linktype=\"relative-path\">ContentType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.mime.contenttype\" data-linktype=\"relative-path\">ContentType</a> that describes the data in <code>stream</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>contentType</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>contentStream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.net.mail.attachmentbase#System_Net_Mail_AttachmentBase_TransferEncoding_\" data-linktype=\"relative-path\">TransferEncoding</a> property is set to <a class=\"xref\" href=\"system.net.mime.transferencoding\" data-linktype=\"relative-path\">TransferEncoding</a>.  </p>\n<p> If the stream&#39;s <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CanSeek_\" data-linktype=\"relative-path\">CanSeek</a> property is <code>false</code>, the attachment and the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> that contains it are not reusable. You must supply a stream that can be searched to reuse an attachment.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call this constructor.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#14\">   // The following example sends a summary of a log file as the message\n   // and the log as an e-mail attachment.\n   static void SendErrorLog( String^ server, String^ recipientList )\n   {\n      \n      // Create a message from logMailer@contoso.com to recipientList.\n      MailMessage^ message = gcnew MailMessage( L&quot;logMailer@contoso.com&quot;,recipientList );\n      message-&gt;Subject = L&quot;Error Log report&quot;;\n      String^ fileName = L&quot;log.txt&quot;;\n      \n      // Get the file stream for the error log.\n      // Requires the System.IO namespace.\n      FileStream^ fs = gcnew FileStream( fileName,FileMode::Open,FileAccess::Read );\n      StreamReader^ s = gcnew StreamReader( fs );\n      int errors = 0;\n      while ( s-&gt;ReadLine() != nullptr )\n      {\n         \n         // Process each line from the log file here.\n         errors++;\n      }\n\n      message-&gt;Body = String::Format( L&quot;{0} errors in log as of {1}&quot;, errors, DateTime::Now );\n      \n      // Close the stream reader. This also closes the file.\n      s-&gt;Close();\n      \n      // Re-open the file at the beginning to make the attachment.\n      fs = gcnew FileStream( fileName,FileMode::Open,FileAccess::Read );\n      \n      // Make a contentType indicating that the log data\n      // that is attached is plain text.\n      ContentType^ ct = gcnew ContentType( MediaTypeNames::Text::Plain );\n      \n      // Attach the log file stream to the e-mail message.\n      Attachment^ data = gcnew Attachment( fs,ct );\n      ContentDisposition^ disposition = data-&gt;ContentDisposition;\n      \n      // Suggest a file name for the attachment.\n      disposition-&gt;FileName = String::Format( L&quot;log{0}.txt&quot;, DateTime::Now );\n      \n      // Add the attachment to the message.\n      message-&gt;Attachments-&gt;Add( data );\n      \n      // Send the message.\n      // Include credentials if the server requires them.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n      \n      // Close the log file.\n      fs-&gt;Close();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#14\">\t\t// The following example sends a summary of a log file as the message\n\t\t// and the log as an e-mail attachment.\n\t\tpublic static void SendErrorLog(string server, string recipientList)\n\t\t{\n\t\t\t// Create a message from logMailer@contoso.com to recipientList.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;logMailer@contoso.com&quot;, recipientList);\n\n\t\t\tmessage.Subject = &quot;Error Log report&quot;;\n\t\t\tstring fileName = &quot;log.txt&quot;;\n\t\t\t// Get the file stream for the error log.\n\t\t\t// Requires the System.IO namespace.\n\t\t\tFileStream fs = new FileStream(fileName, FileMode.Open, FileAccess.Read);\n\t\t\tStreamReader s = new StreamReader(fs);\n\t\t\tint errors = 0;\n\t\t\twhile (s.ReadLine() != null)\n\t\t\t{\n\t\t\t\t// Process each line from the log file here.\n\t\t\t\terrors++;\n\t\t\t}\n\t\t\t// The e-mail message summarizes the data found in the log.\n\t\t\tmessage.Body = String.Format(&quot;{0} errors in log as of {1}&quot;,\n\t\t\t\terrors, DateTime.Now);\n\t\t\t// Close the stream reader. This also closes the file.\n\t\t\ts.Close();\n\t\t\t// Re-open the file at the beginning to make the attachment.\n\t\t\tfs = new FileStream(fileName, FileMode.Open, FileAccess.Read);\n\t\t\t// Make a contentType indicating that the log data\n\t\t\t// that is attached is plain text.\n\t\t\tContentType ct = new ContentType(MediaTypeNames.Text.Plain);\n\t\t\t// Attach the log file stream to the e-mail message.\n\t\t\tAttachment data = new Attachment(fs, ct);\n\t\t\tContentDisposition disposition = data.ContentDisposition;\n\t\t\t// Suggest a file name for the attachment.\n\t\t\tdisposition.FileName = &quot;log&quot; + DateTime.Now.ToString() + &quot;.txt&quot;;\n\t\t\t// Add the attachment to the message.\n\t\t\tmessage.Attachments.Add(data);\n\t\t\t// Send the message.\n\t\t\t// Include credentials if the server requires them.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n\t    try { \n        client.Send(message);\n      }\n      catch (Exception ex) {\n        Console.WriteLine(&quot;Exception caught in SendErrorLog: {0}&quot;, \n                    ex.ToString() );\n      }\n\t\t\tdata.Dispose();\n\t\t\t// Close the log file.\n\t\t\tfs.Close();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_Attachment__ctor_System_IO_Stream_System_String_\">\r\n    \r\n            <a id=\"System_Net_Mail_Attachment__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Attachment(Stream,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class with the specified stream and name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Attachment (System.IO.Stream contentStream, string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentStream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A readable <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> that contains the content for this attachment.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the value for the <span class=\"xref\">stem.Net.Mime.ContentType.Name*</span> property of the <a class=\"xref\" href=\"system.net.mime.contenttype\" data-linktype=\"relative-path\">ContentType</a> associated with this attachment. This value can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>contentStream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>name</code> is not <code>null</code> or equal to <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a> (&quot;&quot;), the <a class=\"xref\" href=\"system.net.mime.contenttype\" data-linktype=\"relative-path\">ContentType</a> for this attachment is constructed with the <a class=\"xref\" href=\"system.net.mime.contenttype#System_Net_Mime_ContentType_Name_\" data-linktype=\"relative-path\">Name</a> property set to <code>name</code>. The <a class=\"xref\" href=\"system.net.mail.attachmentbase#System_Net_Mail_AttachmentBase_TransferEncoding_\" data-linktype=\"relative-path\">TransferEncoding</a> property is set to <a class=\"xref\" href=\"system.net.mime.transferencoding\" data-linktype=\"relative-path\">TransferEncoding</a>.  </p>\n<p> If the stream&#39;s <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CanSeek_\" data-linktype=\"relative-path\">CanSeek</a> property is <code>false</code>, the attachment and the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> that contains it are not reusable. You must supply a stream that can be searched in order to reuse an attachment.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call this constructor.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#15\">   // The following example sends a summary of a log file as the message\n   // and the log as an e-mail attachment.\n   static void SendNamedErrorLog( String^ server, String^ recipientList )\n   {\n      \n      // Create a message from logMailer@contoso.com to recipientList.\n      MailMessage^ message = gcnew MailMessage( L&quot;logMailer@contoso.com&quot;,recipientList );\n      message-&gt;Subject = L&quot;Error Log report&quot;;\n      String^ fileName = L&quot;log.txt&quot;;\n      \n      // Get the file stream for the error log.\n      // Requires the System.IO namespace.\n      FileStream^ fs = gcnew FileStream( fileName,FileMode::Open,FileAccess::Read );\n      StreamReader^ s = gcnew StreamReader( fs );\n      int errors = 0;\n      while ( s-&gt;ReadLine() != nullptr )\n      {\n         \n         // Process each line from the log file here.\n         errors++;\n      }\n\n      message-&gt;Body = String::Format( L&quot;{0} errors in log as of {1}&quot;, errors, DateTime::Now );\n      \n      // Close the stream reader. This also closes the file.\n      s-&gt;Close();\n      \n      // Re-open the file at the beginning to make the attachment.\n      fs = gcnew FileStream( fileName,FileMode::Open,FileAccess::Read );\n      \n      // Make a ContentType indicating that the log data\n      // that is attached is plain text and is named.\n      ContentType^ ct = gcnew ContentType;\n      ct-&gt;MediaType = MediaTypeNames::Text::Plain;\n      ct-&gt;Name = String::Format( L&quot;log{0}.txt&quot;, DateTime::Now );\n      \n      // Create the attachment.\n      Attachment^ data = gcnew Attachment( fs,ct );\n      \n      // Add the attachment to the message.\n      message-&gt;Attachments-&gt;Add( data );\n      \n      // Send the message.\n      // Include credentials if the server requires them.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n      \n      // Close the log file.\n      fs-&gt;Close();\n      return;\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#15\">\t\t// The following example sends a summary of a log file as the message\n\t\t// and the log as an e-mail attachment.\n\t\tpublic static void SendNamedErrorLog(string server, string recipientList)\n\t\t{\n\t\t\t// Create a message from logMailer@contoso.com to recipientList.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;logMailer@contoso.com&quot;, recipientList);\n\n\t\t\tmessage.Subject = &quot;Error Log report&quot;;\n\t\t\tstring fileName = &quot;log.txt&quot;;\n\t\t\t// Get the file stream for the error log.\n\t\t\t// Requires the System.IO namespace.\n\t\t\tFileStream fs = new FileStream(fileName, FileMode.Open, FileAccess.Read);\n\t\t\tStreamReader s = new StreamReader(fs);\n\t\t\tint errors = 0;\n\t\t\twhile (s.ReadLine() != null)\n\t\t\t{\n\t\t\t\t// Process each line from the log file here.\n\t\t\t\terrors++;\n\t\t\t}\n\t\t\t// The e-mail message summarizes the data found in the log.\n\t\t\tmessage.Body = String.Format(&quot;{0} errors in log as of {1}&quot;,\n\t\t\t\terrors, DateTime.Now);\n\t\t\t// Close the stream reader. This also closes the file.\n\t\t\ts.Close();\n\t\t\t// Re-open the file at the beginning to make the attachment.\n\t\t\tfs = new FileStream(fileName, FileMode.Open, FileAccess.Read);\n\t\t\t// Make a ContentType indicating that the log data\n\t\t\t// that is attached is plain text and is named.\n\t\t\tContentType ct = new ContentType();\n\t\t\tct.MediaType = MediaTypeNames.Text.Plain;\n\t\t\tct.Name = &quot;log&quot; + DateTime.Now.ToString() + &quot;.txt&quot;;\n\t\t\t// Create the attachment.\n\t\t\tAttachment data = new Attachment(fs, ct);\n\t\t\t// Add the attachment to the message.\n\t\t\tmessage.Attachments.Add(data);\n\t\t\t// Send the message.\n\t\t\t// Include credentials if the server requires them.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n\t    try {\n        client.Send(message);\n      }\n      catch (Exception ex) {\n        Console.WriteLine(&quot;Exception caught in SendNamedErrorLog: {0}&quot;, \n                    ex.ToString() );\n      }\n\t\t\tdata.Dispose();\n\t\t\t// Close the log file.\n\t\t\tfs.Close();\n\t\t\treturn;\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_Attachment__ctor_System_String_System_Net_Mime_ContentType_\">\r\n    \r\n            <a id=\"System_Net_Mail_Attachment__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Attachment(String,ContentType)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class with the specified content string and <a class=\"xref\" href=\"system.net.mime.contenttype\" data-linktype=\"relative-path\">ContentType</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Attachment (string fileName, System.Net.Mime.ContentType contentType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains a file path to use to create this attachment.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mime.contenttype\" data-linktype=\"relative-path\">ContentType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.mime.contenttype\" data-linktype=\"relative-path\">ContentType</a> that describes the data in <code>string</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>fileName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>mediaType</code> is not in the correct format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_Attachment__ctor_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_Mail_Attachment__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Attachment(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class with the specified content string and MIME type information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Attachment (string fileName, string mediaType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the content for this attachment.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>mediaType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the MIME Content-Header information for this attachment. This value can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>fileName</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>mediaType</code> is not in the correct format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>mediaType</code> is <code>null</code> or equal to <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">System.String</a> (&quot;&quot;), the <a class=\"xref\" href=\"system.net.mime.contenttype#System_Net_Mime_ContentType_MediaType_\" data-linktype=\"relative-path\">MediaType</a> property for this attachment is set to <a class=\"xref\" href=\"system.net.mime.mediatypenames.text#System_Net_Mime_MediaTypeNames_Text_Plain\" data-linktype=\"relative-path\">Plain</a>. If <code>mediaType</code> is not <code>null</code> and is not a zero-length string, it is used to construct the <a class=\"xref\" href=\"system.net.mime.contenttype\" data-linktype=\"relative-path\">ContentType</a> associated with this attachment.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call this constructor.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#12\">   static void CreateMessageInlineAttachment( String^ server, String^ textMessage )\n   {\n      \n      // Create a message and set up the recipients.\n      MailMessage^ message = gcnew MailMessage( L&quot;jane@contoso.com&quot;,L&quot;ben@contoso.com&quot;,L&quot;An inline text message for you.&quot;,L&quot;Message: &quot; );\n      \n      // Attach the message string to this e-mail message.\n      Attachment^ data = gcnew Attachment( textMessage,MediaTypeNames::Text::Plain );\n      \n      // Send textMessage as part of the e-mail body.\n      message-&gt;Attachments-&gt;Add( data );\n      ContentDisposition^ disposition = data-&gt;ContentDisposition;\n      disposition-&gt;Inline = true;\n      \n      //Send the message.\n      // Include credentials if the server requires them.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#12\">\t\tpublic static void CreateMessageInlineAttachment(string server, string\n\t\ttextMessage)\n\t\t{\n\t\t\t// Create a message and set up the recipients.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;jane@contoso.com&quot;,\n\t\t\t   &quot;ben@contoso.com&quot;,\n\t\t\t   &quot;An inline text message for you.&quot;,\n\t\t\t   &quot;Message: &quot;);\n\n\t\t\t// Attach the message string to this e-mail message.\n\t\t\tAttachment data = new Attachment(textMessage, MediaTypeNames.Text.Plain);\n\t\t\t// Send textMessage as part of the e-mail body.\n\t\t\tmessage.Attachments.Add(data);\n\t\t\tContentDisposition disposition = data.ContentDisposition;\n\t\t\tdisposition.Inline = true;\n\t\t\t//Send the message.\n\t\t\t// Include credentials if the server requires them.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n\t    try {\n        client.Send(message);\n      }\n      catch (Exception ex) {\n        Console.WriteLine(&quot;Exception caught in CreateMessageInlineAttachment: {0}&quot;, \n                    ex.ToString() );\n      }\n\t\t\tdata.Dispose();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_Attachment__ctor_System_IO_Stream_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_Mail_Attachment__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Attachment(Stream,String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a> class with the specified stream, name, and MIME type information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Attachment (System.IO.Stream contentStream, string name, string mediaType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentStream</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A readable <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> that contains the content for this attachment.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the value for the <span class=\"xref\">stem.Net.Mime.ContentType.Name*</span> property of the <a class=\"xref\" href=\"system.net.mime.contenttype\" data-linktype=\"relative-path\">ContentType</a> associated with this attachment. This value can be <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>mediaType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the MIME Content-Header information for this attachment. This value can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>stream</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p><code>mediaType</code> is not in the correct format.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>mediaType</code> is not <code>null</code> or equal to <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">System.String</a> (&quot;&quot;), it is used to construct the <a class=\"xref\" href=\"system.net.mime.contenttype\" data-linktype=\"relative-path\">ContentType</a> class associated with this attachment.  </p>\n<p> If <code>mediaType</code> and <code>name</code> both contain <a class=\"xref\" href=\"system.net.mime.contenttype#System_Net_Mime_ContentType_Name_\" data-linktype=\"relative-path\">Name</a> information, the value specified in <code>name</code> is used. The <a class=\"xref\" href=\"system.net.mail.attachmentbase#System_Net_Mail_AttachmentBase_TransferEncoding_\" data-linktype=\"relative-path\">TransferEncoding</a> property is set to <a class=\"xref\" href=\"system.net.mime.transferencoding\" data-linktype=\"relative-path\">TransferEncoding</a>.  </p>\n<p> If the stream&#39;s <a class=\"xref\" href=\"system.io.stream#System_IO_Stream_CanSeek_\" data-linktype=\"relative-path\">CanSeek</a> property is <code>false</code>, the attachment and the <a class=\"xref\" href=\"system.net.mail.mailmessage\" data-linktype=\"relative-path\">MailMessage</a> that contains it are not reusable. You must supply a stream that can be searched in order to reuse an attachment.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to call this constructor.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#16\">   // The following example sends a summary of a log file as the message\n   // and the log as an e-mail attachment.\n   static void SendNamedAndTypedErrorLog( String^ server, String^ recipientList )\n   {\n      \n      // Create a message from logMailer@contoso.com to recipientList.\n      MailMessage^ message = gcnew MailMessage( L&quot;logMailer@contoso.com&quot;,recipientList );\n      message-&gt;Subject = L&quot;Error Log report&quot;;\n      String^ fileName = L&quot;log.txt&quot;;\n      \n      // Get the file stream for the error log.\n      // Requires the System.IO namespace.\n      FileStream^ fs = gcnew FileStream( fileName,FileMode::Open,FileAccess::Read );\n      StreamReader^ s = gcnew StreamReader( fs );\n      int errors = 0;\n      while ( s-&gt;ReadLine() != nullptr )\n      {\n         \n         // Process each line from the log file here.\n         errors++;\n      }\n\n      message-&gt;Body = String::Format( L&quot;{0} errors in log as of {1}&quot;, errors, DateTime::Now );\n      \n      // Close the stream reader. This also closes the file.\n      s-&gt;Close();\n      \n      // Re-open the file at the beginning to make the attachment.\n      fs = gcnew FileStream( fileName,FileMode::Open,FileAccess::Read );\n      \n      // Create a name for the log data file.\n      String^ name = String::Format( L&quot;log{0}.txt&quot;, DateTime::Now );\n      \n      // Create the attachment, name it, and specify the MIME type.\n      Attachment^ data = gcnew Attachment( fs,name,MediaTypeNames::Text::Plain );\n      \n      // Add the attachment to the message.\n      message-&gt;Attachments-&gt;Add( data );\n      \n      // Send the message.\n      // Include credentials if the server requires them.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n      \n      // Close the log file.\n      fs-&gt;Close();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#16\">\t\t// The following example sends a summary of a log file as the message\n\t\t// and the log as an e-mail attachment.\n\t\tpublic static void SendNamedAndTypedErrorLog(string server, string recipientList)\n\t\t{\n\t\t\t// Create a message from logMailer@contoso.com to recipientList.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;logMailer@contoso.com&quot;, recipientList);\n\n\t\t\tmessage.Subject = &quot;Error Log report&quot;;\n\t\t\tstring fileName = &quot;log.txt&quot;;\n\t\t\t// Get the file stream for the error log.\n\t\t\t// Requires the System.IO namespace.\n\t\t\tFileStream fs = new FileStream(fileName, FileMode.Open, FileAccess.Read);\n\t\t\tStreamReader s = new StreamReader(fs);\n\t\t\tint errors = 0;\n\t\t\twhile (s.ReadLine() != null)\n\t\t\t{\n\t\t\t\t// Process each line from the log file here.\n\t\t\t\terrors++;\n\t\t\t}\n\t\t\t// The e-mail message summarizes the data found in the log.\n\t\t\tmessage.Body = String.Format(&quot;{0} errors in log as of {1}&quot;,\n\t\t\t\terrors, DateTime.Now);\n\t\t\t// Close the stream reader. This also closes the file.\n\t\t\ts.Close();\n\t\t\t// Re-open the file at the beginning to make the attachment.\n\t\t\tfs = new FileStream(fileName, FileMode.Open, FileAccess.Read);\n\t\t\t// Create a name for the log data file.\n\t\t\tstring name = &quot;log&quot; + DateTime.Now.ToString() + &quot;.txt&quot;;\n\t\t\t// Create the attachment, name it, and specify the MIME type.\n\t\t\tAttachment data = new Attachment(fs, name, MediaTypeNames.Text.Plain);\n\t\t\t// Add the attachment to the message.\n\t\t\tmessage.Attachments.Add(data);\n\t\t\t// Send the message.\n\t\t\t// Include credentials if the server requires them.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n\t    try { \n        client.Send(message);\n      }\n      catch (Exception ex) {\n        Console.WriteLine(&quot;Exception caught in SendNamedAndTypedErrorLog: {0}&quot;, \n                    ex.ToString() );\n      }\n\t\t\tdata.Dispose();\n\t\t\t// Close the log file.\n\t\t\tfs.Close();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_Attachment_ContentDisposition\">\r\n    \r\n            <a id=\"System_Net_Mail_Attachment_ContentDisposition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContentDisposition</div>        \r\n          </div>\r\n    \r\n            <p>Gets the MIME content disposition for this attachment.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Mime.ContentDisposition ContentDisposition { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mime.contentdisposition\" data-linktype=\"relative-path\">ContentDisposition</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.mime.contentdisposition\" data-linktype=\"relative-path\">ContentDisposition</a> that provides the presentation information for this attachment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The information in the <a class=\"xref\" href=\"system.net.mime.contentdisposition\" data-linktype=\"relative-path\">ContentDisposition</a> class represents the MIME Content-Disposition header. This header is described in RFC 2183, available at <a href=\"http://www.ietf.org/\" data-linktype=\"external\">http://www.ietf.org</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example gets the <a class=\"xref\" href=\"system.net.mime.contentdisposition\" data-linktype=\"relative-path\">ContentDisposition</a> for an attachment and displays its properties.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#11\">   static void CreateMessageAttachment1( String^ server, String^ textMessage )\n   {\n      \n      // Create a message and set up the recipients.\n      MailMessage^ message = gcnew MailMessage( L&quot;jane@contoso.com&quot;,L&quot;ben@contoso.com&quot;,L&quot;A text message for you.&quot;,L&quot;Message: &quot; );\n      \n      // Attach the message string to this e-mail message.\n      Attachment^ data = gcnew Attachment( textMessage,MediaTypeNames::Text::Plain );\n      ContentDisposition^ disposition = data-&gt;ContentDisposition;\n      \n      // Suggest a file name for the attachment.\n      disposition-&gt;FileName = String::Format( L&quot;message{0}&quot;, DateTime::Now );\n      message-&gt;Attachments-&gt;Add( data );\n      \n      //Send the message.\n      SmtpClient^ client = gcnew SmtpClient( server );\n      client-&gt;Credentials = CredentialCache::DefaultNetworkCredentials;\n      client-&gt;Send( message );\n      \n      // Display the values in the ContentDisposition for the attachment.\n      Console::WriteLine( L&quot;Content disposition&quot; );\n      Console::WriteLine( disposition );\n      Console::WriteLine( L&quot;File {0}&quot;, disposition-&gt;FileName );\n      Console::WriteLine( L&quot;Size {0}&quot;, disposition-&gt;Size );\n      Console::WriteLine( L&quot;Creation {0}&quot;, disposition-&gt;CreationDate );\n      Console::WriteLine( L&quot;Modification {0}&quot;, disposition-&gt;ModificationDate );\n      Console::WriteLine( L&quot;Read {0}&quot;, disposition-&gt;ReadDate );\n      Console::WriteLine( L&quot;Inline {0}&quot;, disposition-&gt;Inline );\n      Console::WriteLine( L&quot;Parameters: {0}&quot;, disposition-&gt;Parameters-&gt;Count );\n      IEnumerator^ myEnum2 = disposition-&gt;Parameters-&gt;GetEnumerator();\n      while ( myEnum2-&gt;MoveNext() )\n      {\n         DictionaryEntry^ d = safe_cast&lt;DictionaryEntry^&gt;(myEnum2-&gt;Current);\n         Console::WriteLine( L&quot;{0} = {1}&quot;, d-&gt;Key, d-&gt;Value );\n      }\n\n      data-&gt;~Attachment();\n      client-&gt;~SmtpClient();\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#11\">\t\tpublic static void CreateMessageAttachment1(string server, string textMessage)\n\t\t{\n\t\t\t// Create a message and set up the recipients.\n\t\t\tMailMessage message = new MailMessage(\n\t\t\t   &quot;jane@contoso.com&quot;,\n\t\t\t   &quot;ben@contoso.com&quot;,\n\t\t\t   &quot;A text message for you.&quot;,\n\t\t\t   &quot;Message: &quot;);\n\n\t\t\t// Attach the message string to this e-mail message.\n\t\t\tAttachment data = new Attachment(textMessage, MediaTypeNames.Text.Plain);\n\t\t\tContentDisposition disposition = data.ContentDisposition;\n\t\t\t// Suggest a file name for the attachment.\n\t\t\tdisposition.FileName = &quot;message&quot; + DateTime.Now.ToString();\n\t\t\tmessage.Attachments.Add(data);\n\t\t\t//Send the message.\n\t\t\tSmtpClient client = new SmtpClient(server);\n\t\t\tclient.Credentials = CredentialCache.DefaultNetworkCredentials;\n\n\t    try {\n        client.Send(message);\n      }\n      catch (Exception ex) {\n        Console.WriteLine(&quot;Exception caught in CreateMessageAttachment1(): {0}&quot;, \n                    ex.ToString() );\n\t\t\t}\n\t\t\t// Display the values in the ContentDisposition for the attachment.\n\t\t\tConsole.WriteLine(&quot;Content disposition&quot;);\n\t\t\tConsole.WriteLine(disposition.ToString());\n\t\t\tConsole.WriteLine(&quot;File {0}&quot;, disposition.FileName);\n\t\t\tConsole.WriteLine(&quot;Size {0}&quot;, disposition.Size);\n\t\t\tConsole.WriteLine(&quot;Creation {0}&quot;, disposition.CreationDate);\n\t\t\tConsole.WriteLine(&quot;Modification {0}&quot;, disposition.ModificationDate);\n\t\t\tConsole.WriteLine(&quot;Read {0}&quot;, disposition.ReadDate);\n\t\t\tConsole.WriteLine(&quot;Inline {0}&quot;, disposition.Inline);\n\t\t\tConsole.WriteLine(&quot;Parameters: {0}&quot;, disposition.Parameters.Count);\n\t\t\tforeach (DictionaryEntry d in disposition.Parameters)\n\t\t\t{\n\t\t\t\tConsole.WriteLine(&quot;{0} = {1}&quot;, d.Key, d.Value);\n\t\t\t}\n\t\t\tdata.Dispose();\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_Attachment_Name\">\r\n    \r\n            <a id=\"System_Net_Mail_Attachment_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the MIME content type name value in the content type associated with this attachment.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Name { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the value for the content type <code>name</code> represented by the <a class=\"xref\" href=\"system.net.mime.contenttype#System_Net_Mime_ContentType_Name\" data-linktype=\"relative-path\">Name</a> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The value specified for a set operation is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value specified for a set operation is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a> (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Name property is used in the Content-Type header generated for this attachment. The Name is displayed as the attachmentâ€™s name when the email with the attachment is received. A grammar that details the syntax of the Content-Type header is described in RFC 2045 Section 5.1. RFC 2046 provides detailed information about MIME media types and their parameters. These RFCs are available at <a href=\"http://www.ietf.org/\" data-linktype=\"external\">http://www.ietf.org</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to display information about an attachment.  </p>\n<pre><code class=\"lang-cpp\" name=\"NclMailSync#19\">   static void DisplayFileAttachment( Attachment^ a )\n   {\n      Console::WriteLine( L&quot;Content Disposition {0}&quot;, a-&gt;ContentDisposition );\n      Console::WriteLine( L&quot;Content Type {0}&quot;, a-&gt;ContentType );\n      Console::WriteLine( L&quot;Name {0}&quot;, a-&gt;Name );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"NclMailSync#19\">\t\tpublic static void DisplayFileAttachment(Attachment a)\n\t\t{\n\t\t\tConsole.WriteLine(&quot;Content Disposition {0}&quot;, a.ContentDisposition.ToString());\n\t\t\tConsole.WriteLine(&quot;Content Type {0}&quot;, a.ContentType.ToString());\n\t\t\tConsole.WriteLine(&quot;Name {0}&quot;, a.Name);\n\t\t}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_Attachment_NameEncoding\">\r\n    \r\n            <a id=\"System_Net_Mail_Attachment_NameEncoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NameEncoding</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the encoding for the <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a><span class=\"xref\">stem.Net.Mail.Attachment.Name*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Text.Encoding NameEncoding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a> value that specifies the type of name encoding. The default value is determined from the name of the attachment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_Attachment_CreateAttachmentFromString_System_String_System_Net_Mime_ContentType_\">\r\n    \r\n            <a id=\"System_Net_Mail_Attachment_CreateAttachmentFromString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateAttachmentFromString(String,ContentType)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a mail attachment using the content from the specified string, and the specified <a class=\"xref\" href=\"system.net.mime.contenttype\" data-linktype=\"relative-path\">ContentType</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Net.Mail.Attachment CreateAttachmentFromString (string content, System.Net.Mime.ContentType contentType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>content</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the content for this attachment.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mime.contenttype\" data-linktype=\"relative-path\">ContentType</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.net.mime.contenttype\" data-linktype=\"relative-path\">ContentType</a> object that represents the Multipurpose Internet Mail Exchange (MIME) protocol Content-Type header to be used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a></div>\r\n                  </div>\r\n                  <p>An object of type <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_Attachment_CreateAttachmentFromString_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Net_Mail_Attachment_CreateAttachmentFromString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateAttachmentFromString(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a mail attachment using the content from the specified string, and the specified MIME content type name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Net.Mail.Attachment CreateAttachmentFromString (string content, string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>content</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the content for this attachment.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The MIME content type name value in the content type associated with this attachment.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a></div>\r\n                  </div>\r\n                  <p>An object of type <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the content is in ASCII format then the character encoding is set to ASCII. For all other formats, the character encoding is set to utf-8. The default media type is plain text.  </p>\n<p> If the content is not in ASCII format and the encoding is null, utf-8 encoding is used.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Mail_Attachment_CreateAttachmentFromString_System_String_System_String_System_Text_Encoding_System_String_\">\r\n    \r\n            <a id=\"System_Net_Mail_Attachment_CreateAttachmentFromString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateAttachmentFromString(String,String,Encoding,String)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a mail attachment using the content from the specified string, the specified MIME content type name, character encoding, and MIME header information for the attachment.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Net.Mail.Attachment CreateAttachmentFromString (string content, string name, System.Text.Encoding contentEncoding, string mediaType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>content</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the content for this attachment.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The MIME content type name value in the content type associated with this attachment.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>contentEncoding</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.text.encoding\" data-linktype=\"relative-path\">Encoding</a>. This value can be <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>mediaType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the MIME Content-Header information for this attachment. This value can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a></div>\r\n                  </div>\r\n                  <p>An object of type <a class=\"xref\" href=\"system.net.mail.attachment\" data-linktype=\"relative-path\">Attachment</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.Mail.Attachment.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Mail.Attachment.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.Attachment\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.Attachment..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.Attachment.ContentDisposition\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.Attachment.CreateAttachmentFromString\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.Attachment.Name\">\r\n<meta name=\"APIName\" content=\"System.Net.Mail.Attachment.NameEncoding\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"edb4bab2-ee45-caed-fe48-d6be3650c7aa\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an attachment to an e-mail.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net.Mail/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.Mail.Attachment\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.Mail.Attachment.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Mail.Attachment.yml","open_to_public_contributors":true,"api_name":["System.Net.Mail.Attachment","System.Net.Mail.Attachment..ctor","System.Net.Mail.Attachment.ContentDisposition","System.Net.Mail.Attachment.CreateAttachmentFromString","System.Net.Mail.Attachment.Name","System.Net.Mail.Attachment.NameEncoding"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.Mail.Attachment","System::Net::Mail::Attachment","System.Net.Mail.Attachment.#ctor","System::Net::Mail::Attachment::#ctor","System.Net.Mail.Attachment.ContentDisposition","System::Net::Mail::Attachment::ContentDisposition","System.Net.Mail.Attachment.CreateAttachmentFromString","System::Net::Mail::Attachment::CreateAttachmentFromString","System.Net.Mail.Attachment.Name","System::Net::Mail::Attachment::Name","System.Net.Mail.Attachment.NameEncoding","System::Net::Mail::Attachment::NameEncoding"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"edb4bab2-ee45-caed-fe48-d6be3650c7aa","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net.Mail/Attachment.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Attachment class | Microsoft Docs","_op_ogTitle":"Attachment class","description":"Represents an attachment to an e-mail.\n","toc_asset_id":"_splitted/System.Net.Mail/toc.json","toc_rel":"_splitted/System.Net.Mail/toc.json","source_url":"","ms.assetid":"System.Net.Mail.Attachment","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.mail.attachment","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.mail.attachment","fileRelativePath":"System.Net.Mail.Attachment.html"},"themesRelativePathToOutputRoot":"_themes/"}