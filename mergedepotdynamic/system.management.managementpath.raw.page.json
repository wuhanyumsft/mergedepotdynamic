{"content":"    \r\n    <h1 id=\"System_Management_ManagementPath\">\r\n      <span class=\"lang-csharp\">ManagementPath</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a wrapper for parsing and building paths to WMI objects.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.TypeConverter(typeof(System.Management.ManagementPathConverter))]\npublic class ManagementPath : ICloneable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ManagementPath</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ManagementPath__ctor\" data-linktype=\"self-bookmark\">ManagementPath()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a> class that is empty. This is the default constructor.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ManagementPath__ctor_System_String_\" data-linktype=\"self-bookmark\">ManagementPath(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a> class for the given path.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ManagementPath_ClassName\" data-linktype=\"self-bookmark\">ClassName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the class portion of the path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ManagementPath_DefaultPath\" data-linktype=\"self-bookmark\">DefaultPath</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the default scope path used when no scope is specified. The default scope is \\\\.\\root\\cimv2, and can be changed by setting this property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ManagementPath_IsClass\" data-linktype=\"self-bookmark\">IsClass</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether this is a class path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ManagementPath_IsInstance\" data-linktype=\"self-bookmark\">IsInstance</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether this is an instance path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ManagementPath_IsSingleton\" data-linktype=\"self-bookmark\">IsSingleton</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether this is a <em>singleton</em> instance path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ManagementPath_NamespacePath\" data-linktype=\"self-bookmark\">NamespacePath</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the namespace part of the path. Note that this does not include the server name, which can be retrieved separately.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ManagementPath_Path\" data-linktype=\"self-bookmark\">Path</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the string representation of the full path in the object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ManagementPath_RelativePath\" data-linktype=\"self-bookmark\">RelativePath</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the relative path: class name and keys only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ManagementPath_Server\" data-linktype=\"self-bookmark\">Server</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the server part of the path.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ManagementPath_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a copy of the <a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ManagementPath_SetAsClass\" data-linktype=\"self-bookmark\">SetAsClass()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the path as a new class path. This means that the path must have a class name but not key values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ManagementPath_SetAsSingleton\" data-linktype=\"self-bookmark\">SetAsSingleton()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the path as a new <em>singleton</em> object path. This means that it is a path to an instance but there are no key values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ManagementPath_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the full object path as the string representation.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_ManagementPath_System_ICloneable_Clone\" data-linktype=\"self-bookmark\">ICloneable.Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new object that is a copy of the current instance.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ManagementPath__ctor\">\r\n    \r\n            <a id=\"System_Management_ManagementPath__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ManagementPath()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a> class that is empty. This is the default constructor.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ManagementPath ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ManagementPath__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Management_ManagementPath__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ManagementPath(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a> class for the given path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ManagementPath (string path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how the <a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a> class parses a path to a WMI object.  The path that is parsed in the example is a path to an instance of a class.  </p>\n<pre><code class=\"lang-cs\" name=\"wminet_ManagementPath(S)#1\">using System;\nusing System.Management;\n\npublic class Sample \n{    \n    public static void Main() \n    {\n\n        // Get the WMI class path\n        ManagementPath p = \n            new ManagementPath(\n            &quot;\\\\\\\\ComputerName\\\\root&quot; +\n            &quot;\\\\cimv2:Win32_LogicalDisk.DeviceID=\\&quot;C:\\&quot;&quot;);\n\n        Console.WriteLine(&quot;IsClass: &quot; +\n            p.IsClass);\n        // Should be False (because it is an instance)\n\n        Console.WriteLine(&quot;IsInstance: &quot; +\n            p.IsInstance);\n        // Should be True\n\n        Console.WriteLine(&quot;ClassName: &quot; +\n            p.ClassName);\n        // Should be &quot;Win32_LogicalDisk&quot;\n\n        Console.WriteLine(&quot;NamespacePath: &quot; +\n            p.NamespacePath);\n        // Should be &quot;ComputerName\\cimv2&quot;\n\n        Console.WriteLine(&quot;Server: &quot; + \n            p.Server);\n        // Should be &quot;ComputerName&quot;\n\n        Console.WriteLine(&quot;Path: &quot; +\n            p.Path);\n        // Should be &quot;ComputerName\\root\\cimv2:\n        // Win32_LogicalDisk.DeviceId=&quot;C:&quot;&quot;\n\n        Console.WriteLine(&quot;RelativePath: &quot; +\n            p.RelativePath);\n        // Should be &quot;Win32_LogicalDisk.DeviceID=&quot;C:&quot;&quot;\n\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"wminet_ManagementPath(S)#1\">Imports System\nImports System.Management\n\n\nPublic Class Sample\n    Public Overloads Shared Function _\n        Main(ByVal args() As String) As Integer\n\n        &#39; Get the WMI class path\n        Dim p As ManagementPath = _\n            New ManagementPath( _\n            &quot;\\\\ComputerName\\root&quot; &amp; _\n            &quot;\\cimv2:Win32_LogicalDisk.DeviceID=&quot;&quot;C:&quot;&quot;&quot;)\n\n        Console.WriteLine(&quot;IsClass: &quot; &amp; _\n            p.IsClass)\n        &#39; Should be False (because it is an instance)\n\n        Console.WriteLine(&quot;IsInstance: &quot; &amp; _\n            p.IsInstance)\n        &#39; Should be True\n\n        Console.WriteLine(&quot;ClassName: &quot; &amp; _\n            p.ClassName)\n        &#39; Should be &quot;Win32_LogicalDisk&quot;\n\n        Console.WriteLine(&quot;NamespacePath: &quot; &amp; _\n            p.NamespacePath)\n        &#39; Should be &quot;ComputerName\\cimv2&quot;\n\n        Console.WriteLine(&quot;Server: &quot; &amp; _\n            p.Server)\n        &#39; Should be &quot;ComputerName&quot;\n\n        Console.WriteLine(&quot;Path: &quot; &amp; _\n            p.Path)\n        &#39; Should be &quot;ComputerName\\root\\cimv2:\n        &#39; Win32_LogicalDisk.DeviceId=&quot;C:&quot;&quot;\n\n        Console.WriteLine(&quot;RelativePath: &quot; &amp; _\n            p.RelativePath)\n        &#39; Should be &quot;Win32_LogicalDisk.DeviceID=&quot;C:&quot;&quot;\n\n    End Function\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ManagementPath_ClassName\">\r\n    \r\n            <a id=\"System_Management_ManagementPath_ClassName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClassName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the class portion of the path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ClassName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> value that holds the class portion of the path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"property-value\">Property Value</h2>\n<p> A string containing the name of the class.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how the <a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a> class parses a path to a WMI object. The path that is parsed in the example is a path to an instance of a class.  </p>\n<pre><code class=\"lang-vb\" name=\"wminet_ManagementPath_ClassName#1\">Imports System\nImports System.Management\n\n\nPublic Class Sample\n    Public Overloads Shared Function _\n        Main(ByVal args() As String) As Integer\n\n        &#39; Get the WMI class path\n        Dim p As ManagementPath = _\n            New ManagementPath( _\n            &quot;\\\\ComputerName\\root&quot; &amp; _\n            &quot;\\cimv2:Win32_LogicalDisk.DeviceID=&quot;&quot;C:&quot;&quot;&quot;)\n\n        Console.WriteLine(&quot;IsClass: &quot; &amp; _\n            p.IsClass)\n        &#39; Should be False (because it is an instance)\n\n        Console.WriteLine(&quot;IsInstance: &quot; &amp; _\n            p.IsInstance)\n        &#39; Should be True\n\n        Console.WriteLine(&quot;ClassName: &quot; &amp; _\n            p.ClassName)\n        &#39; Should be &quot;Win32_LogicalDisk&quot;\n\n        Console.WriteLine(&quot;NamespacePath: &quot; &amp; _\n            p.NamespacePath)\n        &#39; Should be &quot;ComputerName\\cimv2&quot;\n\n        Console.WriteLine(&quot;Server: &quot; &amp; _\n            p.Server)\n        &#39; Should be &quot;ComputerName&quot;\n\n        Console.WriteLine(&quot;Path: &quot; &amp; _\n            p.Path)\n        &#39; Should be &quot;ComputerName\\root\\cimv2:\n        &#39; Win32_LogicalDisk.DeviceId=&quot;C:&quot;&quot;\n\n        Console.WriteLine(&quot;RelativePath: &quot; &amp; _\n            p.RelativePath)\n        &#39; Should be &quot;Win32_LogicalDisk.DeviceID=&quot;C:&quot;&quot;\n\n    End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"wminet_ManagementPath_ClassName#1\">using System;\nusing System.Management;\n\npublic class Sample \n{    \n    public static void Main() \n    {\n\n        // Get the WMI class path\n        ManagementPath p = \n            new ManagementPath(\n            &quot;\\\\\\\\ComputerName\\\\root&quot; +\n            &quot;\\\\cimv2:Win32_LogicalDisk.DeviceID=\\&quot;C:\\&quot;&quot;);\n\n        Console.WriteLine(&quot;IsClass: &quot; +\n            p.IsClass);\n        // Should be False (because it is an instance)\n\n        Console.WriteLine(&quot;IsInstance: &quot; +\n            p.IsInstance);\n        // Should be True\n\n        Console.WriteLine(&quot;ClassName: &quot; +\n            p.ClassName);\n        // Should be &quot;Win32_LogicalDisk&quot;\n\n        Console.WriteLine(&quot;NamespacePath: &quot; +\n            p.NamespacePath);\n        // Should be &quot;ComputerName\\cimv2&quot;\n\n        Console.WriteLine(&quot;Server: &quot; + \n            p.Server);\n        // Should be &quot;ComputerName&quot;\n\n        Console.WriteLine(&quot;Path: &quot; +\n            p.Path);\n        // Should be &quot;ComputerName\\root\\cimv2:\n        // Win32_LogicalDisk.DeviceId=&quot;C:&quot;&quot;\n\n        Console.WriteLine(&quot;RelativePath: &quot; +\n            p.RelativePath);\n        // Should be &quot;Win32_LogicalDisk.DeviceID=&quot;C:&quot;&quot;\n\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ManagementPath_DefaultPath\">\r\n    \r\n            <a id=\"System_Management_ManagementPath_DefaultPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultPath</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the default scope path used when no scope is specified. The default scope is \\\\.\\root\\cimv2, and can be changed by setting this property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Management.ManagementPath DefaultPath { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a> that contains the default scope (namespace) path used when no scope is specified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"property-value\">Property Value</h2>\n<p> By default the scope value is \\\\.\\root\\cimv2, or a different scope path if the default was changed.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ManagementPath_IsClass\">\r\n    \r\n            <a id=\"System_Management_ManagementPath_IsClass_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsClass</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether this is a class path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsClass { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value indicating whether this is a class path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"property-value\">Property Value</h2>\n<p> <code>true</code> if this is a class path; otherwise, <code>false</code>.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how the <a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a> class parses a path to a WMI object. The path that is parsed in the example is a path to an instance of a class.  </p>\n<pre><code class=\"lang-vb\" name=\"wminet_ManagementPath_IsClass#1\">Imports System\nImports System.Management\n\n\nPublic Class Sample\n    Public Overloads Shared Function _\n        Main(ByVal args() As String) As Integer\n\n        &#39; Get the WMI class path\n        Dim p As ManagementPath = _\n            New ManagementPath( _\n            &quot;\\\\ComputerName\\root&quot; &amp; _\n            &quot;\\cimv2:Win32_LogicalDisk.DeviceID=&quot;&quot;C:&quot;&quot;&quot;)\n\n        Console.WriteLine(&quot;IsClass: &quot; &amp; _\n            p.IsClass)\n        &#39; Should be False (because it is an instance)\n\n        Console.WriteLine(&quot;IsInstance: &quot; &amp; _\n            p.IsInstance)\n        &#39; Should be True\n\n        Console.WriteLine(&quot;ClassName: &quot; &amp; _\n            p.ClassName)\n        &#39; Should be &quot;Win32_LogicalDisk&quot;\n\n        Console.WriteLine(&quot;NamespacePath: &quot; &amp; _\n            p.NamespacePath)\n        &#39; Should be &quot;ComputerName\\cimv2&quot;\n\n        Console.WriteLine(&quot;Server: &quot; &amp; _\n            p.Server)\n        &#39; Should be &quot;ComputerName&quot;\n\n        Console.WriteLine(&quot;Path: &quot; &amp; _\n            p.Path)\n        &#39; Should be &quot;ComputerName\\root\\cimv2:\n        &#39; Win32_LogicalDisk.DeviceId=&quot;C:&quot;&quot;\n\n        Console.WriteLine(&quot;RelativePath: &quot; &amp; _\n            p.RelativePath)\n        &#39; Should be &quot;Win32_LogicalDisk.DeviceID=&quot;C:&quot;&quot;\n\n    End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"wminet_ManagementPath_IsClass#1\">using System;\nusing System.Management;\n\npublic class Sample \n{    \n    public static void Main() \n    {\n\n        // Get the WMI class path\n        ManagementPath p = \n            new ManagementPath(\n            &quot;\\\\\\\\ComputerName\\\\root&quot; +\n            &quot;\\\\cimv2:Win32_LogicalDisk.DeviceID=\\&quot;C:\\&quot;&quot;);\n\n        Console.WriteLine(&quot;IsClass: &quot; +\n            p.IsClass);\n        // Should be False (because it is an instance)\n\n        Console.WriteLine(&quot;IsInstance: &quot; +\n            p.IsInstance);\n        // Should be True\n\n        Console.WriteLine(&quot;ClassName: &quot; +\n            p.ClassName);\n        // Should be &quot;Win32_LogicalDisk&quot;\n\n        Console.WriteLine(&quot;NamespacePath: &quot; +\n            p.NamespacePath);\n        // Should be &quot;ComputerName\\cimv2&quot;\n\n        Console.WriteLine(&quot;Server: &quot; + \n            p.Server);\n        // Should be &quot;ComputerName&quot;\n\n        Console.WriteLine(&quot;Path: &quot; +\n            p.Path);\n        // Should be &quot;ComputerName\\root\\cimv2:\n        // Win32_LogicalDisk.DeviceId=&quot;C:&quot;&quot;\n\n        Console.WriteLine(&quot;RelativePath: &quot; +\n            p.RelativePath);\n        // Should be &quot;Win32_LogicalDisk.DeviceID=&quot;C:&quot;&quot;\n\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ManagementPath_IsInstance\">\r\n    \r\n            <a id=\"System_Management_ManagementPath_IsInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsInstance</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether this is an instance path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsInstance { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value indicating whether this is an instance path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"property-value\">Property Value</h2>\n<p> <code>true</code> if this is an instance path; otherwise, <code>false</code>.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how the <a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a> class parses a path to a WMI object. The path that is parsed in the example is a path to an instance of a class.  </p>\n<pre><code class=\"lang-cs\" name=\"wminet_ManagementPath_IsInstance#1\">using System;\nusing System.Management;\n\npublic class Sample \n{    \n    public static void Main() \n    {\n\n        // Get the WMI class path\n        ManagementPath p = \n            new ManagementPath(\n            &quot;\\\\\\\\ComputerName\\\\root&quot; +\n            &quot;\\\\cimv2:Win32_LogicalDisk.DeviceID=\\&quot;C:\\&quot;&quot;);\n\n        Console.WriteLine(&quot;IsClass: &quot; +\n            p.IsClass);\n        // Should be False (because it is an instance)\n\n        Console.WriteLine(&quot;IsInstance: &quot; +\n            p.IsInstance);\n        // Should be True\n\n        Console.WriteLine(&quot;ClassName: &quot; +\n            p.ClassName);\n        // Should be &quot;Win32_LogicalDisk&quot;\n\n        Console.WriteLine(&quot;NamespacePath: &quot; +\n            p.NamespacePath);\n        // Should be &quot;ComputerName\\cimv2&quot;\n\n        Console.WriteLine(&quot;Server: &quot; + \n            p.Server);\n        // Should be &quot;ComputerName&quot;\n\n        Console.WriteLine(&quot;Path: &quot; +\n            p.Path);\n        // Should be &quot;ComputerName\\root\\cimv2:\n        // Win32_LogicalDisk.DeviceId=&quot;C:&quot;&quot;\n\n        Console.WriteLine(&quot;RelativePath: &quot; +\n            p.RelativePath);\n        // Should be &quot;Win32_LogicalDisk.DeviceID=&quot;C:&quot;&quot;\n\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"wminet_ManagementPath_IsInstance#1\">Imports System\nImports System.Management\n\n\nPublic Class Sample\n    Public Overloads Shared Function _\n        Main(ByVal args() As String) As Integer\n\n        &#39; Get the WMI class path\n        Dim p As ManagementPath = _\n            New ManagementPath( _\n            &quot;\\\\ComputerName\\root&quot; &amp; _\n            &quot;\\cimv2:Win32_LogicalDisk.DeviceID=&quot;&quot;C:&quot;&quot;&quot;)\n\n        Console.WriteLine(&quot;IsClass: &quot; &amp; _\n            p.IsClass)\n        &#39; Should be False (because it is an instance)\n\n        Console.WriteLine(&quot;IsInstance: &quot; &amp; _\n            p.IsInstance)\n        &#39; Should be True\n\n        Console.WriteLine(&quot;ClassName: &quot; &amp; _\n            p.ClassName)\n        &#39; Should be &quot;Win32_LogicalDisk&quot;\n\n        Console.WriteLine(&quot;NamespacePath: &quot; &amp; _\n            p.NamespacePath)\n        &#39; Should be &quot;ComputerName\\cimv2&quot;\n\n        Console.WriteLine(&quot;Server: &quot; &amp; _\n            p.Server)\n        &#39; Should be &quot;ComputerName&quot;\n\n        Console.WriteLine(&quot;Path: &quot; &amp; _\n            p.Path)\n        &#39; Should be &quot;ComputerName\\root\\cimv2:\n        &#39; Win32_LogicalDisk.DeviceId=&quot;C:&quot;&quot;\n\n        Console.WriteLine(&quot;RelativePath: &quot; &amp; _\n            p.RelativePath)\n        &#39; Should be &quot;Win32_LogicalDisk.DeviceID=&quot;C:&quot;&quot;\n\n    End Function\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ManagementPath_IsSingleton\">\r\n    \r\n            <a id=\"System_Management_ManagementPath_IsSingleton_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSingleton</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether this is a <em>singleton</em> instance path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsSingleton { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value indicating whether this is a singleton instance path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"property-value\">Property Value</h2>\n<p> <code>true</code> if this is a singleton instance path; otherwise, <code>false</code>.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ManagementPath_NamespacePath\">\r\n    \r\n            <a id=\"System_Management_ManagementPath_NamespacePath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NamespacePath</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the namespace part of the path. Note that this does not include the server name, which can be retrieved separately.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string NamespacePath { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> value containing the namespace part of the path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"property-value\">Property Value</h2>\n<p> A string containing the namespace portion of the path represented in this object.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how the <a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a> class parses a path to a WMI object.  The path that is parsed in the example is a path to an instance of a class.  </p>\n<pre><code class=\"lang-vb\" name=\"wminet_ManagementPath_NamespacePath#1\">Imports System\nImports System.Management\n\n\nPublic Class Sample\n    Public Overloads Shared Function _\n        Main(ByVal args() As String) As Integer\n\n        &#39; Get the WMI class path\n        Dim p As ManagementPath = _\n            New ManagementPath( _\n            &quot;\\\\ComputerName\\root&quot; &amp; _\n            &quot;\\cimv2:Win32_LogicalDisk.DeviceID=&quot;&quot;C:&quot;&quot;&quot;)\n\n        Console.WriteLine(&quot;IsClass: &quot; &amp; _\n            p.IsClass)\n        &#39; Should be False (because it is an instance)\n\n        Console.WriteLine(&quot;IsInstance: &quot; &amp; _\n            p.IsInstance)\n        &#39; Should be True\n\n        Console.WriteLine(&quot;ClassName: &quot; &amp; _\n            p.ClassName)\n        &#39; Should be &quot;Win32_LogicalDisk&quot;\n\n        Console.WriteLine(&quot;NamespacePath: &quot; &amp; _\n            p.NamespacePath)\n        &#39; Should be &quot;ComputerName\\cimv2&quot;\n\n        Console.WriteLine(&quot;Server: &quot; &amp; _\n            p.Server)\n        &#39; Should be &quot;ComputerName&quot;\n\n        Console.WriteLine(&quot;Path: &quot; &amp; _\n            p.Path)\n        &#39; Should be &quot;ComputerName\\root\\cimv2:\n        &#39; Win32_LogicalDisk.DeviceId=&quot;C:&quot;&quot;\n\n        Console.WriteLine(&quot;RelativePath: &quot; &amp; _\n            p.RelativePath)\n        &#39; Should be &quot;Win32_LogicalDisk.DeviceID=&quot;C:&quot;&quot;\n\n    End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"wminet_ManagementPath_NamespacePath#1\">using System;\nusing System.Management;\n\npublic class Sample \n{    \n    public static void Main() \n    {\n\n        // Get the WMI class path\n        ManagementPath p = \n            new ManagementPath(\n            &quot;\\\\\\\\ComputerName\\\\root&quot; +\n            &quot;\\\\cimv2:Win32_LogicalDisk.DeviceID=\\&quot;C:\\&quot;&quot;);\n\n        Console.WriteLine(&quot;IsClass: &quot; +\n            p.IsClass);\n        // Should be False (because it is an instance)\n\n        Console.WriteLine(&quot;IsInstance: &quot; +\n            p.IsInstance);\n        // Should be True\n\n        Console.WriteLine(&quot;ClassName: &quot; +\n            p.ClassName);\n        // Should be &quot;Win32_LogicalDisk&quot;\n\n        Console.WriteLine(&quot;NamespacePath: &quot; +\n            p.NamespacePath);\n        // Should be &quot;ComputerName\\cimv2&quot;\n\n        Console.WriteLine(&quot;Server: &quot; + \n            p.Server);\n        // Should be &quot;ComputerName&quot;\n\n        Console.WriteLine(&quot;Path: &quot; +\n            p.Path);\n        // Should be &quot;ComputerName\\root\\cimv2:\n        // Win32_LogicalDisk.DeviceId=&quot;C:&quot;&quot;\n\n        Console.WriteLine(&quot;RelativePath: &quot; +\n            p.RelativePath);\n        // Should be &quot;Win32_LogicalDisk.DeviceID=&quot;C:&quot;&quot;\n\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ManagementPath_Path\">\r\n    \r\n            <a id=\"System_Management_ManagementPath_Path_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Path</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the string representation of the full path in the object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Path { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> value containing the full path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"property-value\">Property Value</h2>\n<p> A string containing the full path represented in this object.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how the <a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a> class parses a path to a WMI object.  The path that is parsed in the example is a path to an instance of a class.  </p>\n<pre><code class=\"lang-vb\" name=\"wminet_ManagementPath_Path#1\">Imports System\nImports System.Management\n\n\nPublic Class Sample\n    Public Overloads Shared Function _\n        Main(ByVal args() As String) As Integer\n\n        &#39; Get the WMI class path\n        Dim p As ManagementPath = _\n            New ManagementPath( _\n            &quot;\\\\ComputerName\\root&quot; &amp; _\n            &quot;\\cimv2:Win32_LogicalDisk.DeviceID=&quot;&quot;C:&quot;&quot;&quot;)\n\n        Console.WriteLine(&quot;IsClass: &quot; &amp; _\n            p.IsClass)\n        &#39; Should be False (because it is an instance)\n\n        Console.WriteLine(&quot;IsInstance: &quot; &amp; _\n            p.IsInstance)\n        &#39; Should be True\n\n        Console.WriteLine(&quot;ClassName: &quot; &amp; _\n            p.ClassName)\n        &#39; Should be &quot;Win32_LogicalDisk&quot;\n\n        Console.WriteLine(&quot;NamespacePath: &quot; &amp; _\n            p.NamespacePath)\n        &#39; Should be &quot;ComputerName\\cimv2&quot;\n\n        Console.WriteLine(&quot;Server: &quot; &amp; _\n            p.Server)\n        &#39; Should be &quot;ComputerName&quot;\n\n        Console.WriteLine(&quot;Path: &quot; &amp; _\n            p.Path)\n        &#39; Should be &quot;ComputerName\\root\\cimv2:\n        &#39; Win32_LogicalDisk.DeviceId=&quot;C:&quot;&quot;\n\n        Console.WriteLine(&quot;RelativePath: &quot; &amp; _\n            p.RelativePath)\n        &#39; Should be &quot;Win32_LogicalDisk.DeviceID=&quot;C:&quot;&quot;\n\n    End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"wminet_ManagementPath_Path#1\">using System;\nusing System.Management;\n\npublic class Sample \n{    \n    public static void Main() \n    {\n\n        // Get the WMI class path\n        ManagementPath p = \n            new ManagementPath(\n            &quot;\\\\\\\\ComputerName\\\\root&quot; +\n            &quot;\\\\cimv2:Win32_LogicalDisk.DeviceID=\\&quot;C:\\&quot;&quot;);\n\n        Console.WriteLine(&quot;IsClass: &quot; +\n            p.IsClass);\n        // Should be False (because it is an instance)\n\n        Console.WriteLine(&quot;IsInstance: &quot; +\n            p.IsInstance);\n        // Should be True\n\n        Console.WriteLine(&quot;ClassName: &quot; +\n            p.ClassName);\n        // Should be &quot;Win32_LogicalDisk&quot;\n\n        Console.WriteLine(&quot;NamespacePath: &quot; +\n            p.NamespacePath);\n        // Should be &quot;ComputerName\\cimv2&quot;\n\n        Console.WriteLine(&quot;Server: &quot; + \n            p.Server);\n        // Should be &quot;ComputerName&quot;\n\n        Console.WriteLine(&quot;Path: &quot; +\n            p.Path);\n        // Should be &quot;ComputerName\\root\\cimv2:\n        // Win32_LogicalDisk.DeviceId=&quot;C:&quot;&quot;\n\n        Console.WriteLine(&quot;RelativePath: &quot; +\n            p.RelativePath);\n        // Should be &quot;Win32_LogicalDisk.DeviceID=&quot;C:&quot;&quot;\n\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ManagementPath_RelativePath\">\r\n    \r\n            <a id=\"System_Management_ManagementPath_RelativePath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RelativePath</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the relative path: class name and keys only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string RelativePath { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> value containing the relative path.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"property-value\">Property Value</h2>\n<p> A string containing the relative path (not including the server and namespace portions) represented in this object.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how the <a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a> class parses a path to a WMI object.  The path that is parsed in the example is a path to an instance of a class.  </p>\n<pre><code class=\"lang-cs\" name=\"wminet_ManagementPath_RelativePath#1\">using System;\nusing System.Management;\n\npublic class Sample \n{    \n    public static void Main() \n    {\n\n        // Get the WMI class path\n        ManagementPath p = \n            new ManagementPath(\n            &quot;\\\\\\\\ComputerName\\\\root&quot; +\n            &quot;\\\\cimv2:Win32_LogicalDisk.DeviceID=\\&quot;C:\\&quot;&quot;);\n\n        Console.WriteLine(&quot;IsClass: &quot; +\n            p.IsClass);\n        // Should be False (because it is an instance)\n\n        Console.WriteLine(&quot;IsInstance: &quot; +\n            p.IsInstance);\n        // Should be True\n\n        Console.WriteLine(&quot;ClassName: &quot; +\n            p.ClassName);\n        // Should be &quot;Win32_LogicalDisk&quot;\n\n        Console.WriteLine(&quot;NamespacePath: &quot; +\n            p.NamespacePath);\n        // Should be &quot;ComputerName\\cimv2&quot;\n\n        Console.WriteLine(&quot;Server: &quot; + \n            p.Server);\n        // Should be &quot;ComputerName&quot;\n\n        Console.WriteLine(&quot;Path: &quot; +\n            p.Path);\n        // Should be &quot;ComputerName\\root\\cimv2:\n        // Win32_LogicalDisk.DeviceId=&quot;C:&quot;&quot;\n\n        Console.WriteLine(&quot;RelativePath: &quot; +\n            p.RelativePath);\n        // Should be &quot;Win32_LogicalDisk.DeviceID=&quot;C:&quot;&quot;\n\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"wminet_ManagementPath_RelativePath#1\">Imports System\nImports System.Management\n\n\nPublic Class Sample\n    Public Overloads Shared Function _\n        Main(ByVal args() As String) As Integer\n\n        &#39; Get the WMI class path\n        Dim p As ManagementPath = _\n            New ManagementPath( _\n            &quot;\\\\ComputerName\\root&quot; &amp; _\n            &quot;\\cimv2:Win32_LogicalDisk.DeviceID=&quot;&quot;C:&quot;&quot;&quot;)\n\n        Console.WriteLine(&quot;IsClass: &quot; &amp; _\n            p.IsClass)\n        &#39; Should be False (because it is an instance)\n\n        Console.WriteLine(&quot;IsInstance: &quot; &amp; _\n            p.IsInstance)\n        &#39; Should be True\n\n        Console.WriteLine(&quot;ClassName: &quot; &amp; _\n            p.ClassName)\n        &#39; Should be &quot;Win32_LogicalDisk&quot;\n\n        Console.WriteLine(&quot;NamespacePath: &quot; &amp; _\n            p.NamespacePath)\n        &#39; Should be &quot;ComputerName\\cimv2&quot;\n\n        Console.WriteLine(&quot;Server: &quot; &amp; _\n            p.Server)\n        &#39; Should be &quot;ComputerName&quot;\n\n        Console.WriteLine(&quot;Path: &quot; &amp; _\n            p.Path)\n        &#39; Should be &quot;ComputerName\\root\\cimv2:\n        &#39; Win32_LogicalDisk.DeviceId=&quot;C:&quot;&quot;\n\n        Console.WriteLine(&quot;RelativePath: &quot; &amp; _\n            p.RelativePath)\n        &#39; Should be &quot;Win32_LogicalDisk.DeviceID=&quot;C:&quot;&quot;\n\n    End Function\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ManagementPath_Server\">\r\n    \r\n            <a id=\"System_Management_ManagementPath_Server_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Server</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the server part of the path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Server { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> value containing the server name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"property-value\">Property Value</h2>\n<p> A string containing the server name from the path represented in this object.  </p>\n<h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates how the <a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a> class parses a path to a WMI object.  The path that is parsed in the example is a path to an instance of a class.  </p>\n<pre><code class=\"lang-vb\" name=\"wminet_ManagementPath_Server#1\">Imports System\nImports System.Management\n\n\nPublic Class Sample\n    Public Overloads Shared Function _\n        Main(ByVal args() As String) As Integer\n\n        &#39; Get the WMI class path\n        Dim p As ManagementPath = _\n            New ManagementPath( _\n            &quot;\\\\ComputerName\\root&quot; &amp; _\n            &quot;\\cimv2:Win32_LogicalDisk.DeviceID=&quot;&quot;C:&quot;&quot;&quot;)\n\n        Console.WriteLine(&quot;IsClass: &quot; &amp; _\n            p.IsClass)\n        &#39; Should be False (because it is an instance)\n\n        Console.WriteLine(&quot;IsInstance: &quot; &amp; _\n            p.IsInstance)\n        &#39; Should be True\n\n        Console.WriteLine(&quot;ClassName: &quot; &amp; _\n            p.ClassName)\n        &#39; Should be &quot;Win32_LogicalDisk&quot;\n\n        Console.WriteLine(&quot;NamespacePath: &quot; &amp; _\n            p.NamespacePath)\n        &#39; Should be &quot;ComputerName\\cimv2&quot;\n\n        Console.WriteLine(&quot;Server: &quot; &amp; _\n            p.Server)\n        &#39; Should be &quot;ComputerName&quot;\n\n        Console.WriteLine(&quot;Path: &quot; &amp; _\n            p.Path)\n        &#39; Should be &quot;ComputerName\\root\\cimv2:\n        &#39; Win32_LogicalDisk.DeviceId=&quot;C:&quot;&quot;\n\n        Console.WriteLine(&quot;RelativePath: &quot; &amp; _\n            p.RelativePath)\n        &#39; Should be &quot;Win32_LogicalDisk.DeviceID=&quot;C:&quot;&quot;\n\n    End Function\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"wminet_ManagementPath_Server#1\">using System;\nusing System.Management;\n\npublic class Sample \n{    \n    public static void Main() \n    {\n\n        // Get the WMI class path\n        ManagementPath p = \n            new ManagementPath(\n            &quot;\\\\\\\\ComputerName\\\\root&quot; +\n            &quot;\\\\cimv2:Win32_LogicalDisk.DeviceID=\\&quot;C:\\&quot;&quot;);\n\n        Console.WriteLine(&quot;IsClass: &quot; +\n            p.IsClass);\n        // Should be False (because it is an instance)\n\n        Console.WriteLine(&quot;IsInstance: &quot; +\n            p.IsInstance);\n        // Should be True\n\n        Console.WriteLine(&quot;ClassName: &quot; +\n            p.ClassName);\n        // Should be &quot;Win32_LogicalDisk&quot;\n\n        Console.WriteLine(&quot;NamespacePath: &quot; +\n            p.NamespacePath);\n        // Should be &quot;ComputerName\\cimv2&quot;\n\n        Console.WriteLine(&quot;Server: &quot; + \n            p.Server);\n        // Should be &quot;ComputerName&quot;\n\n        Console.WriteLine(&quot;Path: &quot; +\n            p.Path);\n        // Should be &quot;ComputerName\\root\\cimv2:\n        // Win32_LogicalDisk.DeviceId=&quot;C:&quot;&quot;\n\n        Console.WriteLine(&quot;RelativePath: &quot; +\n            p.RelativePath);\n        // Should be &quot;Win32_LogicalDisk.DeviceID=&quot;C:&quot;&quot;\n\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ManagementPath_Clone\">\r\n    \r\n            <a id=\"System_Management_ManagementPath_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a copy of the <a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Management.ManagementPath Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.management.managementpath\" data-linktype=\"relative-path\">ManagementPath</a></div>\r\n                  </div>\r\n                  <p>The cloned object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ManagementPath_SetAsClass\">\r\n    \r\n            <a id=\"System_Management_ManagementPath_SetAsClass_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetAsClass()</div>        \r\n          </div>\r\n    \r\n            <p>Sets the path as a new class path. This means that the path must have a class name but not key values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetAsClass ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ManagementPath_SetAsSingleton\">\r\n    \r\n            <a id=\"System_Management_ManagementPath_SetAsSingleton_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetAsSingleton()</div>        \r\n          </div>\r\n    \r\n            <p>Sets the path as a new <em>singleton</em> object path. This means that it is a path to an instance but there are no key values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetAsSingleton ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ManagementPath_ToString\">\r\n    \r\n            <a id=\"System_Management_ManagementPath_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the full object path as the string representation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string containing the full object path represented by this object. This value is equivalent to the value of the <span class=\"xref\">stem.Management.ManagementPath.Path*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Management_ManagementPath_System_ICloneable_Clone\">\r\n    \r\n            <a id=\"System_Management_ManagementPath_System_ICloneable_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICloneable.Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new object that is a copy of the current instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object ICloneable.Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>A new object that is a copy of this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <h2 id=\"net-framework-security\">.NET Framework Security</h2>\n<p> Full trust for the immediate caller. This member cannot be used by partially trusted code. For more information, see <a href=\"../Topic/Using%20Libraries%20from%20Partially%20Trusted%20Code.md\" data-linktype=\"relative-path\">Using Libraries from Partially Trusted Code</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Management.ManagementPath.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Management.ManagementPath.yml\">\r\n<meta name=\"APIName\" content=\"System.Management.ManagementPath\">\r\n<meta name=\"APIName\" content=\"System.Management.ManagementPath..ctor\">\r\n<meta name=\"APIName\" content=\"System.Management.ManagementPath.ClassName\">\r\n<meta name=\"APIName\" content=\"System.Management.ManagementPath.Clone\">\r\n<meta name=\"APIName\" content=\"System.Management.ManagementPath.DefaultPath\">\r\n<meta name=\"APIName\" content=\"System.Management.ManagementPath.IsClass\">\r\n<meta name=\"APIName\" content=\"System.Management.ManagementPath.IsInstance\">\r\n<meta name=\"APIName\" content=\"System.Management.ManagementPath.IsSingleton\">\r\n<meta name=\"APIName\" content=\"System.Management.ManagementPath.NamespacePath\">\r\n<meta name=\"APIName\" content=\"System.Management.ManagementPath.Path\">\r\n<meta name=\"APIName\" content=\"System.Management.ManagementPath.RelativePath\">\r\n<meta name=\"APIName\" content=\"System.Management.ManagementPath.Server\">\r\n<meta name=\"APIName\" content=\"System.Management.ManagementPath.SetAsClass\">\r\n<meta name=\"APIName\" content=\"System.Management.ManagementPath.SetAsSingleton\">\r\n<meta name=\"APIName\" content=\"System.Management.ManagementPath.ICloneable.Clone\">\r\n<meta name=\"APIName\" content=\"System.Management.ManagementPath.ToString\">\r\n<meta name=\"APILocation\" content=\"System.Management.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"0f0c4ecb-57d4-6c7d-7668-e12c2bc7d72d\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a wrapper for parsing and building paths to WMI objects.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Management/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Management.ManagementPath\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Management.ManagementPath.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Management.ManagementPath.yml","open_to_public_contributors":true,"api_name":["System.Management.ManagementPath","System.Management.ManagementPath..ctor","System.Management.ManagementPath.ClassName","System.Management.ManagementPath.Clone","System.Management.ManagementPath.DefaultPath","System.Management.ManagementPath.IsClass","System.Management.ManagementPath.IsInstance","System.Management.ManagementPath.IsSingleton","System.Management.ManagementPath.NamespacePath","System.Management.ManagementPath.Path","System.Management.ManagementPath.RelativePath","System.Management.ManagementPath.Server","System.Management.ManagementPath.SetAsClass","System.Management.ManagementPath.SetAsSingleton","System.Management.ManagementPath.ICloneable.Clone","System.Management.ManagementPath.ToString"],"api_location":["System.Management.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Management.ManagementPath","System::Management::ManagementPath","System.Management.ManagementPath.#ctor","System::Management::ManagementPath::#ctor","System.Management.ManagementPath.ClassName","System::Management::ManagementPath::ClassName","System.Management.ManagementPath.Clone","System::Management::ManagementPath::Clone","System.Management.ManagementPath.DefaultPath","System::Management::ManagementPath::DefaultPath","System.Management.ManagementPath.IsClass","System::Management::ManagementPath::IsClass","System.Management.ManagementPath.IsInstance","System::Management::ManagementPath::IsInstance","System.Management.ManagementPath.IsSingleton","System::Management::ManagementPath::IsSingleton","System.Management.ManagementPath.NamespacePath","System::Management::ManagementPath::NamespacePath","System.Management.ManagementPath.Path","System::Management::ManagementPath::Path","System.Management.ManagementPath.RelativePath","System::Management::ManagementPath::RelativePath","System.Management.ManagementPath.Server","System::Management::ManagementPath::Server","System.Management.ManagementPath.SetAsClass","System::Management::ManagementPath::SetAsClass","System.Management.ManagementPath.SetAsSingleton","System::Management::ManagementPath::SetAsSingleton","System.Management.ManagementPath.System#ICloneable#Clone","System::Management::ManagementPath::System#ICloneable#Clone","System.Management.ManagementPath.ToString","System::Management::ManagementPath::ToString"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"0f0c4ecb-57d4-6c7d-7668-e12c2bc7d72d","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Management/ManagementPath.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ManagementPath class | Microsoft Docs","_op_ogTitle":"ManagementPath class","description":"Provides a wrapper for parsing and building paths to WMI objects.\n","toc_asset_id":"_splitted/System.Management/toc.json","toc_rel":"_splitted/System.Management/toc.json","source_url":"","ms.assetid":"System.Management.ManagementPath","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.management.managementpath","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.management.managementpath","fileRelativePath":"System.Management.ManagementPath.html"},"themesRelativePathToOutputRoot":"_themes/"}