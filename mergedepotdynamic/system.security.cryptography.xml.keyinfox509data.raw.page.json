{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_Xml_KeyInfoX509Data\">\r\n      <span class=\"lang-csharp\">KeyInfoX509Data</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents an <code>&lt;X509Data&gt;</code> subelement of an XMLDSIG or XML Encryption <code>&lt;KeyInfo&gt;</code> element.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class KeyInfoX509Data : System.Security.Cryptography.Xml.KeyInfoClause</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfoclause\" data-linktype=\"relative-path\">System.Security.Cryptography.Xml.KeyInfoClause</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">KeyInfoX509Data</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The KeyInfoX509Data class represents the <code>&lt;X509Data&gt;</code> element that contains X.509v3 certificate information related to the validation or encryption key. For example, an <code>&lt;X509Data&gt;</code> element might contain an X.509 certificate whose subject public key is the validation key, or a chain of X.509 certificates that terminate in a certificate for the validating key, or other identifiers for related X.509 certificates.  </p>\n<p> Use the KeyInfoX509Data class whenever you need to include X.509 certificate data in an encrypted or signed XML document.  </p>\n<p> For more information about the <code>&lt;X509Data&gt;</code> element, see Section 4.4.4 of the XMLDSIG specification, which is available from the World Wide Web Consortium (W3C) at www.w3.org/TR/xmldsig-core/, or see the XML Encryption specification, which is available from the W3C at www.w3.org/TR/xmlenc-core/.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_KeyInfoX509Data__ctor\" data-linktype=\"self-bookmark\">KeyInfoX509Data()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_KeyInfoX509Data__ctor_System_Byte___\" data-linktype=\"self-bookmark\">KeyInfoX509Data(Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> class from the specified ASN.1 DER encoding of an X.509v3 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_KeyInfoX509Data__ctor_System_Security_Cryptography_X509Certificates_X509Certificate_\" data-linktype=\"self-bookmark\">KeyInfoX509Data(X509Certificate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> class from the specified X.509v3 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_KeyInfoX509Data__ctor_System_Security_Cryptography_X509Certificates_X509Certificate_System_Security_Cryptography_X509Certificates_X509IncludeOption_\" data-linktype=\"self-bookmark\">KeyInfoX509Data(X509Certificate,X509IncludeOption)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> class from the specified X.509v3 certificate.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_KeyInfoX509Data_Certificates\" data-linktype=\"self-bookmark\">Certificates</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a list of the X.509v3 certificates contained in the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_KeyInfoX509Data_CRL\" data-linktype=\"self-bookmark\">CRL</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the Certificate Revocation List (CRL) contained within the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_KeyInfoX509Data_IssuerSerials\" data-linktype=\"self-bookmark\">IssuerSerials</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a list of <a class=\"xref\" href=\"system.security.cryptography.xml.x509issuerserial\" data-linktype=\"relative-path\">X509IssuerSerial</a> structures that represent an issuer name and serial number pair.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_KeyInfoX509Data_SubjectKeyIds\" data-linktype=\"self-bookmark\">SubjectKeyIds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a list of the subject key identifiers (SKIs) contained in the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_KeyInfoX509Data_SubjectNames\" data-linktype=\"self-bookmark\">SubjectNames</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a list of the subject names of the entities contained in the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_KeyInfoX509Data_AddCertificate_System_Security_Cryptography_X509Certificates_X509Certificate_\" data-linktype=\"self-bookmark\">AddCertificate(X509Certificate)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified X.509v3 certificate to the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_KeyInfoX509Data_AddIssuerSerial_System_String_System_String_\" data-linktype=\"self-bookmark\">AddIssuerSerial(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified issuer name and serial number pair to the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_KeyInfoX509Data_AddSubjectKeyId_System_Byte___\" data-linktype=\"self-bookmark\">AddSubjectKeyId(Byte[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified subject key identifier (SKI) byte array to the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_KeyInfoX509Data_AddSubjectKeyId_System_String_\" data-linktype=\"self-bookmark\">AddSubjectKeyId(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified subject key identifier (SKI) string to the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_KeyInfoX509Data_AddSubjectName_System_String_\" data-linktype=\"self-bookmark\">AddSubjectName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the subject name of the entity that was issued an X.509v3 certificate to the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_KeyInfoX509Data_GetXml\" data-linktype=\"self-bookmark\">GetXml()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an XML representation of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_Xml_KeyInfoX509Data_LoadXml_System_Xml_XmlElement_\" data-linktype=\"self-bookmark\">LoadXml(XmlElement)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Parses the input <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object and configures the internal state of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object to match.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_KeyInfoX509Data__ctor\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_KeyInfoX509Data__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyInfoX509Data()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public KeyInfoX509Data ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_KeyInfoX509Data__ctor_System_Byte___\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_KeyInfoX509Data__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyInfoX509Data(Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> class from the specified ASN.1 DER encoding of an X.509v3 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public KeyInfoX509Data (byte[] rgbCert);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rgbCert</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The ASN.1 DER encoding of an <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object to initialize the new instance of <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> from.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_KeyInfoX509Data__ctor_System_Security_Cryptography_X509Certificates_X509Certificate_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_KeyInfoX509Data__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyInfoX509Data(X509Certificate)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> class from the specified X.509v3 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public KeyInfoX509Data (System.Security.Cryptography.X509Certificates.X509Certificate cert);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cert</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object to initialize the new instance of <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> from.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>cert</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>This section contains two code examples. The first example demonstrates how to sign an XML file using a detached signature. The second example demonstrates how to sign an XML file using an envelope signature.  </p>\n<p> <strong>Example #1</strong>  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.XML.KeyInfoX509Data_Detached#2\">// Sign an XML file and save the signature in a new file.\nvoid SignDetachedResource( String^ URIString, String^ XmlSigFileName, RSA^ Key, String^ Certificate )\n{\n   \n   // Create a SignedXml object.\n   SignedXml^ signedXml = gcnew SignedXml;\n   \n   // Assign the key to the SignedXml object.\n   signedXml-&gt;SigningKey = Key;\n   \n   // Create a reference to be signed.\n   Reference^ reference = gcnew Reference;\n   \n   // Add the passed URI to the reference object.\n   reference-&gt;Uri = URIString;\n   \n   // Add the reference to the SignedXml object.\n   signedXml-&gt;AddReference( reference );\n   \n   // Create a new KeyInfo object.\n   KeyInfo^ keyInfo = gcnew KeyInfo;\n   \n   // Load the X509 certificate.\n   X509Certificate^ MSCert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Load the certificate into a KeyInfoX509Data object\n   // and add it to the KeyInfo object.\n   keyInfo-&gt;AddClause( gcnew KeyInfoX509Data( MSCert ) );\n   \n   // Add the KeyInfo object to the SignedXml object.\n   signedXml-&gt;KeyInfo = keyInfo;\n   \n   // Compute the signature.\n   signedXml-&gt;ComputeSignature();\n   \n   // Get the XML representation of the signature and save\n   // it to an XmlElement object.\n   XmlElement^ xmlDigitalSignature = signedXml-&gt;GetXml();\n   \n   // Save the signed XML document to a file specified\n   // using the passed string.\n   XmlTextWriter^ xmltw = gcnew XmlTextWriter( XmlSigFileName,gcnew UTF8Encoding( false ) );\n   xmlDigitalSignature-&gt;WriteTo( xmltw );\n   xmltw-&gt;Close();\n}\n\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.XML.KeyInfoX509Data_Detached#2\">    // Sign an XML file and save the signature in a new file.\n    public static void SignDetachedResource(string URIString, string XmlSigFileName, RSA Key, string Certificate)\n    {\n        // Create a SignedXml object.\n        SignedXml signedXml = new SignedXml();\n\n        // Assign the key to the SignedXml object.\n        signedXml.SigningKey = Key;\n\n        // Create a reference to be signed.\n        Reference reference = new Reference();\n\n        // Add the passed URI to the reference object.\n        reference.Uri = URIString;\n\t\t\n        // Add the reference to the SignedXml object.\n        signedXml.AddReference(reference);\n\n        // Create a new KeyInfo object.\n        KeyInfo keyInfo = new KeyInfo();\n\n        // Load the X509 certificate.\n        X509Certificate MSCert = X509Certificate.CreateFromCertFile(Certificate);\n \n        // Load the certificate into a KeyInfoX509Data object\n        // and add it to the KeyInfo object.\n        keyInfo.AddClause(new KeyInfoX509Data(MSCert));\n  \n        // Add the KeyInfo object to the SignedXml object.\n        signedXml.KeyInfo = keyInfo;\n\n        // Compute the signature.\n        signedXml.ComputeSignature();\n\n        // Get the XML representation of the signature and save\n        // it to an XmlElement object.\n        XmlElement xmlDigitalSignature = signedXml.GetXml();\n\n        // Save the signed XML document to a file specified\n        // using the passed string.\n        XmlTextWriter xmltw = new XmlTextWriter(XmlSigFileName, new UTF8Encoding(false));\n        xmlDigitalSignature.WriteTo(xmltw);\n        xmltw.Close();\n\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.XML.KeyInfoX509Data_Detached#2\">   &#39; Sign an XML file and save the signature in a new file.\n   Public Shared Sub SignDetachedResource(URIString As String, XmlSigFileName As String, Key As RSA, Certificate As String)\n      &#39; Create a SignedXml object.\n      Dim signedXml As New SignedXml()\n      \n      &#39; Assign the key to the SignedXml object.\n      signedXml.SigningKey = Key\n      \n      &#39; Create a reference to be signed.\n      Dim reference As New Reference()\n      \n      &#39; Add the passed URI to the reference object.\n      reference.Uri = URIString\n      \n      &#39; Add the reference to the SignedXml object.\n      signedXml.AddReference(reference)\n      \n      &#39; Create a new KeyInfo object.\n      Dim keyInfo As New KeyInfo()\n      \n      &#39; Load the X509 certificate.\n      Dim MSCert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Load the certificate into a KeyInfoX509Data object\n      &#39; and add it to the KeyInfo object.\n      keyInfo.AddClause(New KeyInfoX509Data(MSCert))\n      \n      &#39; Add the KeyInfo object to the SignedXml object.\n      signedXml.KeyInfo = keyInfo\n      \n      &#39; Compute the signature.\n      signedXml.ComputeSignature()\n      \n      &#39; Get the XML representation of the signature and save\n      &#39; it to an XmlElement object.\n      Dim xmlDigitalSignature As XmlElement = signedXml.GetXml()\n      \n      &#39; Save the signed XML document to a file specified\n      &#39; using the passed string.\n      Dim xmltw As New XmlTextWriter(XmlSigFileName, New UTF8Encoding(False))\n      xmlDigitalSignature.WriteTo(xmltw)\n      xmltw.Close()\n   End Sub  \nEnd Class \n</code></pre><p> <strong>Example #2</strong>  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.XML.KeyInfoX509Data_Envelope#2\">    // Sign an XML file and save the signature in a new file.\n    public static void SignXmlFile(string FileName, string SignedFileName, RSA Key, string Certificate)\n    {\n        // Create a new XML document.\n        XmlDocument doc = new XmlDocument();\n\n        // Format the document to ignore white spaces.\n        doc.PreserveWhitespace = false;\n\n        // Load the passed XML file using it&#39;s name.\n        doc.Load(new XmlTextReader(FileName));\n\n        // Create a SignedXml object.\n        SignedXml signedXml = new SignedXml(doc);\n\n        // Add the key to the SignedXml document. \n        signedXml.SigningKey = Key;\n\n        // Create a reference to be signed.\n        Reference reference = new Reference();\n        reference.Uri = &quot;&quot;;\n\n        // Add an enveloped transformation to the reference.\n        XmlDsigEnvelopedSignatureTransform env = new XmlDsigEnvelopedSignatureTransform();\n        reference.AddTransform(env);\n\n        // Add the reference to the SignedXml object.\n        signedXml.AddReference(reference);\n\n        // Create a new KeyInfo object.\n        KeyInfo keyInfo = new KeyInfo();\n\n        // Load the X509 certificate.\n        X509Certificate MSCert = X509Certificate.CreateFromCertFile(Certificate);\n \n        // Load the certificate into a KeyInfoX509Data object\n        // and add it to the KeyInfo object.\n        keyInfo.AddClause(new KeyInfoX509Data(MSCert));\n  \n        // Add the KeyInfo object to the SignedXml object.\n        signedXml.KeyInfo = keyInfo;\n\n        // Compute the signature.\n        signedXml.ComputeSignature();\n\n        // Get the XML representation of the signature and save\n        // it to an XmlElement object.\n        XmlElement xmlDigitalSignature = signedXml.GetXml();\n\n        // Append the element to the XML document.\n        doc.DocumentElement.AppendChild(doc.ImportNode(xmlDigitalSignature, true));\n\t\t\n\t\t\n        if (doc.FirstChild is XmlDeclaration)  \n        {\n            doc.RemoveChild(doc.FirstChild);\n        }\n\n        // Save the signed XML document to a file specified\n        // using the passed string.\n        XmlTextWriter xmltw = new XmlTextWriter(SignedFileName, new UTF8Encoding(false));\n        doc.WriteTo(xmltw);\n        xmltw.Close();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.XML.KeyInfoX509Data_Envelope#2\">   &#39; Sign an XML file and save the signature in a new file.\n   Public Shared Sub SignXmlFile(FileName As String, SignedFileName As String, Key As RSA, Certificate As String)\n      &#39; Create a new XML document.\n      Dim doc As New XmlDocument()\n      \n      &#39; Format the document to ignore white spaces.\n      doc.PreserveWhitespace = False\n      \n      &#39; Load the passed XML file using it&#39;s name.\n      doc.Load(New XmlTextReader(FileName))\n      \n      &#39; Create a SignedXml object.\n      Dim signedXml As New SignedXml(doc)\n      \n      &#39; Add the key to the SignedXml document. \n      signedXml.SigningKey = Key\n      \n      &#39; Create a reference to be signed.\n      Dim reference As New Reference()\n      reference.Uri = &quot;&quot;\n      \n      &#39; Add an enveloped transformation to the reference.\n      Dim env As New XmlDsigEnvelopedSignatureTransform()\n      reference.AddTransform(env)\n      \n      &#39; Add the reference to the SignedXml object.\n      signedXml.AddReference(reference)\n      \n      &#39; Create a new KeyInfo object.\n      Dim keyInfo As New KeyInfo()\n      \n      &#39; Load the X509 certificate.\n      Dim MSCert As X509Certificate = X509Certificate.CreateFromCertFile(Certificate)\n      \n      &#39; Load the certificate into a KeyInfoX509Data object\n      &#39; and add it to the KeyInfo object.\n      keyInfo.AddClause(New KeyInfoX509Data(MSCert))\n      \n      &#39; Add the KeyInfo object to the SignedXml object.\n      signedXml.KeyInfo = keyInfo\n      \n      &#39; Compute the signature.\n      signedXml.ComputeSignature()\n      \n      &#39; Get the XML representation of the signature and save\n      &#39; it to an XmlElement object.\n      Dim xmlDigitalSignature As XmlElement = signedXml.GetXml()\n      \n      &#39; Append the element to the XML document.\n      doc.DocumentElement.AppendChild(doc.ImportNode(xmlDigitalSignature, True))\n      \n      \n      If TypeOf doc.FirstChild Is XmlDeclaration Then\n         doc.RemoveChild(doc.FirstChild)\n      End If\n      \n      &#39; Save the signed XML document to a file specified\n      &#39; using the passed string.\n      Dim xmltw As New XmlTextWriter(SignedFileName, New UTF8Encoding(False))\n      doc.WriteTo(xmltw)\n      xmltw.Close()\n   End Sub \n   \n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Cryptography.XML.KeyInfoX509Data_Envelope#2\">// Sign an XML file and save the signature in a new file.\nvoid SignXmlFile( String^ FileName, String^ SignedFileName, RSA^ Key, String^ Certificate )\n{\n   \n   // Create a new XML document.\n   XmlDocument^ doc = gcnew XmlDocument;\n   \n   // Format the document to ignore white spaces.\n   doc-&gt;PreserveWhitespace = false;\n   \n   // Load the passed XML file using its name.\n   doc-&gt;Load( gcnew XmlTextReader( FileName ) );\n   \n   // Create a SignedXml object.\n   SignedXml^ signedXml = gcnew SignedXml( doc );\n   \n   // Add the key to the SignedXml document. \n   signedXml-&gt;SigningKey = Key;\n   \n   // Create a reference to be signed.\n   Reference^ reference = gcnew Reference;\n   reference-&gt;Uri = &quot;&quot;;\n   \n   // Add an enveloped transformation to the reference.\n   XmlDsigEnvelopedSignatureTransform^ env = gcnew XmlDsigEnvelopedSignatureTransform;\n   reference-&gt;AddTransform( env );\n   \n   // Add the reference to the SignedXml object.\n   signedXml-&gt;AddReference( reference );\n   \n   // Create a new KeyInfo object.\n   KeyInfo^ keyInfo = gcnew KeyInfo;\n   \n   // Load the X509 certificate.\n   X509Certificate^ MSCert = X509Certificate::CreateFromCertFile( Certificate );\n   \n   // Load the certificate into a KeyInfoX509Data object\n   // and add it to the KeyInfo object.\n   keyInfo-&gt;AddClause( gcnew KeyInfoX509Data( MSCert ) );\n   \n   // Add the KeyInfo object to the SignedXml object.\n   signedXml-&gt;KeyInfo = keyInfo;\n   \n   // Compute the signature.\n   signedXml-&gt;ComputeSignature();\n   \n   // Get the XML representation of the signature and save\n   // it to an XmlElement object.\n   XmlElement^ xmlDigitalSignature = signedXml-&gt;GetXml();\n   \n   // Append the element to the XML document.\n   doc-&gt;DocumentElement-&gt;AppendChild( doc-&gt;ImportNode( xmlDigitalSignature, true ) );\n   if ( (doc-&gt;FirstChild)-&gt;GetType() == XmlDeclaration::typeid )\n   {\n      doc-&gt;RemoveChild( doc-&gt;FirstChild );\n   }\n\n   \n   // Save the signed XML document to a file specified\n   // using the passed string.\n   XmlTextWriter^ xmltw = gcnew XmlTextWriter( SignedFileName,gcnew UTF8Encoding( false ) );\n   doc-&gt;WriteTo( xmltw );\n   xmltw-&gt;Close();\n}\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_KeyInfoX509Data__ctor_System_Security_Cryptography_X509Certificates_X509Certificate_System_Security_Cryptography_X509Certificates_X509IncludeOption_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_KeyInfoX509Data__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyInfoX509Data(X509Certificate,X509IncludeOption)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> class from the specified X.509v3 certificate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public KeyInfoX509Data (System.Security.Cryptography.X509Certificates.X509Certificate cert, System.Security.Cryptography.X509Certificates.X509IncludeOption includeOption);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cert</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object to initialize the new instance of <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> from.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>includeOption</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509includeoption\" data-linktype=\"relative-path\">X509IncludeOption</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509includeoption\" data-linktype=\"relative-path\">X509IncludeOption</a> values that specifies how much of the certificate chain to include.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>cert</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The certificate has only a partial certificate chain.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object while signing and verifying an XML document.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Security.Cryptography.Xml.KeyInfoX509Data#1\">&#39;\n&#39; This example signs an XML file using an\n&#39; envelope signature. It then verifies the \n&#39; signed XML.\n&#39;\n&#39; You must have a certificate with a subject name\n&#39; of &quot;CN=XMLDSIG_Test&quot; in the &quot;My&quot; certificate store. \n&#39;\n&#39; Run the following command to create a certificate\n&#39; and place it in the store.\n&#39; makecert -r -pe -n &quot;CN=XMLDSIG_Test&quot; -b 01/01/2005 -e 01/01/2010 -sky signing -ss my\nImports System\nImports System.Security.Cryptography\nImports System.Security.Cryptography.Xml\nImports System.Security.Cryptography.X509Certificates\nImports System.Text\nImports System.Xml\n\n\n\nModule SignVerifyEnvelope\n\n\n    Sub Main(ByVal args() As String)\n\n        Dim Certificate As String = &quot;CN=XMLDSIG_Test&quot;\n\n        Try\n\n            &#39; Create an XML file to sign.\n            CreateSomeXml(&quot;Example.xml&quot;)\n            Console.WriteLine(&quot;New XML file created.&quot;)\n\n            &#39; Sign the XML that was just created and save it in a \n            &#39; new file.\n            SignXmlFile(&quot;Example.xml&quot;, &quot;SignedExample.xml&quot;, Certificate)\n            Console.WriteLine(&quot;XML file signed.&quot;)\n\n            If VerifyXmlFile(&quot;SignedExample.xml&quot;, Certificate) Then\n                Console.WriteLine(&quot;The XML signature is valid.&quot;)\n            Else\n                Console.WriteLine(&quot;The XML signature is not valid.&quot;)\n            End If\n        Catch e As CryptographicException\n            Console.WriteLine(e.Message)\n        End Try\n\n    End Sub\n\n\n    &#39; Sign an XML file and save the signature in a new file.\n    Sub SignXmlFile(ByVal FileName As String, ByVal SignedFileName As String, ByVal SubjectName As String)\n        If Nothing = FileName Then\n            Throw New ArgumentNullException(&quot;FileName&quot;)\n        End If\n        If Nothing = SignedFileName Then\n            Throw New ArgumentNullException(&quot;SignedFileName&quot;)\n        End If\n        If Nothing = SubjectName Then\n            Throw New ArgumentNullException(&quot;SubjectName&quot;)\n        End If\n        &#39; Load the certificate from the certificate store.\n        Dim cert As X509Certificate2 = GetCertificateBySubject(SubjectName)\n\n        &#39; Create a new XML document.\n        Dim doc As New XmlDocument()\n\n        &#39; Format the document to ignore white spaces.\n        doc.PreserveWhitespace = False\n\n        &#39; Load the passed XML file using it&#39;s name.\n        doc.Load(New XmlTextReader(FileName))\n\n        &#39; Create a SignedXml object.\n        Dim signedXml As New SignedXml(doc)\n\n        &#39; Add the key to the SignedXml document. \n        signedXml.SigningKey = cert.PrivateKey\n\n        &#39; Create a reference to be signed.\n        Dim reference As New Reference()\n        reference.Uri = &quot;&quot;\n\n        &#39; Add an enveloped transformation to the reference.\n        Dim env As New XmlDsigEnvelopedSignatureTransform()\n        reference.AddTransform(env)\n\n        &#39; Add the reference to the SignedXml object.\n        signedXml.AddReference(reference)\n\n        &#39; Create a new KeyInfo object.\n        Dim keyInfo As New KeyInfo()\n\n        &#39; Load the certificate into a KeyInfoX509Data object\n        &#39; and add it to the KeyInfo object.\n        Dim X509KeyInfo As New KeyInfoX509Data(cert, X509IncludeOption.WholeChain)\n\n        keyInfo.AddClause(X509KeyInfo)\n\n        &#39; Add the KeyInfo object to the SignedXml object.\n        signedXml.KeyInfo = keyInfo\n\n        &#39; Compute the signature.\n        signedXml.ComputeSignature()\n\n        &#39; Get the XML representation of the signature and save\n        &#39; it to an XmlElement object.\n        Dim xmlDigitalSignature As XmlElement = signedXml.GetXml()\n\n        &#39; Append the element to the XML document.\n        doc.DocumentElement.AppendChild(doc.ImportNode(xmlDigitalSignature, True))\n\n\n        If TypeOf doc.FirstChild Is XmlDeclaration Then\n            doc.RemoveChild(doc.FirstChild)\n        End If\n\n        &#39; Save the signed XML document to a file specified\n        &#39; using the passed string.\n        Dim xmltw As New XmlTextWriter(SignedFileName, New UTF8Encoding(False))\n        Try\n            doc.WriteTo(xmltw)\n\n        Finally\n            xmltw.Close()\n        End Try\n\n    End Sub\n\n    &#39; Verify the signature of an XML file against an asymetric \n    &#39; algorithm and return the result.\n    Function VerifyXmlFile(ByVal FileName As String, ByVal CertificateSubject As String) As [Boolean]\n        &#39; Check the args.\n        If Nothing = FileName Then\n            Throw New ArgumentNullException(&quot;FileName&quot;)\n        End If\n        If Nothing = CertificateSubject Then\n            Throw New ArgumentNullException(&quot;CertificateSubject&quot;)\n        End If\n        &#39; Load the certificate from the store.\n        Dim cert As X509Certificate2 = GetCertificateBySubject(CertificateSubject)\n\n        &#39; Create a new XML document.\n        Dim xmlDocument As New XmlDocument()\n\n        &#39; Load the passed XML file into the document. \n        xmlDocument.Load(FileName)\n\n        &#39; Create a new SignedXml object and pass it\n        &#39; the XML document class.\n        Dim signedXml As New SignedXml(xmlDocument)\n\n        &#39; Find the &quot;Signature&quot; node and create a new\n        &#39; XmlNodeList object.\n        Dim nodeList As XmlNodeList = xmlDocument.GetElementsByTagName(&quot;Signature&quot;)\n\n        &#39; Load the signature node.\n        signedXml.LoadXml(CType(nodeList(0), XmlElement))\n\n        &#39; Check the signature and return the result.\n        Return signedXml.CheckSignature(cert, True)\n\n    End Function\n\n\n\n    Function GetCertificateBySubject(ByVal CertificateSubject As String) As X509Certificate2\n        &#39; Check the args.\n        If Nothing = CertificateSubject Then\n            Throw New ArgumentNullException(&quot;CertificateSubject&quot;)\n        End If\n\n        &#39; Load the certificate from the certificate store.\n        Dim cert As X509Certificate2 = Nothing\n\n        Dim store As New X509Store(&quot;My&quot;, StoreLocation.CurrentUser)\n\n        Try\n            &#39; Open the store.\n            store.Open(OpenFlags.ReadOnly Or OpenFlags.OpenExistingOnly)\n\n            &#39; Get the certs from the store.\n            Dim CertCol As X509Certificate2Collection = store.Certificates\n\n            &#39; Find the certificate with the specified subject.\n            Dim c As X509Certificate2\n            For Each c In CertCol\n                If c.Subject = CertificateSubject Then\n                    cert = c\n                    Exit For\n                End If\n            Next c\n\n            &#39; Throw an exception of the certificate was not found.\n            If cert Is Nothing Then\n                Throw New CryptographicException(&quot;The certificate could not be found.&quot;)\n            End If\n        Finally\n            &#39; Close the store even if an exception was thrown.\n            store.Close()\n        End Try\n\n        Return cert\n\n    End Function\n\n\n    &#39; Create example data to sign.\n    Sub CreateSomeXml(ByVal FileName As String)\n        &#39; Check the args.\n        If Nothing = FileName Then\n            Throw New ArgumentNullException(&quot;FileName&quot;)\n        End If\n        &#39; Create a new XmlDocument object.\n        Dim document As New XmlDocument()\n\n        &#39; Create a new XmlNode object.\n        Dim node As XmlNode = document.CreateNode(XmlNodeType.Element, &quot;&quot;, &quot;MyElement&quot;, &quot;samples&quot;)\n\n        &#39; Add some text to the node.\n        node.InnerText = &quot;Example text to be signed.&quot;\n\n        &#39; Append the node to the document.\n        document.AppendChild(node)\n\n        &#39; Save the XML document to the file name specified.\n        Dim xmltw As New XmlTextWriter(FileName, New UTF8Encoding(False))\n        Try\n            document.WriteTo(xmltw)\n\n        Finally\n            xmltw.Close()\n        End Try\n\n    End Sub\nEnd Module\n&#39; This code example displays the following to the console:\n&#39;\n&#39; New XML file created.\n&#39; XML file signed.\n&#39; The XML signature is valid.\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Security.Cryptography.Xml.KeyInfoX509Data#1\">//\n// This example signs an XML file using an\n// envelope signature. It then verifies the \n// signed XML.\n//\n// You must have a certificate with a subject name\n// of &quot;CN=XMLDSIG_Test&quot; in the &quot;My&quot; certificate store. \n//\n// Run the following command to create a certificate\n// and place it in the store.\n// makecert -r -pe -n &quot;CN=XMLDSIG_Test&quot; -b 01/01/2005 -e 01/01/2010 -sky signing -ss my\n\nusing System;\nusing System.Security.Cryptography;\nusing System.Security.Cryptography.Xml;\nusing System.Security.Cryptography.X509Certificates;\nusing System.Text;\nusing System.Xml;\n\npublic class SignVerifyEnvelope\n{\n\n    public static void Main(String[] args)\n    {\n\n        string Certificate = &quot;CN=XMLDSIG_Test&quot;;\n\n        try\n        {\n\n            // Create an XML file to sign.\n            CreateSomeXml(&quot;Example.xml&quot;);\n            Console.WriteLine(&quot;New XML file created.&quot;);\n\n            // Sign the XML that was just created and save it in a \n            // new file.\n            SignXmlFile(&quot;Example.xml&quot;, &quot;SignedExample.xml&quot;, Certificate);\n            Console.WriteLine(&quot;XML file signed.&quot;);\n\n            if (VerifyXmlFile(&quot;SignedExample.xml&quot;, Certificate))\n            {\n                Console.WriteLine(&quot;The XML signature is valid.&quot;);\n            }\n            else\n            {\n                Console.WriteLine(&quot;The XML signature is not valid.&quot;);\n            }\n        }\n        catch (CryptographicException e)\n        {\n            Console.WriteLine(e.Message);\n        }\n    }\n\n    // Sign an XML file and save the signature in a new file.\n    public static void SignXmlFile(string FileName, string SignedFileName, string SubjectName)\n    {\n        if (null == FileName)\n            throw new ArgumentNullException(&quot;FileName&quot;);\n        if (null == SignedFileName)\n            throw new ArgumentNullException(&quot;SignedFileName&quot;);\n        if (null == SubjectName)\n            throw new ArgumentNullException(&quot;SubjectName&quot;);\n\n        // Load the certificate from the certificate store.\n        X509Certificate2 cert = GetCertificateBySubject(SubjectName);\n\n        // Create a new XML document.\n        XmlDocument doc = new XmlDocument();\n\n        // Format the document to ignore white spaces.\n        doc.PreserveWhitespace = false;\n\n        // Load the passed XML file using it&#39;s name.\n        doc.Load(new XmlTextReader(FileName));\n\n        // Create a SignedXml object.\n        SignedXml signedXml = new SignedXml(doc);\n\n        // Add the key to the SignedXml document. \n        signedXml.SigningKey = cert.PrivateKey;\n\n        // Create a reference to be signed.\n        Reference reference = new Reference();\n        reference.Uri = &quot;&quot;;\n\n        // Add an enveloped transformation to the reference.\n        XmlDsigEnvelopedSignatureTransform env = new XmlDsigEnvelopedSignatureTransform();\n        reference.AddTransform(env);\n\n        // Add the reference to the SignedXml object.\n        signedXml.AddReference(reference);\n\n        // Create a new KeyInfo object.\n        KeyInfo keyInfo = new KeyInfo();\n\n        // Load the certificate into a KeyInfoX509Data object\n        // and add it to the KeyInfo object.\n        KeyInfoX509Data X509KeyInfo = new KeyInfoX509Data(cert, X509IncludeOption.WholeChain);\n\n        keyInfo.AddClause(X509KeyInfo);\n\n        // Add the KeyInfo object to the SignedXml object.\n        signedXml.KeyInfo = keyInfo;\n\n        // Compute the signature.\n        signedXml.ComputeSignature();\n\n        // Get the XML representation of the signature and save\n        // it to an XmlElement object.\n        XmlElement xmlDigitalSignature = signedXml.GetXml();\n\n        // Append the element to the XML document.\n        doc.DocumentElement.AppendChild(doc.ImportNode(xmlDigitalSignature, true));\n\n\n        if (doc.FirstChild is XmlDeclaration)\n        {\n            doc.RemoveChild(doc.FirstChild);\n        }\n\n        // Save the signed XML document to a file specified\n        // using the passed string.\n        using (XmlTextWriter xmltw = new XmlTextWriter(SignedFileName, new UTF8Encoding(false)))\n        {\n            doc.WriteTo(xmltw);\n            xmltw.Close();\n        }\n\n    }\n\n    // Verify the signature of an XML file against an asymetric \n    // algorithm and return the result.\n    public static Boolean VerifyXmlFile(String FileName, String CertificateSubject)\n    {\n        // Check the args.\n        if (null == FileName)\n            throw new ArgumentNullException(&quot;FileName&quot;);\n        if (null == CertificateSubject)\n            throw new ArgumentNullException(&quot;CertificateSubject&quot;);\n\n        // Load the certificate from the store.\n        X509Certificate2 cert = GetCertificateBySubject(CertificateSubject);\n\n        // Create a new XML document.\n        XmlDocument xmlDocument = new XmlDocument();\n\n        // Load the passed XML file into the document. \n        xmlDocument.Load(FileName);\n\n        // Create a new SignedXml object and pass it\n        // the XML document class.\n        SignedXml signedXml = new SignedXml(xmlDocument);\n\n        // Find the &quot;Signature&quot; node and create a new\n        // XmlNodeList object.\n        XmlNodeList nodeList = xmlDocument.GetElementsByTagName(&quot;Signature&quot;);\n\n        // Load the signature node.\n        signedXml.LoadXml((XmlElement)nodeList[0]);\n\n        // Check the signature and return the result.\n        return signedXml.CheckSignature(cert, true);\n\n    }\n\n\n    public static X509Certificate2 GetCertificateBySubject(string CertificateSubject)\n    {\n        // Check the args.\n        if (null == CertificateSubject)\n            throw new ArgumentNullException(&quot;CertificateSubject&quot;);\n\n\n        // Load the certificate from the certificate store.\n        X509Certificate2 cert = null;\n\n        X509Store store = new X509Store(&quot;My&quot;, StoreLocation.CurrentUser);\n\n        try\n        {\n            // Open the store.\n            store.Open(OpenFlags.ReadOnly | OpenFlags.OpenExistingOnly);\n\n            // Get the certs from the store.\n            X509Certificate2Collection CertCol = store.Certificates;\n\n            // Find the certificate with the specified subject.\n            foreach (X509Certificate2 c in CertCol)\n            {\n                if (c.Subject == CertificateSubject)\n                {\n                    cert = c;\n                    break;\n                }\n            }\n\n            // Throw an exception of the certificate was not found.\n            if (cert == null)\n            {\n                throw new CryptographicException(&quot;The certificate could not be found.&quot;);\n            }\n        }\n        finally\n        {\n            // Close the store even if an exception was thrown.\n            store.Close();\n        }\n\n        return cert;\n    }\n\n    // Create example data to sign.\n    public static void CreateSomeXml(string FileName)\n    {\n        // Check the args.\n        if (null == FileName)\n            throw new ArgumentNullException(&quot;FileName&quot;);\n\n        // Create a new XmlDocument object.\n        XmlDocument document = new XmlDocument();\n\n        // Create a new XmlNode object.\n        XmlNode node = document.CreateNode(XmlNodeType.Element, &quot;&quot;, &quot;MyElement&quot;, &quot;samples&quot;);\n\n        // Add some text to the node.\n        node.InnerText = &quot;Example text to be signed.&quot;;\n\n        // Append the node to the document.\n        document.AppendChild(node);\n\n        // Save the XML document to the file name specified.\n        using (XmlTextWriter xmltw = new XmlTextWriter(FileName, new UTF8Encoding(false)))\n        {\n            document.WriteTo(xmltw);\n\n            xmltw.Close();\n        }\n    }\n}\n// This code example displays the following to the console:\n//\n// New XML file created.\n// XML file signed.\n// The XML signature is valid.\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_Certificates\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_Certificates_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Certificates</div>        \r\n          </div>\r\n    \r\n            <p>Gets a list of the X.509v3 certificates contained in the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ArrayList Certificates { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a></div>\r\n                  </div>\r\n                  <p>A list of the X.509 certificates contained in the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_CRL\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_CRL_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CRL</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the Certificate Revocation List (CRL) contained within the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public byte[] CRL { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>The Certificate Revocation List (CRL) contained within the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_IssuerSerials\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_IssuerSerials_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IssuerSerials</div>        \r\n          </div>\r\n    \r\n            <p>Gets a list of <a class=\"xref\" href=\"system.security.cryptography.xml.x509issuerserial\" data-linktype=\"relative-path\">X509IssuerSerial</a> structures that represent an issuer name and serial number pair.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ArrayList IssuerSerials { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a></div>\r\n                  </div>\r\n                  <p>A list of <a class=\"xref\" href=\"system.security.cryptography.xml.x509issuerserial\" data-linktype=\"relative-path\">X509IssuerSerial</a> structures that represent an issuer name and serial number pair.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IssuerSerials property represents the <code>&lt;X509IssuerSerial</code>&gt; element of an XML digital signature using a list of <a class=\"xref\" href=\"system.security.cryptography.xml.x509issuerserial\" data-linktype=\"relative-path\">X509IssuerSerial</a> structures contained within.  The <code>&lt;X509IssuerSerial</code>&gt; element represents an issuer name and serial number pair, which identify a specific X.509v3 certificate.  </p>\n<p> The issuer of an X.509 certificate is the name of the certification authority that issued the certificate. Certification authorities assign each certificate they issue a unique serial number.  </p>\n<p> You can add a name and serial number pair using the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data#System_Security_Cryptography_Xml_KeyInfoX509Data_AddIssuerSerial_\" data-linktype=\"relative-path\">AddIssuerSerial</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_SubjectKeyIds\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_SubjectKeyIds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SubjectKeyIds</div>        \r\n          </div>\r\n    \r\n            <p>Gets a list of the subject key identifiers (SKIs) contained in the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ArrayList SubjectKeyIds { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a></div>\r\n                  </div>\r\n                  <p>A list of the subject key identifiers (SKIs) contained in the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Subject key identifiers (SKIs) are a way to identify certificates that contain a certain public key. An SKI can be used to identify one or more certificates issued to a particular subject key pair.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_SubjectNames\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_SubjectNames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SubjectNames</div>        \r\n          </div>\r\n    \r\n            <p>Gets a list of the subject names of the entities contained in the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ArrayList SubjectNames { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.arraylist\" data-linktype=\"relative-path\">ArrayList</a></div>\r\n                  </div>\r\n                  <p>A list of the subject names of the entities contained in the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Every X.509v3 certificate includes a subject name. This name can be used to identify one or more certificates.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_AddCertificate_System_Security_Cryptography_X509Certificates_X509Certificate_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_AddCertificate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddCertificate(X509Certificate)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified X.509v3 certificate to the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddCertificate (System.Security.Cryptography.X509Certificates.X509Certificate certificate);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>certificate</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509certificate\" data-linktype=\"relative-path\">X509Certificate</a> object to add to the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>certificate</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_AddIssuerSerial_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_AddIssuerSerial_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddIssuerSerial(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified issuer name and serial number pair to the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddIssuerSerial (string issuerName, string serialNumber);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>issuerName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The issuer name portion of the pair to add to the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>serialNumber</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The serial number portion of the pair to add to the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For identification, each X.509v3 certificate carries the name of the certification authority that issued the certificate paired with a unique serial number assigned by the certification authority.  </p>\n<p> The AddIssuerSerial method adds information about an issuer name and serial number pair to a list of <a class=\"xref\" href=\"system.security.cryptography.xml.x509issuerserial\" data-linktype=\"relative-path\">X509IssuerSerial</a> objects that are accessible through the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data#System_Security_Cryptography_Xml_KeyInfoX509Data_IssuerSerials_\" data-linktype=\"relative-path\">IssuerSerials</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_AddSubjectKeyId_System_Byte___\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_AddSubjectKeyId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddSubjectKeyId(Byte[])</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified subject key identifier (SKI) byte array to the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddSubjectKeyId (byte[] subjectKeyId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>subjectKeyId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A byte array that represents the subject key identifier (SKI) to add to the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Subject key identifiers (SKIs) are a way of identifying certificates that contain a certain public key.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_AddSubjectKeyId_System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_AddSubjectKeyId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddSubjectKeyId(String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified subject key identifier (SKI) string to the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddSubjectKeyId (string subjectKeyId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>subjectKeyId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that represents the subject key identifier (SKI) to add to the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Subject key identifiers (SKIs) are a shorthand way to identify certificates that contain a certain public key.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_AddSubjectName_System_String_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_AddSubjectName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddSubjectName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the subject name of the entity that was issued an X.509v3 certificate to the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddSubjectName (string subjectName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>subjectName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the entity that was issued an X.509 certificate to add to the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_GetXml\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_GetXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetXml()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an XML representation of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlElement GetXml ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></div>\r\n                  </div>\r\n                  <p>An XML representation of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object returned by this method is suitable for use as a subelement of an XMLDSIG or XML encryption <code>&lt;KeyInfo&gt;</code> element.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_LoadXml_System_Xml_XmlElement_\">\r\n    \r\n            <a id=\"System_Security_Cryptography_Xml_KeyInfoX509Data_LoadXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadXml(XmlElement)</div>        \r\n          </div>\r\n    \r\n            <p>Parses the input <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object and configures the internal state of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object to match.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void LoadXml (System.Xml.XmlElement element);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>element</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> object that specifies the state of the <a class=\"xref\" href=\"system.security.cryptography.xml.keyinfox509data\" data-linktype=\"relative-path\">KeyInfoX509Data</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>element</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.cryptographicexception\" data-linktype=\"relative-path\">CryptographicException</a></div>\r\n                  </div>\r\n                  <p>The <code>element</code> parameter does not contain an &lt;<code>X509IssuerName</code>&gt; node.  </p>\n<p> -or-  </p>\n<p> The <code>element</code> parameter does not contain an &lt;<code>X509SerialNumber</code>&gt; node.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is typically used to process an <code>&lt;X509Data&gt;</code> subelement of a <code>&lt;KeyInfo&gt;</code> element.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.Xml.KeyInfoX509Data.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.Xml.KeyInfoX509Data.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoX509Data\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoX509Data..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoX509Data.AddCertificate\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoX509Data.AddIssuerSerial\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoX509Data.AddSubjectKeyId\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoX509Data.AddSubjectName\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoX509Data.Certificates\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoX509Data.CRL\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoX509Data.GetXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoX509Data.IssuerSerials\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoX509Data.LoadXml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoX509Data.SubjectKeyIds\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.Xml.KeyInfoX509Data.SubjectNames\">\r\n<meta name=\"APILocation\" content=\"System.Security.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"6adb674a-b9f9-1a46-e1b0-6413c2a353f3\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an &amp;lt;X509Data&amp;gt; subelement of an XMLDSIG or XML Encryption &amp;lt;KeyInfo&amp;gt; element.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography.Xml/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.Xml.KeyInfoX509Data\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.Xml.KeyInfoX509Data.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.Xml.KeyInfoX509Data.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.Xml.KeyInfoX509Data","System.Security.Cryptography.Xml.KeyInfoX509Data..ctor","System.Security.Cryptography.Xml.KeyInfoX509Data.AddCertificate","System.Security.Cryptography.Xml.KeyInfoX509Data.AddIssuerSerial","System.Security.Cryptography.Xml.KeyInfoX509Data.AddSubjectKeyId","System.Security.Cryptography.Xml.KeyInfoX509Data.AddSubjectName","System.Security.Cryptography.Xml.KeyInfoX509Data.Certificates","System.Security.Cryptography.Xml.KeyInfoX509Data.CRL","System.Security.Cryptography.Xml.KeyInfoX509Data.GetXml","System.Security.Cryptography.Xml.KeyInfoX509Data.IssuerSerials","System.Security.Cryptography.Xml.KeyInfoX509Data.LoadXml","System.Security.Cryptography.Xml.KeyInfoX509Data.SubjectKeyIds","System.Security.Cryptography.Xml.KeyInfoX509Data.SubjectNames"],"api_location":["System.Security.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.Xml.KeyInfoX509Data","System::Security::Cryptography::Xml::KeyInfoX509Data","System.Security.Cryptography.Xml.KeyInfoX509Data.#ctor","System::Security::Cryptography::Xml::KeyInfoX509Data::#ctor","System.Security.Cryptography.Xml.KeyInfoX509Data.AddCertificate","System::Security::Cryptography::Xml::KeyInfoX509Data::AddCertificate","System.Security.Cryptography.Xml.KeyInfoX509Data.AddIssuerSerial","System::Security::Cryptography::Xml::KeyInfoX509Data::AddIssuerSerial","System.Security.Cryptography.Xml.KeyInfoX509Data.AddSubjectKeyId","System::Security::Cryptography::Xml::KeyInfoX509Data::AddSubjectKeyId","System.Security.Cryptography.Xml.KeyInfoX509Data.AddSubjectName","System::Security::Cryptography::Xml::KeyInfoX509Data::AddSubjectName","System.Security.Cryptography.Xml.KeyInfoX509Data.Certificates","System::Security::Cryptography::Xml::KeyInfoX509Data::Certificates","System.Security.Cryptography.Xml.KeyInfoX509Data.CRL","System::Security::Cryptography::Xml::KeyInfoX509Data::CRL","System.Security.Cryptography.Xml.KeyInfoX509Data.GetXml","System::Security::Cryptography::Xml::KeyInfoX509Data::GetXml","System.Security.Cryptography.Xml.KeyInfoX509Data.IssuerSerials","System::Security::Cryptography::Xml::KeyInfoX509Data::IssuerSerials","System.Security.Cryptography.Xml.KeyInfoX509Data.LoadXml","System::Security::Cryptography::Xml::KeyInfoX509Data::LoadXml","System.Security.Cryptography.Xml.KeyInfoX509Data.SubjectKeyIds","System::Security::Cryptography::Xml::KeyInfoX509Data::SubjectKeyIds","System.Security.Cryptography.Xml.KeyInfoX509Data.SubjectNames","System::Security::Cryptography::Xml::KeyInfoX509Data::SubjectNames"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"6adb674a-b9f9-1a46-e1b0-6413c2a353f3","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography.Xml/KeyInfoX509Data.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"KeyInfoX509Data class | Microsoft Docs","_op_ogTitle":"KeyInfoX509Data class","description":"Represents an &lt;X509Data&gt; subelement of an XMLDSIG or XML Encryption &lt;KeyInfo&gt; element.\n","toc_asset_id":"_splitted/System.Security.Cryptography.Xml/toc.json","toc_rel":"_splitted/System.Security.Cryptography.Xml/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.Xml.KeyInfoX509Data","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.xml.keyinfox509data","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.xml.keyinfox509data","fileRelativePath":"System.Security.Cryptography.Xml.KeyInfoX509Data.html"},"themesRelativePathToOutputRoot":"_themes/"}