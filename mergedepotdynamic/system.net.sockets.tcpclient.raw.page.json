{"content":"    \r\n    <h1 id=\"System_Net_Sockets_TcpClient\">\r\n      <span class=\"lang-csharp\">TcpClient</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides client connections for TCP network services.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class TcpClient : IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">TcpClient</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The TcpClient class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.  </p>\n<p> In order for TcpClient to connect and exchange data, a <a class=\"xref\" href=\"system.net.sockets.tcplistener\" data-linktype=\"relative-path\">TcpListener</a> or <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> created with the TCP <a class=\"xref\" href=\"system.net.sockets.protocoltype\" data-linktype=\"relative-path\">ProtocolType</a> must be listening for incoming connection requests. You can connect to this listener in one of the following two ways:  </p>\n<ul>\n<li><p>Create a TcpClient and call one of the three available <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Connect_\" data-linktype=\"relative-path\">Connect</a> methods.  </p>\n</li>\n<li><p>Create a TcpClient using the host name and port number of the remote host. This constructor will automatically attempt a connection.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> If you want to send connectionless datagrams in synchronous blocking mode, use the <a class=\"xref\" href=\"system.net.sockets.udpclient\" data-linktype=\"relative-path\">UdpClient</a> class.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient__ctor\" data-linktype=\"self-bookmark\">TcpClient()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient__ctor_System_Net_IPEndPoint_\" data-linktype=\"self-bookmark\">TcpClient(IPEndPoint)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> class and binds it to the specified local endpoint.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient__ctor_System_Net_Sockets_AddressFamily_\" data-linktype=\"self-bookmark\">TcpClient(AddressFamily)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> class with the specified family.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient__ctor_System_String_System_Int32_\" data-linktype=\"self-bookmark\">TcpClient(String,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> class and connects to the specified port on the specified host.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_Active\" data-linktype=\"self-bookmark\">Active</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or set a value that indicates whether a connection has been made.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_Available\" data-linktype=\"self-bookmark\">Available</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the amount of data that has been received from the network and is available to be read.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_Client\" data-linktype=\"self-bookmark\">Client</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_Connected\" data-linktype=\"self-bookmark\">Connected</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> for a <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> is connected to a remote host.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_ExclusiveAddressUse\" data-linktype=\"self-bookmark\">ExclusiveAddressUse</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> allows only one client to use a port.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_LingerState\" data-linktype=\"self-bookmark\">LingerState</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets information about the linger state of the associated socket.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_NoDelay\" data-linktype=\"self-bookmark\">NoDelay</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that disables a delay when send or receive buffers are not full.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_ReceiveBufferSize\" data-linktype=\"self-bookmark\">ReceiveBufferSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the size of the receive buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_ReceiveTimeout\" data-linktype=\"self-bookmark\">ReceiveTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount of time a <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> will wait to receive data once a read operation is initiated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_SendBufferSize\" data-linktype=\"self-bookmark\">SendBufferSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the size of the send buffer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_SendTimeout\" data-linktype=\"self-bookmark\">SendTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount of time a <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> will wait for a send operation to complete successfully.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_BeginConnect_System_Net_IPAddress_System_Int32_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginConnect(IPAddress,Int32,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous request for a remote host connection. The remote host is specified by an <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> and a port number (<a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_BeginConnect_System_Net_IPAddress___System_Int32_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginConnect(IPAddress[],Int32,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous request for a remote host connection. The remote host is specified by an <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> array and a port number (<a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_BeginConnect_System_String_System_Int32_System_AsyncCallback_System_Object_\" data-linktype=\"self-bookmark\">BeginConnect(String,Int32,AsyncCallback,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Begins an asynchronous request for a remote host connection. The remote host is specified by a host name (<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>) and a port number (<a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_Close\" data-linktype=\"self-bookmark\">Close()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Disposes this <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> instance and requests that the underlying TCP connection be closed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_Connect_System_Net_IPEndPoint_\" data-linktype=\"self-bookmark\">Connect(IPEndPoint)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Connects the client to a remote TCP host using the specified remote network endpoint.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_Connect_System_Net_IPAddress_System_Int32_\" data-linktype=\"self-bookmark\">Connect(IPAddress,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Connects the client to a remote TCP host using the specified IP address and port number.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_Connect_System_Net_IPAddress___System_Int32_\" data-linktype=\"self-bookmark\">Connect(IPAddress[],Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Connects the client to a remote TCP host using the specified IP addresses and port number.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_Connect_System_String_System_Int32_\" data-linktype=\"self-bookmark\">Connect(String,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Connects the client to the specified port on the specified host.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_ConnectAsync_System_Net_IPAddress_System_Int32_\" data-linktype=\"self-bookmark\">ConnectAsync(IPAddress,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_ConnectAsync_System_Net_IPAddress___System_Int32_\" data-linktype=\"self-bookmark\">ConnectAsync(IPAddress[],Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_ConnectAsync_System_String_System_Int32_\" data-linktype=\"self-bookmark\">ConnectAsync(String,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Connects the client to the specified TCP port on the specified host as an asynchronous operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the managed and unmanaged resources used by the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_EndConnect_System_IAsyncResult_\" data-linktype=\"self-bookmark\">EndConnect(IAsyncResult)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ends a pending asynchronous connection attempt.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_Finalize\" data-linktype=\"self-bookmark\">Finalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Frees resources used by the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_Sockets_TcpClient_GetStream\" data-linktype=\"self-bookmark\">GetStream()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> used to send and receive data.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient__ctor\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TcpClient()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TcpClient ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates a new <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> and allows the underlying service provider to assign the most appropriate local IP address and port number. You must first call the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Connect_\" data-linktype=\"relative-path\">Connect</a> method before sending and receiving data.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This constructor works only with IPv4 address types.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the default constructor to create a new <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#4\">         //Creates a TCPClient using the default constructor.\n         TcpClient^ tcpClientC = gcnew TcpClient;\n         \n</code></pre><pre><code class=\"lang-cs\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#4\">            //Creates a TCPClient using the default constructor.\n            TcpClient tcpClientC = new TcpClient ();\n</code></pre><pre><code class=\"lang-vb\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#4\">                    &#39;Creates a TCPClient using the default constructor.\n                    Dim tcpClientC As New TcpClient\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient__ctor_System_Net_IPEndPoint_\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TcpClient(IPEndPoint)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> class and binds it to the specified local endpoint.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TcpClient (System.Net.IPEndPoint localEP);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>localEP</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> to which you bind the TCP <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The  <code>localEP</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates a new <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> and binds it to the <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> specified by the <code>localEP</code> parameter. Before you call this constructor, you must create an <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> using the IP address and port number from which you intend to send and receive data. You do not need to specify a local IP address and port number before connecting and communicating. If you create a <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.  </p>\n<p> You must call the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Connect_\" data-linktype=\"relative-path\">Connect</a> method before sending and receiving data.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to create an instance of the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> class using a local endpoint.  </p>\n<pre><code class=\"lang-cpp\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#2\">         //Creates a TCPClient using a local end point.\n         IPAddress^ ipAddress = Dns::Resolve( Dns::GetHostName() )-&gt;AddressList[ 0 ];\n         IPEndPoint^ ipLocalEndPoint = gcnew IPEndPoint( ipAddress,11000 );\n         TcpClient^ tcpClientA = gcnew TcpClient( ipLocalEndPoint );\n         \n</code></pre><pre><code class=\"lang-cs\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#2\">            //Creates a TCPClient using a local end point.\n            IPAddress ipAddress = Dns.GetHostEntry (Dns.GetHostName ()).AddressList[0];\n            IPEndPoint ipLocalEndPoint = new IPEndPoint(ipAddress, 0);\n            TcpClient tcpClientA = new TcpClient (ipLocalEndPoint);\n</code></pre><pre><code class=\"lang-vb\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#2\">         &#39;Creates a TCPClient using a local endpoint.\n         Dim ipAddress As IPAddress = Dns.GetHostEntry(Dns.GetHostName()).AddressList(0)\n            Dim ipLocalEndPoint As New IPEndPoint(ipAddress, 0)\n\n            Dim tcpClientA As New TcpClient(ipLocalEndPoint)\n         \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient__ctor_System_Net_Sockets_AddressFamily_\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TcpClient(AddressFamily)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> class with the specified family.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TcpClient (System.Net.Sockets.AddressFamily family);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>family</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.addressfamily\" data-linktype=\"relative-path\">AddressFamily</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">stem.Net.IPAddress.AddressFamily*</span> of the IP protocol.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>family</code> parameter is not equal to AddressFamily.InterNetwork  </p>\n<p> -or-  </p>\n<p> The <code>family</code> parameter is not equal to AddressFamily.InterNetworkV6</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to create an instance of the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#15\">         TcpClient^ tcpClientD = gcnew TcpClient( AddressFamily::InterNetwork );\n         \n</code></pre><pre><code class=\"lang-cs\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#15\">            TcpClient tcpClientD = new TcpClient (AddressFamily.InterNetwork);\n</code></pre><pre><code class=\"lang-vb\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#15\">                    Dim tcpClientD As New TcpClient(AddressFamily.InterNetwork)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient__ctor_System_String_System_Int32_\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TcpClient(String,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> class and connects to the specified port on the specified host.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public TcpClient (string hostname, int port);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hostname</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The DNS name of the remote host to which you intend to connect.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>port</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port number of the remote host to which you intend to connect.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>hostname</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>port</code> parameter is not between <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MinPort\" data-linktype=\"relative-path\">MinPort</a> and <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MaxPort\" data-linktype=\"relative-path\">MaxPort</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates a new <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> and makes a synchronous connection attempt to the provided host name and port number. The underlying service provider will assign the most appropriate local IP address and port number. <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> will block until it either connects or fails. This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.  </p>\n<p> If IPv6 is enabled and the TcpClient method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address. This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you receive a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>, use <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> to obtain the specific error code. After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to create an instance of the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> class using a host name and port number.  </p>\n<pre><code class=\"lang-cpp\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#3\">         // Creates a TCPClient using hostname and port.\n         TcpClient^ tcpClientB = gcnew TcpClient( &quot;www.contoso.com&quot;,11000 );\n         \n</code></pre><pre><code class=\"lang-cs\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#3\">            //Creates a TCPClient using host name and port.\n            TcpClient tcpClientB = new TcpClient (&quot;www.contoso.com&quot;, 11000);\n</code></pre><pre><code class=\"lang-vb\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#3\">                &#39;Creates a TCPClient using hostname and port.\n\n                Dim tcpClientB As New TcpClient(&quot;www.contoso.com&quot;, 11000)\n                \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_Active\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_Active_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Active</div>        \r\n          </div>\r\n    \r\n            <p>Gets or set a value that indicates whether a connection has been made.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool Active { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the connection has been made; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Classes deriving from <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> can use this property to determine if a connection attempt has succeeded. It does not monitor the ongoing connection state of <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a>. If the remote host closes the connection, Active will not be updated. If you are deriving from <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> and require closer attention to the connection state, use the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_Connected_\" data-linktype=\"relative-path\">Connected</a> property of the <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> returned by the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Client_\" data-linktype=\"relative-path\">Client</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_Available\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_Available_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Available</div>        \r\n          </div>\r\n    \r\n            <p>Gets the amount of data that has been received from the network and is available to be read.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Available { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of bytes of data received from the network and available to be read.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when attempting to access the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> has been closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Available is a way to determine whether data is queued for reading. If data is available, call <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> to get the data. The available data is the total amount of data queued in the network buffer for reading. If no data is queued in the network buffer, Available returns 0.  </p>\n<p> If the remote host shuts down or closes the connection, Available may throw a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>. If you receive a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>, use <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> to obtain the specific error code. After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <a href=\"http://msdn.microsoft.com/library\" data-linktype=\"external\">http://msdn.microsoft.com/library</a> for a detailed description of the error.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the use of the Available property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Net.Sockets.TcpClient1#1\">        static void GetAvailable()\n        {\n            // Find out how many bytes are ready to be read.\n            Console.WriteLine(&quot;Availabe value is {0}&quot;, t.Available);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Net.Sockets.TcpClient1#1\">   static void GetAvailable( TcpClient^ t )\n   {\n      // Find out how many bytes are ready to be read.\n      Console::WriteLine( &quot;Available value is {0}&quot;, t-&gt;Available.ToString() );\n      ;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_Client\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_Client_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Client</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Sockets.Socket Client { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a></div>\r\n                  </div>\r\n                  <p>The underlying network <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> creates a <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> to send and receive data over a network. Classes deriving from <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> can use this property to get or set this <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>. Use the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> returned from Client if you require access beyond that which <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> provides. You can also use Client to set the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> to an existing <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>. This might be useful if you want to take advantage of the simplicity of <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> using a pre-existing <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the Client property. In this example, the receive buffer size of the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> is changed.  </p>\n<pre><code class=\"lang-cs\" name=\"TcpClientProtectedMethodsAndPropertiesExample#1\">        TcpClient client = new TcpClient();\n        Socket s = client.Client;\n\n        if (!s.Connected)\n        {\n            s.SetSocketOption(SocketOptionLevel.Socket, \n                         SocketOptionName.ReceiveBuffer, 16384);\n            Console.WriteLine(\n                &quot;client is not connected, ReceiveBuffer set<br>&quot;);\n        }\n        else\n           Console.WriteLine(&quot;client is connected&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"TcpClientProtectedMethodsAndPropertiesExample#1\">      Dim client As New TcpClient()\n      Dim s As Socket = client.Client\n      \n      If Not s.Connected Then\n         s.SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.ReceiveBuffer, 16384)\n         Console.WriteLine(&quot;client is not connected, ReceiveBuffer set&quot; + ControlChars.Lf)\n      Else\n         Console.WriteLine(&quot;client is connected&quot;)\n      End If \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_Connected\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_Connected_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Connected</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> for a <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> is connected to a remote host.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Connected { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <span class=\"xref\">stem.Net.Sockets.TcpClient.Client*</span> socket was connected to a remote resource as of the most recent operation; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Connected property gets the connection state of the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Client_\" data-linktype=\"relative-path\">Client</a> socket as of the last I/O operation. When it returns <code>false</code>, the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Client_\" data-linktype=\"relative-path\">Client</a> socket was either never connected, or is no longer connected.  </p>\n<p> Because the Connected property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state. After the message send fails, this property no longer returns <code>true</code>. Note that this behavior is by design. You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost. Your code should assume the socket is connected, and gracefully handle failed transmissions.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example connects to a remote endpoint and then verifies the connection.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Net.Sockets.TcpClient1#2\">        static void GetConnected()\n        {\n            // Find out whether the socket is connected to the remote \n            // host.\n            Console.WriteLine(&quot;Connected value is {0}&quot;, t.Connected);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Net.Sockets.TcpClient1#2\">   static void GetConnected( TcpClient^ t )\n   {\n      // Find out whether the socket is connected to the remote \n      // host.\n      Console::WriteLine( &quot;Connected value is {0}&quot;, t-&gt;Connected.ToString() );\n      ;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_ExclusiveAddressUse\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_ExclusiveAddressUse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ExclusiveAddressUse</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that specifies whether the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> allows only one client to use a port.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ExclusiveAddressUse { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> allows only one client to use a specific port; otherwise, <code>false</code>. The default is <code>true</code> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <code>false</code> for all other versions.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when attempting to access the underlying socket.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> has been closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port. You can use the ExclusiveAddressUse property to prevent multiple clients from using a specific port.  </p>\n<p> This property must be set before the underlying socket is bound to a client port. If you call <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Connect_\" data-linktype=\"relative-path\">Connect</a>, <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_BeginConnect_\" data-linktype=\"relative-path\">BeginConnect</a>, <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient__ctor_System_Net_IPEndPoint_\" data-linktype=\"relative-path\">TcpClient(IPEndPoint)</a>, or <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient__ctor_System_String_System_Int32_\" data-linktype=\"relative-path\">TcpClient(String,Int32)</a>, the client port is bound as a side effect of the method, and you cannot subsequently set the ExclusiveAddressUse property</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> and gets and sets the value of the ExclusiveAddressUse property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Net.Sockets.TcpClient1#3\">        static void GetSetExclusiveAddressUse()\n        {\n            // Don&#39;t allow another process to bind to this port.\n            t.ExclusiveAddressUse = true;\n            Console.WriteLine(&quot;ExclusiveAddressUse value is {0}&quot;,\n                t.ExclusiveAddressUse);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Net.Sockets.TcpClient1#3\">   static void GetSetExclusiveAddressUse( TcpClient^ t )\n   {\n      // Don&#39;t allow another process to bind to this port.\n      t-&gt;ExclusiveAddressUse = true;\n      Console::WriteLine( &quot;ExclusiveAddressUse value is {0}&quot;, t-&gt;ExclusiveAddressUse.ToString() );\n      ;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_LingerState\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_LingerState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LingerState</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets information about the linger state of the associated socket.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Sockets.LingerOption LingerState { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.lingeroption\" data-linktype=\"relative-path\">LingerOption</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.net.sockets.lingeroption\" data-linktype=\"relative-path\">LingerOption</a>. By default, lingering is disabled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The LingerState property changes the way <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_Close_\" data-linktype=\"relative-path\">Close</a> method behaves. This property when set modifies the conditions under which the connection can be reset by Winsock. Connection resets can still occur based on the IP protocol behavior.  </p>\n<p> This property controls the length of time that the TCP connection will remain open after a call to <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Close_\" data-linktype=\"relative-path\">Close</a> when data remains to be sent. When you call the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Write_\" data-linktype=\"relative-path\">Write</a> method, data is placed in the outgoing network buffer. This property can be used to ensure that this data is sent to the remote host before the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Close_\" data-linktype=\"relative-path\">Close</a> method drops the connection.  </p>\n<p> To enable lingering, create a <a class=\"xref\" href=\"system.net.sockets.lingeroption\" data-linktype=\"relative-path\">LingerOption</a> instance containing the desired values, and set the LingerState property to this instance.  </p>\n<p> The following table describes the behavior of the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Close_\" data-linktype=\"relative-path\">Close</a> method for the possible values of the <a class=\"xref\" href=\"system.net.sockets.lingeroption#System_Net_Sockets_LingerOption_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property and the <a class=\"xref\" href=\"system.net.sockets.lingeroption#System_Net_Sockets_LingerOption_LingerTime_\" data-linktype=\"relative-path\">LingerTime</a> property stored in the LingerState property.  </p>\n<table>\n<thead>\n<tr>\n<th>LingerState.Enabled</th>\n<th>LingerState.LingerTime</th>\n<th>Behavior</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>false</code> (disabled), the default value</td>\n<td>The time-out is not applicable, (default).</td>\n<td>Attempts to send pending data until the default IP protocol time-out expires.</td>\n</tr>\n<tr>\n<td><code>true</code> (enabled)</td>\n<td>A nonzero time-out</td>\n<td>Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</td>\n</tr>\n<tr>\n<td><code>true</code> (enabled)</td>\n<td>A zero timeout.</td>\n<td>Discards any pending data and Winsock resets the connection.</td>\n</tr>\n</tbody>\n</table>\n<p> The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection. In most cases, the time-out computed by the stack is more relevant than one defined by an application. This is the default behavior for a socket when the LingerState property is not set.  </p>\n<p> When the <a class=\"xref\" href=\"system.net.sockets.lingeroption#System_Net_Sockets_LingerOption_LingerTime_\" data-linktype=\"relative-path\">LingerTime</a> property stored in the LingerState property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets and gets the sockets linger time.  </p>\n<pre><code class=\"lang-cpp\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#12\">      // sets the amount of time to linger after closing, using the LingerOption public property.\n      LingerOption^ lingerOption = gcnew LingerOption( true,10 );\n      tcpClient-&gt;LingerState = lingerOption;\n      \n      // gets the amount of linger time set, using the LingerOption public property.\n      if ( tcpClient-&gt;LingerState-&gt;LingerTime == 10 )\n            Console::WriteLine( &quot;The linger state setting was successfully set to {0}&quot;, tcpClient-&gt;LingerState-&gt;LingerTime );\n\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#12\">        // sets the amount of time to linger after closing, using the LingerOption public property.\n        LingerOption lingerOption = new LingerOption (true, 10);\n\n        tcpClient.LingerState = lingerOption;\n\n        // gets the amount of linger time set, using the LingerOption public property.\n        if (tcpClient.LingerState.LingerTime == 10)\n            Console.WriteLine (&quot;The linger state setting was successfully set to &quot; + tcpClient.LingerState.LingerTime.ToString ());\n</code></pre><pre><code class=\"lang-vb\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#12\">      &#39; Sets the amount of time to linger after closing, using the LingerOption public property.\n      Dim lingerOption As New LingerOption(True, 10)\n      tcpClient.LingerState = lingerOption\n      \n      &#39; Gets the amount of linger time set, using the LingerOption public property.\n      If tcpClient.LingerState.LingerTime = 10 Then\n         Console.WriteLine((&quot;The linger state setting was successfully set to &quot; + tcpClient.LingerState.LingerTime.ToString()))\n      End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_NoDelay\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_NoDelay_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NoDelay</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that disables a delay when send or receive buffers are not full.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool NoDelay { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the delay is disabled, otherwise <code>false</code>. The default value is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When NoDelay is <code>false</code>, a <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> does not send a packet over the network until it has collected a significant amount of outgoing data. Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient. However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send. Your decision should weigh the relative importance of network efficiency versus application requirements.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example disables the delay. It then checks the value of NoDelay to verify that the property was successfully set.  </p>\n<pre><code class=\"lang-cpp\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#13\">      // Sends data immediately upon calling NetworkStream.Write.\n      tcpClient-&gt;NoDelay = true;\n      \n      // Determines if the delay is enabled by using the NoDelay property.\n      if ( tcpClient-&gt;NoDelay == true )\n            Console::WriteLine( &quot;The delay was set successfully to {0}&quot;, tcpClient-&gt;NoDelay );\n\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#13\">        // Sends data immediately upon calling NetworkStream.Write.\n        tcpClient.NoDelay = true;\n\n        // Determines if the delay is enabled by using the NoDelay property.\n        if (tcpClient.NoDelay == true)\n            Console.WriteLine (&quot;The delay was set successfully to &quot; + tcpClient.NoDelay.ToString ());\n</code></pre><pre><code class=\"lang-vb\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#13\">      &#39; Sends data immediately upon calling NetworkStream.Write.\n      tcpClient.NoDelay = True\n      \n      &#39; Determines if the delay is enabled by using the NoDelay property.\n      If tcpClient.NoDelay = True Then\n         Console.WriteLine((&quot;The delay was set successfully to &quot; + tcpClient.NoDelay.ToString()))\n      End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_ReceiveBufferSize\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_ReceiveBufferSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReceiveBufferSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the size of the receive buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ReceiveBufferSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The size of the receive buffer, in bytes. The default value is 8192 bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when setting the buffer size.  </p>\n<p> -or-  </p>\n<p> In .NET Compact Framework applications, you cannot set this property. For a workaround, see the Platform Note in Remarks.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ReceiveBufferSize property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation. This property actually manipulates the network buffer space allocated for receiving incoming data.  </p>\n<p> Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> method. Use the ReceiveBufferSize property to set this size. If your application will be receiving bulk data, you should pass the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> method a very large application buffer.  </p>\n<p> If the network buffer is smaller than the amount of data you request in the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> method, you will not be able to retrieve the desired amount of data in one read operation. This incurs the overhead of additional calls to the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets and gets the receive buffer size.  </p>\n<pre><code class=\"lang-cpp\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#8\">      // sets the receive buffer size using the ReceiveBufferSize public property.\n      tcpClient-&gt;ReceiveBufferSize = 1024;\n      \n      // gets the receive buffer size using the ReceiveBufferSize public property.\n      if ( tcpClient-&gt;ReceiveBufferSize == 1024 )\n            Console::WriteLine( &quot;The receive buffer was successfully set to {0}&quot;, tcpClient-&gt;ReceiveBufferSize );\n\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#8\">        // Sets the receive buffer size using the ReceiveBufferSize public property.\n        tcpClient.ReceiveBufferSize = 1024;\n\n        // Gets the receive buffer size using the ReceiveBufferSize public property.\n        if (tcpClient.ReceiveBufferSize == 1024)\n            Console.WriteLine (&quot;The receive buffer was successfully set to &quot; + tcpClient.ReceiveBufferSize.ToString ());\n</code></pre><pre><code class=\"lang-vb\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#8\">      &#39; Sets the receive buffer size using the ReceiveBufferSize public property.\n      tcpClient.ReceiveBufferSize = 1024\n      \n      &#39; Gets the receive buffer size using the ReceiveBufferSize public property.\n      If tcpClient.ReceiveBufferSize = 1024 Then\n         Console.WriteLine((&quot;The receive buffer was successfully set to &quot; + tcpClient.ReceiveBufferSize.ToString()))\n      End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_ReceiveTimeout\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_ReceiveTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReceiveTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount of time a <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> will wait to receive data once a read operation is initiated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ReceiveTimeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The time-out value of the connection in milliseconds. The default value is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ReceiveTimeout property determines the amount of time that the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> method will block until it is able to receive data. This time is measured in milliseconds. If the time-out expires before <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> successfully completes, <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> throws a <a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a>. There is no time-out by default.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets and gets the receive time out.  </p>\n<pre><code class=\"lang-cpp\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#10\">      // Sets the receive time out using the ReceiveTimeout public property.\n      tcpClient-&gt;ReceiveTimeout = 5;\n      \n      // Gets the receive time out using the ReceiveTimeout public property.\n      if ( tcpClient-&gt;ReceiveTimeout == 5 )\n            Console::WriteLine( &quot;The receive time out limit was successfully set {0}&quot;, tcpClient-&gt;ReceiveTimeout );\n\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#10\">        // Sets the receive time out using the ReceiveTimeout public property.\n        tcpClient.ReceiveTimeout = 5000;\n\n        // Gets the receive time out using the ReceiveTimeout public property.\n        if (tcpClient.ReceiveTimeout == 5000)\n            Console.WriteLine (&quot;The receive time out limit was successfully set &quot; + tcpClient.ReceiveTimeout.ToString ());\n</code></pre><pre><code class=\"lang-vb\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#10\">      &#39; Sets the receive time out using the ReceiveTimeout public property.\n      tcpClient.ReceiveTimeout = 5\n      \n      &#39; Gets the receive time out using the ReceiveTimeout public property.\n      If tcpClient.ReceiveTimeout = 5 Then\n         Console.WriteLine((&quot;The receive time out limit was successfully set &quot; + tcpClient.ReceiveTimeout.ToString()))\n      End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_SendBufferSize\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_SendBufferSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendBufferSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the size of the send buffer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int SendBufferSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The size of the send buffer, in bytes. The default value is 8192 bytes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SendBufferSize property gets or sets the number of bytes that you are expecting to send in each call to the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Write_\" data-linktype=\"relative-path\">Write</a> method. This property actually manipulates the network buffer space allocated for send operation.  </p>\n<p> Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation. Use the SendBufferSize property to set this size. If your application will be sending bulk data, you should pass the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Write_\" data-linktype=\"relative-path\">Write</a> method a very large application buffer.  </p>\n<p> If the network buffer is smaller than the amount of data you provide the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Write_\" data-linktype=\"relative-path\">Write</a> method, several network send operations will be performed for every call you make to the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Write_\" data-linktype=\"relative-path\">Write</a> method. You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets and gets the send buffer size.  </p>\n<pre><code class=\"lang-cpp\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#9\">      //sets the send buffer size using the SendBufferSize public property.\n      tcpClient-&gt;SendBufferSize = 1024;\n      \n      // gets the send buffer size using the SendBufferSize public property.\n      if ( tcpClient-&gt;SendBufferSize == 1024 )\n            Console::WriteLine( &quot;The send buffer was successfully set to {0}&quot;, tcpClient-&gt;SendBufferSize );\n\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#9\">        // Sets the send buffer size using the SendBufferSize public property.\n        tcpClient.SendBufferSize = 1024;\n\n        // Gets the send buffer size using the SendBufferSize public property.\n        if (tcpClient.SendBufferSize == 1024)\n            Console.WriteLine (&quot;The send buffer was successfully set to &quot; + tcpClient.SendBufferSize.ToString ());\n</code></pre><pre><code class=\"lang-vb\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#9\">      &#39;Sets the send buffer size using the SendBufferSize public property.\n      tcpClient.SendBufferSize = 1024\n      \n      &#39; Gets the send buffer size using the SendBufferSize public property.\n      If tcpClient.SendBufferSize = 1024 Then\n         Console.WriteLine((&quot;The send buffer was successfully set to &quot; + tcpClient.SendBufferSize.ToString()))\n      End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_SendTimeout\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_SendTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SendTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount of time a <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> will wait for a send operation to complete successfully.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int SendTimeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The send time-out value, in milliseconds. The default is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SendTimeout property determines the amount of time that the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_Send_\" data-linktype=\"relative-path\">Send</a> method will block until it is able to return successfully. This time is measured in milliseconds.  </p>\n<p> After you call the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Write_\" data-linktype=\"relative-path\">Write</a> method, the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> returns the number of bytes actually sent to the host. The SendTimeout property determines the amount of time a <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> will wait before receiving the number of bytes returned. If the time-out expires before the <a class=\"xref\" href=\"system.net.sockets.socket#System_Net_Sockets_Socket_Send_\" data-linktype=\"relative-path\">Send</a> method successfully completes, <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> will throw a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>. There is no time-out by default.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example sets and gets the SendTimeout value.  </p>\n<pre><code class=\"lang-cpp\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#11\">      // sets the send time out using the SendTimeout public property.\n      tcpClient-&gt;SendTimeout = 5;\n      \n      // gets the send time out using the SendTimeout public property.\n      if ( tcpClient-&gt;SendTimeout == 5 )\n            Console::WriteLine( &quot;The send time out limit was successfully set {0}&quot;, tcpClient-&gt;SendTimeout );\n\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#11\">        // sets the send time out using the SendTimeout public property.\n        tcpClient.SendTimeout = 5;\n\n        // gets the send time out using the SendTimeout public property.\n        if (tcpClient.SendTimeout == 5)\n            Console.WriteLine (&quot;The send time out limit was successfully set &quot; + tcpClient.SendTimeout.ToString ());\n</code></pre><pre><code class=\"lang-vb\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#11\">      &#39; Sets the send time out using the SendTimeout public property.\n      tcpClient.SendTimeout = 5000\n      \n      &#39; Gets the send time out using the SendTimeout public property.\n      If tcpClient.SendTimeout = 5000 Then\n         Console.WriteLine((&quot;The send time out limit was successfully set &quot; + tcpClient.SendTimeout.ToString()))\n      End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_BeginConnect_System_Net_IPAddress_System_Int32_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_BeginConnect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginConnect(IPAddress,Int32,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous request for a remote host connection. The remote host is specified by an <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> and a port number (<a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> of the remote host.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>port</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port number of the remote host.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate that references the method to invoke when the operation is complete.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that contains information about the connect operation. This object is passed to the <code>requestCallback</code> delegate when the operation is complete.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object that references the asynchronous connection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when attempting to access the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> has been closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>A caller higher in the call stack does not have permission for the requested operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The port number is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The asynchronous BeginConnect operation must be completed by calling the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_EndConnect_\" data-linktype=\"relative-path\">EndConnect</a> method. Typically, the method is invoked by the <code>asyncCallback</code> delegate.  </p>\n<p> This method does not block until the operation completes. To block until the operation completes, use one of the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Connect_\" data-linktype=\"relative-path\">Connect</a> method overloads.  </p>\n<p> For detailed information about using the asynchronous programming model, see <a href=\"../Topic/Calling%20Synchronous%20Methods%20Asynchronously.md\" data-linktype=\"relative-path\">Calling Synchronous Methods Asynchronously</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> and connects to a remote host.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Net.Sockets.TcpClient1#4\">        public static void DoBeginConnect1(string host, int port)\n        {\n            // Connect asynchronously to the specifed host.\n            TcpClient t = new TcpClient(AddressFamily.InterNetwork);\n//            IPAddress remoteHost = new IPAddress(host);\n            IPAddress[] remoteHost = Dns.GetHostAddresses(host);\n\n            connectDone.Reset();\n\n            Console.WriteLine(&quot;Establishing Connection to {0}&quot;, \n                remoteHost[0]);\n            t.BeginConnect(remoteHost[0], port, \n                new AsyncCallback(ConnectCallback), t);\n\n            // Wait here until the callback processes the connection.\n            connectDone.WaitOne();\n\n            Console.WriteLine(&quot;Connection established&quot;);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Net.Sockets.TcpClient1#4\">   static void DoBeginConnect1( String^ host, int port )\n   {\n      // Connect asynchronously to the specifed host.\n      TcpClient^ t = gcnew TcpClient( AddressFamily::InterNetwork );\n//      IPAddress^ remoteHost = gcnew IPAddress( host );\n      array&lt;IPAddress^&gt;^ remoteHost = Dns::GetHostAddresses( host );\n      connectDone-&gt;Reset();\n      Console::WriteLine( &quot;Establishing Connection to {0}&quot;, host );\n      t-&gt;BeginConnect( remoteHost, port, gcnew AsyncCallback( &amp;ConnectCallback ), t );\n\n      // Wait here until the callback processes the connection.\n      connectDone-&gt;WaitOne();\n      Console::WriteLine( &quot;Connection established&quot; );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_BeginConnect_System_Net_IPAddress___System_Int32_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_BeginConnect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginConnect(IPAddress[],Int32,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous request for a remote host connection. The remote host is specified by an <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> array and a port number (<a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>addresses</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>At least one <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> that designates the remote hosts.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>port</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port number of the remote hosts.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate that references the method to invoke when the operation is complete.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that contains information about the connect operation. This object is passed to the <code>requestCallback</code> delegate when the operation is complete.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object that references the asynchronous connection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>addresses</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when attempting to access the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> has been closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>A caller higher in the call stack does not have permission for the requested operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The port number is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The asynchronous <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_BeginConnect_\" data-linktype=\"relative-path\">BeginConnect</a> operation must be completed by calling the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_EndConnect_\" data-linktype=\"relative-path\">EndConnect</a> method. Typically, the method is invoked by the <code>asyncCallback</code> delegate.  </p>\n<p> This method does not block until the operation completes. To block until the operation completes, use one of the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Connect_\" data-linktype=\"relative-path\">Connect</a> method overloads.  </p>\n<p> For detailed information about using the asynchronous programming model, see <a href=\"../Topic/Calling%20Synchronous%20Methods%20Asynchronously.md\" data-linktype=\"relative-path\">Calling Synchronous Methods Asynchronously</a>.  </p>\n<p> This method is typically used immediately after a call to the <a class=\"xref\" href=\"system.net.dns#System_Net_Dns_BeginGetHostAddresses_\" data-linktype=\"relative-path\">BeginGetHostAddresses</a> method, which can return multiple IP addresses for a single host.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> and connects to a remote host.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Net.Sockets.TcpClient1#5\">        // Connect asynchronously to the specifed host.\n        public static void DoBeginConnect2(string host, int port)\n        {\n            TcpClient t = new TcpClient(AddressFamily.InterNetwork);\n            IPAddress[] remoteHost = Dns.GetHostAddresses(host);\n\n            connectDone.Reset();\n\n            Console.WriteLine(&quot;Establishing Connection to {0}&quot;, host);\n            t.BeginConnect(remoteHost, port, \n                new AsyncCallback(ConnectCallback), t);\n\n            // Wait here until the callback processes the connection.\n            connectDone.WaitOne();\n\n            Console.WriteLine(&quot;Connection established&quot;);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Net.Sockets.TcpClient1#5\">   // Connect asynchronously to the specifed host.\n   static void DoBeginConnect2( String^ host, int port )\n   {\n      TcpClient^ t = gcnew TcpClient( AddressFamily::InterNetwork );\n      array&lt;IPAddress^&gt;^remoteHost = Dns::GetHostAddresses( host );\n      connectDone-&gt;Reset();\n      Console::WriteLine( &quot;Establishing Connection to {0}&quot;, host );\n      t-&gt;BeginConnect( remoteHost, port, gcnew AsyncCallback(  &amp;ConnectCallback ), t );\n\n      // Wait here until the callback processes the connection.\n      connectDone-&gt;WaitOne();\n      Console::WriteLine( &quot;Connection established&quot; );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_BeginConnect_System_String_System_Int32_System_AsyncCallback_System_Object_\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_BeginConnect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginConnect(String,Int32,AsyncCallback,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Begins an asynchronous request for a remote host connection. The remote host is specified by a host name (<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>) and a port number (<a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a>).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>host</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the remote host.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>port</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port number of the remote host.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>requestCallback</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.asynccallback\" data-linktype=\"relative-path\">AsyncCallback</a> delegate that references the method to invoke when the operation is complete.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>state</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A user-defined object that contains information about the connect operation. This object is passed to the <code>requestCallback</code> delegate when the operation is complete.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object that references the asynchronous connection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>host</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when attempting to access the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> has been closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>A caller higher in the call stack does not have permission for the requested operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The port number is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The asynchronous BeginConnect operation must be completed by calling the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_EndConnect_\" data-linktype=\"relative-path\">EndConnect</a> method. Typically, the method is invoked by the <code>asyncCallback</code> delegate.  </p>\n<p> This method does not block until the operation completes. To block until the operation completes, use one of the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Connect_\" data-linktype=\"relative-path\">Connect</a> method overloads.  </p>\n<p> For detailed information about using the asynchronous programming model, see <a href=\"../Topic/Calling%20Synchronous%20Methods%20Asynchronously.md\" data-linktype=\"relative-path\">Calling Synchronous Methods Asynchronously</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> and connects to a remote host.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Net.Sockets.TcpClient1#6\">        // Connect asynchronously to the specifed host.\n        public static void DoBeginConnect3(string host, int port)\n        {\n            TcpClient t = new TcpClient(AddressFamily.InterNetwork);\n\n            connectDone.Reset();\n\n            Console.WriteLine(&quot;Establishing Connection to {0}&quot;, \n                host);\n            t.BeginConnect(host, port, \n                new AsyncCallback(ConnectCallback), t);\n\n            // Wait here until the callback processes the connection.\n            connectDone.WaitOne();\n\n            Console.WriteLine(&quot;Connection established&quot;);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Net.Sockets.TcpClient1#6\">   // Connect asynchronously to the specifed host.\n   static void DoBeginConnect3( String^ host, int port )\n   {\n      TcpClient^ t = gcnew TcpClient( AddressFamily::InterNetwork );\n      connectDone-&gt;Reset();\n      Console::WriteLine( &quot;Establishing Connection to {0}&quot;, host );\n      t-&gt;BeginConnect( host, port, gcnew AsyncCallback(  &amp;ConnectCallback ), t );\n      \n      // Wait here until the callback processes the connection.\n      connectDone-&gt;WaitOne();\n      Console::WriteLine( &quot;Connection established&quot; );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_Close\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_Close_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Close()</div>        \r\n          </div>\r\n    \r\n            <p>Disposes this <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> instance and requests that the underlying TCP connection be closed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Close ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Close method marks the instance as disposed and requests that the associated <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> close the TCP connection. Based on the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_LingerState_\" data-linktype=\"relative-path\">LingerState</a> property, the TCP connection may stay open for some time after the Close method is called when data remains to be sent. There is no notification provided when the underlying connection has completed closing.  </p>\n<p> Calling this method will eventually result in the close of the associated <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> and will also close the associated <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> that is used to send and receive data if one was created.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates closing a <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> by calling the Close method.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLTCPClientSync#1\">using System;\nusing System.Text;\nusing System.Net;\nusing System.Net.Sockets;\n\nnamespace Examples.System.Net\n{\n    public class TCPClientExample\n    {\n        public static void Main()\n        {\n\t\t\t// Create a client that will connect to a \n            // server listening on the contosoServer computer\n            // at port 11000.\n            TcpClient tcpClient = new TcpClient();\n            tcpClient.Connect(&quot;contosoServer&quot;, 11000);\n            // Get the stream used to read the message sent by the server.\n            NetworkStream networkStream = tcpClient.GetStream();\n            // Set a 10 millisecond timeout for reading.\n            networkStream.ReadTimeout = 10;\n            // Read the server message into a byte buffer.\n            byte[] bytes = new byte[1024];\n            networkStream.Read(bytes, 0, 1024);\n            //Convert the server&#39;s message into a string and display it.\n            string data = Encoding.UTF8.GetString(bytes);\n            Console.WriteLine(&quot;Server sent message: {0}&quot;, data);\n            networkStream.Close();\n            tcpClient.Close();\n\t\t}\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLTCPClientSync#1\">#using &lt;System.dll&gt;\n\nusing namespace System;\nusing namespace System::Text;\nusing namespace System::Net;\nusing namespace System::Net::Sockets;\nint main()\n{\n   \n   // Create a client that will connect to a \n   // server listening on the contoso1 computer\n   // at port 11000.\n   TcpClient^ tcpClient = gcnew TcpClient;\n   tcpClient-&gt;Connect( &quot;contosoServer&quot;, 11000 );\n   \n   // Get the stream used to read the message sent by the server.\n   NetworkStream^ networkStream = tcpClient-&gt;GetStream();\n   \n   // Set a 10 millisecond timeout for reading.\n   networkStream-&gt;ReadTimeout = 10;\n   \n   // Read the server message into a byte buffer.\n   array&lt;Byte&gt;^bytes = gcnew array&lt;Byte&gt;(1024);\n   networkStream-&gt;Read( bytes, 0, 1024 );\n   \n   //Convert the server&#39;s message into a string and display it.\n   String^ data = Encoding::UTF8-&gt;GetString( bytes );\n   Console::WriteLine( &quot;Server sent message: {0}&quot;, data );\n   networkStream-&gt;Close();\n   tcpClient-&gt;Close();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_Connect_System_Net_IPEndPoint_\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_Connect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Connect(IPEndPoint)</div>        \r\n          </div>\r\n    \r\n            <p>Connects the client to a remote TCP host using the specified remote network endpoint.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Connect (System.Net.IPEndPoint remoteEP);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>remoteEP</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> to which you intend to connect.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>remoteEp</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> is closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call this method to establish a synchronous remote host connection to the specified <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a>. Before you call <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Connect_\" data-linktype=\"relative-path\">Connect</a> you must create an instance of the <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> class using an IP address and a port number. Use this <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> as the <code>remoteEP</code> parameter. The <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Connect_\" data-linktype=\"relative-path\">Connect</a> method will block until it either connects or fails. After connecting with the remote host, use the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_GetStream_\" data-linktype=\"relative-path\">GetStream</a> method to obtain the underlying <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>. Use this <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> to send and receive data.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you receive a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>, use <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> to obtain the specific error code. After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a></p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses an <a class=\"xref\" href=\"system.net.ipendpoint\" data-linktype=\"relative-path\">IPEndPoint</a> to connect with a remote host.  </p>\n<pre><code class=\"lang-cpp\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#7\">         //Uses a remote end point to establish a socket connection.\n         TcpClient^ tcpClient = gcnew TcpClient;\n         IPAddress^ ipAddress = Dns::Resolve( &quot;www.contoso.com&quot; )-&gt;AddressList[ 0 ];\n         IPEndPoint^ ipEndPoint = gcnew IPEndPoint( ipAddress,11004 );\n         tcpClient-&gt;Connect( ipEndPoint );\n         \n</code></pre><pre><code class=\"lang-cs\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#7\">            //Uses a remote endpoint to establish a socket connection.\n            TcpClient tcpClient = new TcpClient ();\n            IPAddress ipAddress = Dns.GetHostEntry (&quot;www.contoso.com&quot;).AddressList[0];\n            IPEndPoint ipEndPoint = new IPEndPoint (ipAddress, 11004);\n\n            tcpClient.Connect (ipEndPoint);\n</code></pre><pre><code class=\"lang-vb\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#7\">                    &#39;Uses a remote endpoint to establish a socket connection.\n                    Dim tcpClient As New TcpClient\n                    Dim ipAddress As IPAddress = Dns.GetHostEntry(&quot;www.contoso.com&quot;).AddressList(0)\n                    Dim ipEndPoint As New IPEndPoint(ipAddress, 11004)\n\n                    tcpClient.Connect(ipEndPoint)\n                    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_Connect_System_Net_IPAddress_System_Int32_\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_Connect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Connect(IPAddress,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Connects the client to a remote TCP host using the specified IP address and port number.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Connect (System.Net.IPAddress address, int port);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> of the host to which you intend to connect.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>port</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port number to which you intend to connect.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>port</code> is not between <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MinPort\" data-linktype=\"relative-path\">MinPort</a> and <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MaxPort\" data-linktype=\"relative-path\">MaxPort</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p><a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> is closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call this method to establish a synchronous remote host connection to the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> and port number. The <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Connect_\" data-linktype=\"relative-path\">Connect</a> method will block until it either connects or fails. After connecting with the remote host, use the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_GetStream_\" data-linktype=\"relative-path\">GetStream</a> method to obtain the underlying <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>. Use this <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> to send and receive data.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you receive a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>, use <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> to obtain the specific error code. After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses an IP Address and port number to connect with a remote host.  </p>\n<pre><code class=\"lang-cpp\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#6\">         //Uses the IP address and port number to establish a socket connection.\n         TcpClient^ tcpClient = gcnew TcpClient;\n         IPAddress^ ipAddress = Dns::Resolve( &quot;www.contoso.com&quot; )-&gt;AddressList[ 0 ];\n         tcpClient-&gt;Connect( ipAddress, 11003 );\n         \n</code></pre><pre><code class=\"lang-cs\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#6\">            //Uses the IP address and port number to establish a socket connection.\n            TcpClient tcpClient = new TcpClient ();\n            IPAddress ipAddress = Dns.GetHostEntry (&quot;www.contoso.com&quot;).AddressList[0];\n\n            tcpClient.Connect (ipAddress, 11003);\n</code></pre><pre><code class=\"lang-vb\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#6\">                &#39;Uses the IP address and port number to establish a socket connection.\n                Dim tcpClient As New TcpClient\n                Dim ipAddress As IPAddress = Dns.GetHostEntry(&quot;www.contoso.com&quot;).AddressList(0)\n                tcpClient.Connect(ipAddress, 11003)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_Connect_System_Net_IPAddress___System_Int32_\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_Connect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Connect(IPAddress[],Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Connects the client to a remote TCP host using the specified IP addresses and port number.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Connect (System.Net.IPAddress[] ipAddresses, int port);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ipAddresses</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> array of the host to which you intend to connect.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>port</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port number to which you intend to connect.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>ipAddresses</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The port number is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when attempting to access the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> has been closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>A caller higher in the call stack does not have permission for the requested operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This method is valid for sockets that use the <a class=\"xref\" href=\"system.net.sockets.addressfamily\" data-linktype=\"relative-path\">AddressFamily</a> flag or the <a class=\"xref\" href=\"system.net.sockets.addressfamily\" data-linktype=\"relative-path\">AddressFamily</a> flag.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is typically used immediately after a call to the <a class=\"xref\" href=\"system.net.dns#System_Net_Dns_BeginGetHostAddresses_\" data-linktype=\"relative-path\">BeginGetHostAddresses</a> method, which can return multiple IP addresses for a single host. Call the Connect method to establish a synchronous remote host connection to the host specified by the array of <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> elements and the port number. The <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Connect_\" data-linktype=\"relative-path\">Connect</a> method will block until it either connects or fails. After connecting with the remote host, use the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_GetStream_\" data-linktype=\"relative-path\">GetStream</a> method to obtain the underlying <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>. Use this <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> to send and receive data.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you receive a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>, use <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> to obtain the specific error code. After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <a href=\"http://msdn.microsoft.com/library\" data-linktype=\"external\">http://msdn.microsoft.com/library</a> for a detailed description of the error.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses an IP Address and port number to connect with a remote host.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Net.Sockets.TcpClient1#8\">        static void DoConnect(string host, int port)\n        {\n            // Connect to the specified host.\n            TcpClient t = new TcpClient(AddressFamily.InterNetwork);\n              \n            IPAddress[] IPAddresses = Dns.GetHostAddresses(host);\n\n            Console.WriteLine(&quot;Establishing connection to {0}&quot;, host);\n            t.Connect(IPAddresses, port);\n\n            Console.WriteLine(&quot;Connection established&quot;);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Net.Sockets.TcpClient1#8\">   static void DoConnect( String^ host, int port )\n   {\n      // Connect to the specified host.\n      TcpClient^ t = gcnew TcpClient( AddressFamily::InterNetwork );\n      array&lt;IPAddress^&gt;^IPAddresses = Dns::GetHostAddresses( host );\n      Console::WriteLine( &quot;Establishing Connection to {0}&quot;, host );\n      t-&gt;Connect( IPAddresses, port );\n      Console::WriteLine( &quot;Connection established&quot; );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_Connect_System_String_System_Int32_\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_Connect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Connect(String,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Connects the client to the specified port on the specified host.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Connect (string hostname, int port);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>hostname</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The DNS name of the remote host to which you intend to connect.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>port</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port number of the remote host to which you intend to connect.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>hostname</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>port</code> parameter is not between <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MinPort\" data-linktype=\"relative-path\">MinPort</a> and <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MaxPort\" data-linktype=\"relative-path\">MaxPort</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p><a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> is closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call this method to establish a synchronous remote host connection to the specified host name and port number. The Connect method will block until it either connects or fails. After connecting with the remote host, use the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_GetStream_\" data-linktype=\"relative-path\">GetStream</a> method to obtain the underlying <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>. Use this <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> to send and receive data.  </p>\n<p> If IPv6 is enabled and the Connect method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address. This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you receive a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>, use <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> to obtain the specific error code. After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the host name and port number to connect with a remote host.  </p>\n<pre><code class=\"lang-cpp\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#5\">         //Uses a host name and port number to establish a socket connection.\n         TcpClient^ tcpClient = gcnew TcpClient;\n         tcpClient-&gt;Connect( &quot;www.contoso.com&quot;, 11002 );\n         \n</code></pre><pre><code class=\"lang-cs\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#5\">            //Uses a host name and port number to establish a socket connection.\n            TcpClient tcpClient = new TcpClient ();\n            tcpClient.Connect (&quot;www.contoso.com&quot;, 11002);\n</code></pre><pre><code class=\"lang-vb\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#5\">         &#39;Uses a host name and port number to establish a socket connection.\n         Dim tcpClient As New TcpClient()\n\n            tcpClient.Connect(&quot;www.contoso.com&quot;, 11002)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_ConnectAsync_System_Net_IPAddress_System_Int32_\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_ConnectAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectAsync(IPAddress,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress address, int port);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>address</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> of the host to which you intend to connect.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>port</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port number to which you intend to connect.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>address</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>port</code> is not between <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MinPort\" data-linktype=\"relative-path\">MinPort</a> and <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MaxPort\" data-linktype=\"relative-path\">MaxPort</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p><a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> is closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned Returns <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> object will complete after the TCP connection has been established. This method does not block the calling thread while the connection request is underway.  </p>\n<p> Call this method to establish a synchronous remote host connection to the specified <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> and port number as an asynchronous operation. After connecting with the remote host, use the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_GetStream_\" data-linktype=\"relative-path\">GetStream</a> method to obtain the underlying <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>. Use this <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> to send and receive data.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you receive a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>, use <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> to obtain the specific error code. After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_ConnectAsync_System_Net_IPAddress___System_Int32_\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_ConnectAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectAsync(IPAddress[],Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress[] addresses, int port);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>addresses</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> array of the host to which you intend to connect.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>port</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port number to which you intend to connect.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>ipAddresses</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The port number is not valid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when attempting to access the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> has been closed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>A caller higher in the call stack does not have permission for the requested operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>This method is valid for sockets that use the <a class=\"xref\" href=\"system.net.sockets.addressfamily\" data-linktype=\"relative-path\">AddressFamily</a> flag or the <a class=\"xref\" href=\"system.net.sockets.addressfamily\" data-linktype=\"relative-path\">AddressFamily</a> flag.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned Returns <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> object will complete after the TCP connection has been established. This method does not block the calling thread while the connection request is underway.  </p>\n<p> This method is typically used immediately after a call to the <a class=\"xref\" href=\"system.net.dns#System_Net_Dns_BeginGetHostAddresses_\" data-linktype=\"relative-path\">BeginGetHostAddresses</a> method, which can return multiple IP addresses for a single host. Call this method to establish a synchronous remote host connection to the host specified by the array of <a class=\"xref\" href=\"system.net.ipaddress\" data-linktype=\"relative-path\">IPAddress</a> elements and the port number as an asynchronous operation. After connecting with the remote host, use the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_GetStream_\" data-linktype=\"relative-path\">GetStream</a> method to obtain the underlying <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>. Use this <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> to send and receive data.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you receive a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>, use <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> to obtain the specific error code. After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <a href=\"http://msdn.microsoft.com/library\" data-linktype=\"external\">http://msdn.microsoft.com/library</a> for a detailed description of the error.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_ConnectAsync_System_String_System_Int32_\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_ConnectAsync_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectAsync(String,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Connects the client to the specified TCP port on the specified host as an asynchronous operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Threading.Tasks.Task ConnectAsync (string host, int port);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>host</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The DNS name of the remote host to which you intend to connect.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>port</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The port number of the remote host to which you intend to connect.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a>  </p>\n<p> The task object representing the asynchronous operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>hostname</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The <code>port</code> parameter is not between <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MinPort\" data-linktype=\"relative-path\">MinPort</a> and <a class=\"xref\" href=\"system.net.ipendpoint#System_Net_IPEndPoint_MaxPort\" data-linktype=\"relative-path\">MaxPort</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when accessing the socket. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p><a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> is closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This operation will not block. The returned Returns <a class=\"xref\" href=\"system.threading.tasks.task\" data-linktype=\"relative-path\">Task</a> object will complete after the TCP connection has been established. This method does not block the calling thread while the connection request is underway.  </p>\n<p> Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation. After connecting with the remote host, use the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_GetStream_\" data-linktype=\"relative-path\">GetStream</a> method to obtain the underlying <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>. Use this <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> to send and receive data.  </p>\n<p> If IPv6 is enabled and the ConnectAsync method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address. This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you receive a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>, use <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> to obtain the specific error code. After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_Dispose\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases the managed and unmanaged resources used by the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Set to <code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the public <code>Dispose()</code> method and the <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method. <code>Dispose()</code> invokes this method with the <code>disposing</code> parameter set to <code>true</code>. <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> invokes this method with <code>disposing</code> set to <code>false</code>.  </p>\n<p> When the <code>disposing</code> parameter is <code>true</code>, this method releases all resources held by any managed objects that this <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> references. It does this by invoking the <code>Dispose()</code> method of each referenced object.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_EndConnect_System_IAsyncResult_\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_EndConnect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndConnect(IAsyncResult)</div>        \r\n          </div>\r\n    \r\n            <p>Ends a pending asynchronous connection attempt.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EndConnect (IAsyncResult asyncResult);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>asyncResult</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.iasyncresult\" data-linktype=\"relative-path\">IAsyncResult</a> object returned by a call to <span class=\"xref\">stem.Net.Sockets.TcpClient.BeginConnect*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>asyncResult</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>asyncResult</code> parameter was not returned by a call to a <span class=\"xref\">stem.Net.Sockets.TcpClient.BeginConnect*</span> method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The EndConnect method was previously called for the asynchronous connection.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a></div>\r\n                  </div>\r\n                  <p>An error occurred when attempting to access the <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a>. See the Remarks section for more information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> has been closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method blocks until the operation is complete. To perform this operation synchronously, use a <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Connect_\" data-linktype=\"relative-path\">Connect</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you receive a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>, use <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> to obtain the specific error code. After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <a href=\"http://msdn.microsoft.com/library\" data-linktype=\"external\">http://msdn.microsoft.com/library</a> for a detailed description of the error.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example ends the asynchronous connection attempt.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Net.Sockets.TcpClient1#7\">        public static ManualResetEvent connectDone = \n            new ManualResetEvent(false);\n\n        public static void ConnectCallback(IAsyncResult ar)\n        {\n            connectDone.Set();\n            TcpClient t = (TcpClient)ar.AsyncState;\n            t.EndConnect(ar);\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Net.Sockets.TcpClient1#7\">   static ManualResetEvent^ connectDone = gcnew ManualResetEvent( false );\n   static void ConnectCallback( IAsyncResult^ ar )\n   {\n      connectDone-&gt;Set();\n      TcpClient^ t = safe_cast&lt;TcpClient^&gt;(ar-&gt;AsyncState);\n      t-&gt;EndConnect( ar );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_Finalize\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_Finalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Finalize()</div>        \r\n          </div>\r\n    \r\n            <p>Frees resources used by the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">~TcpClient ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method overrides <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a>. Application code should not call this method; an object&#39;s <a class=\"xref\" href=\"system.object#System_Object_Finalize_\" data-linktype=\"relative-path\">Finalize</a> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <a class=\"xref\" href=\"system.gc#System_GC_SuppressFinalize_\" data-linktype=\"relative-path\">SuppressFinalize</a> method.  </p>\n<p> The <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> class finalizer closes the TCP connection and releases all managed resources associated with the <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a>. These resources include the underlying <a class=\"xref\" href=\"system.net.sockets.socket\" data-linktype=\"relative-path\">Socket</a> used for connecting with the remote host, and the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> used to send and receive data. The finalizer does not release any unmanaged resources.  </p>\n<p> For more information, see <a href=\"http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70\" data-linktype=\"external\">Finalize Methods and Destructors</a>, <a href=\"../Topic/Cleaning%20Up%20Unmanaged%20Resources.md\" data-linktype=\"relative-path\">Cleaning Up Unmanaged Resources</a>, and <a href=\"http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3\" data-linktype=\"external\">Overriding the Finalize Method</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_Sockets_TcpClient_GetStream\">\r\n    \r\n            <a id=\"System_Net_Sockets_TcpClient_GetStream_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetStream()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> used to send and receive data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.Sockets.NetworkStream GetStream ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a></div>\r\n                  </div>\r\n                  <p>The underlying <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> is not connected to a remote host.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> has been closed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>GetStream returns a <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> that you can use to send and receive data. The <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> class inherits from the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> class, which provides a rich collection of methods and properties used to facilitate network communications.  </p>\n<p> You must call the <a class=\"xref\" href=\"system.net.sockets.tcpclient#System_Net_Sockets_TcpClient_Connect_\" data-linktype=\"relative-path\">Connect</a> method first, or the GetStream method will throw an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>. After you have obtained the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>, call the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Write_\" data-linktype=\"relative-path\">Write</a> method to send data to the remote host. Call the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> method to receive data arriving from the remote host. Both of these methods block until the specified operation is performed. You can avoid blocking on a read operation by checking the <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_DataAvailable_\" data-linktype=\"relative-path\">DataAvailable</a> property. A <code>true</code> value means that data has arrived from the remote host and is available for reading. In this case, <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> is guaranteed to complete immediately. If the remote host has shutdown its connection, <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> will immediately return with zero bytes.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You must close the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a> when you are through sending and receiving data. Closing <a class=\"xref\" href=\"system.net.sockets.tcpclient\" data-linktype=\"relative-path\">TcpClient</a> does not release the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> If you receive a <a class=\"xref\" href=\"system.net.sockets.socketexception\" data-linktype=\"relative-path\">SocketException</a>, use <a class=\"xref\" href=\"system.net.sockets.socketexception#System_Net_Sockets_SocketException_ErrorCode_\" data-linktype=\"relative-path\">ErrorCode</a> to obtain the specific error code. After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> This member outputs trace information when you enable network tracing in your application. For more information, see <a href=\"../Topic/Network%20Tracing%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Network Tracing in the .NET Framework</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses GetStream to obtain the underlying <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>. After obtaining the <a class=\"xref\" href=\"system.net.sockets.networkstream\" data-linktype=\"relative-path\">NetworkStream</a>, it sends and receives using its <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Write_\" data-linktype=\"relative-path\">Write</a> and <a class=\"xref\" href=\"system.net.sockets.networkstream#System_Net_Sockets_NetworkStream_Read_\" data-linktype=\"relative-path\">Read</a> methods.  </p>\n<pre><code class=\"lang-cpp\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#14\">      TcpClient^ tcpClient = gcnew TcpClient;\n      \n      // Uses the GetStream public method to return the NetworkStream.\n      NetworkStream^ netStream = tcpClient-&gt;GetStream();\n      if ( netStream-&gt;CanWrite )\n      {\n         array&lt;Byte&gt;^sendBytes = Encoding::UTF8-&gt;GetBytes( &quot;Is anybody there?&quot; );\n         netStream-&gt;Write( sendBytes, 0, sendBytes-&gt;Length );\n      }\n      else\n      {\n         Console::WriteLine( &quot;You cannot write data to this stream.&quot; );\n         tcpClient-&gt;Close();\n         \n         // Closing the tcpClient instance does not close the network stream.\n         netStream-&gt;Close();\n         return;\n      }\n\n      if ( netStream-&gt;CanRead )\n      {\n         \n         // Reads NetworkStream into a byte buffer.\n         array&lt;Byte&gt;^bytes = gcnew array&lt;Byte&gt;(tcpClient-&gt;ReceiveBufferSize);\n         \n         // Read can return anything from 0 to numBytesToRead. \n         // This method blocks until at least one byte is read.\n         netStream-&gt;Read( bytes, 0, (int)tcpClient-&gt;ReceiveBufferSize );\n         \n         // Returns the data received from the host to the console.\n         String^ returndata = Encoding::UTF8-&gt;GetString( bytes );\n         Console::WriteLine( &quot;This is what the host returned to you: {0}&quot;, returndata );\n      }\n      else\n      {\n         Console::WriteLine( &quot;You cannot read data from this stream.&quot; );\n         tcpClient-&gt;Close();\n         \n         // Closing the tcpClient instance does not close the network stream.\n         netStream-&gt;Close();\n         return;\n      }\n\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#14\">        TcpClient tcpClient = new TcpClient ();\n\n        // Uses the GetStream public method to return the NetworkStream.\n        NetworkStream netStream = tcpClient.GetStream ();\n\n        if (netStream.CanWrite)\n        {\n            Byte[] sendBytes = Encoding.UTF8.GetBytes (&quot;Is anybody there?&quot;);\n            netStream.Write (sendBytes, 0, sendBytes.Length);\n        }\n        else\n        {\n            Console.WriteLine (&quot;You cannot write data to this stream.&quot;);\n            tcpClient.Close ();\n\n            // Closing the tcpClient instance does not close the network stream.\n            netStream.Close ();\n            return;\n        }\n\n        if (netStream.CanRead)\n        {\n            // Reads NetworkStream into a byte buffer.\n            byte[] bytes = new byte[tcpClient.ReceiveBufferSize];\n\n            // Read can return anything from 0 to numBytesToRead. \n            // This method blocks until at least one byte is read.\n            netStream.Read (bytes, 0, (int)tcpClient.ReceiveBufferSize);\n\n            // Returns the data received from the host to the console.\n            string returndata = Encoding.UTF8.GetString (bytes);\n\n            Console.WriteLine (&quot;This is what the host returned to you: &quot; + returndata);\n            \n        }\n        else\n        {\n            Console.WriteLine (&quot;You cannot read data from this stream.&quot;);\n            tcpClient.Close ();\n\n            // Closing the tcpClient instance does not close the network stream.\n            netStream.Close ();\n            return;\n        }\n        netStream.Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"ClassicTcpClient.PublicMethodsAndPropertiesExample#14\">      Dim tcpClient As New TcpClient()\n      &#39; Uses the GetStream public method to return the NetworkStream.\n\n         Dim netStream As NetworkStream = tcpClient.GetStream()\n         If netStream.CanWrite Then\n            Dim sendBytes As [Byte]() = Encoding.UTF8.GetBytes(&quot;Is anybody there?&quot;)\n            netStream.Write(sendBytes, 0, sendBytes.Length)\n         Else\n            Console.WriteLine(&quot;You cannot write data to this stream.&quot;)\n            tcpClient.Close()\n            &#39; Closing the tcpClient instance does not close the network stream.\n            netStream.Close()\n            Return\n         End If\n         If netStream.CanRead Then\n            \n            &#39; Reads the NetworkStream into a byte buffer.\n            Dim bytes(tcpClient.ReceiveBufferSize) As Byte\n            &#39; Read can return anything from 0 to numBytesToRead. \n            &#39; This method blocks until at least one byte is read.\n            netStream.Read(bytes, 0, CInt(tcpClient.ReceiveBufferSize))\n            \n            &#39; Returns the data received from the host to the console.\n            Dim returndata As String = Encoding.ASCII.GetString(bytes)\n            Console.WriteLine((&quot;This is what the host returned to you: &quot; + returndata))\n         Else\n            Console.WriteLine(&quot;You cannot read data from this stream.&quot;)\n            tcpClient.Close()\n            &#39; Closing the tcpClient instance does not close the network stream.\n            netStream.Close()\n            Return\n         End If\n \n      &#39; Uses the Close public method to close the network stream and socket.\n      tcpClient.Close()\n   End Sub &#39;MyTcpClientCommunicator\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.Sockets.TcpClient.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Sockets.TcpClient.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient..ctor\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.Active\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.Available\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.BeginConnect\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.Client\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.Close\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.Connect\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.ConnectAsync\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.Connected\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.EndConnect\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.ExclusiveAddressUse\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.GetStream\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.LingerState\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.NoDelay\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.ReceiveBufferSize\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.ReceiveTimeout\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.SendBufferSize\">\r\n<meta name=\"APIName\" content=\"System.Net.Sockets.TcpClient.SendTimeout\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"84604bcb-7f6c-afdc-7a39-8b56adb70c67\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides client connections for TCP network services.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net.Sockets/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.Sockets.TcpClient\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.Sockets.TcpClient.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.Sockets.TcpClient.yml","open_to_public_contributors":true,"api_name":["System.Net.Sockets.TcpClient","System.Net.Sockets.TcpClient..ctor","System.Net.Sockets.TcpClient.Active","System.Net.Sockets.TcpClient.Available","System.Net.Sockets.TcpClient.BeginConnect","System.Net.Sockets.TcpClient.Client","System.Net.Sockets.TcpClient.Close","System.Net.Sockets.TcpClient.Connect","System.Net.Sockets.TcpClient.ConnectAsync","System.Net.Sockets.TcpClient.Connected","System.Net.Sockets.TcpClient.Dispose","System.Net.Sockets.TcpClient.EndConnect","System.Net.Sockets.TcpClient.ExclusiveAddressUse","System.Net.Sockets.TcpClient.Finalize","System.Net.Sockets.TcpClient.GetStream","System.Net.Sockets.TcpClient.LingerState","System.Net.Sockets.TcpClient.NoDelay","System.Net.Sockets.TcpClient.ReceiveBufferSize","System.Net.Sockets.TcpClient.ReceiveTimeout","System.Net.Sockets.TcpClient.SendBufferSize","System.Net.Sockets.TcpClient.SendTimeout"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.Sockets.TcpClient","System::Net::Sockets::TcpClient","System.Net.Sockets.TcpClient.#ctor","System::Net::Sockets::TcpClient::#ctor","System.Net.Sockets.TcpClient.Active","System::Net::Sockets::TcpClient::Active","System.Net.Sockets.TcpClient.Available","System::Net::Sockets::TcpClient::Available","System.Net.Sockets.TcpClient.BeginConnect","System::Net::Sockets::TcpClient::BeginConnect","System.Net.Sockets.TcpClient.Client","System::Net::Sockets::TcpClient::Client","System.Net.Sockets.TcpClient.Close","System::Net::Sockets::TcpClient::Close","System.Net.Sockets.TcpClient.Connect","System::Net::Sockets::TcpClient::Connect","System.Net.Sockets.TcpClient.ConnectAsync","System::Net::Sockets::TcpClient::ConnectAsync","System.Net.Sockets.TcpClient.Connected","System::Net::Sockets::TcpClient::Connected","System.Net.Sockets.TcpClient.Dispose","System::Net::Sockets::TcpClient::Dispose","System.Net.Sockets.TcpClient.EndConnect","System::Net::Sockets::TcpClient::EndConnect","System.Net.Sockets.TcpClient.ExclusiveAddressUse","System::Net::Sockets::TcpClient::ExclusiveAddressUse","System.Net.Sockets.TcpClient.Finalize","System::Net::Sockets::TcpClient::Finalize","System.Net.Sockets.TcpClient.GetStream","System::Net::Sockets::TcpClient::GetStream","System.Net.Sockets.TcpClient.LingerState","System::Net::Sockets::TcpClient::LingerState","System.Net.Sockets.TcpClient.NoDelay","System::Net::Sockets::TcpClient::NoDelay","System.Net.Sockets.TcpClient.ReceiveBufferSize","System::Net::Sockets::TcpClient::ReceiveBufferSize","System.Net.Sockets.TcpClient.ReceiveTimeout","System::Net::Sockets::TcpClient::ReceiveTimeout","System.Net.Sockets.TcpClient.SendBufferSize","System::Net::Sockets::TcpClient::SendBufferSize","System.Net.Sockets.TcpClient.SendTimeout","System::Net::Sockets::TcpClient::SendTimeout"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"84604bcb-7f6c-afdc-7a39-8b56adb70c67","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net.Sockets/TcpClient.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TcpClient class | Microsoft Docs","_op_ogTitle":"TcpClient class","description":"Provides client connections for TCP network services.\n","toc_asset_id":"_splitted/System.Net.Sockets/toc.json","toc_rel":"_splitted/System.Net.Sockets/toc.json","source_url":"","ms.assetid":"System.Net.Sockets.TcpClient","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.sockets.tcpclient","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.sockets.tcpclient","fileRelativePath":"System.Net.Sockets.TcpClient.html"},"themesRelativePathToOutputRoot":"_themes/"}