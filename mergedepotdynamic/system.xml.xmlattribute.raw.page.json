{"content":"    \r\n    <h1 id=\"System_Xml_XmlAttribute\">\r\n      <span class=\"lang-csharp\">XmlAttribute</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents an attribute. Valid and default values for the attribute are defined in a document type definition (DTD) or schema.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class XmlAttribute : System.Xml.XmlNode</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">XmlAttribute</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Attributes\" data-linktype=\"relative-path\">Attributes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_ChildNodes\" data-linktype=\"relative-path\">ChildNodes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Clone\" data-linktype=\"relative-path\">Clone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_CreateNavigator\" data-linktype=\"relative-path\">CreateNavigator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_FirstChild\" data-linktype=\"relative-path\">FirstChild</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_GetEnumerator\" data-linktype=\"relative-path\">GetEnumerator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_GetNamespaceOfPrefix_System_String_\" data-linktype=\"relative-path\">GetNamespaceOfPrefix(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_GetPrefixOfNamespace_System_String_\" data-linktype=\"relative-path\">GetPrefixOfNamespace(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_HasChildNodes\" data-linktype=\"relative-path\">HasChildNodes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_IsReadOnly\" data-linktype=\"relative-path\">IsReadOnly</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Item_System_String_\" data-linktype=\"relative-path\">Item(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Item_System_String_System_String_\" data-linktype=\"relative-path\">Item(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_LastChild\" data-linktype=\"relative-path\">LastChild</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_NextSibling\" data-linktype=\"relative-path\">NextSibling</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Normalize\" data-linktype=\"relative-path\">Normalize()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_OuterXml\" data-linktype=\"relative-path\">OuterXml</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_PreviousSibling\" data-linktype=\"relative-path\">PreviousSibling</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_PreviousText\" data-linktype=\"relative-path\">PreviousText</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_RemoveAll\" data-linktype=\"relative-path\">RemoveAll()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectNodes_System_String_\" data-linktype=\"relative-path\">SelectNodes(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectNodes_System_String_System_Xml_XmlNamespaceManager_\" data-linktype=\"relative-path\">SelectNodes(String,XmlNamespaceManager)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectSingleNode_System_String_\" data-linktype=\"relative-path\">SelectSingleNode(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_SelectSingleNode_System_String_System_Xml_XmlNamespaceManager_\" data-linktype=\"relative-path\">SelectSingleNode(String,XmlNamespaceManager)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_Supports_System_String_System_String_\" data-linktype=\"relative-path\">Supports(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_System_Collections_IEnumerable_GetEnumerator\" data-linktype=\"relative-path\">IEnumerable.GetEnumerator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_System_ICloneable_Clone\" data-linktype=\"relative-path\">ICloneable.Clone()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Attributes can be associated with an element. Use the <a class=\"xref\" href=\"system.xml.xmlattribute#System_Xml_XmlAttribute_OwnerElement_\" data-linktype=\"relative-path\">OwnerElement</a> property to get the <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> to which the attribute belongs.  </p>\n<p> The <code>XmlElement</code> class has several methods which allow you to access attribute nodes (<a class=\"xref\" href=\"system.xml.xmlelement#System_Xml_XmlElement_GetAttribute_\" data-linktype=\"relative-path\">GetAttribute</a>, <a class=\"xref\" href=\"system.xml.xmlelement#System_Xml_XmlElement_SetAttribute_\" data-linktype=\"relative-path\">SetAttribute</a>, <a class=\"xref\" href=\"system.xml.xmlelement#System_Xml_XmlElement_RemoveAttribute_\" data-linktype=\"relative-path\">RemoveAttribute</a>, and so on). Additionally, you can call the <a class=\"xref\" href=\"system.xml.xmlelement#System_Xml_XmlElement_Attributes_\" data-linktype=\"relative-path\">Attributes</a> property, which returns an <a class=\"xref\" href=\"system.xml.xmlattributecollection\" data-linktype=\"relative-path\">XmlAttributeCollection</a> enabling you to access attributes by name or index from the collection.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute__ctor_System_String_System_String_System_String_System_Xml_XmlDocument_\" data-linktype=\"self-bookmark\">XmlAttribute(String,String,String,XmlDocument)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_BaseURI\" data-linktype=\"self-bookmark\">BaseURI</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the base Uniform Resource Identifier (URI) of the node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_InnerText\" data-linktype=\"self-bookmark\">InnerText</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the concatenated values of the node and all its children.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_InnerXml\" data-linktype=\"self-bookmark\">InnerXml</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the value of the attribute.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_LocalName\" data-linktype=\"self-bookmark\">LocalName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the local name of the node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the qualified name of the node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_NamespaceURI\" data-linktype=\"self-bookmark\">NamespaceURI</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the namespace URI of this node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_NodeType\" data-linktype=\"self-bookmark\">NodeType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the type of the current node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_OwnerDocument\" data-linktype=\"self-bookmark\">OwnerDocument</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> to which this node belongs.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_OwnerElement\" data-linktype=\"self-bookmark\">OwnerElement</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> to which the attribute belongs.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_ParentNode\" data-linktype=\"self-bookmark\">ParentNode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the parent of this node. For <code>XmlAttribute</code> nodes, this property always returns <code>null</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_Prefix\" data-linktype=\"self-bookmark\">Prefix</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the namespace prefix of this node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_SchemaInfo\" data-linktype=\"self-bookmark\">SchemaInfo</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the post-schema-validation-infoset that has been assigned to this node as a result of schema validation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_Specified\" data-linktype=\"self-bookmark\">Specified</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the attribute value was explicitly set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_Value\" data-linktype=\"self-bookmark\">Value</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the value of the node.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_AppendChild_System_Xml_XmlNode_\" data-linktype=\"self-bookmark\">AppendChild(XmlNode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified node to the end of the list of child nodes, of this node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_CloneNode_System_Boolean_\" data-linktype=\"self-bookmark\">CloneNode(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a duplicate of this node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_InsertAfter_System_Xml_XmlNode_System_Xml_XmlNode_\" data-linktype=\"self-bookmark\">InsertAfter(XmlNode,XmlNode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts the specified node immediately after the specified reference node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_InsertBefore_System_Xml_XmlNode_System_Xml_XmlNode_\" data-linktype=\"self-bookmark\">InsertBefore(XmlNode,XmlNode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts the specified node immediately before the specified reference node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_PrependChild_System_Xml_XmlNode_\" data-linktype=\"self-bookmark\">PrependChild(XmlNode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified node to the beginning of the list of child nodes for this node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_RemoveChild_System_Xml_XmlNode_\" data-linktype=\"self-bookmark\">RemoveChild(XmlNode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the specified child node.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_ReplaceChild_System_Xml_XmlNode_System_Xml_XmlNode_\" data-linktype=\"self-bookmark\">ReplaceChild(XmlNode,XmlNode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Replaces the child node specified with the new child node specified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_WriteContentTo_System_Xml_XmlWriter_\" data-linktype=\"self-bookmark\">WriteContentTo(XmlWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves all the children of the node to the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Xml_XmlAttribute_WriteTo_System_Xml_XmlWriter_\" data-linktype=\"self-bookmark\">WriteTo(XmlWriter)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves the node to the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute__ctor_System_String_System_String_System_String_System_Xml_XmlDocument_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">XmlAttribute(String,String,String,XmlDocument)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected XmlAttribute (string prefix, string localName, string namespaceURI, System.Xml.XmlDocument doc);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>prefix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace prefix.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>localName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The local name of the attribute.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namespaceURI</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The namespace uniform resource identifier (URI).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>doc</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The parent XML document.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Do not instantiate an <a class=\"xref\" href=\"system.xml.xmlattribute\" data-linktype=\"relative-path\">XmlAttribute</a> directly; instead, use methods such as <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_CreateAttribute_\" data-linktype=\"relative-path\">CreateAttribute</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_BaseURI\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_BaseURI_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BaseURI</div>        \r\n          </div>\r\n    \r\n            <p>Gets the base Uniform Resource Identifier (URI) of the node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string BaseURI { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The location from which the node was loaded or String.Empty if the node has no base URI. Attribute nodes have the same base URI as their owner element. If an attribute node does not have an owner element, <code>BaseURI</code> returns String.Empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A networked XML document is comprised of chunks of data aggregated using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places. The <code>BaseURI</code> tells you where these nodes came from.  </p>\n<p> For additional information on <code>BaseURI</code> and how it behaves with other node types, see <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_BaseURI_\" data-linktype=\"relative-path\">BaseURI</a>.  </p>\n<p> This property is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays information on the attribute node, including its base URI.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttribute.BaseURI Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   \n   //Create the XmlDocument.\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;Load( &quot;http://localhost/baseuri.xml&quot; );\n   \n   //Display information on the attribute node. The value\n   //returned for BaseURI is &#39;http://localhost/baseuri.xml&#39;.\n   XmlAttribute^ attr = doc-&gt;DocumentElement-&gt;Attributes[ 0 ];\n   Console::WriteLine( &quot;Name of the attribute:  {0}&quot;, attr-&gt;Name );\n   Console::WriteLine( &quot;Base URI of the attribute:  {0}&quot;, attr-&gt;BaseURI );\n   Console::WriteLine( &quot;The value of the attribute:  {0}&quot;, attr-&gt;InnerText );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttribute.BaseURI Example#1\">Option Explicit\nOption Strict\n\nImports System\nImports System.IO\nImports System.Xml\n\nPublic Class Sample\n    \n    Public Shared Sub Main()\n        &#39;Create the XmlDocument.\n        Dim doc As New XmlDocument()\n        doc.Load(&quot;http://localhost/baseuri.xml&quot;)\n        \n        &#39;Display information on the attribute node. The value\n        &#39;returned for BaseURI is &#39;http://localhost/baseuri.xml&#39;.\n        Dim attr As XmlAttribute = doc.DocumentElement.Attributes(0)\n        Console.WriteLine(&quot;Name of the attribute:  {0}&quot;, attr.Name)\n        Console.WriteLine(&quot;Base URI of the attribute:  {0}&quot;, attr.BaseURI)\n        Console.WriteLine(&quot;The value of the attribute:  {0}&quot;, attr.InnerText)\n    End Sub &#39;Main \nEnd Class &#39;Sample\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttribute.BaseURI Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main()\n  {\n    //Create the XmlDocument.\n    XmlDocument doc = new XmlDocument();\n    doc.Load(&quot;http://localhost/baseuri.xml&quot;);\n                     \n    //Display information on the attribute node. The value\n    //returned for BaseURI is &#39;http://localhost/baseuri.xml&#39;.\n    XmlAttribute attr = doc.DocumentElement.Attributes[0];\n    Console.WriteLine(&quot;Name of the attribute:  {0}&quot;, attr.Name);\n    Console.WriteLine(&quot;Base URI of the attribute:  {0}&quot;, attr.BaseURI);\n    Console.WriteLine(&quot;The value of the attribute:  {0}&quot;, attr.InnerText);\n\n  }\n}\n</code></pre><p> The sample uses the file, <code>baseuri.xml</code>, as input.  </p>\n<pre><code class=\"lang-xml\" name=\"Classic WebData XmlAttribute.BaseURI Example#2\">\n&lt;!-- XML fragment --&gt;\n&lt;book genre=&quot;novel&quot;&gt;\n  &lt;title&gt;Pride And Prejudice&lt;/title&gt;\n&lt;/book&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_InnerText\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_InnerText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InnerText</div>        \r\n          </div>\r\n    \r\n            <p>Sets the concatenated values of the node and all its children.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string InnerText { set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The concatenated values of the node and all its children. For attribute nodes, this property has the same functionality as the <span class=\"xref\">stem.Xml.XmlAttribute.Value*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Setting this property replaces all the children with the parsed contents of the given string.  </p>\n<p> This property is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_InnerXml\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_InnerXml_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InnerXml</div>        \r\n          </div>\r\n    \r\n            <p>Sets the value of the attribute.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string InnerXml { set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The attribute value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a></div>\r\n                  </div>\r\n                  <p>The XML specified when setting this property is not well-formed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_LocalName\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_LocalName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LocalName</div>        \r\n          </div>\r\n    \r\n            <p>Gets the local name of the node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string LocalName { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the attribute node with the prefix removed. In the following example <book bk:genre='novel'>, the <code>LocalName</code> of the attribute is <code>genre</code>.<p>\n</book>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the node does not have a prefix, <code>LocalName</code> is the same as <a class=\"xref\" href=\"system.xml.xmlattribute#System_Xml_XmlAttribute_Name_\" data-linktype=\"relative-path\">Name</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays information on each of the nodes in the attribute collection.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttribute.NamespaceURI Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n  \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book xmlns:bk=&#39;urn:samples&#39; bk:genre=&#39;novel&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);      \n\n    //Create an attribute collection.\n    XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n\n    Console.WriteLine(&quot;Display information on each of the attributes... \\r<br>&quot;);\n    foreach (XmlAttribute attr in attrColl){\n       Console.Write(&quot;{0}:{1} = {2}&quot;, attr.Prefix, attr.LocalName, attr.Value);\n       Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; namespaceURI=&quot; + attr.NamespaceURI);\n    }\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttribute.NamespaceURI Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book xmlns:bk=&#39;urn:samples&#39; bk:genre=&#39;novel&#39;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create an attribute collection.\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   Console::WriteLine( &quot;Display information on each of the attributes... \\r<br>&quot; );\n   System::Collections::IEnumerator^ myEnum = attrColl-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      XmlAttribute^ attr = safe_cast&lt;XmlAttribute^&gt;(myEnum-&gt;Current);\n      Console::Write( &quot;{0}:{1} = {2}&quot;, attr-&gt;Prefix, attr-&gt;LocalName, attr-&gt;Value );\n      Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp; namespaceURI={0}&quot;, attr-&gt;NamespaceURI );\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttribute.NamespaceURI Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book xmlns:bk=&#39;urn:samples&#39; bk:genre=&#39;novel&#39;&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;) \n\n    &#39;Create an attribute collection.\n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n\n    Console.WriteLine(&quot;Display information on each of the attributes... &quot;)\n    Dim attr as XmlAttribute\n    for each attr in attrColl\n       Console.Write(&quot;{0}:{1} = {2}&quot;, attr.Prefix, attr.LocalName, attr.Value)\n       Console.WriteLine(&quot;   namespaceURI=&quot; + attr.NamespaceURI)\n    next\n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_Name\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets the qualified name of the node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Name { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The qualified name of the attribute node.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays information on each of the nodes in the attribute collection.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttribute.Name Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n  \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book xmlns:bk=&#39;urn:samples&#39; bk:genre=&#39;novel&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);      \n\n    //Create an attribute collection.\n    XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n\n    Console.WriteLine(&quot;Display information on each of the attributes... \\r<br>&quot;);\n    foreach (XmlAttribute attr in attrColl){\n       Console.Write(&quot;{0} = {1}&quot;, attr.Name, attr.Value);\n       Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; namespaceURI=&quot; + attr.NamespaceURI);\n    }\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttribute.Name Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book xmlns:bk=&#39;urn:samples&#39; bk:genre=&#39;novel&#39;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create an attribute collection.\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   Console::WriteLine( &quot;Display information on each of the attributes... \\r<br>&quot; );\n   System::Collections::IEnumerator^ myEnum = attrColl-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      XmlAttribute^ attr = safe_cast&lt;XmlAttribute^&gt;(myEnum-&gt;Current);\n      Console::Write( &quot;{0} = {1}&quot;, attr-&gt;Name, attr-&gt;Value );\n      Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp; namespaceURI={0}&quot;, attr-&gt;NamespaceURI );\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttribute.Name Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book xmlns:bk=&#39;urn:samples&#39; bk:genre=&#39;novel&#39;&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;) \n\n    &#39;Create an attribute collection.\n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n\n    Console.WriteLine(&quot;Display information on each of the attributes... &quot;)\n    Dim attr as XmlAttribute\n    for each attr in attrColl\n       Console.Write(&quot;{0} = {1}&quot;, attr.Name, attr.Value)\n       Console.WriteLine(&quot;   namespaceURI=&quot; + attr.NamespaceURI)\n    next\n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_NamespaceURI\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_NamespaceURI_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NamespaceURI</div>        \r\n          </div>\r\n    \r\n            <p>Gets the namespace URI of this node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string NamespaceURI { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The namespace URI of this node. If the attribute is not explicitly given a namespace, this property returns String.Empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An attribute does not inherit its namespace from the element it is attached to. If an attribute is not explicitly given a namespace, the namespace URI is considered to be String.Empty.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays information on each of the nodes in the attribute collection.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttribute.NamespaceURI Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n  \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book xmlns:bk=&#39;urn:samples&#39; bk:genre=&#39;novel&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);      \n\n    //Create an attribute collection.\n    XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n\n    Console.WriteLine(&quot;Display information on each of the attributes... \\r<br>&quot;);\n    foreach (XmlAttribute attr in attrColl){\n       Console.Write(&quot;{0}:{1} = {2}&quot;, attr.Prefix, attr.LocalName, attr.Value);\n       Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; namespaceURI=&quot; + attr.NamespaceURI);\n    }\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttribute.NamespaceURI Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book xmlns:bk=&#39;urn:samples&#39; bk:genre=&#39;novel&#39;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create an attribute collection.\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   Console::WriteLine( &quot;Display information on each of the attributes... \\r<br>&quot; );\n   System::Collections::IEnumerator^ myEnum = attrColl-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      XmlAttribute^ attr = safe_cast&lt;XmlAttribute^&gt;(myEnum-&gt;Current);\n      Console::Write( &quot;{0}:{1} = {2}&quot;, attr-&gt;Prefix, attr-&gt;LocalName, attr-&gt;Value );\n      Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp; namespaceURI={0}&quot;, attr-&gt;NamespaceURI );\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttribute.NamespaceURI Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book xmlns:bk=&#39;urn:samples&#39; bk:genre=&#39;novel&#39;&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;) \n\n    &#39;Create an attribute collection.\n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n\n    Console.WriteLine(&quot;Display information on each of the attributes... &quot;)\n    Dim attr as XmlAttribute\n    for each attr in attrColl\n       Console.Write(&quot;{0}:{1} = {2}&quot;, attr.Prefix, attr.LocalName, attr.Value)\n       Console.WriteLine(&quot;   namespaceURI=&quot; + attr.NamespaceURI)\n    next\n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_NodeType\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_NodeType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NodeType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the type of the current node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlNodeType NodeType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnodetype\" data-linktype=\"relative-path\">XmlNodeType</a></div>\r\n                  </div>\r\n                  <p>The node type for <code>XmlAttribute</code> nodes is XmlNodeType.Attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_OwnerDocument\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_OwnerDocument_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OwnerDocument</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a> to which this node belongs.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlDocument OwnerDocument { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmldocument\" data-linktype=\"relative-path\">XmlDocument</a></div>\r\n                  </div>\r\n                  <p>An XML document to which this node belongs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an attribute and displays its <code>OwnerDocument</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttribute.OwnerDocument Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n\n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);\n\n    //Create an attribute.\n    XmlAttribute attr;\n    attr = doc.CreateAttribute(&quot;bk&quot;,&quot;genre&quot;,&quot;urn:samples&quot;);\n    attr.Value = &quot;novel&quot;;\n\n    //Display the attribute&#39;s owner document. Note\n    //that although the attribute has not been inserted\n    //into the document, it still has an owner document.\n    Console.WriteLine(attr.OwnerDocument.OuterXml);\n\n   }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttribute.OwnerDocument Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create an attribute.\n   XmlAttribute^ attr;\n   attr = doc-&gt;CreateAttribute( &quot;bk&quot;, &quot;genre&quot;, &quot;urn:samples&quot; );\n   attr-&gt;Value = &quot;novel&quot;;\n   \n   //Display the attribute&#39;s owner document. Note\n   //that although the attribute has not been inserted\n   //into the document, it still has an owner document.\n   Console::WriteLine( attr-&gt;OwnerDocument-&gt;OuterXml );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttribute.OwnerDocument Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;) \n\n    &#39;Create an attribute.\n    Dim attr as XmlAttribute\n    attr = doc.CreateAttribute(&quot;bk&quot;,&quot;genre&quot;,&quot;urn:samples&quot;)\n    attr.Value = &quot;novel&quot;\n\n    &#39;Display the attribute&#39;s owner document. Note\n    &#39;that although the attribute has not been inserted\n    &#39;into the document, it still has an owner document.\n    Console.WriteLine(attr.OwnerDocument.OuterXml)\n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_OwnerElement\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_OwnerElement_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OwnerElement</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> to which the attribute belongs.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Xml.XmlElement OwnerElement { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a></div>\r\n                  </div>\r\n                  <p>The <code>XmlElement</code> that the attribute belongs to or <code>null</code> if this attribute is not part of an <code>XmlElement</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates an attribute and displays the <code>OwnerElement</code> of the attribute.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttribute.OwnerElement Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n\n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);\n\n    //Create an attribute.\n    XmlAttribute attr;\n    attr = doc.CreateAttribute(&quot;bk&quot;,&quot;genre&quot;,&quot;urn:samples&quot;);\n    attr.Value = &quot;novel&quot;;\n\n    //Try to display the attribute&#39;s owner element.\n    if (attr.OwnerElement==null)\n      Console.WriteLine(&quot;The attribute has not been added to an element\\r<br>&quot;);\n    else\n      Console.WriteLine(attr.OwnerElement.OuterXml);\n\n    //Add the attribute to an element.\n    doc.DocumentElement.SetAttributeNode(attr);\n\n    //Display the attribute&#39;s owner element.\n    Console.WriteLine(&quot;Display the owner element...&quot;);\n    Console.WriteLine(attr.OwnerElement.OuterXml);\n\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttribute.OwnerElement Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;) \n\n    &#39;Create an attribute.\n    Dim attr as XmlAttribute\n    attr = doc.CreateAttribute(&quot;bk&quot;,&quot;genre&quot;,&quot;urn:samples&quot;)\n    attr.Value = &quot;novel&quot;\n\n    &#39;Try to display the attribute&#39;s owner element.\n    if attr.OwnerElement is nothing\n      Console.WriteLine(&quot;The attribute has not been added to an element&quot;)\n      Console.WriteLine()\n    else\n      Console.WriteLine(attr.OwnerElement.OuterXml)\n    end if\n\n    &#39;Add the attribute to an element.\n    doc.DocumentElement.SetAttributeNode(attr)\n\n    &#39;Display the attribute&#39;s owner element.\n    Console.WriteLine(&quot;Display the owner element...&quot;)\n    Console.WriteLine(attr.OwnerElement.OuterXml)\n\n  end sub\nend class\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttribute.OwnerElement Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create an attribute.\n   XmlAttribute^ attr;\n   attr = doc-&gt;CreateAttribute( &quot;bk&quot;, &quot;genre&quot;, &quot;urn:samples&quot; );\n   attr-&gt;Value = &quot;novel&quot;;\n   \n   //Try to display the attribute&#39;s owner element.\n   if ( attr-&gt;OwnerElement == nullptr )\n      Console::WriteLine( &quot;The attribute has not been added to an element\\r<br>&quot; );\n   else\n      Console::WriteLine( attr-&gt;OwnerElement-&gt;OuterXml );\n\n   \n   //Add the attribute to an element.\n   doc-&gt;DocumentElement-&gt;SetAttributeNode( attr );\n   \n   //Display the attribute&#39;s owner element.\n   Console::WriteLine( &quot;Display the owner element...&quot; );\n   Console::WriteLine( attr-&gt;OwnerElement-&gt;OuterXml );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_ParentNode\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_ParentNode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ParentNode</div>        \r\n          </div>\r\n    \r\n            <p>Gets the parent of this node. For <code>XmlAttribute</code> nodes, this property always returns <code>null</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlNode ParentNode { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </div>\r\n                  <p>For <code>XmlAttribute</code> nodes, this property always returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the <a class=\"xref\" href=\"system.xml.xmlattribute#System_Xml_XmlAttribute_OwnerElement_\" data-linktype=\"relative-path\">OwnerElement</a> property to get the <a class=\"xref\" href=\"system.xml.xmlelement\" data-linktype=\"relative-path\">XmlElement</a> to which the attribute belongs.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_Prefix\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_Prefix_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Prefix</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the namespace prefix of this node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Prefix { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The namespace prefix of this node. If there is no prefix, this property returns String.Empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>This node is read-only.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlexception\" data-linktype=\"relative-path\">XmlException</a></div>\r\n                  </div>\r\n                  <p>The specified prefix contains an invalid character.  </p>\n<p> The specified prefix is malformed.  </p>\n<p> The namespaceURI of this node is <code>null</code>.  </p>\n<p> The specified prefix is &quot;xml&quot;, and the namespaceURI of this node is different from &quot;<a href=\"http://www.w3.org/XML/1998/namespace\" data-linktype=\"external\">http://www.w3.org/XML/1998/namespace</a>&quot;.  </p>\n<p> This node is an attribute, the specified prefix is &quot;xmlns&quot;, and the namespaceURI of this node is different from &quot;<a href=\"http://www.w3.org/2000/xmlns/\" data-linktype=\"external\">http://www.w3.org/2000/xmlns/</a>&quot;.  </p>\n<p> This node is an attribute, and the qualifiedName of this node is &quot;xmlns&quot; [Namespaces].</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because changing the prefix of an attribute does not change its namespace URI, changing the prefix of an attribute that is known to have a default value does not create a new attribute with the default value and the original prefix.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays information on each of the nodes in the attribute collection.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttribute.NamespaceURI Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n  \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book xmlns:bk=&#39;urn:samples&#39; bk:genre=&#39;novel&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);      \n\n    //Create an attribute collection.\n    XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n\n    Console.WriteLine(&quot;Display information on each of the attributes... \\r<br>&quot;);\n    foreach (XmlAttribute attr in attrColl){\n       Console.Write(&quot;{0}:{1} = {2}&quot;, attr.Prefix, attr.LocalName, attr.Value);\n       Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; namespaceURI=&quot; + attr.NamespaceURI);\n    }\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttribute.NamespaceURI Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book xmlns:bk=&#39;urn:samples&#39; bk:genre=&#39;novel&#39;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create an attribute collection.\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   Console::WriteLine( &quot;Display information on each of the attributes... \\r<br>&quot; );\n   System::Collections::IEnumerator^ myEnum = attrColl-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      XmlAttribute^ attr = safe_cast&lt;XmlAttribute^&gt;(myEnum-&gt;Current);\n      Console::Write( &quot;{0}:{1} = {2}&quot;, attr-&gt;Prefix, attr-&gt;LocalName, attr-&gt;Value );\n      Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp; namespaceURI={0}&quot;, attr-&gt;NamespaceURI );\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttribute.NamespaceURI Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book xmlns:bk=&#39;urn:samples&#39; bk:genre=&#39;novel&#39;&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;) \n\n    &#39;Create an attribute collection.\n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n\n    Console.WriteLine(&quot;Display information on each of the attributes... &quot;)\n    Dim attr as XmlAttribute\n    for each attr in attrColl\n       Console.Write(&quot;{0}:{1} = {2}&quot;, attr.Prefix, attr.LocalName, attr.Value)\n       Console.WriteLine(&quot;   namespaceURI=&quot; + attr.NamespaceURI)\n    next\n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_SchemaInfo\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_SchemaInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SchemaInfo</div>        \r\n          </div>\r\n    \r\n            <p>Gets the post-schema-validation-infoset that has been assigned to this node as a result of schema validation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.schema.ixmlschemainfo\" data-linktype=\"relative-path\">IXmlSchemaInfo</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.xml.schema.ixmlschemainfo\" data-linktype=\"relative-path\">IXmlSchemaInfo</a> containing the post-schema-validation-infoset of this node.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SchemaInfo property is set when this node is validated.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_Specified\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_Specified_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Specified</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the attribute value was explicitly set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool Specified { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if this attribute was explicitly given a value in the original instance document; otherwise, <code>false</code>. A value of <code>false</code> indicates that the value of the attribute came from the DTD.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The implementation is in charge of this property, not the user. If the user changes the value of the attribute (even if it ends up having the same value as the default/fixed value), then the specified flag is automatically flipped to <code>true</code>. To re-specify the attribute as the default/fixed value from the DTD, the user must delete the attribute. The implementation then makes a new attribute available with specified set to <code>false</code> and the default/fixed value (if one exists).  </p>\n<p> In summary:  </p>\n<ol>\n<li><p>If the attribute has an assigned value in the document, <code>Specified</code> is <code>true</code>, and the value is the assigned value.  </p>\n</li>\n<li><p>If the attribute has no assigned value in the document and has a default/fixed value in the DTD, <code>Specified</code> is <code>false</code>, and the value is the default/fixed value in the DTD.  </p>\n</li>\n<li><p>Otherwise, the attribute does not appear in the structure model of the document.</p>\n</li>\n</ol>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_Value\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_Value_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Value</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the value of the node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Value { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value returned depends on the <span class=\"xref\">stem.Xml.XmlNode.NodeType*</span> of the node. For <code>XmlAttribute</code> nodes, this property is the value of attribute.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The node is read-only and a set operation is called.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example displays information on each of the nodes in the attribute collection.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttribute.NamespaceURI Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main(){\n  \n    XmlDocument doc = new XmlDocument();\n    doc.LoadXml(&quot;&lt;book xmlns:bk=&#39;urn:samples&#39; bk:genre=&#39;novel&#39;&gt;&quot; +\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; +\n                &quot;&lt;/book&gt;&quot;);      \n\n    //Create an attribute collection.\n    XmlAttributeCollection attrColl = doc.DocumentElement.Attributes;\n\n    Console.WriteLine(&quot;Display information on each of the attributes... \\r<br>&quot;);\n    foreach (XmlAttribute attr in attrColl){\n       Console.Write(&quot;{0}:{1} = {2}&quot;, attr.Prefix, attr.LocalName, attr.Value);\n       Console.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp; namespaceURI=&quot; + attr.NamespaceURI);\n    }\n  }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttribute.NamespaceURI Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;LoadXml( &quot;&lt;book xmlns:bk=&#39;urn:samples&#39; bk:genre=&#39;novel&#39;&gt;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&lt;/book&gt;&quot; );\n   \n   //Create an attribute collection.\n   XmlAttributeCollection^ attrColl = doc-&gt;DocumentElement-&gt;Attributes;\n   Console::WriteLine( &quot;Display information on each of the attributes... \\r<br>&quot; );\n   System::Collections::IEnumerator^ myEnum = attrColl-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      XmlAttribute^ attr = safe_cast&lt;XmlAttribute^&gt;(myEnum-&gt;Current);\n      Console::Write( &quot;{0}:{1} = {2}&quot;, attr-&gt;Prefix, attr-&gt;LocalName, attr-&gt;Value );\n      Console::WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp; namespaceURI={0}&quot;, attr-&gt;NamespaceURI );\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttribute.NamespaceURI Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.LoadXml(&quot;&lt;book xmlns:bk=&#39;urn:samples&#39; bk:genre=&#39;novel&#39;&gt;&quot; &amp; _\n                &quot;&lt;title&gt;Pride And Prejudice&lt;/title&gt;&quot; &amp; _\n                &quot;&lt;/book&gt;&quot;) \n\n    &#39;Create an attribute collection.\n    Dim attrColl as XmlAttributeCollection = doc.DocumentElement.Attributes\n\n    Console.WriteLine(&quot;Display information on each of the attributes... &quot;)\n    Dim attr as XmlAttribute\n    for each attr in attrColl\n       Console.Write(&quot;{0}:{1} = {2}&quot;, attr.Prefix, attr.LocalName, attr.Value)\n       Console.WriteLine(&quot;   namespaceURI=&quot; + attr.NamespaceURI)\n    next\n\n  end sub\nend class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_AppendChild_System_Xml_XmlNode_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_AppendChild_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AppendChild(XmlNode)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified node to the end of the list of child nodes, of this node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlNode AppendChild (System.Xml.XmlNode newChild);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>newChild</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> to add.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This node is of a type that does not allow child nodes of the type of the <code>newChild</code> node.  </p>\n<p> The <code>newChild</code> is an ancestor of this node.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>newChild</code> was created from a different document than the one that created this node.  </p>\n<p> This node is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <code>newChild</code> is already in the tree, it is first removed.  </p>\n<p> If the node being inserted was created from another document, you can use <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_ImportNode_\" data-linktype=\"relative-path\">ImportNode</a> to import the node to the current document. The imported node can then be inserted into the current document.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example of the AppendChild method, see the <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_AppendChild_\" data-linktype=\"relative-path\">AppendChild</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_CloneNode_System_Boolean_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_CloneNode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CloneNode(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a duplicate of this node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlNode CloneNode (bool deep);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>deep</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to recursively clone the subtree under the specified node; <code>false</code> to clone only the node itself</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </div>\r\n                  <p>The duplicate node.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method serves as a copy constructor for nodes. The cloned node has no parent (<a class=\"xref\" href=\"system.xml.xmlattribute#System_Xml_XmlAttribute_ParentNode_\" data-linktype=\"relative-path\">ParentNode</a> returns <code>null</code>).  </p>\n<p> Cloning an unspecified attribute returns a specified attribute (<a class=\"xref\" href=\"system.xml.xmlattribute#System_Xml_XmlAttribute_Specified_\" data-linktype=\"relative-path\">Specified</a> returns <code>true</code>).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses <code>CloneNode</code> to add an attribute to two different element nodes.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WebData XmlAttribute.CloneNode Example#1\">#using &lt;System.Xml.dll&gt;\n\nusing namespace System;\nusing namespace System::IO;\nusing namespace System::Xml;\nint main()\n{\n   \n   //Create an XmlDocument.\n   XmlDocument^ doc = gcnew XmlDocument;\n   doc-&gt;Load( &quot;2elems.xml&quot; );\n   \n   //Create an attribute.\n   XmlAttribute^ attr;\n   attr = doc-&gt;CreateAttribute( &quot;bk&quot;, &quot;genre&quot;, &quot;urn:samples&quot; );\n   attr-&gt;Value = &quot;novel&quot;;\n   \n   //Add the attribute to the first book.\n   XmlElement^ currNode = dynamic_cast&lt;XmlElement^&gt;(doc-&gt;DocumentElement-&gt;FirstChild);\n   currNode-&gt;SetAttributeNode( attr );\n   \n   //An attribute cannot be added to two different elements.  \n   //You must clone the attribute and add it to the second book.\n   XmlAttribute^ attr2;\n   attr2 = dynamic_cast&lt;XmlAttribute^&gt;(attr-&gt;CloneNode( true ));\n   currNode = dynamic_cast&lt;XmlElement^&gt;(doc-&gt;DocumentElement-&gt;LastChild);\n   currNode-&gt;SetAttributeNode( attr2 );\n   Console::WriteLine( &quot;Display the modified XML...\\r<br>&quot; );\n   XmlTextWriter^ writer = gcnew XmlTextWriter( Console::Out );\n   writer-&gt;Formatting = Formatting::Indented;\n   doc-&gt;WriteContentTo( writer );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WebData XmlAttribute.CloneNode Example#1\">using System;\nusing System.IO;\nusing System.Xml;\n\npublic class Sample\n{\n  public static void Main()\n  {\n    //Create an XmlDocument.\n    XmlDocument doc = new XmlDocument();\n    doc.Load(&quot;2elems.xml&quot;);\n \n    //Create an attribute.\n    XmlAttribute attr;\n    attr = doc.CreateAttribute(&quot;bk&quot;,&quot;genre&quot;,&quot;urn:samples&quot;);\n    attr.Value = &quot;novel&quot;;\n\n    //Add the attribute to the first book.\n    XmlElement currNode = (XmlElement) doc.DocumentElement.FirstChild;\n    currNode.SetAttributeNode(attr);\n\n    //An attribute cannot be added to two different elements.  \n    //You must clone the attribute and add it to the second book.\n    XmlAttribute attr2;\n    attr2 = (XmlAttribute) attr.CloneNode(true);\n    currNode = (XmlElement) doc.DocumentElement.LastChild;\n    currNode.SetAttributeNode(attr2);\n\n    Console.WriteLine(&quot;Display the modified XML...\\r<br>&quot;);\n    XmlTextWriter writer = new XmlTextWriter(Console.Out);\n    writer.Formatting = Formatting.Indented;\n    doc.WriteContentTo(writer);\n\n  }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WebData XmlAttribute.CloneNode Example#1\">Imports System\nImports System.IO\nImports System.Xml\n\npublic class Sample\n\n  public shared sub Main()\n\n    Dim doc as XmlDocument = new XmlDocument()\n    doc.Load(&quot;2elems.xml&quot;)\n \n    &#39;Create an attribute.\n    Dim attr as XmlAttribute \n    attr = doc.CreateAttribute(&quot;bk&quot;,&quot;genre&quot;,&quot;urn:samples&quot;)\n    attr.Value = &quot;novel&quot;\n\n    &#39;Add the attribute to the first book.\n    Dim currNode as XmlElement\n    currNode = CType(doc.DocumentElement.FirstChild, XmlElement) \n    currNode.SetAttributeNode(attr)\n\n    &#39;An attribute cannot be added to two different elements.  \n    &#39;You must clone the attribute and add it to the second book.\n    Dim attr2 as XmlAttribute \n    attr2 = CType (attr.CloneNode(true), XmlAttribute) \n    currNode = CType(doc.DocumentElement.LastChild, XmlElement) \n    currNode.SetAttributeNode(attr2)\n\n    Console.WriteLine(&quot;Display the modified XML...&quot;)\n    Dim writer as XmlTextWriter = new XmlTextWriter(Console.Out)\n    writer.Formatting = Formatting.Indented\n    doc.WriteContentTo(writer)\n\n  end sub\nend class\n</code></pre><p> The example uses the file, <code>2elems.xml</code>, as input.  </p>\n<pre><code class=\"lang-xml\" name=\"Classic WebData XmlAttribute.CloneNode Example#2\">\n&lt;!--sample XML fragment--&gt;\n&lt;bookstore&gt;\n  &lt;book ISBN=&#39;10-861003-324&#39;&gt;\n    &lt;title&gt;The Handmaid&#39;s Tale&lt;/title&gt;\n    &lt;price&gt;19.95&lt;/price&gt;\n  &lt;/book&gt;\n  &lt;book ISBN=&#39;1-861001-57-5&#39;&gt;\n    &lt;title&gt;Pride And Prejudice&lt;/title&gt;\n    &lt;price&gt;24.95&lt;/price&gt;\n  &lt;/book&gt;\n&lt;/bookstore&gt;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_InsertAfter_System_Xml_XmlNode_System_Xml_XmlNode_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_InsertAfter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertAfter(XmlNode,XmlNode)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts the specified node immediately after the specified reference node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlNode InsertAfter (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>newChild</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> to insert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>refChild</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> that is the reference node. The <code>newChild</code> is placed after the <code>refChild</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> inserted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This node is of a type that does not allow child nodes of the type of the <code>newChild</code> node.  </p>\n<p> The <code>newChild</code> is an ancestor of this node.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>newChild</code> was created from a different document than the one that created this node.  </p>\n<p> The <code>refChild</code> is not a child of this node.  </p>\n<p> This node is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>refChild</code> is <code>null</code>, insert <code>newChild</code> at the beginning of the list of child nodes. If <code>newChild</code> is an <a class=\"xref\" href=\"system.xml.xmldocumentfragment\" data-linktype=\"relative-path\">XmlDocumentFragment</a> object, its child nodes are inserted, in the same order, after <code>refChild</code>. If the <code>newChild</code> is already in the tree, it is first removed.  </p>\n<p> If the node being inserted was created from another document, you can use <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_ImportNode_\" data-linktype=\"relative-path\">ImportNode</a> to import the node to the current document. The imported node can then be inserted into the current document.  </p>\n<p> This method is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example of the InsertAfter method see the <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_InsertAfter_\" data-linktype=\"relative-path\">InsertAfter</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_InsertBefore_System_Xml_XmlNode_System_Xml_XmlNode_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_InsertBefore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertBefore(XmlNode,XmlNode)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts the specified node immediately before the specified reference node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlNode InsertBefore (System.Xml.XmlNode newChild, System.Xml.XmlNode refChild);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>newChild</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> to insert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>refChild</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> that is the reference node. The <code>newChild</code> is placed before this node.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> inserted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The current node is of a type that does not allow child nodes of the type of the <code>newChild</code> node.  </p>\n<p> The <code>newChild</code> is an ancestor of this node.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>newChild</code> was created from a different document than the one that created this node.  </p>\n<p> The <code>refChild</code> is not a child of this node.  </p>\n<p> This node is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If <code>refChild</code> is <code>null</code>, insert <code>newChild</code> at the end of the list of child nodes. If <code>newChild</code> is an <a class=\"xref\" href=\"system.xml.xmldocumentfragment\" data-linktype=\"relative-path\">XmlDocumentFragment</a> object, its child nodes are inserted, in the same order, before <code>refChild</code>. If the <code>newChild</code> is already in the tree, it is first removed.  </p>\n<p> If the node being inserted was created from another document, you can use <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_ImportNode_\" data-linktype=\"relative-path\">ImportNode</a> to import the node to the current document. The imported node can then be inserted into the current document.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example of the InsertBefore method, see the <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_InsertBefore_\" data-linktype=\"relative-path\">InsertBefore</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_PrependChild_System_Xml_XmlNode_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_PrependChild_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PrependChild(XmlNode)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified node to the beginning of the list of child nodes for this node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlNode PrependChild (System.Xml.XmlNode newChild);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>newChild</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> to add. If it is an <a class=\"xref\" href=\"system.xml.xmldocumentfragment\" data-linktype=\"relative-path\">XmlDocumentFragment</a>, the entire contents of the document fragment are moved into the child list of this node.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This node is of a type that does not allow child nodes of the type of the <code>newChild</code> node.  </p>\n<p> The <code>newChild</code> is an ancestor of this node.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>newChild</code> was created from a different document than the one that created this node.  </p>\n<p> This node is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <code>newChild</code> is already in the tree, it is first removed.  </p>\n<p> If the node being inserted was created from another document, you can use <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_ImportNode_\" data-linktype=\"relative-path\">ImportNode</a> to import the node to the current document. The imported node can then be inserted into the current document.  </p>\n<p> This method is a Microsoft extension to the Document Object Model (DOM).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example of the PrependChild method, see the <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_PrependChild_\" data-linktype=\"relative-path\">PrependChild</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_RemoveChild_System_Xml_XmlNode_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_RemoveChild_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveChild(XmlNode)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the specified child node.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlNode RemoveChild (System.Xml.XmlNode oldChild);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>oldChild</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> removed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>oldChild</code> is not a child of this node. Or this node is read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example of the RemoveChild method, see the <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_RemoveChild_\" data-linktype=\"relative-path\">RemoveChild</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_ReplaceChild_System_Xml_XmlNode_System_Xml_XmlNode_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_ReplaceChild_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReplaceChild(XmlNode,XmlNode)</div>        \r\n          </div>\r\n    \r\n            <p>Replaces the child node specified with the new child node specified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Xml.XmlNode ReplaceChild (System.Xml.XmlNode newChild, System.Xml.XmlNode oldChild);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>newChild</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new child <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>oldChild</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> to replace.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">System.Xml.XmlNode</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.xml.xmlnode\" data-linktype=\"relative-path\">XmlNode</a> replaced.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This node is of a type that does not allow child nodes of the type of the <code>newChild</code> node.  </p>\n<p> The <code>newChild</code> is an ancestor of this node.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>newChild</code> was created from a different document than the one that created this node.  </p>\n<p> This node is read-only.  </p>\n<p> The <code>oldChild</code> is not a child of this node.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <code>newChild</code> is already in the tree, it is first removed.  </p>\n<p> If the <code>newChild</code> was created from another document, you can use <a class=\"xref\" href=\"system.xml.xmldocument#System_Xml_XmlDocument_ImportNode_\" data-linktype=\"relative-path\">ImportNode</a> to import the node to the current document.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example of the ReplaceChild method, see the <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_ReplaceChild_\" data-linktype=\"relative-path\">ReplaceChild</a> method.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_WriteContentTo_System_Xml_XmlWriter_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_WriteContentTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteContentTo(XmlWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Saves all the children of the node to the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteContentTo (System.Xml.XmlWriter w);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>w</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>XmlWriter</code> to which you want to save.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is a Microsoft extension to the Document Object Model (DOM). It is functionally equivalent to the <a class=\"xref\" href=\"system.xml.xmlattribute#System_Xml_XmlAttribute_InnerXml_\" data-linktype=\"relative-path\">InnerXml</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Xml_XmlAttribute_WriteTo_System_Xml_XmlWriter_\">\r\n    \r\n            <a id=\"System_Xml_XmlAttribute_WriteTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WriteTo(XmlWriter)</div>        \r\n          </div>\r\n    \r\n            <p>Saves the node to the specified <a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void WriteTo (System.Xml.XmlWriter w);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>w</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.xml.xmlwriter\" data-linktype=\"relative-path\">XmlWriter</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <code>XmlWriter</code> to which you want to save.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is a Microsoft extension to the Document Object Model (DOM). It is functionally equivalent to the <a class=\"xref\" href=\"system.xml.xmlnode#System_Xml_XmlNode_OuterXml_\" data-linktype=\"relative-path\">OuterXml</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlAttribute.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlAttribute.yml\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute..ctor\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.AppendChild\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.BaseURI\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.CloneNode\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.InnerText\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.InnerXml\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.InsertAfter\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.InsertBefore\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.LocalName\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.Name\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.NamespaceURI\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.NodeType\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.OwnerDocument\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.OwnerElement\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.ParentNode\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.Prefix\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.PrependChild\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.RemoveChild\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.ReplaceChild\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.SchemaInfo\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.Specified\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.Value\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.WriteContentTo\">\r\n<meta name=\"APIName\" content=\"System.Xml.XmlAttribute.WriteTo\">\r\n<meta name=\"APILocation\" content=\"System.Xml.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"56f353e9-91fc-b545-da81-d58efe342d65\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an attribute. Valid and default values for the attribute are defined in a document type definition (DTD) or schema.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Xml/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Xml.XmlAttribute\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Xml.XmlAttribute.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Xml.XmlAttribute.yml","open_to_public_contributors":true,"api_name":["System.Xml.XmlAttribute","System.Xml.XmlAttribute..ctor","System.Xml.XmlAttribute.AppendChild","System.Xml.XmlAttribute.BaseURI","System.Xml.XmlAttribute.CloneNode","System.Xml.XmlAttribute.InnerText","System.Xml.XmlAttribute.InnerXml","System.Xml.XmlAttribute.InsertAfter","System.Xml.XmlAttribute.InsertBefore","System.Xml.XmlAttribute.LocalName","System.Xml.XmlAttribute.Name","System.Xml.XmlAttribute.NamespaceURI","System.Xml.XmlAttribute.NodeType","System.Xml.XmlAttribute.OwnerDocument","System.Xml.XmlAttribute.OwnerElement","System.Xml.XmlAttribute.ParentNode","System.Xml.XmlAttribute.Prefix","System.Xml.XmlAttribute.PrependChild","System.Xml.XmlAttribute.RemoveChild","System.Xml.XmlAttribute.ReplaceChild","System.Xml.XmlAttribute.SchemaInfo","System.Xml.XmlAttribute.Specified","System.Xml.XmlAttribute.Value","System.Xml.XmlAttribute.WriteContentTo","System.Xml.XmlAttribute.WriteTo"],"api_location":["System.Xml.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Xml.XmlAttribute","System::Xml::XmlAttribute","System.Xml.XmlAttribute.#ctor","System::Xml::XmlAttribute::#ctor","System.Xml.XmlAttribute.AppendChild","System::Xml::XmlAttribute::AppendChild","System.Xml.XmlAttribute.BaseURI","System::Xml::XmlAttribute::BaseURI","System.Xml.XmlAttribute.CloneNode","System::Xml::XmlAttribute::CloneNode","System.Xml.XmlAttribute.InnerText","System::Xml::XmlAttribute::InnerText","System.Xml.XmlAttribute.InnerXml","System::Xml::XmlAttribute::InnerXml","System.Xml.XmlAttribute.InsertAfter","System::Xml::XmlAttribute::InsertAfter","System.Xml.XmlAttribute.InsertBefore","System::Xml::XmlAttribute::InsertBefore","System.Xml.XmlAttribute.LocalName","System::Xml::XmlAttribute::LocalName","System.Xml.XmlAttribute.Name","System::Xml::XmlAttribute::Name","System.Xml.XmlAttribute.NamespaceURI","System::Xml::XmlAttribute::NamespaceURI","System.Xml.XmlAttribute.NodeType","System::Xml::XmlAttribute::NodeType","System.Xml.XmlAttribute.OwnerDocument","System::Xml::XmlAttribute::OwnerDocument","System.Xml.XmlAttribute.OwnerElement","System::Xml::XmlAttribute::OwnerElement","System.Xml.XmlAttribute.ParentNode","System::Xml::XmlAttribute::ParentNode","System.Xml.XmlAttribute.Prefix","System::Xml::XmlAttribute::Prefix","System.Xml.XmlAttribute.PrependChild","System::Xml::XmlAttribute::PrependChild","System.Xml.XmlAttribute.RemoveChild","System::Xml::XmlAttribute::RemoveChild","System.Xml.XmlAttribute.ReplaceChild","System::Xml::XmlAttribute::ReplaceChild","System.Xml.XmlAttribute.SchemaInfo","System::Xml::XmlAttribute::SchemaInfo","System.Xml.XmlAttribute.Specified","System::Xml::XmlAttribute::Specified","System.Xml.XmlAttribute.Value","System::Xml::XmlAttribute::Value","System.Xml.XmlAttribute.WriteContentTo","System::Xml::XmlAttribute::WriteContentTo","System.Xml.XmlAttribute.WriteTo","System::Xml::XmlAttribute::WriteTo"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"56f353e9-91fc-b545-da81-d58efe342d65","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Xml/XmlAttribute.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"XmlAttribute class | Microsoft Docs","_op_ogTitle":"XmlAttribute class","description":"Represents an attribute. Valid and default values for the attribute are defined in a document type definition (DTD) or schema.\n","toc_asset_id":"_splitted/System.Xml/toc.json","toc_rel":"_splitted/System.Xml/toc.json","source_url":"","ms.assetid":"System.Xml.XmlAttribute","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmlattribute","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.xml.xmlattribute","fileRelativePath":"System.Xml.XmlAttribute.html"},"themesRelativePathToOutputRoot":"_themes/"}