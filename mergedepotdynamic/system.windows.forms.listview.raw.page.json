{"content":"    \r\n    <h1 id=\"System_Windows_Forms_ListView\">\r\n      <span class=\"lang-csharp\">ListView</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a Windows list view control, which displays a collection of items that can be displayed using one of four different views.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultEvent(&quot;SelectedIndexChanged&quot;)]\n[System.ComponentModel.DefaultProperty(&quot;Items&quot;)]\n[System.ComponentModel.Designer(&quot;System.Windows.Forms.Design.ListViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n[System.Runtime.InteropServices.ComVisible(true)]\n[System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)]\npublic class ListView : System.Windows.Forms.Control</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">System.Windows.Forms.Control</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l4\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ListView</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibilityNotifyClients_System_Windows_Forms_AccessibleEvents_System_Int32_\" data-linktype=\"relative-path\">AccessibilityNotifyClients(AccessibleEvents,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibilityNotifyClients_System_Windows_Forms_AccessibleEvents_System_Int32_System_Int32_\" data-linktype=\"relative-path\">AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibilityObject\" data-linktype=\"relative-path\">AccessibilityObject</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleDefaultActionDescription\" data-linktype=\"relative-path\">AccessibleDefaultActionDescription</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleDescription\" data-linktype=\"relative-path\">AccessibleDescription</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleName\" data-linktype=\"relative-path\">AccessibleName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleRole\" data-linktype=\"relative-path\">AccessibleRole</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AllowDrop\" data-linktype=\"relative-path\">AllowDrop</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Anchor\" data-linktype=\"relative-path\">Anchor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AutoScrollOffset\" data-linktype=\"relative-path\">AutoScrollOffset</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AutoSize\" data-linktype=\"relative-path\">AutoSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AutoSizeChanged\" data-linktype=\"relative-path\">AutoSizeChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColorChanged\" data-linktype=\"relative-path\">BackColorChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImage\" data-linktype=\"relative-path\">BackgroundImage</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImageChanged\" data-linktype=\"relative-path\">BackgroundImageChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BeginInvoke_System_Delegate_\" data-linktype=\"relative-path\">BeginInvoke(Delegate)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BeginInvoke_System_Delegate_System_Object___\" data-linktype=\"relative-path\">BeginInvoke(Delegate,Object[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BindingContext\" data-linktype=\"relative-path\">BindingContext</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BindingContextChanged\" data-linktype=\"relative-path\">BindingContextChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Bottom\" data-linktype=\"relative-path\">Bottom</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Bounds\" data-linktype=\"relative-path\">Bounds</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BringToFront\" data-linktype=\"relative-path\">BringToFront()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CanEnableIme\" data-linktype=\"relative-path\">CanEnableIme</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CanFocus\" data-linktype=\"relative-path\">CanFocus</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CanSelect\" data-linktype=\"relative-path\">CanSelect</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Capture\" data-linktype=\"relative-path\">Capture</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidation\" data-linktype=\"relative-path\">CausesValidation</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidationChanged\" data-linktype=\"relative-path\">CausesValidationChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ChangeUICues\" data-linktype=\"relative-path\">ChangeUICues</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CheckForIllegalCrossThreadCalls\" data-linktype=\"relative-path\">CheckForIllegalCrossThreadCalls</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ClientRectangle\" data-linktype=\"relative-path\">ClientRectangle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ClientSize\" data-linktype=\"relative-path\">ClientSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ClientSizeChanged\" data-linktype=\"relative-path\">ClientSizeChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CompanyName\" data-linktype=\"relative-path\">CompanyName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Contains_System_Windows_Forms_Control_\" data-linktype=\"relative-path\">Contains(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContainsFocus\" data-linktype=\"relative-path\">ContainsFocus</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenu\" data-linktype=\"relative-path\">ContextMenu</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenuChanged\" data-linktype=\"relative-path\">ContextMenuChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenuStrip\" data-linktype=\"relative-path\">ContextMenuStrip</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenuStripChanged\" data-linktype=\"relative-path\">ContextMenuStripChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ControlAdded\" data-linktype=\"relative-path\">ControlAdded</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ControlRemoved\" data-linktype=\"relative-path\">ControlRemoved</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls\" data-linktype=\"relative-path\">Controls</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateAccessibilityInstance\" data-linktype=\"relative-path\">CreateAccessibilityInstance()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateControl\" data-linktype=\"relative-path\">CreateControl()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateControlsInstance\" data-linktype=\"relative-path\">CreateControlsInstance()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Created\" data-linktype=\"relative-path\">Created</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics\" data-linktype=\"relative-path\">CreateGraphics()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Cursor\" data-linktype=\"relative-path\">Cursor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CursorChanged\" data-linktype=\"relative-path\">CursorChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DataBindings\" data-linktype=\"relative-path\">DataBindings</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultBackColor\" data-linktype=\"relative-path\">DefaultBackColor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultCursor\" data-linktype=\"relative-path\">DefaultCursor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultFont\" data-linktype=\"relative-path\">DefaultFont</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultForeColor\" data-linktype=\"relative-path\">DefaultForeColor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultImeMode\" data-linktype=\"relative-path\">DefaultImeMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultMargin\" data-linktype=\"relative-path\">DefaultMargin</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultMaximumSize\" data-linktype=\"relative-path\">DefaultMaximumSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultMinimumSize\" data-linktype=\"relative-path\">DefaultMinimumSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultPadding\" data-linktype=\"relative-path\">DefaultPadding</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefWndProc_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">DefWndProc(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DestroyHandle\" data-linktype=\"relative-path\">DestroyHandle()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DisplayRectangle\" data-linktype=\"relative-path\">DisplayRectangle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Disposing\" data-linktype=\"relative-path\">Disposing</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Dock\" data-linktype=\"relative-path\">Dock</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DockChanged\" data-linktype=\"relative-path\">DockChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoDragDrop_System_Object_System_Windows_Forms_DragDropEffects_\" data-linktype=\"relative-path\">DoDragDrop(Object,DragDropEffects)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragDrop\" data-linktype=\"relative-path\">DragDrop</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragEnter\" data-linktype=\"relative-path\">DragEnter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragLeave\" data-linktype=\"relative-path\">DragLeave</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DrawToBitmap_System_Drawing_Bitmap_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">DrawToBitmap(Bitmap,Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enabled\" data-linktype=\"relative-path\">Enabled</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EnabledChanged\" data-linktype=\"relative-path\">EnabledChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EndInvoke_System_IAsyncResult_\" data-linktype=\"relative-path\">EndInvoke(IAsyncResult)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FindForm\" data-linktype=\"relative-path\">FindForm()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focus\" data-linktype=\"relative-path\">Focus()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focused\" data-linktype=\"relative-path\">Focused</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Font\" data-linktype=\"relative-path\">Font</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FontChanged\" data-linktype=\"relative-path\">FontChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FontHeight\" data-linktype=\"relative-path\">FontHeight</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ForeColorChanged\" data-linktype=\"relative-path\">ForeColorChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FromChildHandle_System_IntPtr_\" data-linktype=\"relative-path\">FromChildHandle(IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FromHandle_System_IntPtr_\" data-linktype=\"relative-path\">FromHandle(IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetAccessibilityObjectById_System_Int32_\" data-linktype=\"relative-path\">GetAccessibilityObjectById(Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetAutoSizeMode\" data-linktype=\"relative-path\">GetAutoSizeMode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetChildAtPoint_System_Drawing_Point_\" data-linktype=\"relative-path\">GetChildAtPoint(Point)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetChildAtPoint_System_Drawing_Point_System_Windows_Forms_GetChildAtPointSkip_\" data-linktype=\"relative-path\">GetChildAtPoint(Point,GetChildAtPointSkip)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetContainerControl\" data-linktype=\"relative-path\">GetContainerControl()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetNextControl_System_Windows_Forms_Control_System_Boolean_\" data-linktype=\"relative-path\">GetNextControl(Control,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetPreferredSize_System_Drawing_Size_\" data-linktype=\"relative-path\">GetPreferredSize(Size)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetScaledBounds_System_Drawing_Rectangle_System_Drawing_SizeF_System_Windows_Forms_BoundsSpecified_\" data-linktype=\"relative-path\">GetScaledBounds(Rectangle,SizeF,BoundsSpecified)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetStyle_System_Windows_Forms_ControlStyles_\" data-linktype=\"relative-path\">GetStyle(ControlStyles)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetTopLevel\" data-linktype=\"relative-path\">GetTopLevel()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Handle\" data-linktype=\"relative-path\">Handle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleCreated\" data-linktype=\"relative-path\">HandleCreated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleDestroyed\" data-linktype=\"relative-path\">HandleDestroyed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HasChildren\" data-linktype=\"relative-path\">HasChildren</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height\" data-linktype=\"relative-path\">Height</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HelpRequested\" data-linktype=\"relative-path\">HelpRequested</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Hide\" data-linktype=\"relative-path\">Hide()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ImeMode\" data-linktype=\"relative-path\">ImeMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ImeModeBase\" data-linktype=\"relative-path\">ImeModeBase</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ImeModeChanged\" data-linktype=\"relative-path\">ImeModeChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InitLayout\" data-linktype=\"relative-path\">InitLayout()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate\" data-linktype=\"relative-path\">Invalidate()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Boolean_\" data-linktype=\"relative-path\">Invalidate(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">Invalidate(Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Drawing_Rectangle_System_Boolean_\" data-linktype=\"relative-path\">Invalidate(Rectangle,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Drawing_Region_\" data-linktype=\"relative-path\">Invalidate(Region)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Drawing_Region_System_Boolean_\" data-linktype=\"relative-path\">Invalidate(Region,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidated\" data-linktype=\"relative-path\">Invalidated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_System_Delegate_\" data-linktype=\"relative-path\">Invoke(Delegate)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_System_Delegate_System_Object___\" data-linktype=\"relative-path\">Invoke(Delegate,Object[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeGotFocus_System_Windows_Forms_Control_System_EventArgs_\" data-linktype=\"relative-path\">InvokeGotFocus(Control,EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeLostFocus_System_Windows_Forms_Control_System_EventArgs_\" data-linktype=\"relative-path\">InvokeLostFocus(Control,EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeOnClick_System_Windows_Forms_Control_System_EventArgs_\" data-linktype=\"relative-path\">InvokeOnClick(Control,EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokePaint_System_Windows_Forms_Control_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">InvokePaint(Control,PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokePaintBackground_System_Windows_Forms_Control_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">InvokePaintBackground(Control,PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeRequired\" data-linktype=\"relative-path\">InvokeRequired</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsAccessible\" data-linktype=\"relative-path\">IsAccessible</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsDisposed\" data-linktype=\"relative-path\">IsDisposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsHandleCreated\" data-linktype=\"relative-path\">IsHandleCreated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsInputChar_System_Char_\" data-linktype=\"relative-path\">IsInputChar(Char)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsKeyLocked_System_Windows_Forms_Keys_\" data-linktype=\"relative-path\">IsKeyLocked(Keys)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsMirrored\" data-linktype=\"relative-path\">IsMirrored</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsMnemonic_System_Char_System_String_\" data-linktype=\"relative-path\">IsMnemonic(Char,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LayoutEngine\" data-linktype=\"relative-path\">LayoutEngine</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Left\" data-linktype=\"relative-path\">Left</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location\" data-linktype=\"relative-path\">Location</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LocationChanged\" data-linktype=\"relative-path\">LocationChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Margin\" data-linktype=\"relative-path\">Margin</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MarginChanged\" data-linktype=\"relative-path\">MarginChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MaximumSize\" data-linktype=\"relative-path\">MaximumSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MinimumSize\" data-linktype=\"relative-path\">MinimumSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ModifierKeys\" data-linktype=\"relative-path\">ModifierKeys</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseButtons\" data-linktype=\"relative-path\">MouseButtons</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseCaptureChanged\" data-linktype=\"relative-path\">MouseCaptureChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseClick\" data-linktype=\"relative-path\">MouseClick</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDoubleClick\" data-linktype=\"relative-path\">MouseDoubleClick</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MousePosition\" data-linktype=\"relative-path\">MousePosition</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseWheel\" data-linktype=\"relative-path\">MouseWheel</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Move\" data-linktype=\"relative-path\">Move</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Name\" data-linktype=\"relative-path\">Name</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_NotifyInvalidate_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">NotifyInvalidate(Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnAutoSizeChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnAutoSizeChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnBackColorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnBackColorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnBackgroundImageLayoutChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnBackgroundImageLayoutChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnBindingContextChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnBindingContextChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnCausesValidationChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnCausesValidationChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnChangeUICues_System_Windows_Forms_UICuesEventArgs_\" data-linktype=\"relative-path\">OnChangeUICues(UICuesEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnClick_System_EventArgs_\" data-linktype=\"relative-path\">OnClick(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnClientSizeChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnClientSizeChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnContextMenuChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnContextMenuChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnContextMenuStripChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnContextMenuStripChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnControlAdded_System_Windows_Forms_ControlEventArgs_\" data-linktype=\"relative-path\">OnControlAdded(ControlEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnControlRemoved_System_Windows_Forms_ControlEventArgs_\" data-linktype=\"relative-path\">OnControlRemoved(ControlEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnCreateControl\" data-linktype=\"relative-path\">OnCreateControl()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnCursorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnCursorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDockChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnDockChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDoubleClick_System_EventArgs_\" data-linktype=\"relative-path\">OnDoubleClick(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDragDrop_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">OnDragDrop(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDragEnter_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">OnDragEnter(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDragLeave_System_EventArgs_\" data-linktype=\"relative-path\">OnDragLeave(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDragOver_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">OnDragOver(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnEnabledChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnEnabledChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnEnter_System_EventArgs_\" data-linktype=\"relative-path\">OnEnter(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnForeColorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnForeColorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnGiveFeedback_System_Windows_Forms_GiveFeedbackEventArgs_\" data-linktype=\"relative-path\">OnGiveFeedback(GiveFeedbackEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnGotFocus_System_EventArgs_\" data-linktype=\"relative-path\">OnGotFocus(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnHelpRequested_System_Windows_Forms_HelpEventArgs_\" data-linktype=\"relative-path\">OnHelpRequested(HelpEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnImeModeChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnImeModeChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnInvalidated_System_Windows_Forms_InvalidateEventArgs_\" data-linktype=\"relative-path\">OnInvalidated(InvalidateEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnKeyDown_System_Windows_Forms_KeyEventArgs_\" data-linktype=\"relative-path\">OnKeyDown(KeyEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnKeyPress_System_Windows_Forms_KeyPressEventArgs_\" data-linktype=\"relative-path\">OnKeyPress(KeyPressEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnKeyUp_System_Windows_Forms_KeyEventArgs_\" data-linktype=\"relative-path\">OnKeyUp(KeyEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnLayout_System_Windows_Forms_LayoutEventArgs_\" data-linktype=\"relative-path\">OnLayout(LayoutEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnLeave_System_EventArgs_\" data-linktype=\"relative-path\">OnLeave(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnLocationChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnLocationChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnLostFocus_System_EventArgs_\" data-linktype=\"relative-path\">OnLostFocus(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMarginChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnMarginChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseCaptureChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnMouseCaptureChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseClick_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseClick(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseDoubleClick_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseDoubleClick(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseDown_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseDown(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseEnter_System_EventArgs_\" data-linktype=\"relative-path\">OnMouseEnter(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseMove_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseMove(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseUp_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseUp(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseWheel_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseWheel(MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMove_System_EventArgs_\" data-linktype=\"relative-path\">OnMove(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnNotifyMessage_System_Windows_Forms_Message_\" data-linktype=\"relative-path\">OnNotifyMessage(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPaddingChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnPaddingChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPaint_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">OnPaint(PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPaintBackground_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">OnPaintBackground(PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentBackColorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentBackColorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentBackgroundImageChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentBackgroundImageChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentBindingContextChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentBindingContextChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentCursorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentCursorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentEnabledChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentEnabledChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentFontChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentFontChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentForeColorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentForeColorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentRightToLeftChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentRightToLeftChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentVisibleChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentVisibleChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPreviewKeyDown_System_Windows_Forms_PreviewKeyDownEventArgs_\" data-linktype=\"relative-path\">OnPreviewKeyDown(PreviewKeyDownEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPrint_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">OnPrint(PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnQueryContinueDrag_System_Windows_Forms_QueryContinueDragEventArgs_\" data-linktype=\"relative-path\">OnQueryContinueDrag(QueryContinueDragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnRegionChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnRegionChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnRightToLeftChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnRightToLeftChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnSizeChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnSizeChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnStyleChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnStyleChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnTabIndexChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnTabIndexChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnTabStopChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnTabStopChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnTextChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnTextChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnValidated_System_EventArgs_\" data-linktype=\"relative-path\">OnValidated(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnValidating_System_ComponentModel_CancelEventArgs_\" data-linktype=\"relative-path\">OnValidating(CancelEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnVisibleChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnVisibleChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Parent\" data-linktype=\"relative-path\">Parent</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ParentChanged\" data-linktype=\"relative-path\">ParentChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PerformLayout\" data-linktype=\"relative-path\">PerformLayout()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PerformLayout_System_Windows_Forms_Control_System_String_\" data-linktype=\"relative-path\">PerformLayout(Control,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PointToClient_System_Drawing_Point_\" data-linktype=\"relative-path\">PointToClient(Point)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PointToScreen_System_Drawing_Point_\" data-linktype=\"relative-path\">PointToScreen(Point)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreferredSize\" data-linktype=\"relative-path\">PreferredSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreProcessControlMessage_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">PreProcessControlMessage(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreProcessMessage_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">PreProcessMessage(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreviewKeyDown\" data-linktype=\"relative-path\">PreviewKeyDown</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessCmdKey_System_Windows_Forms_Message__System_Windows_Forms_Keys_\" data-linktype=\"relative-path\">ProcessCmdKey(Message,Keys)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessDialogChar_System_Char_\" data-linktype=\"relative-path\">ProcessDialogChar(Char)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessDialogKey_System_Windows_Forms_Keys_\" data-linktype=\"relative-path\">ProcessDialogKey(Keys)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessKeyEventArgs_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">ProcessKeyEventArgs(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessKeyMessage_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">ProcessKeyMessage(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessKeyPreview_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">ProcessKeyPreview(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessMnemonic_System_Char_\" data-linktype=\"relative-path\">ProcessMnemonic(Char)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProductName\" data-linktype=\"relative-path\">ProductName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProductVersion\" data-linktype=\"relative-path\">ProductVersion</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PropagatingImeMode\" data-linktype=\"relative-path\">PropagatingImeMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_QueryAccessibilityHelp\" data-linktype=\"relative-path\">QueryAccessibilityHelp</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_QueryContinueDrag\" data-linktype=\"relative-path\">QueryContinueDrag</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RaiseDragEvent_System_Object_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">RaiseDragEvent(Object,DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RaiseKeyEvent_System_Object_System_Windows_Forms_KeyEventArgs_\" data-linktype=\"relative-path\">RaiseKeyEvent(Object,KeyEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RaiseMouseEvent_System_Object_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">RaiseMouseEvent(Object,MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RaisePaintEvent_System_Object_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">RaisePaintEvent(Object,PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RecreateHandle\" data-linktype=\"relative-path\">RecreateHandle()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RecreatingHandle\" data-linktype=\"relative-path\">RecreatingHandle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RectangleToClient_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">RectangleToClient(Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RectangleToScreen_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">RectangleToScreen(Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ReflectMessage_System_IntPtr_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">ReflectMessage(IntPtr,Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Refresh\" data-linktype=\"relative-path\">Refresh()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Region\" data-linktype=\"relative-path\">Region</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RegionChanged\" data-linktype=\"relative-path\">RegionChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RenderRightToLeft\" data-linktype=\"relative-path\">RenderRightToLeft</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetBackColor\" data-linktype=\"relative-path\">ResetBackColor()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetBindings\" data-linktype=\"relative-path\">ResetBindings()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetCursor\" data-linktype=\"relative-path\">ResetCursor()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetFont\" data-linktype=\"relative-path\">ResetFont()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetForeColor\" data-linktype=\"relative-path\">ResetForeColor()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetImeMode\" data-linktype=\"relative-path\">ResetImeMode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetMouseEventArgs\" data-linktype=\"relative-path\">ResetMouseEventArgs()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetRightToLeft\" data-linktype=\"relative-path\">ResetRightToLeft()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetText\" data-linktype=\"relative-path\">ResetText()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResizeRedraw\" data-linktype=\"relative-path\">ResizeRedraw</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout\" data-linktype=\"relative-path\">ResumeLayout()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout_System_Boolean_\" data-linktype=\"relative-path\">ResumeLayout(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Right\" data-linktype=\"relative-path\">Right</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft\" data-linktype=\"relative-path\">RightToLeft</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeftChanged\" data-linktype=\"relative-path\">RightToLeftChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateAlignment_System_Drawing_ContentAlignment_\" data-linktype=\"relative-path\">RtlTranslateAlignment(ContentAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateAlignment_System_Windows_Forms_HorizontalAlignment_\" data-linktype=\"relative-path\">RtlTranslateAlignment(HorizontalAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateAlignment_System_Windows_Forms_LeftRightAlignment_\" data-linktype=\"relative-path\">RtlTranslateAlignment(LeftRightAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateContent_System_Drawing_ContentAlignment_\" data-linktype=\"relative-path\">RtlTranslateContent(ContentAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateHorizontal_System_Windows_Forms_HorizontalAlignment_\" data-linktype=\"relative-path\">RtlTranslateHorizontal(HorizontalAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateLeftRight_System_Windows_Forms_LeftRightAlignment_\" data-linktype=\"relative-path\">RtlTranslateLeftRight(LeftRightAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Scale_System_Drawing_SizeF_\" data-linktype=\"relative-path\">Scale(SizeF)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Scale_System_Single_\" data-linktype=\"relative-path\">Scale(Single)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Scale_System_Single_System_Single_\" data-linktype=\"relative-path\">Scale(Single,Single)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ScaleChildren\" data-linktype=\"relative-path\">ScaleChildren</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ScaleControl_System_Drawing_SizeF_System_Windows_Forms_BoundsSpecified_\" data-linktype=\"relative-path\">ScaleControl(SizeF,BoundsSpecified)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ScaleCore_System_Single_System_Single_\" data-linktype=\"relative-path\">ScaleCore(Single,Single)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select\" data-linktype=\"relative-path\">Select()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select_System_Boolean_System_Boolean_\" data-linktype=\"relative-path\">Select(Boolean,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SelectNextControl_System_Windows_Forms_Control_System_Boolean_System_Boolean_System_Boolean_System_Boolean_\" data-linktype=\"relative-path\">SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SendToBack\" data-linktype=\"relative-path\">SendToBack()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetAutoSizeMode_System_Windows_Forms_AutoSizeMode_\" data-linktype=\"relative-path\">SetAutoSizeMode(AutoSizeMode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetBounds_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">SetBounds(Int32,Int32,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetBounds_System_Int32_System_Int32_System_Int32_System_Int32_System_Windows_Forms_BoundsSpecified_\" data-linktype=\"relative-path\">SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetBoundsCore_System_Int32_System_Int32_System_Int32_System_Int32_System_Windows_Forms_BoundsSpecified_\" data-linktype=\"relative-path\">SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetClientSizeCore_System_Int32_System_Int32_\" data-linktype=\"relative-path\">SetClientSizeCore(Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetStyle_System_Windows_Forms_ControlStyles_System_Boolean_\" data-linktype=\"relative-path\">SetStyle(ControlStyles,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetTopLevel_System_Boolean_\" data-linktype=\"relative-path\">SetTopLevel(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetVisibleCore_System_Boolean_\" data-linktype=\"relative-path\">SetVisibleCore(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Show\" data-linktype=\"relative-path\">Show()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ShowFocusCues\" data-linktype=\"relative-path\">ShowFocusCues</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ShowKeyboardCues\" data-linktype=\"relative-path\">ShowKeyboardCues</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size\" data-linktype=\"relative-path\">Size</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SizeChanged\" data-linktype=\"relative-path\">SizeChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SizeFromClientSize_System_Drawing_Size_\" data-linktype=\"relative-path\">SizeFromClientSize(Size)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_StyleChanged\" data-linktype=\"relative-path\">StyleChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SuspendLayout\" data-linktype=\"relative-path\">SuspendLayout()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragDrop_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">IDropTarget.OnDragDrop(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragEnter_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">IDropTarget.OnDragEnter(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragLeave_System_EventArgs_\" data-linktype=\"relative-path\">IDropTarget.OnDragLeave(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragOver_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">IDropTarget.OnDragOver(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SystemColorsChanged\" data-linktype=\"relative-path\">SystemColorsChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabIndex\" data-linktype=\"relative-path\">TabIndex</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabIndexChanged\" data-linktype=\"relative-path\">TabIndexChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabStop\" data-linktype=\"relative-path\">TabStop</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabStopChanged\" data-linktype=\"relative-path\">TabStopChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Tag\" data-linktype=\"relative-path\">Tag</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Top\" data-linktype=\"relative-path\">Top</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TopLevelControl\" data-linktype=\"relative-path\">TopLevelControl</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Update\" data-linktype=\"relative-path\">Update()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateBounds\" data-linktype=\"relative-path\">UpdateBounds()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateBounds_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">UpdateBounds(Int32,Int32,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateBounds_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateStyles\" data-linktype=\"relative-path\">UpdateStyles()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateZOrder\" data-linktype=\"relative-path\">UpdateZOrder()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UseWaitCursor\" data-linktype=\"relative-path\">UseWaitCursor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible\" data-linktype=\"relative-path\">Visible</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_VisibleChanged\" data-linktype=\"relative-path\">VisibleChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width\" data-linktype=\"relative-path\">Width</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_WindowTarget\" data-linktype=\"relative-path\">WindowTarget</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A ListView control allows you to display a list of items with item text and, optionally, an icon to identify the type of item. For example, the Windows Explorer list of files is similar in appearance to a ListView control. It displays a list of the files and folders currently selected in the tree. Each file and folder displays an icon associated with it to help identify the type of file or folder. The <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> class represents an item within a ListView control. The items that are displayed in the list can be shown in one of five different views. Items can be displayed as large icons, as small icons, or as small icons in a vertical list. Items can also have subitems which contain information that is related to the parent item. The details view allows you to display the item and its subitems in a grid with column headers that identify the information being displayed in a subitem. The tile view, which has limited availability as described below, allows you to display the item and its subitems as a tile that contains a large icon next to the textual information. ListView supports single or multiple selection. The multiple selection feature lets the user select from a list of items in a way similar to a <a class=\"xref\" href=\"system.windows.forms.listbox\" data-linktype=\"relative-path\">ListBox</a> control. Additionally, the user can activate selected items to perform a task. For example, you could use a ListView control to display a list of files that the application can then open and utilize. The user can select the files to open and then double-click them to activate the items and open the files in the application. The ListView can also display check boxes, using the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a> property, to allow the user to check the items that they want to perform an action on. You can use the ListView control in a variety of ways. The control can be used to display information from an application, a database, or a text file. The ListView can also be used to obtain information from the user, such as selecting a set of files to process.  </p>\n<p> ListView provides a large number of properties that provide flexibility in appearance and behavior. The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property allows you to change the way in which items are displayed. The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LargeImageList_\" data-linktype=\"relative-path\">LargeImageList</a>, <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SmallImageList_\" data-linktype=\"relative-path\">SmallImageList</a>, and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_StateImageList_\" data-linktype=\"relative-path\">StateImageList</a> properties allow you to specify the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects that contain the images displayed for items and, in the case of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_StateImageList_\" data-linktype=\"relative-path\">StateImageList</a>, the check boxes that are displayed when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a> property is set to <code>true</code>. To determine which items are checked, you can use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckedItems_\" data-linktype=\"relative-path\">CheckedItems</a> property to access the <a class=\"xref\" href=\"system.windows.forms.listview.checkedlistviewitemcollection\" data-linktype=\"relative-path\">ListView+CheckedListViewItemCollection</a> collection. The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Columns_\" data-linktype=\"relative-path\">Columns</a> property allows access to the <a class=\"xref\" href=\"system.windows.forms.listview.columnheadercollection\" data-linktype=\"relative-path\">ListView+ColumnHeaderCollection</a>, which stores the column headers that are displayed when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property of the control is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>. Items are added and removed from the ListView through the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Items_\" data-linktype=\"relative-path\">Items</a> property. The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Items_\" data-linktype=\"relative-path\">Items</a> property allows you to access the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection\" data-linktype=\"relative-path\">ListView+ListViewItemCollection</a> of the control, which provides methods for manipulating the items in the control. If you want to allow the user to edit the text of an item, you can use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LabelEdit_\" data-linktype=\"relative-path\">LabelEdit</a> property. When your control contains a large number of items, it is often easier for the user to see them in a sorted list. You can use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sorting_\" data-linktype=\"relative-path\">Sorting</a> property to sort the items alphabetically. You can also completely customize the appearance of a ListView control. To do this, set the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_OwnerDraw_\" data-linktype=\"relative-path\">OwnerDraw</a> property to <code>true</code> and handle one or more of the following events: <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">DrawItem</a>, <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">DrawSubItem</a>, <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawColumnHeader\" data-linktype=\"relative-path\">DrawColumnHeader</a>.  </p>\n<p> Many of the properties of the ListView control are used when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property of the control is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>. The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AllowColumnReorder_\" data-linktype=\"relative-path\">AllowColumnReorder</a> property allows the user of your ListView control to reconfigure the order of columns at run time. The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a> property allows an item and its subitems to be selected instead of just the item. To display gridlines in the details view to identify the boundaries of items and subitems in the ListView, you can use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GridLines_\" data-linktype=\"relative-path\">GridLines</a> property. The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_HeaderStyle_\" data-linktype=\"relative-path\">HeaderStyle</a> property allows you to specify the type of column headers to display.  </p>\n<p> A ListView control can operate in virtual mode, where <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects are generated dynamically instead of being stored in the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Items_\" data-linktype=\"relative-path\">Items</a> collection. This can be useful for dealing with very large lists or lists whose contents frequently change. To enable Virtual mode, set the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property to <code>true</code> and handle the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_RetrieveVirtualItem\" data-linktype=\"relative-path\">RetrieveVirtualItem</a>, <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CacheVirtualItems\" data-linktype=\"relative-path\">CacheVirtualItems</a>, and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SearchForVirtualItem\" data-linktype=\"relative-path\">SearchForVirtualItem</a> events.  </p>\n<p> In addition to the many properties that are available for a ListView control, there are methods and events that your application can use to provide additional capabilities to the ListView. The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_BeginUpdate_\" data-linktype=\"relative-path\">BeginUpdate</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_EndUpdate_\" data-linktype=\"relative-path\">EndUpdate</a> methods allow you to improve performance when you add many items to a ListView by preventing the control from repainting every time that an item is added. If your ListView control is displaying items and subitems, you may want to provide functionality when the user right-clicks a subitem. To determine the item whose subitem is being clicked, you can use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GetItemAt_\" data-linktype=\"relative-path\">GetItemAt</a> method. When performing validation of the items after the user has edited them, you may want to display a specific item to the user to change. The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_EnsureVisible_\" data-linktype=\"relative-path\">EnsureVisible</a> method can be called to ensure that the specific item is in the visible area of the control.  </p>\n<p> If the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LabelEdit_\" data-linktype=\"relative-path\">LabelEdit</a> property set to <code>true</code>, you can perform tasks such as validating the text being edited before and after the text changed by creating an event handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_BeforeLabelEdit\" data-linktype=\"relative-path\">BeforeLabelEdit</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AfterLabelEdit\" data-linktype=\"relative-path\">AfterLabelEdit</a> events. To perform tasks such as opening a file or displaying a dialog box to edit an item displayed in a ListView, you can create an event handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemActivate\" data-linktype=\"relative-path\">ItemActivate</a> event. If you allow the user to sort the items in a ListView when they click a column header, you can create an event handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ColumnClick\" data-linktype=\"relative-path\">ColumnClick</a> event to perform the sorting. When the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a> property is set to <code>true</code>, you can determine when a change in an item&#39;s check state has occurred by handling the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemCheck\" data-linktype=\"relative-path\">ItemCheck</a> event.  </p>\n<p> You can also set a background image for the ListView with the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImage_\" data-linktype=\"relative-path\">BackgroundImage</a> property. Your application must have the <a class=\"xref\" href=\"system.stathreadattribute\" data-linktype=\"relative-path\">STAThreadAttribute</a> on its <code>Main</code> method to correctly display the background image for the ListView control. In addition, if a ListView control with a background image is hosted in Internet Explorer, specify comctl32.dll version 6.0 as a dependent assembly in the application manifest file to ensure the background image is property displayed.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Setting the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Cursor_\" data-linktype=\"relative-path\">Cursor</a> property for a ListView control has no affect on the appearance of the cursor in <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE --> versions 1.1 and earlier.  </p>\n</div>\n<p> Windows XP and Windows Server 2003 provide three features that enhance the ListView control when your application calls the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_EnableVisualStyles_\" data-linktype=\"relative-path\">EnableVisualStyles</a> method: tile view, grouping, and the insertion mark.  </p>\n<p> The tile view lets you balance graphical and textual information by displaying item and subitem text next to large icons. Set the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a> to enable this behavior.  </p>\n<p> The grouping feature lets you visually group items into related categories. Use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Groups_\" data-linktype=\"relative-path\">Groups</a> property to add <a class=\"xref\" href=\"system.windows.forms.listviewgroup\" data-linktype=\"relative-path\">ListViewGroup</a> objects to the ListView control when you want to enable this feature. To temporarily disable the feature, set the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ShowGroups_\" data-linktype=\"relative-path\">ShowGroups</a> property to <code>false</code>.  </p>\n<p> The insertion mark feature lets you provide drag-and-drop item repositioning with visual feedback to indicate drop locations. Use the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark\" data-linktype=\"relative-path\">ListViewInsertionMark</a> object retrieved through the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_InsertionMark_\" data-linktype=\"relative-path\">InsertionMark</a> property to display the insertion mark.  </p>\n<p> These features are available only under Windows XP and Windows Server 2003. On earlier operating systems, the code that relate to these features has no effect, the tile view appears as the large icon view, and the insertion mark and groups do not display. In some cases, you might want to include code that determines whether these features are available, and provide alternate functionality when they are unavailable. These features are provided by the same library that provides the operating system themes feature. To check for the availability of this library, call the <a class=\"xref\" href=\"system.windows.forms.featuresupport#System_Windows_Forms_FeatureSupport_IsPresent_System_Object_\" data-linktype=\"relative-path\">System.Windows.Forms.FeatureSupport.IsPresent(Object)</a> method overload and pass in the <a class=\"xref\" href=\"system.windows.forms.osfeature#System_Windows_Forms_OSFeature_Themes\" data-linktype=\"relative-path\">System.Windows.Forms.OSFeature.Themes</a> value.  </p>\n<p> The following table shows some of the ListView members and the views they are valid in.  </p>\n<table>\n<thead>\n<tr>\n<th>ListView member</th>\n<th>View</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Alignment_\" data-linktype=\"relative-path\">Alignment</a> property</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AutoArrange_\" data-linktype=\"relative-path\">AutoArrange</a> property</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AutoResizeColumn_\" data-linktype=\"relative-path\">AutoResizeColumn</a> method</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Columns_\" data-linktype=\"relative-path\">Columns</a> property</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">DrawSubItem</a> event</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindItemWithText_\" data-linktype=\"relative-path\">FindItemWithText</a> method</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>, <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>, or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindNearestItem_\" data-linktype=\"relative-path\">FindNearestItem</a> method</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GetItemAt_\" data-linktype=\"relative-path\">GetItemAt</a> method</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Groups_\" data-linktype=\"relative-path\">Groups</a> property</td>\n<td>All views except <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_HeaderStyle_\" data-linktype=\"relative-path\">HeaderStyle</a> property</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_InsertionMark_\" data-linktype=\"relative-path\">InsertionMark</a> property</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>, <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>, or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView__ctor\" data-linktype=\"self-bookmark\">ListView()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_Activation\" data-linktype=\"self-bookmark\">Activation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the type of action the user must take to activate an item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_Alignment\" data-linktype=\"self-bookmark\">Alignment</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the alignment of items in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_AllowColumnReorder\" data-linktype=\"self-bookmark\">AllowColumnReorder</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the user can drag column headers to reorder columns in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_AutoArrange\" data-linktype=\"self-bookmark\">AutoArrange</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets whether icons are automatically kept arranged.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_BackColor\" data-linktype=\"self-bookmark\">BackColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the background color.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_BackgroundImageLayout\" data-linktype=\"self-bookmark\">BackgroundImageLayout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a> value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_BackgroundImageTiled\" data-linktype=\"self-bookmark\">BackgroundImageTiled</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the background image of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> should be tiled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_BorderStyle\" data-linktype=\"self-bookmark\">BorderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the border style of the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_CheckBoxes\" data-linktype=\"self-bookmark\">CheckBoxes</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether a check box appears next to each item in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_CheckedIndices\" data-linktype=\"self-bookmark\">CheckedIndices</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the indexes of the currently checked items in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_CheckedItems\" data-linktype=\"self-bookmark\">CheckedItems</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the currently checked items in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_Columns\" data-linktype=\"self-bookmark\">Columns</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of all column headers that appear in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_CreateParams\" data-linktype=\"self-bookmark\">CreateParams</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This property is not relevant for this class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_DefaultSize\" data-linktype=\"self-bookmark\">DefaultSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the default size of the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_DoubleBuffered\" data-linktype=\"self-bookmark\">DoubleBuffered</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_FocusedItem\" data-linktype=\"self-bookmark\">FocusedItem</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the item in the control that currently has focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ForeColor\" data-linktype=\"self-bookmark\">ForeColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the foreground color.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_FullRowSelect\" data-linktype=\"self-bookmark\">FullRowSelect</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether clicking an item selects all its subitems.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_GridLines\" data-linktype=\"self-bookmark\">GridLines</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether grid lines appear between the rows and columns containing the items and subitems in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_Groups\" data-linktype=\"self-bookmark\">Groups</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of <a class=\"xref\" href=\"system.windows.forms.listviewgroup\" data-linktype=\"relative-path\">ListViewGroup</a> objects assigned to the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_HeaderStyle\" data-linktype=\"self-bookmark\">HeaderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the column header style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_HideSelection\" data-linktype=\"self-bookmark\">HideSelection</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the selected item in the control remains highlighted when the control loses focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_HotTracking\" data-linktype=\"self-bookmark\">HotTracking</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the text of an item or subitem has the appearance of a hyperlink when the mouse pointer passes over it.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_HoverSelection\" data-linktype=\"self-bookmark\">HoverSelection</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether an item is automatically selected when the mouse pointer remains over the item for a few seconds.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_InsertionMark\" data-linktype=\"self-bookmark\">InsertionMark</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an object used to indicate the expected drop location when an item is dragged within a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_Items\" data-linktype=\"self-bookmark\">Items</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection containing all items in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_LabelEdit\" data-linktype=\"self-bookmark\">LabelEdit</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the user can edit the labels of items in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_LabelWrap\" data-linktype=\"self-bookmark\">LabelWrap</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether item labels wrap when items are displayed in the control as icons.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_LargeImageList\" data-linktype=\"self-bookmark\">LargeImageList</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> to use when displaying items as large icons in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ListViewItemSorter\" data-linktype=\"self-bookmark\">ListViewItemSorter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the sorting comparer for the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_MultiSelect\" data-linktype=\"self-bookmark\">MultiSelect</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether multiple items can be selected.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OwnerDraw\" data-linktype=\"self-bookmark\">OwnerDraw</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is drawn by the operating system or by code that you provide.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_Padding\" data-linktype=\"self-bookmark\">Padding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the space between the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control and its contents.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_RightToLeftLayout\" data-linktype=\"self-bookmark\">RightToLeftLayout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the control is laid out from right to left.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_Scrollable\" data-linktype=\"self-bookmark\">Scrollable</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether a scroll bar is added to the control when there is not enough room to display all items.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_SelectedIndices\" data-linktype=\"self-bookmark\">SelectedIndices</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the indexes of the selected items in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_SelectedItems\" data-linktype=\"self-bookmark\">SelectedItems</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the items that are selected in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ShowGroups\" data-linktype=\"self-bookmark\">ShowGroups</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether items are displayed in groups.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ShowItemToolTips\" data-linktype=\"self-bookmark\">ShowItemToolTips</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether ToolTips are shown for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects contained in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_SmallImageList\" data-linktype=\"self-bookmark\">SmallImageList</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> to use when displaying items as small icons in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_Sorting\" data-linktype=\"self-bookmark\">Sorting</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the sort order for items in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_StateImageList\" data-linktype=\"self-bookmark\">StateImageList</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> associated with application-defined states in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_Text\" data-linktype=\"self-bookmark\">Text</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This property is not relevant for this class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_TileSize\" data-linktype=\"self-bookmark\">TileSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the size of the tiles shown in tile view.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_TopItem\" data-linktype=\"self-bookmark\">TopItem</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the first visible item in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_UseCompatibleStateImageBehavior\" data-linktype=\"self-bookmark\">UseCompatibleStateImageBehavior</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> uses state image behavior that is compatible with the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE --> 1.1 or the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE --> 2.0.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_View\" data-linktype=\"self-bookmark\">View</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets how items are displayed in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_VirtualListSize\" data-linktype=\"self-bookmark\">VirtualListSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the number of <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects contained in the list when in virtual mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_VirtualMode\" data-linktype=\"self-bookmark\">VirtualMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether you have provided your own data-management operations for the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ArrangeIcons\" data-linktype=\"self-bookmark\">ArrangeIcons()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Arranges items in the control when they are displayed as icons based on the value of the <span class=\"xref\">stem.Windows.Forms.ListView.Alignment*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ArrangeIcons_System_Windows_Forms_ListViewAlignment_\" data-linktype=\"self-bookmark\">ArrangeIcons(ListViewAlignment)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Arranges items in the control when they are displayed as icons with a specified alignment setting.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_AutoResizeColumn_System_Int32_System_Windows_Forms_ColumnHeaderAutoResizeStyle_\" data-linktype=\"self-bookmark\">AutoResizeColumn(Int32,ColumnHeaderAutoResizeStyle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resizes the width of the given column as indicated by the resize style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_AutoResizeColumns_System_Windows_Forms_ColumnHeaderAutoResizeStyle_\" data-linktype=\"self-bookmark\">AutoResizeColumns(ColumnHeaderAutoResizeStyle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resizes the width of the columns as indicated by the resize style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_BeginUpdate\" data-linktype=\"self-bookmark\">BeginUpdate()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Prevents the control from drawing until the <span class=\"xref\">stem.Windows.Forms.ListView.EndUpdate*</span> method is called.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_Clear\" data-linktype=\"self-bookmark\">Clear()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all items and columns from the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_CreateHandle\" data-linktype=\"self-bookmark\">CreateHandle()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a handle for the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_EndUpdate\" data-linktype=\"self-bookmark\">EndUpdate()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resumes drawing of the list view control after drawing is suspended by the <span class=\"xref\">stem.Windows.Forms.ListView.BeginUpdate*</span> method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_EnsureVisible_System_Int32_\" data-linktype=\"self-bookmark\">EnsureVisible(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Ensures that the specified item is visible within the control, scrolling the contents of the control if necessary.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_FindItemWithText_System_String_\" data-linktype=\"self-bookmark\">FindItemWithText(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Finds the first <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> that begins with the specified text value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_FindItemWithText_System_String_System_Boolean_System_Int32_\" data-linktype=\"self-bookmark\">FindItemWithText(String,Boolean,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Finds the first <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> or <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a>, if indicated, that begins with the specified text value. The search starts at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_FindItemWithText_System_String_System_Boolean_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">FindItemWithText(String,Boolean,Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Finds the first <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> or <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a>, if indicated, that begins with the specified text value. The search starts at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_FindNearestItem_System_Windows_Forms_SearchDirectionHint_System_Drawing_Point_\" data-linktype=\"self-bookmark\">FindNearestItem(SearchDirectionHint,Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Finds the next item from the given point, searching in the specified direction</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_FindNearestItem_System_Windows_Forms_SearchDirectionHint_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">FindNearestItem(SearchDirectionHint,Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Finds the next item from the given x- and y-coordinates, searching in the specified direction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_GetItemAt_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">GetItemAt(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the item at the specified location.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_GetItemRect_System_Int32_\" data-linktype=\"self-bookmark\">GetItemRect(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the bounding rectangle for a specific item within the list view control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_GetItemRect_System_Int32_System_Windows_Forms_ItemBoundsPortion_\" data-linktype=\"self-bookmark\">GetItemRect(Int32,ItemBoundsPortion)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the specified portion of the bounding rectangle for a specific item within the list view control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_HitTest_System_Drawing_Point_\" data-linktype=\"self-bookmark\">HitTest(Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides item information, given a point.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_HitTest_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">HitTest(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides item information, given x- and y-coordinates.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_IsInputKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">IsInputKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnAfterLabelEdit_System_Windows_Forms_LabelEditEventArgs_\" data-linktype=\"self-bookmark\">OnAfterLabelEdit(LabelEditEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AfterLabelEdit\" data-linktype=\"relative-path\">AfterLabelEdit</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnBackgroundImageChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnBackgroundImageChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImageChanged\" data-linktype=\"relative-path\">BackgroundImageChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnBeforeLabelEdit_System_Windows_Forms_LabelEditEventArgs_\" data-linktype=\"self-bookmark\">OnBeforeLabelEdit(LabelEditEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_BeforeLabelEdit\" data-linktype=\"relative-path\">BeforeLabelEdit</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnCacheVirtualItems_System_Windows_Forms_CacheVirtualItemsEventArgs_\" data-linktype=\"self-bookmark\">OnCacheVirtualItems(CacheVirtualItemsEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CacheVirtualItems\" data-linktype=\"relative-path\">CacheVirtualItems</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnColumnClick_System_Windows_Forms_ColumnClickEventArgs_\" data-linktype=\"self-bookmark\">OnColumnClick(ColumnClickEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ColumnClick\" data-linktype=\"relative-path\">ColumnClick</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnColumnReordered_System_Windows_Forms_ColumnReorderedEventArgs_\" data-linktype=\"self-bookmark\">OnColumnReordered(ColumnReorderedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ColumnReordered\" data-linktype=\"relative-path\">ColumnReordered</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnColumnWidthChanged_System_Windows_Forms_ColumnWidthChangedEventArgs_\" data-linktype=\"self-bookmark\">OnColumnWidthChanged(ColumnWidthChangedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ColumnWidthChanged\" data-linktype=\"relative-path\">ColumnWidthChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnColumnWidthChanging_System_Windows_Forms_ColumnWidthChangingEventArgs_\" data-linktype=\"self-bookmark\">OnColumnWidthChanging(ColumnWidthChangingEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ColumnWidthChanging\" data-linktype=\"relative-path\">ColumnWidthChanging</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnDrawColumnHeader_System_Windows_Forms_DrawListViewColumnHeaderEventArgs_\" data-linktype=\"self-bookmark\">OnDrawColumnHeader(DrawListViewColumnHeaderEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawColumnHeader\" data-linktype=\"relative-path\">DrawColumnHeader</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnDrawItem_System_Windows_Forms_DrawListViewItemEventArgs_\" data-linktype=\"self-bookmark\">OnDrawItem(DrawListViewItemEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">DrawItem</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnDrawSubItem_System_Windows_Forms_DrawListViewSubItemEventArgs_\" data-linktype=\"self-bookmark\">OnDrawSubItem(DrawListViewSubItemEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">DrawSubItem</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnFontChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnFontChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <code>FontChanged</code> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnHandleCreated_System_EventArgs_\" data-linktype=\"self-bookmark\">OnHandleCreated(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleCreated\" data-linktype=\"relative-path\">HandleCreated</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnHandleDestroyed_System_EventArgs_\" data-linktype=\"self-bookmark\">OnHandleDestroyed(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleDestroyed\" data-linktype=\"relative-path\">HandleDestroyed</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnItemActivate_System_EventArgs_\" data-linktype=\"self-bookmark\">OnItemActivate(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemActivate\" data-linktype=\"relative-path\">ItemActivate</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnItemCheck_System_Windows_Forms_ItemCheckEventArgs_\" data-linktype=\"self-bookmark\">OnItemCheck(ItemCheckEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemCheck\" data-linktype=\"relative-path\">ItemCheck</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnItemChecked_System_Windows_Forms_ItemCheckedEventArgs_\" data-linktype=\"self-bookmark\">OnItemChecked(ItemCheckedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemChecked\" data-linktype=\"relative-path\">ItemChecked</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnItemDrag_System_Windows_Forms_ItemDragEventArgs_\" data-linktype=\"self-bookmark\">OnItemDrag(ItemDragEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemDrag\" data-linktype=\"relative-path\">ItemDrag</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnItemMouseHover_System_Windows_Forms_ListViewItemMouseHoverEventArgs_\" data-linktype=\"self-bookmark\">OnItemMouseHover(ListViewItemMouseHoverEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemMouseHover\" data-linktype=\"relative-path\">ItemMouseHover</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnItemSelectionChanged_System_Windows_Forms_ListViewItemSelectionChangedEventArgs_\" data-linktype=\"self-bookmark\">OnItemSelectionChanged(ListViewItemSelectionChangedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemSelectionChanged\" data-linktype=\"relative-path\">ItemSelectionChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnMouseHover_System_EventArgs_\" data-linktype=\"self-bookmark\">OnMouseHover(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnMouseLeave_System_EventArgs_\" data-linktype=\"self-bookmark\">OnMouseLeave(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnParentChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnParentChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ParentChanged\" data-linktype=\"relative-path\">ParentChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnResize_System_EventArgs_\" data-linktype=\"self-bookmark\">OnResize(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnRetrieveVirtualItem_System_Windows_Forms_RetrieveVirtualItemEventArgs_\" data-linktype=\"self-bookmark\">OnRetrieveVirtualItem(RetrieveVirtualItemEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_RetrieveVirtualItem\" data-linktype=\"relative-path\">RetrieveVirtualItem</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnRightToLeftLayoutChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnRightToLeftLayoutChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_RightToLeftLayoutChanged\" data-linktype=\"relative-path\">RightToLeftLayoutChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnSearchForVirtualItem_System_Windows_Forms_SearchForVirtualItemEventArgs_\" data-linktype=\"self-bookmark\">OnSearchForVirtualItem(SearchForVirtualItemEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SearchForVirtualItem\" data-linktype=\"relative-path\">SearchForVirtualItem</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnSelectedIndexChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnSelectedIndexChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedIndexChanged\" data-linktype=\"relative-path\">SelectedIndexChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnSystemColorsChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnSystemColorsChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SystemColorsChanged\" data-linktype=\"relative-path\">SystemColorsChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_OnVirtualItemsSelectionRangeChanged_System_Windows_Forms_ListViewVirtualItemsSelectionRangeChangedEventArgs_\" data-linktype=\"self-bookmark\">OnVirtualItemsSelectionRangeChanged(ListViewVirtualItemsSelectionRangeChangedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_VirtualItemsSelectionRangeChanged\" data-linktype=\"relative-path\">VirtualItemsSelectionRangeChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_RealizeProperties\" data-linktype=\"self-bookmark\">RealizeProperties()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes the properties of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control that manage the appearance of the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_RedrawItems_System_Int32_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">RedrawItems(Int32,Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Forces a range of <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects to be redrawn.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_Sort\" data-linktype=\"self-bookmark\">Sort()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sorts the items of the list view.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string representation of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_UpdateExtendedStyles\" data-linktype=\"self-bookmark\">UpdateExtendedStyles()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Updates the extended styles applied to the list view control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_WndProc_System_Windows_Forms_Message__\" data-linktype=\"self-bookmark\">WndProc(Message)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Overrides <span class=\"xref\">stem.Windows.Forms.Control.WndProc*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_AfterLabelEdit\" data-linktype=\"self-bookmark\">AfterLabelEdit</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the label for an item is edited by the user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_BackgroundImageLayoutChanged\" data-linktype=\"self-bookmark\">BackgroundImageLayoutChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.ListView.BackgroundImageLayout*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_BeforeLabelEdit\" data-linktype=\"self-bookmark\">BeforeLabelEdit</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user starts editing the label of an item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_CacheVirtualItems\" data-linktype=\"self-bookmark\">CacheVirtualItems</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the contents of the display area for a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> in virtual mode has changed, and the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> determines that a new range of items is needed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ColumnClick\" data-linktype=\"self-bookmark\">ColumnClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user clicks a column header within the list view control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ColumnReordered\" data-linktype=\"self-bookmark\">ColumnReordered</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the column header order is changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ColumnWidthChanged\" data-linktype=\"self-bookmark\">ColumnWidthChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs after the width of a column is successfully changed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ColumnWidthChanging\" data-linktype=\"self-bookmark\">ColumnWidthChanging</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the width of a column is changing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_DrawColumnHeader\" data-linktype=\"self-bookmark\">DrawColumnHeader</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the details view of a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is drawn and the <span class=\"xref\">stem.Windows.Forms.ListView.OwnerDraw*</span> property is set to <code>true</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"self-bookmark\">DrawItem</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is drawn and the <span class=\"xref\">stem.Windows.Forms.ListView.OwnerDraw*</span> property is set to <code>true</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"self-bookmark\">DrawSubItem</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the details view of a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is drawn and the <span class=\"xref\">stem.Windows.Forms.ListView.OwnerDraw*</span> property is set to <code>true</code>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ItemActivate\" data-linktype=\"self-bookmark\">ItemActivate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an item is activated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ItemCheck\" data-linktype=\"self-bookmark\">ItemCheck</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the check state of an item changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ItemChecked\" data-linktype=\"self-bookmark\">ItemChecked</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the checked state of an item changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ItemDrag\" data-linktype=\"self-bookmark\">ItemDrag</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user begins dragging an item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ItemMouseHover\" data-linktype=\"self-bookmark\">ItemMouseHover</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the mouse hovers over an item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_ItemSelectionChanged\" data-linktype=\"self-bookmark\">ItemSelectionChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the selection state of an item changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_PaddingChanged\" data-linktype=\"self-bookmark\">PaddingChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.ListView.Padding*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_Paint\" data-linktype=\"self-bookmark\">Paint</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is painted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_RetrieveVirtualItem\" data-linktype=\"self-bookmark\">RetrieveVirtualItem</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is in virtual mode and requires a <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_RightToLeftLayoutChanged\" data-linktype=\"self-bookmark\">RightToLeftLayoutChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.ListView.RightToLeftLayout*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_SearchForVirtualItem\" data-linktype=\"self-bookmark\">SearchForVirtualItem</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is in virtual mode and a search is taking place.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_SelectedIndexChanged\" data-linktype=\"self-bookmark\">SelectedIndexChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.ListView.SelectedIndices*</span> collection changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_TextChanged\" data-linktype=\"self-bookmark\">TextChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.ListView.Text*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ListView_VirtualItemsSelectionRangeChanged\" data-linktype=\"self-bookmark\">VirtualItemsSelectionRangeChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is in virtual mode and the selection state of a range of items has changed.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView__ctor\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ListView()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ListView ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control with three <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects specified and three <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> objects specified for each item. The example also creates <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects to display the subitems in details view. Two <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are also created in the code example to provide images for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects. These <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are added to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LargeImageList_\" data-linktype=\"relative-path\">LargeImageList</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SmallImageList_\" data-linktype=\"relative-path\">SmallImageList</a> properties. The example uses the following properties in creating the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LabelEdit_\" data-linktype=\"relative-path\">LabelEdit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AllowColumnReorder_\" data-linktype=\"relative-path\">AllowColumnReorder</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GridLines_\" data-linktype=\"relative-path\">GridLines</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sorting_\" data-linktype=\"relative-path\">Sorting</a>  \n\n<p>This example requires that you have added the code to a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and call the method created in the example from the constructor or another method on the form. The example also requires that images named <code>MySmallImage1</code>, <code>MySmallImage2</code>, <code>MyLargeImage1</code>, and <code>MyLargeImage2</code> are located in the root directory of drive C.  </p>\n<pre><code class=\"lang-cpp\" name=\"ListViewExample#1\">private:\n   void CreateMyListView()\n   {\n      // Create a new ListView control.\n      ListView^ listView1 = gcnew ListView;\n      listView1-&gt;Bounds = Rectangle(Point(10,10),System::Drawing::Size( 300, 200 ));\n\n      // Set the view to show details.\n      listView1-&gt;View = View::Details;\n\n      // Allow the user to edit item text.\n      listView1-&gt;LabelEdit = true;\n\n      // Allow the user to rearrange columns.\n      listView1-&gt;AllowColumnReorder = true;\n\n      // Display check boxes.\n      listView1-&gt;CheckBoxes = true;\n\n      // Select the item and subitems when selection is made.\n      listView1-&gt;FullRowSelect = true;\n\n      // Display grid lines.\n      listView1-&gt;GridLines = true;\n\n      // Sort the items in the list in ascending order.\n      listView1-&gt;Sorting = SortOrder::Ascending;\n\n      // Create three items and three sets of subitems for each item.\n      ListViewItem^ item1 = gcnew ListViewItem( &quot;item1&quot;,0 );\n\n      // Place a check mark next to the item.\n      item1-&gt;Checked = true;\n      item1-&gt;SubItems-&gt;Add( &quot;1&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;2&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;3&quot; );\n      ListViewItem^ item2 = gcnew ListViewItem( &quot;item2&quot;,1 );\n      item2-&gt;SubItems-&gt;Add( &quot;4&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;5&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;6&quot; );\n      ListViewItem^ item3 = gcnew ListViewItem( &quot;item3&quot;,0 );\n\n      // Place a check mark next to the item.\n      item3-&gt;Checked = true;\n      item3-&gt;SubItems-&gt;Add( &quot;7&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;8&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;9&quot; );\n\n      // Create columns for the items and subitems.\n      // Width of -2 indicates auto-size.\n      listView1-&gt;Columns-&gt;Add( &quot;Item Column&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 2&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 3&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 4&quot;, -2, HorizontalAlignment::Center );\n\n      //Add the items to the ListView.\n      array&lt;ListViewItem^&gt;^temp1 = {item1,item2,item3};\n      listView1-&gt;Items-&gt;AddRange( temp1 );\n\n      // Create two ImageList objects.\n      ImageList^ imageListSmall = gcnew ImageList;\n      ImageList^ imageListLarge = gcnew ImageList;\n\n      // Initialize the ImageList objects with bitmaps.\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage1.bmp&quot; ) );\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage2.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage1.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage2.bmp&quot; ) );\n\n      //Assign the ImageList objects to the ListView.\n      listView1-&gt;LargeImageList = imageListLarge;\n      listView1-&gt;SmallImageList = imageListSmall;\n      \n      // Add the ListView to the control collection.\n      this-&gt;Controls-&gt;Add( listView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"ListViewExample#1\">\t\tprivate void CreateMyListView()\n\t\t{\n\t\t\t// Create a new ListView control.\n\t\t\tListView listView1 = new ListView();\n\t\t\tlistView1.Bounds = new Rectangle(new Point(10,10), new Size(300,200));\n\n\t\t\t// Set the view to show details.\n\t\t\tlistView1.View = View.Details;\n\t\t\t// Allow the user to edit item text.\n\t\t\tlistView1.LabelEdit = true;\n\t\t\t// Allow the user to rearrange columns.\n\t\t\tlistView1.AllowColumnReorder = true;\n\t\t\t// Display check boxes.\n\t\t\tlistView1.CheckBoxes = true;\n\t\t\t// Select the item and subitems when selection is made.\n\t\t\tlistView1.FullRowSelect = true;\n\t\t\t// Display grid lines.\n\t\t\tlistView1.GridLines = true;\n\t\t\t// Sort the items in the list in ascending order.\n\t\t\tlistView1.Sorting = SortOrder.Ascending;\n            \t\t\t\n\t\t\t// Create three items and three sets of subitems for each item.\n\t\t\tListViewItem item1 = new ListViewItem(&quot;item1&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem1.Checked = true;\n\t\t\titem1.SubItems.Add(&quot;1&quot;);\n\t\t\titem1.SubItems.Add(&quot;2&quot;);\n\t\t\titem1.SubItems.Add(&quot;3&quot;);\n\t\t\tListViewItem item2 = new ListViewItem(&quot;item2&quot;,1);\n\t\t\titem2.SubItems.Add(&quot;4&quot;);\n\t\t\titem2.SubItems.Add(&quot;5&quot;);\n\t\t\titem2.SubItems.Add(&quot;6&quot;);\n\t\t\tListViewItem item3 = new ListViewItem(&quot;item3&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem3.Checked = true;\n\t\t\titem3.SubItems.Add(&quot;7&quot;);\n\t\t\titem3.SubItems.Add(&quot;8&quot;);\n\t\t\titem3.SubItems.Add(&quot;9&quot;);\n\n\t\t\t// Create columns for the items and subitems.\n\t\t\t// Width of -2 indicates auto-size.\n\t\t\tlistView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center);\n\n\t\t\t//Add the items to the ListView.\n            \t\tlistView1.Items.AddRange(new ListViewItem[]{item1,item2,item3});\n\n\t\t\t// Create two ImageList objects.\n\t\t\tImageList imageListSmall = new ImageList();\n\t\t\tImageList imageListLarge = new ImageList();\n\n\t\t\t// Initialize the ImageList objects with bitmaps.\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage1.bmp&quot;));\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage2.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage1.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage2.bmp&quot;));\n\n\t\t\t//Assign the ImageList objects to the ListView.\n\t\t\tlistView1.LargeImageList = imageListLarge;\n\t\t\tlistView1.SmallImageList = imageListSmall;\n\n\t\t\t// Add the ListView to the control collection.\n\t\t\tthis.Controls.Add(listView1);\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewExample#1\">        Private Sub CreateMyListView()\n            &#39; Create a new ListView control.\n            Dim listView1 As New ListView()\n            listView1.Bounds = New Rectangle(New Point(10, 10), New Size(300, 200))\n\n            &#39; Set the view to show details.\n            listView1.View = View.Details\n            &#39; Allow the user to edit item text.\n            listView1.LabelEdit = True\n            &#39; Allow the user to rearrange columns.\n            listView1.AllowColumnReorder = True\n            &#39; Display check boxes.\n            listView1.CheckBoxes = True\n            &#39; Select the item and subitems when selection is made.\n            listView1.FullRowSelect = True\n            &#39; Display grid lines.\n            listView1.GridLines = True\n            &#39; Sort the items in the list in ascending order.\n            listView1.Sorting = SortOrder.Ascending\n\n            &#39; Create three items and three sets of subitems for each item.\n            Dim item1 As New ListViewItem(&quot;item1&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item1.Checked = True\n            item1.SubItems.Add(&quot;1&quot;)\n            item1.SubItems.Add(&quot;2&quot;)\n            item1.SubItems.Add(&quot;3&quot;)\n            Dim item2 As New ListViewItem(&quot;item2&quot;, 1)\n            item2.SubItems.Add(&quot;4&quot;)\n            item2.SubItems.Add(&quot;5&quot;)\n            item2.SubItems.Add(&quot;6&quot;)\n            Dim item3 As New ListViewItem(&quot;item3&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item3.Checked = True\n            item3.SubItems.Add(&quot;7&quot;)\n            item3.SubItems.Add(&quot;8&quot;)\n            item3.SubItems.Add(&quot;9&quot;)\n\n            &#39; Create columns for the items and subitems.\n            &#39; Width of -2 indicates auto-size.\n            listView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center)\n\n            &#39;Add the items to the ListView.\n            listView1.Items.AddRange(New ListViewItem() {item1, item2, item3})\n\n            &#39; Create two ImageList objects.\n            Dim imageListSmall As New ImageList()\n            Dim imageListLarge As New ImageList()\n\n            &#39; Initialize the ImageList objects with bitmaps.\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage1.bmp&quot;))\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage2.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage1.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage2.bmp&quot;))\n\n            &#39;Assign the ImageList objects to the ListView.\n            listView1.LargeImageList = imageListLarge\n            listView1.SmallImageList = imageListSmall\n\n            &#39; Add the ListView to the control collection.\n            Me.Controls.Add(listView1)\n        End Sub &#39;CreateMyListView\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_Activation\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_Activation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Activation</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the type of action the user must take to activate an item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ItemActivation Activation { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.itemactivation\" data-linktype=\"relative-path\">ItemActivation</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.itemactivation\" data-linktype=\"relative-path\">ItemActivation</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.itemactivation\" data-linktype=\"relative-path\">ItemActivation</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value specified is not one of the <a class=\"xref\" href=\"system.windows.forms.itemactivation\" data-linktype=\"relative-path\">ItemActivation</a> members.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Activation property allows you to specify how the user will activate an item in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. Activating an item in a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> differs from just selecting an item. When an item is activated, an action is typically performed in an event handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemActivate\" data-linktype=\"relative-path\">ItemActivate</a> event. For example, when an item is activated you might open a file or display a dialog box that allows the item to be edited. Typically, an item is double-clicked by the user to activate it. If the Activation property is set to <a class=\"xref\" href=\"system.windows.forms.itemactivation\" data-linktype=\"relative-path\">ItemActivation</a>, clicking the item one time activates it. Setting the Activation property to <a class=\"xref\" href=\"system.windows.forms.itemactivation\" data-linktype=\"relative-path\">ItemActivation</a> differs from the standard double-click because the two clicks can have any duration between them.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the Activation property is set to <a class=\"xref\" href=\"system.windows.forms.itemactivation\" data-linktype=\"relative-path\">ItemActivation</a> or <a class=\"xref\" href=\"system.windows.forms.itemactivation\" data-linktype=\"relative-path\">ItemActivation</a>, label editing will not be allowed regardless of the value of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LabelEdit_\" data-linktype=\"relative-path\">LabelEdit</a> property.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_Alignment\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_Alignment_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Alignment</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the alignment of items in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListViewAlignment Alignment { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewalignment\" data-linktype=\"relative-path\">ListViewAlignment</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.listviewalignment\" data-linktype=\"relative-path\">ListViewAlignment</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.listviewalignment\" data-linktype=\"relative-path\">ListViewAlignment</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value specified is not one of the <a class=\"xref\" href=\"system.windows.forms.listviewalignment\" data-linktype=\"relative-path\">ListViewAlignment</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Alignment property only affects alignment when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property has no effect with the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_AllowColumnReorder\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_AllowColumnReorder_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowColumnReorder</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the user can drag column headers to reorder columns in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowColumnReorder { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if drag-and-drop column reordering is allowed; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Setting the value of the AllowColumnReorder property has no effect unless the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>. You can use this property to allow users to reposition columns in the control at run time. When the AllowColumnReorder property is set to <code>true</code>, users can position the columns in the control to display the item and its subitems in a way that meets their needs within your application.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control with three <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects specified and three <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> objects specified for each item. The example also creates <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects to display the subitems in details view. Two <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are also created in the code example to provide images for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects. These <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are added to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LargeImageList_\" data-linktype=\"relative-path\">LargeImageList</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SmallImageList_\" data-linktype=\"relative-path\">SmallImageList</a> properties. The example uses the following properties in creating the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LabelEdit_\" data-linktype=\"relative-path\">LabelEdit</a>  \n</li>\n<li><p>AllowColumnReorder  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GridLines_\" data-linktype=\"relative-path\">GridLines</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sorting_\" data-linktype=\"relative-path\">Sorting</a>  \n\n<p>This example requires that you have added the code to a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and call the method created in the example from the constructor or another method on the form. The example also requires that images named <code>MySmallImage1</code>, <code>MySmallImage2</code>, <code>MyLargeImage1</code>, and <code>MyLargeImage2</code> are located in the root directory of drive C.  </p>\n<pre><code class=\"lang-cpp\" name=\"ListViewExample#1\">private:\n   void CreateMyListView()\n   {\n      // Create a new ListView control.\n      ListView^ listView1 = gcnew ListView;\n      listView1-&gt;Bounds = Rectangle(Point(10,10),System::Drawing::Size( 300, 200 ));\n\n      // Set the view to show details.\n      listView1-&gt;View = View::Details;\n\n      // Allow the user to edit item text.\n      listView1-&gt;LabelEdit = true;\n\n      // Allow the user to rearrange columns.\n      listView1-&gt;AllowColumnReorder = true;\n\n      // Display check boxes.\n      listView1-&gt;CheckBoxes = true;\n\n      // Select the item and subitems when selection is made.\n      listView1-&gt;FullRowSelect = true;\n\n      // Display grid lines.\n      listView1-&gt;GridLines = true;\n\n      // Sort the items in the list in ascending order.\n      listView1-&gt;Sorting = SortOrder::Ascending;\n\n      // Create three items and three sets of subitems for each item.\n      ListViewItem^ item1 = gcnew ListViewItem( &quot;item1&quot;,0 );\n\n      // Place a check mark next to the item.\n      item1-&gt;Checked = true;\n      item1-&gt;SubItems-&gt;Add( &quot;1&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;2&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;3&quot; );\n      ListViewItem^ item2 = gcnew ListViewItem( &quot;item2&quot;,1 );\n      item2-&gt;SubItems-&gt;Add( &quot;4&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;5&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;6&quot; );\n      ListViewItem^ item3 = gcnew ListViewItem( &quot;item3&quot;,0 );\n\n      // Place a check mark next to the item.\n      item3-&gt;Checked = true;\n      item3-&gt;SubItems-&gt;Add( &quot;7&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;8&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;9&quot; );\n\n      // Create columns for the items and subitems.\n      // Width of -2 indicates auto-size.\n      listView1-&gt;Columns-&gt;Add( &quot;Item Column&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 2&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 3&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 4&quot;, -2, HorizontalAlignment::Center );\n\n      //Add the items to the ListView.\n      array&lt;ListViewItem^&gt;^temp1 = {item1,item2,item3};\n      listView1-&gt;Items-&gt;AddRange( temp1 );\n\n      // Create two ImageList objects.\n      ImageList^ imageListSmall = gcnew ImageList;\n      ImageList^ imageListLarge = gcnew ImageList;\n\n      // Initialize the ImageList objects with bitmaps.\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage1.bmp&quot; ) );\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage2.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage1.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage2.bmp&quot; ) );\n\n      //Assign the ImageList objects to the ListView.\n      listView1-&gt;LargeImageList = imageListLarge;\n      listView1-&gt;SmallImageList = imageListSmall;\n      \n      // Add the ListView to the control collection.\n      this-&gt;Controls-&gt;Add( listView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"ListViewExample#1\">\t\tprivate void CreateMyListView()\n\t\t{\n\t\t\t// Create a new ListView control.\n\t\t\tListView listView1 = new ListView();\n\t\t\tlistView1.Bounds = new Rectangle(new Point(10,10), new Size(300,200));\n\n\t\t\t// Set the view to show details.\n\t\t\tlistView1.View = View.Details;\n\t\t\t// Allow the user to edit item text.\n\t\t\tlistView1.LabelEdit = true;\n\t\t\t// Allow the user to rearrange columns.\n\t\t\tlistView1.AllowColumnReorder = true;\n\t\t\t// Display check boxes.\n\t\t\tlistView1.CheckBoxes = true;\n\t\t\t// Select the item and subitems when selection is made.\n\t\t\tlistView1.FullRowSelect = true;\n\t\t\t// Display grid lines.\n\t\t\tlistView1.GridLines = true;\n\t\t\t// Sort the items in the list in ascending order.\n\t\t\tlistView1.Sorting = SortOrder.Ascending;\n            \t\t\t\n\t\t\t// Create three items and three sets of subitems for each item.\n\t\t\tListViewItem item1 = new ListViewItem(&quot;item1&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem1.Checked = true;\n\t\t\titem1.SubItems.Add(&quot;1&quot;);\n\t\t\titem1.SubItems.Add(&quot;2&quot;);\n\t\t\titem1.SubItems.Add(&quot;3&quot;);\n\t\t\tListViewItem item2 = new ListViewItem(&quot;item2&quot;,1);\n\t\t\titem2.SubItems.Add(&quot;4&quot;);\n\t\t\titem2.SubItems.Add(&quot;5&quot;);\n\t\t\titem2.SubItems.Add(&quot;6&quot;);\n\t\t\tListViewItem item3 = new ListViewItem(&quot;item3&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem3.Checked = true;\n\t\t\titem3.SubItems.Add(&quot;7&quot;);\n\t\t\titem3.SubItems.Add(&quot;8&quot;);\n\t\t\titem3.SubItems.Add(&quot;9&quot;);\n\n\t\t\t// Create columns for the items and subitems.\n\t\t\t// Width of -2 indicates auto-size.\n\t\t\tlistView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center);\n\n\t\t\t//Add the items to the ListView.\n            \t\tlistView1.Items.AddRange(new ListViewItem[]{item1,item2,item3});\n\n\t\t\t// Create two ImageList objects.\n\t\t\tImageList imageListSmall = new ImageList();\n\t\t\tImageList imageListLarge = new ImageList();\n\n\t\t\t// Initialize the ImageList objects with bitmaps.\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage1.bmp&quot;));\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage2.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage1.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage2.bmp&quot;));\n\n\t\t\t//Assign the ImageList objects to the ListView.\n\t\t\tlistView1.LargeImageList = imageListLarge;\n\t\t\tlistView1.SmallImageList = imageListSmall;\n\n\t\t\t// Add the ListView to the control collection.\n\t\t\tthis.Controls.Add(listView1);\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewExample#1\">        Private Sub CreateMyListView()\n            &#39; Create a new ListView control.\n            Dim listView1 As New ListView()\n            listView1.Bounds = New Rectangle(New Point(10, 10), New Size(300, 200))\n\n            &#39; Set the view to show details.\n            listView1.View = View.Details\n            &#39; Allow the user to edit item text.\n            listView1.LabelEdit = True\n            &#39; Allow the user to rearrange columns.\n            listView1.AllowColumnReorder = True\n            &#39; Display check boxes.\n            listView1.CheckBoxes = True\n            &#39; Select the item and subitems when selection is made.\n            listView1.FullRowSelect = True\n            &#39; Display grid lines.\n            listView1.GridLines = True\n            &#39; Sort the items in the list in ascending order.\n            listView1.Sorting = SortOrder.Ascending\n\n            &#39; Create three items and three sets of subitems for each item.\n            Dim item1 As New ListViewItem(&quot;item1&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item1.Checked = True\n            item1.SubItems.Add(&quot;1&quot;)\n            item1.SubItems.Add(&quot;2&quot;)\n            item1.SubItems.Add(&quot;3&quot;)\n            Dim item2 As New ListViewItem(&quot;item2&quot;, 1)\n            item2.SubItems.Add(&quot;4&quot;)\n            item2.SubItems.Add(&quot;5&quot;)\n            item2.SubItems.Add(&quot;6&quot;)\n            Dim item3 As New ListViewItem(&quot;item3&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item3.Checked = True\n            item3.SubItems.Add(&quot;7&quot;)\n            item3.SubItems.Add(&quot;8&quot;)\n            item3.SubItems.Add(&quot;9&quot;)\n\n            &#39; Create columns for the items and subitems.\n            &#39; Width of -2 indicates auto-size.\n            listView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center)\n\n            &#39;Add the items to the ListView.\n            listView1.Items.AddRange(New ListViewItem() {item1, item2, item3})\n\n            &#39; Create two ImageList objects.\n            Dim imageListSmall As New ImageList()\n            Dim imageListLarge As New ImageList()\n\n            &#39; Initialize the ImageList objects with bitmaps.\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage1.bmp&quot;))\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage2.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage1.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage2.bmp&quot;))\n\n            &#39;Assign the ImageList objects to the ListView.\n            listView1.LargeImageList = imageListLarge\n            listView1.SmallImageList = imageListSmall\n\n            &#39; Add the ListView to the control collection.\n            Me.Controls.Add(listView1)\n        End Sub &#39;CreateMyListView\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_AutoArrange\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_AutoArrange_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoArrange</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets whether icons are automatically kept arranged.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AutoArrange { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if icons are automatically kept arranged and snapped to the grid; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The AutoArrange property only arranges items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>. To change the alignment of items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control, use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Alignment_\" data-linktype=\"relative-path\">Alignment</a> property. You can use AutoArrange to ensure that all items in your <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control are automatically arranged to avoid overlapping at run time.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_BackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_BackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the background color.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Drawing.Color BackColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> of the background.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_BackgroundImageLayout\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_BackgroundImageLayout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackgroundImageLayout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value specified is not one of the <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property has no effect on the layout of the background image of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control, therefore it is not shown in the designer or by IntelliSense.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_BackgroundImageTiled\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_BackgroundImageTiled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackgroundImageTiled</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the background image of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> should be tiled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool BackgroundImageTiled { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the background image of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> should be tiled; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BackgroundImageTiled property returns <code>false</code> if an image is not set.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_BorderStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_BorderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BorderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the border style of the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.BorderStyle BorderStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.borderstyle\" data-linktype=\"relative-path\">BorderStyle</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.borderstyle\" data-linktype=\"relative-path\">BorderStyle</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.borderstyle\" data-linktype=\"relative-path\">BorderStyle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value specified is not one of the <a class=\"xref\" href=\"system.windows.forms.borderstyle\" data-linktype=\"relative-path\">BorderStyle</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the BorderStyle property to change the border style of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control to match the border style settings of other controls on the form. For example, if none of the other controls on your form displays a border, you can set the BorderStyle property of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control to <a class=\"xref\" href=\"system.windows.forms.borderstyle\" data-linktype=\"relative-path\">BorderStyle</a> to match the other controls.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_CheckBoxes\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_CheckBoxes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckBoxes</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether a check box appears next to each item in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CheckBoxes { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a check box appears next to each item in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CheckBoxes property allows you to display a check box next to each item in the list. This enables your application to display a list of items (and subitems if the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <code>View.Details</code>) that the user can select by clicking the check box. The CheckBoxes property offers a way to select multiple items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control without using the CTRL key. Depending on your application, using check boxes to select items rather than the standard multiple selection method may be easier for the user. Even if the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_MultiSelect_\" data-linktype=\"relative-path\">MultiSelect</a> property of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is set to <code>false</code>, you can still display checkboxes and provide multiple selection capabilities to the user. This feature can be useful if you do not want multiple items to be selected yet still want to allow the user to choose multiple items from the list to perform an operation within your application.  </p>\n<p> To determine when an item has been checked, create an event handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemCheck\" data-linktype=\"relative-path\">ItemCheck</a> event. To get all the items that are checked in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>, use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckedItems_\" data-linktype=\"relative-path\">CheckedItems</a> property to access the <a class=\"xref\" href=\"system.windows.forms.listview.checkedindexcollection\" data-linktype=\"relative-path\">ListView+CheckedIndexCollection</a> for the control. To get the indexes of all items that are checked in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>, use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckedIndices_\" data-linktype=\"relative-path\">CheckedIndices</a> property.  </p>\n<p> If an <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> is specified in the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_StateImageList_\" data-linktype=\"relative-path\">StateImageList</a> property, the images at index positions 0 and 1 in the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> are displayed instead of the check box. The image at index position 0 is displayed instead of the unchecked check box, and the image at index position 1 is displayed instead of the checked check box.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When you set this property to <code>true</code>, the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemCheck\" data-linktype=\"relative-path\">ItemCheck</a> event occurs.  </p>\n<p> Check boxes are not displayed when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control with three <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects specified and three <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> objects specified for each item. The example also creates <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects to display the subitems in details view. Two <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are also created in the code example to provide images for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects. These <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are added to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LargeImageList_\" data-linktype=\"relative-path\">LargeImageList</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SmallImageList_\" data-linktype=\"relative-path\">SmallImageList</a> properties. The example uses the following properties in creating the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LabelEdit_\" data-linktype=\"relative-path\">LabelEdit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AllowColumnReorder_\" data-linktype=\"relative-path\">AllowColumnReorder</a>  \n</li>\n<li><p>CheckBoxes  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GridLines_\" data-linktype=\"relative-path\">GridLines</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sorting_\" data-linktype=\"relative-path\">Sorting</a>  \n\n<p>This example requires that you have added the code to a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and call the method created in the example from the constructor or another method on the form. The example also requires that images named <code>MySmallImage1</code>, <code>MySmallImage2</code>, <code>MyLargeImage1</code>, and <code>MyLargeImage2</code> are located in the root directory of drive C.  </p>\n<pre><code class=\"lang-cpp\" name=\"ListViewExample#1\">private:\n   void CreateMyListView()\n   {\n      // Create a new ListView control.\n      ListView^ listView1 = gcnew ListView;\n      listView1-&gt;Bounds = Rectangle(Point(10,10),System::Drawing::Size( 300, 200 ));\n\n      // Set the view to show details.\n      listView1-&gt;View = View::Details;\n\n      // Allow the user to edit item text.\n      listView1-&gt;LabelEdit = true;\n\n      // Allow the user to rearrange columns.\n      listView1-&gt;AllowColumnReorder = true;\n\n      // Display check boxes.\n      listView1-&gt;CheckBoxes = true;\n\n      // Select the item and subitems when selection is made.\n      listView1-&gt;FullRowSelect = true;\n\n      // Display grid lines.\n      listView1-&gt;GridLines = true;\n\n      // Sort the items in the list in ascending order.\n      listView1-&gt;Sorting = SortOrder::Ascending;\n\n      // Create three items and three sets of subitems for each item.\n      ListViewItem^ item1 = gcnew ListViewItem( &quot;item1&quot;,0 );\n\n      // Place a check mark next to the item.\n      item1-&gt;Checked = true;\n      item1-&gt;SubItems-&gt;Add( &quot;1&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;2&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;3&quot; );\n      ListViewItem^ item2 = gcnew ListViewItem( &quot;item2&quot;,1 );\n      item2-&gt;SubItems-&gt;Add( &quot;4&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;5&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;6&quot; );\n      ListViewItem^ item3 = gcnew ListViewItem( &quot;item3&quot;,0 );\n\n      // Place a check mark next to the item.\n      item3-&gt;Checked = true;\n      item3-&gt;SubItems-&gt;Add( &quot;7&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;8&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;9&quot; );\n\n      // Create columns for the items and subitems.\n      // Width of -2 indicates auto-size.\n      listView1-&gt;Columns-&gt;Add( &quot;Item Column&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 2&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 3&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 4&quot;, -2, HorizontalAlignment::Center );\n\n      //Add the items to the ListView.\n      array&lt;ListViewItem^&gt;^temp1 = {item1,item2,item3};\n      listView1-&gt;Items-&gt;AddRange( temp1 );\n\n      // Create two ImageList objects.\n      ImageList^ imageListSmall = gcnew ImageList;\n      ImageList^ imageListLarge = gcnew ImageList;\n\n      // Initialize the ImageList objects with bitmaps.\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage1.bmp&quot; ) );\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage2.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage1.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage2.bmp&quot; ) );\n\n      //Assign the ImageList objects to the ListView.\n      listView1-&gt;LargeImageList = imageListLarge;\n      listView1-&gt;SmallImageList = imageListSmall;\n      \n      // Add the ListView to the control collection.\n      this-&gt;Controls-&gt;Add( listView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"ListViewExample#1\">\t\tprivate void CreateMyListView()\n\t\t{\n\t\t\t// Create a new ListView control.\n\t\t\tListView listView1 = new ListView();\n\t\t\tlistView1.Bounds = new Rectangle(new Point(10,10), new Size(300,200));\n\n\t\t\t// Set the view to show details.\n\t\t\tlistView1.View = View.Details;\n\t\t\t// Allow the user to edit item text.\n\t\t\tlistView1.LabelEdit = true;\n\t\t\t// Allow the user to rearrange columns.\n\t\t\tlistView1.AllowColumnReorder = true;\n\t\t\t// Display check boxes.\n\t\t\tlistView1.CheckBoxes = true;\n\t\t\t// Select the item and subitems when selection is made.\n\t\t\tlistView1.FullRowSelect = true;\n\t\t\t// Display grid lines.\n\t\t\tlistView1.GridLines = true;\n\t\t\t// Sort the items in the list in ascending order.\n\t\t\tlistView1.Sorting = SortOrder.Ascending;\n            \t\t\t\n\t\t\t// Create three items and three sets of subitems for each item.\n\t\t\tListViewItem item1 = new ListViewItem(&quot;item1&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem1.Checked = true;\n\t\t\titem1.SubItems.Add(&quot;1&quot;);\n\t\t\titem1.SubItems.Add(&quot;2&quot;);\n\t\t\titem1.SubItems.Add(&quot;3&quot;);\n\t\t\tListViewItem item2 = new ListViewItem(&quot;item2&quot;,1);\n\t\t\titem2.SubItems.Add(&quot;4&quot;);\n\t\t\titem2.SubItems.Add(&quot;5&quot;);\n\t\t\titem2.SubItems.Add(&quot;6&quot;);\n\t\t\tListViewItem item3 = new ListViewItem(&quot;item3&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem3.Checked = true;\n\t\t\titem3.SubItems.Add(&quot;7&quot;);\n\t\t\titem3.SubItems.Add(&quot;8&quot;);\n\t\t\titem3.SubItems.Add(&quot;9&quot;);\n\n\t\t\t// Create columns for the items and subitems.\n\t\t\t// Width of -2 indicates auto-size.\n\t\t\tlistView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center);\n\n\t\t\t//Add the items to the ListView.\n            \t\tlistView1.Items.AddRange(new ListViewItem[]{item1,item2,item3});\n\n\t\t\t// Create two ImageList objects.\n\t\t\tImageList imageListSmall = new ImageList();\n\t\t\tImageList imageListLarge = new ImageList();\n\n\t\t\t// Initialize the ImageList objects with bitmaps.\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage1.bmp&quot;));\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage2.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage1.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage2.bmp&quot;));\n\n\t\t\t//Assign the ImageList objects to the ListView.\n\t\t\tlistView1.LargeImageList = imageListLarge;\n\t\t\tlistView1.SmallImageList = imageListSmall;\n\n\t\t\t// Add the ListView to the control collection.\n\t\t\tthis.Controls.Add(listView1);\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewExample#1\">        Private Sub CreateMyListView()\n            &#39; Create a new ListView control.\n            Dim listView1 As New ListView()\n            listView1.Bounds = New Rectangle(New Point(10, 10), New Size(300, 200))\n\n            &#39; Set the view to show details.\n            listView1.View = View.Details\n            &#39; Allow the user to edit item text.\n            listView1.LabelEdit = True\n            &#39; Allow the user to rearrange columns.\n            listView1.AllowColumnReorder = True\n            &#39; Display check boxes.\n            listView1.CheckBoxes = True\n            &#39; Select the item and subitems when selection is made.\n            listView1.FullRowSelect = True\n            &#39; Display grid lines.\n            listView1.GridLines = True\n            &#39; Sort the items in the list in ascending order.\n            listView1.Sorting = SortOrder.Ascending\n\n            &#39; Create three items and three sets of subitems for each item.\n            Dim item1 As New ListViewItem(&quot;item1&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item1.Checked = True\n            item1.SubItems.Add(&quot;1&quot;)\n            item1.SubItems.Add(&quot;2&quot;)\n            item1.SubItems.Add(&quot;3&quot;)\n            Dim item2 As New ListViewItem(&quot;item2&quot;, 1)\n            item2.SubItems.Add(&quot;4&quot;)\n            item2.SubItems.Add(&quot;5&quot;)\n            item2.SubItems.Add(&quot;6&quot;)\n            Dim item3 As New ListViewItem(&quot;item3&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item3.Checked = True\n            item3.SubItems.Add(&quot;7&quot;)\n            item3.SubItems.Add(&quot;8&quot;)\n            item3.SubItems.Add(&quot;9&quot;)\n\n            &#39; Create columns for the items and subitems.\n            &#39; Width of -2 indicates auto-size.\n            listView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center)\n\n            &#39;Add the items to the ListView.\n            listView1.Items.AddRange(New ListViewItem() {item1, item2, item3})\n\n            &#39; Create two ImageList objects.\n            Dim imageListSmall As New ImageList()\n            Dim imageListLarge As New ImageList()\n\n            &#39; Initialize the ImageList objects with bitmaps.\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage1.bmp&quot;))\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage2.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage1.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage2.bmp&quot;))\n\n            &#39;Assign the ImageList objects to the ListView.\n            listView1.LargeImageList = imageListLarge\n            listView1.SmallImageList = imageListSmall\n\n            &#39; Add the ListView to the control collection.\n            Me.Controls.Add(listView1)\n        End Sub &#39;CreateMyListView\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_CheckedIndices\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_CheckedIndices_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckedIndices</div>        \r\n          </div>\r\n    \r\n            <p>Gets the indexes of the currently checked items in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListView.CheckedIndexCollection CheckedIndices { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listview.checkedindexcollection\" data-linktype=\"relative-path\">ListView+CheckedIndexCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.listview.checkedindexcollection\" data-linktype=\"relative-path\">ListView+CheckedIndexCollection</a> that contains the indexes of the currently checked items. If no items are currently checked, an empty <a class=\"xref\" href=\"system.windows.forms.listview.checkedindexcollection\" data-linktype=\"relative-path\">ListView+CheckedIndexCollection</a> is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is only useful when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a> property of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is set to <code>true</code>. The CheckedIndices property returns a collection that contains the index positions in the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection\" data-linktype=\"relative-path\">ListView+ListViewItemCollection</a> of all items that are checked in the control. For more information about how to manipulate the items in the collection, see <a class=\"xref\" href=\"system.windows.forms.listview.checkedindexcollection\" data-linktype=\"relative-path\">ListView+CheckedIndexCollection</a>.  </p>\n<p> If you want to obtain a collection of the items that are checked in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control, instead of the index positions of the items that are checked, use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckedItems_\" data-linktype=\"relative-path\">CheckedItems</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_CheckedItems\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_CheckedItems_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckedItems</div>        \r\n          </div>\r\n    \r\n            <p>Gets the currently checked items in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListView.CheckedListViewItemCollection CheckedItems { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listview.checkedlistviewitemcollection\" data-linktype=\"relative-path\">ListView+CheckedListViewItemCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.listview.checkedlistviewitemcollection\" data-linktype=\"relative-path\">ListView+CheckedListViewItemCollection</a> that contains the currently checked items. If no items are currently checked, an empty <a class=\"xref\" href=\"system.windows.forms.listview.checkedlistviewitemcollection\" data-linktype=\"relative-path\">ListView+CheckedListViewItemCollection</a> is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is only useful when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a> property of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is set to <code>true</code>. The CheckedItems property returns a collection that contains all items that are checked in the control. For more information about how to manipulate the items in the collection, see <a class=\"xref\" href=\"system.windows.forms.listview.checkedlistviewitemcollection\" data-linktype=\"relative-path\">ListView+CheckedListViewItemCollection</a>.  </p>\n<p> If you want to obtain a collection of the index positions within the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection\" data-linktype=\"relative-path\">ListView+ListViewItemCollection</a> of the items that are checked in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control, instead of the items that are checked, use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckedIndices_\" data-linktype=\"relative-path\">CheckedIndices</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates a checked <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> that handles the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemChecked\" data-linktype=\"relative-path\">ItemChecked</a> event. The example uses the CheckedItems property to tally a new price every time that an item is checked or unchecked. To run this example, paste the following code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>ListView1</code> and a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> named <code>Textbox1</code>. Call the <code>InititalizeListView</code> method from the form&#39;s constructor or <code>Load</code> method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView2#1\">\tprivate void InitializeListView()\n\t{\n\t\tthis.ListView1 = new System.Windows.Forms.ListView();\n\n\t\t// Set properties such as BackColor and DockStyle and Location.\n\t\tthis.ListView1.BackColor = System.Drawing.SystemColors.Control;\n\t\tthis.ListView1.Dock = System.Windows.Forms.DockStyle.Top;\n\t\tthis.ListView1.Location = new System.Drawing.Point(0, 0);\n\t\tthis.ListView1.Size = new System.Drawing.Size(292, 130);\n\t\tthis.ListView1.View = System.Windows.Forms.View.Details;\n\t\tthis.ListView1.HideSelection = false;\n\n\t\t// Allow the user to select multiple items.\n\t\tthis.ListView1.MultiSelect = true;\n\n\t\t// Show CheckBoxes in the ListView.\n\t\tthis.ListView1.CheckBoxes = true;\n\t\t\n\t\t//Set the column headers and populate the columns.\n\t\tListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable;\n\t\t\n\t\tColumnHeader columnHeader1 = new ColumnHeader();\n\t\tcolumnHeader1.Text = &quot;Breakfast Choices&quot;;\n\t\tcolumnHeader1.TextAlign = HorizontalAlignment.Left;\n\t\tcolumnHeader1.Width = 146;\n\n\t\tColumnHeader columnHeader2 = new ColumnHeader();\n\t\tcolumnHeader2.Text = &quot;Price Each&quot;;\n\t\tcolumnHeader2.TextAlign = HorizontalAlignment.Center;\n\t\tcolumnHeader2.Width = 142;\n\n       \tthis.ListView1.Columns.Add(columnHeader1);\n\t\tthis.ListView1.Columns.Add(columnHeader2);\n\n\t\tstring[] foodList = new string[]{&quot;Juice&quot;, &quot;Coffee&quot;, \n\t\t\t&quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, \n\t\t\t&quot;Bagel &amp; Cream Cheese&quot;};\n\n\t\tstring[] foodPrice = new string[]{&quot;1.09&quot;, &quot;1.09&quot;, &quot;2.19&quot;, \n\t\t\t&quot;2.79&quot;, &quot;2.09&quot;, &quot;2.69&quot;};\n\t\t\n\t\tint count;\n\n\t\t// Members are added one at a time, so call BeginUpdate to ensure \n\t\t// the list is painted only once, rather than as each list item is added.\n\t\tListView1.BeginUpdate();\n\n\t\tfor(count = 0; count &lt; foodList.Length; count++)\n\t\t{\n\t\t\tListViewItem listItem = new ListViewItem(foodList[count]);\n\t\t\tlistItem.SubItems.Add(foodPrice[count]);\n\t\t\tListView1.Items.Add(listItem);\n\t\t}\n\n\t\t//Call EndUpdate when you finish adding items to the ListView.\n\t\tListView1.EndUpdate();\n\t\tthis.Controls.Add(this.ListView1);\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView2#1\">    Private Sub InitializeListView()\n        Me.ListView1 = New System.Windows.Forms.ListView\n\n        &#39; Set properties such as BackColor, Location and Size\n        Me.ListView1.BackColor = System.Drawing.SystemColors.Control\n        Me.ListView1.Dock = System.Windows.Forms.DockStyle.Top\n        Me.ListView1.Location = New System.Drawing.Point(0, 0)\n        Me.ListView1.Size = New System.Drawing.Size(292, 130)\n        Me.ListView1.View = System.Windows.Forms.View.Details\n        Me.ListView1.HideSelection = False\n\n        &#39; Allow user to select multiple items.\n        Me.ListView1.MultiSelect = True\n\n        &#39; Show check boxes in the ListView.\n        Me.ListView1.CheckBoxes = True\n\n        &#39;Set the column headers and populate the columns.\n        ListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable\n        Dim columnHeader1 As New ColumnHeader\n        With columnHeader1\n            .Text = &quot;Breakfast Choices&quot;\n            .TextAlign = HorizontalAlignment.Left\n            .Width = 146\n        End With\n        Dim columnHeader2 As New ColumnHeader\n        With columnHeader2\n            .Text = &quot;Price Each&quot;\n            .TextAlign = HorizontalAlignment.Center\n            .Width = 142\n        End With\n        Me.ListView1.Columns.Add(columnHeader1)\n        Me.ListView1.Columns.Add(columnHeader2)\n        Dim foodList() As String = New String() {&quot;Juice&quot;, &quot;Coffee&quot;, _\n            &quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, _\n            &quot;Bagel &amp; Cream Cheese&quot;}\n\n        Dim foodPrice() As String = New String() {&quot;1.09&quot;, &quot;1.09&quot;, &quot;2.19&quot;, _\n            &quot;2.79&quot;, &quot;2.09&quot;, &quot;2.69&quot;}\n        Dim count As Integer\n\n        &#39; Members are added one at a time, so call BeginUpdate to ensure \n        &#39; the list is painted only once, rather than as each list item is added.\n        ListView1.BeginUpdate()\n\n        For count = 0 To foodList.Length - 1\n            Dim listItem As New ListViewItem(foodList(count))\n            listItem.SubItems.Add(foodPrice(count))\n            ListView1.Items.Add(listItem)\n        Next\n\n        &#39;Call EndUpdate when you finish adding items to the ListView.\n        ListView1.EndUpdate()\n        Me.Controls.Add(Me.ListView1)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView2#1\">   void InitializeListView()\n   {\n      this-&gt;ListView1 = gcnew System::Windows::Forms::ListView;\n      \n      // Set properties such as BackColor and DockStyle and Location.\n      this-&gt;ListView1-&gt;BackColor = System::Drawing::SystemColors::Control;\n      this-&gt;ListView1-&gt;Dock = System::Windows::Forms::DockStyle::Top;\n      this-&gt;ListView1-&gt;Location = System::Drawing::Point( 0, 0 );\n      this-&gt;ListView1-&gt;Size = System::Drawing::Size( 292, 130 );\n      this-&gt;ListView1-&gt;View = System::Windows::Forms::View::Details;\n      this-&gt;ListView1-&gt;HideSelection = false;\n      \n      // Allow the user to select multiple items.\n      this-&gt;ListView1-&gt;MultiSelect = true;\n      \n      // Show CheckBoxes in the ListView.\n      this-&gt;ListView1-&gt;CheckBoxes = true;\n      \n      //Set the column headers and populate the columns.\n      ListView1-&gt;HeaderStyle = ColumnHeaderStyle::Nonclickable;\n      ColumnHeader^ columnHeader1 = gcnew ColumnHeader;\n      columnHeader1-&gt;Text = &quot;Breakfast Choices&quot;;\n      columnHeader1-&gt;TextAlign = HorizontalAlignment::Left;\n      columnHeader1-&gt;Width = 146;\n      ColumnHeader^ columnHeader2 = gcnew ColumnHeader;\n      columnHeader2-&gt;Text = &quot;Price Each&quot;;\n      columnHeader2-&gt;TextAlign = HorizontalAlignment::Center;\n      columnHeader2-&gt;Width = 142;\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader1 );\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader2 );\n      array&lt;String^&gt;^foodList = {&quot;Juice&quot;,&quot;Coffee&quot;,&quot;Cereal &amp; Milk&quot;,&quot;Fruit Plate&quot;,&quot;Toast &amp; Jelly&quot;,&quot;Bagel &amp; Cream Cheese&quot;};\n      array&lt;String^&gt;^foodPrice = {&quot;1.09&quot;,&quot;1.09&quot;,&quot;2.19&quot;,&quot;2.79&quot;,&quot;2.09&quot;,&quot;2.69&quot;};\n      int count;\n      \n      // Members are added one at a time, so call BeginUpdate to ensure \n      // the list is painted only once, rather than as each list item is added.\n      ListView1-&gt;BeginUpdate();\n      for ( count = 0; count &lt; foodList-&gt;Length; count++ )\n      {\n         ListViewItem^ listItem = gcnew ListViewItem( foodList[ count ] );\n         listItem-&gt;SubItems-&gt;Add( foodPrice[ count ] );\n         ListView1-&gt;Items-&gt;Add( listItem );\n      }\n      \n      //Call EndUpdate when you finish adding items to the ListView.\n      ListView1-&gt;EndUpdate();\n      this-&gt;Controls-&gt;Add( this-&gt;ListView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView2#3\">\t// Handles the ItemChecked event.  The method loops through all the \n\t// checked items and tallies a new price each time an item is \n\t// checked or unchecked. It outputs the price to TextBox1.\n\tprivate void ListView1_ItemCheck2(object sender, \n\t\tSystem.Windows.Forms.ItemCheckEventArgs e)\n\t{\n\t\tdouble price = 0.0;\n\t\tListView.CheckedListViewItemCollection checkedItems = \n\t\t\tListView1.CheckedItems;\n\t\t\n\t\tforeach ( ListViewItem item in checkedItems )\n\t\t{\n\t\t\tprice += Double.Parse(item.SubItems[1].Text);\n\t\t}\n\t\tif (e.CurrentValue==CheckState.Unchecked)\n\t\t{\n\t\t\tprice += Double.Parse(\n\t\t\t\tthis.ListView1.Items[e.Index].SubItems[1].Text);\n\t\t}\n\t\telse if((e.CurrentValue==CheckState.Checked))\n\t\t{\n\t\t\tprice -= Double.Parse(\n\t\t\t\tthis.ListView1.Items[e.Index].SubItems[1].Text);\n\t\t}\n\t\t// Output the price to TextBox1.\n\t\tTextBox1.Text = price.ToString();\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView2#3\">    &#39; Handles the ItemCheck event.  The method loops through all the \n    &#39; checked items and tallies a new price each time an item is \n    &#39; checked or unchecked. It outputs the price to TextBox1.\n    Private Sub ListView1_ItemCheck2(ByVal sender As Object, _\n        ByVal e As System.Windows.Forms.ItemCheckEventArgs) _\n        Handles ListView1.ItemCheck\n\n        Dim item As ListViewItem\n        Dim price As Double = 0.0\n        Dim checkedItems As ListView.CheckedListViewItemCollection = _\n            ListView1.CheckedItems\n        For Each item In checkedItems\n            price += Double.Parse(item.SubItems(1).Text)\n        Next\n        If (e.CurrentValue = CheckState.Unchecked) Then\n            price += Double.Parse(Me.ListView1.Items(e.Index).SubItems(1).Text)\n        ElseIf (e.CurrentValue = CheckState.Checked) Then\n            price -= Double.Parse(Me.ListView1.Items(e.Index).SubItems(1).Text)\n        End If\n\n        &#39; Output the price to TextBox1.\n        TextBox1.Text = CType(price, String)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView2#3\">   // Handles the ItemChecked event.  The method loops through all the \n   // checked items and tallies a new price each time an item is \n   // checked or unchecked. It outputs the price to TextBox1.\n   void ListView1_ItemCheck2( Object^ /*sender*/, System::Windows::Forms::ItemCheckEventArgs^ e )\n   {\n      double price = 0.0;\n      ListView::CheckedListViewItemCollection^ checkedItems = ListView1-&gt;CheckedItems;\n      System::Collections::IEnumerator^ myEnum = checkedItems-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         ListViewItem^ item = safe_cast&lt;ListViewItem^&gt;(myEnum-&gt;Current);\n         price += Double::Parse( item-&gt;SubItems[ 1 ]-&gt;Text );\n      }\n\n      if ( e-&gt;CurrentValue == CheckState::Unchecked )\n      {\n         price += Double::Parse( this-&gt;ListView1-&gt;Items[ e-&gt;Index ]-&gt;SubItems[ 1 ]-&gt;Text );\n      }\n      else\n      if ( (e-&gt;CurrentValue == CheckState::Checked) )\n      {\n         price -= Double::Parse( this-&gt;ListView1-&gt;Items[ e-&gt;Index ]-&gt;SubItems[ 1 ]-&gt;Text );\n      }\n\n      // Output the price to TextBox1.\n      TextBox1-&gt;Text = price.ToString();\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_Columns\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_Columns_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Columns</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of all column headers that appear in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListView.ColumnHeaderCollection Columns { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listview.columnheadercollection\" data-linktype=\"relative-path\">ListView+ColumnHeaderCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.listview.columnheadercollection\" data-linktype=\"relative-path\">ListView+ColumnHeaderCollection</a> that represents the column headers that appear when the <span class=\"xref\">stem.Windows.Forms.ListView.View*</span> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Columns property returns a collection that contains the <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects that are displayed in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects define the columns that are displayed in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>. Each column is used to display subitem information for each item in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>. For more information about how to manipulate the items in the collection, see <a class=\"xref\" href=\"system.windows.forms.listview.columnheadercollection\" data-linktype=\"relative-path\">ListView+ColumnHeaderCollection</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If your <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control does not have any column headers specified and you set the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>, the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control will not display any items.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control with three <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects specified and three <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> objects specified for each item. The example also creates <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects to display the subitems in details view. Two <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are also created in the code example to provide images for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects. These <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are added to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LargeImageList_\" data-linktype=\"relative-path\">LargeImageList</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SmallImageList_\" data-linktype=\"relative-path\">SmallImageList</a> properties. The example uses the following properties in creating the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LabelEdit_\" data-linktype=\"relative-path\">LabelEdit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AllowColumnReorder_\" data-linktype=\"relative-path\">AllowColumnReorder</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GridLines_\" data-linktype=\"relative-path\">GridLines</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sorting_\" data-linktype=\"relative-path\">Sorting</a>  \n\n<p>This example requires that you have added the code to a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and call the method created in the example from the constructor or another method on the form. The example also requires that images named <code>MySmallImage1</code>, <code>MySmallImage2</code>, <code>MyLargeImage1</code>, and <code>MyLargeImage2</code> are located in the root directory of drive C.  </p>\n<pre><code class=\"lang-cpp\" name=\"ListViewExample#1\">private:\n   void CreateMyListView()\n   {\n      // Create a new ListView control.\n      ListView^ listView1 = gcnew ListView;\n      listView1-&gt;Bounds = Rectangle(Point(10,10),System::Drawing::Size( 300, 200 ));\n\n      // Set the view to show details.\n      listView1-&gt;View = View::Details;\n\n      // Allow the user to edit item text.\n      listView1-&gt;LabelEdit = true;\n\n      // Allow the user to rearrange columns.\n      listView1-&gt;AllowColumnReorder = true;\n\n      // Display check boxes.\n      listView1-&gt;CheckBoxes = true;\n\n      // Select the item and subitems when selection is made.\n      listView1-&gt;FullRowSelect = true;\n\n      // Display grid lines.\n      listView1-&gt;GridLines = true;\n\n      // Sort the items in the list in ascending order.\n      listView1-&gt;Sorting = SortOrder::Ascending;\n\n      // Create three items and three sets of subitems for each item.\n      ListViewItem^ item1 = gcnew ListViewItem( &quot;item1&quot;,0 );\n\n      // Place a check mark next to the item.\n      item1-&gt;Checked = true;\n      item1-&gt;SubItems-&gt;Add( &quot;1&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;2&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;3&quot; );\n      ListViewItem^ item2 = gcnew ListViewItem( &quot;item2&quot;,1 );\n      item2-&gt;SubItems-&gt;Add( &quot;4&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;5&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;6&quot; );\n      ListViewItem^ item3 = gcnew ListViewItem( &quot;item3&quot;,0 );\n\n      // Place a check mark next to the item.\n      item3-&gt;Checked = true;\n      item3-&gt;SubItems-&gt;Add( &quot;7&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;8&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;9&quot; );\n\n      // Create columns for the items and subitems.\n      // Width of -2 indicates auto-size.\n      listView1-&gt;Columns-&gt;Add( &quot;Item Column&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 2&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 3&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 4&quot;, -2, HorizontalAlignment::Center );\n\n      //Add the items to the ListView.\n      array&lt;ListViewItem^&gt;^temp1 = {item1,item2,item3};\n      listView1-&gt;Items-&gt;AddRange( temp1 );\n\n      // Create two ImageList objects.\n      ImageList^ imageListSmall = gcnew ImageList;\n      ImageList^ imageListLarge = gcnew ImageList;\n\n      // Initialize the ImageList objects with bitmaps.\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage1.bmp&quot; ) );\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage2.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage1.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage2.bmp&quot; ) );\n\n      //Assign the ImageList objects to the ListView.\n      listView1-&gt;LargeImageList = imageListLarge;\n      listView1-&gt;SmallImageList = imageListSmall;\n      \n      // Add the ListView to the control collection.\n      this-&gt;Controls-&gt;Add( listView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"ListViewExample#1\">\t\tprivate void CreateMyListView()\n\t\t{\n\t\t\t// Create a new ListView control.\n\t\t\tListView listView1 = new ListView();\n\t\t\tlistView1.Bounds = new Rectangle(new Point(10,10), new Size(300,200));\n\n\t\t\t// Set the view to show details.\n\t\t\tlistView1.View = View.Details;\n\t\t\t// Allow the user to edit item text.\n\t\t\tlistView1.LabelEdit = true;\n\t\t\t// Allow the user to rearrange columns.\n\t\t\tlistView1.AllowColumnReorder = true;\n\t\t\t// Display check boxes.\n\t\t\tlistView1.CheckBoxes = true;\n\t\t\t// Select the item and subitems when selection is made.\n\t\t\tlistView1.FullRowSelect = true;\n\t\t\t// Display grid lines.\n\t\t\tlistView1.GridLines = true;\n\t\t\t// Sort the items in the list in ascending order.\n\t\t\tlistView1.Sorting = SortOrder.Ascending;\n            \t\t\t\n\t\t\t// Create three items and three sets of subitems for each item.\n\t\t\tListViewItem item1 = new ListViewItem(&quot;item1&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem1.Checked = true;\n\t\t\titem1.SubItems.Add(&quot;1&quot;);\n\t\t\titem1.SubItems.Add(&quot;2&quot;);\n\t\t\titem1.SubItems.Add(&quot;3&quot;);\n\t\t\tListViewItem item2 = new ListViewItem(&quot;item2&quot;,1);\n\t\t\titem2.SubItems.Add(&quot;4&quot;);\n\t\t\titem2.SubItems.Add(&quot;5&quot;);\n\t\t\titem2.SubItems.Add(&quot;6&quot;);\n\t\t\tListViewItem item3 = new ListViewItem(&quot;item3&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem3.Checked = true;\n\t\t\titem3.SubItems.Add(&quot;7&quot;);\n\t\t\titem3.SubItems.Add(&quot;8&quot;);\n\t\t\titem3.SubItems.Add(&quot;9&quot;);\n\n\t\t\t// Create columns for the items and subitems.\n\t\t\t// Width of -2 indicates auto-size.\n\t\t\tlistView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center);\n\n\t\t\t//Add the items to the ListView.\n            \t\tlistView1.Items.AddRange(new ListViewItem[]{item1,item2,item3});\n\n\t\t\t// Create two ImageList objects.\n\t\t\tImageList imageListSmall = new ImageList();\n\t\t\tImageList imageListLarge = new ImageList();\n\n\t\t\t// Initialize the ImageList objects with bitmaps.\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage1.bmp&quot;));\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage2.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage1.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage2.bmp&quot;));\n\n\t\t\t//Assign the ImageList objects to the ListView.\n\t\t\tlistView1.LargeImageList = imageListLarge;\n\t\t\tlistView1.SmallImageList = imageListSmall;\n\n\t\t\t// Add the ListView to the control collection.\n\t\t\tthis.Controls.Add(listView1);\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewExample#1\">        Private Sub CreateMyListView()\n            &#39; Create a new ListView control.\n            Dim listView1 As New ListView()\n            listView1.Bounds = New Rectangle(New Point(10, 10), New Size(300, 200))\n\n            &#39; Set the view to show details.\n            listView1.View = View.Details\n            &#39; Allow the user to edit item text.\n            listView1.LabelEdit = True\n            &#39; Allow the user to rearrange columns.\n            listView1.AllowColumnReorder = True\n            &#39; Display check boxes.\n            listView1.CheckBoxes = True\n            &#39; Select the item and subitems when selection is made.\n            listView1.FullRowSelect = True\n            &#39; Display grid lines.\n            listView1.GridLines = True\n            &#39; Sort the items in the list in ascending order.\n            listView1.Sorting = SortOrder.Ascending\n\n            &#39; Create three items and three sets of subitems for each item.\n            Dim item1 As New ListViewItem(&quot;item1&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item1.Checked = True\n            item1.SubItems.Add(&quot;1&quot;)\n            item1.SubItems.Add(&quot;2&quot;)\n            item1.SubItems.Add(&quot;3&quot;)\n            Dim item2 As New ListViewItem(&quot;item2&quot;, 1)\n            item2.SubItems.Add(&quot;4&quot;)\n            item2.SubItems.Add(&quot;5&quot;)\n            item2.SubItems.Add(&quot;6&quot;)\n            Dim item3 As New ListViewItem(&quot;item3&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item3.Checked = True\n            item3.SubItems.Add(&quot;7&quot;)\n            item3.SubItems.Add(&quot;8&quot;)\n            item3.SubItems.Add(&quot;9&quot;)\n\n            &#39; Create columns for the items and subitems.\n            &#39; Width of -2 indicates auto-size.\n            listView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center)\n\n            &#39;Add the items to the ListView.\n            listView1.Items.AddRange(New ListViewItem() {item1, item2, item3})\n\n            &#39; Create two ImageList objects.\n            Dim imageListSmall As New ImageList()\n            Dim imageListLarge As New ImageList()\n\n            &#39; Initialize the ImageList objects with bitmaps.\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage1.bmp&quot;))\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage2.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage1.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage2.bmp&quot;))\n\n            &#39;Assign the ImageList objects to the ListView.\n            listView1.LargeImageList = imageListLarge\n            listView1.SmallImageList = imageListSmall\n\n            &#39; Add the ListView to the control collection.\n            Me.Controls.Add(listView1)\n        End Sub &#39;CreateMyListView\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_CreateParams\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_CreateParams_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateParams</div>        \r\n          </div>\r\n    \r\n            <p>This property is not relevant for this class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Windows.Forms.CreateParams CreateParams { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.createparams\" data-linktype=\"relative-path\">CreateParams</a></div>\r\n                  </div>\r\n                  <p><code>null</code> in all cases.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is not relevant for this class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_DefaultSize\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_DefaultSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets the default size of the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Drawing.Size DefaultSize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </div>\r\n                  <p>The default <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_DoubleBuffered\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_DoubleBuffered_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DoubleBuffered</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool DoubleBuffered { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the surface of the control should be drawn using double buffering; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_FocusedItem\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_FocusedItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FocusedItem</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the item in the control that currently has focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListViewItem FocusedItem { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> that represents the item that has focus, or <code>null</code> if no item has the focus in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The FocusedItem property returns the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> that represents the item currently displaying the focus rectangle for the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. Because a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control has no directly editable areas other than the items it displays, when the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control has focus, an item within the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> displays the focus reticle around its item text. Typically, the last selected item in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is the item with focus. Although an item may be the one displaying the focus reticle, it may not actually be a selected item in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>. Use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedItems_\" data-linktype=\"relative-path\">SelectedItems</a> or <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedIndices_\" data-linktype=\"relative-path\">SelectedIndices</a> properties to obtain the selected items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control, the FocusedItem property is not necessarily selected. You can use the FocusedItem property to determine which item was last clicked in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control, regardless of selection state.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ForeColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_ForeColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ForeColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the foreground color.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Drawing.Color ForeColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that is the foreground color.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_FullRowSelect\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_FullRowSelect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FullRowSelect</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether clicking an item selects all its subitems.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool FullRowSelect { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if clicking an item selects the item and all its subitems; <code>false</code> if clicking an item selects only the item itself. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The FullRowSelect property has no effect unless the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>. The FullRowSelect property is typically used when a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> displays items with many subitems and it is important to be able to see selected items when the item text is not visible due to horizontal scrolling of the control&#39;s contents.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When FullRowSelect is set to <code>true</code>, ToolTips for a <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> will not be shown; only the ToolTip for the parent <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> is displayed.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control with three <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects specified and three <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> objects specified for each item. The example also creates <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects to display the subitems in details view. Two <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are also created in the code example to provide images for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects. These <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are added to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LargeImageList_\" data-linktype=\"relative-path\">LargeImageList</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SmallImageList_\" data-linktype=\"relative-path\">SmallImageList</a> properties. The example uses the following properties in creating the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LabelEdit_\" data-linktype=\"relative-path\">LabelEdit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AllowColumnReorder_\" data-linktype=\"relative-path\">AllowColumnReorder</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a>  \n</li>\n<li><p>FullRowSelect  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GridLines_\" data-linktype=\"relative-path\">GridLines</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sorting_\" data-linktype=\"relative-path\">Sorting</a>  \n\n<p>This example requires that you have added the code to a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and call the method created in the example from the constructor or another method on the form. The example also requires that images named <code>MySmallImage1</code>, <code>MySmallImage2</code>, <code>MyLargeImage1</code>, and <code>MyLargeImage2</code> are located in the root directory of drive C.  </p>\n<pre><code class=\"lang-cpp\" name=\"ListViewExample#1\">private:\n   void CreateMyListView()\n   {\n      // Create a new ListView control.\n      ListView^ listView1 = gcnew ListView;\n      listView1-&gt;Bounds = Rectangle(Point(10,10),System::Drawing::Size( 300, 200 ));\n\n      // Set the view to show details.\n      listView1-&gt;View = View::Details;\n\n      // Allow the user to edit item text.\n      listView1-&gt;LabelEdit = true;\n\n      // Allow the user to rearrange columns.\n      listView1-&gt;AllowColumnReorder = true;\n\n      // Display check boxes.\n      listView1-&gt;CheckBoxes = true;\n\n      // Select the item and subitems when selection is made.\n      listView1-&gt;FullRowSelect = true;\n\n      // Display grid lines.\n      listView1-&gt;GridLines = true;\n\n      // Sort the items in the list in ascending order.\n      listView1-&gt;Sorting = SortOrder::Ascending;\n\n      // Create three items and three sets of subitems for each item.\n      ListViewItem^ item1 = gcnew ListViewItem( &quot;item1&quot;,0 );\n\n      // Place a check mark next to the item.\n      item1-&gt;Checked = true;\n      item1-&gt;SubItems-&gt;Add( &quot;1&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;2&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;3&quot; );\n      ListViewItem^ item2 = gcnew ListViewItem( &quot;item2&quot;,1 );\n      item2-&gt;SubItems-&gt;Add( &quot;4&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;5&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;6&quot; );\n      ListViewItem^ item3 = gcnew ListViewItem( &quot;item3&quot;,0 );\n\n      // Place a check mark next to the item.\n      item3-&gt;Checked = true;\n      item3-&gt;SubItems-&gt;Add( &quot;7&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;8&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;9&quot; );\n\n      // Create columns for the items and subitems.\n      // Width of -2 indicates auto-size.\n      listView1-&gt;Columns-&gt;Add( &quot;Item Column&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 2&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 3&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 4&quot;, -2, HorizontalAlignment::Center );\n\n      //Add the items to the ListView.\n      array&lt;ListViewItem^&gt;^temp1 = {item1,item2,item3};\n      listView1-&gt;Items-&gt;AddRange( temp1 );\n\n      // Create two ImageList objects.\n      ImageList^ imageListSmall = gcnew ImageList;\n      ImageList^ imageListLarge = gcnew ImageList;\n\n      // Initialize the ImageList objects with bitmaps.\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage1.bmp&quot; ) );\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage2.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage1.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage2.bmp&quot; ) );\n\n      //Assign the ImageList objects to the ListView.\n      listView1-&gt;LargeImageList = imageListLarge;\n      listView1-&gt;SmallImageList = imageListSmall;\n      \n      // Add the ListView to the control collection.\n      this-&gt;Controls-&gt;Add( listView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"ListViewExample#1\">\t\tprivate void CreateMyListView()\n\t\t{\n\t\t\t// Create a new ListView control.\n\t\t\tListView listView1 = new ListView();\n\t\t\tlistView1.Bounds = new Rectangle(new Point(10,10), new Size(300,200));\n\n\t\t\t// Set the view to show details.\n\t\t\tlistView1.View = View.Details;\n\t\t\t// Allow the user to edit item text.\n\t\t\tlistView1.LabelEdit = true;\n\t\t\t// Allow the user to rearrange columns.\n\t\t\tlistView1.AllowColumnReorder = true;\n\t\t\t// Display check boxes.\n\t\t\tlistView1.CheckBoxes = true;\n\t\t\t// Select the item and subitems when selection is made.\n\t\t\tlistView1.FullRowSelect = true;\n\t\t\t// Display grid lines.\n\t\t\tlistView1.GridLines = true;\n\t\t\t// Sort the items in the list in ascending order.\n\t\t\tlistView1.Sorting = SortOrder.Ascending;\n            \t\t\t\n\t\t\t// Create three items and three sets of subitems for each item.\n\t\t\tListViewItem item1 = new ListViewItem(&quot;item1&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem1.Checked = true;\n\t\t\titem1.SubItems.Add(&quot;1&quot;);\n\t\t\titem1.SubItems.Add(&quot;2&quot;);\n\t\t\titem1.SubItems.Add(&quot;3&quot;);\n\t\t\tListViewItem item2 = new ListViewItem(&quot;item2&quot;,1);\n\t\t\titem2.SubItems.Add(&quot;4&quot;);\n\t\t\titem2.SubItems.Add(&quot;5&quot;);\n\t\t\titem2.SubItems.Add(&quot;6&quot;);\n\t\t\tListViewItem item3 = new ListViewItem(&quot;item3&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem3.Checked = true;\n\t\t\titem3.SubItems.Add(&quot;7&quot;);\n\t\t\titem3.SubItems.Add(&quot;8&quot;);\n\t\t\titem3.SubItems.Add(&quot;9&quot;);\n\n\t\t\t// Create columns for the items and subitems.\n\t\t\t// Width of -2 indicates auto-size.\n\t\t\tlistView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center);\n\n\t\t\t//Add the items to the ListView.\n            \t\tlistView1.Items.AddRange(new ListViewItem[]{item1,item2,item3});\n\n\t\t\t// Create two ImageList objects.\n\t\t\tImageList imageListSmall = new ImageList();\n\t\t\tImageList imageListLarge = new ImageList();\n\n\t\t\t// Initialize the ImageList objects with bitmaps.\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage1.bmp&quot;));\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage2.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage1.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage2.bmp&quot;));\n\n\t\t\t//Assign the ImageList objects to the ListView.\n\t\t\tlistView1.LargeImageList = imageListLarge;\n\t\t\tlistView1.SmallImageList = imageListSmall;\n\n\t\t\t// Add the ListView to the control collection.\n\t\t\tthis.Controls.Add(listView1);\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewExample#1\">        Private Sub CreateMyListView()\n            &#39; Create a new ListView control.\n            Dim listView1 As New ListView()\n            listView1.Bounds = New Rectangle(New Point(10, 10), New Size(300, 200))\n\n            &#39; Set the view to show details.\n            listView1.View = View.Details\n            &#39; Allow the user to edit item text.\n            listView1.LabelEdit = True\n            &#39; Allow the user to rearrange columns.\n            listView1.AllowColumnReorder = True\n            &#39; Display check boxes.\n            listView1.CheckBoxes = True\n            &#39; Select the item and subitems when selection is made.\n            listView1.FullRowSelect = True\n            &#39; Display grid lines.\n            listView1.GridLines = True\n            &#39; Sort the items in the list in ascending order.\n            listView1.Sorting = SortOrder.Ascending\n\n            &#39; Create three items and three sets of subitems for each item.\n            Dim item1 As New ListViewItem(&quot;item1&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item1.Checked = True\n            item1.SubItems.Add(&quot;1&quot;)\n            item1.SubItems.Add(&quot;2&quot;)\n            item1.SubItems.Add(&quot;3&quot;)\n            Dim item2 As New ListViewItem(&quot;item2&quot;, 1)\n            item2.SubItems.Add(&quot;4&quot;)\n            item2.SubItems.Add(&quot;5&quot;)\n            item2.SubItems.Add(&quot;6&quot;)\n            Dim item3 As New ListViewItem(&quot;item3&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item3.Checked = True\n            item3.SubItems.Add(&quot;7&quot;)\n            item3.SubItems.Add(&quot;8&quot;)\n            item3.SubItems.Add(&quot;9&quot;)\n\n            &#39; Create columns for the items and subitems.\n            &#39; Width of -2 indicates auto-size.\n            listView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center)\n\n            &#39;Add the items to the ListView.\n            listView1.Items.AddRange(New ListViewItem() {item1, item2, item3})\n\n            &#39; Create two ImageList objects.\n            Dim imageListSmall As New ImageList()\n            Dim imageListLarge As New ImageList()\n\n            &#39; Initialize the ImageList objects with bitmaps.\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage1.bmp&quot;))\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage2.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage1.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage2.bmp&quot;))\n\n            &#39;Assign the ImageList objects to the ListView.\n            listView1.LargeImageList = imageListLarge\n            listView1.SmallImageList = imageListSmall\n\n            &#39; Add the ListView to the control collection.\n            Me.Controls.Add(listView1)\n        End Sub &#39;CreateMyListView\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_GridLines\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_GridLines_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GridLines</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether grid lines appear between the rows and columns containing the items and subitems in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool GridLines { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if grid lines are drawn around items and subitems; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GridLines property has no effect unless the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>. The GridLines property allows you to display lines to identify the rows and columns that are displayed in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control when it displays items and their subitems. The grid lines that are displayed do not provide the ability to resize rows and columns as an application such as Microsoft Excel does. Only columns can be resized, if column headers are displayed, by moving the mouse pointer to the right side of the column to resize and then clicking and dragging until the column is the size you want. The grid lines feature is used to provide the user of the control with visible boundaries around items and subitems.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control with three <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects specified and three <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> objects specified for each item. The example also creates <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects to display the subitems in details view. Two <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are also created in the code example to provide images for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects. These <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are added to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LargeImageList_\" data-linktype=\"relative-path\">LargeImageList</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SmallImageList_\" data-linktype=\"relative-path\">SmallImageList</a> properties. The example uses the following properties in creating the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LabelEdit_\" data-linktype=\"relative-path\">LabelEdit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AllowColumnReorder_\" data-linktype=\"relative-path\">AllowColumnReorder</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a>  \n</li>\n<li><p>GridLines  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sorting_\" data-linktype=\"relative-path\">Sorting</a>  \n\n<p>This example requires that you have added the code to a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and call the method created in the example from the constructor or another method on the form. The example also requires that images named <code>MySmallImage1</code>, <code>MySmallImage2</code>, <code>MyLargeImage1</code>, and <code>MyLargeImage2</code> are located in the root directory of drive C.  </p>\n<pre><code class=\"lang-cpp\" name=\"ListViewExample#1\">private:\n   void CreateMyListView()\n   {\n      // Create a new ListView control.\n      ListView^ listView1 = gcnew ListView;\n      listView1-&gt;Bounds = Rectangle(Point(10,10),System::Drawing::Size( 300, 200 ));\n\n      // Set the view to show details.\n      listView1-&gt;View = View::Details;\n\n      // Allow the user to edit item text.\n      listView1-&gt;LabelEdit = true;\n\n      // Allow the user to rearrange columns.\n      listView1-&gt;AllowColumnReorder = true;\n\n      // Display check boxes.\n      listView1-&gt;CheckBoxes = true;\n\n      // Select the item and subitems when selection is made.\n      listView1-&gt;FullRowSelect = true;\n\n      // Display grid lines.\n      listView1-&gt;GridLines = true;\n\n      // Sort the items in the list in ascending order.\n      listView1-&gt;Sorting = SortOrder::Ascending;\n\n      // Create three items and three sets of subitems for each item.\n      ListViewItem^ item1 = gcnew ListViewItem( &quot;item1&quot;,0 );\n\n      // Place a check mark next to the item.\n      item1-&gt;Checked = true;\n      item1-&gt;SubItems-&gt;Add( &quot;1&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;2&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;3&quot; );\n      ListViewItem^ item2 = gcnew ListViewItem( &quot;item2&quot;,1 );\n      item2-&gt;SubItems-&gt;Add( &quot;4&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;5&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;6&quot; );\n      ListViewItem^ item3 = gcnew ListViewItem( &quot;item3&quot;,0 );\n\n      // Place a check mark next to the item.\n      item3-&gt;Checked = true;\n      item3-&gt;SubItems-&gt;Add( &quot;7&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;8&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;9&quot; );\n\n      // Create columns for the items and subitems.\n      // Width of -2 indicates auto-size.\n      listView1-&gt;Columns-&gt;Add( &quot;Item Column&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 2&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 3&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 4&quot;, -2, HorizontalAlignment::Center );\n\n      //Add the items to the ListView.\n      array&lt;ListViewItem^&gt;^temp1 = {item1,item2,item3};\n      listView1-&gt;Items-&gt;AddRange( temp1 );\n\n      // Create two ImageList objects.\n      ImageList^ imageListSmall = gcnew ImageList;\n      ImageList^ imageListLarge = gcnew ImageList;\n\n      // Initialize the ImageList objects with bitmaps.\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage1.bmp&quot; ) );\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage2.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage1.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage2.bmp&quot; ) );\n\n      //Assign the ImageList objects to the ListView.\n      listView1-&gt;LargeImageList = imageListLarge;\n      listView1-&gt;SmallImageList = imageListSmall;\n      \n      // Add the ListView to the control collection.\n      this-&gt;Controls-&gt;Add( listView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"ListViewExample#1\">\t\tprivate void CreateMyListView()\n\t\t{\n\t\t\t// Create a new ListView control.\n\t\t\tListView listView1 = new ListView();\n\t\t\tlistView1.Bounds = new Rectangle(new Point(10,10), new Size(300,200));\n\n\t\t\t// Set the view to show details.\n\t\t\tlistView1.View = View.Details;\n\t\t\t// Allow the user to edit item text.\n\t\t\tlistView1.LabelEdit = true;\n\t\t\t// Allow the user to rearrange columns.\n\t\t\tlistView1.AllowColumnReorder = true;\n\t\t\t// Display check boxes.\n\t\t\tlistView1.CheckBoxes = true;\n\t\t\t// Select the item and subitems when selection is made.\n\t\t\tlistView1.FullRowSelect = true;\n\t\t\t// Display grid lines.\n\t\t\tlistView1.GridLines = true;\n\t\t\t// Sort the items in the list in ascending order.\n\t\t\tlistView1.Sorting = SortOrder.Ascending;\n            \t\t\t\n\t\t\t// Create three items and three sets of subitems for each item.\n\t\t\tListViewItem item1 = new ListViewItem(&quot;item1&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem1.Checked = true;\n\t\t\titem1.SubItems.Add(&quot;1&quot;);\n\t\t\titem1.SubItems.Add(&quot;2&quot;);\n\t\t\titem1.SubItems.Add(&quot;3&quot;);\n\t\t\tListViewItem item2 = new ListViewItem(&quot;item2&quot;,1);\n\t\t\titem2.SubItems.Add(&quot;4&quot;);\n\t\t\titem2.SubItems.Add(&quot;5&quot;);\n\t\t\titem2.SubItems.Add(&quot;6&quot;);\n\t\t\tListViewItem item3 = new ListViewItem(&quot;item3&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem3.Checked = true;\n\t\t\titem3.SubItems.Add(&quot;7&quot;);\n\t\t\titem3.SubItems.Add(&quot;8&quot;);\n\t\t\titem3.SubItems.Add(&quot;9&quot;);\n\n\t\t\t// Create columns for the items and subitems.\n\t\t\t// Width of -2 indicates auto-size.\n\t\t\tlistView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center);\n\n\t\t\t//Add the items to the ListView.\n            \t\tlistView1.Items.AddRange(new ListViewItem[]{item1,item2,item3});\n\n\t\t\t// Create two ImageList objects.\n\t\t\tImageList imageListSmall = new ImageList();\n\t\t\tImageList imageListLarge = new ImageList();\n\n\t\t\t// Initialize the ImageList objects with bitmaps.\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage1.bmp&quot;));\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage2.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage1.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage2.bmp&quot;));\n\n\t\t\t//Assign the ImageList objects to the ListView.\n\t\t\tlistView1.LargeImageList = imageListLarge;\n\t\t\tlistView1.SmallImageList = imageListSmall;\n\n\t\t\t// Add the ListView to the control collection.\n\t\t\tthis.Controls.Add(listView1);\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewExample#1\">        Private Sub CreateMyListView()\n            &#39; Create a new ListView control.\n            Dim listView1 As New ListView()\n            listView1.Bounds = New Rectangle(New Point(10, 10), New Size(300, 200))\n\n            &#39; Set the view to show details.\n            listView1.View = View.Details\n            &#39; Allow the user to edit item text.\n            listView1.LabelEdit = True\n            &#39; Allow the user to rearrange columns.\n            listView1.AllowColumnReorder = True\n            &#39; Display check boxes.\n            listView1.CheckBoxes = True\n            &#39; Select the item and subitems when selection is made.\n            listView1.FullRowSelect = True\n            &#39; Display grid lines.\n            listView1.GridLines = True\n            &#39; Sort the items in the list in ascending order.\n            listView1.Sorting = SortOrder.Ascending\n\n            &#39; Create three items and three sets of subitems for each item.\n            Dim item1 As New ListViewItem(&quot;item1&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item1.Checked = True\n            item1.SubItems.Add(&quot;1&quot;)\n            item1.SubItems.Add(&quot;2&quot;)\n            item1.SubItems.Add(&quot;3&quot;)\n            Dim item2 As New ListViewItem(&quot;item2&quot;, 1)\n            item2.SubItems.Add(&quot;4&quot;)\n            item2.SubItems.Add(&quot;5&quot;)\n            item2.SubItems.Add(&quot;6&quot;)\n            Dim item3 As New ListViewItem(&quot;item3&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item3.Checked = True\n            item3.SubItems.Add(&quot;7&quot;)\n            item3.SubItems.Add(&quot;8&quot;)\n            item3.SubItems.Add(&quot;9&quot;)\n\n            &#39; Create columns for the items and subitems.\n            &#39; Width of -2 indicates auto-size.\n            listView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center)\n\n            &#39;Add the items to the ListView.\n            listView1.Items.AddRange(New ListViewItem() {item1, item2, item3})\n\n            &#39; Create two ImageList objects.\n            Dim imageListSmall As New ImageList()\n            Dim imageListLarge As New ImageList()\n\n            &#39; Initialize the ImageList objects with bitmaps.\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage1.bmp&quot;))\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage2.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage1.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage2.bmp&quot;))\n\n            &#39;Assign the ImageList objects to the ListView.\n            listView1.LargeImageList = imageListLarge\n            listView1.SmallImageList = imageListSmall\n\n            &#39; Add the ListView to the control collection.\n            Me.Controls.Add(listView1)\n        End Sub &#39;CreateMyListView\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_Groups\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_Groups_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Groups</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of <a class=\"xref\" href=\"system.windows.forms.listviewgroup\" data-linktype=\"relative-path\">ListViewGroup</a> objects assigned to the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListViewGroupCollection Groups { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewgroupcollection\" data-linktype=\"relative-path\">ListViewGroupCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.listviewgroupcollection\" data-linktype=\"relative-path\">ListViewGroupCollection</a> that contains all the groups in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> grouping feature lets you create visual groups of logically related <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> items. Each group consists of a textual header followed by a horizontal line and the items assigned to that group. You can align the header text to the left, right, or center of the control. Any groups assigned to a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control appear whenever the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to a value other than <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>.  </p>\n<p> <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> groups help your users find the items they are looking for by separating the items into useful categories. You can create whatever categories you need. One typical approach is to group the items based on the way the list is sorted. For example, you can group the items by the initial letter of the item name when the list is sorted alphabetically or by subitems such as type or date when the list is sorted by clicking a column header in the details view. Windows Explorer uses this type of grouping.  </p>\n<p> To use the grouping feature, add one or more <a class=\"xref\" href=\"system.windows.forms.listviewgroup\" data-linktype=\"relative-path\">ListViewGroup</a> objects to the Groups collection of a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. Set the group header text and header alignment in the <a class=\"xref\" href=\"system.windows.forms.listviewgroup#System_Windows_Forms_ListViewGroup__ctor_\" data-linktype=\"relative-path\">ListViewGroup</a> constructor, or set them using the <a class=\"xref\" href=\"system.windows.forms.listviewgroup#System_Windows_Forms_ListViewGroup_Header_\" data-linktype=\"relative-path\">Header</a> and <a class=\"xref\" href=\"system.windows.forms.listviewgroup#System_Windows_Forms_ListViewGroup_HeaderAlignment_\" data-linktype=\"relative-path\">HeaderAlignment</a> properties.  </p>\n<p> To temporarily disable the grouping feature, set the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ShowGroups_\" data-linktype=\"relative-path\">ShowGroups</a> property to <code>false</code>.  </p>\n<p> You can assign an item to a group by specifying the group in the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem__ctor_\" data-linktype=\"relative-path\">ListViewItem</a> constructor, by setting the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_Group_\" data-linktype=\"relative-path\">Group</a> property, or by directly adding the item to the <a class=\"xref\" href=\"system.windows.forms.listviewgroup#System_Windows_Forms_ListViewGroup_Items_\" data-linktype=\"relative-path\">Items</a> collection of a group. All items should be assigned to groups before they are displayed. Any items that are not assigned to a group will appear in the default group, which has the header label &quot;DefaultGroup{0}&quot;. The default group is not contained in the Groups collection, and cannot be altered. It is primarily useful in debugging to ensure that all items have been properly added to groups.  </p>\n<p> An item can only be in one group at a time. You can change the group to which an item belongs by setting the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_Group_\" data-linktype=\"relative-path\">Group</a> property at run time or by adding it to the <a class=\"xref\" href=\"system.windows.forms.listviewgroup#System_Windows_Forms_ListViewGroup_Items_\" data-linktype=\"relative-path\">Items</a> collection of another group, which automatically removes it from the previous group.  </p>\n<p> The insertion mark feature is disabled when using groups. This is because the grouping feature orders items by group membership, while the insertion mark feature is used with drag-and-drop repositioning in a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control that does not already order its items.  </p>\n<p> <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> groups are available only on Windows XP and Windows Server 2003 when your application calls the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_EnableVisualStyles_\" data-linktype=\"relative-path\">EnableVisualStyles</a> method. On earlier operating systems, any code relating to groups has no effect and the groups will not appear. As a result, any code that depends on the grouping feature might not work correctly.  </p>\n<p> You might want to include code that determines whether the grouping feature is available, and provide alternate functionality when it is unavailable. For example, you might want to provide alternate sorting when running on operating systems that do not support sorting by group.  </p>\n<p> The grouping feature is provided by the same library that provides the operating system themes feature. To check for the availability of this library, call the <a class=\"xref\" href=\"system.windows.forms.featuresupport#System_Windows_Forms_FeatureSupport_IsPresent_System_Object_\" data-linktype=\"relative-path\">System.Windows.Forms.FeatureSupport.IsPresent(Object)</a> method overload and pass in the <a class=\"xref\" href=\"system.windows.forms.osfeature#System_Windows_Forms_OSFeature_Themes\" data-linktype=\"relative-path\">System.Windows.Forms.OSFeature.Themes</a> value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> grouping feature to organize items by subitem value in the details view. This form of grouping is similar to the grouping used in Windows Explorer. In the example, the groups are created dynamically. For each subitem column, one group is created for each unique subitem value. For the parent item column, one group is created for each unique initial letter. Clicking the header of a column sorts the items into the groups created for that column. Clicking the same column header again reverses the order of the groups.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView.Groups#1\">using System;\nusing System.Collections; \nusing System.Windows.Forms;\n\npublic class ListViewGroupsExample : Form\n{\n    private ListView myListView;\n\n    // Determine whether Windows XP or a later\n    // operating system is present.\n    private bool isRunningXPOrLater = \n        OSFeature.Feature.IsPresent(OSFeature.Themes);\n\n    // Declare a Hashtable array in which to store the groups.\n    private Hashtable[] groupTables;\n\n    // Declare a variable to store the current grouping column.\n    int groupColumn = 0;\n\n    public ListViewGroupsExample()\n    {\n        // Initialize myListView.\n        myListView = new ListView();\n        myListView.Dock = DockStyle.Fill;\n        myListView.View = View.Details;\n        myListView.Sorting = SortOrder.Ascending;\n\n        // Create and initialize column headers for myListView.\n        ColumnHeader columnHeader0 = new ColumnHeader();\n        columnHeader0.Text = &quot;Title&quot;;\n        columnHeader0.Width = -1;\n        ColumnHeader columnHeader1 = new ColumnHeader();\n        columnHeader1.Text = &quot;Author&quot;;\n        columnHeader1.Width = -1;\n        ColumnHeader columnHeader2 = new ColumnHeader();\n        columnHeader2.Text = &quot;Year&quot;;\n        columnHeader2.Width = -1;\n\n        // Add the column headers to myListView.\n        myListView.Columns.AddRange(new ColumnHeader[] \n            {columnHeader0, columnHeader1, columnHeader2});\n\n        // Add a handler for the ColumnClick event.\n        myListView.ColumnClick += \n            new ColumnClickEventHandler(myListView_ColumnClick);\n\n        // Create items and add them to myListView.\n        ListViewItem item0 = new ListViewItem( new string[] \n            {&quot;Programming Windows&quot;, \n            &quot;Petzold, Charles&quot;, \n            &quot;1998&quot;} );\n        ListViewItem item1 = new ListViewItem( new string[] \n            {&quot;Code: The Hidden Language of Computer Hardware and Software&quot;, \n            &quot;Petzold, Charles&quot;, \n            &quot;2000&quot;} );\n        ListViewItem item2 = new ListViewItem( new string[] \n            {&quot;Programming Windows with C#&quot;, \n            &quot;Petzold, Charles&quot;, \n            &quot;2001&quot;} );\n        ListViewItem item3 = new ListViewItem( new string[] \n            {&quot;Coding Techniques for Microsoft Visual Basic .NET&quot;, \n            &quot;Connell, John&quot;, \n            &quot;2001&quot;} );\n        ListViewItem item4 = new ListViewItem( new string[] \n            {&quot;C# for Java Developers&quot;, \n            &quot;Jones, Allen &amp; Freeman, Adam&quot;, \n            &quot;2002&quot;} );\n        ListViewItem item5 = new ListViewItem( new string[] \n            {&quot;Microsoft .NET XML Web Services Step by Step&quot;, \n            &quot;Jones, Allen &amp; Freeman, Adam&quot;, \n            &quot;2002&quot;} );\n        myListView.Items.AddRange(\n            new ListViewItem[] {item0, item1, item2, item3, item4, item5});\n\n        if (isRunningXPOrLater)\n        {\n            // Create the groupsTable array and populate it with one \n            // hash table for each column.\n            groupTables = new Hashtable[myListView.Columns.Count];\n            for (int column = 0; column &lt; myListView.Columns.Count; column++)\n            {\n                // Create a hash table containing all the groups \n                // needed for a single column.\n                groupTables[column] = CreateGroupsTable(column);\n            }\n\n            // Start with the groups created for the Title column.\n            SetGroups(0);\n        }\n\n        // Initialize the form.\n        this.Controls.Add(myListView);\n        this.Size = new System.Drawing.Size(550, 330);\n        this.Text = &quot;ListView Groups Example&quot;;\n    }\n\n    [STAThread]\n    static void Main() \n    {\n        Application.EnableVisualStyles();\n        Application.Run(new ListViewGroupsExample());\n    }\n\n    // Groups the items using the groups created for the clicked \n    // column.\n    private void myListView_ColumnClick(\n        object sender, ColumnClickEventArgs e)\n    {\n        // Set the sort order to ascending when changing\n        // column groups; otherwise, reverse the sort order.\n        if ( myListView.Sorting == SortOrder.Descending || \n            ( isRunningXPOrLater &amp;&amp; (e.Column != groupColumn) ) )\n        {\n            myListView.Sorting = SortOrder.Ascending;\n        }\n        else \n        {\n            myListView.Sorting = SortOrder.Descending;\n        }\n        groupColumn = e.Column;\n\n        // Set the groups to those created for the clicked column.\n        if (isRunningXPOrLater)\n        {\n            SetGroups(e.Column);\n        }\n    }\n\n    // Sets myListView to the groups created for the specified column.\n    private void SetGroups(int column)\n    {\n        // Remove the current groups.\n        myListView.Groups.Clear();\n\n        // Retrieve the hash table corresponding to the column.\n        Hashtable groups = (Hashtable)groupTables[column];\n\n        // Copy the groups for the column to an array.\n        ListViewGroup[] groupsArray = new ListViewGroup[groups.Count];\n        groups.Values.CopyTo(groupsArray, 0);\n\n        // Sort the groups and add them to myListView.\n        Array.Sort(groupsArray, new ListViewGroupSorter(myListView.Sorting));\n        myListView.Groups.AddRange(groupsArray);\n\n        // Iterate through the items in myListView, assigning each \n        // one to the appropriate group.\n        foreach (ListViewItem item in myListView.Items)\n        {\n            // Retrieve the subitem text corresponding to the column.\n            string subItemText = item.SubItems[column].Text;\n\n            // For the Title column, use only the first letter.\n            if (column == 0) \n            {\n                subItemText = subItemText.Substring(0, 1);\n            }\n\n            // Assign the item to the matching group.\n            item.Group = (ListViewGroup)groups[subItemText];\n        }\n    }\n\n    // Creates a Hashtable object with one entry for each unique\n    // subitem value (or initial letter for the parent item)\n    // in the specified column.\n    private Hashtable CreateGroupsTable(int column)\n    {\n        // Create a Hashtable object.\n        Hashtable groups = new Hashtable();\n\n        // Iterate through the items in myListView.\n        foreach (ListViewItem item in myListView.Items)\n        {\n            // Retrieve the text value for the column.\n            string subItemText = item.SubItems[column].Text;\n\n            // Use the initial letter instead if it is the first column.\n            if (column == 0) \n            {\n                subItemText = subItemText.Substring(0, 1);\n            }\n\n            // If the groups table does not already contain a group\n            // for the subItemText value, add a new group using the \n            // subItemText value for the group header and Hashtable key.\n            if (!groups.Contains(subItemText))\n            {\n                groups.Add( subItemText, new ListViewGroup(subItemText, \n                    HorizontalAlignment.Left) );\n            }\n        }\n\n        // Return the Hashtable object.\n        return groups;\n    }\n\n    // Sorts ListViewGroup objects by header value.\n    private class ListViewGroupSorter : IComparer\n    {\n        private SortOrder order;\n\n        // Stores the sort order.\n        public ListViewGroupSorter(SortOrder theOrder) \n        { \n            order = theOrder;\n        }\n\n        // Compares the groups by header value, using the saved sort\n        // order to return the correct value.\n        public int Compare(object x, object y)\n        {\n            int result = String.Compare(\n                ((ListViewGroup)x).Header,\n                ((ListViewGroup)y).Header\n            );\n            if (order == SortOrder.Ascending)\n            {\n                return result;\n            }\n            else \n            {\n                return -result;\n            }\n        }\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView.Groups#1\">Imports System\nImports System.Collections\nImports System.Windows.Forms\n\nPublic Class ListViewGroupsExample\n    Inherits Form\n\n    Private myListView As ListView\n\n    &#39; Determine whether Windows XP or a later\n    &#39; operating system is present.\n    Private isRunningXPOrLater As Boolean = _\n        OSFeature.Feature.IsPresent(OSFeature.Themes)\n    \n    &#39; Declare a Hashtable array in which to store the groups.\n    Private groupTables() As Hashtable\n    \n    &#39; Declare a variable to store the current grouping column.\n    Private groupColumn As Integer = 0\n    \n    Public Sub New()\n        &#39; Initialize myListView.\n        myListView = New ListView()\n        myListView.Dock = DockStyle.Fill\n        myListView.View = View.Details\n        myListView.Sorting = SortOrder.Ascending\n        \n        &#39; Create and initialize column headers for myListView.\n        Dim columnHeader0 As New ColumnHeader()\n        columnHeader0.Text = &quot;Title&quot;\n        columnHeader0.Width = -1\n        Dim columnHeader1 As New ColumnHeader()\n        columnHeader1.Text = &quot;Author&quot;\n        columnHeader1.Width = -1\n        Dim columnHeader2 As New ColumnHeader()\n        columnHeader2.Text = &quot;Year&quot;\n        columnHeader2.Width = -1\n        \n        &#39; Add the column headers to myListView.\n        myListView.Columns.AddRange( New ColumnHeader() _\n            {columnHeader0, columnHeader1, columnHeader2} )\n        \n        &#39; Add a handler for the ColumnClick event.\n        AddHandler myListView.ColumnClick, AddressOf myListView_ColumnClick\n        \n        &#39; Create items and add them to myListView.\n        Dim item0 As New ListViewItem( New String() _\n            {&quot;Programming Windows&quot;, _\n            &quot;Petzold, Charles&quot;, _\n            &quot;1998&quot;} )\n        Dim item1 As New ListViewItem( New String() _\n            {&quot;Code: The Hidden Language of Computer Hardware and Software&quot;, _\n            &quot;Petzold, Charles&quot;, _\n            &quot;2000&quot;} )\n        Dim item2 As New ListViewItem( New String() _\n            {&quot;Programming Windows with C#&quot;, _\n            &quot;Petzold, Charles&quot;, _\n            &quot;2001&quot;} )\n        Dim item3 As New ListViewItem( New String() _\n            {&quot;Coding Techniques for Microsoft Visual Basic .NET&quot;, _\n            &quot;Connell, John&quot;, _\n            &quot;2001&quot;} )\n        Dim item4 As New ListViewItem( New String() _\n            {&quot;C# for Java Developers&quot;, _\n            &quot;Jones, Allen / Freeman, Adam&quot;, _\n            &quot;2002&quot;} )\n        Dim item5 As New ListViewItem( New String() _\n            {&quot;Microsoft .NET XML Web Services Step by Step&quot;, _\n            &quot;Jones, Allen / Freeman, Adam&quot;, _\n            &quot;2002&quot;} )\n        myListView.Items.AddRange( _\n            New ListViewItem() {item0, item1, item2, item3, item4, item5})\n        \n        If isRunningXPOrLater\n            &#39; Create the groupsTable array and populate it with one \n            &#39; hash table for each column.\n            groupTables = New Hashtable(myListView.Columns.Count) {}\n            Dim column As Integer\n            For column = 0 To myListView.Columns.Count - 1\n                &#39; Create a hash table containing all the groups \n                &#39; needed for a single column.\n                groupTables(column) = CreateGroupsTable(column)\n            Next column\n            \n            &#39; Start with the groups created for the Title column.\n            SetGroups(0)\n        End If\n        \n        &#39; Initialize the form.\n        Me.Controls.Add(myListView)\n        Me.Size = New System.Drawing.Size(550, 330)\n        Me.Text = &quot;ListView Groups Example&quot;\n    End Sub &#39;New\n    \n    &lt;STAThread()&gt; _\n    Shared Sub Main()\n        Application.EnableVisualStyles()\n        Application.Run(New ListViewGroupsExample())\n    End Sub &#39;Main\n    \n    &#39; Groups the items using the groups created for the clicked \n    &#39; column.\n    Private Sub myListView_ColumnClick( _\n        sender As Object, e As ColumnClickEventArgs)\n\n        &#39; Set the sort order to ascending when changing\n        &#39; column groups; otherwise, reverse the sort order.\n        If myListView.Sorting = SortOrder.Descending OrElse _\n            isRunningXPOrLater And e.Column &lt;&gt; groupColumn Then\n            myListView.Sorting = SortOrder.Ascending\n        Else\n            myListView.Sorting = SortOrder.Descending\n        End If\n        groupColumn = e.Column\n        \n        &#39; Set the groups to those created for the clicked column.\n        If isRunningXPOrLater Then\n            SetGroups(e.Column)\n        End If\n    End Sub &#39;myListView_ColumnClick\n    \n    &#39; Sets myListView to the groups created for the specified column.\n    Private Sub SetGroups(column As Integer)\n        &#39; Remove the current groups.\n        myListView.Groups.Clear()\n        \n        &#39; Retrieve the hash table corresponding to the column.\n        Dim groups As Hashtable = CType(groupTables(column), Hashtable)\n        \n        &#39; Copy the groups for the column to an array.\n        Dim groupsArray(groups.Count - 1) As ListViewGroup\n        groups.Values.CopyTo(groupsArray, 0)\n        \n        &#39; Sort the groups and add them to myListView.\n        Array.Sort(groupsArray, New ListViewGroupSorter(myListView.Sorting))\n        myListView.Groups.AddRange(groupsArray)\n        \n        &#39; Iterate through the items in myListView, assigning each \n        &#39; one to the appropriate group.\n        Dim item As ListViewItem\n        For Each item In myListView.Items\n            &#39; Retrieve the subitem text corresponding to the column.\n            Dim subItemText As String = item.SubItems(column).Text\n            \n            &#39; For the Title column, use only the first letter.\n            If column = 0 Then\n                subItemText = subItemText.Substring(0, 1)\n            End If \n\n            &#39; Assign the item to the matching group.\n            item.Group = CType(groups(subItemText), ListViewGroup)\n        Next item\n    End Sub &#39;SetGroups\n\n    &#39; Creates a Hashtable object with one entry for each unique\n    &#39; subitem value (or initial letter for the parent item)\n    &#39; in the specified column.\n    Private Function CreateGroupsTable(column As Integer) As Hashtable\n        &#39; Create a Hashtable object.\n        Dim groups As New Hashtable()\n        \n        &#39; Iterate through the items in myListView.\n        Dim item As ListViewItem\n        For Each item In myListView.Items\n            &#39; Retrieve the text value for the column.\n            Dim subItemText As String = item.SubItems(column).Text\n            \n            &#39; Use the initial letter instead if it is the first column.\n            If column = 0 Then\n                subItemText = subItemText.Substring(0, 1)\n            End If \n\n            &#39; If the groups table does not already contain a group\n            &#39; for the subItemText value, add a new group using the \n            &#39; subItemText value for the group header and Hashtable key.\n            If Not groups.Contains(subItemText) Then\n                groups.Add( subItemText, New ListViewGroup(subItemText, _\n                    HorizontalAlignment.Left) )\n            End If\n        Next item\n        \n        &#39; Return the Hashtable object.\n        Return groups\n    End Function &#39;CreateGroupsTable\n\n    &#39; Sorts ListViewGroup objects by header value.\n    Private Class ListViewGroupSorter\n        Implements IComparer \n        \n        Private order As SortOrder\n        \n        &#39; Stores the sort order.\n        Public Sub New(theOrder As SortOrder)\n            order = theOrder\n        End Sub &#39;New\n        \n        &#39; Compares the groups by header value, using the saved sort\n        &#39; order to return the correct value.\n        Public Function Compare(x As Object, y As Object) As Integer _\n            Implements IComparer.Compare\n            Dim result As Integer = String.Compare( _\n                CType(x, ListViewGroup).Header, _\n                CType(y, ListViewGroup).Header )\n            If order = SortOrder.Ascending Then\n                Return result\n            Else\n                Return -result\n            End If\n        End Function &#39;Compare\n    End Class &#39;ListViewGroupSorter \n\nEnd Class &#39;ListViewGroupsExample\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView.Groups#1\">#using &lt;mscorlib.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\nusing namespace System;\nusing namespace System::Collections; \nusing namespace System::Windows::Forms;\n\npublic ref class ListViewGroupsExample : public Form\n{\nprivate:\n   ListView^ myListView;\n   bool isRunningXPOrLater;\n\n   // Declare a Hashtable array in which to store the groups.\n   array&lt;Hashtable^&gt;^ groupTables;\n\n   // Declare a variable to store the current grouping column.\n   int groupColumn;\n\npublic:\n   ListViewGroupsExample()\n   {\n      groupColumn = 0;\n      // Initialize myListView.\n      myListView = gcnew ListView();\n      myListView-&gt;Dock = DockStyle::Fill;\n      myListView-&gt;View = View::Details;\n      myListView-&gt;Sorting = SortOrder::Ascending;\n\n      // Create and initialize column headers for myListView.\n      ColumnHeader^ columnHeader0 = gcnew ColumnHeader();\n      columnHeader0-&gt;Text = &quot;Title&quot;;\n      columnHeader0-&gt;Width = -1;\n      ColumnHeader^ columnHeader1 = gcnew ColumnHeader();\n      columnHeader1-&gt;Text = &quot;Author&quot;;\n      columnHeader1-&gt;Width = -1;\n      ColumnHeader^ columnHeader2 = gcnew ColumnHeader();\n      columnHeader2-&gt;Text = &quot;Year&quot;;\n      columnHeader2-&gt;Width = -1;\n\n      // Add the column headers to myListView.\n\n      array&lt;ColumnHeader^&gt;^ temp0 = {columnHeader0, columnHeader1, columnHeader2};\n      myListView-&gt;Columns-&gt;AddRange(temp0);\n\n      // Add a handler for the ColumnClick event.\n      myListView-&gt;ColumnClick += \n         gcnew ColumnClickEventHandler(this, &amp;ListViewGroupsExample::myListView_ColumnClick);\n\n      // Create items and add them to myListView.\n\n      array&lt;String^&gt;^ temp1 = {&quot;Programming Windows&quot;, &quot;Petzold, Charles&quot;, &quot;1998&quot;};\n      ListViewItem^ item0 = gcnew ListViewItem( temp1 );\n\n      array&lt;String^&gt;^ temp2 = {&quot;Code: The Hidden Language of Computer Hardware and Software&quot;,\n         &quot;Petzold, Charles&quot;, &quot;2000&quot;};\n      ListViewItem^ item1 = gcnew ListViewItem( temp2 );\n\n      array&lt;String^&gt;^ temp3 = {&quot;Programming Windows with C#&quot;, &quot;Petzold, Charles&quot;, &quot;2001&quot;};\n      ListViewItem^ item2 = gcnew ListViewItem( temp3 );\n\n      array&lt;String^&gt;^ temp4 = {&quot;Coding Techniques for Microsoft Visual Basic .NET&quot;,\n         &quot;Connell, John&quot;, &quot;2001&quot;};\n      ListViewItem^ item3 = gcnew ListViewItem( temp4 );\n\n      array&lt;String^&gt;^ temp5 = {&quot;C# for Java Developers&quot;, &quot;Jones, Allen &amp; Freeman, Adam&quot;,\n         &quot;2002&quot;};\n      ListViewItem^ item4 = gcnew ListViewItem( temp5 );\n\n      array&lt;String^&gt;^ temp6 = {&quot;Microsoft .NET XML Web Services Step by Step&quot;,\n         &quot;Jones, Allen &amp; Freeman, Adam&quot;, &quot;2002&quot;};\n      ListViewItem^ item5 = gcnew ListViewItem( temp6 );\n\n      array&lt;ListViewItem^&gt;^ temp7 = {item0, item1, item2, item3, item4, item5};\n      myListView-&gt;Items-&gt;AddRange( temp7 );\n\n      // Determine whether Windows XP or a later \n      // operating system is present.\n      isRunningXPOrLater = false;\n\n      if (System::Environment::OSVersion-&gt;Version-&gt;Major &gt; 5 ||\n         ( System::Environment::OSVersion-&gt;Version-&gt;Major == 5 &amp;&amp;\n         System::Environment::OSVersion-&gt;Version-&gt;Minor &gt;= 1) )\n      {\n         isRunningXPOrLater = true;\n      }\n\n      if (isRunningXPOrLater)\n      {\n         // Create the groupsTable array and populate it with one \n         // hash table for each column.\n         groupTables = gcnew array&lt;Hashtable^&gt;(myListView-&gt;Columns-&gt;Count);\n         for (int column = 0; column &lt; myListView-&gt;Columns-&gt;Count; column++)\n         {\n            // Create a hash table containing all the groups \n            // needed for a single column.\n            groupTables[column] = CreateGroupsTable(column);\n         }\n\n         // Start with the groups created for the Title column.\n         SetGroups(0);\n      }\n\n      // Initialize the form.\n      this-&gt;Controls-&gt;Add(myListView);\n      this-&gt;Size = System::Drawing::Size(550, 330);\n      this-&gt;Text = &quot;ListView Groups Example&quot;;\n   }\n\n   // Groups the items using the groups created for the clicked \n   // column.\nprivate:\n   void myListView_ColumnClick(\n      Object^ /*sender*/, ColumnClickEventArgs^ e)\n   {\n      // Set the sort order to ascending when changing\n      // column groups; otherwise, reverse the sort order.\n      if ( myListView-&gt;Sorting == SortOrder::Descending || \n         ( isRunningXPOrLater &amp;&amp; (e-&gt;Column != groupColumn) ) )\n      {\n         myListView-&gt;Sorting = SortOrder::Ascending;\n      }\n      else \n      {\n         myListView-&gt;Sorting = SortOrder::Descending;\n      }\n      groupColumn = e-&gt;Column;\n\n      // Set the groups to those created for the clicked column.\n      if (isRunningXPOrLater)\n      {\n         SetGroups(e-&gt;Column);\n      }\n   }\n\n   // Sets myListView to the groups created for the specified column.\nprivate:\n   void SetGroups(int column)\n   {\n      // Remove the current groups.\n      myListView-&gt;Groups-&gt;Clear();\n\n      // Retrieve the hash table corresponding to the column.\n      Hashtable^ groups = dynamic_cast&lt;Hashtable^&gt;(groupTables[column]);\n\n      // Copy the groups for the column to an array.\n      array&lt;ListViewGroup^&gt;^ groupsArray = gcnew array&lt;ListViewGroup^&gt;(groups-&gt;Count);\n      groups-&gt;Values-&gt;CopyTo(groupsArray, 0);\n\n      // Sort the groups and add them to myListView.\n      Array::Sort(groupsArray, gcnew ListViewGroupSorter(myListView-&gt;Sorting));\n      myListView-&gt;Groups-&gt;AddRange(groupsArray);\n\n      // Iterate through the items in myListView, assigning each \n      // one to the appropriate group.\n      IEnumerator^ myEnum = myListView-&gt;Items-&gt;GetEnumerator();\n      while (myEnum-&gt;MoveNext())\n      {\n         ListViewItem^ item = safe_cast&lt;ListViewItem^&gt;(myEnum-&gt;Current);\n         // Retrieve the subitem text corresponding to the column.\n         String^ subItemText = item-&gt;SubItems[column]-&gt;Text;\n\n         // For the Title column, use only the first letter.\n         if (column == 0) \n         {\n            subItemText = subItemText-&gt;Substring(0, 1);\n         }\n\n         // Assign the item to the matching group.\n         item-&gt;Group = dynamic_cast&lt;ListViewGroup^&gt;(groups[subItemText]);\n      }\n   }\n\n   // Creates a Hashtable object with one entry for each unique\n   // subitem value (or initial letter for the parent item)\n   // in the specified column.\nprivate:\n   Hashtable^ CreateGroupsTable(int column)\n   {\n      // Create a Hashtable object.\n      Hashtable^ groups = gcnew Hashtable();\n\n      // Iterate through the items in myListView.\n      IEnumerator^ myEnum1 = myListView-&gt;Items-&gt;GetEnumerator();\n      while (myEnum1-&gt;MoveNext())\n      {\n         ListViewItem^ item = safe_cast&lt;ListViewItem^&gt;(myEnum1-&gt;Current);\n         // Retrieve the text value for the column.\n         String^ subItemText = item-&gt;SubItems[column]-&gt;Text;\n\n         // Use the initial letter instead if it is the first column.\n         if (column == 0) \n         {\n            subItemText = subItemText-&gt;Substring(0, 1);\n         }\n\n         // If the groups table does not already contain a group\n         // for the subItemText value, add a new group using the \n         // subItemText value for the group header and Hashtable key.\n         if (!groups-&gt;Contains(subItemText))\n         {\n            groups-&gt;Add( subItemText, gcnew ListViewGroup(subItemText, \n               HorizontalAlignment::Left) );\n         }\n      }\n\n      // Return the Hashtable object.\n      return groups;\n   }\n\n   // Sorts ListViewGroup objects by header value.\n   ref class ListViewGroupSorter : public IComparer\n   {\n   private:\n      SortOrder order;\n\n      // Stores the sort order.\n   public:\n      ListViewGroupSorter(SortOrder theOrder) \n      { \n         order = theOrder;\n      }\n\n      // Compares the groups by header value, using the saved sort\n      // order to return the correct value.\n      virtual int Compare(Object^ x, Object^ y)\n      {\n         int result = String::Compare(\n            (dynamic_cast&lt;ListViewGroup^&gt;(x))-&gt;Header,\n            (dynamic_cast&lt;ListViewGroup^&gt;(y))-&gt;Header\n            );\n         if (order == SortOrder::Ascending)\n         {\n            return result;\n         }\n         else \n         {\n            return -result;\n         }\n      }\n   };\n};\n\n[STAThread]\nint main() \n{\n   Application::EnableVisualStyles();\n   Application::Run(gcnew ListViewGroupsExample());\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_HeaderStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_HeaderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HeaderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the column header style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ColumnHeaderStyle HeaderStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.columnheaderstyle\" data-linktype=\"relative-path\">ColumnHeaderStyle</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.columnheaderstyle\" data-linktype=\"relative-path\">ColumnHeaderStyle</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.columnheaderstyle\" data-linktype=\"relative-path\">ColumnHeaderStyle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value specified is not one of the <a class=\"xref\" href=\"system.windows.forms.columnheaderstyle\" data-linktype=\"relative-path\">ColumnHeaderStyle</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The HeaderStyle property allows you to specify the type of column headers to display when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> and the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control has <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects specified in the <a class=\"xref\" href=\"system.windows.forms.listview.columnheadercollection\" data-linktype=\"relative-path\">ListView+ColumnHeaderCollection</a>. <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects define the columns that are displayed in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. Each column is used to display subitem information for each item in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>.  </p>\n<p> The HeaderStyle property allows you to specify whether the column headers are visible or, if they are visible, whether they will function as clickable buttons. If the HeaderStyle property is set to <a class=\"xref\" href=\"system.windows.forms.columnheaderstyle\" data-linktype=\"relative-path\">System.Windows.Forms.ColumnHeaderStyle</a>, the column headers are not displayed, although the items and subitems of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control are still arranged in columns. If the HeaderStyle property is set to <a class=\"xref\" href=\"system.windows.forms.columnheaderstyle\" data-linktype=\"relative-path\">System.Windows.Forms.ColumnHeaderStyle</a>, the column headers act like buttons that users can click to carry out an action, such as sorting the items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control using the items in the clicked column as a key. You can implement this behavior in a handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ColumnClick\" data-linktype=\"relative-path\">ColumnClick</a> event. If the HeaderStyle property is set to <a class=\"xref\" href=\"system.windows.forms.columnheaderstyle\" data-linktype=\"relative-path\">System.Windows.Forms.ColumnHeaderStyle</a>, the column headers appear, but cannot be clicked.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> that allows multiple items to be selected. The example demonstrates setting the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_HideSelection_\" data-linktype=\"relative-path\">HideSelection</a> and HeaderStyle properties. It also demonstrates the <a class=\"xref\" href=\"system.windows.forms.columnheader#System_Windows_Forms_ColumnHeader_Text_\" data-linktype=\"relative-path\">Text</a>, <a class=\"xref\" href=\"system.windows.forms.columnheader#System_Windows_Forms_ColumnHeader_TextAlign_\" data-linktype=\"relative-path\">TextAlign</a> and <a class=\"xref\" href=\"system.windows.forms.columnheader#System_Windows_Forms_ColumnHeader_Width_\" data-linktype=\"relative-path\">Width</a> properties. To run this example, paste the following code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> object named <code>ListView1</code> and a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> named <code>TextBox1</code>. Call the <code>InitializeListView</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView1#1\">\t// This method adds two columns to the ListView, setting the Text \n\t// and TextAlign, and Width properties of each ColumnHeader.  The \n\t// HeaderStyle property is set to NonClickable since the ColumnClick \n\t// event is not handled.  Finally the method adds ListViewItems and \n\t// SubItems to each column.\n\tprivate void InitializeListView()\n\t{\n\t\tthis.ListView1 = new System.Windows.Forms.ListView();\n\t\tthis.ListView1.BackColor = System.Drawing.SystemColors.Control;\n\t\tthis.ListView1.Dock = System.Windows.Forms.DockStyle.Top;\n\t\tthis.ListView1.Location = new System.Drawing.Point(0, 0);\n\t\tthis.ListView1.Name = &quot;ListView1&quot;;\n\t\tthis.ListView1.Size = new System.Drawing.Size(292, 130);\n\t\tthis.ListView1.TabIndex = 0;\n\t\tthis.ListView1.View = System.Windows.Forms.View.Details;\n\t\tthis.ListView1.MultiSelect = true;\n\t\tthis.ListView1.HideSelection = false;\n\t\tthis.ListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable;\n\t\t\n\t\tColumnHeader columnHeader1 = new ColumnHeader();\n\t\tcolumnHeader1.Text = &quot;Breakfast Item&quot;;\n\t\tcolumnHeader1.TextAlign = HorizontalAlignment.Left;\n\t\tcolumnHeader1.Width = 146;\n\n\t \tColumnHeader columnHeader2 = new ColumnHeader();\n\t\tcolumnHeader2.Text = &quot;Price Each&quot;;\n\t\tcolumnHeader2.TextAlign = HorizontalAlignment.Center;\n\t\tcolumnHeader2.Width = 142;\n  \n\t\tthis.ListView1.Columns.Add(columnHeader1);\n\t\tthis.ListView1.Columns.Add(columnHeader2);\n\n\t\tstring[] foodList = new string[]{&quot;Juice&quot;, &quot;Coffee&quot;, \n\t\t\t&quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, \n\t\t\t&quot;Bagel &amp; Cream Cheese&quot;};\n\t\tstring[] foodPrice = new string[]{&quot;1.09&quot;, &quot;1.09&quot;, &quot;2.19&quot;, \n\t\t\t&quot;2.49&quot;, &quot;1.49&quot;, &quot;1.49&quot;};\n\t\t\n\t\tfor(int count=0; count &lt; foodList.Length; count++)\n\t\t{\n\t\t\tListViewItem listItem = new ListViewItem(foodList[count]);\n\t\t\tlistItem.SubItems.Add(foodPrice[count]);\n\t\t\tListView1.Items.Add(listItem);\n\t\t}\n\t\tthis.Controls.Add(ListView1);\n\t}\n\t\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView1#1\">    &#39; This method adds two columns to the ListView, setting the Text \n    &#39; and TextAlign, and Width properties of each ColumnHeader.  The \n    &#39; HeaderStyle property is set to NonClickable since the ColumnClick \n    &#39; event is not handled.  Finally the method adds ListViewItems and \n    &#39; SubItems to each column.\n    Private Sub InitializeListView()\n        Me.ListView1 = New System.Windows.Forms.ListView\n        Me.ListView1.BackColor = System.Drawing.SystemColors.Control\n        Me.ListView1.Dock = System.Windows.Forms.DockStyle.Top\n        Me.ListView1.Location = New System.Drawing.Point(0, 0)\n        Me.ListView1.Name = &quot;ListView1&quot;\n        Me.ListView1.Size = New System.Drawing.Size(292, 130)\n        Me.ListView1.TabIndex = 0\n        Me.ListView1.View = System.Windows.Forms.View.Details\n        Me.ListView1.MultiSelect = True\n        Me.ListView1.HideSelection = False\n        ListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable\n        Dim columnHeader1 As New ColumnHeader\n        With columnHeader1\n            .Text = &quot;Breakfast Item&quot;\n            .TextAlign = HorizontalAlignment.Left\n            .Width = 146\n        End With\n        Dim columnHeader2 As New ColumnHeader\n        With columnHeader2\n            .Text = &quot;Price Each&quot;\n            .TextAlign = HorizontalAlignment.Center\n            .Width = 142\n        End With\n\n        Me.ListView1.Columns.Add(columnHeader1)\n        Me.ListView1.Columns.Add(columnHeader2)\n        Dim foodList() As String = New String() {&quot;Juice&quot;, &quot;Coffee&quot;, _\n            &quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, _\n            &quot;Bagel &amp; Cream Cheese&quot;}\n        Dim foodPrice() As String = New String() {&quot;1.09&quot;, &quot;1.09&quot;, _\n            &quot;2.19&quot;, &quot;2.49&quot;, &quot;1.49&quot;, &quot;1.49&quot;}\n        Dim count As Integer\n        For count = 0 To foodList.Length - 1\n            Dim listItem As New ListViewItem(foodList(count))\n            listItem.SubItems.Add(foodPrice(count))\n            ListView1.Items.Add(listItem)\n        Next\n        Me.Controls.Add(Me.ListView1)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView1#1\">   // This method adds two columns to the ListView, setting the Text \n   // and TextAlign, and Width properties of each ColumnHeader.  The \n   // HeaderStyle property is set to NonClickable since the ColumnClick \n   // event is not handled.  Finally the method adds ListViewItems and \n   // SubItems to each column.\n   void InitializeListView()\n   {\n      this-&gt;ListView1 = gcnew System::Windows::Forms::ListView;\n      this-&gt;ListView1-&gt;BackColor = System::Drawing::SystemColors::Control;\n      this-&gt;ListView1-&gt;Dock = System::Windows::Forms::DockStyle::Top;\n      this-&gt;ListView1-&gt;Location = System::Drawing::Point( 0, 0 );\n      this-&gt;ListView1-&gt;Name = &quot;ListView1&quot;;\n      this-&gt;ListView1-&gt;Size = System::Drawing::Size( 292, 130 );\n      this-&gt;ListView1-&gt;TabIndex = 0;\n      this-&gt;ListView1-&gt;View = System::Windows::Forms::View::Details;\n      this-&gt;ListView1-&gt;MultiSelect = true;\n      this-&gt;ListView1-&gt;HideSelection = false;\n      this-&gt;ListView1-&gt;HeaderStyle = ColumnHeaderStyle::Nonclickable;\n      ColumnHeader^ columnHeader1 = gcnew ColumnHeader;\n      columnHeader1-&gt;Text = &quot;Breakfast Item&quot;;\n      columnHeader1-&gt;TextAlign = HorizontalAlignment::Left;\n      columnHeader1-&gt;Width = 146;\n      ColumnHeader^ columnHeader2 = gcnew ColumnHeader;\n      columnHeader2-&gt;Text = &quot;Price Each&quot;;\n      columnHeader2-&gt;TextAlign = HorizontalAlignment::Center;\n      columnHeader2-&gt;Width = 142;\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader1 );\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader2 );\n      array&lt;String^&gt;^foodList = {&quot;Juice&quot;,&quot;Coffee&quot;,&quot;Cereal &amp; Milk&quot;,&quot;Fruit Plate&quot;,&quot;Toast &amp; Jelly&quot;,&quot;Bagel &amp; Cream Cheese&quot;};\n      array&lt;String^&gt;^foodPrice = {&quot;1.09&quot;,&quot;1.09&quot;,&quot;2.19&quot;,&quot;2.49&quot;,&quot;1.49&quot;,&quot;1.49&quot;};\n      for ( int count = 0; count &lt; foodList-&gt;Length; count++ )\n      {\n         ListViewItem^ listItem = gcnew ListViewItem( foodList[ count ] );\n         listItem-&gt;SubItems-&gt;Add( foodPrice[ count ] );\n         ListView1-&gt;Items-&gt;Add( listItem );\n\n      }\n      this-&gt;Controls-&gt;Add( ListView1 );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_HideSelection\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_HideSelection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HideSelection</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the selected item in the control remains highlighted when the control loses focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HideSelection { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the selected item does not appear highlighted when the control loses focus; <code>false</code> if the selected item still appears highlighted when the control loses focus. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this property is set to <code>false</code>, selected items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control remain highlighted in a different color than the current selection color specified by the operating system when the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control loses focus. You can use this property to keep items that are selected by the user visible when the user clicks a different control on the form or moves to a different window.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you are concerned with the accessibility of your applications, it is recommended that you set the HideSelection property to <code>false</code>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> that allows multiple items to be selected. The example demonstrates setting the HideSelection and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_HeaderStyle_\" data-linktype=\"relative-path\">HeaderStyle</a> properties. It also demonstrates the <a class=\"xref\" href=\"system.windows.forms.columnheader#System_Windows_Forms_ColumnHeader_Text_\" data-linktype=\"relative-path\">Text</a>, <a class=\"xref\" href=\"system.windows.forms.columnheader#System_Windows_Forms_ColumnHeader_TextAlign_\" data-linktype=\"relative-path\">TextAlign</a>, and <a class=\"xref\" href=\"system.windows.forms.columnheader#System_Windows_Forms_ColumnHeader_Width_\" data-linktype=\"relative-path\">Width</a> properties. To run this example, paste the following code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> object named <code>ListView1</code> and a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> named <code>TextBox1</code>. Call the <code>InitializeListView</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView1#1\">\t// This method adds two columns to the ListView, setting the Text \n\t// and TextAlign, and Width properties of each ColumnHeader.  The \n\t// HeaderStyle property is set to NonClickable since the ColumnClick \n\t// event is not handled.  Finally the method adds ListViewItems and \n\t// SubItems to each column.\n\tprivate void InitializeListView()\n\t{\n\t\tthis.ListView1 = new System.Windows.Forms.ListView();\n\t\tthis.ListView1.BackColor = System.Drawing.SystemColors.Control;\n\t\tthis.ListView1.Dock = System.Windows.Forms.DockStyle.Top;\n\t\tthis.ListView1.Location = new System.Drawing.Point(0, 0);\n\t\tthis.ListView1.Name = &quot;ListView1&quot;;\n\t\tthis.ListView1.Size = new System.Drawing.Size(292, 130);\n\t\tthis.ListView1.TabIndex = 0;\n\t\tthis.ListView1.View = System.Windows.Forms.View.Details;\n\t\tthis.ListView1.MultiSelect = true;\n\t\tthis.ListView1.HideSelection = false;\n\t\tthis.ListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable;\n\t\t\n\t\tColumnHeader columnHeader1 = new ColumnHeader();\n\t\tcolumnHeader1.Text = &quot;Breakfast Item&quot;;\n\t\tcolumnHeader1.TextAlign = HorizontalAlignment.Left;\n\t\tcolumnHeader1.Width = 146;\n\n\t \tColumnHeader columnHeader2 = new ColumnHeader();\n\t\tcolumnHeader2.Text = &quot;Price Each&quot;;\n\t\tcolumnHeader2.TextAlign = HorizontalAlignment.Center;\n\t\tcolumnHeader2.Width = 142;\n  \n\t\tthis.ListView1.Columns.Add(columnHeader1);\n\t\tthis.ListView1.Columns.Add(columnHeader2);\n\n\t\tstring[] foodList = new string[]{&quot;Juice&quot;, &quot;Coffee&quot;, \n\t\t\t&quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, \n\t\t\t&quot;Bagel &amp; Cream Cheese&quot;};\n\t\tstring[] foodPrice = new string[]{&quot;1.09&quot;, &quot;1.09&quot;, &quot;2.19&quot;, \n\t\t\t&quot;2.49&quot;, &quot;1.49&quot;, &quot;1.49&quot;};\n\t\t\n\t\tfor(int count=0; count &lt; foodList.Length; count++)\n\t\t{\n\t\t\tListViewItem listItem = new ListViewItem(foodList[count]);\n\t\t\tlistItem.SubItems.Add(foodPrice[count]);\n\t\t\tListView1.Items.Add(listItem);\n\t\t}\n\t\tthis.Controls.Add(ListView1);\n\t}\n\t\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView1#1\">    &#39; This method adds two columns to the ListView, setting the Text \n    &#39; and TextAlign, and Width properties of each ColumnHeader.  The \n    &#39; HeaderStyle property is set to NonClickable since the ColumnClick \n    &#39; event is not handled.  Finally the method adds ListViewItems and \n    &#39; SubItems to each column.\n    Private Sub InitializeListView()\n        Me.ListView1 = New System.Windows.Forms.ListView\n        Me.ListView1.BackColor = System.Drawing.SystemColors.Control\n        Me.ListView1.Dock = System.Windows.Forms.DockStyle.Top\n        Me.ListView1.Location = New System.Drawing.Point(0, 0)\n        Me.ListView1.Name = &quot;ListView1&quot;\n        Me.ListView1.Size = New System.Drawing.Size(292, 130)\n        Me.ListView1.TabIndex = 0\n        Me.ListView1.View = System.Windows.Forms.View.Details\n        Me.ListView1.MultiSelect = True\n        Me.ListView1.HideSelection = False\n        ListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable\n        Dim columnHeader1 As New ColumnHeader\n        With columnHeader1\n            .Text = &quot;Breakfast Item&quot;\n            .TextAlign = HorizontalAlignment.Left\n            .Width = 146\n        End With\n        Dim columnHeader2 As New ColumnHeader\n        With columnHeader2\n            .Text = &quot;Price Each&quot;\n            .TextAlign = HorizontalAlignment.Center\n            .Width = 142\n        End With\n\n        Me.ListView1.Columns.Add(columnHeader1)\n        Me.ListView1.Columns.Add(columnHeader2)\n        Dim foodList() As String = New String() {&quot;Juice&quot;, &quot;Coffee&quot;, _\n            &quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, _\n            &quot;Bagel &amp; Cream Cheese&quot;}\n        Dim foodPrice() As String = New String() {&quot;1.09&quot;, &quot;1.09&quot;, _\n            &quot;2.19&quot;, &quot;2.49&quot;, &quot;1.49&quot;, &quot;1.49&quot;}\n        Dim count As Integer\n        For count = 0 To foodList.Length - 1\n            Dim listItem As New ListViewItem(foodList(count))\n            listItem.SubItems.Add(foodPrice(count))\n            ListView1.Items.Add(listItem)\n        Next\n        Me.Controls.Add(Me.ListView1)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView1#1\">   // This method adds two columns to the ListView, setting the Text \n   // and TextAlign, and Width properties of each ColumnHeader.  The \n   // HeaderStyle property is set to NonClickable since the ColumnClick \n   // event is not handled.  Finally the method adds ListViewItems and \n   // SubItems to each column.\n   void InitializeListView()\n   {\n      this-&gt;ListView1 = gcnew System::Windows::Forms::ListView;\n      this-&gt;ListView1-&gt;BackColor = System::Drawing::SystemColors::Control;\n      this-&gt;ListView1-&gt;Dock = System::Windows::Forms::DockStyle::Top;\n      this-&gt;ListView1-&gt;Location = System::Drawing::Point( 0, 0 );\n      this-&gt;ListView1-&gt;Name = &quot;ListView1&quot;;\n      this-&gt;ListView1-&gt;Size = System::Drawing::Size( 292, 130 );\n      this-&gt;ListView1-&gt;TabIndex = 0;\n      this-&gt;ListView1-&gt;View = System::Windows::Forms::View::Details;\n      this-&gt;ListView1-&gt;MultiSelect = true;\n      this-&gt;ListView1-&gt;HideSelection = false;\n      this-&gt;ListView1-&gt;HeaderStyle = ColumnHeaderStyle::Nonclickable;\n      ColumnHeader^ columnHeader1 = gcnew ColumnHeader;\n      columnHeader1-&gt;Text = &quot;Breakfast Item&quot;;\n      columnHeader1-&gt;TextAlign = HorizontalAlignment::Left;\n      columnHeader1-&gt;Width = 146;\n      ColumnHeader^ columnHeader2 = gcnew ColumnHeader;\n      columnHeader2-&gt;Text = &quot;Price Each&quot;;\n      columnHeader2-&gt;TextAlign = HorizontalAlignment::Center;\n      columnHeader2-&gt;Width = 142;\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader1 );\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader2 );\n      array&lt;String^&gt;^foodList = {&quot;Juice&quot;,&quot;Coffee&quot;,&quot;Cereal &amp; Milk&quot;,&quot;Fruit Plate&quot;,&quot;Toast &amp; Jelly&quot;,&quot;Bagel &amp; Cream Cheese&quot;};\n      array&lt;String^&gt;^foodPrice = {&quot;1.09&quot;,&quot;1.09&quot;,&quot;2.19&quot;,&quot;2.49&quot;,&quot;1.49&quot;,&quot;1.49&quot;};\n      for ( int count = 0; count &lt; foodList-&gt;Length; count++ )\n      {\n         ListViewItem^ listItem = gcnew ListViewItem( foodList[ count ] );\n         listItem-&gt;SubItems-&gt;Add( foodPrice[ count ] );\n         ListView1-&gt;Items-&gt;Add( listItem );\n\n      }\n      this-&gt;Controls-&gt;Add( ListView1 );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_HotTracking\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_HotTracking_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HotTracking</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the text of an item or subitem has the appearance of a hyperlink when the mouse pointer passes over it.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HotTracking { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the item text has the appearance of a hyperlink when the mouse passes over it; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Enabling hot tracking willcause the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Activation_\" data-linktype=\"relative-path\">Activation</a> property to be set to <a class=\"xref\" href=\"system.windows.forms.itemactivation\" data-linktype=\"relative-path\">ItemActivation</a> andthe<a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_HoverSelection_\" data-linktype=\"relative-path\">HoverSelection</a> property to be set to <code>true</code>. In addition, run-time label editing is not allowed when hot tracking is enabled.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> with hot tracking enabled. To run this example, paste the following code into a Windows Form and call the <code>InitializeHotTrackingListView</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListViewWhidbeyProperties#2\">    Private list As New ImageList()\n    Private hotTrackinglistView As New ListView()\n\n\n    Private Sub InitializeHotTrackingListView()\n        list.Images.Add(New Bitmap(GetType(Button), &quot;Button.bmp&quot;))\n        hotTrackinglistView.SmallImageList = list\n        hotTrackinglistView.Location = New Point(20, 20)\n        hotTrackinglistView.View = View.SmallIcon\n        Dim listItem1 As New ListViewItem(&quot;Short&quot;, 0)\n        Dim listItem2 As New ListViewItem(&quot;Tiny&quot;, 0)\n        hotTrackinglistView.Items.Add(listItem1)\n        hotTrackinglistView.Items.Add(listItem2)\n        hotTrackinglistView.HotTracking = True\n        Me.Controls.Add(hotTrackinglistView)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListViewWhidbeyProperties#2\">        private ImageList list = new ImageList();\n        private ListView hotTrackinglistView = new ListView();\n\n        private void InitializeHotTrackingListView(){\n            list.Images.Add(new Bitmap(typeof(Button), &quot;Button.bmp&quot;));\n            hotTrackinglistView.SmallImageList = list;\n            hotTrackinglistView.Location = new Point(20, 20);\n            hotTrackinglistView.View = View.SmallIcon;\n            ListViewItem listItem1 = new ListViewItem(&quot;Short&quot;, 0 );\n            ListViewItem listItem2 = new ListViewItem(&quot;Tiny&quot;, 0);\n            hotTrackinglistView.Items.Add(listItem1);\n            hotTrackinglistView.Items.Add(listItem2);\n            hotTrackinglistView.HotTracking = true;\n            this.Controls.Add(hotTrackinglistView);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_HoverSelection\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_HoverSelection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HoverSelection</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether an item is automatically selected when the mouse pointer remains over the item for a few seconds.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HoverSelection { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if an item is automatically selected when the mouse pointer hovers over it; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this property is set to <code>true</code>, the user can point to an item in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control to select the item. Multiple items can be selected (when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_MultiSelect_\" data-linktype=\"relative-path\">MultiSelect</a> property is set to true) by holding down the CTRL key while pointing to each item. You can use this feature to provide an easier method for the user of your application to select items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_InsertionMark\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_InsertionMark_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InsertionMark</div>        \r\n          </div>\r\n    \r\n            <p>Gets an object used to indicate the expected drop location when an item is dragged within a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListViewInsertionMark InsertionMark { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark\" data-linktype=\"relative-path\">ListViewInsertionMark</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark\" data-linktype=\"relative-path\">ListViewInsertionMark</a> object representing the insertion mark.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> insertion mark feature lets you visually indicate the expected drop location in a drag-and-drop operation when an item is dragged to a new position. This feature works only when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AutoArrange_\" data-linktype=\"relative-path\">AutoArrange</a> property is set to <code>true</code> and when the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control does not sort the items automatically. To prevent automatic sorting, the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sorting_\" data-linktype=\"relative-path\">Sorting</a> property must be set to <a class=\"xref\" href=\"system.windows.forms.sortorder\" data-linktype=\"relative-path\">System.Windows.Forms.SortOrder</a> and the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property must be set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>, <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>, or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>. Additionally, the insertion mark feature may not be visible with the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> grouping feature because the grouping feature orders the items by group membership.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark\" data-linktype=\"relative-path\">ListViewInsertionMark</a> class is typically used in a handler for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">System.Windows.Forms.Control.DragOver</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">System.Windows.Forms.Control.MouseMove</a> event to update the position of the insertion mark as an item is dragged. It is also used in a handler for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragDrop\" data-linktype=\"relative-path\">System.Windows.Forms.Control.DragDrop</a> or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">System.Windows.Forms.Control.MouseUp</a> event to insert a dragged item at the correct location. For more information, see <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark\" data-linktype=\"relative-path\">ListViewInsertionMark</a> and <a href=\"../Topic/How%20to:%20Display%20an%20Insertion%20Mark%20in%20a%20Windows%20Forms%20ListView%20Control.md\" data-linktype=\"relative-path\">How to: Display an Insertion Mark in a Windows Forms ListView Control</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The insertion mark feature is available only on Windows XP and Windows Server 2003 when your application calls the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_EnableVisualStyles_\" data-linktype=\"relative-path\">EnableVisualStyles</a> method. On earlier operating systems, any code relating to the insertion mark has no effect and the insertion mark will not appear. As a result, any code that depends on the insertion mark feature might not work correctly. You might want to include code that determines whether this feature is available, and provide alternate functionality when it is unavailable. For example, you might want to bypass all code that implements drag-and-drop item repositioning when running on operating systems that do not support insertion marks.  </p>\n<p> The insertion mark feature is provided by the same library that provides the operating system themes feature. To check for the availability of this library, call the <a class=\"xref\" href=\"system.windows.forms.featuresupport#System_Windows_Forms_FeatureSupport_IsPresent_System_Object_\" data-linktype=\"relative-path\">System.Windows.Forms.FeatureSupport.IsPresent(Object)</a> method overload and pass in the <a class=\"xref\" href=\"system.windows.forms.osfeature#System_Windows_Forms_OSFeature_Themes\" data-linktype=\"relative-path\">System.Windows.Forms.OSFeature.Themes</a> value.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> insertion mark feature. This example implements drag-and-drop item reordering using the standard drag events. The position of the insertion mark is updated in a handler for the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">System.Windows.Forms.Control.DragOver</a> event. In this handler, the position of the mouse pointer is compared to the midpoint of the nearest item, and the result is used to determine whether the insertion mark appears to the left or the right of the item.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView.InsertionMark#1\">using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\npublic class ListViewInsertionMarkExample : Form\n{\n    private ListView myListView; \n\n    public ListViewInsertionMarkExample()\n    {\n        // Initialize myListView.\n        myListView = new ListView();\n        myListView.Dock = DockStyle.Fill;\n        myListView.View = View.LargeIcon;\n        myListView.MultiSelect = false;\n        myListView.ListViewItemSorter = new ListViewIndexComparer();\n\n        // Initialize the insertion mark.\n        myListView.InsertionMark.Color = Color.Green;\n\n        // Add items to myListView.\n        myListView.Items.Add(&quot;zero&quot;);\n        myListView.Items.Add(&quot;one&quot;);\n        myListView.Items.Add(&quot;two&quot;);\n        myListView.Items.Add(&quot;three&quot;);\n        myListView.Items.Add(&quot;four&quot;);\n        myListView.Items.Add(&quot;five&quot;);\n        \n        // Initialize the drag-and-drop operation when running\n        // under Windows XP or a later operating system.\n        if (OSFeature.Feature.IsPresent(OSFeature.Themes))\n        {\n            myListView.AllowDrop = true;\n            myListView.ItemDrag += new ItemDragEventHandler(myListView_ItemDrag);\n            myListView.DragEnter += new DragEventHandler(myListView_DragEnter);\n            myListView.DragOver += new DragEventHandler(myListView_DragOver);\n            myListView.DragLeave += new EventHandler(myListView_DragLeave);\n            myListView.DragDrop += new DragEventHandler(myListView_DragDrop);\n        }\n\n        // Initialize the form.\n        this.Text = &quot;ListView Insertion Mark Example&quot;;\n        this.Controls.Add(myListView);\n    }\n\n    [STAThread]\n    static void Main() \n    {\n        Application.EnableVisualStyles();\n        Application.Run(new ListViewInsertionMarkExample());\n    }\n\n    // Starts the drag-and-drop operation when an item is dragged.\n    private void myListView_ItemDrag(object sender, ItemDragEventArgs e)\n    {\n        myListView.DoDragDrop(e.Item, DragDropEffects.Move);\n    }\n\n    // Sets the target drop effect.\n    private void myListView_DragEnter(object sender, DragEventArgs e)\n    {\n        e.Effect = e.AllowedEffect;\n    }\n\n    // Moves the insertion mark as the item is dragged.\n    private void myListView_DragOver(object sender, DragEventArgs e)\n    {\n        // Retrieve the client coordinates of the mouse pointer.\n        Point targetPoint = \n            myListView.PointToClient(new Point(e.X, e.Y));\n\n        // Retrieve the index of the item closest to the mouse pointer.\n        int targetIndex = myListView.InsertionMark.NearestIndex(targetPoint);\n\n        // Confirm that the mouse pointer is not over the dragged item.\n        if (targetIndex &gt; -1) \n        {\n            // Determine whether the mouse pointer is to the left or\n            // the right of the midpoint of the closest item and set\n            // the InsertionMark.AppearsAfterItem property accordingly.\n            Rectangle itemBounds = myListView.GetItemRect(targetIndex);\n            if ( targetPoint.X &gt; itemBounds.Left + (itemBounds.Width / 2) )\n            {\n                myListView.InsertionMark.AppearsAfterItem = true;\n            }\n            else\n            {\n                myListView.InsertionMark.AppearsAfterItem = false;\n            }\n        }\n\n        // Set the location of the insertion mark. If the mouse is\n        // over the dragged item, the targetIndex value is -1 and\n        // the insertion mark disappears.\n        myListView.InsertionMark.Index = targetIndex;\n    }\n\n    // Removes the insertion mark when the mouse leaves the control.\n    private void myListView_DragLeave(object sender, EventArgs e)\n    {\n        myListView.InsertionMark.Index = -1;\n    }\n\n    // Moves the item to the location of the insertion mark.\n    private void myListView_DragDrop(object sender, DragEventArgs e)\n    {\n        // Retrieve the index of the insertion mark;\n        int targetIndex = myListView.InsertionMark.Index;\n\n        // If the insertion mark is not visible, exit the method.\n        if (targetIndex == -1) \n        {\n            return;\n        }\n\n        // If the insertion mark is to the right of the item with\n        // the corresponding index, increment the target index.\n        if (myListView.InsertionMark.AppearsAfterItem) \n        {\n            targetIndex++;\n        }\n\n        // Retrieve the dragged item.\n        ListViewItem draggedItem = \n            (ListViewItem)e.Data.GetData(typeof(ListViewItem));\n\n        // Insert a copy of the dragged item at the target index.\n        // A copy must be inserted before the original item is removed\n        // to preserve item index values. \n        myListView.Items.Insert(\n            targetIndex, (ListViewItem)draggedItem.Clone());\n\n        // Remove the original copy of the dragged item.\n        myListView.Items.Remove(draggedItem);\n    }\n\n    // Sorts ListViewItem objects by index.\n    private class ListViewIndexComparer : System.Collections.IComparer\n    {\n        public int Compare(object x, object y)\n        {\n            return ((ListViewItem)x).Index - ((ListViewItem)y).Index;\n        }\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView.InsertionMark#1\">Imports System\nImports System.Drawing\nImports System.Windows.Forms\n\nPublic Class ListViewInsertionMarkExample\n    Inherits Form\n\n    Private myListView As ListView\n    \n    Public Sub New()\n        &#39; Initialize myListView.\n        myListView = New ListView()\n        myListView.Dock = DockStyle.Fill\n        myListView.View = View.LargeIcon\n        myListView.MultiSelect = False\n        myListView.ListViewItemSorter = New ListViewIndexComparer()\n        \n        &#39; Initialize the insertion mark.\n        myListView.InsertionMark.Color = Color.Green\n        \n        &#39; Add items to myListView.\n        myListView.Items.Add(&quot;zero&quot;)\n        myListView.Items.Add(&quot;one&quot;)\n        myListView.Items.Add(&quot;two&quot;)\n        myListView.Items.Add(&quot;three&quot;)\n        myListView.Items.Add(&quot;four&quot;)\n        myListView.Items.Add(&quot;five&quot;)\n        \n        &#39; Initialize the drag-and-drop operation when running\n        &#39; under Windows XP or a later operating system.\n        If OSFeature.Feature.IsPresent(OSFeature.Themes)\n            myListView.AllowDrop = True\n            AddHandler myListView.ItemDrag, AddressOf myListView_ItemDrag\n            AddHandler myListView.DragEnter, AddressOf myListView_DragEnter\n            AddHandler myListView.DragOver, AddressOf myListView_DragOver\n            AddHandler myListView.DragLeave, AddressOf myListView_DragLeave\n            AddHandler myListView.DragDrop, AddressOf myListView_DragDrop\n        End If \n\n        &#39; Initialize the form.\n        Me.Text = &quot;ListView Insertion Mark Example&quot;\n        Me.Controls.Add(myListView)\n    End Sub &#39;New\n\n    &lt;STAThread()&gt; _\n    Shared Sub Main()\n        Application.EnableVisualStyles()\n        Application.Run(New ListViewInsertionMarkExample())\n    End Sub &#39;Main\n    \n    &#39; Starts the drag-and-drop operation when an item is dragged.\n    Private Sub myListView_ItemDrag(sender As Object, e As ItemDragEventArgs)\n        myListView.DoDragDrop(e.Item, DragDropEffects.Move)\n    End Sub &#39;myListView_ItemDrag\n    \n    &#39; Sets the target drop effect.\n    Private Sub myListView_DragEnter(sender As Object, e As DragEventArgs)\n        e.Effect = e.AllowedEffect\n    End Sub &#39;myListView_DragEnter\n    \n    &#39; Moves the insertion mark as the item is dragged.\n    Private Sub myListView_DragOver(sender As Object, e As DragEventArgs)\n        &#39; Retrieve the client coordinates of the mouse pointer.\n        Dim targetPoint As Point = myListView.PointToClient(New Point(e.X, e.Y))\n        \n        &#39; Retrieve the index of the item closest to the mouse pointer.\n        Dim targetIndex As Integer = _\n            myListView.InsertionMark.NearestIndex(targetPoint)\n        \n        &#39; Confirm that the mouse pointer is not over the dragged item.\n        If targetIndex &gt; -1 Then\n            &#39; Determine whether the mouse pointer is to the left or\n            &#39; the right of the midpoint of the closest item and set\n            &#39; the InsertionMark.AppearsAfterItem property accordingly.\n            Dim itemBounds As Rectangle = myListView.GetItemRect(targetIndex)\n            If targetPoint.X &gt; itemBounds.Left + (itemBounds.Width / 2) Then\n                myListView.InsertionMark.AppearsAfterItem = True\n            Else\n                myListView.InsertionMark.AppearsAfterItem = False\n            End If\n        End If\n        \n        &#39; Set the location of the insertion mark. If the mouse is\n        &#39; over the dragged item, the targetIndex value is -1 and\n        &#39; the insertion mark disappears.\n        myListView.InsertionMark.Index = targetIndex\n    End Sub &#39;myListView_DragOver\n\n    &#39; Removes the insertion mark when the mouse leaves the control.\n    Private Sub myListView_DragLeave(sender As Object, e As EventArgs)\n        myListView.InsertionMark.Index = -1\n    End Sub &#39;myListView_DragLeave\n    \n    &#39; Moves the item to the location of the insertion mark.\n    Private Sub myListView_DragDrop(sender As Object, e As DragEventArgs)\n        &#39; Retrieve the index of the insertion mark;\n        Dim targetIndex As Integer = myListView.InsertionMark.Index\n        \n        &#39; If the insertion mark is not visible, exit the method.\n        If targetIndex = -1 Then\n            Return\n        End If \n\n        &#39; If the insertion mark is to the right of the item with\n        &#39; the corresponding index, increment the target index.\n        If myListView.InsertionMark.AppearsAfterItem Then\n            targetIndex += 1\n        End If \n\n        &#39; Retrieve the dragged item.\n        Dim draggedItem As ListViewItem = _\n            CType(e.Data.GetData(GetType(ListViewItem)), ListViewItem)\n        \n        &#39; Insert a copy of the dragged item at the target index.\n        &#39; A copy must be inserted before the original item is removed\n        &#39; to preserve item index values.\n        myListView.Items.Insert(targetIndex, _\n            CType(draggedItem.Clone(), ListViewItem))\n        \n        &#39; Remove the original copy of the dragged item.\n        myListView.Items.Remove(draggedItem)\n\n    End Sub &#39;myListView_DragDrop\n    \n    &#39; Sorts ListViewItem objects by index.    \n    Private Class ListViewIndexComparer\n        Implements System.Collections.IComparer\n        \n        Public Function Compare(x As Object, y As Object) As Integer _\n            Implements System.Collections.IComparer.Compare\n            Return CType(x, ListViewItem).Index - CType(y, ListViewItem).Index\n        End Function &#39;Compare\n\n    End Class &#39;ListViewIndexComparer\n\nEnd Class &#39;ListViewInsertionMarkExample \n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView.InsertionMark#1\">#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\npublic ref class ListViewInsertionMarkExample: public Form\n{\nprivate:\n   ListView^ myListView;\n\npublic:\n\n   ListViewInsertionMarkExample()\n   {\n      // Initialize myListView.\n      myListView = gcnew ListView;\n      myListView-&gt;Dock = DockStyle::Fill;\n      myListView-&gt;View = View::LargeIcon;\n      myListView-&gt;MultiSelect = false;\n      myListView-&gt;ListViewItemSorter = gcnew ListViewIndexComparer;\n\n      // Initialize the insertion mark.\n      myListView-&gt;InsertionMark-&gt;Color = Color::Green;\n\n      // Add items to myListView.\n      myListView-&gt;Items-&gt;Add( &quot;zero&quot; );\n      myListView-&gt;Items-&gt;Add( &quot;one&quot; );\n      myListView-&gt;Items-&gt;Add( &quot;two&quot; );\n      myListView-&gt;Items-&gt;Add( &quot;three&quot; );\n      myListView-&gt;Items-&gt;Add( &quot;four&quot; );\n      myListView-&gt;Items-&gt;Add( &quot;five&quot; );\n\n      // Initialize the drag-and-drop operation when running\n      // under Windows XP or a later operating system.\n      if ( System::Environment::OSVersion-&gt;Version-&gt;Major &gt; 5 || (System::Environment::OSVersion-&gt;Version-&gt;Major == 5 &amp;&amp; System::Environment::OSVersion-&gt;Version-&gt;Minor &gt;= 1) )\n      {\n         myListView-&gt;AllowDrop = true;\n         myListView-&gt;ItemDrag += gcnew ItemDragEventHandler( this, &amp;ListViewInsertionMarkExample::myListView_ItemDrag );\n         myListView-&gt;DragEnter += gcnew DragEventHandler( this, &amp;ListViewInsertionMarkExample::myListView_DragEnter );\n         myListView-&gt;DragOver += gcnew DragEventHandler( this, &amp;ListViewInsertionMarkExample::myListView_DragOver );\n         myListView-&gt;DragLeave += gcnew EventHandler( this, &amp;ListViewInsertionMarkExample::myListView_DragLeave );\n         myListView-&gt;DragDrop += gcnew DragEventHandler( this, &amp;ListViewInsertionMarkExample::myListView_DragDrop );\n      }\n\n      // Initialize the form.\n      this-&gt;Text = &quot;ListView Insertion Mark Example&quot;;\n      this-&gt;Controls-&gt;Add( myListView );\n   }\n\nprivate:\n\n   // Starts the drag-and-drop operation when an item is dragged.\n   void myListView_ItemDrag( Object^ /*sender*/, ItemDragEventArgs^ e )\n   {\n      myListView-&gt;DoDragDrop( e-&gt;Item, DragDropEffects::Move );\n   }\n\n   // Sets the target drop effect.\n   void myListView_DragEnter( Object^ /*sender*/, DragEventArgs^ e )\n   {\n      e-&gt;Effect = e-&gt;AllowedEffect;\n   }\n\n   // Moves the insertion mark as the item is dragged.\n   void myListView_DragOver( Object^ /*sender*/, DragEventArgs^ e )\n   {\n      // Retrieve the client coordinates of the mouse pointer.\n      Point targetPoint = myListView-&gt;PointToClient( Point(e-&gt;X,e-&gt;Y) );\n\n      // Retrieve the index of the item closest to the mouse pointer.\n      int targetIndex = myListView-&gt;InsertionMark-&gt;NearestIndex( targetPoint );\n\n      // Confirm that the mouse pointer is not over the dragged item.\n      if ( targetIndex &gt; -1 )\n      {\n         // Determine whether the mouse pointer is to the left or\n         // the right of the midpoint of the closest item and set\n         // the InsertionMark.AppearsAfterItem property accordingly.\n         Rectangle itemBounds = myListView-&gt;GetItemRect( targetIndex );\n         if ( targetPoint.X &gt; itemBounds.Left + (itemBounds.Width / 2) )\n         {\n            myListView-&gt;InsertionMark-&gt;AppearsAfterItem = true;\n         }\n         else\n         {\n            myListView-&gt;InsertionMark-&gt;AppearsAfterItem = false;\n         }\n      }\n\n      // Set the location of the insertion mark. If the mouse is\n      // over the dragged item, the targetIndex value is -1 and\n      // the insertion mark disappears.\n      myListView-&gt;InsertionMark-&gt;Index = targetIndex;\n   }\n\n   // Removes the insertion mark when the mouse leaves the control.\n   void myListView_DragLeave( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      myListView-&gt;InsertionMark-&gt;Index = -1;\n   }\n\n   // Moves the item to the location of the insertion mark.\n   void myListView_DragDrop( Object^ /*sender*/, DragEventArgs^ e )\n   {\n      // Retrieve the index of the insertion mark;\n      int targetIndex = myListView-&gt;InsertionMark-&gt;Index;\n\n      // If the insertion mark is not visible, exit the method.\n      if ( targetIndex == -1 )\n      {\n         return;\n      }\n\n      // If the insertion mark is to the right of the item with\n      // the corresponding index, increment the target index.\n      if ( myListView-&gt;InsertionMark-&gt;AppearsAfterItem )\n      {\n         targetIndex++;\n      }\n\n      // Retrieve the dragged item.\n      ListViewItem^ draggedItem = dynamic_cast&lt;ListViewItem^&gt;(e-&gt;Data-&gt;GetData( ListViewItem::typeid ));\n\n      // Insert a copy of the dragged item at the target index.\n      // A copy must be inserted before the original item is removed\n      // to preserve item index values.\n      myListView-&gt;Items-&gt;Insert( targetIndex, dynamic_cast&lt;ListViewItem^&gt;(draggedItem-&gt;Clone()) );\n\n      // Remove the original copy of the dragged item.\n      myListView-&gt;Items-&gt;Remove( draggedItem );\n\n   }\n\n   // Sorts ListViewItem objects by index.\n   ref class ListViewIndexComparer: public System::Collections::IComparer\n   {\n   public:\n      virtual int Compare( Object^ x, Object^ y )\n      {\n         return (dynamic_cast&lt;ListViewItem^&gt;(x))-&gt;Index - (dynamic_cast&lt;ListViewItem^&gt;(y))-&gt;Index;\n      }\n   };\n};\n\n[STAThread]\nint main()\n{\n   Application::EnableVisualStyles();\n   Application::Run( gcnew ListViewInsertionMarkExample );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_Items\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_Items_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Items</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection containing all items in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListView.ListViewItemCollection Items { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection\" data-linktype=\"relative-path\">ListView+ListViewItemCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection\" data-linktype=\"relative-path\">ListView+ListViewItemCollection</a> that contains all the items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Using the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection\" data-linktype=\"relative-path\">ListView+ListViewItemCollection</a> returned by this property, you can add items, remove items, and obtain a count of items. For more information on the tasks that can be performed with the items in the collection, see the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection\" data-linktype=\"relative-path\">ListView+ListViewItemCollection</a> class reference topics.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control with three <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects specified and three <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> objects specified for each item. The example also creates <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects to display the subitems in details view. Two <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are also created in the code example to provide images for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects. These <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are added to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LargeImageList_\" data-linktype=\"relative-path\">LargeImageList</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SmallImageList_\" data-linktype=\"relative-path\">SmallImageList</a> properties. The example uses the following properties in creating the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LabelEdit_\" data-linktype=\"relative-path\">LabelEdit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AllowColumnReorder_\" data-linktype=\"relative-path\">AllowColumnReorder</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GridLines_\" data-linktype=\"relative-path\">GridLines</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sorting_\" data-linktype=\"relative-path\">Sorting</a>  \n\n<p>This example requires that you have added the code to a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and call the method created in the example from the constructor or another method on the form. The example also requires that images named <code>MySmallImage1</code>, <code>MySmallImage2</code>, <code>MyLargeImage1</code>, and <code>MyLargeImage2</code> are located in the root directory of drive C.  </p>\n<pre><code class=\"lang-cpp\" name=\"ListViewExample#1\">private:\n   void CreateMyListView()\n   {\n      // Create a new ListView control.\n      ListView^ listView1 = gcnew ListView;\n      listView1-&gt;Bounds = Rectangle(Point(10,10),System::Drawing::Size( 300, 200 ));\n\n      // Set the view to show details.\n      listView1-&gt;View = View::Details;\n\n      // Allow the user to edit item text.\n      listView1-&gt;LabelEdit = true;\n\n      // Allow the user to rearrange columns.\n      listView1-&gt;AllowColumnReorder = true;\n\n      // Display check boxes.\n      listView1-&gt;CheckBoxes = true;\n\n      // Select the item and subitems when selection is made.\n      listView1-&gt;FullRowSelect = true;\n\n      // Display grid lines.\n      listView1-&gt;GridLines = true;\n\n      // Sort the items in the list in ascending order.\n      listView1-&gt;Sorting = SortOrder::Ascending;\n\n      // Create three items and three sets of subitems for each item.\n      ListViewItem^ item1 = gcnew ListViewItem( &quot;item1&quot;,0 );\n\n      // Place a check mark next to the item.\n      item1-&gt;Checked = true;\n      item1-&gt;SubItems-&gt;Add( &quot;1&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;2&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;3&quot; );\n      ListViewItem^ item2 = gcnew ListViewItem( &quot;item2&quot;,1 );\n      item2-&gt;SubItems-&gt;Add( &quot;4&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;5&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;6&quot; );\n      ListViewItem^ item3 = gcnew ListViewItem( &quot;item3&quot;,0 );\n\n      // Place a check mark next to the item.\n      item3-&gt;Checked = true;\n      item3-&gt;SubItems-&gt;Add( &quot;7&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;8&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;9&quot; );\n\n      // Create columns for the items and subitems.\n      // Width of -2 indicates auto-size.\n      listView1-&gt;Columns-&gt;Add( &quot;Item Column&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 2&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 3&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 4&quot;, -2, HorizontalAlignment::Center );\n\n      //Add the items to the ListView.\n      array&lt;ListViewItem^&gt;^temp1 = {item1,item2,item3};\n      listView1-&gt;Items-&gt;AddRange( temp1 );\n\n      // Create two ImageList objects.\n      ImageList^ imageListSmall = gcnew ImageList;\n      ImageList^ imageListLarge = gcnew ImageList;\n\n      // Initialize the ImageList objects with bitmaps.\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage1.bmp&quot; ) );\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage2.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage1.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage2.bmp&quot; ) );\n\n      //Assign the ImageList objects to the ListView.\n      listView1-&gt;LargeImageList = imageListLarge;\n      listView1-&gt;SmallImageList = imageListSmall;\n      \n      // Add the ListView to the control collection.\n      this-&gt;Controls-&gt;Add( listView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"ListViewExample#1\">\t\tprivate void CreateMyListView()\n\t\t{\n\t\t\t// Create a new ListView control.\n\t\t\tListView listView1 = new ListView();\n\t\t\tlistView1.Bounds = new Rectangle(new Point(10,10), new Size(300,200));\n\n\t\t\t// Set the view to show details.\n\t\t\tlistView1.View = View.Details;\n\t\t\t// Allow the user to edit item text.\n\t\t\tlistView1.LabelEdit = true;\n\t\t\t// Allow the user to rearrange columns.\n\t\t\tlistView1.AllowColumnReorder = true;\n\t\t\t// Display check boxes.\n\t\t\tlistView1.CheckBoxes = true;\n\t\t\t// Select the item and subitems when selection is made.\n\t\t\tlistView1.FullRowSelect = true;\n\t\t\t// Display grid lines.\n\t\t\tlistView1.GridLines = true;\n\t\t\t// Sort the items in the list in ascending order.\n\t\t\tlistView1.Sorting = SortOrder.Ascending;\n            \t\t\t\n\t\t\t// Create three items and three sets of subitems for each item.\n\t\t\tListViewItem item1 = new ListViewItem(&quot;item1&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem1.Checked = true;\n\t\t\titem1.SubItems.Add(&quot;1&quot;);\n\t\t\titem1.SubItems.Add(&quot;2&quot;);\n\t\t\titem1.SubItems.Add(&quot;3&quot;);\n\t\t\tListViewItem item2 = new ListViewItem(&quot;item2&quot;,1);\n\t\t\titem2.SubItems.Add(&quot;4&quot;);\n\t\t\titem2.SubItems.Add(&quot;5&quot;);\n\t\t\titem2.SubItems.Add(&quot;6&quot;);\n\t\t\tListViewItem item3 = new ListViewItem(&quot;item3&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem3.Checked = true;\n\t\t\titem3.SubItems.Add(&quot;7&quot;);\n\t\t\titem3.SubItems.Add(&quot;8&quot;);\n\t\t\titem3.SubItems.Add(&quot;9&quot;);\n\n\t\t\t// Create columns for the items and subitems.\n\t\t\t// Width of -2 indicates auto-size.\n\t\t\tlistView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center);\n\n\t\t\t//Add the items to the ListView.\n            \t\tlistView1.Items.AddRange(new ListViewItem[]{item1,item2,item3});\n\n\t\t\t// Create two ImageList objects.\n\t\t\tImageList imageListSmall = new ImageList();\n\t\t\tImageList imageListLarge = new ImageList();\n\n\t\t\t// Initialize the ImageList objects with bitmaps.\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage1.bmp&quot;));\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage2.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage1.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage2.bmp&quot;));\n\n\t\t\t//Assign the ImageList objects to the ListView.\n\t\t\tlistView1.LargeImageList = imageListLarge;\n\t\t\tlistView1.SmallImageList = imageListSmall;\n\n\t\t\t// Add the ListView to the control collection.\n\t\t\tthis.Controls.Add(listView1);\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewExample#1\">        Private Sub CreateMyListView()\n            &#39; Create a new ListView control.\n            Dim listView1 As New ListView()\n            listView1.Bounds = New Rectangle(New Point(10, 10), New Size(300, 200))\n\n            &#39; Set the view to show details.\n            listView1.View = View.Details\n            &#39; Allow the user to edit item text.\n            listView1.LabelEdit = True\n            &#39; Allow the user to rearrange columns.\n            listView1.AllowColumnReorder = True\n            &#39; Display check boxes.\n            listView1.CheckBoxes = True\n            &#39; Select the item and subitems when selection is made.\n            listView1.FullRowSelect = True\n            &#39; Display grid lines.\n            listView1.GridLines = True\n            &#39; Sort the items in the list in ascending order.\n            listView1.Sorting = SortOrder.Ascending\n\n            &#39; Create three items and three sets of subitems for each item.\n            Dim item1 As New ListViewItem(&quot;item1&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item1.Checked = True\n            item1.SubItems.Add(&quot;1&quot;)\n            item1.SubItems.Add(&quot;2&quot;)\n            item1.SubItems.Add(&quot;3&quot;)\n            Dim item2 As New ListViewItem(&quot;item2&quot;, 1)\n            item2.SubItems.Add(&quot;4&quot;)\n            item2.SubItems.Add(&quot;5&quot;)\n            item2.SubItems.Add(&quot;6&quot;)\n            Dim item3 As New ListViewItem(&quot;item3&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item3.Checked = True\n            item3.SubItems.Add(&quot;7&quot;)\n            item3.SubItems.Add(&quot;8&quot;)\n            item3.SubItems.Add(&quot;9&quot;)\n\n            &#39; Create columns for the items and subitems.\n            &#39; Width of -2 indicates auto-size.\n            listView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center)\n\n            &#39;Add the items to the ListView.\n            listView1.Items.AddRange(New ListViewItem() {item1, item2, item3})\n\n            &#39; Create two ImageList objects.\n            Dim imageListSmall As New ImageList()\n            Dim imageListLarge As New ImageList()\n\n            &#39; Initialize the ImageList objects with bitmaps.\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage1.bmp&quot;))\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage2.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage1.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage2.bmp&quot;))\n\n            &#39;Assign the ImageList objects to the ListView.\n            listView1.LargeImageList = imageListLarge\n            listView1.SmallImageList = imageListSmall\n\n            &#39; Add the ListView to the control collection.\n            Me.Controls.Add(listView1)\n        End Sub &#39;CreateMyListView\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_LabelEdit\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_LabelEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LabelEdit</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the user can edit the labels of items in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool LabelEdit { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the user can edit the labels of items at run time; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the LabelEdit property is set to <code>true</code>, the user is able to modify the text of an item by clicking the item text to select it and then clicking the item text again to put the label text into edit mode. The user can then modify or replace the item&#39;s text label. You can use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_BeforeLabelEdit\" data-linktype=\"relative-path\">BeforeLabelEdit</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AfterLabelEdit\" data-linktype=\"relative-path\">AfterLabelEdit</a> events to perform tasks before and after the user edits an item&#39;s text. The text of subitems cannot be modified if this property is set to <code>true</code>. To change the text of subitems, you can display a dialog box to users when they double-click a subitem in the control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Activation_\" data-linktype=\"relative-path\">Activation</a> property is set to <a class=\"xref\" href=\"system.windows.forms.itemactivation\" data-linktype=\"relative-path\">ItemActivation</a> or <a class=\"xref\" href=\"system.windows.forms.itemactivation\" data-linktype=\"relative-path\">ItemActivation</a>, label editing will not be allowed regardless of the value of the LabelEdit property.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control with three <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects specified and three <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> objects specified for each item. The example also creates <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects to display the subitems in details view. Two <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are also created in the code example to provide images for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects. These <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are added to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LargeImageList_\" data-linktype=\"relative-path\">LargeImageList</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SmallImageList_\" data-linktype=\"relative-path\">SmallImageList</a> properties. The example uses the following properties in creating the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a>  \n</li>\n<li><p>LabelEdit  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AllowColumnReorder_\" data-linktype=\"relative-path\">AllowColumnReorder</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GridLines_\" data-linktype=\"relative-path\">GridLines</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sorting_\" data-linktype=\"relative-path\">Sorting</a>  \n\n<p>This example requires that you have added the code to a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and call the method created in the example from the constructor or another method on the form. The example also requires that images named <code>MySmallImage1</code>, <code>MySmallImage2</code>, <code>MyLargeImage1</code>, and <code>MyLargeImage2</code> are located in the root directory of drive C.  </p>\n<pre><code class=\"lang-cpp\" name=\"ListViewExample#1\">private:\n   void CreateMyListView()\n   {\n      // Create a new ListView control.\n      ListView^ listView1 = gcnew ListView;\n      listView1-&gt;Bounds = Rectangle(Point(10,10),System::Drawing::Size( 300, 200 ));\n\n      // Set the view to show details.\n      listView1-&gt;View = View::Details;\n\n      // Allow the user to edit item text.\n      listView1-&gt;LabelEdit = true;\n\n      // Allow the user to rearrange columns.\n      listView1-&gt;AllowColumnReorder = true;\n\n      // Display check boxes.\n      listView1-&gt;CheckBoxes = true;\n\n      // Select the item and subitems when selection is made.\n      listView1-&gt;FullRowSelect = true;\n\n      // Display grid lines.\n      listView1-&gt;GridLines = true;\n\n      // Sort the items in the list in ascending order.\n      listView1-&gt;Sorting = SortOrder::Ascending;\n\n      // Create three items and three sets of subitems for each item.\n      ListViewItem^ item1 = gcnew ListViewItem( &quot;item1&quot;,0 );\n\n      // Place a check mark next to the item.\n      item1-&gt;Checked = true;\n      item1-&gt;SubItems-&gt;Add( &quot;1&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;2&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;3&quot; );\n      ListViewItem^ item2 = gcnew ListViewItem( &quot;item2&quot;,1 );\n      item2-&gt;SubItems-&gt;Add( &quot;4&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;5&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;6&quot; );\n      ListViewItem^ item3 = gcnew ListViewItem( &quot;item3&quot;,0 );\n\n      // Place a check mark next to the item.\n      item3-&gt;Checked = true;\n      item3-&gt;SubItems-&gt;Add( &quot;7&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;8&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;9&quot; );\n\n      // Create columns for the items and subitems.\n      // Width of -2 indicates auto-size.\n      listView1-&gt;Columns-&gt;Add( &quot;Item Column&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 2&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 3&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 4&quot;, -2, HorizontalAlignment::Center );\n\n      //Add the items to the ListView.\n      array&lt;ListViewItem^&gt;^temp1 = {item1,item2,item3};\n      listView1-&gt;Items-&gt;AddRange( temp1 );\n\n      // Create two ImageList objects.\n      ImageList^ imageListSmall = gcnew ImageList;\n      ImageList^ imageListLarge = gcnew ImageList;\n\n      // Initialize the ImageList objects with bitmaps.\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage1.bmp&quot; ) );\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage2.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage1.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage2.bmp&quot; ) );\n\n      //Assign the ImageList objects to the ListView.\n      listView1-&gt;LargeImageList = imageListLarge;\n      listView1-&gt;SmallImageList = imageListSmall;\n      \n      // Add the ListView to the control collection.\n      this-&gt;Controls-&gt;Add( listView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"ListViewExample#1\">\t\tprivate void CreateMyListView()\n\t\t{\n\t\t\t// Create a new ListView control.\n\t\t\tListView listView1 = new ListView();\n\t\t\tlistView1.Bounds = new Rectangle(new Point(10,10), new Size(300,200));\n\n\t\t\t// Set the view to show details.\n\t\t\tlistView1.View = View.Details;\n\t\t\t// Allow the user to edit item text.\n\t\t\tlistView1.LabelEdit = true;\n\t\t\t// Allow the user to rearrange columns.\n\t\t\tlistView1.AllowColumnReorder = true;\n\t\t\t// Display check boxes.\n\t\t\tlistView1.CheckBoxes = true;\n\t\t\t// Select the item and subitems when selection is made.\n\t\t\tlistView1.FullRowSelect = true;\n\t\t\t// Display grid lines.\n\t\t\tlistView1.GridLines = true;\n\t\t\t// Sort the items in the list in ascending order.\n\t\t\tlistView1.Sorting = SortOrder.Ascending;\n            \t\t\t\n\t\t\t// Create three items and three sets of subitems for each item.\n\t\t\tListViewItem item1 = new ListViewItem(&quot;item1&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem1.Checked = true;\n\t\t\titem1.SubItems.Add(&quot;1&quot;);\n\t\t\titem1.SubItems.Add(&quot;2&quot;);\n\t\t\titem1.SubItems.Add(&quot;3&quot;);\n\t\t\tListViewItem item2 = new ListViewItem(&quot;item2&quot;,1);\n\t\t\titem2.SubItems.Add(&quot;4&quot;);\n\t\t\titem2.SubItems.Add(&quot;5&quot;);\n\t\t\titem2.SubItems.Add(&quot;6&quot;);\n\t\t\tListViewItem item3 = new ListViewItem(&quot;item3&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem3.Checked = true;\n\t\t\titem3.SubItems.Add(&quot;7&quot;);\n\t\t\titem3.SubItems.Add(&quot;8&quot;);\n\t\t\titem3.SubItems.Add(&quot;9&quot;);\n\n\t\t\t// Create columns for the items and subitems.\n\t\t\t// Width of -2 indicates auto-size.\n\t\t\tlistView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center);\n\n\t\t\t//Add the items to the ListView.\n            \t\tlistView1.Items.AddRange(new ListViewItem[]{item1,item2,item3});\n\n\t\t\t// Create two ImageList objects.\n\t\t\tImageList imageListSmall = new ImageList();\n\t\t\tImageList imageListLarge = new ImageList();\n\n\t\t\t// Initialize the ImageList objects with bitmaps.\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage1.bmp&quot;));\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage2.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage1.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage2.bmp&quot;));\n\n\t\t\t//Assign the ImageList objects to the ListView.\n\t\t\tlistView1.LargeImageList = imageListLarge;\n\t\t\tlistView1.SmallImageList = imageListSmall;\n\n\t\t\t// Add the ListView to the control collection.\n\t\t\tthis.Controls.Add(listView1);\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewExample#1\">        Private Sub CreateMyListView()\n            &#39; Create a new ListView control.\n            Dim listView1 As New ListView()\n            listView1.Bounds = New Rectangle(New Point(10, 10), New Size(300, 200))\n\n            &#39; Set the view to show details.\n            listView1.View = View.Details\n            &#39; Allow the user to edit item text.\n            listView1.LabelEdit = True\n            &#39; Allow the user to rearrange columns.\n            listView1.AllowColumnReorder = True\n            &#39; Display check boxes.\n            listView1.CheckBoxes = True\n            &#39; Select the item and subitems when selection is made.\n            listView1.FullRowSelect = True\n            &#39; Display grid lines.\n            listView1.GridLines = True\n            &#39; Sort the items in the list in ascending order.\n            listView1.Sorting = SortOrder.Ascending\n\n            &#39; Create three items and three sets of subitems for each item.\n            Dim item1 As New ListViewItem(&quot;item1&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item1.Checked = True\n            item1.SubItems.Add(&quot;1&quot;)\n            item1.SubItems.Add(&quot;2&quot;)\n            item1.SubItems.Add(&quot;3&quot;)\n            Dim item2 As New ListViewItem(&quot;item2&quot;, 1)\n            item2.SubItems.Add(&quot;4&quot;)\n            item2.SubItems.Add(&quot;5&quot;)\n            item2.SubItems.Add(&quot;6&quot;)\n            Dim item3 As New ListViewItem(&quot;item3&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item3.Checked = True\n            item3.SubItems.Add(&quot;7&quot;)\n            item3.SubItems.Add(&quot;8&quot;)\n            item3.SubItems.Add(&quot;9&quot;)\n\n            &#39; Create columns for the items and subitems.\n            &#39; Width of -2 indicates auto-size.\n            listView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center)\n\n            &#39;Add the items to the ListView.\n            listView1.Items.AddRange(New ListViewItem() {item1, item2, item3})\n\n            &#39; Create two ImageList objects.\n            Dim imageListSmall As New ImageList()\n            Dim imageListLarge As New ImageList()\n\n            &#39; Initialize the ImageList objects with bitmaps.\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage1.bmp&quot;))\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage2.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage1.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage2.bmp&quot;))\n\n            &#39;Assign the ImageList objects to the ListView.\n            listView1.LargeImageList = imageListLarge\n            listView1.SmallImageList = imageListSmall\n\n            &#39; Add the ListView to the control collection.\n            Me.Controls.Add(listView1)\n        End Sub &#39;CreateMyListView\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_LabelWrap\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_LabelWrap_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LabelWrap</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether item labels wrap when items are displayed in the control as icons.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool LabelWrap { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if item labels wrap when items are displayed as icons; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the LabelWrap property is set to <code>true</code>, the item text is wrapped to the next line of text if needed. If the text is longer than two lines of text, the text is shortened. If the user selects the item, all the item text is displayed. If the LabelWrap property is set to <code>false</code>, all item text is displayed on a single line. The entire item text is displayed when the LabelWrap is set to <code>false</code>. This property is only used when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_LargeImageList\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_LargeImageList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LargeImageList</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> to use when displaying items as large icons in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ImageList LargeImageList { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> that contains the icons to use when the <span class=\"xref\">stem.Windows.Forms.ListView.View*</span> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The LargeImageList property allows you to specify an <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> object that contains icons to use when displaying items with large icons (when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>). The <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control can accept any graphics format that the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> control supports when displaying icons. The <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is not limited to .ico files. Once an <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> is assigned to the LargeImageList property, you can set the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_ImageIndex_\" data-linktype=\"relative-path\">ImageIndex</a> property of each <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control to the index position of the appropriate image in the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a>. The size of the icons for the LargeImageList is specified by the <a class=\"xref\" href=\"system.windows.forms.imagelist#System_Windows_Forms_ImageList_ImageSize_\" data-linktype=\"relative-path\">ImageSize</a>.  </p>\n<p> Because only one index can be specified for the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_ImageIndex_\" data-linktype=\"relative-path\">ImageIndex</a> property, the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects specified in the LargeImageList and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SmallImageList_\" data-linktype=\"relative-path\">SmallImageList</a> properties should have the same index positions for the images to display. For example, if the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_ImageIndex_\" data-linktype=\"relative-path\">ImageIndex</a> property of a <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> is set to 0, the images to use for both small and large icons should be at the same index position in the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects specified in the LargeImageList and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SmallImageList_\" data-linktype=\"relative-path\">SmallImageList</a> properties.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When the images are specified with keys, you still need to place small and large versions of the image at the same index location in their respective image lists. When switching between views, the index location of the image in one list is used to locate the image in the other list, regardless of the key value specified.  </p>\n</div>\n<p> To set the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> to use when displaying items with small icons (all view modes other than <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>), use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SmallImageList_\" data-linktype=\"relative-path\">SmallImageList</a> property. If you want to use images to display item state, use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_StateImageList_\" data-linktype=\"relative-path\">StateImageList</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control with three <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects specified and three <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> objects specified for each item. The example also creates <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects to display the subitems in details view. Two <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are also created in the code example to provide images for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects. These <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are added to the LargeImageList and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SmallImageList_\" data-linktype=\"relative-path\">SmallImageList</a> properties. The example uses the following properties in creating the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LabelEdit_\" data-linktype=\"relative-path\">LabelEdit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AllowColumnReorder_\" data-linktype=\"relative-path\">AllowColumnReorder</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GridLines_\" data-linktype=\"relative-path\">GridLines</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sorting_\" data-linktype=\"relative-path\">Sorting</a>  \n\n<p>This example requires that you have added the code to a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and call the method created in the example from the constructor or another method on the form. The example also requires that images named <code>MySmallImage1</code>, <code>MySmallImage2</code>, <code>MyLargeImage1</code>, and <code>MyLargeImage2</code> are located in the root directory of drive C.  </p>\n<pre><code class=\"lang-cpp\" name=\"ListViewExample#1\">private:\n   void CreateMyListView()\n   {\n      // Create a new ListView control.\n      ListView^ listView1 = gcnew ListView;\n      listView1-&gt;Bounds = Rectangle(Point(10,10),System::Drawing::Size( 300, 200 ));\n\n      // Set the view to show details.\n      listView1-&gt;View = View::Details;\n\n      // Allow the user to edit item text.\n      listView1-&gt;LabelEdit = true;\n\n      // Allow the user to rearrange columns.\n      listView1-&gt;AllowColumnReorder = true;\n\n      // Display check boxes.\n      listView1-&gt;CheckBoxes = true;\n\n      // Select the item and subitems when selection is made.\n      listView1-&gt;FullRowSelect = true;\n\n      // Display grid lines.\n      listView1-&gt;GridLines = true;\n\n      // Sort the items in the list in ascending order.\n      listView1-&gt;Sorting = SortOrder::Ascending;\n\n      // Create three items and three sets of subitems for each item.\n      ListViewItem^ item1 = gcnew ListViewItem( &quot;item1&quot;,0 );\n\n      // Place a check mark next to the item.\n      item1-&gt;Checked = true;\n      item1-&gt;SubItems-&gt;Add( &quot;1&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;2&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;3&quot; );\n      ListViewItem^ item2 = gcnew ListViewItem( &quot;item2&quot;,1 );\n      item2-&gt;SubItems-&gt;Add( &quot;4&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;5&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;6&quot; );\n      ListViewItem^ item3 = gcnew ListViewItem( &quot;item3&quot;,0 );\n\n      // Place a check mark next to the item.\n      item3-&gt;Checked = true;\n      item3-&gt;SubItems-&gt;Add( &quot;7&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;8&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;9&quot; );\n\n      // Create columns for the items and subitems.\n      // Width of -2 indicates auto-size.\n      listView1-&gt;Columns-&gt;Add( &quot;Item Column&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 2&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 3&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 4&quot;, -2, HorizontalAlignment::Center );\n\n      //Add the items to the ListView.\n      array&lt;ListViewItem^&gt;^temp1 = {item1,item2,item3};\n      listView1-&gt;Items-&gt;AddRange( temp1 );\n\n      // Create two ImageList objects.\n      ImageList^ imageListSmall = gcnew ImageList;\n      ImageList^ imageListLarge = gcnew ImageList;\n\n      // Initialize the ImageList objects with bitmaps.\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage1.bmp&quot; ) );\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage2.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage1.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage2.bmp&quot; ) );\n\n      //Assign the ImageList objects to the ListView.\n      listView1-&gt;LargeImageList = imageListLarge;\n      listView1-&gt;SmallImageList = imageListSmall;\n      \n      // Add the ListView to the control collection.\n      this-&gt;Controls-&gt;Add( listView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"ListViewExample#1\">\t\tprivate void CreateMyListView()\n\t\t{\n\t\t\t// Create a new ListView control.\n\t\t\tListView listView1 = new ListView();\n\t\t\tlistView1.Bounds = new Rectangle(new Point(10,10), new Size(300,200));\n\n\t\t\t// Set the view to show details.\n\t\t\tlistView1.View = View.Details;\n\t\t\t// Allow the user to edit item text.\n\t\t\tlistView1.LabelEdit = true;\n\t\t\t// Allow the user to rearrange columns.\n\t\t\tlistView1.AllowColumnReorder = true;\n\t\t\t// Display check boxes.\n\t\t\tlistView1.CheckBoxes = true;\n\t\t\t// Select the item and subitems when selection is made.\n\t\t\tlistView1.FullRowSelect = true;\n\t\t\t// Display grid lines.\n\t\t\tlistView1.GridLines = true;\n\t\t\t// Sort the items in the list in ascending order.\n\t\t\tlistView1.Sorting = SortOrder.Ascending;\n            \t\t\t\n\t\t\t// Create three items and three sets of subitems for each item.\n\t\t\tListViewItem item1 = new ListViewItem(&quot;item1&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem1.Checked = true;\n\t\t\titem1.SubItems.Add(&quot;1&quot;);\n\t\t\titem1.SubItems.Add(&quot;2&quot;);\n\t\t\titem1.SubItems.Add(&quot;3&quot;);\n\t\t\tListViewItem item2 = new ListViewItem(&quot;item2&quot;,1);\n\t\t\titem2.SubItems.Add(&quot;4&quot;);\n\t\t\titem2.SubItems.Add(&quot;5&quot;);\n\t\t\titem2.SubItems.Add(&quot;6&quot;);\n\t\t\tListViewItem item3 = new ListViewItem(&quot;item3&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem3.Checked = true;\n\t\t\titem3.SubItems.Add(&quot;7&quot;);\n\t\t\titem3.SubItems.Add(&quot;8&quot;);\n\t\t\titem3.SubItems.Add(&quot;9&quot;);\n\n\t\t\t// Create columns for the items and subitems.\n\t\t\t// Width of -2 indicates auto-size.\n\t\t\tlistView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center);\n\n\t\t\t//Add the items to the ListView.\n            \t\tlistView1.Items.AddRange(new ListViewItem[]{item1,item2,item3});\n\n\t\t\t// Create two ImageList objects.\n\t\t\tImageList imageListSmall = new ImageList();\n\t\t\tImageList imageListLarge = new ImageList();\n\n\t\t\t// Initialize the ImageList objects with bitmaps.\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage1.bmp&quot;));\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage2.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage1.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage2.bmp&quot;));\n\n\t\t\t//Assign the ImageList objects to the ListView.\n\t\t\tlistView1.LargeImageList = imageListLarge;\n\t\t\tlistView1.SmallImageList = imageListSmall;\n\n\t\t\t// Add the ListView to the control collection.\n\t\t\tthis.Controls.Add(listView1);\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewExample#1\">        Private Sub CreateMyListView()\n            &#39; Create a new ListView control.\n            Dim listView1 As New ListView()\n            listView1.Bounds = New Rectangle(New Point(10, 10), New Size(300, 200))\n\n            &#39; Set the view to show details.\n            listView1.View = View.Details\n            &#39; Allow the user to edit item text.\n            listView1.LabelEdit = True\n            &#39; Allow the user to rearrange columns.\n            listView1.AllowColumnReorder = True\n            &#39; Display check boxes.\n            listView1.CheckBoxes = True\n            &#39; Select the item and subitems when selection is made.\n            listView1.FullRowSelect = True\n            &#39; Display grid lines.\n            listView1.GridLines = True\n            &#39; Sort the items in the list in ascending order.\n            listView1.Sorting = SortOrder.Ascending\n\n            &#39; Create three items and three sets of subitems for each item.\n            Dim item1 As New ListViewItem(&quot;item1&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item1.Checked = True\n            item1.SubItems.Add(&quot;1&quot;)\n            item1.SubItems.Add(&quot;2&quot;)\n            item1.SubItems.Add(&quot;3&quot;)\n            Dim item2 As New ListViewItem(&quot;item2&quot;, 1)\n            item2.SubItems.Add(&quot;4&quot;)\n            item2.SubItems.Add(&quot;5&quot;)\n            item2.SubItems.Add(&quot;6&quot;)\n            Dim item3 As New ListViewItem(&quot;item3&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item3.Checked = True\n            item3.SubItems.Add(&quot;7&quot;)\n            item3.SubItems.Add(&quot;8&quot;)\n            item3.SubItems.Add(&quot;9&quot;)\n\n            &#39; Create columns for the items and subitems.\n            &#39; Width of -2 indicates auto-size.\n            listView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center)\n\n            &#39;Add the items to the ListView.\n            listView1.Items.AddRange(New ListViewItem() {item1, item2, item3})\n\n            &#39; Create two ImageList objects.\n            Dim imageListSmall As New ImageList()\n            Dim imageListLarge As New ImageList()\n\n            &#39; Initialize the ImageList objects with bitmaps.\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage1.bmp&quot;))\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage2.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage1.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage2.bmp&quot;))\n\n            &#39;Assign the ImageList objects to the ListView.\n            listView1.LargeImageList = imageListLarge\n            listView1.SmallImageList = imageListSmall\n\n            &#39; Add the ListView to the control collection.\n            Me.Controls.Add(listView1)\n        End Sub &#39;CreateMyListView\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ListViewItemSorter\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_ListViewItemSorter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ListViewItemSorter</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the sorting comparer for the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IComparer ListViewItemSorter { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">IComparer</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">IComparer</a> that represents the sorting comparer for the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ListViewItemSorter property allows you to specify the object that performs the sorting of items in a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sort_\" data-linktype=\"relative-path\">Sort</a> method is called or when items are added to the list. Note that items are not sorted automatically when their label text changes.  </p>\n<p> The specified object must be an instance of a class that implements the <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">IComparer</a> interface, which has a single method called <a class=\"xref\" href=\"system.collections.comparer#System_Collections_Comparer_Compare_\" data-linktype=\"relative-path\">Compare</a>.  </p>\n<p> You can use this property to provide custom sorting, for example, when a column header is clicked in the details view. To do this, create a class that implements the <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">IComparer</a> interface and provides a constructor that accepts the index of a column to sort by. You can then implement a handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ColumnClick\" data-linktype=\"relative-path\">ColumnClick</a> event that creates an instance of this class using the index of the clicked column. When you set the ListViewItemSorter property to the new instance, the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is automatically sorted using the specified object. Subsequent calls to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sort_\" data-linktype=\"relative-path\">Sort</a> method use the same object.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When you set the value of the ListViewItemSorter property, the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sort_\" data-linktype=\"relative-path\">Sort</a> method is called automatically.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a form that contains a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control that manually sorts items when a column in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is clicked. The example defines a class called <code>ListViewItemComparer</code> that implements the <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">System.Collections.IComparer</a> interface that performs the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> comparison. The example creates an instance of <code>ListViewItemComparer</code> and uses it to set the ListViewItemSorter property of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sort_\" data-linktype=\"relative-path\">Sort</a> method call in the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ColumnClick\" data-linktype=\"relative-path\">ColumnClick</a> event handler uses the methods defined in <code>ListViewItemComparer</code> to perform the sort of items, based on the column that is clicked.  </p>\n<pre><code class=\"lang-cpp\" name=\"ListView.ColumnClick#1\">#using &lt;System.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n\nusing namespace System;\nusing namespace System::Windows::Forms;\nusing namespace System::Drawing;\nusing namespace System::Collections;\n\n// Implements the manual sorting of items by columns.\nref class ListViewItemComparer: public IComparer\n{\nprivate:\n   int col;\n\npublic:\n   ListViewItemComparer()\n   {\n      col = 0;\n   }\n\n   ListViewItemComparer( int column )\n   {\n      col = column;\n   }\n\n   virtual int Compare( Object^ x, Object^ y )\n   {\n      return String::Compare( (dynamic_cast&lt;ListViewItem^&gt;(x))-&gt;SubItems[ col ]-&gt;Text,\n                              (dynamic_cast&lt;ListViewItem^&gt;(y))-&gt;SubItems[ col ]-&gt;Text );\n   }\n};\n\npublic ref class ListViewSortForm: public Form\n{\nprivate:\n   ListView^ listView1;\n\npublic:\n   ListViewSortForm()\n   {\n      // Create ListView items to add to the control.\n      array&lt;String^&gt;^temp0 = {&quot;Banana&quot;,&quot;a&quot;,&quot;b&quot;,&quot;c&quot;};\n      ListViewItem^ listViewItem1 = gcnew ListViewItem( temp0,-1,Color::Empty,Color::Yellow,nullptr );\n      array&lt;String^&gt;^temp1 = {&quot;Cherry&quot;,&quot;v&quot;,&quot;g&quot;,&quot;t&quot;};\n      ListViewItem^ listViewItem2 = gcnew ListViewItem( temp1,-1,Color::Empty,Color::Red,\n                 gcnew System::Drawing::Font( &quot;Microsoft Sans Serif&quot;,8.25F,FontStyle::Regular,GraphicsUnit::Point,0 ) );\n      array&lt;String^&gt;^temp2 = {&quot;Apple&quot;,&quot;h&quot;,&quot;j&quot;,&quot;n&quot;};\n      ListViewItem^ listViewItem3 = gcnew ListViewItem( temp2,-1,Color::Empty,Color::Lime,nullptr );\n      array&lt;String^&gt;^temp3 = {&quot;Pear&quot;,&quot;y&quot;,&quot;u&quot;,&quot;i&quot;};\n      ListViewItem^ listViewItem4 = gcnew ListViewItem( temp3,-1,Color::Empty,Color::FromArgb( 192, 128, 156 ),nullptr );\n\n      //Initialize the ListView control and add columns to it.\n      this-&gt;listView1 = gcnew ListView;\n\n      // Set the initial sorting type for the ListView.\n      this-&gt;listView1-&gt;Sorting = SortOrder::None;\n\n      // Disable automatic sorting to enable manual sorting.\n      this-&gt;listView1-&gt;View = View::Details;\n\n      // Add columns and set their text.\n      this-&gt;listView1-&gt;Columns-&gt;Add( gcnew ColumnHeader );\n      this-&gt;listView1-&gt;Columns[ 0 ]-&gt;Text = &quot;Column 1&quot;;\n      this-&gt;listView1-&gt;Columns[ 0 ]-&gt;Width = 100;\n      listView1-&gt;Columns-&gt;Add( gcnew ColumnHeader );\n      listView1-&gt;Columns[ 1 ]-&gt;Text = &quot;Column 2&quot;;\n      listView1-&gt;Columns-&gt;Add( gcnew ColumnHeader );\n      listView1-&gt;Columns[ 2 ]-&gt;Text = &quot;Column 3&quot;;\n      listView1-&gt;Columns-&gt;Add( gcnew ColumnHeader );\n      listView1-&gt;Columns[ 3 ]-&gt;Text = &quot;Column 4&quot;;\n\n      // Suspend control logic until form is done configuring form.\n      this-&gt;SuspendLayout();\n\n      // Add Items to the ListView control.\n      array&lt;ListViewItem^&gt;^temp4 = {listViewItem1,listViewItem2,listViewItem3,listViewItem4};\n      this-&gt;listView1-&gt;Items-&gt;AddRange( temp4 );\n\n      // Set the location and size of the ListView control.\n      this-&gt;listView1-&gt;Location = Point(10,10);\n      this-&gt;listView1-&gt;Name = &quot;listView1&quot;;\n      this-&gt;listView1-&gt;Size = System::Drawing::Size( 300, 100 );\n      this-&gt;listView1-&gt;TabIndex = 0;\n\n      // Enable editing of the items in the ListView.\n      this-&gt;listView1-&gt;LabelEdit = true;\n\n      // Connect the ListView::ColumnClick event to the ColumnClick event handler.\n      this-&gt;listView1-&gt;ColumnClick += gcnew ColumnClickEventHandler( this, &amp;ListViewSortForm::ColumnClick );\n\n      // Initialize the form.\n      this-&gt;ClientSize = System::Drawing::Size( 400, 400 );\n      array&lt;Control^&gt;^temp5 = {this-&gt;listView1};\n      this-&gt;Controls-&gt;AddRange( temp5 );\n      this-&gt;Name = &quot;ListViewSortForm&quot;;\n      this-&gt;Text = &quot;Sorted ListView Control&quot;;\n\n      // Resume lay[Out] of* the form.\n      this-&gt;ResumeLayout( false );\n   }\n\nprivate:\n\n   // ColumnClick event handler.\n   void ColumnClick( Object^ /*o*/, ColumnClickEventArgs^ e )\n   {\n      // Set the ListViewItemSorter property to a new ListViewItemComparer \n      // object. Setting this property immediately sorts the \n      // ListView using the ListViewItemComparer object.\n      this-&gt;listView1-&gt;ListViewItemSorter = gcnew ListViewItemComparer( e-&gt;Column );\n   }\n};\n\n[System::STAThreadAttribute]\nint main()\n{\n   Application::Run( gcnew ListViewSortForm );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"ListView.ColumnClick#1\">using System;\nusing System.Windows.Forms;\nusing System.Drawing;\nusing System.Collections;\n\nnamespace ListViewSortFormNamespace\n{\n    \n   \n    public class ListViewSortForm : Form\n    {\n        private ListView listView1;\n       \n        public ListViewSortForm()\n        {\n            // Create ListView items to add to the control.\n            ListViewItem listViewItem1 = new ListViewItem(new string[] {&quot;Banana&quot;,&quot;a&quot;,&quot;b&quot;,&quot;c&quot;}, -1, Color.Empty, Color.Yellow, null);\n            ListViewItem listViewItem2 = new ListViewItem(new string[] {&quot;Cherry&quot;,&quot;v&quot;,&quot;g&quot;,&quot;t&quot;}, -1, Color.Empty, Color.Red, new Font(&quot;Microsoft Sans Serif&quot;, 8.25F, FontStyle.Regular, GraphicsUnit.Point, ((System.Byte)(0))));\n            ListViewItem listViewItem3 = new ListViewItem(new string[] {&quot;Apple&quot;,&quot;h&quot;,&quot;j&quot;,&quot;n&quot;}, -1, Color.Empty, Color.Lime, null);\n            ListViewItem listViewItem4 = new ListViewItem(new string[] {&quot;Pear&quot;,&quot;y&quot;,&quot;u&quot;,&quot;i&quot;}, -1, Color.Empty, Color.FromArgb(((System.Byte)(192)), ((System.Byte)(128)), ((System.Byte)(156))), null);\n     \n            //Initialize the ListView control and add columns to it.\n            this.listView1 = new ListView();\n\n            // Set the initial sorting type for the ListView.\n            this.listView1.Sorting = SortOrder.None;\n            // Disable automatic sorting to enable manual sorting.\n            this.listView1.View = View.Details;\n            // Add columns and set their text.\n            this.listView1.Columns.Add(new ColumnHeader());\n            this.listView1.Columns[0].Text = &quot;Column 1&quot;;\n            this.listView1.Columns[0].Width = 100;\n            listView1.Columns.Add(new ColumnHeader());\n            listView1.Columns[1].Text = &quot;Column 2&quot;;\n            listView1.Columns.Add(new ColumnHeader());\n            listView1.Columns[2].Text = &quot;Column 3&quot;;\n            listView1.Columns.Add(new ColumnHeader());\n            listView1.Columns[3].Text = &quot;Column 4&quot;;\n            // Suspend control logic until form is done configuring form.\n            this.SuspendLayout();\n            // Add Items to the ListView control.\n            this.listView1.Items.AddRange(new ListViewItem[] {listViewItem1,\n                listViewItem2,\n                listViewItem3,\n                listViewItem4});\n            // Set the location and size of the ListView control.\n            this.listView1.Location = new Point(10, 10);\n            this.listView1.Name = &quot;listView1&quot;;\n            this.listView1.Size = new Size(300, 100);\n            this.listView1.TabIndex = 0;\n            // Enable editing of the items in the ListView.\n            this.listView1.LabelEdit = true;\n            // Connect the ListView.ColumnClick event to the ColumnClick event handler.\n            this.listView1.ColumnClick += new ColumnClickEventHandler(ColumnClick);\n   \t\t\t\n            // Initialize the form.\n            this.ClientSize = new Size(400, 400);\n            this.Controls.AddRange(new Control[] {this.listView1});\n            this.Name = &quot;ListViewSortForm&quot;;\n            this.Text = &quot;Sorted ListView Control&quot;;\n            // Resume layout of the form.\n            this.ResumeLayout(false);\n        }\n        \n\t\n        // ColumnClick event handler.\n        private void ColumnClick(object o, ColumnClickEventArgs e)\n        {\n            // Set the ListViewItemSorter property to a new ListViewItemComparer \n            // object. Setting this property immediately sorts the \n            // ListView using the ListViewItemComparer object.\n            this.listView1.ListViewItemSorter = new ListViewItemComparer(e.Column);\n        }\n\n        [System.STAThreadAttribute()]\n        public static void Main()\n        {\n            Application.Run(new ListViewSortForm());\n        }\n\n    }\n\n    // Implements the manual sorting of items by columns.\n    class ListViewItemComparer : IComparer\n    {\n        private int col;\n        public ListViewItemComparer()\n        {\n            col = 0;\n        }\n        public ListViewItemComparer(int column)\n        {\n            col = column;\n        }\n        public int Compare(object x, object y)\n        {\n            return String.Compare(((ListViewItem)x).SubItems[col].Text, ((ListViewItem)y).SubItems[col].Text);\n        }\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListView.ColumnClick#1\">Imports System\nImports System.Windows.Forms\nImports System.Drawing\nImports System.Collections\n\n\nNamespace ListViewSortFormNamespace\n\n    Public Class ListViewSortForm\n        Inherits Form\n\n        Private listView1 As ListView\n\n        Public Sub New()\n            &#39; Create ListView items to add to the control.\n            Dim listViewItem1 As New ListViewItem(New String() {&quot;Banana&quot;, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;}, -1, Color.Empty, Color.Yellow, Nothing)\n            Dim listViewItem2 As New ListViewItem(New String() {&quot;Cherry&quot;, &quot;v&quot;, &quot;g&quot;, &quot;t&quot;}, -1, Color.Empty, Color.Red, New Font(&quot;Microsoft Sans Serif&quot;, 8.25F, FontStyle.Regular, GraphicsUnit.Point, CType(0, System.Byte)))\n            Dim listViewItem3 As New ListViewItem(New String() {&quot;Apple&quot;, &quot;h&quot;, &quot;j&quot;, &quot;n&quot;}, -1, Color.Empty, Color.Lime, Nothing)\n            Dim listViewItem4 As New ListViewItem(New String() {&quot;Pear&quot;, &quot;y&quot;, &quot;u&quot;, &quot;i&quot;}, -1, Color.Empty, Color.FromArgb(CType(192, System.Byte), CType(128, System.Byte), CType(156, System.Byte)), Nothing)\n\n            &#39;Initialize the ListView control and add columns to it.\n            Me.listView1 = New ListView\n\n            &#39; Set the initial sorting type for the ListView.\n            Me.listView1.Sorting = SortOrder.None\n            &#39; Disable automatic sorting to enable manual sorting.\n            Me.listView1.View = View.Details\n            &#39; Add columns and set their text.\n            Me.listView1.Columns.Add(New ColumnHeader)\n            Me.listView1.Columns(0).Text = &quot;Column 1&quot;\n            Me.listView1.Columns(0).Width = 100\n            listView1.Columns.Add(New ColumnHeader)\n            listView1.Columns(1).Text = &quot;Column 2&quot;\n            listView1.Columns.Add(New ColumnHeader)\n            listView1.Columns(2).Text = &quot;Column 3&quot;\n            listView1.Columns.Add(New ColumnHeader)\n            listView1.Columns(3).Text = &quot;Column 4&quot;\n            &#39; Suspend control logic until form is done configuring form.\n            Me.SuspendLayout()\n            &#39; Add Items to the ListView control.\n            Me.listView1.Items.AddRange(New ListViewItem() {listViewItem1, listViewItem2, listViewItem3, listViewItem4})\n            &#39; Set the location and size of the ListView control.\n            Me.listView1.Location = New Point(10, 10)\n            Me.listView1.Name = &quot;listView1&quot;\n            Me.listView1.Size = New Size(300, 100)\n            Me.listView1.TabIndex = 0\n            &#39; Enable editing of the items in the ListView.\n            Me.listView1.LabelEdit = True\n            &#39; Connect the ListView.ColumnClick event to the ColumnClick event handler.\n            AddHandler Me.listView1.ColumnClick, AddressOf ColumnClick\n\n            &#39; Initialize the form.\n            Me.ClientSize = New Size(400, 400)\n            Me.Controls.AddRange(New Control() {Me.listView1})\n            Me.Name = &quot;ListViewSortForm&quot;\n            Me.Text = &quot;Sorted ListView Control&quot;\n            &#39; Resume layout of the form.\n            Me.ResumeLayout(False)\n        End Sub &#39;New\n\n\n        &#39; ColumnClick event handler.\n        Private Sub ColumnClick(ByVal o As Object, ByVal e As ColumnClickEventArgs)\n            &#39; Set the ListViewItemSorter property to a new ListViewItemComparer \n            &#39; object. Setting this property immediately sorts the \n            &#39; ListView using the ListViewItemComparer object.\n            Me.listView1.ListViewItemSorter = New ListViewItemComparer(e.Column)\n        End Sub\n\n    End Class\n\n    &#39; Implements the manual sorting of items by columns.\n    Class ListViewItemComparer\n        Implements IComparer\n\n        Private col As Integer\n\n        Public Sub New()\n            col = 0\n        End Sub\n\n        Public Sub New(ByVal column As Integer)\n            col = column\n        End Sub\n\n        Public Function Compare(ByVal x As Object, ByVal y As Object) As Integer _\n           Implements IComparer.Compare\n            Return [String].Compare(CType(x, ListViewItem).SubItems(col).Text, CType(y, ListViewItem).SubItems(col).Text)\n        End Function\n    End Class\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_MultiSelect\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_MultiSelect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MultiSelect</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether multiple items can be selected.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool MultiSelect { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if multiple items in the control can be selected at one time; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the MultiSelect property is set to <code>true</code>, multiple items can be selected in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. To select multiple items, the user must hold down the CTRL key while clicking the items to select. Consecutive items can be selected by clicking the first item to select and then, while holding down the SHIFT key, clicking the last item to select. You can use the multiple selection feature to select multiple items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control and perform an operation on all the items selected. For example, the user could select multiple items and then right-click a selected item to display a shortcut menu that displays a set of tasks that can be performed on the selected items.  </p>\n<p> To determine which items are selected in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control, use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedItems_\" data-linktype=\"relative-path\">SelectedItems</a> property. The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedItems_\" data-linktype=\"relative-path\">SelectedItems</a> property allows you to access the <a class=\"xref\" href=\"system.windows.forms.listview.selectedlistviewitemcollection\" data-linktype=\"relative-path\">ListView+SelectedListViewItemCollection</a> that contains a list of the selected items. If you want the index positions in the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection\" data-linktype=\"relative-path\">ListView+ListViewItemCollection</a> instead of the items, you can use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedIndices_\" data-linktype=\"relative-path\">SelectedIndices</a> property to access the <a class=\"xref\" href=\"system.windows.forms.listview.selectedindexcollection\" data-linktype=\"relative-path\">ListView+SelectedIndexCollection</a>.  </p>\n<p> If you do not want to allow multiple selections in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>, yet still want to offer the user a way for multiple items to be chosen, you can display check boxes by setting the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a> property to <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> that allows multiple items to be selected. The example demonstrates setting the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_HideSelection_\" data-linktype=\"relative-path\">HideSelection</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_HeaderStyle_\" data-linktype=\"relative-path\">HeaderStyle</a> properties. To run this example, paste the following code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> object named <code>ListView1</code> and a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> named <code>TextBox1</code>. Call the <code>InitializeListView</code> method from the form&#39;s constructor or <code>Load</code> method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView1#1\">\t// This method adds two columns to the ListView, setting the Text \n\t// and TextAlign, and Width properties of each ColumnHeader.  The \n\t// HeaderStyle property is set to NonClickable since the ColumnClick \n\t// event is not handled.  Finally the method adds ListViewItems and \n\t// SubItems to each column.\n\tprivate void InitializeListView()\n\t{\n\t\tthis.ListView1 = new System.Windows.Forms.ListView();\n\t\tthis.ListView1.BackColor = System.Drawing.SystemColors.Control;\n\t\tthis.ListView1.Dock = System.Windows.Forms.DockStyle.Top;\n\t\tthis.ListView1.Location = new System.Drawing.Point(0, 0);\n\t\tthis.ListView1.Name = &quot;ListView1&quot;;\n\t\tthis.ListView1.Size = new System.Drawing.Size(292, 130);\n\t\tthis.ListView1.TabIndex = 0;\n\t\tthis.ListView1.View = System.Windows.Forms.View.Details;\n\t\tthis.ListView1.MultiSelect = true;\n\t\tthis.ListView1.HideSelection = false;\n\t\tthis.ListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable;\n\t\t\n\t\tColumnHeader columnHeader1 = new ColumnHeader();\n\t\tcolumnHeader1.Text = &quot;Breakfast Item&quot;;\n\t\tcolumnHeader1.TextAlign = HorizontalAlignment.Left;\n\t\tcolumnHeader1.Width = 146;\n\n\t \tColumnHeader columnHeader2 = new ColumnHeader();\n\t\tcolumnHeader2.Text = &quot;Price Each&quot;;\n\t\tcolumnHeader2.TextAlign = HorizontalAlignment.Center;\n\t\tcolumnHeader2.Width = 142;\n  \n\t\tthis.ListView1.Columns.Add(columnHeader1);\n\t\tthis.ListView1.Columns.Add(columnHeader2);\n\n\t\tstring[] foodList = new string[]{&quot;Juice&quot;, &quot;Coffee&quot;, \n\t\t\t&quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, \n\t\t\t&quot;Bagel &amp; Cream Cheese&quot;};\n\t\tstring[] foodPrice = new string[]{&quot;1.09&quot;, &quot;1.09&quot;, &quot;2.19&quot;, \n\t\t\t&quot;2.49&quot;, &quot;1.49&quot;, &quot;1.49&quot;};\n\t\t\n\t\tfor(int count=0; count &lt; foodList.Length; count++)\n\t\t{\n\t\t\tListViewItem listItem = new ListViewItem(foodList[count]);\n\t\t\tlistItem.SubItems.Add(foodPrice[count]);\n\t\t\tListView1.Items.Add(listItem);\n\t\t}\n\t\tthis.Controls.Add(ListView1);\n\t}\n\t\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView1#1\">    &#39; This method adds two columns to the ListView, setting the Text \n    &#39; and TextAlign, and Width properties of each ColumnHeader.  The \n    &#39; HeaderStyle property is set to NonClickable since the ColumnClick \n    &#39; event is not handled.  Finally the method adds ListViewItems and \n    &#39; SubItems to each column.\n    Private Sub InitializeListView()\n        Me.ListView1 = New System.Windows.Forms.ListView\n        Me.ListView1.BackColor = System.Drawing.SystemColors.Control\n        Me.ListView1.Dock = System.Windows.Forms.DockStyle.Top\n        Me.ListView1.Location = New System.Drawing.Point(0, 0)\n        Me.ListView1.Name = &quot;ListView1&quot;\n        Me.ListView1.Size = New System.Drawing.Size(292, 130)\n        Me.ListView1.TabIndex = 0\n        Me.ListView1.View = System.Windows.Forms.View.Details\n        Me.ListView1.MultiSelect = True\n        Me.ListView1.HideSelection = False\n        ListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable\n        Dim columnHeader1 As New ColumnHeader\n        With columnHeader1\n            .Text = &quot;Breakfast Item&quot;\n            .TextAlign = HorizontalAlignment.Left\n            .Width = 146\n        End With\n        Dim columnHeader2 As New ColumnHeader\n        With columnHeader2\n            .Text = &quot;Price Each&quot;\n            .TextAlign = HorizontalAlignment.Center\n            .Width = 142\n        End With\n\n        Me.ListView1.Columns.Add(columnHeader1)\n        Me.ListView1.Columns.Add(columnHeader2)\n        Dim foodList() As String = New String() {&quot;Juice&quot;, &quot;Coffee&quot;, _\n            &quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, _\n            &quot;Bagel &amp; Cream Cheese&quot;}\n        Dim foodPrice() As String = New String() {&quot;1.09&quot;, &quot;1.09&quot;, _\n            &quot;2.19&quot;, &quot;2.49&quot;, &quot;1.49&quot;, &quot;1.49&quot;}\n        Dim count As Integer\n        For count = 0 To foodList.Length - 1\n            Dim listItem As New ListViewItem(foodList(count))\n            listItem.SubItems.Add(foodPrice(count))\n            ListView1.Items.Add(listItem)\n        Next\n        Me.Controls.Add(Me.ListView1)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView1#1\">   // This method adds two columns to the ListView, setting the Text \n   // and TextAlign, and Width properties of each ColumnHeader.  The \n   // HeaderStyle property is set to NonClickable since the ColumnClick \n   // event is not handled.  Finally the method adds ListViewItems and \n   // SubItems to each column.\n   void InitializeListView()\n   {\n      this-&gt;ListView1 = gcnew System::Windows::Forms::ListView;\n      this-&gt;ListView1-&gt;BackColor = System::Drawing::SystemColors::Control;\n      this-&gt;ListView1-&gt;Dock = System::Windows::Forms::DockStyle::Top;\n      this-&gt;ListView1-&gt;Location = System::Drawing::Point( 0, 0 );\n      this-&gt;ListView1-&gt;Name = &quot;ListView1&quot;;\n      this-&gt;ListView1-&gt;Size = System::Drawing::Size( 292, 130 );\n      this-&gt;ListView1-&gt;TabIndex = 0;\n      this-&gt;ListView1-&gt;View = System::Windows::Forms::View::Details;\n      this-&gt;ListView1-&gt;MultiSelect = true;\n      this-&gt;ListView1-&gt;HideSelection = false;\n      this-&gt;ListView1-&gt;HeaderStyle = ColumnHeaderStyle::Nonclickable;\n      ColumnHeader^ columnHeader1 = gcnew ColumnHeader;\n      columnHeader1-&gt;Text = &quot;Breakfast Item&quot;;\n      columnHeader1-&gt;TextAlign = HorizontalAlignment::Left;\n      columnHeader1-&gt;Width = 146;\n      ColumnHeader^ columnHeader2 = gcnew ColumnHeader;\n      columnHeader2-&gt;Text = &quot;Price Each&quot;;\n      columnHeader2-&gt;TextAlign = HorizontalAlignment::Center;\n      columnHeader2-&gt;Width = 142;\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader1 );\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader2 );\n      array&lt;String^&gt;^foodList = {&quot;Juice&quot;,&quot;Coffee&quot;,&quot;Cereal &amp; Milk&quot;,&quot;Fruit Plate&quot;,&quot;Toast &amp; Jelly&quot;,&quot;Bagel &amp; Cream Cheese&quot;};\n      array&lt;String^&gt;^foodPrice = {&quot;1.09&quot;,&quot;1.09&quot;,&quot;2.19&quot;,&quot;2.49&quot;,&quot;1.49&quot;,&quot;1.49&quot;};\n      for ( int count = 0; count &lt; foodList-&gt;Length; count++ )\n      {\n         ListViewItem^ listItem = gcnew ListViewItem( foodList[ count ] );\n         listItem-&gt;SubItems-&gt;Add( foodPrice[ count ] );\n         ListView1-&gt;Items-&gt;Add( listItem );\n\n      }\n      this-&gt;Controls-&gt;Add( ListView1 );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OwnerDraw\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OwnerDraw_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OwnerDraw</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is drawn by the operating system or by code that you provide.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool OwnerDraw { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is drawn by code that you provide; <code>false</code> if the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is drawn by the operating system. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is normally drawn by the operating system. In order to customize the appearance of <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> items, subitems, and column headers, set the OwnerDraw property to <code>true</code> and provide a handler for one or more of the following events: <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">DrawItem</a>, <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">DrawSubItem</a>, <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawColumnHeader\" data-linktype=\"relative-path\">DrawColumnHeader</a>. This is called owner drawing. When the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>, all three events occur; otherwise, only the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">DrawItem</a> event occurs.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Subitem information typically appears in the tile view as well as the details view, but in the tile view, it must be drawn in a handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">DrawItem</a> event. The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">DrawSubItem</a> event does not occur for any subitems for which no <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> object has been added to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Columns_\" data-linktype=\"relative-path\">Columns</a> collection. Note also that the first subitem of each <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> object represents the parent item itself, and is displayed in the first column.  </p>\n</div>\n<p> In the details view, you can handle the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">DrawItem</a> event to draw elements common to all subitems, such as the background, and handle the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">DrawSubItem</a> event to draw elements for individual subitems, such as text values. You can also draw all items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control using only one of the two events, although this may be less convenient. To draw column headers in the details view, you must handle the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawColumnHeader\" data-linktype=\"relative-path\">DrawColumnHeader</a> event.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To avoid issues with graphics flickering when owner drawing, override the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control and set the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DoubleBuffered_\" data-linktype=\"relative-path\">DoubleBuffered</a> property to <code>true</code>.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to provide custom drawing for a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. The <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control in the example has a gradient background. Subitems with negative values have a red foreground and a black background.  </p>\n<p> A handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">DrawItem</a> event draws the background for entire items. A handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">DrawSubItem</a> event draws the text values and both the text and background for subitems that have negative values. A handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawColumnHeader\" data-linktype=\"relative-path\">DrawColumnHeader</a> event draws each column header.  </p>\n<p> A <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> component provides a way to switch between the details view and the list view. In the list view, only the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">DrawItem</a> event is raised. In this case, the text and background are both drawn in the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">DrawItem</a> event handler.  </p>\n<pre><code class=\"lang-cs\" name=\"ListViewOwnerDraw#1\">using System;\nusing System.Drawing;\nusing System.Drawing.Drawing2D;\nusing System.Globalization;\nusing System.Windows.Forms;\n\npublic class ListViewOwnerDraw : Form\n{\n    private ListView listView1 = new ListView();\n    private ContextMenu contextMenu1 = new ContextMenu();\n\n    public ListViewOwnerDraw()\n    {\n        // Initialize the ListView control.\n        listView1.BackColor = Color.Black;\n        listView1.ForeColor = Color.White;\n        listView1.Dock = DockStyle.Fill;\n        listView1.View = View.Details;\n        listView1.FullRowSelect = true;\n\n        // Add columns to the ListView control.\n        listView1.Columns.Add(&quot;Name&quot;, 100, HorizontalAlignment.Center);\n        listView1.Columns.Add(&quot;First&quot;, 100, HorizontalAlignment.Center);\n        listView1.Columns.Add(&quot;Second&quot;, 100, HorizontalAlignment.Center);\n        listView1.Columns.Add(&quot;Third&quot;, 100, HorizontalAlignment.Center);\n\n        // Create items and add them to the ListView control.\n        ListViewItem listViewItem1 = new ListViewItem(new string[] { &quot;One&quot;, &quot;20&quot;, &quot;30&quot;, &quot;-40&quot; }, -1);\n        ListViewItem listViewItem2 = new ListViewItem(new string[] { &quot;Two&quot;, &quot;-250&quot;, &quot;145&quot;, &quot;37&quot; }, -1);\n        ListViewItem listViewItem3 = new ListViewItem(new string[] { &quot;Three&quot;, &quot;200&quot;, &quot;800&quot;, &quot;-1,001&quot; }, -1);\n        ListViewItem listViewItem4 = new ListViewItem(new string[] { &quot;Four&quot;, &quot;not available&quot;, &quot;-2&quot;, &quot;100&quot; }, -1);\n        listView1.Items.AddRange(new ListViewItem[] { listViewItem1, listViewItem2, listViewItem3, listViewItem4 });\n\n        // Initialize the shortcut menu and \n        // assign it to the ListView control.\n        contextMenu1.MenuItems.Add(&quot;List&quot;,\n            new EventHandler(menuItemList_Click));\n        contextMenu1.MenuItems.Add(&quot;Details&quot;,\n            new EventHandler(menuItemDetails_Click));\n        listView1.ContextMenu = contextMenu1;\n\n        // Configure the ListView control for owner-draw and add \n        // handlers for the owner-draw events.\n        listView1.OwnerDraw = true;\n        listView1.DrawItem += new\n            DrawListViewItemEventHandler(listView1_DrawItem);\n        listView1.DrawSubItem += new\n            DrawListViewSubItemEventHandler(listView1_DrawSubItem);\n        listView1.DrawColumnHeader += new\n            DrawListViewColumnHeaderEventHandler(listView1_DrawColumnHeader);\n\n        // Add a handler for the MouseUp event so an item can be \n        // selected by clicking anywhere along its width.\n        listView1.MouseUp += new MouseEventHandler(listView1_MouseUp);\n\n        // Add handlers for various events to compensate for an \n        // extra DrawItem event that occurs the first time the mouse \n        // moves over each row. \n        listView1.MouseMove += new MouseEventHandler(listView1_MouseMove);\n        listView1.ColumnWidthChanged += new ColumnWidthChangedEventHandler(listView1_ColumnWidthChanged);\n        listView1.Invalidated += new InvalidateEventHandler(listView1_Invalidated);\n\n        // Initialize the form and add the ListView control to it.\n        this.ClientSize = new Size(450, 150);\n        this.FormBorderStyle = FormBorderStyle.FixedSingle;\n        this.MaximizeBox = false;\n        this.Text = &quot;ListView OwnerDraw Example&quot;;\n        this.Controls.Add(listView1);\n    }\n\n    // Clean up any resources being used.        \n    protected override void Dispose(bool disposing)\n    {\n        if (disposing)\n        {\n            contextMenu1.Dispose();\n        }\n        base.Dispose(disposing);\n    }\n\n    [STAThread]\n    static void Main()\n    {\n        Application.EnableVisualStyles();\n        Application.Run(new ListViewOwnerDraw());\n    }\n\n    // Sets the ListView control to the List view.\n    private void menuItemList_Click(object sender, EventArgs e)\n    {\n        listView1.View = View.List;\n        listView1.Invalidate();\n    }\n\n    // Sets the ListView control to the Details view.\n    private void menuItemDetails_Click(object sender, EventArgs e)\n    {\n        listView1.View = View.Details;\n\n        // Reset the tag on each item to re-enable the workaround in\n        // the MouseMove event handler.\n        foreach (ListViewItem item in listView1.Items)\n        {\n            item.Tag = null;\n        }\n    }\n\n    // Selects and focuses an item when it is clicked anywhere along \n    // its width. The click must normally be on the parent item text.\n    private void listView1_MouseUp(object sender, MouseEventArgs e)\n    {\n        ListViewItem clickedItem = listView1.GetItemAt(5, e.Y);\n        if (clickedItem != null)\n        {\n            clickedItem.Selected = true;\n            clickedItem.Focused = true;\n        }\n    }\n\n    // Draws the backgrounds for entire ListView items.\n    private void listView1_DrawItem(object sender,\n        DrawListViewItemEventArgs e)\n    {\n        if ((e.State &amp; ListViewItemStates.Selected) != 0)\n        {\n            // Draw the background and focus rectangle for a selected item.\n            e.Graphics.FillRectangle(Brushes.Maroon, e.Bounds);\n            e.DrawFocusRectangle();\n        }\n        else\n        {\n            // Draw the background for an unselected item.\n            using (LinearGradientBrush brush =\n                new LinearGradientBrush(e.Bounds, Color.Orange,\n                Color.Maroon, LinearGradientMode.Horizontal))\n            {\n                e.Graphics.FillRectangle(brush, e.Bounds);\n            }\n        }\n\n        // Draw the item text for views other than the Details view.\n        if (listView1.View != View.Details)\n        {\n            e.DrawText();\n        }\n    }\n\n    // Draws subitem text and applies content-based formatting.\n    private void listView1_DrawSubItem(object sender,\n        DrawListViewSubItemEventArgs e)\n    {\n        TextFormatFlags flags = TextFormatFlags.Left;\n\n        using (StringFormat sf = new StringFormat())\n        {\n            // Store the column text alignment, letting it default\n            // to Left if it has not been set to Center or Right.\n            switch (e.Header.TextAlign)\n            {\n                case HorizontalAlignment.Center:\n                    sf.Alignment = StringAlignment.Center;\n                    flags = TextFormatFlags.HorizontalCenter;\n                    break;\n                case HorizontalAlignment.Right:\n                    sf.Alignment = StringAlignment.Far;\n                    flags = TextFormatFlags.Right;\n                    break;\n            }\n\n            // Draw the text and background for a subitem with a \n            // negative value. \n            double subItemValue;\n            if (e.ColumnIndex &gt; 0 &amp;&amp; Double.TryParse(\n                e.SubItem.Text, NumberStyles.Currency,\n                NumberFormatInfo.CurrentInfo, out subItemValue) &amp;&amp;\n                subItemValue &lt; 0)\n            {\n                // Unless the item is selected, draw the standard \n                // background to make it stand out from the gradient.\n                if ((e.ItemState &amp; ListViewItemStates.Selected) == 0)\n                {\n                    e.DrawBackground();\n                }\n\n                // Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text,\n                    listView1.Font, Brushes.Red, e.Bounds, sf);\n\n                return;\n            }\n\n            // Draw normal text for a subitem with a nonnegative \n            // or nonnumerical value.\n            e.DrawText(flags);\n        }\n    }\n\n    // Draws column headers.\n    private void listView1_DrawColumnHeader(object sender,\n        DrawListViewColumnHeaderEventArgs e)\n    {\n        using (StringFormat sf = new StringFormat())\n        {\n            // Store the column text alignment, letting it default\n            // to Left if it has not been set to Center or Right.\n            switch (e.Header.TextAlign)\n            {\n                case HorizontalAlignment.Center:\n                    sf.Alignment = StringAlignment.Center;\n                    break;\n                case HorizontalAlignment.Right:\n                    sf.Alignment = StringAlignment.Far;\n                    break;\n            }\n\n            // Draw the standard header background.\n            e.DrawBackground();\n\n            // Draw the header text.\n            using (Font headerFont =\n                        new Font(&quot;Helvetica&quot;, 10, FontStyle.Bold))\n            {\n                e.Graphics.DrawString(e.Header.Text, headerFont,\n                    Brushes.Black, e.Bounds, sf);\n            }\n        }\n        return;\n    }\n\n    // Forces each row to repaint itself the first time the mouse moves over \n    // it, compensating for an extra DrawItem event sent by the wrapped \n    // Win32 control. This issue occurs each time the ListView is invalidated.\n    private void listView1_MouseMove(object sender, MouseEventArgs e)\n    {\n        ListViewItem item = listView1.GetItemAt(e.X, e.Y);\n        if (item != null &amp;&amp; item.Tag == null)\n        {\n            listView1.Invalidate(item.Bounds);\n            item.Tag = &quot;tagged&quot;;\n        }\n    }\n\n    // Resets the item tags. \n    void listView1_Invalidated(object sender, InvalidateEventArgs e)\n    {\n        foreach (ListViewItem item in listView1.Items)\n        {\n            if (item == null) return;\n            item.Tag = null;\n        }\n    }\n\n    // Forces the entire control to repaint if a column width is changed.\n    void listView1_ColumnWidthChanged(object sender, \n        ColumnWidthChangedEventArgs e)\n    {\n        listView1.Invalidate();\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewOwnerDraw#1\">Imports System\nImports System.Drawing\nImports System.Drawing.Drawing2D\nImports System.Globalization\nImports System.Windows.Forms\n\nPublic Class ListViewOwnerDraw\n    Inherits Form\n    Private WithEvents listView1 As New ListView()\n    Private WithEvents contextMenu1 As New ContextMenu()\n    Private WithEvents listMenuItem As New MenuItem(&quot;List&quot;)\n    Private WithEvents detailsMenuItem As New MenuItem(&quot;Details&quot;)\n\n    Public Sub New()\n\n        &#39; Initialize the shortcut menu. \n        contextMenu1.MenuItems.AddRange(New MenuItem() _\n            {Me.listMenuItem, Me.detailsMenuItem})\n\n        &#39; Initialize the ListView control.\n        With Me.listView1\n            .BackColor = Color.Black\n            .ForeColor = Color.White\n            .Dock = DockStyle.Fill\n            .View = View.Details\n            .FullRowSelect = True\n            .OwnerDraw = True\n            .ContextMenu = Me.contextMenu1\n        End With\n\n        &#39; Add columns to the ListView control.\n        With Me.listView1.Columns\n            .Add(&quot;Name&quot;, 100, HorizontalAlignment.Center)\n            .Add(&quot;First&quot;, 100, HorizontalAlignment.Center)\n            .Add(&quot;Second&quot;, 100, HorizontalAlignment.Center)\n            .Add(&quot;Third&quot;, 100, HorizontalAlignment.Center)\n        End With\n\n        &#39; Create items and add them to the ListView control.\n        Dim listViewItem1 As New ListViewItem(New String() _\n            {&quot;One&quot;, &quot;20&quot;, &quot;30&quot;, &quot;-40&quot;}, -1)\n        Dim listViewItem2 As New ListViewItem(New String() _\n            {&quot;Two&quot;, &quot;-250&quot;, &quot;145&quot;, &quot;37&quot;}, -1)\n        Dim listViewItem3 As New ListViewItem(New String() _\n            {&quot;Three&quot;, &quot;200&quot;, &quot;800&quot;, &quot;-1,001&quot;}, -1)\n        Dim listViewItem4 As New ListViewItem(New String() _\n            {&quot;Four&quot;, &quot;not available&quot;, &quot;-2&quot;, &quot;100&quot;}, -1)\n        Me.listView1.Items.AddRange(New ListViewItem() _\n            {listViewItem1, listViewItem2, listViewItem3, listViewItem4})\n\n        &#39; Initialize the form and add the ListView control to it.\n        With Me\n            .ClientSize = New Size(450, 150)\n            .FormBorderStyle = FormBorderStyle.FixedSingle\n            .MaximizeBox = False\n            .Text = &quot;ListView OwnerDraw Example&quot;\n            .Controls.Add(Me.listView1)\n        End With\n\n    End Sub\n\n    &#39; Clean up any resources being used.        \n    Protected Overrides Sub Dispose(ByVal disposing As Boolean)\n        If disposing Then\n            contextMenu1.Dispose()\n        End If\n        MyBase.Dispose(disposing)\n    End Sub\n\n    &lt;STAThread()&gt; _\n    Shared Sub Main()\n        Application.Run(New ListViewOwnerDraw())\n    End Sub\n\n    &#39; Sets the ListView control to the List view.\n    Private Sub menuItemList_Click(ByVal sender As Object, _\n        ByVal e As EventArgs) _\n        Handles listMenuItem.Click\n\n        Me.listView1.View = View.List\n\n    End Sub\n\n    &#39; Sets the ListView control to the Details view.\n    Private Sub menuItemDetails_Click(ByVal sender As Object, _\n        ByVal e As EventArgs) _\n        Handles detailsMenuItem.Click\n\n        Me.listView1.View = View.Details\n\n        &#39; Reset the tag on each item to re-enable the workaround \n        &#39; in the MouseMove event handler.\n        For Each item As ListViewItem In listView1.Items\n            item.Tag = Nothing\n        Next\n\n    End Sub\n\n    &#39; Selects and focuses an item when it is clicked anywhere along \n    &#39; its width. The click must normally be on the parent item text.\n    Private Sub listView1_MouseUp(ByVal sender As Object, _\n        ByVal e As MouseEventArgs) _\n        Handles listView1.MouseUp\n\n        Dim clickedItem As ListViewItem = Me.listView1.GetItemAt(5, e.Y)\n        If (clickedItem IsNot Nothing) Then\n            clickedItem.Selected = True\n            clickedItem.Focused = True\n        End If\n\n    End Sub\n\n    &#39; Draws the backgrounds for entire ListView items.\n    Private Sub listView1_DrawItem(ByVal sender As Object, _\n        ByVal e As DrawListViewItemEventArgs) _\n        Handles listView1.DrawItem\n\n        If Not (e.State And ListViewItemStates.Selected) = 0 Then\n\n            &#39; Draw the background for a selected item.\n            e.Graphics.FillRectangle(Brushes.Maroon, e.Bounds)\n            e.DrawFocusRectangle()\n\n        Else\n\n            &#39; Draw the background for an unselected item.\n            Dim brush As New LinearGradientBrush(e.Bounds, Color.Orange, _\n                Color.Maroon, LinearGradientMode.Horizontal)\n            Try\n                e.Graphics.FillRectangle(brush, e.Bounds)\n            Finally\n                brush.Dispose()\n            End Try\n\n        End If\n\n        &#39; Draw the item text for views other than the Details view.\n        If Not Me.listView1.View = View.Details Then\n            e.DrawText()\n        End If\n\n    End Sub\n\n    &#39; Draws subitem text and applies content-based formatting.\n    Private Sub listView1_DrawSubItem(ByVal sender As Object, _\n        ByVal e As DrawListViewSubItemEventArgs) _\n        Handles listView1.DrawSubItem\n\n        Dim flags As TextFormatFlags = TextFormatFlags.Left\n\n        Dim sf As New StringFormat()\n        Try\n\n            &#39; Store the column text alignment, letting it default\n            &#39; to Left if it has not been set to Center or Right.\n            Select Case e.Header.TextAlign\n                Case HorizontalAlignment.Center\n                    sf.Alignment = StringAlignment.Center\n                    flags = TextFormatFlags.HorizontalCenter\n                Case HorizontalAlignment.Right\n                    sf.Alignment = StringAlignment.Far\n                    flags = TextFormatFlags.Right\n            End Select\n\n            &#39; Draw the text and background for a subitem with a \n            &#39; negative value. \n            Dim subItemValue As Double\n            If e.ColumnIndex &gt; 0 AndAlso _\n                Double.TryParse(e.SubItem.Text, NumberStyles.Currency, _\n                NumberFormatInfo.CurrentInfo, subItemValue) AndAlso _\n                subItemValue &lt; 0 Then\n\n                &#39; Unless the item is selected, draw the standard \n                &#39; background to make it stand out from the gradient.\n                If (e.ItemState And ListViewItemStates.Selected) = 0 Then\n                    e.DrawBackground()\n                End If\n\n                &#39; Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text, _\n                    Me.listView1.Font, Brushes.Red, e.Bounds, sf)\n\n                Return\n\n            End If\n\n            &#39; Draw normal text for a subitem with a nonnegative \n            &#39; or nonnumerical value.\n            e.DrawText(flags)\n\n        Finally\n            sf.Dispose()\n        End Try\n\n    End Sub\n\n    &#39; Draws column headers.\n    Private Sub listView1_DrawColumnHeader(ByVal sender As Object, _\n        ByVal e As DrawListViewColumnHeaderEventArgs) _\n        Handles listView1.DrawColumnHeader\n\n        Dim sf As New StringFormat()\n        Try\n\n            &#39; Store the column text alignment, letting it default\n            &#39; to Left if it has not been set to Center or Right.\n            Select Case e.Header.TextAlign\n                Case HorizontalAlignment.Center\n                    sf.Alignment = StringAlignment.Center\n                Case HorizontalAlignment.Right\n                    sf.Alignment = StringAlignment.Far\n            End Select\n\n            &#39; Draw the standard header background.\n            e.DrawBackground()\n\n            &#39; Draw the header text.\n            Dim headerFont As New Font(&quot;Helvetica&quot;, 10, FontStyle.Bold)\n            Try\n                e.Graphics.DrawString(e.Header.Text, headerFont, _\n                    Brushes.Black, e.Bounds, sf)\n            Finally\n                headerFont.Dispose()\n            End Try\n\n        Finally\n            sf.Dispose()\n        End Try\n\n    End Sub\n\n    &#39; Forces each row to repaint itself the first time the mouse moves over \n    &#39; it, compensating for an extra DrawItem event sent by the wrapped \n    &#39; Win32 control.\n    Private Sub listView1_MouseMove(ByVal sender As Object, _\n        ByVal e As MouseEventArgs) _\n        Handles listView1.MouseMove\n\n        Dim item As ListViewItem = listView1.GetItemAt(e.X, e.Y)\n        If item IsNot Nothing AndAlso item.Tag Is Nothing Then\n            listView1.Invalidate(item.Bounds)\n            item.Tag = &quot;tagged&quot;\n        End If\n\n    End Sub\n\n    &#39; Resets the item tags. \n    Private Sub listView1_Invalidated(ByVal sender As Object, _\n        ByVal e As InvalidateEventArgs) Handles listView1.Invalidated\n\n        For Each item As ListViewItem In listView1.Items\n            If item Is Nothing Then Return\n            item.Tag = Nothing\n        Next\n\n    End Sub\n\n    &#39; Forces the entire control to repaint if a column width is changed.\n    Private Sub listView1_ColumnWidthChanged(ByVal sender As Object, _\n        ByVal e As ColumnWidthChangedEventArgs) Handles listView1.ColumnWidthChanged\n\n        listView1.Invalidate()\n\n    End Sub\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_Padding\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_Padding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Padding</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the space between the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control and its contents.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.Padding Padding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.padding\" data-linktype=\"relative-path\">Padding</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.padding\" data-linktype=\"relative-path\">Padding</a> that specifies the space between the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control and its contents.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is not relevant for this class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_RightToLeftLayout\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_RightToLeftLayout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RightToLeftLayout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the control is laid out from right to left.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool RightToLeftLayout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to indicate the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is laid out from right to left; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> property is for use with international applications where the language is read from right to left. If you set <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> and <a class=\"xref\" href=\"system.windows.forms.righttoleft\" data-linktype=\"relative-path\">RightToLeft</a> to true the control&#39;s contents and text will be laid out from right to left.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_Scrollable\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_Scrollable_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Scrollable</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether a scroll bar is added to the control when there is not enough room to display all items.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Scrollable { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if scroll bars are added to the control when necessary to allow the user to see all the items; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this property is set to <code>true</code>, the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> displays a vertical scroll bar to use when the number of items exceeds the size of the client area of the control. You can use this property to ensure that the user can access all items that are available in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In versions of the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE --> prior to version 2.0, the column headers were not painted correctly when setting this property to <code>false</code> and resizing the control to make it larger. To work around this issue, set this property to <code>true</code> in a <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ResizeBegin\" data-linktype=\"relative-path\">ResizeBegin</a> event handler and set it back to <code>false</code> in a <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_ResizeEnd\" data-linktype=\"relative-path\">ResizeEnd</a> event handler.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_SelectedIndices\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_SelectedIndices_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedIndices</div>        \r\n          </div>\r\n    \r\n            <p>Gets the indexes of the selected items in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListView.SelectedIndexCollection SelectedIndices { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listview.selectedindexcollection\" data-linktype=\"relative-path\">ListView+SelectedIndexCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.listview.selectedindexcollection\" data-linktype=\"relative-path\">ListView+SelectedIndexCollection</a> that contains the indexes of the selected items. If no items are currently selected, an empty <a class=\"xref\" href=\"system.windows.forms.listview.selectedindexcollection\" data-linktype=\"relative-path\">ListView+SelectedIndexCollection</a> is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SelectedIndices property will not contain any indexes if the property is accessed before the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> handle is created, which typically occurs when the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is initially loaded for display in the form. You can check to see if the handle is created with the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsHandleCreated_\" data-linktype=\"relative-path\">IsHandleCreated</a> property. When the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_MultiSelect_\" data-linktype=\"relative-path\">MultiSelect</a> property is set to <code>true</code>, this property returns a collection containing the indexes of all items that are selected in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>. For a single-selection <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>, this property returns a collection containing a single element containing the index of the only selected item in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>. For more information on the tasks that can be performed with the items in the collection, see <a class=\"xref\" href=\"system.windows.forms.listview.selectedindexcollection\" data-linktype=\"relative-path\">ListView+SelectedIndexCollection</a>.  </p>\n<p> If you want to obtain a collection of the items that are selected in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control, instead of the index positions of the items that are selected, use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedItems_\" data-linktype=\"relative-path\">SelectedItems</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the SelectedIndices, <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedIndexChanged\" data-linktype=\"relative-path\">SelectedIndexChanged</a>, and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_HeaderStyle_\" data-linktype=\"relative-path\">HeaderStyle</a> members and the <a class=\"xref\" href=\"system.windows.forms.listview.selectedindexcollection\" data-linktype=\"relative-path\">ListView+SelectedIndexCollection</a> class. To run this example, paste the following code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> object named <code>ListView1</code> and a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> named <code>TextBox1</code>. Call the <code>InitializeListView</code> method from the form&#39;s constructor or <code>Load</code> method. This example requires the event handler is correctly associated with the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedIndexChanged\" data-linktype=\"relative-path\">SelectedIndexChanged</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView1#1\">\t// This method adds two columns to the ListView, setting the Text \n\t// and TextAlign, and Width properties of each ColumnHeader.  The \n\t// HeaderStyle property is set to NonClickable since the ColumnClick \n\t// event is not handled.  Finally the method adds ListViewItems and \n\t// SubItems to each column.\n\tprivate void InitializeListView()\n\t{\n\t\tthis.ListView1 = new System.Windows.Forms.ListView();\n\t\tthis.ListView1.BackColor = System.Drawing.SystemColors.Control;\n\t\tthis.ListView1.Dock = System.Windows.Forms.DockStyle.Top;\n\t\tthis.ListView1.Location = new System.Drawing.Point(0, 0);\n\t\tthis.ListView1.Name = &quot;ListView1&quot;;\n\t\tthis.ListView1.Size = new System.Drawing.Size(292, 130);\n\t\tthis.ListView1.TabIndex = 0;\n\t\tthis.ListView1.View = System.Windows.Forms.View.Details;\n\t\tthis.ListView1.MultiSelect = true;\n\t\tthis.ListView1.HideSelection = false;\n\t\tthis.ListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable;\n\t\t\n\t\tColumnHeader columnHeader1 = new ColumnHeader();\n\t\tcolumnHeader1.Text = &quot;Breakfast Item&quot;;\n\t\tcolumnHeader1.TextAlign = HorizontalAlignment.Left;\n\t\tcolumnHeader1.Width = 146;\n\n\t \tColumnHeader columnHeader2 = new ColumnHeader();\n\t\tcolumnHeader2.Text = &quot;Price Each&quot;;\n\t\tcolumnHeader2.TextAlign = HorizontalAlignment.Center;\n\t\tcolumnHeader2.Width = 142;\n  \n\t\tthis.ListView1.Columns.Add(columnHeader1);\n\t\tthis.ListView1.Columns.Add(columnHeader2);\n\n\t\tstring[] foodList = new string[]{&quot;Juice&quot;, &quot;Coffee&quot;, \n\t\t\t&quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, \n\t\t\t&quot;Bagel &amp; Cream Cheese&quot;};\n\t\tstring[] foodPrice = new string[]{&quot;1.09&quot;, &quot;1.09&quot;, &quot;2.19&quot;, \n\t\t\t&quot;2.49&quot;, &quot;1.49&quot;, &quot;1.49&quot;};\n\t\t\n\t\tfor(int count=0; count &lt; foodList.Length; count++)\n\t\t{\n\t\t\tListViewItem listItem = new ListViewItem(foodList[count]);\n\t\t\tlistItem.SubItems.Add(foodPrice[count]);\n\t\t\tListView1.Items.Add(listItem);\n\t\t}\n\t\tthis.Controls.Add(ListView1);\n\t}\n\t\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView1#1\">    &#39; This method adds two columns to the ListView, setting the Text \n    &#39; and TextAlign, and Width properties of each ColumnHeader.  The \n    &#39; HeaderStyle property is set to NonClickable since the ColumnClick \n    &#39; event is not handled.  Finally the method adds ListViewItems and \n    &#39; SubItems to each column.\n    Private Sub InitializeListView()\n        Me.ListView1 = New System.Windows.Forms.ListView\n        Me.ListView1.BackColor = System.Drawing.SystemColors.Control\n        Me.ListView1.Dock = System.Windows.Forms.DockStyle.Top\n        Me.ListView1.Location = New System.Drawing.Point(0, 0)\n        Me.ListView1.Name = &quot;ListView1&quot;\n        Me.ListView1.Size = New System.Drawing.Size(292, 130)\n        Me.ListView1.TabIndex = 0\n        Me.ListView1.View = System.Windows.Forms.View.Details\n        Me.ListView1.MultiSelect = True\n        Me.ListView1.HideSelection = False\n        ListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable\n        Dim columnHeader1 As New ColumnHeader\n        With columnHeader1\n            .Text = &quot;Breakfast Item&quot;\n            .TextAlign = HorizontalAlignment.Left\n            .Width = 146\n        End With\n        Dim columnHeader2 As New ColumnHeader\n        With columnHeader2\n            .Text = &quot;Price Each&quot;\n            .TextAlign = HorizontalAlignment.Center\n            .Width = 142\n        End With\n\n        Me.ListView1.Columns.Add(columnHeader1)\n        Me.ListView1.Columns.Add(columnHeader2)\n        Dim foodList() As String = New String() {&quot;Juice&quot;, &quot;Coffee&quot;, _\n            &quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, _\n            &quot;Bagel &amp; Cream Cheese&quot;}\n        Dim foodPrice() As String = New String() {&quot;1.09&quot;, &quot;1.09&quot;, _\n            &quot;2.19&quot;, &quot;2.49&quot;, &quot;1.49&quot;, &quot;1.49&quot;}\n        Dim count As Integer\n        For count = 0 To foodList.Length - 1\n            Dim listItem As New ListViewItem(foodList(count))\n            listItem.SubItems.Add(foodPrice(count))\n            ListView1.Items.Add(listItem)\n        Next\n        Me.Controls.Add(Me.ListView1)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView1#1\">   // This method adds two columns to the ListView, setting the Text \n   // and TextAlign, and Width properties of each ColumnHeader.  The \n   // HeaderStyle property is set to NonClickable since the ColumnClick \n   // event is not handled.  Finally the method adds ListViewItems and \n   // SubItems to each column.\n   void InitializeListView()\n   {\n      this-&gt;ListView1 = gcnew System::Windows::Forms::ListView;\n      this-&gt;ListView1-&gt;BackColor = System::Drawing::SystemColors::Control;\n      this-&gt;ListView1-&gt;Dock = System::Windows::Forms::DockStyle::Top;\n      this-&gt;ListView1-&gt;Location = System::Drawing::Point( 0, 0 );\n      this-&gt;ListView1-&gt;Name = &quot;ListView1&quot;;\n      this-&gt;ListView1-&gt;Size = System::Drawing::Size( 292, 130 );\n      this-&gt;ListView1-&gt;TabIndex = 0;\n      this-&gt;ListView1-&gt;View = System::Windows::Forms::View::Details;\n      this-&gt;ListView1-&gt;MultiSelect = true;\n      this-&gt;ListView1-&gt;HideSelection = false;\n      this-&gt;ListView1-&gt;HeaderStyle = ColumnHeaderStyle::Nonclickable;\n      ColumnHeader^ columnHeader1 = gcnew ColumnHeader;\n      columnHeader1-&gt;Text = &quot;Breakfast Item&quot;;\n      columnHeader1-&gt;TextAlign = HorizontalAlignment::Left;\n      columnHeader1-&gt;Width = 146;\n      ColumnHeader^ columnHeader2 = gcnew ColumnHeader;\n      columnHeader2-&gt;Text = &quot;Price Each&quot;;\n      columnHeader2-&gt;TextAlign = HorizontalAlignment::Center;\n      columnHeader2-&gt;Width = 142;\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader1 );\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader2 );\n      array&lt;String^&gt;^foodList = {&quot;Juice&quot;,&quot;Coffee&quot;,&quot;Cereal &amp; Milk&quot;,&quot;Fruit Plate&quot;,&quot;Toast &amp; Jelly&quot;,&quot;Bagel &amp; Cream Cheese&quot;};\n      array&lt;String^&gt;^foodPrice = {&quot;1.09&quot;,&quot;1.09&quot;,&quot;2.19&quot;,&quot;2.49&quot;,&quot;1.49&quot;,&quot;1.49&quot;};\n      for ( int count = 0; count &lt; foodList-&gt;Length; count++ )\n      {\n         ListViewItem^ listItem = gcnew ListViewItem( foodList[ count ] );\n         listItem-&gt;SubItems-&gt;Add( foodPrice[ count ] );\n         ListView1-&gt;Items-&gt;Add( listItem );\n\n      }\n      this-&gt;Controls-&gt;Add( ListView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView1#3\">\t// Uses the SelectedIndices property to retrieve and tally the  \n\t// price of the selected menu items.\n\tprivate void ListView1_SelectedIndexChanged_UsingIndices(\n\t\tobject sender, System.EventArgs e)\n\t{\n\n\t\tListView.SelectedIndexCollection indexes = \n\t\t\tthis.ListView1.SelectedIndices;\n\t\t\n\t\tdouble price = 0.0;\n\t\tforeach ( int index in indexes )\n\t\t{\n\t\t\tprice += Double.Parse(\n\t\t\t\tthis.ListView1.Items[index].SubItems[1].Text);\n\t\t}\n\n\t\t// Output the price to TextBox1.\n\t\tTextBox1.Text =  price.ToString();\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView1#3\">    &#39; Uses the SelectedIndices property to retrieve and tally the price of  \n    &#39; the selected menu items.\n    Private Sub ListView1_SelectedIndexChanged_UsingIndices _\n        (ByVal sender As Object, ByVal e As System.EventArgs) _\n        Handles ListView1.SelectedIndexChanged\n\n        Dim indexes As ListView.SelectedIndexCollection = _\n            Me.ListView1.SelectedIndices\n        Dim index As Integer\n        Dim price As Double = 0.0\n        For Each index In indexes\n            price += Double.Parse(Me.ListView1.Items(index).SubItems(1).Text)\n        Next\n\n        &#39; Output the price to TextBox1.\n        TextBox1.Text = CType(price, String)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView1#3\">   // Uses the SelectedIndices property to retrieve and tally the  \n   // price of the selected menu items.\n   void ListView1_SelectedIndexChanged_UsingIndices( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      ListView::SelectedIndexCollection^ indexes = this-&gt;ListView1-&gt;SelectedIndices;\n      double price = 0.0;\n      System::Collections::IEnumerator^ myEnum1 = indexes-&gt;GetEnumerator();\n      while ( myEnum1-&gt;MoveNext() )\n      {\n         int index = safe_cast&lt;int&gt;(myEnum1-&gt;Current);\n         price += Double::Parse( this-&gt;ListView1-&gt;Items[ index ]-&gt;SubItems[ 1 ]-&gt;Text );\n      }\n\n      \n      // Output the price to TextBox1.\n      TextBox1-&gt;Text = price.ToString();\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_SelectedItems\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_SelectedItems_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedItems</div>        \r\n          </div>\r\n    \r\n            <p>Gets the items that are selected in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListView.SelectedListViewItemCollection SelectedItems { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listview.selectedlistviewitemcollection\" data-linktype=\"relative-path\">ListView+SelectedListViewItemCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.listview.selectedlistviewitemcollection\" data-linktype=\"relative-path\">ListView+SelectedListViewItemCollection</a> that contains the items that are selected in the control. If no items are currently selected, an empty <a class=\"xref\" href=\"system.windows.forms.listview.selectedlistviewitemcollection\" data-linktype=\"relative-path\">ListView+SelectedListViewItemCollection</a> is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SelectedItems property will not contain any items if the property is accessed before the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> handle is created, which typically occurs when <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is initially loaded for display in the form. You can check to see if the handle is created with the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsHandleCreated_\" data-linktype=\"relative-path\">IsHandleCreated</a> property. When the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_MultiSelect_\" data-linktype=\"relative-path\">MultiSelect</a> property is set to <code>true</code>, this property returns a collection containing the items that are selected in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>. For a single-selection <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>, this property returns a collection containing the only selected item in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>. For more information on the tasks that can be performed with the items in the collection, see <a class=\"xref\" href=\"system.windows.forms.listview.selectedlistviewitemcollection\" data-linktype=\"relative-path\">ListView+SelectedListViewItemCollection</a>.  </p>\n<p> If you want to obtain a collection of the index positions within the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection\" data-linktype=\"relative-path\">ListView+ListViewItemCollection</a> of the items that are selected in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control, instead of the items that are selected, use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedIndices_\" data-linktype=\"relative-path\">SelectedIndices</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the SelectedItems, <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedIndexChanged\" data-linktype=\"relative-path\">SelectedIndexChanged</a> event, and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_HeaderStyle_\" data-linktype=\"relative-path\">HeaderStyle</a> members and the <a class=\"xref\" href=\"system.windows.forms.listview.selectedlistviewitemcollection\" data-linktype=\"relative-path\">ListView+SelectedListViewItemCollection</a> class. To run this example, paste the following code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> object named <code>ListView1</code> and a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> named <code>TextBox1</code>. Call the <code>InitializeListView</code> method from the form&#39;s constructor or <code>Load</code> method. This example requires the event handler is correctly associated with the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedIndexChanged\" data-linktype=\"relative-path\">SelectedIndexChanged</a> event  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView1#1\">\t// This method adds two columns to the ListView, setting the Text \n\t// and TextAlign, and Width properties of each ColumnHeader.  The \n\t// HeaderStyle property is set to NonClickable since the ColumnClick \n\t// event is not handled.  Finally the method adds ListViewItems and \n\t// SubItems to each column.\n\tprivate void InitializeListView()\n\t{\n\t\tthis.ListView1 = new System.Windows.Forms.ListView();\n\t\tthis.ListView1.BackColor = System.Drawing.SystemColors.Control;\n\t\tthis.ListView1.Dock = System.Windows.Forms.DockStyle.Top;\n\t\tthis.ListView1.Location = new System.Drawing.Point(0, 0);\n\t\tthis.ListView1.Name = &quot;ListView1&quot;;\n\t\tthis.ListView1.Size = new System.Drawing.Size(292, 130);\n\t\tthis.ListView1.TabIndex = 0;\n\t\tthis.ListView1.View = System.Windows.Forms.View.Details;\n\t\tthis.ListView1.MultiSelect = true;\n\t\tthis.ListView1.HideSelection = false;\n\t\tthis.ListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable;\n\t\t\n\t\tColumnHeader columnHeader1 = new ColumnHeader();\n\t\tcolumnHeader1.Text = &quot;Breakfast Item&quot;;\n\t\tcolumnHeader1.TextAlign = HorizontalAlignment.Left;\n\t\tcolumnHeader1.Width = 146;\n\n\t \tColumnHeader columnHeader2 = new ColumnHeader();\n\t\tcolumnHeader2.Text = &quot;Price Each&quot;;\n\t\tcolumnHeader2.TextAlign = HorizontalAlignment.Center;\n\t\tcolumnHeader2.Width = 142;\n  \n\t\tthis.ListView1.Columns.Add(columnHeader1);\n\t\tthis.ListView1.Columns.Add(columnHeader2);\n\n\t\tstring[] foodList = new string[]{&quot;Juice&quot;, &quot;Coffee&quot;, \n\t\t\t&quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, \n\t\t\t&quot;Bagel &amp; Cream Cheese&quot;};\n\t\tstring[] foodPrice = new string[]{&quot;1.09&quot;, &quot;1.09&quot;, &quot;2.19&quot;, \n\t\t\t&quot;2.49&quot;, &quot;1.49&quot;, &quot;1.49&quot;};\n\t\t\n\t\tfor(int count=0; count &lt; foodList.Length; count++)\n\t\t{\n\t\t\tListViewItem listItem = new ListViewItem(foodList[count]);\n\t\t\tlistItem.SubItems.Add(foodPrice[count]);\n\t\t\tListView1.Items.Add(listItem);\n\t\t}\n\t\tthis.Controls.Add(ListView1);\n\t}\n\t\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView1#1\">    &#39; This method adds two columns to the ListView, setting the Text \n    &#39; and TextAlign, and Width properties of each ColumnHeader.  The \n    &#39; HeaderStyle property is set to NonClickable since the ColumnClick \n    &#39; event is not handled.  Finally the method adds ListViewItems and \n    &#39; SubItems to each column.\n    Private Sub InitializeListView()\n        Me.ListView1 = New System.Windows.Forms.ListView\n        Me.ListView1.BackColor = System.Drawing.SystemColors.Control\n        Me.ListView1.Dock = System.Windows.Forms.DockStyle.Top\n        Me.ListView1.Location = New System.Drawing.Point(0, 0)\n        Me.ListView1.Name = &quot;ListView1&quot;\n        Me.ListView1.Size = New System.Drawing.Size(292, 130)\n        Me.ListView1.TabIndex = 0\n        Me.ListView1.View = System.Windows.Forms.View.Details\n        Me.ListView1.MultiSelect = True\n        Me.ListView1.HideSelection = False\n        ListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable\n        Dim columnHeader1 As New ColumnHeader\n        With columnHeader1\n            .Text = &quot;Breakfast Item&quot;\n            .TextAlign = HorizontalAlignment.Left\n            .Width = 146\n        End With\n        Dim columnHeader2 As New ColumnHeader\n        With columnHeader2\n            .Text = &quot;Price Each&quot;\n            .TextAlign = HorizontalAlignment.Center\n            .Width = 142\n        End With\n\n        Me.ListView1.Columns.Add(columnHeader1)\n        Me.ListView1.Columns.Add(columnHeader2)\n        Dim foodList() As String = New String() {&quot;Juice&quot;, &quot;Coffee&quot;, _\n            &quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, _\n            &quot;Bagel &amp; Cream Cheese&quot;}\n        Dim foodPrice() As String = New String() {&quot;1.09&quot;, &quot;1.09&quot;, _\n            &quot;2.19&quot;, &quot;2.49&quot;, &quot;1.49&quot;, &quot;1.49&quot;}\n        Dim count As Integer\n        For count = 0 To foodList.Length - 1\n            Dim listItem As New ListViewItem(foodList(count))\n            listItem.SubItems.Add(foodPrice(count))\n            ListView1.Items.Add(listItem)\n        Next\n        Me.Controls.Add(Me.ListView1)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView1#1\">   // This method adds two columns to the ListView, setting the Text \n   // and TextAlign, and Width properties of each ColumnHeader.  The \n   // HeaderStyle property is set to NonClickable since the ColumnClick \n   // event is not handled.  Finally the method adds ListViewItems and \n   // SubItems to each column.\n   void InitializeListView()\n   {\n      this-&gt;ListView1 = gcnew System::Windows::Forms::ListView;\n      this-&gt;ListView1-&gt;BackColor = System::Drawing::SystemColors::Control;\n      this-&gt;ListView1-&gt;Dock = System::Windows::Forms::DockStyle::Top;\n      this-&gt;ListView1-&gt;Location = System::Drawing::Point( 0, 0 );\n      this-&gt;ListView1-&gt;Name = &quot;ListView1&quot;;\n      this-&gt;ListView1-&gt;Size = System::Drawing::Size( 292, 130 );\n      this-&gt;ListView1-&gt;TabIndex = 0;\n      this-&gt;ListView1-&gt;View = System::Windows::Forms::View::Details;\n      this-&gt;ListView1-&gt;MultiSelect = true;\n      this-&gt;ListView1-&gt;HideSelection = false;\n      this-&gt;ListView1-&gt;HeaderStyle = ColumnHeaderStyle::Nonclickable;\n      ColumnHeader^ columnHeader1 = gcnew ColumnHeader;\n      columnHeader1-&gt;Text = &quot;Breakfast Item&quot;;\n      columnHeader1-&gt;TextAlign = HorizontalAlignment::Left;\n      columnHeader1-&gt;Width = 146;\n      ColumnHeader^ columnHeader2 = gcnew ColumnHeader;\n      columnHeader2-&gt;Text = &quot;Price Each&quot;;\n      columnHeader2-&gt;TextAlign = HorizontalAlignment::Center;\n      columnHeader2-&gt;Width = 142;\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader1 );\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader2 );\n      array&lt;String^&gt;^foodList = {&quot;Juice&quot;,&quot;Coffee&quot;,&quot;Cereal &amp; Milk&quot;,&quot;Fruit Plate&quot;,&quot;Toast &amp; Jelly&quot;,&quot;Bagel &amp; Cream Cheese&quot;};\n      array&lt;String^&gt;^foodPrice = {&quot;1.09&quot;,&quot;1.09&quot;,&quot;2.19&quot;,&quot;2.49&quot;,&quot;1.49&quot;,&quot;1.49&quot;};\n      for ( int count = 0; count &lt; foodList-&gt;Length; count++ )\n      {\n         ListViewItem^ listItem = gcnew ListViewItem( foodList[ count ] );\n         listItem-&gt;SubItems-&gt;Add( foodPrice[ count ] );\n         ListView1-&gt;Items-&gt;Add( listItem );\n\n      }\n      this-&gt;Controls-&gt;Add( ListView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView1#2\">\t// Uses the SelectedItems property to retrieve and tally the price \n\t// of the selected menu items.\n\tprivate void ListView1_SelectedIndexChanged_UsingItems(\n\t\tobject sender, System.EventArgs e)\n\t{\n\n\t\tListView.SelectedListViewItemCollection breakfast = \n\t\t\tthis.ListView1.SelectedItems;\n\t\t\n\t\tdouble price = 0.0;\n\t\tforeach ( ListViewItem item in breakfast )\n\t\t{\n\t\t\tprice += Double.Parse(item.SubItems[1].Text);\n\t\t}\n\n\t\t// Output the price to TextBox1.\n\t\tTextBox1.Text = price.ToString();\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView1#2\">    &#39; Uses the SelectedItems property to retrieve and tally the price \n    &#39; of the selected menu items.\n    Private Sub ListView1_SelectedIndexChanged_UsingItems _\n        (ByVal sender As Object, ByVal e As System.EventArgs) _\n        Handles ListView1.SelectedIndexChanged\n\n        Dim breakfast As ListView.SelectedListViewItemCollection = _\n            Me.ListView1.SelectedItems\n        Dim item As ListViewItem\n        Dim price As Double = 0.0\n        For Each item In breakfast\n            price += Double.Parse(item.SubItems(1).Text)\n        Next\n\n        &#39; Output the price to TextBox1.\n        TextBox1.Text = CType(price, String)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView1#2\">   // Uses the SelectedItems property to retrieve and tally the price \n   // of the selected menu items.\n   void ListView1_SelectedIndexChanged_UsingItems( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      ListView::SelectedListViewItemCollection^ breakfast = this-&gt;ListView1-&gt;SelectedItems;\n      double price = 0.0;\n      System::Collections::IEnumerator^ myEnum = breakfast-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         ListViewItem^ item = safe_cast&lt;ListViewItem^&gt;(myEnum-&gt;Current);\n         price += Double::Parse( item-&gt;SubItems[ 1 ]-&gt;Text );\n      }\n\n      // Output the price to TextBox1.\n      TextBox1-&gt;Text = price.ToString();\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ShowGroups\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_ShowGroups_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowGroups</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether items are displayed in groups.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShowGroups { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> to display items in groups; otherwise, <code>false</code>. The default value is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any groups assigned to a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control appear whenever the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to a value other than <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>. The <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> grouping feature lets you create visual groups of logically related <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> items on Windows XP and Windows Server 2003. To enable this feature, your application must call the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_EnableVisualStyles_\" data-linktype=\"relative-path\">EnableVisualStyles</a> method. For more information, see the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Groups_\" data-linktype=\"relative-path\">Groups</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ShowItemToolTips\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_ShowItemToolTips_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowItemToolTips</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether ToolTips are shown for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects contained in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShowItemToolTips { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> ToolTips should be shown; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the ShowItemToolTips property is set to <code>true</code>, any <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> that has a ToolTip will display it; otherwise, nothing is displayed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the ShowItemToolTips and <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_ToolTipText_\" data-linktype=\"relative-path\">ToolTipText</a> properties. To run this example, paste the code into a Windows Form and call <code>InitializeItemsWithToolTips</code> from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListViewItemWhidbeyMembers#4\">    &#39; Declare the ListView.\n    Private ListViewWithToolTips As ListView\n    \n    Private Sub InitializeItemsWithToolTips() \n        \n        &#39; Construct and set the View property of the ListView.\n        ListViewWithToolTips = New ListView()\n        ListViewWithToolTips.Width = 200\n        ListViewWithToolTips.View = View.List\n        \n        &#39; Show item tooltips.\n        ListViewWithToolTips.ShowItemToolTips = True\n        \n        &#39; Create items with a tooltip.\n        Dim item1WithToolTip As New ListViewItem(&quot;Item with a tooltip&quot;)\n        item1WithToolTip.ToolTipText = &quot;This is the item tooltip.&quot;\n        Dim item2WithToolTip As New ListViewItem(&quot;Second item with a tooltip&quot;)\n        item2WithToolTip.ToolTipText = &quot;A different tooltip for this item.&quot;\n        \n        &#39; Create an item without a tooltip.\n        Dim itemWithoutToolTip As New ListViewItem(&quot;Item without tooltip.&quot;)\n        \n        &#39; Add the items to the ListView.\n        ListViewWithToolTips.Items.AddRange(New ListViewItem() _\n            {item1WithToolTip, item2WithToolTip, itemWithoutToolTip})\n        \n        &#39; Add the ListView to the form.\n        Me.Controls.Add(ListViewWithToolTips)\n        Me.Controls.Add(button1)\n    \n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListViewItemWhidbeyMembers#4\">\n        // Declare the ListView.\n        private ListView ListViewWithToolTips;\n        private void InitializeItemsWithToolTips()\n        {\n\n            // Construct and set the View property of the ListView.\n            ListViewWithToolTips = new ListView();\n            ListViewWithToolTips.Width = 200;\n            ListViewWithToolTips.View = View.List;\n\n            // Show item tooltips.\n            ListViewWithToolTips.ShowItemToolTips = true;\n            \n            // Create items with a tooltip.\n            ListViewItem item1WithToolTip = new ListViewItem(&quot;Item with a tooltip&quot;);\n            item1WithToolTip.ToolTipText = &quot;This is the item tooltip.&quot;;\n            ListViewItem item2WithToolTip = new ListViewItem(&quot;Second item with a tooltip&quot;);\n            item2WithToolTip.ToolTipText = &quot;A different tooltip for this item.&quot;;\n\n            // Create an item without a tooltip.\n            ListViewItem itemWithoutToolTip = new ListViewItem(&quot;Item without tooltip.&quot;);\n\n            // Add the items to the ListView.\n            ListViewWithToolTips.Items.AddRange(new ListViewItem[]{item1WithToolTip, \n                item2WithToolTip, itemWithoutToolTip} );\n\n            // Add the ListView to the form.\n            this.Controls.Add(ListViewWithToolTips);\n            this.Controls.Add(button1);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_SmallImageList\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_SmallImageList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SmallImageList</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> to use when displaying items as small icons in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ImageList SmallImageList { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> that contains the icons to use when the <span class=\"xref\">stem.Windows.Forms.ListView.View*</span> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SmallImageList property allows you to specify an <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> object that contains icons to use when displaying items with small icons (when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to any value other than <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>). The <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control can accept any graphics format that the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> control supports when displaying icons. The <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is not limited to .ico files. Once an <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> is assigned to the SmallImageList property, you can set the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_ImageIndex_\" data-linktype=\"relative-path\">ImageIndex</a> property of each <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control to the index position of the appropriate image in the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a>. The size of the icons for the SmallImageList is specified by the <a class=\"xref\" href=\"system.windows.forms.imagelist#System_Windows_Forms_ImageList_ImageSize_\" data-linktype=\"relative-path\">ImageSize</a> property.  </p>\n<p> Because only one index can be specified for the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_ImageIndex_\" data-linktype=\"relative-path\">ImageIndex</a> property, the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects specified in the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LargeImageList_\" data-linktype=\"relative-path\">LargeImageList</a> and SmallImageList properties should have the same index positions for the images to display. For example, if the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_ImageIndex_\" data-linktype=\"relative-path\">ImageIndex</a> property of a <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> is set to 0, the images to use for both small and large icons should be at the same index position in the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects specified in the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LargeImageList_\" data-linktype=\"relative-path\">LargeImageList</a> and SmallImageList properties.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When the images are specified with keys, you still need to place small and large versions of the image at the same index location in their respective image lists. When switching between views, the index location of the image in one list is used to locate the image in the other list, regardless of the key value specified.  </p>\n</div>\n<p> To set the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> to use when displaying items with large icons (when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>), use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LargeImageList_\" data-linktype=\"relative-path\">LargeImageList</a> property. If you want to use images to display item state, use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_StateImageList_\" data-linktype=\"relative-path\">StateImageList</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control with three <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects specified and three <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> objects specified for each item. The example also creates <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects to display the subitems in details view. Two <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are also created in the code example to provide images for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects. These <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are added to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LargeImageList_\" data-linktype=\"relative-path\">LargeImageList</a> and SmallImageList properties. The example uses the following properties in creating the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LabelEdit_\" data-linktype=\"relative-path\">LabelEdit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AllowColumnReorder_\" data-linktype=\"relative-path\">AllowColumnReorder</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GridLines_\" data-linktype=\"relative-path\">GridLines</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sorting_\" data-linktype=\"relative-path\">Sorting</a>  \n\n<p>This example requires that you have added the code to a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and call the method created in the example from the constructor or another method on the form. The example also requires that images named <code>MySmallImage1</code>, <code>MySmallImage2</code>, <code>MyLargeImage1</code>, and <code>MyLargeImage2</code> are located in the root directory of drive C.  </p>\n<pre><code class=\"lang-cpp\" name=\"ListViewExample#1\">private:\n   void CreateMyListView()\n   {\n      // Create a new ListView control.\n      ListView^ listView1 = gcnew ListView;\n      listView1-&gt;Bounds = Rectangle(Point(10,10),System::Drawing::Size( 300, 200 ));\n\n      // Set the view to show details.\n      listView1-&gt;View = View::Details;\n\n      // Allow the user to edit item text.\n      listView1-&gt;LabelEdit = true;\n\n      // Allow the user to rearrange columns.\n      listView1-&gt;AllowColumnReorder = true;\n\n      // Display check boxes.\n      listView1-&gt;CheckBoxes = true;\n\n      // Select the item and subitems when selection is made.\n      listView1-&gt;FullRowSelect = true;\n\n      // Display grid lines.\n      listView1-&gt;GridLines = true;\n\n      // Sort the items in the list in ascending order.\n      listView1-&gt;Sorting = SortOrder::Ascending;\n\n      // Create three items and three sets of subitems for each item.\n      ListViewItem^ item1 = gcnew ListViewItem( &quot;item1&quot;,0 );\n\n      // Place a check mark next to the item.\n      item1-&gt;Checked = true;\n      item1-&gt;SubItems-&gt;Add( &quot;1&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;2&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;3&quot; );\n      ListViewItem^ item2 = gcnew ListViewItem( &quot;item2&quot;,1 );\n      item2-&gt;SubItems-&gt;Add( &quot;4&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;5&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;6&quot; );\n      ListViewItem^ item3 = gcnew ListViewItem( &quot;item3&quot;,0 );\n\n      // Place a check mark next to the item.\n      item3-&gt;Checked = true;\n      item3-&gt;SubItems-&gt;Add( &quot;7&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;8&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;9&quot; );\n\n      // Create columns for the items and subitems.\n      // Width of -2 indicates auto-size.\n      listView1-&gt;Columns-&gt;Add( &quot;Item Column&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 2&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 3&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 4&quot;, -2, HorizontalAlignment::Center );\n\n      //Add the items to the ListView.\n      array&lt;ListViewItem^&gt;^temp1 = {item1,item2,item3};\n      listView1-&gt;Items-&gt;AddRange( temp1 );\n\n      // Create two ImageList objects.\n      ImageList^ imageListSmall = gcnew ImageList;\n      ImageList^ imageListLarge = gcnew ImageList;\n\n      // Initialize the ImageList objects with bitmaps.\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage1.bmp&quot; ) );\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage2.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage1.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage2.bmp&quot; ) );\n\n      //Assign the ImageList objects to the ListView.\n      listView1-&gt;LargeImageList = imageListLarge;\n      listView1-&gt;SmallImageList = imageListSmall;\n      \n      // Add the ListView to the control collection.\n      this-&gt;Controls-&gt;Add( listView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"ListViewExample#1\">\t\tprivate void CreateMyListView()\n\t\t{\n\t\t\t// Create a new ListView control.\n\t\t\tListView listView1 = new ListView();\n\t\t\tlistView1.Bounds = new Rectangle(new Point(10,10), new Size(300,200));\n\n\t\t\t// Set the view to show details.\n\t\t\tlistView1.View = View.Details;\n\t\t\t// Allow the user to edit item text.\n\t\t\tlistView1.LabelEdit = true;\n\t\t\t// Allow the user to rearrange columns.\n\t\t\tlistView1.AllowColumnReorder = true;\n\t\t\t// Display check boxes.\n\t\t\tlistView1.CheckBoxes = true;\n\t\t\t// Select the item and subitems when selection is made.\n\t\t\tlistView1.FullRowSelect = true;\n\t\t\t// Display grid lines.\n\t\t\tlistView1.GridLines = true;\n\t\t\t// Sort the items in the list in ascending order.\n\t\t\tlistView1.Sorting = SortOrder.Ascending;\n            \t\t\t\n\t\t\t// Create three items and three sets of subitems for each item.\n\t\t\tListViewItem item1 = new ListViewItem(&quot;item1&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem1.Checked = true;\n\t\t\titem1.SubItems.Add(&quot;1&quot;);\n\t\t\titem1.SubItems.Add(&quot;2&quot;);\n\t\t\titem1.SubItems.Add(&quot;3&quot;);\n\t\t\tListViewItem item2 = new ListViewItem(&quot;item2&quot;,1);\n\t\t\titem2.SubItems.Add(&quot;4&quot;);\n\t\t\titem2.SubItems.Add(&quot;5&quot;);\n\t\t\titem2.SubItems.Add(&quot;6&quot;);\n\t\t\tListViewItem item3 = new ListViewItem(&quot;item3&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem3.Checked = true;\n\t\t\titem3.SubItems.Add(&quot;7&quot;);\n\t\t\titem3.SubItems.Add(&quot;8&quot;);\n\t\t\titem3.SubItems.Add(&quot;9&quot;);\n\n\t\t\t// Create columns for the items and subitems.\n\t\t\t// Width of -2 indicates auto-size.\n\t\t\tlistView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center);\n\n\t\t\t//Add the items to the ListView.\n            \t\tlistView1.Items.AddRange(new ListViewItem[]{item1,item2,item3});\n\n\t\t\t// Create two ImageList objects.\n\t\t\tImageList imageListSmall = new ImageList();\n\t\t\tImageList imageListLarge = new ImageList();\n\n\t\t\t// Initialize the ImageList objects with bitmaps.\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage1.bmp&quot;));\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage2.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage1.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage2.bmp&quot;));\n\n\t\t\t//Assign the ImageList objects to the ListView.\n\t\t\tlistView1.LargeImageList = imageListLarge;\n\t\t\tlistView1.SmallImageList = imageListSmall;\n\n\t\t\t// Add the ListView to the control collection.\n\t\t\tthis.Controls.Add(listView1);\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewExample#1\">        Private Sub CreateMyListView()\n            &#39; Create a new ListView control.\n            Dim listView1 As New ListView()\n            listView1.Bounds = New Rectangle(New Point(10, 10), New Size(300, 200))\n\n            &#39; Set the view to show details.\n            listView1.View = View.Details\n            &#39; Allow the user to edit item text.\n            listView1.LabelEdit = True\n            &#39; Allow the user to rearrange columns.\n            listView1.AllowColumnReorder = True\n            &#39; Display check boxes.\n            listView1.CheckBoxes = True\n            &#39; Select the item and subitems when selection is made.\n            listView1.FullRowSelect = True\n            &#39; Display grid lines.\n            listView1.GridLines = True\n            &#39; Sort the items in the list in ascending order.\n            listView1.Sorting = SortOrder.Ascending\n\n            &#39; Create three items and three sets of subitems for each item.\n            Dim item1 As New ListViewItem(&quot;item1&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item1.Checked = True\n            item1.SubItems.Add(&quot;1&quot;)\n            item1.SubItems.Add(&quot;2&quot;)\n            item1.SubItems.Add(&quot;3&quot;)\n            Dim item2 As New ListViewItem(&quot;item2&quot;, 1)\n            item2.SubItems.Add(&quot;4&quot;)\n            item2.SubItems.Add(&quot;5&quot;)\n            item2.SubItems.Add(&quot;6&quot;)\n            Dim item3 As New ListViewItem(&quot;item3&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item3.Checked = True\n            item3.SubItems.Add(&quot;7&quot;)\n            item3.SubItems.Add(&quot;8&quot;)\n            item3.SubItems.Add(&quot;9&quot;)\n\n            &#39; Create columns for the items and subitems.\n            &#39; Width of -2 indicates auto-size.\n            listView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center)\n\n            &#39;Add the items to the ListView.\n            listView1.Items.AddRange(New ListViewItem() {item1, item2, item3})\n\n            &#39; Create two ImageList objects.\n            Dim imageListSmall As New ImageList()\n            Dim imageListLarge As New ImageList()\n\n            &#39; Initialize the ImageList objects with bitmaps.\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage1.bmp&quot;))\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage2.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage1.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage2.bmp&quot;))\n\n            &#39;Assign the ImageList objects to the ListView.\n            listView1.LargeImageList = imageListLarge\n            listView1.SmallImageList = imageListSmall\n\n            &#39; Add the ListView to the control collection.\n            Me.Controls.Add(listView1)\n        End Sub &#39;CreateMyListView\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_Sorting\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_Sorting_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Sorting</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the sort order for items in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.SortOrder Sorting { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.sortorder\" data-linktype=\"relative-path\">SortOrder</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.sortorder\" data-linktype=\"relative-path\">SortOrder</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.sortorder\" data-linktype=\"relative-path\">SortOrder</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value specified is not one of the <a class=\"xref\" href=\"system.windows.forms.sortorder\" data-linktype=\"relative-path\">SortOrder</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Sorting property allows you to specify whether or not items are sorted in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. By default, no sorting is performed. When the Sorting property is set to <a class=\"xref\" href=\"system.windows.forms.sortorder\" data-linktype=\"relative-path\">SortOrder</a> or <a class=\"xref\" href=\"system.windows.forms.sortorder\" data-linktype=\"relative-path\">SortOrder</a>, the items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> are sorted automatically in ascending alphabetical order (when the property is set to <a class=\"xref\" href=\"system.windows.forms.sortorder\" data-linktype=\"relative-path\">SortOrder</a>) or descending alphabetical order (when the property is set to <a class=\"xref\" href=\"system.windows.forms.sortorder\" data-linktype=\"relative-path\">SortOrder</a>). You can use this property to automatically sort items that are displayed in your <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control to make it easier for users to find items when a large number of items are available.  </p>\n<p> If you want to perform your own item sorting instead of using the Sorting property, use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ListViewItemSorter_\" data-linktype=\"relative-path\">ListViewItemSorter</a> property in combination with the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sort_\" data-linktype=\"relative-path\">Sort</a> method.  </p>\n<p> If the Sorting property is set to a value other than <a class=\"xref\" href=\"system.windows.forms.sortorder\" data-linktype=\"relative-path\">System.Windows.Forms.SortOrder</a> or if the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ListViewItemSorter_\" data-linktype=\"relative-path\">ListViewItemSorter</a> property is set, the list is sorted automatically when items is added. Items are not sorted automatically when the label text changes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control with three <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects specified and three <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> objects specified for each item. The example also creates <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects to display the subitems in details view. Two <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are also created in the code example to provide images for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects. These <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are added to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LargeImageList_\" data-linktype=\"relative-path\">LargeImageList</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SmallImageList_\" data-linktype=\"relative-path\">SmallImageList</a> properties. The example uses the following properties in creating the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LabelEdit_\" data-linktype=\"relative-path\">LabelEdit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AllowColumnReorder_\" data-linktype=\"relative-path\">AllowColumnReorder</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GridLines_\" data-linktype=\"relative-path\">GridLines</a>  \n</li>\n<li><p>Sorting  </p>\n<p>This example requires that you have added the code to a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and call the method created in the example from the constructor or another method on the form. The example also requires that images named <code>MySmallImage1</code>, <code>MySmallImage2</code>, <code>MyLargeImage1</code>, and <code>MyLargeImage2</code> are located in the root directory of drive C.  </p>\n<pre><code class=\"lang-cpp\" name=\"ListViewExample#1\">private:\n   void CreateMyListView()\n   {\n      // Create a new ListView control.\n      ListView^ listView1 = gcnew ListView;\n      listView1-&gt;Bounds = Rectangle(Point(10,10),System::Drawing::Size( 300, 200 ));\n\n      // Set the view to show details.\n      listView1-&gt;View = View::Details;\n\n      // Allow the user to edit item text.\n      listView1-&gt;LabelEdit = true;\n\n      // Allow the user to rearrange columns.\n      listView1-&gt;AllowColumnReorder = true;\n\n      // Display check boxes.\n      listView1-&gt;CheckBoxes = true;\n\n      // Select the item and subitems when selection is made.\n      listView1-&gt;FullRowSelect = true;\n\n      // Display grid lines.\n      listView1-&gt;GridLines = true;\n\n      // Sort the items in the list in ascending order.\n      listView1-&gt;Sorting = SortOrder::Ascending;\n\n      // Create three items and three sets of subitems for each item.\n      ListViewItem^ item1 = gcnew ListViewItem( &quot;item1&quot;,0 );\n\n      // Place a check mark next to the item.\n      item1-&gt;Checked = true;\n      item1-&gt;SubItems-&gt;Add( &quot;1&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;2&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;3&quot; );\n      ListViewItem^ item2 = gcnew ListViewItem( &quot;item2&quot;,1 );\n      item2-&gt;SubItems-&gt;Add( &quot;4&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;5&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;6&quot; );\n      ListViewItem^ item3 = gcnew ListViewItem( &quot;item3&quot;,0 );\n\n      // Place a check mark next to the item.\n      item3-&gt;Checked = true;\n      item3-&gt;SubItems-&gt;Add( &quot;7&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;8&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;9&quot; );\n\n      // Create columns for the items and subitems.\n      // Width of -2 indicates auto-size.\n      listView1-&gt;Columns-&gt;Add( &quot;Item Column&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 2&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 3&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 4&quot;, -2, HorizontalAlignment::Center );\n\n      //Add the items to the ListView.\n      array&lt;ListViewItem^&gt;^temp1 = {item1,item2,item3};\n      listView1-&gt;Items-&gt;AddRange( temp1 );\n\n      // Create two ImageList objects.\n      ImageList^ imageListSmall = gcnew ImageList;\n      ImageList^ imageListLarge = gcnew ImageList;\n\n      // Initialize the ImageList objects with bitmaps.\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage1.bmp&quot; ) );\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage2.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage1.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage2.bmp&quot; ) );\n\n      //Assign the ImageList objects to the ListView.\n      listView1-&gt;LargeImageList = imageListLarge;\n      listView1-&gt;SmallImageList = imageListSmall;\n      \n      // Add the ListView to the control collection.\n      this-&gt;Controls-&gt;Add( listView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"ListViewExample#1\">\t\tprivate void CreateMyListView()\n\t\t{\n\t\t\t// Create a new ListView control.\n\t\t\tListView listView1 = new ListView();\n\t\t\tlistView1.Bounds = new Rectangle(new Point(10,10), new Size(300,200));\n\n\t\t\t// Set the view to show details.\n\t\t\tlistView1.View = View.Details;\n\t\t\t// Allow the user to edit item text.\n\t\t\tlistView1.LabelEdit = true;\n\t\t\t// Allow the user to rearrange columns.\n\t\t\tlistView1.AllowColumnReorder = true;\n\t\t\t// Display check boxes.\n\t\t\tlistView1.CheckBoxes = true;\n\t\t\t// Select the item and subitems when selection is made.\n\t\t\tlistView1.FullRowSelect = true;\n\t\t\t// Display grid lines.\n\t\t\tlistView1.GridLines = true;\n\t\t\t// Sort the items in the list in ascending order.\n\t\t\tlistView1.Sorting = SortOrder.Ascending;\n            \t\t\t\n\t\t\t// Create three items and three sets of subitems for each item.\n\t\t\tListViewItem item1 = new ListViewItem(&quot;item1&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem1.Checked = true;\n\t\t\titem1.SubItems.Add(&quot;1&quot;);\n\t\t\titem1.SubItems.Add(&quot;2&quot;);\n\t\t\titem1.SubItems.Add(&quot;3&quot;);\n\t\t\tListViewItem item2 = new ListViewItem(&quot;item2&quot;,1);\n\t\t\titem2.SubItems.Add(&quot;4&quot;);\n\t\t\titem2.SubItems.Add(&quot;5&quot;);\n\t\t\titem2.SubItems.Add(&quot;6&quot;);\n\t\t\tListViewItem item3 = new ListViewItem(&quot;item3&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem3.Checked = true;\n\t\t\titem3.SubItems.Add(&quot;7&quot;);\n\t\t\titem3.SubItems.Add(&quot;8&quot;);\n\t\t\titem3.SubItems.Add(&quot;9&quot;);\n\n\t\t\t// Create columns for the items and subitems.\n\t\t\t// Width of -2 indicates auto-size.\n\t\t\tlistView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center);\n\n\t\t\t//Add the items to the ListView.\n            \t\tlistView1.Items.AddRange(new ListViewItem[]{item1,item2,item3});\n\n\t\t\t// Create two ImageList objects.\n\t\t\tImageList imageListSmall = new ImageList();\n\t\t\tImageList imageListLarge = new ImageList();\n\n\t\t\t// Initialize the ImageList objects with bitmaps.\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage1.bmp&quot;));\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage2.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage1.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage2.bmp&quot;));\n\n\t\t\t//Assign the ImageList objects to the ListView.\n\t\t\tlistView1.LargeImageList = imageListLarge;\n\t\t\tlistView1.SmallImageList = imageListSmall;\n\n\t\t\t// Add the ListView to the control collection.\n\t\t\tthis.Controls.Add(listView1);\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewExample#1\">        Private Sub CreateMyListView()\n            &#39; Create a new ListView control.\n            Dim listView1 As New ListView()\n            listView1.Bounds = New Rectangle(New Point(10, 10), New Size(300, 200))\n\n            &#39; Set the view to show details.\n            listView1.View = View.Details\n            &#39; Allow the user to edit item text.\n            listView1.LabelEdit = True\n            &#39; Allow the user to rearrange columns.\n            listView1.AllowColumnReorder = True\n            &#39; Display check boxes.\n            listView1.CheckBoxes = True\n            &#39; Select the item and subitems when selection is made.\n            listView1.FullRowSelect = True\n            &#39; Display grid lines.\n            listView1.GridLines = True\n            &#39; Sort the items in the list in ascending order.\n            listView1.Sorting = SortOrder.Ascending\n\n            &#39; Create three items and three sets of subitems for each item.\n            Dim item1 As New ListViewItem(&quot;item1&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item1.Checked = True\n            item1.SubItems.Add(&quot;1&quot;)\n            item1.SubItems.Add(&quot;2&quot;)\n            item1.SubItems.Add(&quot;3&quot;)\n            Dim item2 As New ListViewItem(&quot;item2&quot;, 1)\n            item2.SubItems.Add(&quot;4&quot;)\n            item2.SubItems.Add(&quot;5&quot;)\n            item2.SubItems.Add(&quot;6&quot;)\n            Dim item3 As New ListViewItem(&quot;item3&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item3.Checked = True\n            item3.SubItems.Add(&quot;7&quot;)\n            item3.SubItems.Add(&quot;8&quot;)\n            item3.SubItems.Add(&quot;9&quot;)\n\n            &#39; Create columns for the items and subitems.\n            &#39; Width of -2 indicates auto-size.\n            listView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center)\n\n            &#39;Add the items to the ListView.\n            listView1.Items.AddRange(New ListViewItem() {item1, item2, item3})\n\n            &#39; Create two ImageList objects.\n            Dim imageListSmall As New ImageList()\n            Dim imageListLarge As New ImageList()\n\n            &#39; Initialize the ImageList objects with bitmaps.\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage1.bmp&quot;))\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage2.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage1.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage2.bmp&quot;))\n\n            &#39;Assign the ImageList objects to the ListView.\n            listView1.LargeImageList = imageListLarge\n            listView1.SmallImageList = imageListSmall\n\n            &#39; Add the ListView to the control collection.\n            Me.Controls.Add(listView1)\n        End Sub &#39;CreateMyListView\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_StateImageList\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_StateImageList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StateImageList</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> associated with application-defined states in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ImageList StateImageList { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> that contains a set of state images that can be used to indicate an application-defined state of an item. The default is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The StateImageList property allows you to specify an <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> that contains images to use to represent an application-specific state of an item in a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. State images are displayed to the left of an icon for the item. You can use state images, such as checked and unchecked check boxes, to indicate application-defined item states. State images are visible in all views of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<p> If an <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> is specified in the StateImageList property and the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a> property is set to <code>true</code>, the images at index positions 0 and 1 in the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> are displayed instead of the check box. The image at index position 0 is displayed instead of the unchecked check box, and the image at index position 1 is displayed instead of the checked check box.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_Text\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_Text_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Text</div>        \r\n          </div>\r\n    \r\n            <p>This property is not relevant for this class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Text { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text to display in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is not relevant for this class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_TileSize\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_TileSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TileSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the size of the tiles shown in tile view.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Size TileSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> that contains the new tile size.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property controls the size of tiles when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>. Setting this property is useful to prevent line-wrapping when subitem text is too long to be displayed on a single line.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> tiling feature. In the example, the tile view displays items that represent books. Each item is shown as a tile containing an icon of a book, the title, the author, and the publication year. For the example code to work, you must include an icon file named Book.ico in the same directory as the example. To see the tile view without icons, comment out the lines relating to the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> object.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView.Tiling#1\">#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n\nusing namespace System;\nusing namespace System::Drawing;\nusing namespace System::Windows::Forms;\n\npublic ref class ListViewTilingExample: public Form\n{\nprivate:\n   ImageList^ myImageList;\n\npublic:\n   ListViewTilingExample()\n   {\n      // Initialize myListView.\n      ListView^ myListView = gcnew ListView;\n      myListView-&gt;Dock = DockStyle::Fill;\n      myListView-&gt;View = View::Tile;\n      \n      // Initialize the tile size.\n      myListView-&gt;TileSize = System::Drawing::Size( 400, 45 );\n      \n      // Initialize the item icons.\n      myImageList = gcnew ImageList;\n      System::Drawing::Icon^ myIcon = gcnew System::Drawing::Icon( &quot;book.ico&quot; );\n      try\n      {\n         myImageList-&gt;Images-&gt;Add( myIcon );\n      }\n      finally\n      {\n         if ( myIcon )\n                  delete safe_cast&lt;IDisposable^&gt;(myIcon);\n      }\n\n      myImageList-&gt;ImageSize = System::Drawing::Size( 32, 32 );\n      myListView-&gt;LargeImageList = myImageList;\n      \n      // Add column headers so the subitems will appear.\n      array&lt;ColumnHeader^&gt;^temp0 = {gcnew ColumnHeader,gcnew ColumnHeader,gcnew ColumnHeader};\n      myListView-&gt;Columns-&gt;AddRange( temp0 );\n      \n      // Create items and add them to myListView.\n      array&lt;String^&gt;^temp1 = {&quot;Programming Windows&quot;,&quot;Petzold, Charles&quot;,&quot;1998&quot;};\n      ListViewItem^ item0 = gcnew ListViewItem( temp1,0 );\n      array&lt;String^&gt;^temp2 = {&quot;Code: The Hidden Language of Computer Hardware and Software&quot;,&quot;Petzold, Charles&quot;,&quot;2000&quot;};\n      ListViewItem^ item1 = gcnew ListViewItem( temp2,0 );\n      array&lt;String^&gt;^temp3 = {&quot;Programming Windows with C#&quot;,&quot;Petzold, Charles&quot;,&quot;2001&quot;};\n      ListViewItem^ item2 = gcnew ListViewItem( temp3,0 );\n      array&lt;String^&gt;^temp4 = {&quot;Coding Techniques for Microsoft Visual Basic .NET&quot;,&quot;Connell, John&quot;,&quot;2001&quot;};\n      ListViewItem^ item3 = gcnew ListViewItem( temp4,0 );\n      array&lt;String^&gt;^temp5 = {&quot;C# for Java Developers&quot;,&quot;Jones, Allen &amp; Freeman, Adam&quot;,&quot;2002&quot;};\n      ListViewItem^ item4 = gcnew ListViewItem( temp5,0 );\n      array&lt;String^&gt;^temp6 = {&quot;Microsoft .NET XML Web Services Step by Step&quot;,&quot;Jones, Allen &amp; Freeman, Adam&quot;,&quot;2002&quot;};\n      ListViewItem^ item5 = gcnew ListViewItem( temp6,0 );\n      array&lt;ListViewItem^&gt;^temp7 = {item0,item1,item2,item3,item4,item5};\n      myListView-&gt;Items-&gt;AddRange( temp7 );\n      \n      // Initialize the form.\n      this-&gt;Controls-&gt;Add( myListView );\n      this-&gt;Size = System::Drawing::Size( 430, 330 );\n      this-&gt;Text = &quot;ListView Tiling Example&quot;;\n   }\n\nprotected:\n\n   // Clean up any resources being used.\n   ~ListViewTilingExample()\n   {\n      if ( myImageList != nullptr )\n      {\n         delete myImageList;\n      }\n   }\n};\n\n[STAThread]\nint main()\n{\n   Application::EnableVisualStyles();\n   Application::Run( gcnew ListViewTilingExample );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView.Tiling#1\">using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\npublic class ListViewTilingExample : Form\n{\n    private ImageList myImageList;\n\n    public ListViewTilingExample()\n    {\n        // Initialize myListView.\n        ListView myListView = new ListView();\n        myListView.Dock = DockStyle.Fill;\n        myListView.View = View.Tile;\n\n        // Initialize the tile size.\n        myListView.TileSize = new Size(400, 45);\n        \n        // Initialize the item icons.\n        myImageList = new ImageList();\n        using (Icon myIcon = new Icon(&quot;book.ico&quot;))\n        {\n            myImageList.Images.Add(myIcon);\n        }\n        myImageList.ImageSize = new Size(32, 32);\n        myListView.LargeImageList = myImageList;\n        \n        // Add column headers so the subitems will appear.\n        myListView.Columns.AddRange(new ColumnHeader[] \n            {new ColumnHeader(), new ColumnHeader(), new ColumnHeader()});\n\n        // Create items and add them to myListView.\n        ListViewItem item0 = new ListViewItem( new string[] \n            {&quot;Programming Windows&quot;, \n            &quot;Petzold, Charles&quot;, \n            &quot;1998&quot;}, 0 );\n        ListViewItem item1 = new ListViewItem( new string[] \n            {&quot;Code: The Hidden Language of Computer Hardware and Software&quot;, \n            &quot;Petzold, Charles&quot;, \n            &quot;2000&quot;}, 0 );\n        ListViewItem item2 = new ListViewItem( new string[] \n            {&quot;Programming Windows with C#&quot;, \n            &quot;Petzold, Charles&quot;, \n            &quot;2001&quot;}, 0 );\n        ListViewItem item3 = new ListViewItem( new string[] \n            {&quot;Coding Techniques for Microsoft Visual Basic .NET&quot;, \n            &quot;Connell, John&quot;, \n            &quot;2001&quot;}, 0 );\n        ListViewItem item4 = new ListViewItem( new string[] \n            {&quot;C# for Java Developers&quot;, \n            &quot;Jones, Allen &amp; Freeman, Adam&quot;, \n            &quot;2002&quot;}, 0 );\n        ListViewItem item5 = new ListViewItem( new string[] \n            {&quot;Microsoft .NET XML Web Services Step by Step&quot;, \n            &quot;Jones, Allen &amp; Freeman, Adam&quot;, \n            &quot;2002&quot;}, 0 );\n        myListView.Items.AddRange(\n            new ListViewItem[] {item0, item1, item2, item3, item4, item5});\n                  \n        // Initialize the form.\n        this.Controls.Add(myListView);\n        this.Size = new System.Drawing.Size(430, 330);\n        this.Text = &quot;ListView Tiling Example&quot;;\n    }\n\n    // Clean up any resources being used.        \n    protected override void Dispose(bool disposing)\n    {\n        if (disposing)\n        {\n            myImageList.Dispose();\n        }\n        base.Dispose(disposing);\n    }\n\n    [STAThread]\n    static void Main() \n    {\n        Application.EnableVisualStyles();\n        Application.Run(new ListViewTilingExample());\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView.Tiling#1\">Imports System\nImports System.Drawing\nImports System.Windows.Forms\n\nPublic Class ListViewTilingExample\n    Inherits Form\n    \n    Private myImageList As ImageList\n\n    Public Sub New()\n        &#39; Initialize myListView.\n        Dim myListView As New ListView()\n        myListView.Dock = DockStyle.Fill\n        myListView.View = View.Tile\n        \n        &#39; Initialize the tile size.\n        myListView.TileSize = new Size(400, 45)\n        \n        &#39; Initialize the item icons. \n        myImageList = New ImageList()\n        Dim myIcon as Icon = new Icon(&quot;book.ico&quot;)\n        Try\n            myImageList.Images.Add(myIcon)\n        Finally\n            myIcon.Dispose()\n        End Try\n        myIcon.Dispose()\n        myImageList.ImageSize = New Size(32, 32)\n        myListView.LargeImageList = myImageList\n        \n        &#39; Add column headers so the subitems will appear.\n        myListView.Columns.AddRange(New ColumnHeader() _\n            {New ColumnHeader(), New ColumnHeader(), New ColumnHeader()})\n        \n        &#39; Create items and add them to myListView.\n        Dim item0 As New ListViewItem( New String() _\n            {&quot;Programming Windows&quot;, _\n            &quot;Petzold, Charles&quot;, _\n            &quot;1998&quot;}, 0 )\n        Dim item1 As New ListViewItem( New String() _\n            {&quot;Code: The Hidden Language of Computer Hardware and Software&quot;, _\n            &quot;Petzold, Charles&quot;, _\n            &quot;2000&quot;}, 0 )\n        Dim item2 As New ListViewItem( New String() _\n            {&quot;Programming Windows with C#&quot;, _\n            &quot;Petzold, Charles&quot;, _\n            &quot;2001&quot;}, 0 )\n        Dim item3 As New ListViewItem( New String() _\n            {&quot;Coding Techniques for Microsoft Visual Basic .NET&quot;, _\n            &quot;Connell, John&quot;, _\n            &quot;2001&quot;}, 0 )\n        Dim item4 As New ListViewItem( New String() _\n            {&quot;C# for Java Developers&quot;, _\n            &quot;Jones, Allen / Freeman, Adam&quot;, _\n            &quot;2002&quot;}, 0 )\n        Dim item5 As New ListViewItem( New String() _\n            {&quot;Microsoft .NET XML Web Services Step by Step&quot;, _\n            &quot;Jones, Allen / Freeman, Adam&quot;, _\n            &quot;2002&quot;}, 0 )\n        myListView.Items.AddRange( _\n            New ListViewItem() {item0, item1, item2, item3, item4, item5})\n        \n        &#39; Initialize the form.\n        Me.Controls.Add(myListView)\n        Me.Size = new System.Drawing.Size(430, 330)\n        Me.Text = &quot;ListView Tiling Example&quot;\n    End Sub &#39;New\n    \n    &#39; Clean up any resources being used.        \n    Protected Overloads Overrides Sub Dispose(ByVal disposing As Boolean)\n        If (disposing) Then\n            myImageList.Dispose()\n        End If\n\n        MyBase.Dispose(disposing)\n    End Sub\n\n    &lt;STAThread()&gt; _\n    Shared Sub Main()\n        Application.EnableVisualStyles()\n        Application.Run(New ListViewTilingExample())\n    End Sub &#39;Main\n\nEnd Class &#39;ListViewTilingExample \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_TopItem\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_TopItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TopItem</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the first visible item in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListViewItem TopItem { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> that represents the first visible item in the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Windows.Forms.ListView.View*</span> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>,  <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>, or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Initially, the item with the index position of zero (0) is at the top of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. If the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control contents are scrolled, a different item can be at the top of the control. You can use this property to indicate or determine which item is visible at the top of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. The value of the TopItem property will not always persist, depending on where the desired top item is in the list view.  </p>\n<p> The number of items visible in a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control at any time depends on the height of the list view and the size of the items it contains. If the items exceed the height of the list view, the items will continue onto multiple pages, which the user can scroll through. If you set the TopItem property to an item in the last page of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>, the item will automatically be scrolled into view; however, TopItem will be set to the actual top item of the last page.  </p>\n<p> To ensure that a specific item is in the visible region of the control (but not necessarily in the top position), use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_EnsureVisible_\" data-linktype=\"relative-path\">EnsureVisible</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Setting this property has no effect when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Scrollable_\" data-linktype=\"relative-path\">Scrollable</a> property value is <code>false</code>.  </p>\n<p> Setting this property is not supported in versions of the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE --> prior to version 2.0.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates resetting the style of a <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> object&#39;s subitems through the use of the TopItem property and the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem#System_Windows_Forms_ListViewItem_ListViewSubItem_ResetStyle_\" data-linktype=\"relative-path\">ResetStyle</a> method. To run the example, paste the following code into a form containing a button named <code>Button1</code> and call the <code>InitializeListView</code> method in the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListViewItemStyle#2\">\n\t// Declare the Listview object.\n\tinternal System.Windows.Forms.ListView myListView;\n\n\t// Initialize the ListView object with subitems of a different\n\t// style than the default styles for the ListView.\n\tprivate void InitializeListView()\n\t{\n\n\t\t// Set the Location, View and Width properties for the \n\t\t// ListView object. \n\t\tmyListView = new ListView();\n\t\tmyListView.Location = new System.Drawing.Point(20, 20);\n\t\tmyListView.Width = 250;\n\n\t\t// The View property must be set to Details for the \n\t\t// subitems to be visible.\n\t\tmyListView.View = View.Details;\n\t\t\n\t\t// Each SubItem object requires a column, so add three columns.\n\t\tthis.myListView.Columns.Add(&quot;Key&quot;, 50, HorizontalAlignment.Left);\n\t\tthis.myListView.Columns.Add(&quot;A&quot;, 100, HorizontalAlignment.Left);\n\t\tthis.myListView.Columns.Add(&quot;B&quot;, 100, HorizontalAlignment.Left);\n\n\t\t// Add a ListItem object to the ListView.\n\t\tListViewItem entryListItem = myListView.Items.Add(&quot;Items&quot;);\n\n\t\t// Set UseItemStyleForSubItems property to false to change \n\t\t// look of subitems.\n\t\tentryListItem.UseItemStyleForSubItems = false;\n\n\t\t// Add the expense subitem.\n\t\tListViewItem.ListViewSubItem expenseItem = \n\t\t\tentryListItem.SubItems.Add(&quot;Expense&quot;);\n\n\t\t// Change the expenseItem object&#39;s color and font.\n\t\texpenseItem.ForeColor = System.Drawing.Color.Red;\n\t\texpenseItem.Font = new System.Drawing.Font(\n\t\t\t&quot;Arial&quot;, 10, System.Drawing.FontStyle.Italic);\n\n\t\t// Add a subitem called revenueItem \n\t\tListViewItem.ListViewSubItem revenueItem = \n\t\t\tentryListItem.SubItems.Add(&quot;Revenue&quot;);\n\n\t\t// Change the revenueItem object&#39;s color and font.\n\t\trevenueItem.ForeColor = System.Drawing.Color.Blue;\n\t\trevenueItem.Font = new System.Drawing.Font(\n\t\t\t&quot;Times New Roman&quot;, 10, System.Drawing.FontStyle.Bold);\n\n\t\t// Add the ListView to the form.\n\t\tthis.Controls.Add(this.myListView);\n\t}\n\n\tprivate void Button1_Click(System.Object sender, System.EventArgs e)\n\t{\n\n\t\t// Use the ListView.TopItem property to access the SubItems\n\t\t// and then reset their appearance.\n\t\tmyListView.TopItem.SubItems[1].ResetStyle();\n\t\tmyListView.TopItem.SubItems[2].ResetStyle();\n\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListViewItemStyle#2\">internal:\n   // Declare the Listview object.\n   System::Windows::Forms::ListView^ myListView;\n\nprivate:\n\n   // Initialize the ListView object with subitems of a different\n   // style than the default styles for the ListView.\n   void InitializeListView()\n   {\n      // Set the Location, View and Width properties for the \n      // ListView object. \n      myListView = gcnew ListView;\n      myListView-&gt;Location = System::Drawing::Point( 20, 20 );\n      myListView-&gt;Width = 250;\n      \n      // The View property must be set to Details for the \n      // subitems to be visible.\n      myListView-&gt;View = View::Details;\n      \n      // Each SubItem object requires a column, so add three columns.\n      this-&gt;myListView-&gt;Columns-&gt;Add( &quot;Key&quot;, 50, HorizontalAlignment::Left );\n      this-&gt;myListView-&gt;Columns-&gt;Add( &quot;A&quot;, 100, HorizontalAlignment::Left );\n      this-&gt;myListView-&gt;Columns-&gt;Add( &quot;B&quot;, 100, HorizontalAlignment::Left );\n      \n      // Add a ListItem object to the ListView.\n      ListViewItem^ entryListItem = myListView-&gt;Items-&gt;Add( &quot;Items&quot; );\n      \n      // Set UseItemStyleForSubItems property to false to change \n      // look of subitems.\n      entryListItem-&gt;UseItemStyleForSubItems = false;\n      \n      // Add the expense subitem.\n      ListViewItem::ListViewSubItem ^ expenseItem = entryListItem-&gt;SubItems-&gt;Add( &quot;Expense&quot; );\n      \n      // Change the expenseItem object&#39;s color and font.\n      expenseItem-&gt;ForeColor = System::Drawing::Color::Red;\n      expenseItem-&gt;Font = gcnew System::Drawing::Font( &quot;Arial&quot;,10,System::Drawing::FontStyle::Italic );\n      \n      // Add a subitem called revenueItem \n      ListViewItem::ListViewSubItem ^ revenueItem = entryListItem-&gt;SubItems-&gt;Add( &quot;Revenue&quot; );\n      \n      // Change the revenueItem object&#39;s color and font.\n      revenueItem-&gt;ForeColor = System::Drawing::Color::Blue;\n      revenueItem-&gt;Font = gcnew System::Drawing::Font( &quot;Times New Roman&quot;,10,System::Drawing::FontStyle::Bold );\n      \n      // Add the ListView to the form.\n      this-&gt;Controls-&gt;Add( this-&gt;myListView );\n   }\n\n   void Button1_Click( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Use the ListView.TopItem property to access the SubItems\n      // and then reset their appearance.\n      myListView-&gt;TopItem-&gt;SubItems[ 1 ]-&gt;ResetStyle();\n      myListView-&gt;TopItem-&gt;SubItems[ 2 ]-&gt;ResetStyle();\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListViewItemStyle#2\">\n    &#39; Declare the Listview object.\n    Friend WithEvents myListView As System.Windows.Forms.ListView\n\n    &#39; Initialize the ListView object with subitems of a different\n    &#39; style than the default styles for the ListView.\n    Private Sub InitializeListView()\n\n        &#39; Set the Location, View and Width properties for the \n        &#39; ListView object. \n        myListView = New ListView\n        With (myListView)\n            .Location = New System.Drawing.Point(20, 20)\n\n            &#39; The View property must be set to Details for the \n            &#39; subitems to be visible.\n            .View = View.Details\n            .Width = 250\n        End With\n\n        &#39; Each SubItem object requires a column, so add three columns.\n        Me.myListView.Columns.Add(&quot;Key&quot;, 50, HorizontalAlignment.Left)\n        Me.myListView.Columns.Add(&quot;A&quot;, 100, HorizontalAlignment.Left)\n        Me.myListView.Columns.Add(&quot;B&quot;, 100, HorizontalAlignment.Left)\n\n        &#39; Add a ListItem object to the ListView.\n        Dim entryListItem As ListViewItem = myListView.Items.Add(&quot;Items&quot;)\n\n        &#39; Set UseItemStyleForSubItems property to false to change \n        &#39; look of subitems.\n        entryListItem.UseItemStyleForSubItems = False\n\n        &#39; Add the expense subitem.\n        Dim expenseItem As ListViewItem.ListViewSubItem = _\n            entryListItem.SubItems.Add(&quot;Expense&quot;)\n\n        &#39; Change the expenseItem object&#39;s color and font.\n        expenseItem.ForeColor = System.Drawing.Color.Red\n        expenseItem.Font = New System.Drawing.Font _\n            (&quot;Arial&quot;, 10, System.Drawing.FontStyle.Italic)\n\n        &#39; Add a subitem called revenueItem \n        Dim revenueItem As ListViewItem.ListViewSubItem = _\n            entryListItem.SubItems.Add(&quot;Revenue&quot;)\n\n        &#39; Change the revenueItem object&#39;s color and font.\n        revenueItem.ForeColor = System.Drawing.Color.Blue\n        revenueItem.Font = New System.Drawing.Font _\n            (&quot;Times New Roman&quot;, 10, System.Drawing.FontStyle.Bold)\n\n        &#39; Add the ListView to the form.\n        Me.Controls.Add(Me.myListView)\n    End Sub\n\n    Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click\n\n        &#39; Use the ListView.TopItem property to access the SubItems\n        &#39; and then reset their appearance.\n        myListView.TopItem.SubItems(1).ResetStyle()\n        myListView.TopItem.SubItems(2).ResetStyle()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_UseCompatibleStateImageBehavior\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_UseCompatibleStateImageBehavior_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UseCompatibleStateImageBehavior</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> uses state image behavior that is compatible with the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE --> 1.1 or the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE --> 2.0.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool UseCompatibleStateImageBehavior { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the state image behavior is compatible with the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE --> 1.1; <code>false</code> if the behavior is compatible with the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE --> 2.0. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Changes to the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control in the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE --> 2.0 enable custom state images to be set to indicate whether an item is checked or unchecked or in an indeterminate state. With the addition of this feature, the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE --> 2.0 has different behavior than the .NET Framework 1.1. If you have created applications that depend on the behavior in the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/dnprdnshort-md.md&quot; -->.NET Framework<!--END INCLUDE --> 1.1, be sure that the UseCompatibleStateImageBehavior property is set to <code>true</code>, which is the default value. In order to fully take advantage of custom state images, set UseCompatibleStateImageBehavior to <code>false</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you are using the <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/vsprvsext-md.md&quot; -->Microsoft Visual Studio 2005<!--END INCLUDE --> designer, the UseCompatibleStateImageBehavior property will be set to <code>false</code>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_View\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_View_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">View</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets how items are displayed in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.View View { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value specified is not one of the <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The View property allows you to specify the type of display the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control uses to display items. You can set the View property to display each item with large or small icons or display items in a vertical list. The richest option is the details view, which allows you to view not only the items but any subitems specified for each item. Each item is displayed in a grid, with each item listed vertically and the subitems for each item displayed in a column, with column headers. The details view is a perfect way to display database information to a user. With Windows XP and Windows Server 2003, you can also display items as tiles that balance graphical and textual information by showing a large icon along with subitem information of your choosing. To enable tile view, your application must call the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_EnableVisualStyles_\" data-linktype=\"relative-path\">EnableVisualStyles</a> method. The small-image view displays each item with an icon and textual information to the right of the icon. The large-image view displays each item with an icon and textual information below the icon. The size of the icons for the image list is specified by the <a class=\"xref\" href=\"system.windows.forms.imagelist#System_Windows_Forms_ImageList_ImageSize_\" data-linktype=\"relative-path\">ImageSize</a> property of the <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SmallImageList_\" data-linktype=\"relative-path\">SmallImageList</a> or <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LargeImageList_\" data-linktype=\"relative-path\">LargeImageList</a> properties.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you are using multiple image lists, for small and large icon view, with a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control, you should place small and large versions of the image at the same index location in their respective image lists. When switching between views, the index location of the image in one list is used to locate the image in the other list, regardless of the key value specified.  </p>\n</div>\n<p> Most of the properties in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control affect how the different views behave or are displayed. Some properties that affect the views of the items are only useful when the View property is set to a specific value, while others are useful in all views. For example, properties such as <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GridLines_\" data-linktype=\"relative-path\">GridLines</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a> are only useful when the View property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>, while the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_MultiSelect_\" data-linktype=\"relative-path\">MultiSelect</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a> properties are useful in all views.  </p>\n<p> The following table shows some of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> members and the views they are valid in.  </p>\n<table>\n<thead>\n<tr>\n<th>ListView member</th>\n<th>View</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Alignment_\" data-linktype=\"relative-path\">Alignment</a> property</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AutoArrange_\" data-linktype=\"relative-path\">AutoArrange</a> property</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AutoResizeColumn_\" data-linktype=\"relative-path\">AutoResizeColumn</a> method</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a></td>\n<td>All views except <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Columns_\" data-linktype=\"relative-path\">Columns</a> property</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">DrawSubItem</a> event</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindItemWithText_\" data-linktype=\"relative-path\">FindItemWithText</a> method</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>, <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>, or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindNearestItem_\" data-linktype=\"relative-path\">FindNearestItem</a> method</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GetItemAt_\" data-linktype=\"relative-path\">GetItemAt</a> method</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Groups_\" data-linktype=\"relative-path\">Groups</a> property</td>\n<td>All views except <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_HeaderStyle_\" data-linktype=\"relative-path\">HeaderStyle</a> property</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_InsertionMark_\" data-linktype=\"relative-path\">InsertionMark</a> property</td>\n<td><a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>, <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>, or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a></td>\n</tr>\n</tbody>\n</table>\n<p> You can use the View property to provide different views of data in your application, or to lock a specific view to utilize that view&#39;s benefits. For example, the View property is often set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a> because the details view provides a number of viewing options not available in the other views.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If your <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control does not have any column headers specified and you set the View property to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>, the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control will not display any items. If your <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control does not have any column headers specified and you set the View property to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>, the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control will not display any subitems.  </p>\n</div>\n<p> The tile view displays each item with a large icon on the left and textual information on the right. The textual information consists of the item label followed by subitems. By default, only the first subitem is displayed, which corresponds to the item label. To display additional subitems, you must add <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Columns_\" data-linktype=\"relative-path\">Columns</a> collection. Each subitem in the tile corresponds to a column header. To control which subitems are displayed and the order in which they are displayed, you must set the <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem#System_Windows_Forms_ListViewItem_ListViewSubItem_Name_\" data-linktype=\"relative-path\">Name</a> property for each item and the <a class=\"xref\" href=\"system.windows.forms.columnheader#System_Windows_Forms_ColumnHeader_Name_\" data-linktype=\"relative-path\">Name</a> property for each header. You can then add, remove, and rearrange headers in the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Columns_\" data-linktype=\"relative-path\">Columns</a> collection to achieve the desired result.  </p>\n<p> To control the size of the tiles in the tile view, set the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_TileSize_\" data-linktype=\"relative-path\">TileSize</a> property. This is useful to prevent line-wrapping when subitem text is too long for a single line.  </p>\n<p> For an example of the tile view, see the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_TileSize_\" data-linktype=\"relative-path\">TileSize</a> property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Although columns are only displayed in the details view, subitems without column headers will not display in either the details view or the tile view.  </p>\n</div>\n<p> The tile view is available only on Windows XP and Windows Server 2003 when your application calls the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_EnableVisualStyles_\" data-linktype=\"relative-path\">EnableVisualStyles</a> method. On earlier operating systems, any code related to the tile view has no effect, and the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control displays in the large icon view. As a result, any code that depends on the tile view might not work correctly.  </p>\n<p> You might want to include code that determines whether tile view is available, and provide alternate functionality when it is unavailable. For example, when you use owner drawing to customize the appearance of <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> items in the tile view, you might want to use drawing code appropriate to the large icon view when running on operating systems that do not support the tile view.  </p>\n<p> The tile view feature is provided by the same library that provides the operating system themes feature. To check for the availability of this library, call the <a class=\"xref\" href=\"system.windows.forms.featuresupport#System_Windows_Forms_FeatureSupport_IsPresent_System_Object_\" data-linktype=\"relative-path\">System.Windows.Forms.FeatureSupport.IsPresent(Object)</a> method overload and pass in the <a class=\"xref\" href=\"system.windows.forms.osfeature#System_Windows_Forms_OSFeature_Themes\" data-linktype=\"relative-path\">System.Windows.Forms.OSFeature.Themes</a> value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control with three <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects specified and three <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a> objects specified for each item. The example also creates <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> objects to display the subitems in details view. Two <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are also created in the code example to provide images for the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects. These <a class=\"xref\" href=\"system.windows.forms.imagelist\" data-linktype=\"relative-path\">ImageList</a> objects are added to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LargeImageList_\" data-linktype=\"relative-path\">LargeImageList</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SmallImageList_\" data-linktype=\"relative-path\">SmallImageList</a> properties. The example uses the following properties in creating the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<ul>\n<li><p>View  </p>\n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LabelEdit_\" data-linktype=\"relative-path\">LabelEdit</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AllowColumnReorder_\" data-linktype=\"relative-path\">AllowColumnReorder</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GridLines_\" data-linktype=\"relative-path\">GridLines</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sorting_\" data-linktype=\"relative-path\">Sorting</a>  \n\n<p>This example requires that you have added the code to a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> and call the method created in the example from the constructor or another method on the form. The example also requires that images named <code>MySmallImage1</code>, <code>MySmallImage2</code>, <code>MyLargeImage1</code>, and <code>MyLargeImage2</code> are located in the root directory of drive C.  </p>\n<pre><code class=\"lang-cpp\" name=\"ListViewExample#1\">private:\n   void CreateMyListView()\n   {\n      // Create a new ListView control.\n      ListView^ listView1 = gcnew ListView;\n      listView1-&gt;Bounds = Rectangle(Point(10,10),System::Drawing::Size( 300, 200 ));\n\n      // Set the view to show details.\n      listView1-&gt;View = View::Details;\n\n      // Allow the user to edit item text.\n      listView1-&gt;LabelEdit = true;\n\n      // Allow the user to rearrange columns.\n      listView1-&gt;AllowColumnReorder = true;\n\n      // Display check boxes.\n      listView1-&gt;CheckBoxes = true;\n\n      // Select the item and subitems when selection is made.\n      listView1-&gt;FullRowSelect = true;\n\n      // Display grid lines.\n      listView1-&gt;GridLines = true;\n\n      // Sort the items in the list in ascending order.\n      listView1-&gt;Sorting = SortOrder::Ascending;\n\n      // Create three items and three sets of subitems for each item.\n      ListViewItem^ item1 = gcnew ListViewItem( &quot;item1&quot;,0 );\n\n      // Place a check mark next to the item.\n      item1-&gt;Checked = true;\n      item1-&gt;SubItems-&gt;Add( &quot;1&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;2&quot; );\n      item1-&gt;SubItems-&gt;Add( &quot;3&quot; );\n      ListViewItem^ item2 = gcnew ListViewItem( &quot;item2&quot;,1 );\n      item2-&gt;SubItems-&gt;Add( &quot;4&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;5&quot; );\n      item2-&gt;SubItems-&gt;Add( &quot;6&quot; );\n      ListViewItem^ item3 = gcnew ListViewItem( &quot;item3&quot;,0 );\n\n      // Place a check mark next to the item.\n      item3-&gt;Checked = true;\n      item3-&gt;SubItems-&gt;Add( &quot;7&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;8&quot; );\n      item3-&gt;SubItems-&gt;Add( &quot;9&quot; );\n\n      // Create columns for the items and subitems.\n      // Width of -2 indicates auto-size.\n      listView1-&gt;Columns-&gt;Add( &quot;Item Column&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 2&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 3&quot;, -2, HorizontalAlignment::Left );\n      listView1-&gt;Columns-&gt;Add( &quot;Column 4&quot;, -2, HorizontalAlignment::Center );\n\n      //Add the items to the ListView.\n      array&lt;ListViewItem^&gt;^temp1 = {item1,item2,item3};\n      listView1-&gt;Items-&gt;AddRange( temp1 );\n\n      // Create two ImageList objects.\n      ImageList^ imageListSmall = gcnew ImageList;\n      ImageList^ imageListLarge = gcnew ImageList;\n\n      // Initialize the ImageList objects with bitmaps.\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage1.bmp&quot; ) );\n      imageListSmall-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MySmallImage2.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage1.bmp&quot; ) );\n      imageListLarge-&gt;Images-&gt;Add( Bitmap::FromFile( &quot;C:\\\\MyLargeImage2.bmp&quot; ) );\n\n      //Assign the ImageList objects to the ListView.\n      listView1-&gt;LargeImageList = imageListLarge;\n      listView1-&gt;SmallImageList = imageListSmall;\n      \n      // Add the ListView to the control collection.\n      this-&gt;Controls-&gt;Add( listView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"ListViewExample#1\">\t\tprivate void CreateMyListView()\n\t\t{\n\t\t\t// Create a new ListView control.\n\t\t\tListView listView1 = new ListView();\n\t\t\tlistView1.Bounds = new Rectangle(new Point(10,10), new Size(300,200));\n\n\t\t\t// Set the view to show details.\n\t\t\tlistView1.View = View.Details;\n\t\t\t// Allow the user to edit item text.\n\t\t\tlistView1.LabelEdit = true;\n\t\t\t// Allow the user to rearrange columns.\n\t\t\tlistView1.AllowColumnReorder = true;\n\t\t\t// Display check boxes.\n\t\t\tlistView1.CheckBoxes = true;\n\t\t\t// Select the item and subitems when selection is made.\n\t\t\tlistView1.FullRowSelect = true;\n\t\t\t// Display grid lines.\n\t\t\tlistView1.GridLines = true;\n\t\t\t// Sort the items in the list in ascending order.\n\t\t\tlistView1.Sorting = SortOrder.Ascending;\n            \t\t\t\n\t\t\t// Create three items and three sets of subitems for each item.\n\t\t\tListViewItem item1 = new ListViewItem(&quot;item1&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem1.Checked = true;\n\t\t\titem1.SubItems.Add(&quot;1&quot;);\n\t\t\titem1.SubItems.Add(&quot;2&quot;);\n\t\t\titem1.SubItems.Add(&quot;3&quot;);\n\t\t\tListViewItem item2 = new ListViewItem(&quot;item2&quot;,1);\n\t\t\titem2.SubItems.Add(&quot;4&quot;);\n\t\t\titem2.SubItems.Add(&quot;5&quot;);\n\t\t\titem2.SubItems.Add(&quot;6&quot;);\n\t\t\tListViewItem item3 = new ListViewItem(&quot;item3&quot;,0);\n\t\t\t// Place a check mark next to the item.\n\t\t\titem3.Checked = true;\n\t\t\titem3.SubItems.Add(&quot;7&quot;);\n\t\t\titem3.SubItems.Add(&quot;8&quot;);\n\t\t\titem3.SubItems.Add(&quot;9&quot;);\n\n\t\t\t// Create columns for the items and subitems.\n\t\t\t// Width of -2 indicates auto-size.\n\t\t\tlistView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left);\n\t\t\tlistView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center);\n\n\t\t\t//Add the items to the ListView.\n            \t\tlistView1.Items.AddRange(new ListViewItem[]{item1,item2,item3});\n\n\t\t\t// Create two ImageList objects.\n\t\t\tImageList imageListSmall = new ImageList();\n\t\t\tImageList imageListLarge = new ImageList();\n\n\t\t\t// Initialize the ImageList objects with bitmaps.\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage1.bmp&quot;));\n\t\t\timageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\\\MySmallImage2.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage1.bmp&quot;));\n\t\t\timageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\\\MyLargeImage2.bmp&quot;));\n\n\t\t\t//Assign the ImageList objects to the ListView.\n\t\t\tlistView1.LargeImageList = imageListLarge;\n\t\t\tlistView1.SmallImageList = imageListSmall;\n\n\t\t\t// Add the ListView to the control collection.\n\t\t\tthis.Controls.Add(listView1);\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewExample#1\">        Private Sub CreateMyListView()\n            &#39; Create a new ListView control.\n            Dim listView1 As New ListView()\n            listView1.Bounds = New Rectangle(New Point(10, 10), New Size(300, 200))\n\n            &#39; Set the view to show details.\n            listView1.View = View.Details\n            &#39; Allow the user to edit item text.\n            listView1.LabelEdit = True\n            &#39; Allow the user to rearrange columns.\n            listView1.AllowColumnReorder = True\n            &#39; Display check boxes.\n            listView1.CheckBoxes = True\n            &#39; Select the item and subitems when selection is made.\n            listView1.FullRowSelect = True\n            &#39; Display grid lines.\n            listView1.GridLines = True\n            &#39; Sort the items in the list in ascending order.\n            listView1.Sorting = SortOrder.Ascending\n\n            &#39; Create three items and three sets of subitems for each item.\n            Dim item1 As New ListViewItem(&quot;item1&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item1.Checked = True\n            item1.SubItems.Add(&quot;1&quot;)\n            item1.SubItems.Add(&quot;2&quot;)\n            item1.SubItems.Add(&quot;3&quot;)\n            Dim item2 As New ListViewItem(&quot;item2&quot;, 1)\n            item2.SubItems.Add(&quot;4&quot;)\n            item2.SubItems.Add(&quot;5&quot;)\n            item2.SubItems.Add(&quot;6&quot;)\n            Dim item3 As New ListViewItem(&quot;item3&quot;, 0)\n            &#39; Place a check mark next to the item.\n            item3.Checked = True\n            item3.SubItems.Add(&quot;7&quot;)\n            item3.SubItems.Add(&quot;8&quot;)\n            item3.SubItems.Add(&quot;9&quot;)\n\n            &#39; Create columns for the items and subitems.\n            &#39; Width of -2 indicates auto-size.\n            listView1.Columns.Add(&quot;Item Column&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 2&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 3&quot;, -2, HorizontalAlignment.Left)\n            listView1.Columns.Add(&quot;Column 4&quot;, -2, HorizontalAlignment.Center)\n\n            &#39;Add the items to the ListView.\n            listView1.Items.AddRange(New ListViewItem() {item1, item2, item3})\n\n            &#39; Create two ImageList objects.\n            Dim imageListSmall As New ImageList()\n            Dim imageListLarge As New ImageList()\n\n            &#39; Initialize the ImageList objects with bitmaps.\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage1.bmp&quot;))\n            imageListSmall.Images.Add(Bitmap.FromFile(&quot;C:\\MySmallImage2.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage1.bmp&quot;))\n            imageListLarge.Images.Add(Bitmap.FromFile(&quot;C:\\MyLargeImage2.bmp&quot;))\n\n            &#39;Assign the ImageList objects to the ListView.\n            listView1.LargeImageList = imageListLarge\n            listView1.SmallImageList = imageListSmall\n\n            &#39; Add the ListView to the control collection.\n            Me.Controls.Add(listView1)\n        End Sub &#39;CreateMyListView\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_VirtualListSize\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_VirtualListSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VirtualListSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the number of <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects contained in the list when in virtual mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int VirtualListSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects contained in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> when in virtual mode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>VirtualListSize is set to a value less than 0.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.ListView.VirtualMode*</span> is set to <code>true</code>, VirtualListSize is greater than 0, and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_RetrieveVirtualItem\" data-linktype=\"relative-path\">RetrieveVirtualItem</a> is not handled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Getting or setting the VirtualListSize property when <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> set to <code>false</code> will have no effect on the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>.  </p>\n<p> If <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> is set to <code>true</code>, and the VirtualListSize property is greater than 0, you must handle the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_RetrieveVirtualItem\" data-linktype=\"relative-path\">RetrieveVirtualItem</a> event, providing a valid <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_VirtualMode\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_VirtualMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VirtualMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether you have provided your own data-management operations for the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool VirtualMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> uses data-management operations that you provide; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>VirtualMode is set to <code>true</code> and one of the following conditions exist:  </p>\n<ul>\n<li><p><span class=\"xref\">stem.Windows.Forms.ListView.VirtualListSize*</span> is greater than 0 and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_RetrieveVirtualItem\" data-linktype=\"relative-path\">RetrieveVirtualItem</a> is not handled.  </p>\n<p> -or-  </p>\n</li>\n<li><p><span class=\"xref\">stem.Windows.Forms.ListView.Items*</span>, <span class=\"xref\">stem.Windows.Forms.ListView.CheckedItems*</span>, or <span class=\"xref\">stem.Windows.Forms.ListView.SelectedItems*</span> contains items.  </p>\n<p> -or-  </p>\n</li>\n<li><p>Edits are made to <span class=\"xref\">stem.Windows.Forms.ListView.Items*</span>.</p>\n</li>\n</ul>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Setting the VirtualMode property to <code>true</code> puts the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> into virtual mode. In Virtual mode, the normal <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Items_\" data-linktype=\"relative-path\">Items</a> collection is unused. Instead, <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects are created dynamically as the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> requires them.  </p>\n<p> Virtual mode can be useful under many circumstances. If a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> object must be populated from a very large collection already in memory, creating a <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> object for each entry can be wasteful. In virtual mode, only the items required are created. In other cases, the values of the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects may need to be recalculated frequently, and doing this for the whole collection would produce unacceptable performance. In virtual mode, only the required items are calculated.  </p>\n<p> In order to use virtual mode, you must handle the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_RetrieveVirtualItem\" data-linktype=\"relative-path\">RetrieveVirtualItem</a> event, which is raised every time the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> requires an item. This event handler should create the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> object that belongs at the specified index. In addition, the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_VirtualListSize_\" data-linktype=\"relative-path\">VirtualListSize</a> property must be set to the size of the virtual list.  </p>\n<p> Handling the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SearchForVirtualItem\" data-linktype=\"relative-path\">SearchForVirtualItem</a> event enables searching in virtual mode. If this event is not handled, the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindItemWithText_\" data-linktype=\"relative-path\">FindItemWithText</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindNearestItem_\" data-linktype=\"relative-path\">FindNearestItem</a> methods will return <code>null</code>.  </p>\n<p> You can handle the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CacheVirtualItems\" data-linktype=\"relative-path\">CacheVirtualItems</a> event in order to maintain a cache of <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects. If the calculation or lookup to create a <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> object is expensive, maintaining a cache can improve performance.  </p>\n<p> If the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>, the value will automatically be changed to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> when VirtualMode is set to <code>true</code>.  </p>\n<p> In virtual mode, the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Items_\" data-linktype=\"relative-path\">Items</a> collection is disabled. Attempting to access it results in an <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a>. The same is true of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckedItems_\" data-linktype=\"relative-path\">CheckedItems</a> collection and the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedItems_\" data-linktype=\"relative-path\">SelectedItems</a> collection. If you want to retrieve the selected or checked items, use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedIndices_\" data-linktype=\"relative-path\">SelectedIndices</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckedIndices_\" data-linktype=\"relative-path\">CheckedIndices</a> collections instead.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example illustrates a simple <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> whose contents are the first ten thousand squares. It handles searching and uses a cache for increased performance.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView.VirtualMode#1\">using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Text;\nusing System.Windows.Forms;\n\npublic class Form1 : Form\n{\n    private ListViewItem[] myCache; //array to cache items for the virtual list\n    private int firstItem; //stores the index of the first item in the cache\n\n    [STAThread]\n    static void Main()\n    {\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n        Application.Run(new Form1());\n    }\n\n    public Form1()\n    {\n        //Create a simple ListView.\n        ListView listView1 = new ListView();\n        listView1.View = View.SmallIcon;\n        listView1.VirtualMode = true;\n        listView1.VirtualListSize = 10000;\n\n        //Hook up handlers for VirtualMode events.\n        listView1.RetrieveVirtualItem += new RetrieveVirtualItemEventHandler(listView1_RetrieveVirtualItem);\n        listView1.CacheVirtualItems += new CacheVirtualItemsEventHandler(listView1_CacheVirtualItems);\n        listView1.SearchForVirtualItem += new SearchForVirtualItemEventHandler(listView1_SearchForVirtualItem);\n\n        //Add ListView to the form.\n        this.Controls.Add(listView1);\n\n        //Search for a particular virtual item.\n        //Notice that we never manually populate the collection!\n        //If you leave out the SearchForVirtualItem handler, this will return null.\n        ListViewItem lvi = listView1.FindItemWithText(&quot;111111&quot;);\n\n        //Select the item found and scroll it into view.\n        if (lvi != null)\n        {\n            listView1.SelectedIndices.Add(lvi.Index);\n            listView1.EnsureVisible(lvi.Index);\n        }\n    }\n\n    //The basic VirtualMode function.  Dynamically returns a ListViewItem\n    //with the required properties; in this case, the square of the index.\n    void listView1_RetrieveVirtualItem(object sender, RetrieveVirtualItemEventArgs e)\n    {\n        //Caching is not required but improves performance on large sets.\n        //To leave out caching, don&#39;t connect the CacheVirtualItems event \n        //and make sure myCache is null.\n\n        //check to see if the requested item is currently in the cache\n        if (myCache != null &amp;&amp; e.ItemIndex &gt;= firstItem &amp;&amp; e.ItemIndex &lt; firstItem + myCache.Length)\n        {\n            //A cache hit, so get the ListViewItem from the cache instead of making a new one.\n            e.Item = myCache[e.ItemIndex - firstItem];\n        }\n        else\n        {\n            //A cache miss, so create a new ListViewItem and pass it back.\n            int x = e.ItemIndex * e.ItemIndex;\n            e.Item = new ListViewItem(x.ToString());\n        }\n    }\n\n    //Manages the cache.  ListView calls this when it might need a \n    //cache refresh.\n    void listView1_CacheVirtualItems(object sender, CacheVirtualItemsEventArgs e)\n    {\n        //We&#39;ve gotten a request to refresh the cache.\n        //First check if it&#39;s really neccesary.\n        if (myCache != null &amp;&amp; e.StartIndex &gt;= firstItem &amp;&amp; e.EndIndex &lt;= firstItem + myCache.Length)\n        {\n            //If the newly requested cache is a subset of the old cache, \n            //no need to rebuild everything, so do nothing.\n            return;\n        }\n\n        //Now we need to rebuild the cache.\n        firstItem = e.StartIndex;\n        int length = e.EndIndex - e.StartIndex + 1; //indexes are inclusive\n        myCache = new ListViewItem[length];\n        \n        //Fill the cache with the appropriate ListViewItems.\n        int x = 0;\n        for (int i = 0; i &lt; length; i++)\n        {\n            x = (i + firstItem) * (i + firstItem);\n            myCache[i] = new ListViewItem(x.ToString());\n        }\n\n    }\n\n    //This event handler enables search functionality, and is called\n    //for every search request when in Virtual mode.\n    void listView1_SearchForVirtualItem(object sender, SearchForVirtualItemEventArgs e)\n    {\n        //We&#39;ve gotten a search request.\n        //In this example, finding the item is easy since it&#39;s\n        //just the square of its index.  We&#39;ll take the square root\n        //and round.\n        double x = 0;\n        if (Double.TryParse(e.Text, out x)) //check if this is a valid search\n        {\n            x = Math.Sqrt(x);\n            x = Math.Round(x);\n            e.Index = (int)x;\n               \n        }\n        //If e.Index is not set, the search returns null.\n        //Note that this only handles simple searches over the entire\n        //list, ignoring any other settings.  Handling Direction, StartIndex,\n        //and the other properties of SearchForVirtualItemEventArgs is up\n        //to this handler.\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView.VirtualMode#1\">Public Class Form1\n    Inherits Form\n    Private myCache() As ListViewItem &#39;array to cache items for the virtual list\n    Private firstItem As Integer &#39;stores the index of the first item in the cache\n    Private WithEvents listView1 As ListView\n\n    Public Shared Sub Main()\n        Application.Run(New Form1)\n    End Sub\n\n    Public Sub New()\n        &#39;Create a simple ListView.\n        listView1 = New ListView()\n        listView1.View = View.SmallIcon\n        listView1.VirtualMode = True\n        listView1.VirtualListSize = 10000\n\n        &#39;Add ListView to the form.\n        Me.Controls.Add(listView1)\n\n        &#39;Search for a particular virtual item.\n        &#39;Notice that we never manually populate the collection!\n        &#39;If you leave out the SearchForVirtualItem handler, this will return null.\n        Dim lvi As ListViewItem = listView1.FindItemWithText(&quot;111111&quot;)\n\n        &#39;Select the item found and scroll it into view.\n        If Not (lvi Is Nothing) Then\n            listView1.SelectedIndices.Add(lvi.Index)\n            listView1.EnsureVisible(lvi.Index)\n        End If\n\n    End Sub\n\n    &#39;The basic VirtualMode function.  Dynamically returns a ListViewItem\n    &#39;with the required properties; in this case, the square of the index.\n    Private Sub listView1_RetrieveVirtualItem(ByVal sender As Object, ByVal e As RetrieveVirtualItemEventArgs) Handles listView1.RetrieveVirtualItem\n        &#39;Caching is not required but improves performance on large sets.\n        &#39;To leave out caching, don&#39;t connect the CacheVirtualItems event \n        &#39;and make sure myCache is null.\n        &#39;check to see if the requested item is currently in the cache\n        If Not (myCache Is Nothing) AndAlso e.ItemIndex &gt;= firstItem AndAlso e.ItemIndex &lt; firstItem + myCache.Length Then\n            &#39;A cache hit, so get the ListViewItem from the cache instead of making a new one.\n            e.Item = myCache((e.ItemIndex - firstItem))\n        Else\n            &#39;A cache miss, so create a new ListViewItem and pass it back.\n            Dim x As Integer = e.ItemIndex * e.ItemIndex\n            e.Item = New ListViewItem(x.ToString())\n        End If\n\n\n    End Sub\n\n    &#39;Manages the cache.  ListView calls this when it might need a \n    &#39;cache refresh.\n    Private Sub listView1_CacheVirtualItems(ByVal sender As Object, ByVal e As CacheVirtualItemsEventArgs) Handles listView1.CacheVirtualItems\n        &#39;We&#39;ve gotten a request to refresh the cache.\n        &#39;First check if it&#39;s really neccesary.\n        If Not (myCache Is Nothing) AndAlso e.StartIndex &gt;= firstItem AndAlso e.EndIndex &lt;= firstItem + myCache.Length Then\n            &#39;If the newly requested cache is a subset of the old cache, \n            &#39;no need to rebuild everything, so do nothing.\n            Return\n        End If\n\n        &#39;Now we need to rebuild the cache.\n        firstItem = e.StartIndex\n        Dim length As Integer = e.EndIndex - e.StartIndex + 1 &#39;indexes are inclusive\n        myCache = New ListViewItem(length) {}\n\n        &#39;Fill the cache with the appropriate ListViewItems.\n        Dim x As Integer = 0\n        Dim i As Integer\n        For i = 0 To length\n            x = (i + firstItem) * (i + firstItem)\n            myCache(i) = New ListViewItem(x.ToString())\n        Next i\n\n    End Sub\n\n    &#39;This event handler enables search functionality, and is called\n    &#39;for every search request when in Virtual mode.\n    Private Sub listView1_SearchForVirtualItem(ByVal sender As Object, ByVal e As SearchForVirtualItemEventArgs) Handles listView1.SearchForVirtualItem\n        &#39;We&#39;ve gotten a search request.\n        &#39;In this example, finding the item is easy since it&#39;s\n        &#39;just the square of its index.  We&#39;ll take the square root\n        &#39;and round.\n        Dim x As Double = 0\n        If [Double].TryParse(e.Text, x) Then &#39;check if this is a valid search\n            x = Math.Sqrt(x)\n            x = Math.Round(x)\n            e.Index = Fix(x)\n        End If\n        &#39;Note that this only handles simple searches over the entire\n        &#39;list, ignoring any other settings.  Handling Direction, StartIndex,\n        &#39;and the other properties of SearchForVirtualItemEventArgs is up\n        &#39;to this handler.\n    End Sub\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ArrangeIcons\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_ArrangeIcons_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ArrangeIcons()</div>        \r\n          </div>\r\n    \r\n            <p>Arranges items in the control when they are displayed as icons based on the value of the <span class=\"xref\">stem.Windows.Forms.ListView.Alignment*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ArrangeIcons ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ArrangeIcons_\" data-linktype=\"relative-path\">ArrangeIcons</a> method is only useful when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>. Calling this version of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ArrangeIcons_\" data-linktype=\"relative-path\">ArrangeIcons</a> method arranges the items based on the value of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Alignment_\" data-linktype=\"relative-path\">Alignment</a> property. To cause the items to be aligned based on a value that differs from that of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Alignment_\" data-linktype=\"relative-path\">Alignment</a> property, use the other version of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ArrangeIcons_\" data-linktype=\"relative-path\">ArrangeIcons</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ArrangeIcons_System_Windows_Forms_ListViewAlignment_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_ArrangeIcons_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ArrangeIcons(ListViewAlignment)</div>        \r\n          </div>\r\n    \r\n            <p>Arranges items in the control when they are displayed as icons with a specified alignment setting.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ArrangeIcons (System.Windows.Forms.ListViewAlignment value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewalignment\" data-linktype=\"relative-path\">ListViewAlignment</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.listviewalignment\" data-linktype=\"relative-path\">ListViewAlignment</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The value specified in the <code>value</code> parameter is not a member of the <a class=\"xref\" href=\"system.windows.forms.listviewalignment\" data-linktype=\"relative-path\">ListViewAlignment</a> enumeration.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ArrangeIcons method is only useful when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>. This version of the ArrangeIcons method arranges the icons in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> based on the <a class=\"xref\" href=\"system.windows.forms.listviewalignment\" data-linktype=\"relative-path\">ListViewAlignment</a> value specified in the <code>value</code> parameter. Calling this method does not change the value of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Alignment_\" data-linktype=\"relative-path\">Alignment</a> property of the control. This method is used to arrange icons on the control using a different value than that of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Alignment_\" data-linktype=\"relative-path\">Alignment</a> property. To cause the items to be aligned based on the value of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Alignment_\" data-linktype=\"relative-path\">Alignment</a> property, use the other version of the ArrangeIcons method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_AutoResizeColumn_System_Int32_System_Windows_Forms_ColumnHeaderAutoResizeStyle_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_AutoResizeColumn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeColumn(Int32,ColumnHeaderAutoResizeStyle)</div>        \r\n          </div>\r\n    \r\n            <p>Resizes the width of the given column as indicated by the resize style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AutoResizeColumn (int columnIndex, System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the column to resize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>headerAutoResize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.columnheaderautoresizestyle\" data-linktype=\"relative-path\">ColumnHeaderAutoResizeStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.columnheaderautoresizestyle\" data-linktype=\"relative-path\">ColumnHeaderAutoResizeStyle</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndex</code> is greater than 0 when <span class=\"xref\">stem.Windows.Forms.ListView.Columns*</span> is <code>null</code>  </p>\n<p> -or-  </p>\n<p> <code>columnIndex</code> is less than 0 or greater than the number of columns set.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>headerAutoResize</code> is not a member of the <a class=\"xref\" href=\"system.windows.forms.columnheaderautoresizestyle\" data-linktype=\"relative-path\">ColumnHeaderAutoResizeStyle</a> enumeration.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling this method is only effective once the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> and containing <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> have been constructed, and the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> column headers and columns are populated with items. If new items are added to the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>, the columns will not resize unless AutoResizeColumn is called again.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates initializing a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> in detail view and automatically resizing the columns using the AutoResizeColumn method. To run this example, paste this code into a Windows Form and call the <code>InitializeResizingListView</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListViewWhidbeyProperties#1\">    Private resizingListView As New ListView()\n    Private WithEvents button1 As New Button()\n\n\n    Private Sub InitializeResizingListView()\n        &#39; Set location and text for button.\n        button1.Location = New Point(100, 15)\n        button1.Text = &quot;Resize&quot;\n        AddHandler button1.Click, AddressOf button1_Click\n\n        &#39; Set the ListView to details view.\n        resizingListView.View = View.Details\n\n        &#39;Set size, location and populate the ListView.\n        resizingListView.Size = New Size(200, 100)\n        resizingListView.Location = New Point(40, 40)\n        resizingListView.Columns.Add(&quot;HeaderSize&quot;)\n        resizingListView.Columns.Add(&quot;ColumnContent&quot;)\n        Dim listItem1 As New ListViewItem(&quot;Short&quot;)\n        Dim listItem2 As New ListViewItem(&quot;Tiny&quot;)\n        listItem1.SubItems.Add(New ListViewItem.ListViewSubItem(listItem1, _\n            &quot;Something longer&quot;))\n        listItem2.SubItems.Add(New ListViewItem.ListViewSubItem(listItem2, _\n            &quot;Something even longer&quot;))\n        resizingListView.Items.Add(listItem1)\n        resizingListView.Items.Add(listItem2)\n\n        &#39; Add the ListView and the Button to the form.\n        Me.Controls.Add(resizingListView)\n        Me.Controls.Add(button1)\n\n    End Sub\n\n\n    Private Sub button1_Click(ByVal sender As Object, ByVal e As EventArgs) _\n        Handles button1.Click\n\n        &#39; Resize the first column to the header size.\n        resizingListView.AutoResizeColumn(0, _\n            ColumnHeaderAutoResizeStyle.HeaderSize)\n\n        &#39; Resize the second column to the column content.\n        resizingListView.AutoResizeColumn(1, _\n            ColumnHeaderAutoResizeStyle.ColumnContent)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListViewWhidbeyProperties#1\">        private ListView resizingListView = new ListView();\n        private Button button1 = new Button();\n\n        private void InitializeResizingListView()\n        {\n            // Set location and text for button.\n            button1.Location = new Point(100, 15);\n            button1.Text = &quot;Resize&quot;;\n            button1.Click += new EventHandler(button1_Click);\n\n            // Set the ListView to details view.\n            resizingListView.View = View.Details;\n\n            //Set size, location and populate the ListView.\n            resizingListView.Size = new Size(200, 100);\n            resizingListView.Location = new Point(40, 40);\n            resizingListView.Columns.Add(&quot;HeaderSize&quot;);\n            resizingListView.Columns.Add(&quot;ColumnContent&quot;);\n            ListViewItem listItem1 = new ListViewItem(&quot;Short&quot;);\n            ListViewItem listItem2 = new ListViewItem(&quot;Tiny&quot;);\n            listItem1.SubItems.Add(new ListViewItem.ListViewSubItem( \n                    listItem1, &quot;Something longer&quot;));\n            listItem2.SubItems.Add(new ListViewItem.ListViewSubItem(\n                listItem2, &quot;Something even longer&quot;));\n            resizingListView.Items.Add(listItem1);\n            resizingListView.Items.Add(listItem2);\n\n            // Add the ListView and the Button to the form.\n            this.Controls.Add(resizingListView);\n            this.Controls.Add(button1);\n        }\n\n        private void button1_Click(object sender, EventArgs e)\n        {\n            resizingListView.AutoResizeColumn(0, \n                ColumnHeaderAutoResizeStyle.HeaderSize);\n            resizingListView.AutoResizeColumn(1, \n                ColumnHeaderAutoResizeStyle.ColumnContent);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_AutoResizeColumns_System_Windows_Forms_ColumnHeaderAutoResizeStyle_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_AutoResizeColumns_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeColumns(ColumnHeaderAutoResizeStyle)</div>        \r\n          </div>\r\n    \r\n            <p>Resizes the width of the columns as indicated by the resize style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AutoResizeColumns (System.Windows.Forms.ColumnHeaderAutoResizeStyle headerAutoResize);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>headerAutoResize</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.columnheaderautoresizestyle\" data-linktype=\"relative-path\">ColumnHeaderAutoResizeStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.columnheaderautoresizestyle\" data-linktype=\"relative-path\">ColumnHeaderAutoResizeStyle</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.ListView.AutoResizeColumn*</span> is called with a value other than <a class=\"xref\" href=\"system.windows.forms.columnheaderautoresizestyle\" data-linktype=\"relative-path\">ColumnHeaderAutoResizeStyle</a> when <span class=\"xref\">stem.Windows.Forms.ListView.View*</span> is not set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling this method is only effective once the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> and containing <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> have been constructed, and the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> column headers and columns are populated with items. If new items are added to the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>, the columns will not resize unless AutoResizeColumns is called again.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates initializing a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> in detail view and automatically resizing the columns using the AutoResizeColumns method. To run this example, paste this code into a Windows Form and call the <code>InitializeResizingListView2</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListViewWhidbeyProperties#9\">    Private resizingListView2 As New ListView()\n    Private WithEvents resizeButton As New Button()\n    \n    \n    Private Sub InitializeResizingListView2() \n\n        &#39; Set location and text for button.\n        resizeButton.Location = New Point(100, 15)\n        resizeButton.Text = &quot;Resize&quot;\n\n        &#39; Set the ListView to details view.\n        resizingListView2.View = View.Details\n        \n        &#39;Set size, location and populate the ListView.\n        resizingListView2.Size = New Size(200, 100)\n        resizingListView2.Location = New Point(40, 40)\n        resizingListView2.Columns.Add(&quot;HeaderSize&quot;)\n        resizingListView2.Columns.Add(&quot;ColumnContent&quot;)\n        Dim listItem1 As New ListViewItem(&quot;Short&quot;)\n        Dim listItem2 As New ListViewItem(&quot;Tiny&quot;)\n        listItem1.SubItems.Add(New ListViewItem.ListViewSubItem(listItem1, _\n            &quot;Something longer&quot;))\n        listItem2.SubItems.Add(New ListViewItem.ListViewSubItem(listItem2, _\n            &quot;Something even longer&quot;))\n        resizingListView2.Items.Add(listItem1)\n        resizingListView2.Items.Add(listItem2)\n        \n        &#39; Add the ListView and the Button to the form.\n        Me.Controls.Add(resizingListView2)\n        Me.Controls.Add(resizeButton)\n    \n    End Sub\n    \n    Private Sub resizeButton_Click(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles resizeButton.Click\n\n        resizingListView2.AutoResizeColumns(ColumnHeaderAutoResizeStyle.HeaderSize)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListViewWhidbeyProperties#9\">      \tprivate ListView resizingListView2 = new ListView();\n        private Button resizeButton = new Button();\n\n        private void InitializeResizingListView2()\n        {\n            // Set location and text for button.\n            resizeButton.Location = new Point(100, 15);\n            button1.Text = &quot;Resize&quot;;\n            button1.Click += new EventHandler(button1_Click);\n\n            // Set the ListView to details view.\n            resizingListView2.View = View.Details;\n\n            //Set size, location and populate the ListView.\n            resizingListView2.Size = new Size(200, 100);\n            resizingListView2.Location = new Point(40, 40);\n            resizingListView2.Columns.Add(&quot;HeaderSize&quot;);\n            resizingListView2.Columns.Add(&quot;ColumnContent&quot;);\n            ListViewItem listItem1 = new ListViewItem(&quot;Short&quot;);\n            ListViewItem listItem2 = new ListViewItem(&quot;Tiny&quot;);\n            listItem1.SubItems.Add(new ListViewItem.ListViewSubItem(\n                    listItem1, &quot;Something longer&quot;));\n            listItem2.SubItems.Add(new ListViewItem.ListViewSubItem(\n                listItem2, &quot;Something even longer&quot;));\n            resizingListView2.Items.Add(listItem1);\n            resizingListView2.Items.Add(listItem2);\n\n            // Add the ListView and the Button to the form.\n            this.Controls.Add(resizingListView2);\n            this.Controls.Add(resizeButton);\n        }\n\n        private void resizeButton_Click(object sender, EventArgs e)\n        {\n            resizingListView2.AutoResizeColumns(ColumnHeaderAutoResizeStyle.HeaderSize);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_BeginUpdate\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_BeginUpdate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginUpdate()</div>        \r\n          </div>\r\n    \r\n            <p>Prevents the control from drawing until the <span class=\"xref\">stem.Windows.Forms.ListView.EndUpdate*</span> method is called.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void BeginUpdate ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The preferred way to add multiple items to a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is to use the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection#System_Windows_Forms_ListView_ListViewItemCollection_AddRange_\" data-linktype=\"relative-path\">AddRange</a> method of the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection\" data-linktype=\"relative-path\">ListView+ListViewItemCollection</a> (accessed through the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Items_\" data-linktype=\"relative-path\">Items</a> property of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>). This enables you to add an array of items to the list in a single operation. However, if you want to add items one at a time using the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection#System_Windows_Forms_ListView_ListViewItemCollection_Add_\" data-linktype=\"relative-path\">Add</a> method of the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection\" data-linktype=\"relative-path\">ListView+ListViewItemCollection</a> class, you can use the BeginUpdate method to prevent the control from repainting the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> every time that an item is added. When you have completed the task of adding items to the control, call the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_EndUpdate_\" data-linktype=\"relative-path\">EndUpdate</a> method to enable the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> to repaint. This way of adding items can prevent flickered drawing of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> when lots of items are being added to the control.  </p>\n<p> If BeginUpdate is called more than once, <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_EndUpdate_\" data-linktype=\"relative-path\">EndUpdate</a> must be called an equivalent number of times. Until the last call to <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_EndUpdate_\" data-linktype=\"relative-path\">EndUpdate</a> the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> will not repaint. Other than this, multiple calls to BeginUpdate have no effect.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates initializing a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control to contain check boxes. It also demonstrates how to use the BeginUpdate and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_EndUpdate_\" data-linktype=\"relative-path\">EndUpdate</a> methods. To run this example, paste the following code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>ListView1</code>. Call the <code>InititalizeListView</code> method from the form&#39;s constructor or <code>Load</code> method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView2#1\">\tprivate void InitializeListView()\n\t{\n\t\tthis.ListView1 = new System.Windows.Forms.ListView();\n\n\t\t// Set properties such as BackColor and DockStyle and Location.\n\t\tthis.ListView1.BackColor = System.Drawing.SystemColors.Control;\n\t\tthis.ListView1.Dock = System.Windows.Forms.DockStyle.Top;\n\t\tthis.ListView1.Location = new System.Drawing.Point(0, 0);\n\t\tthis.ListView1.Size = new System.Drawing.Size(292, 130);\n\t\tthis.ListView1.View = System.Windows.Forms.View.Details;\n\t\tthis.ListView1.HideSelection = false;\n\n\t\t// Allow the user to select multiple items.\n\t\tthis.ListView1.MultiSelect = true;\n\n\t\t// Show CheckBoxes in the ListView.\n\t\tthis.ListView1.CheckBoxes = true;\n\t\t\n\t\t//Set the column headers and populate the columns.\n\t\tListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable;\n\t\t\n\t\tColumnHeader columnHeader1 = new ColumnHeader();\n\t\tcolumnHeader1.Text = &quot;Breakfast Choices&quot;;\n\t\tcolumnHeader1.TextAlign = HorizontalAlignment.Left;\n\t\tcolumnHeader1.Width = 146;\n\n\t\tColumnHeader columnHeader2 = new ColumnHeader();\n\t\tcolumnHeader2.Text = &quot;Price Each&quot;;\n\t\tcolumnHeader2.TextAlign = HorizontalAlignment.Center;\n\t\tcolumnHeader2.Width = 142;\n\n       \tthis.ListView1.Columns.Add(columnHeader1);\n\t\tthis.ListView1.Columns.Add(columnHeader2);\n\n\t\tstring[] foodList = new string[]{&quot;Juice&quot;, &quot;Coffee&quot;, \n\t\t\t&quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, \n\t\t\t&quot;Bagel &amp; Cream Cheese&quot;};\n\n\t\tstring[] foodPrice = new string[]{&quot;1.09&quot;, &quot;1.09&quot;, &quot;2.19&quot;, \n\t\t\t&quot;2.79&quot;, &quot;2.09&quot;, &quot;2.69&quot;};\n\t\t\n\t\tint count;\n\n\t\t// Members are added one at a time, so call BeginUpdate to ensure \n\t\t// the list is painted only once, rather than as each list item is added.\n\t\tListView1.BeginUpdate();\n\n\t\tfor(count = 0; count &lt; foodList.Length; count++)\n\t\t{\n\t\t\tListViewItem listItem = new ListViewItem(foodList[count]);\n\t\t\tlistItem.SubItems.Add(foodPrice[count]);\n\t\t\tListView1.Items.Add(listItem);\n\t\t}\n\n\t\t//Call EndUpdate when you finish adding items to the ListView.\n\t\tListView1.EndUpdate();\n\t\tthis.Controls.Add(this.ListView1);\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView2#1\">    Private Sub InitializeListView()\n        Me.ListView1 = New System.Windows.Forms.ListView\n\n        &#39; Set properties such as BackColor, Location and Size\n        Me.ListView1.BackColor = System.Drawing.SystemColors.Control\n        Me.ListView1.Dock = System.Windows.Forms.DockStyle.Top\n        Me.ListView1.Location = New System.Drawing.Point(0, 0)\n        Me.ListView1.Size = New System.Drawing.Size(292, 130)\n        Me.ListView1.View = System.Windows.Forms.View.Details\n        Me.ListView1.HideSelection = False\n\n        &#39; Allow user to select multiple items.\n        Me.ListView1.MultiSelect = True\n\n        &#39; Show check boxes in the ListView.\n        Me.ListView1.CheckBoxes = True\n\n        &#39;Set the column headers and populate the columns.\n        ListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable\n        Dim columnHeader1 As New ColumnHeader\n        With columnHeader1\n            .Text = &quot;Breakfast Choices&quot;\n            .TextAlign = HorizontalAlignment.Left\n            .Width = 146\n        End With\n        Dim columnHeader2 As New ColumnHeader\n        With columnHeader2\n            .Text = &quot;Price Each&quot;\n            .TextAlign = HorizontalAlignment.Center\n            .Width = 142\n        End With\n        Me.ListView1.Columns.Add(columnHeader1)\n        Me.ListView1.Columns.Add(columnHeader2)\n        Dim foodList() As String = New String() {&quot;Juice&quot;, &quot;Coffee&quot;, _\n            &quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, _\n            &quot;Bagel &amp; Cream Cheese&quot;}\n\n        Dim foodPrice() As String = New String() {&quot;1.09&quot;, &quot;1.09&quot;, &quot;2.19&quot;, _\n            &quot;2.79&quot;, &quot;2.09&quot;, &quot;2.69&quot;}\n        Dim count As Integer\n\n        &#39; Members are added one at a time, so call BeginUpdate to ensure \n        &#39; the list is painted only once, rather than as each list item is added.\n        ListView1.BeginUpdate()\n\n        For count = 0 To foodList.Length - 1\n            Dim listItem As New ListViewItem(foodList(count))\n            listItem.SubItems.Add(foodPrice(count))\n            ListView1.Items.Add(listItem)\n        Next\n\n        &#39;Call EndUpdate when you finish adding items to the ListView.\n        ListView1.EndUpdate()\n        Me.Controls.Add(Me.ListView1)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView2#1\">   void InitializeListView()\n   {\n      this-&gt;ListView1 = gcnew System::Windows::Forms::ListView;\n      \n      // Set properties such as BackColor and DockStyle and Location.\n      this-&gt;ListView1-&gt;BackColor = System::Drawing::SystemColors::Control;\n      this-&gt;ListView1-&gt;Dock = System::Windows::Forms::DockStyle::Top;\n      this-&gt;ListView1-&gt;Location = System::Drawing::Point( 0, 0 );\n      this-&gt;ListView1-&gt;Size = System::Drawing::Size( 292, 130 );\n      this-&gt;ListView1-&gt;View = System::Windows::Forms::View::Details;\n      this-&gt;ListView1-&gt;HideSelection = false;\n      \n      // Allow the user to select multiple items.\n      this-&gt;ListView1-&gt;MultiSelect = true;\n      \n      // Show CheckBoxes in the ListView.\n      this-&gt;ListView1-&gt;CheckBoxes = true;\n      \n      //Set the column headers and populate the columns.\n      ListView1-&gt;HeaderStyle = ColumnHeaderStyle::Nonclickable;\n      ColumnHeader^ columnHeader1 = gcnew ColumnHeader;\n      columnHeader1-&gt;Text = &quot;Breakfast Choices&quot;;\n      columnHeader1-&gt;TextAlign = HorizontalAlignment::Left;\n      columnHeader1-&gt;Width = 146;\n      ColumnHeader^ columnHeader2 = gcnew ColumnHeader;\n      columnHeader2-&gt;Text = &quot;Price Each&quot;;\n      columnHeader2-&gt;TextAlign = HorizontalAlignment::Center;\n      columnHeader2-&gt;Width = 142;\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader1 );\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader2 );\n      array&lt;String^&gt;^foodList = {&quot;Juice&quot;,&quot;Coffee&quot;,&quot;Cereal &amp; Milk&quot;,&quot;Fruit Plate&quot;,&quot;Toast &amp; Jelly&quot;,&quot;Bagel &amp; Cream Cheese&quot;};\n      array&lt;String^&gt;^foodPrice = {&quot;1.09&quot;,&quot;1.09&quot;,&quot;2.19&quot;,&quot;2.79&quot;,&quot;2.09&quot;,&quot;2.69&quot;};\n      int count;\n      \n      // Members are added one at a time, so call BeginUpdate to ensure \n      // the list is painted only once, rather than as each list item is added.\n      ListView1-&gt;BeginUpdate();\n      for ( count = 0; count &lt; foodList-&gt;Length; count++ )\n      {\n         ListViewItem^ listItem = gcnew ListViewItem( foodList[ count ] );\n         listItem-&gt;SubItems-&gt;Add( foodPrice[ count ] );\n         ListView1-&gt;Items-&gt;Add( listItem );\n      }\n      \n      //Call EndUpdate when you finish adding items to the ListView.\n      ListView1-&gt;EndUpdate();\n      this-&gt;Controls-&gt;Add( this-&gt;ListView1 );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_Clear\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_Clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clear()</div>        \r\n          </div>\r\n    \r\n            <p>Removes all items and columns from the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Clear ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method to remove all items and columns from the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control without having to call the individual <code>Clear</code> methods from the <a class=\"xref\" href=\"system.windows.forms.listview.columnheadercollection\" data-linktype=\"relative-path\">ListView+ColumnHeaderCollection</a> and <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection\" data-linktype=\"relative-path\">ListView+ListViewItemCollection</a> classes.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The Clear method does not clear <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Groups_\" data-linktype=\"relative-path\">Groups</a> specified for the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. To clear <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Groups_\" data-linktype=\"relative-path\">Groups</a> call <a class=\"xref\" href=\"system.windows.forms.listviewgroupcollection#System_Windows_Forms_ListViewGroupCollection_Clear_\" data-linktype=\"relative-path\">Clear</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of Clear and <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_Selected_\" data-linktype=\"relative-path\">Selected</a> members. To run this example, paste the following code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>ListView1</code> and a button, located toward the bottom of the form, named <code>Button1</code>. Call the <code>InitializeListView</code> method from the form&#39;s constructor or <code>Load</code> method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView4#1\">\tprivate void InitializeListView()\n\t{\n\t\t// Set up the inital values for the ListView and populate it.\n\t\tthis.ListView1 = new ListView();\n\t\tthis.ListView1.Dock = DockStyle.Top;\n\t\tthis.ListView1.Location = new System.Drawing.Point(0, 0);\n\t\tthis.ListView1.Size = new System.Drawing.Size(292, 130);\n\t\tthis.ListView1.View = View.Details;\n\t\tthis.ListView1.FullRowSelect = true;\n\n\t\tstring[] breakfast = new string[]{&quot;Continental Breakfast&quot;, \n\t\t\t&quot;Pancakes and Sausage&quot;, &quot;Denver Omelet&quot;, &quot;Eggs &amp; Bacon&quot;, \n\t\t\t&quot;Bagel &amp; Cream Cheese&quot;};\n\n\t\tstring[] breakfastPrices = new string[]{&quot;3.09&quot;, &quot;4.09&quot;, \n\t\t\t&quot;4.19&quot;, &quot;4.79&quot;, &quot;2.09&quot;};\n\n\t\tPopulateMenu(&quot;Breakfast&quot;, breakfast, breakfastPrices);\n\t}\n\n\tprivate void PopulateMenu(string meal, \n\t\tstring[] menuItems, string[] menuPrices)\n\t{\n\t\tColumnHeader columnHeader1 = new ColumnHeader();\n\t\tcolumnHeader1.Text = meal + &quot; Choices&quot;;\n\t\tcolumnHeader1.TextAlign = HorizontalAlignment.Left;\n\t\tcolumnHeader1.Width = 146;\n\n\t\tColumnHeader columnHeader2 = new ColumnHeader();\n\t\tcolumnHeader2.Text = &quot;Price&quot;;\n\t\tcolumnHeader2.TextAlign = HorizontalAlignment.Center;\n\t\tcolumnHeader2.Width = 142;\n\n\t\tthis.ListView1.Columns.Add(columnHeader1);\n\t\tthis.ListView1.Columns.Add(columnHeader2);\n\n\t\tfor(int count=0; count &lt; menuItems.Length; count++)\n\t\t{\n\t\t\tListViewItem listItem = \n\t\t\t\tnew ListViewItem(menuItems[count]);\n\t\t\tlistItem.SubItems.Add(menuPrices[count]);\n\t\t\tListView1.Items.Add(listItem);\n\t\t}\n\n\t\t// Use the Selected property to select the first item on \n\t\t// the list.\n\t\tListView1.Focus();\n\t\tListView1.Items[0].Selected = true;\n\t}\n\n\n\tprivate void Button1_Click(System.Object sender, System.EventArgs e)\n\t{\n\t\t// Create new values for the ListView, clear the list, \n\t\t// and repopulate it.\n\t\tstring[] lunch = new string[]{&quot;Hamburger&quot;, &quot;Grilled Cheese&quot;,\n\t\t\t&quot;Soup &amp; Salad&quot;, &quot;Club Sandwich&quot;, &quot;Hotdog&quot;};\n\n\t\tstring[] lunchPrices = new string[]{&quot;4.09&quot;, &quot;5.09&quot;, &quot;5.19&quot;, \n\t\t\t&quot;4.79&quot;, &quot;2.09&quot;};\n\n\t\tListView1.Clear();\n\n\t\tPopulateMenu(&quot;Lunch&quot;, lunch, lunchPrices);\n\t\tButton1.Enabled = false;\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView4#1\">    Private Sub InitializeListView()\n\n        &#39; Set up the inital values for the ListView and populate it.\n        Me.ListView1 = New ListView\n        Me.ListView1.Dock = DockStyle.Top\n        Me.ListView1.Location = New System.Drawing.Point(0, 0)\n        Me.ListView1.Size = New System.Drawing.Size(292, 130)\n        Me.ListView1.View = View.Details\n        Me.ListView1.FullRowSelect = True\n\n        Dim breakfast() As String = New String() {&quot;Continental Breakfast&quot;, &quot;Pancakes and Sausage&quot;, _\n       &quot;Denver Omelet&quot;, &quot;Eggs &amp; Bacon&quot;, &quot;Bagel &amp; Cream Cheese&quot;}\n\n        Dim breakfastPrices() As String = New String() {&quot;3.09&quot;, &quot;4.09&quot;, &quot;4.19&quot;, _\n           &quot;4.79&quot;, &quot;2.09&quot;}\n\n        PopulateMenu(&quot;Breakfast&quot;, breakfast, breakfastPrices)\n    End Sub\n\n    Private Sub PopulateMenu(ByVal meal As String, _\n        ByVal menuItems() As String, ByVal menuPrices() As String)\n        Dim columnHeader1 As New ColumnHeader\n        With columnHeader1\n            .Text = meal &amp; &quot; Choices&quot;\n            .TextAlign = HorizontalAlignment.Left\n            .Width = 146\n        End With\n        Dim columnHeader2 As New ColumnHeader\n        With columnHeader2\n            .Text = &quot;Price&quot;\n            .TextAlign = HorizontalAlignment.Center\n            .Width = 142\n        End With\n        Me.ListView1.Columns.Add(columnHeader1)\n        Me.ListView1.Columns.Add(columnHeader2)\n\n        Dim count As Integer\n\n        For count = 0 To menuItems.Length - 1\n            Dim listItem As New ListViewItem(menuItems(count))\n            listItem.SubItems.Add(menuPrices(count))\n            ListView1.Items.Add(listItem)\n        Next\n\n        &#39; Use the Selected property to select the first item on \n        &#39; the list.\n        ListView1.Focus()\n        ListView1.Items(0).Selected = True\n    End Sub\n\n\n    Private Sub Button1_Click(ByVal sender As System.Object, _\n        ByVal e As System.EventArgs) Handles Button1.Click\n\n        &#39; Create new values for the ListView, clear the list, \n        &#39; and repopulate it.\n        Dim lunch() As String = New String() {&quot;Hamburger&quot;, _ \n            &quot;Grilled Cheese&quot;, &quot;Soup &amp; Salad&quot;, &quot;Club Sandwich&quot;, &quot;Hotdog&quot;}\n\n        Dim lunchPrices() As String = New String() {&quot;4.09&quot;, &quot;5.09&quot;, _\n            &quot;5.19&quot;, &quot;4.79&quot;, &quot;2.09&quot;}\n\n        ListView1.Clear()\n\n        PopulateMenu(&quot;Lunch&quot;, lunch, lunchPrices)\n        Button1.Enabled = False\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView4#1\">private:\n   void InitializeListView()\n   {\n      // Set up the inital values for the ListView and populate it.\n      this-&gt;ListView1 = gcnew ListView;\n      this-&gt;ListView1-&gt;Dock = DockStyle::Top;\n      this-&gt;ListView1-&gt;Location = System::Drawing::Point( 0, 0 );\n      this-&gt;ListView1-&gt;Size = System::Drawing::Size( 292, 130 );\n      this-&gt;ListView1-&gt;View = View::Details;\n      this-&gt;ListView1-&gt;FullRowSelect = true;\n      array&lt;String^&gt;^breakfast = {&quot;Continental Breakfast&quot;,&quot;Pancakes and Sausage&quot;,&quot;Denver Omelet&quot;,&quot;Eggs &amp; Bacon&quot;,&quot;Bagel &amp; Cream Cheese&quot;};\n      array&lt;String^&gt;^breakfastPrices = {&quot;3.09&quot;,&quot;4.09&quot;,&quot;4.19&quot;,&quot;4.79&quot;,&quot;2.09&quot;};\n      PopulateMenu( &quot;Breakfast&quot;, breakfast, breakfastPrices );\n   }\n\n   void PopulateMenu( String^ meal, array&lt;String^&gt;^menuItems, array&lt;String^&gt;^menuPrices )\n   {\n      ColumnHeader^ columnHeader1 = gcnew ColumnHeader;\n      columnHeader1-&gt;Text = String::Concat( meal, &quot; Choices&quot; );\n      columnHeader1-&gt;TextAlign = HorizontalAlignment::Left;\n      columnHeader1-&gt;Width = 146;\n      ColumnHeader^ columnHeader2 = gcnew ColumnHeader;\n      columnHeader2-&gt;Text = &quot;Price&quot;;\n      columnHeader2-&gt;TextAlign = HorizontalAlignment::Center;\n      columnHeader2-&gt;Width = 142;\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader1 );\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader2 );\n      for ( int count = 0; count &lt; menuItems-&gt;Length; count++ )\n      {\n         ListViewItem^ listItem = gcnew ListViewItem( menuItems[ count ] );\n         listItem-&gt;SubItems-&gt;Add( menuPrices[ count ] );\n         ListView1-&gt;Items-&gt;Add( listItem );\n\n      }\n      \n      // Use the Selected property to select the first item on \n      // the list.\n      ListView1-&gt;Focus();\n      ListView1-&gt;Items[ 0 ]-&gt;Selected = true;\n   }\n\n   void Button1_Click( System::Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Create new values for the ListView, clear the list, \n      // and repopulate it.\n      array&lt;String^&gt;^lunch = {&quot;Hamburger&quot;,&quot;Grilled Cheese&quot;,&quot;Soup &amp; Salad&quot;,&quot;Club Sandwich&quot;,&quot;Hotdog&quot;};\n      array&lt;String^&gt;^lunchPrices = {&quot;4.09&quot;,&quot;5.09&quot;,&quot;5.19&quot;,&quot;4.79&quot;,&quot;2.09&quot;};\n      ListView1-&gt;Clear();\n      PopulateMenu( &quot;Lunch&quot;, lunch, lunchPrices );\n      Button1-&gt;Enabled = false;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_CreateHandle\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_CreateHandle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateHandle()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a handle for the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void CreateHandle ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method when the component is no longer needed. This method removes the component from its container (if the component has a site) and triggers the dispose event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_EndUpdate\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_EndUpdate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndUpdate()</div>        \r\n          </div>\r\n    \r\n            <p>Resumes drawing of the list view control after drawing is suspended by the <span class=\"xref\">stem.Windows.Forms.ListView.BeginUpdate*</span> method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EndUpdate ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The preferred way to add multiple items to a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is to use the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection#System_Windows_Forms_ListView_ListViewItemCollection_AddRange_\" data-linktype=\"relative-path\">AddRange</a> method of the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection\" data-linktype=\"relative-path\">ListView+ListViewItemCollection</a> (accessed through the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Items_\" data-linktype=\"relative-path\">Items</a> property of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>). This enables you to add an array of items to the list in a single operation. However, if you want to add items one at a time using the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection#System_Windows_Forms_ListView_ListViewItemCollection_Add_\" data-linktype=\"relative-path\">Add</a> method of the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection\" data-linktype=\"relative-path\">ListView+ListViewItemCollection</a> class, you can use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_BeginUpdate_\" data-linktype=\"relative-path\">BeginUpdate</a> method to prevent the control from repainting the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> each time an item is added. Once you have completed the task of adding items to the control, call the EndUpdate method to enable the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> to repaint. This way of adding items can prevent flickered drawing of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> when a large number of items are being added to the control.  </p>\n<p> If <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_BeginUpdate_\" data-linktype=\"relative-path\">BeginUpdate</a> is called more than once, EndUpdate must be called an equivalent number of times. Until the last call to EndUpdate the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> will not repaint. Other than this, multiple calls to <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_BeginUpdate_\" data-linktype=\"relative-path\">BeginUpdate</a> have no effect.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates initializing a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control to contain check boxes. It also demonstrates using the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_BeginUpdate_\" data-linktype=\"relative-path\">BeginUpdate</a> and EndUpdate methods. To run this example, paste the following code into a form containing a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>ListView1</code>. Call the <code>InititalizeListView</code> method from the form&#39;s constructor or <code>Load</code> method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView2#1\">\tprivate void InitializeListView()\n\t{\n\t\tthis.ListView1 = new System.Windows.Forms.ListView();\n\n\t\t// Set properties such as BackColor and DockStyle and Location.\n\t\tthis.ListView1.BackColor = System.Drawing.SystemColors.Control;\n\t\tthis.ListView1.Dock = System.Windows.Forms.DockStyle.Top;\n\t\tthis.ListView1.Location = new System.Drawing.Point(0, 0);\n\t\tthis.ListView1.Size = new System.Drawing.Size(292, 130);\n\t\tthis.ListView1.View = System.Windows.Forms.View.Details;\n\t\tthis.ListView1.HideSelection = false;\n\n\t\t// Allow the user to select multiple items.\n\t\tthis.ListView1.MultiSelect = true;\n\n\t\t// Show CheckBoxes in the ListView.\n\t\tthis.ListView1.CheckBoxes = true;\n\t\t\n\t\t//Set the column headers and populate the columns.\n\t\tListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable;\n\t\t\n\t\tColumnHeader columnHeader1 = new ColumnHeader();\n\t\tcolumnHeader1.Text = &quot;Breakfast Choices&quot;;\n\t\tcolumnHeader1.TextAlign = HorizontalAlignment.Left;\n\t\tcolumnHeader1.Width = 146;\n\n\t\tColumnHeader columnHeader2 = new ColumnHeader();\n\t\tcolumnHeader2.Text = &quot;Price Each&quot;;\n\t\tcolumnHeader2.TextAlign = HorizontalAlignment.Center;\n\t\tcolumnHeader2.Width = 142;\n\n       \tthis.ListView1.Columns.Add(columnHeader1);\n\t\tthis.ListView1.Columns.Add(columnHeader2);\n\n\t\tstring[] foodList = new string[]{&quot;Juice&quot;, &quot;Coffee&quot;, \n\t\t\t&quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, \n\t\t\t&quot;Bagel &amp; Cream Cheese&quot;};\n\n\t\tstring[] foodPrice = new string[]{&quot;1.09&quot;, &quot;1.09&quot;, &quot;2.19&quot;, \n\t\t\t&quot;2.79&quot;, &quot;2.09&quot;, &quot;2.69&quot;};\n\t\t\n\t\tint count;\n\n\t\t// Members are added one at a time, so call BeginUpdate to ensure \n\t\t// the list is painted only once, rather than as each list item is added.\n\t\tListView1.BeginUpdate();\n\n\t\tfor(count = 0; count &lt; foodList.Length; count++)\n\t\t{\n\t\t\tListViewItem listItem = new ListViewItem(foodList[count]);\n\t\t\tlistItem.SubItems.Add(foodPrice[count]);\n\t\t\tListView1.Items.Add(listItem);\n\t\t}\n\n\t\t//Call EndUpdate when you finish adding items to the ListView.\n\t\tListView1.EndUpdate();\n\t\tthis.Controls.Add(this.ListView1);\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView2#1\">    Private Sub InitializeListView()\n        Me.ListView1 = New System.Windows.Forms.ListView\n\n        &#39; Set properties such as BackColor, Location and Size\n        Me.ListView1.BackColor = System.Drawing.SystemColors.Control\n        Me.ListView1.Dock = System.Windows.Forms.DockStyle.Top\n        Me.ListView1.Location = New System.Drawing.Point(0, 0)\n        Me.ListView1.Size = New System.Drawing.Size(292, 130)\n        Me.ListView1.View = System.Windows.Forms.View.Details\n        Me.ListView1.HideSelection = False\n\n        &#39; Allow user to select multiple items.\n        Me.ListView1.MultiSelect = True\n\n        &#39; Show check boxes in the ListView.\n        Me.ListView1.CheckBoxes = True\n\n        &#39;Set the column headers and populate the columns.\n        ListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable\n        Dim columnHeader1 As New ColumnHeader\n        With columnHeader1\n            .Text = &quot;Breakfast Choices&quot;\n            .TextAlign = HorizontalAlignment.Left\n            .Width = 146\n        End With\n        Dim columnHeader2 As New ColumnHeader\n        With columnHeader2\n            .Text = &quot;Price Each&quot;\n            .TextAlign = HorizontalAlignment.Center\n            .Width = 142\n        End With\n        Me.ListView1.Columns.Add(columnHeader1)\n        Me.ListView1.Columns.Add(columnHeader2)\n        Dim foodList() As String = New String() {&quot;Juice&quot;, &quot;Coffee&quot;, _\n            &quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, _\n            &quot;Bagel &amp; Cream Cheese&quot;}\n\n        Dim foodPrice() As String = New String() {&quot;1.09&quot;, &quot;1.09&quot;, &quot;2.19&quot;, _\n            &quot;2.79&quot;, &quot;2.09&quot;, &quot;2.69&quot;}\n        Dim count As Integer\n\n        &#39; Members are added one at a time, so call BeginUpdate to ensure \n        &#39; the list is painted only once, rather than as each list item is added.\n        ListView1.BeginUpdate()\n\n        For count = 0 To foodList.Length - 1\n            Dim listItem As New ListViewItem(foodList(count))\n            listItem.SubItems.Add(foodPrice(count))\n            ListView1.Items.Add(listItem)\n        Next\n\n        &#39;Call EndUpdate when you finish adding items to the ListView.\n        ListView1.EndUpdate()\n        Me.Controls.Add(Me.ListView1)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView2#1\">   void InitializeListView()\n   {\n      this-&gt;ListView1 = gcnew System::Windows::Forms::ListView;\n      \n      // Set properties such as BackColor and DockStyle and Location.\n      this-&gt;ListView1-&gt;BackColor = System::Drawing::SystemColors::Control;\n      this-&gt;ListView1-&gt;Dock = System::Windows::Forms::DockStyle::Top;\n      this-&gt;ListView1-&gt;Location = System::Drawing::Point( 0, 0 );\n      this-&gt;ListView1-&gt;Size = System::Drawing::Size( 292, 130 );\n      this-&gt;ListView1-&gt;View = System::Windows::Forms::View::Details;\n      this-&gt;ListView1-&gt;HideSelection = false;\n      \n      // Allow the user to select multiple items.\n      this-&gt;ListView1-&gt;MultiSelect = true;\n      \n      // Show CheckBoxes in the ListView.\n      this-&gt;ListView1-&gt;CheckBoxes = true;\n      \n      //Set the column headers and populate the columns.\n      ListView1-&gt;HeaderStyle = ColumnHeaderStyle::Nonclickable;\n      ColumnHeader^ columnHeader1 = gcnew ColumnHeader;\n      columnHeader1-&gt;Text = &quot;Breakfast Choices&quot;;\n      columnHeader1-&gt;TextAlign = HorizontalAlignment::Left;\n      columnHeader1-&gt;Width = 146;\n      ColumnHeader^ columnHeader2 = gcnew ColumnHeader;\n      columnHeader2-&gt;Text = &quot;Price Each&quot;;\n      columnHeader2-&gt;TextAlign = HorizontalAlignment::Center;\n      columnHeader2-&gt;Width = 142;\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader1 );\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader2 );\n      array&lt;String^&gt;^foodList = {&quot;Juice&quot;,&quot;Coffee&quot;,&quot;Cereal &amp; Milk&quot;,&quot;Fruit Plate&quot;,&quot;Toast &amp; Jelly&quot;,&quot;Bagel &amp; Cream Cheese&quot;};\n      array&lt;String^&gt;^foodPrice = {&quot;1.09&quot;,&quot;1.09&quot;,&quot;2.19&quot;,&quot;2.79&quot;,&quot;2.09&quot;,&quot;2.69&quot;};\n      int count;\n      \n      // Members are added one at a time, so call BeginUpdate to ensure \n      // the list is painted only once, rather than as each list item is added.\n      ListView1-&gt;BeginUpdate();\n      for ( count = 0; count &lt; foodList-&gt;Length; count++ )\n      {\n         ListViewItem^ listItem = gcnew ListViewItem( foodList[ count ] );\n         listItem-&gt;SubItems-&gt;Add( foodPrice[ count ] );\n         ListView1-&gt;Items-&gt;Add( listItem );\n      }\n      \n      //Call EndUpdate when you finish adding items to the ListView.\n      ListView1-&gt;EndUpdate();\n      this-&gt;Controls-&gt;Add( this-&gt;ListView1 );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_EnsureVisible_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_EnsureVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnsureVisible(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Ensures that the specified item is visible within the control, scrolling the contents of the control if necessary.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnsureVisible (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the item to scroll into view.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method to ensure that a specific item is visible within the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. When performing validation on the items in a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>, you can call the EnsureVisible method to ensure that an item that failed validation is displayed in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control to allow the user to perform changes on the item. If the item that you want to ensure is visible is located above the viewable region of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control, calling the EnsureVisible method will scroll the contents of the control until it is the first item in the viewable area of the control. If the item is below the viewable region of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control, calling the EnsureVisible method will scroll the contents of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control until the item is the last item in the viewable area of the control.  </p>\n<p> To determine if an item is located at the top of the display area of a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control, use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_TopItem_\" data-linktype=\"relative-path\">TopItem</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_FindItemWithText_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_FindItemWithText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FindItemWithText(String)</div>        \r\n          </div>\r\n    \r\n            <p>Finds the first <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> that begins with the specified text value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListViewItem FindItemWithText (string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to search for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a></div>\r\n                  </div>\r\n                  <p>The first <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> that begins with the specified text value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The search is case-insensitive.  </p>\n<p> The <code>text</code> parameter can specify a substring of the desired matching text. In addition, this method will return the first item that starts with the specified text. For example, if a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> contains two list itemsâ€”the first item&#39;s text set to &quot;angle bracket&quot; and the second item&#39;s text set to &quot;bracket&quot;â€”a call to FindItemWithText passing <code>brack</code> as the parameter will return the item whose text is &quot;bracket&quot;.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindItemWithText_\" data-linktype=\"relative-path\">FindItemWithText</a> method returns <code>null</code> if the list is empty or there is no matching item.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the FindItemWithText method. To run this example, paste the following code into a Windows Form and call the <code>InitializeFindListView</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler. Click the button to see the results of the method call.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListViewWhidbeyProperties#3\">    &#39; Declare the ListView and Button for the example.\n    Private findListView As New ListView()\n    Private WithEvents findButton As New Button()\n\n\n    Private Sub InitializeFindListView()\n\n        &#39; Set up the location and event handling for the button.\n        findButton.Location = New Point(10, 10)\n\n        &#39; Set up the location of the ListView and add some items.\n        findListView.Location = New Point(10, 30)\n        findListView.Items.Add(New ListViewItem(&quot;angle bracket&quot;))\n        findListView.Items.Add(New ListViewItem(&quot;bracket holder&quot;))\n        findListView.Items.Add(New ListViewItem(&quot;bracket&quot;))\n\n        &#39; Add the button and ListView to the form.\n        Me.Controls.Add(findButton)\n        Me.Controls.Add(findListView)\n\n    End Sub\n\n    Private Sub findButton_Click(ByVal sender As Object, ByVal e As EventArgs) _\n        Handles findButton.Click\n\n        &#39; Call FindItemWithText, sending output to MessageBox.\n        Dim item1 As ListViewItem = findListView.FindItemWithText(&quot;brack&quot;)\n        If (item1 IsNot Nothing) Then\n            MessageBox.Show(&quot;Calling FindItemWithText passing &#39;brack&#39;: &quot; _\n                &amp; item1.ToString())\n        Else\n            MessageBox.Show(&quot;Calling FindItemWithText passing &#39;brack&#39;: null&quot;)\n        End If\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListViewWhidbeyProperties#3\">\t\t// Declare the ListView and Button for the example.\n        ListView findListView = new ListView();\n        Button findButton = new Button();\n\n        private void InitializeFindListView()\n        {\n\t    // Set up the location and event handling for the button.\n            findButton.Click += new EventHandler(findButton_Click);\n            findButton.Location = new Point(10, 10);\n\t\t\t\n\t    // Set up the location of the ListView and add some items.\n\t    findListView.Location = new Point(10, 30);\n            findListView.Items.Add(new ListViewItem(&quot;angle bracket&quot;));\n            findListView.Items.Add(new ListViewItem(&quot;bracket holder&quot;));\n            findListView.Items.Add(new ListViewItem(&quot;bracket&quot;));\n\n            // Add the button and ListView to the form.\n            this.Controls.Add(findButton);\n            this.Controls.Add(findListView);\n        }\n\n\t\tvoid findButton_Click(object sender, EventArgs e)\n\t\t{\n\t            // Call FindItemWithText, sending output to MessageBox.\n\t\t    ListViewItem item1 = findListView.FindItemWithText(&quot;brack&quot;);\n\t\t\t if (item1 != null)\n\t\t\t\t MessageBox.Show(&quot;Calling FindItemWithText passing &#39;brack&#39;: &quot; \n                     + item1.ToString());\n\t\t\t else\n\t\t\t\t MessageBox.Show(&quot;Calling FindItemWithText passing &#39;brack&#39;: null&quot;);\n\t\t }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_FindItemWithText_System_String_System_Boolean_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_FindItemWithText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FindItemWithText(String,Boolean,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Finds the first <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> or <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a>, if indicated, that begins with the specified text value. The search starts at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to search for.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>includeSubItemsInSearch</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to include subitems in the search; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the item at which to start the search.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a></div>\r\n                  </div>\r\n                  <p>The first <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> that begins with the specified text value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>startIndex</code> is less 0 or more than the number items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The search is case-insensitive.  </p>\n<p> The <code>text</code> parameter can specify a substring of the desired matching text. In addition, this method will return the first item that starts with the specified text. For example, if a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> contains two list itemsâ€”the first item&#39;s text set to &quot;angle bracket&quot; and the second item&#39;s text set to &quot;bracket&quot;â€”a call to <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindItemWithText_\" data-linktype=\"relative-path\">FindItemWithText</a> passing &quot;brack&quot; as the parameter will return the item whose text is &quot;bracket&quot;.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindItemWithText_\" data-linktype=\"relative-path\">FindItemWithText</a> method returns <code>null</code> if the list is empty or there is no matching item.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_FindItemWithText_System_String_System_Boolean_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_FindItemWithText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FindItemWithText(String,Boolean,Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Finds the first <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> or <a class=\"xref\" href=\"system.windows.forms.listviewitem.listviewsubitem\" data-linktype=\"relative-path\">ListViewItem+ListViewSubItem</a>, if indicated, that begins with the specified text value. The search starts at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListViewItem FindItemWithText (string text, bool includeSubItemsInSearch, int startIndex, bool isPrefixSearch);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The text to search for.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>includeSubItemsInSearch</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to include subitems in the search; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the item at which to start the search.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isPrefixSearch</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to allow partial matches; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a></div>\r\n                  </div>\r\n                  <p>The first <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> that begins with the specified text value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>startIndex</code> is less than 0 or more than the number of items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindItemWithText_\" data-linktype=\"relative-path\">FindItemWithText</a> method returns <code>null</code> if the list is empty or there is no matching item.  </p>\n<p> The search is case-insensitive.  </p>\n<p> The <code>text</code> parameter can specify a substring of the desired matching text. This method will return the first item that starts with the specified text, unless <code>false</code> is passed in for <code>isPrefixSearch</code>. For example, if a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> contains two list itemsâ€”the first item&#39;s text set to &quot;angle bracket&quot; and the second item&#39;s text set to &quot;bracket&quot;â€”a call to <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindItemWithText_\" data-linktype=\"relative-path\">FindItemWithText</a> passing &quot;brack&quot; as the search text will return the item whose text is &quot;bracket&quot;. If <code>isPrefixSearch</code> is set to <code>false</code>, this call will return <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_FindNearestItem_System_Windows_Forms_SearchDirectionHint_System_Drawing_Point_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_FindNearestItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FindNearestItem(SearchDirectionHint,Point)</div>        \r\n          </div>\r\n    \r\n            <p>Finds the next item from the given point, searching in the specified direction</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint dir, System.Drawing.Point point);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dir</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.searchdirectionhint\" data-linktype=\"relative-path\">SearchDirectionHint</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.searchdirectionhint\" data-linktype=\"relative-path\">SearchDirectionHint</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The point at which to begin searching.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> that is closest to the given point, searching in the specified direction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.ListView.View*</span> is set to a value other than <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindNearestItem_\" data-linktype=\"relative-path\">FindNearestItem</a> method returns <code>null</code> if no item is found in the given direction. Identifying the nearest item can vary depending on the operating system the application is running on, and will affect the results of FindNearestItem.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_FindNearestItem_System_Windows_Forms_SearchDirectionHint_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_FindNearestItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FindNearestItem(SearchDirectionHint,Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Finds the next item from the given x- and y-coordinates, searching in the specified direction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListViewItem FindNearestItem (System.Windows.Forms.SearchDirectionHint searchDirection, int x, int y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>searchDirection</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.searchdirectionhint\" data-linktype=\"relative-path\">SearchDirectionHint</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.searchdirectionhint\" data-linktype=\"relative-path\">SearchDirectionHint</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate for the point at which to begin searching.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate for the point at which to begin searching.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> that is closest to the given coordinates, searching in the specified direction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.ListView.View*</span> is set to a value other than <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a> or <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindNearestItem_\" data-linktype=\"relative-path\">FindNearestItem</a> method returns <code>null</code> if no item is found in the given direction. Identifying the nearest item can vary depending on the operating system the application is running on, and will affect the results of FindNearestItem.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_GetItemAt_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_GetItemAt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetItemAt(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the item at the specified location.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListViewItem GetItemAt (int x, int y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate of the location to search for an item (expressed in client coordinates).</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate of the location to search for an item (expressed in client coordinates).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> that represents the item at the specified position. If there is no item at the specified location, the method returns <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetItemAt method lets you determine which item is located at a specific location within the client region of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. You can use this method when the user clicks or right-clicks a subitem (when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <code>View.Details</code>) and you want to determine which item owns the subitem that was clicked based on the mouse coordinates at the time the user clicked the mouse.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> When the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a> property value is <code>false</code>, this method returns an item only when the specified location is within the bounds of the parent item (which is displayed in the first column when the control is in details mode). You must set the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a> property to <code>true</code> to retrieve an item with this method given a location within the bounds of a subitem. You can also use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_HitTest_\" data-linktype=\"relative-path\">HitTest</a> method to retrieve detailed information about the item at a particular location.  </p>\n</div>\n<p> To do drag-and-drop repositioning of items within a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>, you might want to use the <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_NearestIndex_\" data-linktype=\"relative-path\">NearestIndex</a> method rather than the GetItemAt method. The <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark#System_Windows_Forms_ListViewInsertionMark_NearestIndex_\" data-linktype=\"relative-path\">NearestIndex</a> method finds the closest item regardless of where the mouse pointer is located. The GetItemAt method, on the other hand, returns <code>null</code> if there is no item at the specified location.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.listviewinsertionmark\" data-linktype=\"relative-path\">ListViewInsertionMark</a> class is supported only on Windows XP and Windows Server 2003 when your application calls the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_EnableVisualStyles_\" data-linktype=\"relative-path\">EnableVisualStyles</a> method.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the <a class=\"xref\" href=\"system.windows.forms.picturebox\" data-linktype=\"relative-path\">PictureBox</a> and <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> controls. The <a class=\"xref\" href=\"system.windows.forms.picturebox\" data-linktype=\"relative-path\">PictureBox</a> is initialized by setting the <a class=\"xref\" href=\"system.windows.forms.picturebox#System_Windows_Forms_PictureBox_BorderStyle_\" data-linktype=\"relative-path\">BorderStyle</a> and <a class=\"xref\" href=\"system.windows.forms.picturebox#System_Windows_Forms_PictureBox_SizeMode_\" data-linktype=\"relative-path\">SizeMode</a> properties using the <a class=\"xref\" href=\"system.windows.forms.borderstyle\" data-linktype=\"relative-path\">BorderStyle</a> and <a class=\"xref\" href=\"system.windows.forms.pictureboxsizemode\" data-linktype=\"relative-path\">PictureBoxSizeMode</a> enumerations, respectively. The <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is populated with pictures from the Samples directory. The GetItemAt method is used in when handling the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> event to determine whether an item is selected. If an item is selected, the event handler displays the selected file by setting the <a class=\"xref\" href=\"system.windows.forms.picturebox#System_Windows_Forms_PictureBox_Image_\" data-linktype=\"relative-path\">Image</a> property. The example requires the existence of JPG files located in the C:\\documents and Settings\\All Users\\Documents\\My Pictures\\Sample Pictures directory. To run this example, paste the code into a form and call the <code>InitializePictureBox</code> and <code>PopulateListView</code> methods in the form&#39;s constructor or <code>Load</code> method. Ensure all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListViewAndPictureBox#2\">private:\n   void PopulateListView()\n   {\n      ListView1-&gt;Width = 270;\n      ListView1-&gt;Location = System::Drawing::Point( 10, 10 );\n      \n      // Declare and construct the ColumnHeader objects.\n      ColumnHeader^ header1;\n      ColumnHeader^ header2;\n      header1 = gcnew ColumnHeader;\n      header2 = gcnew ColumnHeader;\n      \n      // Set the text, alignment and width for each column header.\n      header1-&gt;Text = &quot;File name&quot;;\n      header1-&gt;TextAlign = HorizontalAlignment::Left;\n      header1-&gt;Width = 70;\n      header2-&gt;TextAlign = HorizontalAlignment::Left;\n      header2-&gt;Text = &quot;Location&quot;;\n      header2-&gt;Width = 200;\n      \n      // Add the headers to the ListView control.\n      ListView1-&gt;Columns-&gt;Add( header1 );\n      ListView1-&gt;Columns-&gt;Add( header2 );\n            \n\t  // Specify that each item appears on a separate line.\n      ListView1-&gt;View = View::Details;\n\n\t  // Populate the ListView.Items property.\n      // Set the directory to the sample picture directory.\n      System::IO::DirectoryInfo^ dirInfo = gcnew System::IO::DirectoryInfo( &quot;C:\\\\Documents and Settings\\\\All Users&quot;\n      &quot;\\\\Documents\\\\My Pictures\\\\Sample Pictures&quot; );\n      \n      // Get the .jpg files from the directory\n      array&lt;System::IO::FileInfo^&gt;^files = dirInfo-&gt;GetFiles( &quot;*.jpg&quot; );\n      \n      // Add each file name and full name including path\n      // to the ListView.\n      if ( files != nullptr )\n      {\n         System::Collections::IEnumerator^ myEnum = files-&gt;GetEnumerator();\n         while ( myEnum-&gt;MoveNext() )\n         {\n            System::IO::FileInfo^ file = safe_cast&lt;System::IO::FileInfo^&gt;(myEnum-&gt;Current);\n            ListViewItem^ item = gcnew ListViewItem( file-&gt;Name );\n            item-&gt;SubItems-&gt;Add( file-&gt;FullName );\n            ListView1-&gt;Items-&gt;Add( item );\n         }\n      }\n   }\n\n   void InitializePictureBox()\n   {\n      PictureBox1 = gcnew PictureBox;\n      \n      // Set the location and size of the PictureBox control.\n      this-&gt;PictureBox1-&gt;Location = System::Drawing::Point( 70, 120 );\n      this-&gt;PictureBox1-&gt;Size = System::Drawing::Size( 140, 140 );\n      this-&gt;PictureBox1-&gt;TabStop = false;\n      \n      // Set the SizeMode property to the StretchImage value.  This\n      // will shrink or enlarge the image as needed to fit into\n      // the PictureBox.\n      this-&gt;PictureBox1-&gt;SizeMode = PictureBoxSizeMode::StretchImage;\n      \n      // Set the border style to a three-dimensional border.\n      this-&gt;PictureBox1-&gt;BorderStyle = BorderStyle::Fixed3D;\n      \n      // Add the PictureBox to the form.\n      this-&gt;Controls-&gt;Add( this-&gt;PictureBox1 );\n   }\n\n   void ListView1_MouseDown( Object^ /*sender*/, MouseEventArgs^ e )\n   {\n      ListViewItem^ selection = ListView1-&gt;GetItemAt( e-&gt;X, e-&gt;Y );\n      \n      // If the user selects an item in the ListView, display\n      // the image in the PictureBox.\n      if ( selection != nullptr )\n      {\n         PictureBox1-&gt;Image = System::Drawing::Image::FromFile( selection-&gt;SubItems[ 1 ]-&gt;Text );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListViewAndPictureBox#2\">\tprivate void PopulateListView()\n\t{\n\t\tListView1.Width = 270;\n\t\tListView1.Location = new System.Drawing.Point(10, 10);\n\n\t\t// Declare and construct the ColumnHeader objects.\n\t\tColumnHeader header1, header2;\n\t\theader1 = new ColumnHeader();\n\t\theader2 = new ColumnHeader();\n\n\t\t// Set the text, alignment and width for each column header.\n\t\theader1.Text = &quot;File name&quot;;\n\t\theader1.TextAlign = HorizontalAlignment.Left;\n\t\theader1.Width = 70;\n\n\t\theader2.TextAlign = HorizontalAlignment.Left;\n\t\theader2.Text = &quot;Location&quot;;\n\t\theader2.Width = 200;\n\n\t\t// Add the headers to the ListView control.\n\t\tListView1.Columns.Add(header1);\n\t\tListView1.Columns.Add(header2);\n\n        // Specify that each item appears on a separate line.\n        ListView1.View = View.Details;\n        \n        // Populate the ListView.Items property.\n\t\t// Set the directory to the sample picture directory.\n\t\tSystem.IO.DirectoryInfo dirInfo = \n\t\t\tnew System.IO.DirectoryInfo(\n\t\t\t&quot;C:\\\\Documents and Settings\\\\All Users&quot; +\n\t\t\t&quot;\\\\Documents\\\\My Pictures\\\\Sample Pictures&quot;);\n\t\t\n\n\t\t// Get the .jpg files from the directory\n\t\tSystem.IO.FileInfo[] files = dirInfo.GetFiles(&quot;*.jpg&quot;);\n\n\t\t// Add each file name and full name including path\n\t\t// to the ListView.\n\t\tif (files != null)\n\t\t{\n\t\t\tforeach ( System.IO.FileInfo file in files )\n\t\t\t{\n\t\t\t\tListViewItem item = new ListViewItem(file.Name);\n\t\t\t\titem.SubItems.Add(file.FullName);\n\t\t\t\tListView1.Items.Add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate void InitializePictureBox()\n\t{\n\t\tPictureBox1 = new PictureBox();\n\n\t\t// Set the location and size of the PictureBox control.\n\t\tthis.PictureBox1.Location = new System.Drawing.Point(70, 120);\n\t\tthis.PictureBox1.Size = new System.Drawing.Size(140, 140);\n\t\tthis.PictureBox1.TabStop = false;\n\n\t\t// Set the SizeMode property to the StretchImage value.  This\n\t\t// will shrink or enlarge the image as needed to fit into\n\t\t// the PictureBox.\n\t\tthis.PictureBox1.SizeMode = PictureBoxSizeMode.StretchImage;\n\n\t\t// Set the border style to a three-dimensional border.\n\t\tthis.PictureBox1.BorderStyle = BorderStyle.Fixed3D;\n\n\t\t// Add the PictureBox to the form.\n\t\tthis.Controls.Add(this.PictureBox1);\n\n\t}\n\n\n\tprivate void ListView1_MouseDown(object sender, MouseEventArgs e)\n\t{\n\n\t\tListViewItem selection = ListView1.GetItemAt(e.X, e.Y);\n\n\t\t// If the user selects an item in the ListView, display\n\t\t// the image in the PictureBox.\n\t\tif (selection != null)\n\t\t{\n\t\t\tPictureBox1.Image = System.Drawing.Image.FromFile(\n\t\t\t\tselection.SubItems[1].Text);\n\t\t}\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListViewAndPictureBox#2\">    Private Sub PopulateListView()\n        ListView1.Width = 270\n        ListView1.Location = New System.Drawing.Point(10, 10)\n\n        &#39; Declare and construct the ColumnHeader objects.\n        Dim header1, header2 As ColumnHeader\n        header1 = New ColumnHeader\n        header2 = New ColumnHeader\n\n        &#39; Set the text, alignment and width for each column header.\n        header1.Text = &quot;File name&quot;\n        header1.TextAlign = HorizontalAlignment.Left\n        header1.Width = 70\n\n        header2.TextAlign = HorizontalAlignment.Left\n        header2.Text = &quot;Location&quot;\n        header2.Width = 200\n\n        &#39; Add the headers to the ListView control.\n        ListView1.Columns.Add(header1)\n        ListView1.Columns.Add(header2)\n\n        &#39; Specify that each item appears on a separate line.\n        ListView1.View = View.Details\n\n        &#39; Populate the ListView.Items property.\n        &#39; Set the directory to the sample picture directory.\n        Dim dirInfo As New System.IO.DirectoryInfo _\n            (&quot;C:\\Documents and Settings\\All Users&quot; _\n            &amp; &quot;\\Documents\\My Pictures\\Sample Pictures&quot;)\n        Dim file As System.IO.FileInfo\n\n        &#39; Get the .jpg files from the directory\n        Dim files() As System.io.FileInfo = dirInfo.GetFiles(&quot;*.jpg&quot;)\n\n        &#39; Add each file name and full name including path\n        &#39; to the ListView.\n        If (files IsNot Nothing) Then\n            For Each file In files\n                Dim item As New ListViewItem(file.Name)\n                item.SubItems.Add(file.FullName)\n                ListView1.Items.Add(item)\n            Next\n        End If\n    End Sub\n\n    Private Sub InitializePictureBox()\n        PictureBox1 = New PictureBox\n\n        &#39; Set the location and size of the PictureBox control.\n        Me.PictureBox1.Location = New System.Drawing.Point(70, 120)\n        Me.PictureBox1.Size = New System.Drawing.Size(140, 140)\n        Me.PictureBox1.TabStop = False\n\n        &#39; Set the SizeMode property to the StretchImage value.  This\n        &#39; will shrink or enlarge the image as needed to fit into\n        &#39; the PictureBox.\n        Me.PictureBox1.SizeMode = PictureBoxSizeMode.StretchImage\n\n        &#39; Set the border style to a three-dimensional border.\n        Me.PictureBox1.BorderStyle = BorderStyle.Fixed3D\n\n        &#39; Add the PictureBox to the form.\n        Me.Controls.Add(Me.PictureBox1)\n\n    End Sub\n\n\n    Private Sub ListView1_MouseDown(ByVal sender As Object, _\n        ByVal e As MouseEventArgs) Handles ListView1.MouseDown\n\n        Dim selection As ListViewItem = ListView1.GetItemAt(e.X, e.Y)\n\n        &#39; If the user selects an item in the ListView, display\n        &#39; the image in the PictureBox.\n        If (selection IsNot Nothing) Then\n            PictureBox1.Image = System.Drawing.Image.FromFile _\n                (selection.SubItems(1).Text)\n        End If\n\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_GetItemRect_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_GetItemRect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetItemRect(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the bounding rectangle for a specific item within the list view control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle GetItemRect (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the item within the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection\" data-linktype=\"relative-path\">ListView+ListViewItemCollection</a> whose bounding rectangle you want to return.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the bounding rectangle of the specified <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The bounding rectangle returned by this version of the GetItemRect method represents the entire item, including the icon, item text, and subitem text. To specify a specific portion of the item&#39;s bounding rectangle, use the other version of the GetItemRect method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_GetItemRect_System_Int32_System_Windows_Forms_ItemBoundsPortion_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_GetItemRect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetItemRect(Int32,ItemBoundsPortion)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the specified portion of the bounding rectangle for a specific item within the list view control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle GetItemRect (int index, System.Windows.Forms.ItemBoundsPortion portion);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the item within the <a class=\"xref\" href=\"system.windows.forms.listview.listviewitemcollection\" data-linktype=\"relative-path\">ListView+ListViewItemCollection</a> whose bounding rectangle you want to return.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>portion</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.itemboundsportion\" data-linktype=\"relative-path\">ItemBoundsPortion</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.itemboundsportion\" data-linktype=\"relative-path\">ItemBoundsPortion</a> values that represents a portion of the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> for which to retrieve the bounding rectangle.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the bounding rectangle for the specified portion of the specified <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The bounding rectangle returned by this version of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GetItemRect_\" data-linktype=\"relative-path\">GetItemRect</a> method represents only the section of the item specified in the <code>portion</code> parameter. To return the bounding rectangle of the entire item, use the other version of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GetItemRect_\" data-linktype=\"relative-path\">GetItemRect</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_HitTest_System_Drawing_Point_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_HitTest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HitTest(Point)</div>        \r\n          </div>\r\n    \r\n            <p>Provides item information, given a point.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListViewHitTestInfo HitTest (System.Drawing.Point point);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> at which to retrieve the item information. The coordinates are relative to the upper-left corner of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewhittestinfo\" data-linktype=\"relative-path\">ListViewHitTestInfo</a></div>\r\n                  </div>\r\n                  <p>The item information, given a point.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The point contains coordinates that are less than 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to determine whether a point is in an item or subitem and where in the item the point is located, such as on the label or image area. If the coordinates are located outside the control, the returned <a class=\"xref\" href=\"system.windows.forms.listviewhittestinfo\" data-linktype=\"relative-path\">ListViewHitTestInfo</a> object has a <a class=\"xref\" href=\"system.windows.forms.listviewhittestinfo#System_Windows_Forms_ListViewHitTestInfo_Location_\" data-linktype=\"relative-path\">Location</a> property of &quot;None&quot;; and the <a class=\"xref\" href=\"system.windows.forms.listviewhittestinfo#System_Windows_Forms_ListViewHitTestInfo_Item_\" data-linktype=\"relative-path\">Item</a> and <a class=\"xref\" href=\"system.windows.forms.listviewhittestinfo#System_Windows_Forms_ListViewHitTestInfo_SubItem_\" data-linktype=\"relative-path\">SubItem</a> properties are set to <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_HitTest_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_HitTest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HitTest(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Provides item information, given x- and y-coordinates.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ListViewHitTestInfo HitTest (int x, int y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate at which to retrieve the item information. The coordinate is relative to the upper-left corner of the control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate at which to retrieve the item information. The coordinate is relative to the upper-left corner of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewhittestinfo\" data-linktype=\"relative-path\">ListViewHitTestInfo</a></div>\r\n                  </div>\r\n                  <p>The item information, given x- and y- coordinates.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The x- or y-coordinate is less than 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to determine whether a point is in an item or subitem, and where in the item the point is located, such as on the label or image area. If the coordinates are located outside the control, the returned <a class=\"xref\" href=\"system.windows.forms.listviewhittestinfo\" data-linktype=\"relative-path\">ListViewHitTestInfo</a> object has a <a class=\"xref\" href=\"system.windows.forms.listviewhittestinfo#System_Windows_Forms_ListViewHitTestInfo_Location_\" data-linktype=\"relative-path\">Location</a> property of &quot;None&quot;; and the <a class=\"xref\" href=\"system.windows.forms.listviewhittestinfo#System_Windows_Forms_ListViewHitTestInfo_Item_\" data-linktype=\"relative-path\">Item</a> and <a class=\"xref\" href=\"system.windows.forms.listviewhittestinfo#System_Windows_Forms_ListViewHitTestInfo_SubItem_\" data-linktype=\"relative-path\">SubItem</a> properties are set to <code>null</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the HitTest method to determine the location of a mouse event in a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>. To run this example, paste it into a Windows Form that contains a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>listView1</code> that is populated with items. Associate the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> event for <code>listView1</code> with the <code>listView1_MouseDown</code> method in this example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListViewWhidbeyProperties#7\">    Private Sub HandleMouseDown(ByVal sender As Object, ByVal e As MouseEventArgs) _\n            Handles Me.MouseDown, listView1.MouseDown\n\n        Dim info As ListViewHitTestInfo = listView1.HitTest(e.X, e.Y)\n        MessageBox.Show(info.Location.ToString())\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListViewWhidbeyProperties#7\">        void HandleMouseDown(object sender, MouseEventArgs e)\n        {\n            ListViewHitTestInfo info = listView1.HitTest(e.X, e.Y);\n            MessageBox.Show(info.Location.ToString());\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_IsInputKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_IsInputKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsInputKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool IsInputKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified key is a regular input key; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnAfterLabelEdit_System_Windows_Forms_LabelEditEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnAfterLabelEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnAfterLabelEdit(LabelEditEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AfterLabelEdit\" data-linktype=\"relative-path\">AfterLabelEdit</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnAfterLabelEdit (System.Windows.Forms.LabelEditEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.labelediteventargs\" data-linktype=\"relative-path\">LabelEditEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.labelediteventargs\" data-linktype=\"relative-path\">LabelEditEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnAfterLabelEdit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AfterLabelEdit\" data-linktype=\"relative-path\">AfterLabelEdit</a> event to restrict a newly edited label to characters in the alphabet. The example uses the <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a> class to obtain the ASCII character code of each character of the new label. If the character falls between the ASCII codes that represent numbers, the new label cannot be applied to the item. This example requires that you have created a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control on a form and added items to it. The example also requires that you have connected the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AfterLabelEdit\" data-linktype=\"relative-path\">AfterLabelEdit</a> event to the event handler defined in the example code. In order to use the <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a> class, your file must include the <a class=\"xref\" href=\"system.text\" data-linktype=\"relative-path\">System.Text</a> namespace.  </p>\n<pre><code class=\"lang-cs\" name=\"ListView.AfterLabelEdit#1\">      private void MyListView_AfterLabelEdit(object sender, System.Windows.Forms.LabelEditEventArgs e)\n      {\n       \n         // Determine if label is changed by checking for null.\n         if (e.Label == null)\n            return;\n\n         // ASCIIEncoding is used to determine if a number character has been entered.\n         ASCIIEncoding AE = new ASCIIEncoding();\n         // Convert the new label to a character array.\n         char[] temp = e.Label.ToCharArray();\n\n         // Check each character in the new label to determine if it is a number.\n         for(int x=0; x &lt; temp.Length; x++)\n         {\n            // Encode the character from the character array to its ASCII code.\n            byte[] bc = AE.GetBytes(temp[x].ToString());\n         \n            // Determine if the ASCII code is within the valid range of numerical values.\n            if(bc[0] &gt; 47 &amp;&amp; bc[0] &lt; 58)\n            {\n               // Cancel the event and return the lable to its original state.\n               e.CancelEdit = true;\n               // Display a MessageBox alerting the user that numbers are not allowed.\n               MessageBox.Show (&quot;The text for the item cannot contain numerical values.&quot;);\n               // Break out of the loop and exit.\n               return;\n            }\n         }\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"ListView.AfterLabelEdit#1\">      Private Sub MyListView_AfterLabelEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.LabelEditEventArgs) Handles listView1.AfterLabelEdit\n\n         &#39; Determine if label is changed by checking to see if it is equal to Nothing.\n         If e.Label Is Nothing Then\n            Return\n         End If\n         &#39; ASCIIEncoding is used to determine if a number character has been entered.\n         Dim AE As New ASCIIEncoding()\n         &#39; Convert the new label to a character array.\n         Dim temp As Char() = e.Label.ToCharArray()\n\n         &#39; Check each character in the new label to determine if it is a number.\n         Dim x As Integer\n         For x = 0 To temp.Length - 1\n            &#39; Encode the character from the character array to its ASCII code.\n            Dim bc As Byte() = AE.GetBytes(temp(x).ToString())\n\n            &#39; Determine if the ASCII code is within the valid range of numerical values.\n            If bc(0) &gt; 47 And bc(0) &lt; 58 Then\n               &#39; Cancel the event and return the lable to its original state.\n               e.CancelEdit = True\n               &#39; Display a MessageBox alerting the user that numbers are not allowed.\n               MessageBox.Show(&quot;The text for the item cannot contain numerical values.&quot;)\n               &#39; Break out of the loop and exit.\n               Return\n            End If\n         Next x\n      End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"ListView.AfterLabelEdit#1\">   private:\n      void MyListView_AfterLabelEdit( Object^ /*sender*/, System::Windows::Forms::LabelEditEventArgs^ e )\n      {\n         // Determine if label is changed by checking for 0.\n         if ( e-&gt;Label == nullptr )\n                  return;\n\n         // ASCIIEncoding is used to determine if a number character has been entered.\n         ASCIIEncoding^ AE = gcnew ASCIIEncoding;\n\n         // Convert the new label to a character array.\n         array&lt;Char&gt;^temp = e-&gt;Label-&gt;ToCharArray();\n\n         // Check each character in the new label to determine if it is a number.\n         for ( int x = 0; x &lt; temp-&gt;Length; x++ )\n         {\n            // Encode the character from the character array to its ASCII code.\n            array&lt;Byte&gt;^bc = AE-&gt;GetBytes( temp[ x ].ToString() );\n\n            // Determine if the ASCII code is within the valid range of numerical values.\n            if ( bc[ 0 ] &gt; 47 &amp;&amp; bc[ 0 ] &lt; 58 )\n            {\n               // Cancel the event and return the lable to its original state.\n               e-&gt;CancelEdit = true;\n\n               // Display a MessageBox alerting the user that numbers are not allowed.\n               MessageBox::Show( &quot;The text for the item cannot contain numerical values.&quot; );\n\n               // Break out of the loop and exit.\n               return;\n            }\n         }\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnBackgroundImageChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnBackgroundImageChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnBackgroundImageChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackgroundImageChanged\" data-linktype=\"relative-path\">BackgroundImageChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnBackgroundImageChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnBackgroundImageChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnBeforeLabelEdit_System_Windows_Forms_LabelEditEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnBeforeLabelEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnBeforeLabelEdit(LabelEditEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_BeforeLabelEdit\" data-linktype=\"relative-path\">BeforeLabelEdit</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnBeforeLabelEdit (System.Windows.Forms.LabelEditEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.labelediteventargs\" data-linktype=\"relative-path\">LabelEditEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.labelediteventargs\" data-linktype=\"relative-path\">LabelEditEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnBeforeLabelEdit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnCacheVirtualItems_System_Windows_Forms_CacheVirtualItemsEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnCacheVirtualItems_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCacheVirtualItems(CacheVirtualItemsEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CacheVirtualItems\" data-linktype=\"relative-path\">CacheVirtualItems</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCacheVirtualItems (System.Windows.Forms.CacheVirtualItemsEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.cachevirtualitemseventargs\" data-linktype=\"relative-path\">CacheVirtualItemsEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.cachevirtualitemseventargs\" data-linktype=\"relative-path\">CacheVirtualItemsEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnCacheVirtualItems method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnColumnClick_System_Windows_Forms_ColumnClickEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnColumnClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnClick(ColumnClickEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ColumnClick\" data-linktype=\"relative-path\">ColumnClick</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnClick (System.Windows.Forms.ColumnClickEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.columnclickeventargs\" data-linktype=\"relative-path\">ColumnClickEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.columnclickeventargs\" data-linktype=\"relative-path\">ColumnClickEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnColumnClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a form that contains a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control that manually sorts items when a column in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is clicked. The example defines a class called <code>ListViewItemComparer</code> that implements the <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">System.Collections.IComparer</a> interface that performs the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> comparison. The example creates an instance of <code>ListViewItemComparer</code> and uses it to set the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ListViewItemSorter_\" data-linktype=\"relative-path\">ListViewItemSorter</a> property of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sort_\" data-linktype=\"relative-path\">Sort</a> method call in the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ColumnClick\" data-linktype=\"relative-path\">ColumnClick</a> event handler uses the methods defined in <code>ListViewItemComparer</code> to perform the sort of items, based on the column that is clicked.  </p>\n<pre><code class=\"lang-cpp\" name=\"ListView.ColumnClick#1\">#using &lt;System.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n\nusing namespace System;\nusing namespace System::Windows::Forms;\nusing namespace System::Drawing;\nusing namespace System::Collections;\n\n// Implements the manual sorting of items by columns.\nref class ListViewItemComparer: public IComparer\n{\nprivate:\n   int col;\n\npublic:\n   ListViewItemComparer()\n   {\n      col = 0;\n   }\n\n   ListViewItemComparer( int column )\n   {\n      col = column;\n   }\n\n   virtual int Compare( Object^ x, Object^ y )\n   {\n      return String::Compare( (dynamic_cast&lt;ListViewItem^&gt;(x))-&gt;SubItems[ col ]-&gt;Text,\n                              (dynamic_cast&lt;ListViewItem^&gt;(y))-&gt;SubItems[ col ]-&gt;Text );\n   }\n};\n\npublic ref class ListViewSortForm: public Form\n{\nprivate:\n   ListView^ listView1;\n\npublic:\n   ListViewSortForm()\n   {\n      // Create ListView items to add to the control.\n      array&lt;String^&gt;^temp0 = {&quot;Banana&quot;,&quot;a&quot;,&quot;b&quot;,&quot;c&quot;};\n      ListViewItem^ listViewItem1 = gcnew ListViewItem( temp0,-1,Color::Empty,Color::Yellow,nullptr );\n      array&lt;String^&gt;^temp1 = {&quot;Cherry&quot;,&quot;v&quot;,&quot;g&quot;,&quot;t&quot;};\n      ListViewItem^ listViewItem2 = gcnew ListViewItem( temp1,-1,Color::Empty,Color::Red,\n                 gcnew System::Drawing::Font( &quot;Microsoft Sans Serif&quot;,8.25F,FontStyle::Regular,GraphicsUnit::Point,0 ) );\n      array&lt;String^&gt;^temp2 = {&quot;Apple&quot;,&quot;h&quot;,&quot;j&quot;,&quot;n&quot;};\n      ListViewItem^ listViewItem3 = gcnew ListViewItem( temp2,-1,Color::Empty,Color::Lime,nullptr );\n      array&lt;String^&gt;^temp3 = {&quot;Pear&quot;,&quot;y&quot;,&quot;u&quot;,&quot;i&quot;};\n      ListViewItem^ listViewItem4 = gcnew ListViewItem( temp3,-1,Color::Empty,Color::FromArgb( 192, 128, 156 ),nullptr );\n\n      //Initialize the ListView control and add columns to it.\n      this-&gt;listView1 = gcnew ListView;\n\n      // Set the initial sorting type for the ListView.\n      this-&gt;listView1-&gt;Sorting = SortOrder::None;\n\n      // Disable automatic sorting to enable manual sorting.\n      this-&gt;listView1-&gt;View = View::Details;\n\n      // Add columns and set their text.\n      this-&gt;listView1-&gt;Columns-&gt;Add( gcnew ColumnHeader );\n      this-&gt;listView1-&gt;Columns[ 0 ]-&gt;Text = &quot;Column 1&quot;;\n      this-&gt;listView1-&gt;Columns[ 0 ]-&gt;Width = 100;\n      listView1-&gt;Columns-&gt;Add( gcnew ColumnHeader );\n      listView1-&gt;Columns[ 1 ]-&gt;Text = &quot;Column 2&quot;;\n      listView1-&gt;Columns-&gt;Add( gcnew ColumnHeader );\n      listView1-&gt;Columns[ 2 ]-&gt;Text = &quot;Column 3&quot;;\n      listView1-&gt;Columns-&gt;Add( gcnew ColumnHeader );\n      listView1-&gt;Columns[ 3 ]-&gt;Text = &quot;Column 4&quot;;\n\n      // Suspend control logic until form is done configuring form.\n      this-&gt;SuspendLayout();\n\n      // Add Items to the ListView control.\n      array&lt;ListViewItem^&gt;^temp4 = {listViewItem1,listViewItem2,listViewItem3,listViewItem4};\n      this-&gt;listView1-&gt;Items-&gt;AddRange( temp4 );\n\n      // Set the location and size of the ListView control.\n      this-&gt;listView1-&gt;Location = Point(10,10);\n      this-&gt;listView1-&gt;Name = &quot;listView1&quot;;\n      this-&gt;listView1-&gt;Size = System::Drawing::Size( 300, 100 );\n      this-&gt;listView1-&gt;TabIndex = 0;\n\n      // Enable editing of the items in the ListView.\n      this-&gt;listView1-&gt;LabelEdit = true;\n\n      // Connect the ListView::ColumnClick event to the ColumnClick event handler.\n      this-&gt;listView1-&gt;ColumnClick += gcnew ColumnClickEventHandler( this, &amp;ListViewSortForm::ColumnClick );\n\n      // Initialize the form.\n      this-&gt;ClientSize = System::Drawing::Size( 400, 400 );\n      array&lt;Control^&gt;^temp5 = {this-&gt;listView1};\n      this-&gt;Controls-&gt;AddRange( temp5 );\n      this-&gt;Name = &quot;ListViewSortForm&quot;;\n      this-&gt;Text = &quot;Sorted ListView Control&quot;;\n\n      // Resume lay[Out] of* the form.\n      this-&gt;ResumeLayout( false );\n   }\n\nprivate:\n\n   // ColumnClick event handler.\n   void ColumnClick( Object^ /*o*/, ColumnClickEventArgs^ e )\n   {\n      // Set the ListViewItemSorter property to a new ListViewItemComparer \n      // object. Setting this property immediately sorts the \n      // ListView using the ListViewItemComparer object.\n      this-&gt;listView1-&gt;ListViewItemSorter = gcnew ListViewItemComparer( e-&gt;Column );\n   }\n};\n\n[System::STAThreadAttribute]\nint main()\n{\n   Application::Run( gcnew ListViewSortForm );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"ListView.ColumnClick#1\">using System;\nusing System.Windows.Forms;\nusing System.Drawing;\nusing System.Collections;\n\nnamespace ListViewSortFormNamespace\n{\n    \n   \n    public class ListViewSortForm : Form\n    {\n        private ListView listView1;\n       \n        public ListViewSortForm()\n        {\n            // Create ListView items to add to the control.\n            ListViewItem listViewItem1 = new ListViewItem(new string[] {&quot;Banana&quot;,&quot;a&quot;,&quot;b&quot;,&quot;c&quot;}, -1, Color.Empty, Color.Yellow, null);\n            ListViewItem listViewItem2 = new ListViewItem(new string[] {&quot;Cherry&quot;,&quot;v&quot;,&quot;g&quot;,&quot;t&quot;}, -1, Color.Empty, Color.Red, new Font(&quot;Microsoft Sans Serif&quot;, 8.25F, FontStyle.Regular, GraphicsUnit.Point, ((System.Byte)(0))));\n            ListViewItem listViewItem3 = new ListViewItem(new string[] {&quot;Apple&quot;,&quot;h&quot;,&quot;j&quot;,&quot;n&quot;}, -1, Color.Empty, Color.Lime, null);\n            ListViewItem listViewItem4 = new ListViewItem(new string[] {&quot;Pear&quot;,&quot;y&quot;,&quot;u&quot;,&quot;i&quot;}, -1, Color.Empty, Color.FromArgb(((System.Byte)(192)), ((System.Byte)(128)), ((System.Byte)(156))), null);\n     \n            //Initialize the ListView control and add columns to it.\n            this.listView1 = new ListView();\n\n            // Set the initial sorting type for the ListView.\n            this.listView1.Sorting = SortOrder.None;\n            // Disable automatic sorting to enable manual sorting.\n            this.listView1.View = View.Details;\n            // Add columns and set their text.\n            this.listView1.Columns.Add(new ColumnHeader());\n            this.listView1.Columns[0].Text = &quot;Column 1&quot;;\n            this.listView1.Columns[0].Width = 100;\n            listView1.Columns.Add(new ColumnHeader());\n            listView1.Columns[1].Text = &quot;Column 2&quot;;\n            listView1.Columns.Add(new ColumnHeader());\n            listView1.Columns[2].Text = &quot;Column 3&quot;;\n            listView1.Columns.Add(new ColumnHeader());\n            listView1.Columns[3].Text = &quot;Column 4&quot;;\n            // Suspend control logic until form is done configuring form.\n            this.SuspendLayout();\n            // Add Items to the ListView control.\n            this.listView1.Items.AddRange(new ListViewItem[] {listViewItem1,\n                listViewItem2,\n                listViewItem3,\n                listViewItem4});\n            // Set the location and size of the ListView control.\n            this.listView1.Location = new Point(10, 10);\n            this.listView1.Name = &quot;listView1&quot;;\n            this.listView1.Size = new Size(300, 100);\n            this.listView1.TabIndex = 0;\n            // Enable editing of the items in the ListView.\n            this.listView1.LabelEdit = true;\n            // Connect the ListView.ColumnClick event to the ColumnClick event handler.\n            this.listView1.ColumnClick += new ColumnClickEventHandler(ColumnClick);\n   \t\t\t\n            // Initialize the form.\n            this.ClientSize = new Size(400, 400);\n            this.Controls.AddRange(new Control[] {this.listView1});\n            this.Name = &quot;ListViewSortForm&quot;;\n            this.Text = &quot;Sorted ListView Control&quot;;\n            // Resume layout of the form.\n            this.ResumeLayout(false);\n        }\n        \n\t\n        // ColumnClick event handler.\n        private void ColumnClick(object o, ColumnClickEventArgs e)\n        {\n            // Set the ListViewItemSorter property to a new ListViewItemComparer \n            // object. Setting this property immediately sorts the \n            // ListView using the ListViewItemComparer object.\n            this.listView1.ListViewItemSorter = new ListViewItemComparer(e.Column);\n        }\n\n        [System.STAThreadAttribute()]\n        public static void Main()\n        {\n            Application.Run(new ListViewSortForm());\n        }\n\n    }\n\n    // Implements the manual sorting of items by columns.\n    class ListViewItemComparer : IComparer\n    {\n        private int col;\n        public ListViewItemComparer()\n        {\n            col = 0;\n        }\n        public ListViewItemComparer(int column)\n        {\n            col = column;\n        }\n        public int Compare(object x, object y)\n        {\n            return String.Compare(((ListViewItem)x).SubItems[col].Text, ((ListViewItem)y).SubItems[col].Text);\n        }\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListView.ColumnClick#1\">Imports System\nImports System.Windows.Forms\nImports System.Drawing\nImports System.Collections\n\n\nNamespace ListViewSortFormNamespace\n\n    Public Class ListViewSortForm\n        Inherits Form\n\n        Private listView1 As ListView\n\n        Public Sub New()\n            &#39; Create ListView items to add to the control.\n            Dim listViewItem1 As New ListViewItem(New String() {&quot;Banana&quot;, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;}, -1, Color.Empty, Color.Yellow, Nothing)\n            Dim listViewItem2 As New ListViewItem(New String() {&quot;Cherry&quot;, &quot;v&quot;, &quot;g&quot;, &quot;t&quot;}, -1, Color.Empty, Color.Red, New Font(&quot;Microsoft Sans Serif&quot;, 8.25F, FontStyle.Regular, GraphicsUnit.Point, CType(0, System.Byte)))\n            Dim listViewItem3 As New ListViewItem(New String() {&quot;Apple&quot;, &quot;h&quot;, &quot;j&quot;, &quot;n&quot;}, -1, Color.Empty, Color.Lime, Nothing)\n            Dim listViewItem4 As New ListViewItem(New String() {&quot;Pear&quot;, &quot;y&quot;, &quot;u&quot;, &quot;i&quot;}, -1, Color.Empty, Color.FromArgb(CType(192, System.Byte), CType(128, System.Byte), CType(156, System.Byte)), Nothing)\n\n            &#39;Initialize the ListView control and add columns to it.\n            Me.listView1 = New ListView\n\n            &#39; Set the initial sorting type for the ListView.\n            Me.listView1.Sorting = SortOrder.None\n            &#39; Disable automatic sorting to enable manual sorting.\n            Me.listView1.View = View.Details\n            &#39; Add columns and set their text.\n            Me.listView1.Columns.Add(New ColumnHeader)\n            Me.listView1.Columns(0).Text = &quot;Column 1&quot;\n            Me.listView1.Columns(0).Width = 100\n            listView1.Columns.Add(New ColumnHeader)\n            listView1.Columns(1).Text = &quot;Column 2&quot;\n            listView1.Columns.Add(New ColumnHeader)\n            listView1.Columns(2).Text = &quot;Column 3&quot;\n            listView1.Columns.Add(New ColumnHeader)\n            listView1.Columns(3).Text = &quot;Column 4&quot;\n            &#39; Suspend control logic until form is done configuring form.\n            Me.SuspendLayout()\n            &#39; Add Items to the ListView control.\n            Me.listView1.Items.AddRange(New ListViewItem() {listViewItem1, listViewItem2, listViewItem3, listViewItem4})\n            &#39; Set the location and size of the ListView control.\n            Me.listView1.Location = New Point(10, 10)\n            Me.listView1.Name = &quot;listView1&quot;\n            Me.listView1.Size = New Size(300, 100)\n            Me.listView1.TabIndex = 0\n            &#39; Enable editing of the items in the ListView.\n            Me.listView1.LabelEdit = True\n            &#39; Connect the ListView.ColumnClick event to the ColumnClick event handler.\n            AddHandler Me.listView1.ColumnClick, AddressOf ColumnClick\n\n            &#39; Initialize the form.\n            Me.ClientSize = New Size(400, 400)\n            Me.Controls.AddRange(New Control() {Me.listView1})\n            Me.Name = &quot;ListViewSortForm&quot;\n            Me.Text = &quot;Sorted ListView Control&quot;\n            &#39; Resume layout of the form.\n            Me.ResumeLayout(False)\n        End Sub &#39;New\n\n\n        &#39; ColumnClick event handler.\n        Private Sub ColumnClick(ByVal o As Object, ByVal e As ColumnClickEventArgs)\n            &#39; Set the ListViewItemSorter property to a new ListViewItemComparer \n            &#39; object. Setting this property immediately sorts the \n            &#39; ListView using the ListViewItemComparer object.\n            Me.listView1.ListViewItemSorter = New ListViewItemComparer(e.Column)\n        End Sub\n\n    End Class\n\n    &#39; Implements the manual sorting of items by columns.\n    Class ListViewItemComparer\n        Implements IComparer\n\n        Private col As Integer\n\n        Public Sub New()\n            col = 0\n        End Sub\n\n        Public Sub New(ByVal column As Integer)\n            col = column\n        End Sub\n\n        Public Function Compare(ByVal x As Object, ByVal y As Object) As Integer _\n           Implements IComparer.Compare\n            Return [String].Compare(CType(x, ListViewItem).SubItems(col).Text, CType(y, ListViewItem).SubItems(col).Text)\n        End Function\n    End Class\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnColumnReordered_System_Windows_Forms_ColumnReorderedEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnColumnReordered_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnReordered(ColumnReorderedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ColumnReordered\" data-linktype=\"relative-path\">ColumnReordered</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnReordered (System.Windows.Forms.ColumnReorderedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.columnreorderedeventargs\" data-linktype=\"relative-path\">ColumnReorderedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.columnreorderedeventargs\" data-linktype=\"relative-path\">ColumnReorderedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnColumnReordered method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnColumnWidthChanged_System_Windows_Forms_ColumnWidthChangedEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnColumnWidthChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnWidthChanged(ColumnWidthChangedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ColumnWidthChanged\" data-linktype=\"relative-path\">ColumnWidthChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnWidthChanged (System.Windows.Forms.ColumnWidthChangedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.columnwidthchangedeventargs\" data-linktype=\"relative-path\">ColumnWidthChangedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.columnwidthchangedeventargs\" data-linktype=\"relative-path\">ColumnWidthChangedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnColumnWidthChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnColumnWidthChanging_System_Windows_Forms_ColumnWidthChangingEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnColumnWidthChanging_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnWidthChanging(ColumnWidthChangingEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ColumnWidthChanging\" data-linktype=\"relative-path\">ColumnWidthChanging</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnWidthChanging (System.Windows.Forms.ColumnWidthChangingEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.columnwidthchangingeventargs\" data-linktype=\"relative-path\">ColumnWidthChangingEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.columnwidthchangingeventargs\" data-linktype=\"relative-path\">ColumnWidthChangingEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ColumnWidthChanging\" data-linktype=\"relative-path\">ColumnWidthChanging</a> event will not occur if the Window&#39;s full drag feature, the &quot;Show Window Contents While Dragging&quot; option, is disabled.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnColumnWidthChanging method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnDrawColumnHeader_System_Windows_Forms_DrawListViewColumnHeaderEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnDrawColumnHeader_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDrawColumnHeader(DrawListViewColumnHeaderEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawColumnHeader\" data-linktype=\"relative-path\">DrawColumnHeader</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDrawColumnHeader (System.Windows.Forms.DrawListViewColumnHeaderEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.drawlistviewcolumnheadereventargs\" data-linktype=\"relative-path\">DrawListViewColumnHeaderEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.drawlistviewcolumnheadereventargs\" data-linktype=\"relative-path\">DrawListViewColumnHeaderEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnDrawColumnHeader method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnDrawItem_System_Windows_Forms_DrawListViewItemEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnDrawItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDrawItem(DrawListViewItemEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">DrawItem</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDrawItem (System.Windows.Forms.DrawListViewItemEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs\" data-linktype=\"relative-path\">DrawListViewItemEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.drawlistviewitemeventargs\" data-linktype=\"relative-path\">DrawListViewItemEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnDrawItem method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnDrawSubItem_System_Windows_Forms_DrawListViewSubItemEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnDrawSubItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDrawSubItem(DrawListViewSubItemEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">DrawSubItem</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDrawSubItem (System.Windows.Forms.DrawListViewSubItemEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs\" data-linktype=\"relative-path\">DrawListViewSubItemEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs\" data-linktype=\"relative-path\">DrawListViewSubItemEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnDrawSubItem method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnFontChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnFontChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnFontChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <code>FontChanged</code> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnFontChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnHandleCreated_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnHandleCreated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnHandleCreated(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleCreated\" data-linktype=\"relative-path\">HandleCreated</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnHandleCreated (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnHandleDestroyed_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnHandleDestroyed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnHandleDestroyed(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleDestroyed\" data-linktype=\"relative-path\">HandleDestroyed</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnHandleDestroyed (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnItemActivate_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnItemActivate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnItemActivate(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemActivate\" data-linktype=\"relative-path\">ItemActivate</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnItemActivate (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnItemActivate method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnItemCheck_System_Windows_Forms_ItemCheckEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnItemCheck_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnItemCheck(ItemCheckEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemCheck\" data-linktype=\"relative-path\">ItemCheck</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnItemCheck (System.Windows.Forms.ItemCheckEventArgs ice);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ice</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.itemcheckeventargs\" data-linktype=\"relative-path\">ItemCheckEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.itemcheckeventargs\" data-linktype=\"relative-path\">ItemCheckEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnItemCheck method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnItemChecked_System_Windows_Forms_ItemCheckedEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnItemChecked_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnItemChecked(ItemCheckedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemChecked\" data-linktype=\"relative-path\">ItemChecked</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnItemChecked (System.Windows.Forms.ItemCheckedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.itemcheckedeventargs\" data-linktype=\"relative-path\">ItemCheckedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.itemcheckedeventargs\" data-linktype=\"relative-path\">ItemCheckedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnItemChecked method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnItemDrag_System_Windows_Forms_ItemDragEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnItemDrag_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnItemDrag(ItemDragEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemDrag\" data-linktype=\"relative-path\">ItemDrag</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnItemDrag (System.Windows.Forms.ItemDragEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.itemdrageventargs\" data-linktype=\"relative-path\">ItemDragEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.itemdrageventargs\" data-linktype=\"relative-path\">ItemDragEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnItemDrag method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnItemMouseHover_System_Windows_Forms_ListViewItemMouseHoverEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnItemMouseHover_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnItemMouseHover(ListViewItemMouseHoverEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemMouseHover\" data-linktype=\"relative-path\">ItemMouseHover</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnItemMouseHover (System.Windows.Forms.ListViewItemMouseHoverEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitemmousehovereventargs\" data-linktype=\"relative-path\">ListViewItemMouseHoverEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.listviewitemmousehovereventargs\" data-linktype=\"relative-path\">ListViewItemMouseHoverEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnItemMouseHover method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnItemSelectionChanged_System_Windows_Forms_ListViewItemSelectionChangedEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnItemSelectionChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnItemSelectionChanged(ListViewItemSelectionChangedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemSelectionChanged\" data-linktype=\"relative-path\">ItemSelectionChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnItemSelectionChanged (System.Windows.Forms.ListViewItemSelectionChangedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewitemselectionchangedeventargs\" data-linktype=\"relative-path\">ListViewItemSelectionChangedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.listviewitemselectionchangedeventargs\" data-linktype=\"relative-path\">ListViewItemSelectionChangedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnItemSelectionChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnMouseHover_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnMouseHover_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseHover(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnMouseHover (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the OnMouseHover method is called when the mouse is hovering over a <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>, the method raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemMouseHover\" data-linktype=\"relative-path\">ItemMouseHover</a> event.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnMouseHover method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnMouseLeave_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnMouseLeave_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseLeave(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnMouseLeave (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnParentChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnParentChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnParentChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ParentChanged\" data-linktype=\"relative-path\">ParentChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnParentChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnResize_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnResize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnResize(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnResize (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnRetrieveVirtualItem_System_Windows_Forms_RetrieveVirtualItemEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnRetrieveVirtualItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRetrieveVirtualItem(RetrieveVirtualItemEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_RetrieveVirtualItem\" data-linktype=\"relative-path\">RetrieveVirtualItem</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRetrieveVirtualItem (System.Windows.Forms.RetrieveVirtualItemEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.retrievevirtualitemeventargs\" data-linktype=\"relative-path\">RetrieveVirtualItemEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.retrievevirtualitemeventargs\" data-linktype=\"relative-path\">RetrieveVirtualItemEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnRetrieveVirtualItem method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnRightToLeftLayoutChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnRightToLeftLayoutChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRightToLeftLayoutChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_RightToLeftLayoutChanged\" data-linktype=\"relative-path\">RightToLeftLayoutChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRightToLeftLayoutChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnRightToLeftLayoutChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnSearchForVirtualItem_System_Windows_Forms_SearchForVirtualItemEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnSearchForVirtualItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnSearchForVirtualItem(SearchForVirtualItemEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SearchForVirtualItem\" data-linktype=\"relative-path\">SearchForVirtualItem</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnSearchForVirtualItem (System.Windows.Forms.SearchForVirtualItemEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.searchforvirtualitemeventargs\" data-linktype=\"relative-path\">SearchForVirtualItemEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.searchforvirtualitemeventargs\" data-linktype=\"relative-path\">SearchForVirtualItemEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnSearchForVirtualItem method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnSelectedIndexChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnSelectedIndexChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnSelectedIndexChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedIndexChanged\" data-linktype=\"relative-path\">SelectedIndexChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnSelectedIndexChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnSelectedIndexChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnSystemColorsChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnSystemColorsChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnSystemColorsChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SystemColorsChanged\" data-linktype=\"relative-path\">SystemColorsChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnSystemColorsChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_OnVirtualItemsSelectionRangeChanged_System_Windows_Forms_ListViewVirtualItemsSelectionRangeChangedEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_OnVirtualItemsSelectionRangeChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnVirtualItemsSelectionRangeChanged(ListViewVirtualItemsSelectionRangeChangedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_VirtualItemsSelectionRangeChanged\" data-linktype=\"relative-path\">VirtualItemsSelectionRangeChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnVirtualItemsSelectionRangeChanged (System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.listviewvirtualitemsselectionrangechangedeventargs\" data-linktype=\"relative-path\">ListViewVirtualItemsSelectionRangeChangedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.listviewvirtualitemsselectionrangechangedeventargs\" data-linktype=\"relative-path\">ListViewVirtualItemsSelectionRangeChangedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<p> The OnVirtualItemsSelectionRangeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_RealizeProperties\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_RealizeProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RealizeProperties()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes the properties of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control that manage the appearance of the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void RealizeProperties ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_RedrawItems_System_Int32_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_RedrawItems_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RedrawItems(Int32,Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Forces a range of <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects to be redrawn.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RedrawItems (int startIndex, int endIndex, bool invalidateOnly);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>startIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index for the first item in the range to be redrawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>endIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index for the last item of the range to be redrawn.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>invalidateOnly</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to invalidate the range of items; <code>false</code> to invalidate and repaint the items.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>startIndex</code> or <code>endIndex</code> is less than 0, greater than or equal to the number of items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> or, if in virtual mode, greater than the value of <span class=\"xref\">stem.Windows.Forms.ListView.VirtualListSize*</span>.  </p>\n<p> -or-  </p>\n<p> The given <code>startIndex</code> is greater than the <code>endIndex.</code></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RedrawItems method can be used whether the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is in virtual mode or regular mode.  </p>\n<p> If the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_BeginUpdate_\" data-linktype=\"relative-path\">BeginUpdate</a> method has been called prior to the call to RedrawItems, the redraw will not occur.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_Sort\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_Sort_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Sort()</div>        \r\n          </div>\r\n    \r\n            <p>Sorts the items of the list view.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Sort ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically items are sorted using the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sorting_\" data-linktype=\"relative-path\">Sorting</a> property, which sorts items based on the item text. To customize the sort order, you must write a class that implements the <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">IComparer</a> interface and set the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ListViewItemSorter_\" data-linktype=\"relative-path\">ListViewItemSorter</a> property to an object of that class. This is useful, for example, when you want to sort items by subitem text. For more information on performing manual sorting of items, see the example for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ListViewItemSorter_\" data-linktype=\"relative-path\">ListViewItemSorter</a> property.  </p>\n<p> If the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sorting_\" data-linktype=\"relative-path\">Sorting</a> property is set to a value other than <a class=\"xref\" href=\"system.windows.forms.sortorder\" data-linktype=\"relative-path\">System.Windows.Forms.SortOrder</a> or if the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ListViewItemSorter_\" data-linktype=\"relative-path\">ListViewItemSorter</a> property is set, the list is sorted automatically when items are added. Items are not sorted automatically when the label text changes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ToString\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string representation of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that states the control type, the count of items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control, and the type of the first item in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a>, if the count is not 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_UpdateExtendedStyles\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_UpdateExtendedStyles_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateExtendedStyles()</div>        \r\n          </div>\r\n    \r\n            <p>Updates the extended styles applied to the list view control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void UpdateExtendedStyles ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the UpdateExtendedStyles method in your derived class to override the extended styles used by the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. If you call this method, you should ensure that the extended styles set by properties on the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control are utilized in your derived version of the control.  </p>\n<p> The following are the properties that apply an extended style to the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Activation_\" data-linktype=\"relative-path\">Activation</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_AllowColumnReorder_\" data-linktype=\"relative-path\">AllowColumnReorder</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FullRowSelect_\" data-linktype=\"relative-path\">FullRowSelect</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_GridLines_\" data-linktype=\"relative-path\">GridLines</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_HoverSelection_\" data-linktype=\"relative-path\">HoverSelection</a></li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_WndProc_System_Windows_Forms_Message__\">\r\n    \r\n            <a id=\"System_Windows_Forms_ListView_WndProc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WndProc(Message)</div>        \r\n          </div>\r\n    \r\n            <p>Overrides <span class=\"xref\">stem.Windows.Forms.Control.WndProc*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void WndProc (ref System.Windows.Forms.Message m);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>m</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The Windows <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a> to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_AfterLabelEdit\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AfterLabelEdit</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the label for an item is edited by the user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.LabelEditEventHandler AfterLabelEdit;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The AfterLabelEdit event occurs when the user finishes modifying the text for an item. The new string that the user types for the item is passed to the event, and the event handler can reject the change. If the event handler rejects the change, the text reverts to the text as it was before the user began editing the item.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Because the AfterLabelEdit event takes place before the label edit is committed, calling the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sort_\" data-linktype=\"relative-path\">Sort</a> method in a handler for this event will sort the item using the original value.  </p>\n</div>\n<p> In order for the AfterLabelEdit event to be raised, the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LabelEdit_\" data-linktype=\"relative-path\">LabelEdit</a> property of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control must be set to <code>true</code>.  </p>\n<p> You can create an event handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_BeforeLabelEdit\" data-linktype=\"relative-path\">BeforeLabelEdit</a> event to perform tasks before the user edits the text of an item.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the AfterLabelEdit event to restrict a newly edited label to characters in the alphabet. The example uses the <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a> class to obtain the ASCII character code of each character of the new label. If the character falls between the ASCII codes that represent numbers, the new label cannot be applied to the item. This example requires that you have created a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control on a form and added items to it. The example also requires that you have connected the AfterLabelEdit event to the event handler defined in the example code. In order to use the <a class=\"xref\" href=\"system.text.asciiencoding\" data-linktype=\"relative-path\">ASCIIEncoding</a> class, your file must include the <a class=\"xref\" href=\"system.text\" data-linktype=\"relative-path\">System.Text</a> namespace.  </p>\n<pre><code class=\"lang-cs\" name=\"ListView.AfterLabelEdit#1\">      private void MyListView_AfterLabelEdit(object sender, System.Windows.Forms.LabelEditEventArgs e)\n      {\n       \n         // Determine if label is changed by checking for null.\n         if (e.Label == null)\n            return;\n\n         // ASCIIEncoding is used to determine if a number character has been entered.\n         ASCIIEncoding AE = new ASCIIEncoding();\n         // Convert the new label to a character array.\n         char[] temp = e.Label.ToCharArray();\n\n         // Check each character in the new label to determine if it is a number.\n         for(int x=0; x &lt; temp.Length; x++)\n         {\n            // Encode the character from the character array to its ASCII code.\n            byte[] bc = AE.GetBytes(temp[x].ToString());\n         \n            // Determine if the ASCII code is within the valid range of numerical values.\n            if(bc[0] &gt; 47 &amp;&amp; bc[0] &lt; 58)\n            {\n               // Cancel the event and return the lable to its original state.\n               e.CancelEdit = true;\n               // Display a MessageBox alerting the user that numbers are not allowed.\n               MessageBox.Show (&quot;The text for the item cannot contain numerical values.&quot;);\n               // Break out of the loop and exit.\n               return;\n            }\n         }\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"ListView.AfterLabelEdit#1\">      Private Sub MyListView_AfterLabelEdit(ByVal sender As Object, ByVal e As System.Windows.Forms.LabelEditEventArgs) Handles listView1.AfterLabelEdit\n\n         &#39; Determine if label is changed by checking to see if it is equal to Nothing.\n         If e.Label Is Nothing Then\n            Return\n         End If\n         &#39; ASCIIEncoding is used to determine if a number character has been entered.\n         Dim AE As New ASCIIEncoding()\n         &#39; Convert the new label to a character array.\n         Dim temp As Char() = e.Label.ToCharArray()\n\n         &#39; Check each character in the new label to determine if it is a number.\n         Dim x As Integer\n         For x = 0 To temp.Length - 1\n            &#39; Encode the character from the character array to its ASCII code.\n            Dim bc As Byte() = AE.GetBytes(temp(x).ToString())\n\n            &#39; Determine if the ASCII code is within the valid range of numerical values.\n            If bc(0) &gt; 47 And bc(0) &lt; 58 Then\n               &#39; Cancel the event and return the lable to its original state.\n               e.CancelEdit = True\n               &#39; Display a MessageBox alerting the user that numbers are not allowed.\n               MessageBox.Show(&quot;The text for the item cannot contain numerical values.&quot;)\n               &#39; Break out of the loop and exit.\n               Return\n            End If\n         Next x\n      End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"ListView.AfterLabelEdit#1\">   private:\n      void MyListView_AfterLabelEdit( Object^ /*sender*/, System::Windows::Forms::LabelEditEventArgs^ e )\n      {\n         // Determine if label is changed by checking for 0.\n         if ( e-&gt;Label == nullptr )\n                  return;\n\n         // ASCIIEncoding is used to determine if a number character has been entered.\n         ASCIIEncoding^ AE = gcnew ASCIIEncoding;\n\n         // Convert the new label to a character array.\n         array&lt;Char&gt;^temp = e-&gt;Label-&gt;ToCharArray();\n\n         // Check each character in the new label to determine if it is a number.\n         for ( int x = 0; x &lt; temp-&gt;Length; x++ )\n         {\n            // Encode the character from the character array to its ASCII code.\n            array&lt;Byte&gt;^bc = AE-&gt;GetBytes( temp[ x ].ToString() );\n\n            // Determine if the ASCII code is within the valid range of numerical values.\n            if ( bc[ 0 ] &gt; 47 &amp;&amp; bc[ 0 ] &lt; 58 )\n            {\n               // Cancel the event and return the lable to its original state.\n               e-&gt;CancelEdit = true;\n\n               // Display a MessageBox alerting the user that numbers are not allowed.\n               MessageBox::Show( &quot;The text for the item cannot contain numerical values.&quot; );\n\n               // Break out of the loop and exit.\n               return;\n            }\n         }\n      }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_BackgroundImageLayoutChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackgroundImageLayoutChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.ListView.BackgroundImageLayout*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler BackgroundImageLayoutChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_BeforeLabelEdit\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeforeLabelEdit</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user starts editing the label of an item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.LabelEditEventHandler BeforeLabelEdit;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BeforeLabelEdit event occurs when the user starts modifying the text for an item. If the event handler cancels this event, the user cannot edit the text. You can use this event to prevent the user from editing specific items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. If the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_LabelEdit_\" data-linktype=\"relative-path\">LabelEdit</a> property of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is set to <code>false</code>, the BeforeLabelEdit event is not raised; all user attempts to edit item labels are automatically rejected.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates handling the BeforeLabelEdit event and using the <a class=\"xref\" href=\"system.windows.forms.labelediteventargs#System_Windows_Forms_LabelEditEventArgs_Item_\" data-linktype=\"relative-path\">Item</a> and <a class=\"xref\" href=\"system.windows.forms.labelediteventargs#System_Windows_Forms_LabelEditEventArgs_CancelEdit_\" data-linktype=\"relative-path\">CancelEdit</a> properties. To run the example, paste the following code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control named <code>ListView1</code> and populated with at least three items. Ensure the event handler in the example is associated with its event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView3#1\">   \tprivate void ListView1_BeforeLabelEdit(object sender, \n\t\tSystem.Windows.Forms.LabelEditEventArgs e)\n\t{\n\t\t// Allow all but the first two items of the list to \n\t\t// be modified by the user.\n\t\tif (e.Item&lt;2)\n\t\t{\n\t\t\te.CancelEdit = true;\n\t\t}\n\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView3#1\">   void ListView1_BeforeLabelEdit( Object^ sender,\n      System::Windows::Forms::LabelEditEventArgs^ e )\n   {\n      // Allow all but the first two items of the list to \n      // be modified by the user.\n      if ( e-&gt;Item &lt; 2 )\n      {\n         e-&gt;CancelEdit = true;\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView3#1\">    \n    Private Sub ListView1_BeforeLabelEdit(ByVal sender As Object, _\n        ByVal e As System.Windows.Forms.LabelEditEventArgs) _\n        Handles ListView1.BeforeLabelEdit\n\n        &#39; Allow all but the first two items of the list to be modified by\n        &#39; the user.\n        If (e.Item &lt; 2) Then\n            e.CancelEdit = True\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_CacheVirtualItems\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CacheVirtualItems</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the contents of the display area for a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> in virtual mode has changed, and the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> determines that a new range of items is needed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.CacheVirtualItemsEventHandler CacheVirtualItems;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event only occurs when <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> is <code>true</code>. Handling this event allows the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> to update the item information held in the cache so that it is readily available. This can improve performance on large lists, or lists whose items are expensive to calculate.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, the event handler checks to make sure a cache refresh is really necessary, and then rebuilds the cache. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView.VirtualMode#3\">    //Manages the cache.  ListView calls this when it might need a \n    //cache refresh.\n    void listView1_CacheVirtualItems(object sender, CacheVirtualItemsEventArgs e)\n    {\n        //We&#39;ve gotten a request to refresh the cache.\n        //First check if it&#39;s really neccesary.\n        if (myCache != null &amp;&amp; e.StartIndex &gt;= firstItem &amp;&amp; e.EndIndex &lt;= firstItem + myCache.Length)\n        {\n            //If the newly requested cache is a subset of the old cache, \n            //no need to rebuild everything, so do nothing.\n            return;\n        }\n\n        //Now we need to rebuild the cache.\n        firstItem = e.StartIndex;\n        int length = e.EndIndex - e.StartIndex + 1; //indexes are inclusive\n        myCache = new ListViewItem[length];\n        \n        //Fill the cache with the appropriate ListViewItems.\n        int x = 0;\n        for (int i = 0; i &lt; length; i++)\n        {\n            x = (i + firstItem) * (i + firstItem);\n            myCache[i] = new ListViewItem(x.ToString());\n        }\n\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView.VirtualMode#3\">    &#39;Manages the cache.  ListView calls this when it might need a \n    &#39;cache refresh.\n    Private Sub listView1_CacheVirtualItems(ByVal sender As Object, ByVal e As CacheVirtualItemsEventArgs) Handles listView1.CacheVirtualItems\n        &#39;We&#39;ve gotten a request to refresh the cache.\n        &#39;First check if it&#39;s really neccesary.\n        If Not (myCache Is Nothing) AndAlso e.StartIndex &gt;= firstItem AndAlso e.EndIndex &lt;= firstItem + myCache.Length Then\n            &#39;If the newly requested cache is a subset of the old cache, \n            &#39;no need to rebuild everything, so do nothing.\n            Return\n        End If\n\n        &#39;Now we need to rebuild the cache.\n        firstItem = e.StartIndex\n        Dim length As Integer = e.EndIndex - e.StartIndex + 1 &#39;indexes are inclusive\n        myCache = New ListViewItem(length) {}\n\n        &#39;Fill the cache with the appropriate ListViewItems.\n        Dim x As Integer = 0\n        Dim i As Integer\n        For i = 0 To length\n            x = (i + firstItem) * (i + firstItem)\n            myCache(i) = New ListViewItem(x.ToString())\n        Next i\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ColumnClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user clicks a column header within the list view control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.ColumnClickEventHandler ColumnClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ColumnClick event occurs when the user clicks one of the column headers in a details view of the items in a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control (when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">View</a>). The ColumnClick event is typically handled to sort the items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> using the clicked column as the column to sort by.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a form that contains a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control that manually sorts items when a column in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is clicked. The example defines a class called <code>ListViewItemComparer</code> that implements the <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">System.Collections.IComparer</a> interface that performs the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> comparison. The example creates an instance of <code>ListViewItemComparer</code> and uses it to set the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ListViewItemSorter_\" data-linktype=\"relative-path\">ListViewItemSorter</a> property of the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Sort_\" data-linktype=\"relative-path\">Sort</a> method call in the ColumnClick event handler uses the methods defined in <code>ListViewItemComparer</code> to perform the sort of items, based on the column that is clicked.  </p>\n<pre><code class=\"lang-cpp\" name=\"ListView.ColumnClick#1\">#using &lt;System.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n\nusing namespace System;\nusing namespace System::Windows::Forms;\nusing namespace System::Drawing;\nusing namespace System::Collections;\n\n// Implements the manual sorting of items by columns.\nref class ListViewItemComparer: public IComparer\n{\nprivate:\n   int col;\n\npublic:\n   ListViewItemComparer()\n   {\n      col = 0;\n   }\n\n   ListViewItemComparer( int column )\n   {\n      col = column;\n   }\n\n   virtual int Compare( Object^ x, Object^ y )\n   {\n      return String::Compare( (dynamic_cast&lt;ListViewItem^&gt;(x))-&gt;SubItems[ col ]-&gt;Text,\n                              (dynamic_cast&lt;ListViewItem^&gt;(y))-&gt;SubItems[ col ]-&gt;Text );\n   }\n};\n\npublic ref class ListViewSortForm: public Form\n{\nprivate:\n   ListView^ listView1;\n\npublic:\n   ListViewSortForm()\n   {\n      // Create ListView items to add to the control.\n      array&lt;String^&gt;^temp0 = {&quot;Banana&quot;,&quot;a&quot;,&quot;b&quot;,&quot;c&quot;};\n      ListViewItem^ listViewItem1 = gcnew ListViewItem( temp0,-1,Color::Empty,Color::Yellow,nullptr );\n      array&lt;String^&gt;^temp1 = {&quot;Cherry&quot;,&quot;v&quot;,&quot;g&quot;,&quot;t&quot;};\n      ListViewItem^ listViewItem2 = gcnew ListViewItem( temp1,-1,Color::Empty,Color::Red,\n                 gcnew System::Drawing::Font( &quot;Microsoft Sans Serif&quot;,8.25F,FontStyle::Regular,GraphicsUnit::Point,0 ) );\n      array&lt;String^&gt;^temp2 = {&quot;Apple&quot;,&quot;h&quot;,&quot;j&quot;,&quot;n&quot;};\n      ListViewItem^ listViewItem3 = gcnew ListViewItem( temp2,-1,Color::Empty,Color::Lime,nullptr );\n      array&lt;String^&gt;^temp3 = {&quot;Pear&quot;,&quot;y&quot;,&quot;u&quot;,&quot;i&quot;};\n      ListViewItem^ listViewItem4 = gcnew ListViewItem( temp3,-1,Color::Empty,Color::FromArgb( 192, 128, 156 ),nullptr );\n\n      //Initialize the ListView control and add columns to it.\n      this-&gt;listView1 = gcnew ListView;\n\n      // Set the initial sorting type for the ListView.\n      this-&gt;listView1-&gt;Sorting = SortOrder::None;\n\n      // Disable automatic sorting to enable manual sorting.\n      this-&gt;listView1-&gt;View = View::Details;\n\n      // Add columns and set their text.\n      this-&gt;listView1-&gt;Columns-&gt;Add( gcnew ColumnHeader );\n      this-&gt;listView1-&gt;Columns[ 0 ]-&gt;Text = &quot;Column 1&quot;;\n      this-&gt;listView1-&gt;Columns[ 0 ]-&gt;Width = 100;\n      listView1-&gt;Columns-&gt;Add( gcnew ColumnHeader );\n      listView1-&gt;Columns[ 1 ]-&gt;Text = &quot;Column 2&quot;;\n      listView1-&gt;Columns-&gt;Add( gcnew ColumnHeader );\n      listView1-&gt;Columns[ 2 ]-&gt;Text = &quot;Column 3&quot;;\n      listView1-&gt;Columns-&gt;Add( gcnew ColumnHeader );\n      listView1-&gt;Columns[ 3 ]-&gt;Text = &quot;Column 4&quot;;\n\n      // Suspend control logic until form is done configuring form.\n      this-&gt;SuspendLayout();\n\n      // Add Items to the ListView control.\n      array&lt;ListViewItem^&gt;^temp4 = {listViewItem1,listViewItem2,listViewItem3,listViewItem4};\n      this-&gt;listView1-&gt;Items-&gt;AddRange( temp4 );\n\n      // Set the location and size of the ListView control.\n      this-&gt;listView1-&gt;Location = Point(10,10);\n      this-&gt;listView1-&gt;Name = &quot;listView1&quot;;\n      this-&gt;listView1-&gt;Size = System::Drawing::Size( 300, 100 );\n      this-&gt;listView1-&gt;TabIndex = 0;\n\n      // Enable editing of the items in the ListView.\n      this-&gt;listView1-&gt;LabelEdit = true;\n\n      // Connect the ListView::ColumnClick event to the ColumnClick event handler.\n      this-&gt;listView1-&gt;ColumnClick += gcnew ColumnClickEventHandler( this, &amp;ListViewSortForm::ColumnClick );\n\n      // Initialize the form.\n      this-&gt;ClientSize = System::Drawing::Size( 400, 400 );\n      array&lt;Control^&gt;^temp5 = {this-&gt;listView1};\n      this-&gt;Controls-&gt;AddRange( temp5 );\n      this-&gt;Name = &quot;ListViewSortForm&quot;;\n      this-&gt;Text = &quot;Sorted ListView Control&quot;;\n\n      // Resume lay[Out] of* the form.\n      this-&gt;ResumeLayout( false );\n   }\n\nprivate:\n\n   // ColumnClick event handler.\n   void ColumnClick( Object^ /*o*/, ColumnClickEventArgs^ e )\n   {\n      // Set the ListViewItemSorter property to a new ListViewItemComparer \n      // object. Setting this property immediately sorts the \n      // ListView using the ListViewItemComparer object.\n      this-&gt;listView1-&gt;ListViewItemSorter = gcnew ListViewItemComparer( e-&gt;Column );\n   }\n};\n\n[System::STAThreadAttribute]\nint main()\n{\n   Application::Run( gcnew ListViewSortForm );\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"ListView.ColumnClick#1\">using System;\nusing System.Windows.Forms;\nusing System.Drawing;\nusing System.Collections;\n\nnamespace ListViewSortFormNamespace\n{\n    \n   \n    public class ListViewSortForm : Form\n    {\n        private ListView listView1;\n       \n        public ListViewSortForm()\n        {\n            // Create ListView items to add to the control.\n            ListViewItem listViewItem1 = new ListViewItem(new string[] {&quot;Banana&quot;,&quot;a&quot;,&quot;b&quot;,&quot;c&quot;}, -1, Color.Empty, Color.Yellow, null);\n            ListViewItem listViewItem2 = new ListViewItem(new string[] {&quot;Cherry&quot;,&quot;v&quot;,&quot;g&quot;,&quot;t&quot;}, -1, Color.Empty, Color.Red, new Font(&quot;Microsoft Sans Serif&quot;, 8.25F, FontStyle.Regular, GraphicsUnit.Point, ((System.Byte)(0))));\n            ListViewItem listViewItem3 = new ListViewItem(new string[] {&quot;Apple&quot;,&quot;h&quot;,&quot;j&quot;,&quot;n&quot;}, -1, Color.Empty, Color.Lime, null);\n            ListViewItem listViewItem4 = new ListViewItem(new string[] {&quot;Pear&quot;,&quot;y&quot;,&quot;u&quot;,&quot;i&quot;}, -1, Color.Empty, Color.FromArgb(((System.Byte)(192)), ((System.Byte)(128)), ((System.Byte)(156))), null);\n     \n            //Initialize the ListView control and add columns to it.\n            this.listView1 = new ListView();\n\n            // Set the initial sorting type for the ListView.\n            this.listView1.Sorting = SortOrder.None;\n            // Disable automatic sorting to enable manual sorting.\n            this.listView1.View = View.Details;\n            // Add columns and set their text.\n            this.listView1.Columns.Add(new ColumnHeader());\n            this.listView1.Columns[0].Text = &quot;Column 1&quot;;\n            this.listView1.Columns[0].Width = 100;\n            listView1.Columns.Add(new ColumnHeader());\n            listView1.Columns[1].Text = &quot;Column 2&quot;;\n            listView1.Columns.Add(new ColumnHeader());\n            listView1.Columns[2].Text = &quot;Column 3&quot;;\n            listView1.Columns.Add(new ColumnHeader());\n            listView1.Columns[3].Text = &quot;Column 4&quot;;\n            // Suspend control logic until form is done configuring form.\n            this.SuspendLayout();\n            // Add Items to the ListView control.\n            this.listView1.Items.AddRange(new ListViewItem[] {listViewItem1,\n                listViewItem2,\n                listViewItem3,\n                listViewItem4});\n            // Set the location and size of the ListView control.\n            this.listView1.Location = new Point(10, 10);\n            this.listView1.Name = &quot;listView1&quot;;\n            this.listView1.Size = new Size(300, 100);\n            this.listView1.TabIndex = 0;\n            // Enable editing of the items in the ListView.\n            this.listView1.LabelEdit = true;\n            // Connect the ListView.ColumnClick event to the ColumnClick event handler.\n            this.listView1.ColumnClick += new ColumnClickEventHandler(ColumnClick);\n   \t\t\t\n            // Initialize the form.\n            this.ClientSize = new Size(400, 400);\n            this.Controls.AddRange(new Control[] {this.listView1});\n            this.Name = &quot;ListViewSortForm&quot;;\n            this.Text = &quot;Sorted ListView Control&quot;;\n            // Resume layout of the form.\n            this.ResumeLayout(false);\n        }\n        \n\t\n        // ColumnClick event handler.\n        private void ColumnClick(object o, ColumnClickEventArgs e)\n        {\n            // Set the ListViewItemSorter property to a new ListViewItemComparer \n            // object. Setting this property immediately sorts the \n            // ListView using the ListViewItemComparer object.\n            this.listView1.ListViewItemSorter = new ListViewItemComparer(e.Column);\n        }\n\n        [System.STAThreadAttribute()]\n        public static void Main()\n        {\n            Application.Run(new ListViewSortForm());\n        }\n\n    }\n\n    // Implements the manual sorting of items by columns.\n    class ListViewItemComparer : IComparer\n    {\n        private int col;\n        public ListViewItemComparer()\n        {\n            col = 0;\n        }\n        public ListViewItemComparer(int column)\n        {\n            col = column;\n        }\n        public int Compare(object x, object y)\n        {\n            return String.Compare(((ListViewItem)x).SubItems[col].Text, ((ListViewItem)y).SubItems[col].Text);\n        }\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"ListView.ColumnClick#1\">Imports System\nImports System.Windows.Forms\nImports System.Drawing\nImports System.Collections\n\n\nNamespace ListViewSortFormNamespace\n\n    Public Class ListViewSortForm\n        Inherits Form\n\n        Private listView1 As ListView\n\n        Public Sub New()\n            &#39; Create ListView items to add to the control.\n            Dim listViewItem1 As New ListViewItem(New String() {&quot;Banana&quot;, &quot;a&quot;, &quot;b&quot;, &quot;c&quot;}, -1, Color.Empty, Color.Yellow, Nothing)\n            Dim listViewItem2 As New ListViewItem(New String() {&quot;Cherry&quot;, &quot;v&quot;, &quot;g&quot;, &quot;t&quot;}, -1, Color.Empty, Color.Red, New Font(&quot;Microsoft Sans Serif&quot;, 8.25F, FontStyle.Regular, GraphicsUnit.Point, CType(0, System.Byte)))\n            Dim listViewItem3 As New ListViewItem(New String() {&quot;Apple&quot;, &quot;h&quot;, &quot;j&quot;, &quot;n&quot;}, -1, Color.Empty, Color.Lime, Nothing)\n            Dim listViewItem4 As New ListViewItem(New String() {&quot;Pear&quot;, &quot;y&quot;, &quot;u&quot;, &quot;i&quot;}, -1, Color.Empty, Color.FromArgb(CType(192, System.Byte), CType(128, System.Byte), CType(156, System.Byte)), Nothing)\n\n            &#39;Initialize the ListView control and add columns to it.\n            Me.listView1 = New ListView\n\n            &#39; Set the initial sorting type for the ListView.\n            Me.listView1.Sorting = SortOrder.None\n            &#39; Disable automatic sorting to enable manual sorting.\n            Me.listView1.View = View.Details\n            &#39; Add columns and set their text.\n            Me.listView1.Columns.Add(New ColumnHeader)\n            Me.listView1.Columns(0).Text = &quot;Column 1&quot;\n            Me.listView1.Columns(0).Width = 100\n            listView1.Columns.Add(New ColumnHeader)\n            listView1.Columns(1).Text = &quot;Column 2&quot;\n            listView1.Columns.Add(New ColumnHeader)\n            listView1.Columns(2).Text = &quot;Column 3&quot;\n            listView1.Columns.Add(New ColumnHeader)\n            listView1.Columns(3).Text = &quot;Column 4&quot;\n            &#39; Suspend control logic until form is done configuring form.\n            Me.SuspendLayout()\n            &#39; Add Items to the ListView control.\n            Me.listView1.Items.AddRange(New ListViewItem() {listViewItem1, listViewItem2, listViewItem3, listViewItem4})\n            &#39; Set the location and size of the ListView control.\n            Me.listView1.Location = New Point(10, 10)\n            Me.listView1.Name = &quot;listView1&quot;\n            Me.listView1.Size = New Size(300, 100)\n            Me.listView1.TabIndex = 0\n            &#39; Enable editing of the items in the ListView.\n            Me.listView1.LabelEdit = True\n            &#39; Connect the ListView.ColumnClick event to the ColumnClick event handler.\n            AddHandler Me.listView1.ColumnClick, AddressOf ColumnClick\n\n            &#39; Initialize the form.\n            Me.ClientSize = New Size(400, 400)\n            Me.Controls.AddRange(New Control() {Me.listView1})\n            Me.Name = &quot;ListViewSortForm&quot;\n            Me.Text = &quot;Sorted ListView Control&quot;\n            &#39; Resume layout of the form.\n            Me.ResumeLayout(False)\n        End Sub &#39;New\n\n\n        &#39; ColumnClick event handler.\n        Private Sub ColumnClick(ByVal o As Object, ByVal e As ColumnClickEventArgs)\n            &#39; Set the ListViewItemSorter property to a new ListViewItemComparer \n            &#39; object. Setting this property immediately sorts the \n            &#39; ListView using the ListViewItemComparer object.\n            Me.listView1.ListViewItemSorter = New ListViewItemComparer(e.Column)\n        End Sub\n\n    End Class\n\n    &#39; Implements the manual sorting of items by columns.\n    Class ListViewItemComparer\n        Implements IComparer\n\n        Private col As Integer\n\n        Public Sub New()\n            col = 0\n        End Sub\n\n        Public Sub New(ByVal column As Integer)\n            col = column\n        End Sub\n\n        Public Function Compare(ByVal x As Object, ByVal y As Object) As Integer _\n           Implements IComparer.Compare\n            Return [String].Compare(CType(x, ListViewItem).SubItems(col).Text, CType(y, ListViewItem).SubItems(col).Text)\n        End Function\n    End Class\nEnd Namespace\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ColumnReordered\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnReordered</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the column header order is changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.ColumnReorderedEventHandler ColumnReordered;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ColumnReordered event is a cancelable event and can be canceled by handling the event and setting the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property to <code>true</code>. However, if the event is canceled, the <a class=\"xref\" href=\"system.windows.forms.columnreorderedeventargs#System_Windows_Forms_ColumnReorderedEventArgs_NewDisplayIndex_\" data-linktype=\"relative-path\">NewDisplayIndex</a> of the <a class=\"xref\" href=\"system.windows.forms.columnreorderedeventargs\" data-linktype=\"relative-path\">ColumnReorderedEventArgs</a> will not change to the <a class=\"xref\" href=\"system.windows.forms.columnreorderedeventargs#System_Windows_Forms_ColumnReorderedEventArgs_OldDisplayIndex_\" data-linktype=\"relative-path\">OldDisplayIndex</a> value.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnReordered event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>ListView1</code>. Then ensure that the event handler is associated with the ColumnReordered event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#467\">private void ListView1_ColumnReordered(Object sender, ColumnReorderedEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OldDisplayIndex&quot;, e.OldDisplayIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;NewDisplayIndex&quot;, e.NewDisplayIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Header&quot;, e.Header );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Cancel&quot;, e.Cancel );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnReordered Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#467\">Private Sub ListView1_ColumnReordered(sender as Object, e as ColumnReorderedEventArgs) _ \n     Handles ListView1.ColumnReordered\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OldDisplayIndex&quot;, e.OldDisplayIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;NewDisplayIndex&quot;, e.NewDisplayIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Header&quot;, e.Header)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Cancel&quot;, e.Cancel)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnReordered Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ColumnWidthChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnWidthChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs after the width of a column is successfully changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.ColumnWidthChangedEventHandler ColumnWidthChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event will not occur if the column width change is canceled in the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ColumnWidthChanging\" data-linktype=\"relative-path\">ColumnWidthChanging</a> event  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnWidthChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>ListView1</code>. Then ensure that the event handler is associated with the ColumnWidthChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#468\">private void ListView1_ColumnWidthChanged(Object sender, ColumnWidthChangedEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnWidthChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#468\">Private Sub ListView1_ColumnWidthChanged(sender as Object, e as ColumnWidthChangedEventArgs) _ \n     Handles ListView1.ColumnWidthChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnWidthChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ColumnWidthChanging\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnWidthChanging</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the width of a column is changing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.ColumnWidthChangingEventHandler ColumnWidthChanging;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event allows you to check the new column width with the <a class=\"xref\" href=\"system.windows.forms.columnwidthchangingeventargs#System_Windows_Forms_ColumnWidthChangingEventArgs_NewWidth_\" data-linktype=\"relative-path\">NewWidth</a> property, and cancel the event if you choose by setting the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property to <code>true</code>.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates handling the ColumnWidthChanging event. It also demonstrates the <a class=\"xref\" href=\"system.windows.forms.columnwidthchangingeventargs#System_Windows_Forms_ColumnWidthChangingEventArgs_NewWidth_\" data-linktype=\"relative-path\">NewWidth</a> and <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> members. To run this example, paste the code into a Windows Form. Call <code>InitializeListView1</code> from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListViewWhidbeyProperties#6\">    Private WithEvents listView1 As New ListView()\n\n    Private Sub InitializeListView1()\n\n        &#39; Initialize a ListView in detail view and add some columns.\n        listView1.View = View.Details\n        listView1.Width = 200\n        listView1.Columns.Add(&quot;Column1&quot;)\n        listView1.Columns.Add(&quot;Column2&quot;)\n        Me.Controls.Add(listView1)\n\n    End Sub\n\n\n    &#39; Handle the ColumnWidthChangingEvent.\n    Private Sub listView1_ColumnWidthChanging(ByVal sender As Object, _\n        ByVal e As ColumnWidthChangingEventArgs) _\n        Handles listView1.ColumnWidthChanging\n\n        &#39; Check if the new width is too big or too small.\n        If e.NewWidth &gt; 100 OrElse e.NewWidth &lt; 5 Then\n\n            &#39; Cancel the event and inform the user if the new\n            &#39; width does not meet the criteria.\n            MessageBox.Show(&quot;Column width is too large or too small&quot;)\n            e.Cancel = True\n        End If\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListViewWhidbeyProperties#6\">        ListView listView1 = new ListView();\n        private void InitializeListView1()\n        {\n\t\t\t// Initialize a ListView in detail view and add some columns.\n            listView1.View = View.Details;\n            listView1.Width = 200;\n            listView1.Columns.Add(&quot;Column1&quot;);\n            listView1.Columns.Add(&quot;Column2&quot;);\n\n\t\t\t// Associate a method with the ColumnWidthChangingEvent.\n            listView1.ColumnWidthChanging += \n                new ColumnWidthChangingEventHandler(listView1_ColumnWidthChanging);\n            this.Controls.Add(listView1);\n        }\n       \n\t\t// Handle the ColumnWidthChangingEvent.\n        private void listView1_ColumnWidthChanging(object sender,  \n            ColumnWidthChangingEventArgs e)\n        {\n\t\t\t// Check if the new width is too big or too small.\n            if (e.NewWidth &gt; 100 || e.NewWidth &lt; 5)\n            {\n\t\t\t\t// Cancel the event and inform the user if the new\n\t\t\t\t// width does not meet the criteria.\n                MessageBox.Show(&quot;Column width is too large or too small&quot;);\n\t\t        e.Cancel = true;\n            }\n        }\n        \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_DrawColumnHeader\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawColumnHeader</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the details view of a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is drawn and the <span class=\"xref\">stem.Windows.Forms.ListView.OwnerDraw*</span> property is set to <code>true</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DrawListViewColumnHeaderEventHandler DrawColumnHeader;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event lets you customize the appearance of a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control using owner drawing. It is raised only when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_OwnerDraw_\" data-linktype=\"relative-path\">OwnerDraw</a> property is set to <code>true</code> and the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>. This event can occur for each column header in the control. For more information on owner drawing, see the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_OwnerDraw_\" data-linktype=\"relative-path\">OwnerDraw</a> property reference topic.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example provides an implementation of a DrawColumnHeader event handler. For the complete example, including the implementation of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">DrawSubItem</a> event handler, see the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_OwnerDraw_\" data-linktype=\"relative-path\">OwnerDraw</a> reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"ListViewOwnerDraw#5\">    // Draws column headers.\n    private void listView1_DrawColumnHeader(object sender,\n        DrawListViewColumnHeaderEventArgs e)\n    {\n        using (StringFormat sf = new StringFormat())\n        {\n            // Store the column text alignment, letting it default\n            // to Left if it has not been set to Center or Right.\n            switch (e.Header.TextAlign)\n            {\n                case HorizontalAlignment.Center:\n                    sf.Alignment = StringAlignment.Center;\n                    break;\n                case HorizontalAlignment.Right:\n                    sf.Alignment = StringAlignment.Far;\n                    break;\n            }\n\n            // Draw the standard header background.\n            e.DrawBackground();\n\n            // Draw the header text.\n            using (Font headerFont =\n                        new Font(&quot;Helvetica&quot;, 10, FontStyle.Bold))\n            {\n                e.Graphics.DrawString(e.Header.Text, headerFont,\n                    Brushes.Black, e.Bounds, sf);\n            }\n        }\n        return;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewOwnerDraw#5\">    &#39; Draws column headers.\n    Private Sub listView1_DrawColumnHeader(ByVal sender As Object, _\n        ByVal e As DrawListViewColumnHeaderEventArgs) _\n        Handles listView1.DrawColumnHeader\n\n        Dim sf As New StringFormat()\n        Try\n\n            &#39; Store the column text alignment, letting it default\n            &#39; to Left if it has not been set to Center or Right.\n            Select Case e.Header.TextAlign\n                Case HorizontalAlignment.Center\n                    sf.Alignment = StringAlignment.Center\n                Case HorizontalAlignment.Right\n                    sf.Alignment = StringAlignment.Far\n            End Select\n\n            &#39; Draw the standard header background.\n            e.DrawBackground()\n\n            &#39; Draw the header text.\n            Dim headerFont As New Font(&quot;Helvetica&quot;, 10, FontStyle.Bold)\n            Try\n                e.Graphics.DrawString(e.Header.Text, headerFont, _\n                    Brushes.Black, e.Bounds, sf)\n            Finally\n                headerFont.Dispose()\n            End Try\n\n        Finally\n            sf.Dispose()\n        End Try\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_DrawItem\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawItem</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is drawn and the <span class=\"xref\">stem.Windows.Forms.ListView.OwnerDraw*</span> property is set to <code>true</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DrawListViewItemEventHandler DrawItem;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event lets you customize the appearance of a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control using owner drawing. It is raised only when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_OwnerDraw_\" data-linktype=\"relative-path\">OwnerDraw</a> property is set to <code>true</code>. For more information about owner drawing, see the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_OwnerDraw_\" data-linktype=\"relative-path\">OwnerDraw</a> property reference topic.  </p>\n<p> The DrawItem event can occur for each <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> item. When the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>, the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">DrawSubItem</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawColumnHeader\" data-linktype=\"relative-path\">DrawColumnHeader</a> events also occur. In this case, you can handle the DrawItem event to draw elements common to all items, such as the background, and handle the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">DrawSubItem</a> event to draw elements for individual subitems, such as text values. You can also draw all items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control using only one of the two events, although this may be less convenient. To draw column headers in the details view, you must handle the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawColumnHeader\" data-linktype=\"relative-path\">DrawColumnHeader</a> event.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Because of a bug in the underlying Win32 control, the DrawItem event occurs without accompanying <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">DrawSubItem</a> events once per row in the details view when the mouse pointer moves over the row, causing anything painted in a <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">DrawSubItem</a> event handler to be painted over by a custom background drawn in a DrawItem event handler. See the example in the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_OwnerDraw_\" data-linktype=\"relative-path\">OwnerDraw</a> reference topic for a workaround that invalidates each row when the extra event occurs. An alternative workaround is to put all your custom drawing code in a <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawSubItem\" data-linktype=\"relative-path\">DrawSubItem</a> event handler and paint the background for the entire item (including subitems) only when the <a class=\"xref\" href=\"system.windows.forms.drawlistviewsubitemeventargs#System_Windows_Forms_DrawListViewSubItemEventArgs_ColumnIndex_\" data-linktype=\"relative-path\">ColumnIndex</a> value is 0.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example provides an implementation of a DrawItem event handler. For the complete example, see the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_OwnerDraw_\" data-linktype=\"relative-path\">OwnerDraw</a> reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"ListViewOwnerDraw#3\">    // Draws the backgrounds for entire ListView items.\n    private void listView1_DrawItem(object sender,\n        DrawListViewItemEventArgs e)\n    {\n        if ((e.State &amp; ListViewItemStates.Selected) != 0)\n        {\n            // Draw the background and focus rectangle for a selected item.\n            e.Graphics.FillRectangle(Brushes.Maroon, e.Bounds);\n            e.DrawFocusRectangle();\n        }\n        else\n        {\n            // Draw the background for an unselected item.\n            using (LinearGradientBrush brush =\n                new LinearGradientBrush(e.Bounds, Color.Orange,\n                Color.Maroon, LinearGradientMode.Horizontal))\n            {\n                e.Graphics.FillRectangle(brush, e.Bounds);\n            }\n        }\n\n        // Draw the item text for views other than the Details view.\n        if (listView1.View != View.Details)\n        {\n            e.DrawText();\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewOwnerDraw#3\">    &#39; Draws the backgrounds for entire ListView items.\n    Private Sub listView1_DrawItem(ByVal sender As Object, _\n        ByVal e As DrawListViewItemEventArgs) _\n        Handles listView1.DrawItem\n\n        If Not (e.State And ListViewItemStates.Selected) = 0 Then\n\n            &#39; Draw the background for a selected item.\n            e.Graphics.FillRectangle(Brushes.Maroon, e.Bounds)\n            e.DrawFocusRectangle()\n\n        Else\n\n            &#39; Draw the background for an unselected item.\n            Dim brush As New LinearGradientBrush(e.Bounds, Color.Orange, _\n                Color.Maroon, LinearGradientMode.Horizontal)\n            Try\n                e.Graphics.FillRectangle(brush, e.Bounds)\n            Finally\n                brush.Dispose()\n            End Try\n\n        End If\n\n        &#39; Draw the item text for views other than the Details view.\n        If Not Me.listView1.View = View.Details Then\n            e.DrawText()\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_DrawSubItem\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawSubItem</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the details view of a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is drawn and the <span class=\"xref\">stem.Windows.Forms.ListView.OwnerDraw*</span> property is set to <code>true</code>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DrawListViewSubItemEventHandler DrawSubItem;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event lets you customize the appearance of a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control using owner drawing. It is raised only when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_OwnerDraw_\" data-linktype=\"relative-path\">OwnerDraw</a> property is set to <code>true</code> and the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_View_\" data-linktype=\"relative-path\">View</a> property is set to <a class=\"xref\" href=\"system.windows.forms.view\" data-linktype=\"relative-path\">System.Windows.Forms.View</a>. For more information on owner drawing, see the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_OwnerDraw_\" data-linktype=\"relative-path\">OwnerDraw</a> property reference topic.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Subitem information typically appears in the tile view as well as the details view, but in the tile view, it must be drawn in a handler for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">DrawItem</a> event.  </p>\n</div>\n<p> The DrawSubItem event can occur for each <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> subitem. You can handle the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawItem\" data-linktype=\"relative-path\">DrawItem</a> event to draw elements common to all subitems, such as the background, and handle the DrawSubItem event to draw elements for individual subitems, such as text values. You can also draw all items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control using only one of the two events, although this may be less convenient. To draw column headers in the details view, you must handle the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_DrawColumnHeader\" data-linktype=\"relative-path\">DrawColumnHeader</a> event.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The DrawSubItem event does not occur for any subitems for which no <a class=\"xref\" href=\"system.windows.forms.columnheader\" data-linktype=\"relative-path\">ColumnHeader</a> object has been added to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Columns_\" data-linktype=\"relative-path\">Columns</a> collection. Note also that the first subitem of each <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> object represents the parent item itself, and is displayed in the first column.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example provides an implementation of a DrawSubItem event handler. For the complete example, see the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_OwnerDraw_\" data-linktype=\"relative-path\">OwnerDraw</a> reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"ListViewOwnerDraw#4\">    // Draws subitem text and applies content-based formatting.\n    private void listView1_DrawSubItem(object sender,\n        DrawListViewSubItemEventArgs e)\n    {\n        TextFormatFlags flags = TextFormatFlags.Left;\n\n        using (StringFormat sf = new StringFormat())\n        {\n            // Store the column text alignment, letting it default\n            // to Left if it has not been set to Center or Right.\n            switch (e.Header.TextAlign)\n            {\n                case HorizontalAlignment.Center:\n                    sf.Alignment = StringAlignment.Center;\n                    flags = TextFormatFlags.HorizontalCenter;\n                    break;\n                case HorizontalAlignment.Right:\n                    sf.Alignment = StringAlignment.Far;\n                    flags = TextFormatFlags.Right;\n                    break;\n            }\n\n            // Draw the text and background for a subitem with a \n            // negative value. \n            double subItemValue;\n            if (e.ColumnIndex &gt; 0 &amp;&amp; Double.TryParse(\n                e.SubItem.Text, NumberStyles.Currency,\n                NumberFormatInfo.CurrentInfo, out subItemValue) &amp;&amp;\n                subItemValue &lt; 0)\n            {\n                // Unless the item is selected, draw the standard \n                // background to make it stand out from the gradient.\n                if ((e.ItemState &amp; ListViewItemStates.Selected) == 0)\n                {\n                    e.DrawBackground();\n                }\n\n                // Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text,\n                    listView1.Font, Brushes.Red, e.Bounds, sf);\n\n                return;\n            }\n\n            // Draw normal text for a subitem with a nonnegative \n            // or nonnumerical value.\n            e.DrawText(flags);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"ListViewOwnerDraw#4\">    &#39; Draws subitem text and applies content-based formatting.\n    Private Sub listView1_DrawSubItem(ByVal sender As Object, _\n        ByVal e As DrawListViewSubItemEventArgs) _\n        Handles listView1.DrawSubItem\n\n        Dim flags As TextFormatFlags = TextFormatFlags.Left\n\n        Dim sf As New StringFormat()\n        Try\n\n            &#39; Store the column text alignment, letting it default\n            &#39; to Left if it has not been set to Center or Right.\n            Select Case e.Header.TextAlign\n                Case HorizontalAlignment.Center\n                    sf.Alignment = StringAlignment.Center\n                    flags = TextFormatFlags.HorizontalCenter\n                Case HorizontalAlignment.Right\n                    sf.Alignment = StringAlignment.Far\n                    flags = TextFormatFlags.Right\n            End Select\n\n            &#39; Draw the text and background for a subitem with a \n            &#39; negative value. \n            Dim subItemValue As Double\n            If e.ColumnIndex &gt; 0 AndAlso _\n                Double.TryParse(e.SubItem.Text, NumberStyles.Currency, _\n                NumberFormatInfo.CurrentInfo, subItemValue) AndAlso _\n                subItemValue &lt; 0 Then\n\n                &#39; Unless the item is selected, draw the standard \n                &#39; background to make it stand out from the gradient.\n                If (e.ItemState And ListViewItemStates.Selected) = 0 Then\n                    e.DrawBackground()\n                End If\n\n                &#39; Draw the subitem text in red to highlight it. \n                e.Graphics.DrawString(e.SubItem.Text, _\n                    Me.listView1.Font, Brushes.Red, e.Bounds, sf)\n\n                Return\n\n            End If\n\n            &#39; Draw normal text for a subitem with a nonnegative \n            &#39; or nonnumerical value.\n            e.DrawText(flags)\n\n        Finally\n            sf.Dispose()\n        End Try\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ItemActivate\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemActivate</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an item is activated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ItemActivate;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ItemActivate event occurs when the user activates one or more items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. The user can activate an item with either a single-click or double-click, depending on the value of the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Activation_\" data-linktype=\"relative-path\">Activation</a> property, or with the keyboard. From within the event handler for the ItemActivate event, you can reference the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedItems_\" data-linktype=\"relative-path\">SelectedItems</a> or <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedIndices_\" data-linktype=\"relative-path\">SelectedIndices</a> properties to access the collection of items selected in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> to determine which items are being activated.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ItemActivate event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>ListView1</code>. Then ensure that the event handler is associated with the ItemActivate event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#473\">private void ListView1_ItemActivate(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the ListView.ItemActivate event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#473\">Private Sub ListView1_ItemActivate(sender as Object, e as EventArgs) _ \n     Handles ListView1.ItemActivate\n\n   MessageBox.Show(&quot;You are in the ListView.ItemActivate event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ItemCheck\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemCheck</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the check state of an item changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.ItemCheckEventHandler ItemCheck;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a> property must be set to true in order for check boxes to be displayed next to each item in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control. The ItemCheck event occurs when the check state of an item changes or when the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_CheckBoxes_\" data-linktype=\"relative-path\">CheckBoxes</a> property is set to <code>true</code>. You can create an event handler for the ItemCheck event to perform tasks such as changing the state of an item&#39;s icon or another application-specific task each time an item is checked in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the window handle has not been created when the ItemCheck event is raised, the event will be delayed. Once the window handle is created (when the form is shown), any delayed ItemCheck events will be raised. For more information, see <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleCreated\" data-linktype=\"relative-path\">HandleCreated</a>.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates a checked <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control that handles the ItemCheck event. The method uses the <a class=\"xref\" href=\"system.windows.forms.itemcheckeventargs#System_Windows_Forms_ItemCheckEventArgs_CurrentValue_\" data-linktype=\"relative-path\">CurrentValue</a> and <a class=\"xref\" href=\"system.windows.forms.itemcheckeventargs#System_Windows_Forms_ItemCheckEventArgs_Index_\" data-linktype=\"relative-path\">Index</a> properties to retrieve and tally the price of the menu items selected. To run this example, paste the following code into a form containing a <code>ListView</code> named <code>ListView1</code> and a <code>TextBox</code> named <code>Textbox1</code>. Call the <code>InititalizeListView</code> method from the form&#39;s constructor or <code>Load</code> method. Ensure that the ItemCheck event is associated with the event handler in this example.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView2#1\">\tprivate void InitializeListView()\n\t{\n\t\tthis.ListView1 = new System.Windows.Forms.ListView();\n\n\t\t// Set properties such as BackColor and DockStyle and Location.\n\t\tthis.ListView1.BackColor = System.Drawing.SystemColors.Control;\n\t\tthis.ListView1.Dock = System.Windows.Forms.DockStyle.Top;\n\t\tthis.ListView1.Location = new System.Drawing.Point(0, 0);\n\t\tthis.ListView1.Size = new System.Drawing.Size(292, 130);\n\t\tthis.ListView1.View = System.Windows.Forms.View.Details;\n\t\tthis.ListView1.HideSelection = false;\n\n\t\t// Allow the user to select multiple items.\n\t\tthis.ListView1.MultiSelect = true;\n\n\t\t// Show CheckBoxes in the ListView.\n\t\tthis.ListView1.CheckBoxes = true;\n\t\t\n\t\t//Set the column headers and populate the columns.\n\t\tListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable;\n\t\t\n\t\tColumnHeader columnHeader1 = new ColumnHeader();\n\t\tcolumnHeader1.Text = &quot;Breakfast Choices&quot;;\n\t\tcolumnHeader1.TextAlign = HorizontalAlignment.Left;\n\t\tcolumnHeader1.Width = 146;\n\n\t\tColumnHeader columnHeader2 = new ColumnHeader();\n\t\tcolumnHeader2.Text = &quot;Price Each&quot;;\n\t\tcolumnHeader2.TextAlign = HorizontalAlignment.Center;\n\t\tcolumnHeader2.Width = 142;\n\n       \tthis.ListView1.Columns.Add(columnHeader1);\n\t\tthis.ListView1.Columns.Add(columnHeader2);\n\n\t\tstring[] foodList = new string[]{&quot;Juice&quot;, &quot;Coffee&quot;, \n\t\t\t&quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, \n\t\t\t&quot;Bagel &amp; Cream Cheese&quot;};\n\n\t\tstring[] foodPrice = new string[]{&quot;1.09&quot;, &quot;1.09&quot;, &quot;2.19&quot;, \n\t\t\t&quot;2.79&quot;, &quot;2.09&quot;, &quot;2.69&quot;};\n\t\t\n\t\tint count;\n\n\t\t// Members are added one at a time, so call BeginUpdate to ensure \n\t\t// the list is painted only once, rather than as each list item is added.\n\t\tListView1.BeginUpdate();\n\n\t\tfor(count = 0; count &lt; foodList.Length; count++)\n\t\t{\n\t\t\tListViewItem listItem = new ListViewItem(foodList[count]);\n\t\t\tlistItem.SubItems.Add(foodPrice[count]);\n\t\t\tListView1.Items.Add(listItem);\n\t\t}\n\n\t\t//Call EndUpdate when you finish adding items to the ListView.\n\t\tListView1.EndUpdate();\n\t\tthis.Controls.Add(this.ListView1);\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView2#1\">    Private Sub InitializeListView()\n        Me.ListView1 = New System.Windows.Forms.ListView\n\n        &#39; Set properties such as BackColor, Location and Size\n        Me.ListView1.BackColor = System.Drawing.SystemColors.Control\n        Me.ListView1.Dock = System.Windows.Forms.DockStyle.Top\n        Me.ListView1.Location = New System.Drawing.Point(0, 0)\n        Me.ListView1.Size = New System.Drawing.Size(292, 130)\n        Me.ListView1.View = System.Windows.Forms.View.Details\n        Me.ListView1.HideSelection = False\n\n        &#39; Allow user to select multiple items.\n        Me.ListView1.MultiSelect = True\n\n        &#39; Show check boxes in the ListView.\n        Me.ListView1.CheckBoxes = True\n\n        &#39;Set the column headers and populate the columns.\n        ListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable\n        Dim columnHeader1 As New ColumnHeader\n        With columnHeader1\n            .Text = &quot;Breakfast Choices&quot;\n            .TextAlign = HorizontalAlignment.Left\n            .Width = 146\n        End With\n        Dim columnHeader2 As New ColumnHeader\n        With columnHeader2\n            .Text = &quot;Price Each&quot;\n            .TextAlign = HorizontalAlignment.Center\n            .Width = 142\n        End With\n        Me.ListView1.Columns.Add(columnHeader1)\n        Me.ListView1.Columns.Add(columnHeader2)\n        Dim foodList() As String = New String() {&quot;Juice&quot;, &quot;Coffee&quot;, _\n            &quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, _\n            &quot;Bagel &amp; Cream Cheese&quot;}\n\n        Dim foodPrice() As String = New String() {&quot;1.09&quot;, &quot;1.09&quot;, &quot;2.19&quot;, _\n            &quot;2.79&quot;, &quot;2.09&quot;, &quot;2.69&quot;}\n        Dim count As Integer\n\n        &#39; Members are added one at a time, so call BeginUpdate to ensure \n        &#39; the list is painted only once, rather than as each list item is added.\n        ListView1.BeginUpdate()\n\n        For count = 0 To foodList.Length - 1\n            Dim listItem As New ListViewItem(foodList(count))\n            listItem.SubItems.Add(foodPrice(count))\n            ListView1.Items.Add(listItem)\n        Next\n\n        &#39;Call EndUpdate when you finish adding items to the ListView.\n        ListView1.EndUpdate()\n        Me.Controls.Add(Me.ListView1)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView2#1\">   void InitializeListView()\n   {\n      this-&gt;ListView1 = gcnew System::Windows::Forms::ListView;\n      \n      // Set properties such as BackColor and DockStyle and Location.\n      this-&gt;ListView1-&gt;BackColor = System::Drawing::SystemColors::Control;\n      this-&gt;ListView1-&gt;Dock = System::Windows::Forms::DockStyle::Top;\n      this-&gt;ListView1-&gt;Location = System::Drawing::Point( 0, 0 );\n      this-&gt;ListView1-&gt;Size = System::Drawing::Size( 292, 130 );\n      this-&gt;ListView1-&gt;View = System::Windows::Forms::View::Details;\n      this-&gt;ListView1-&gt;HideSelection = false;\n      \n      // Allow the user to select multiple items.\n      this-&gt;ListView1-&gt;MultiSelect = true;\n      \n      // Show CheckBoxes in the ListView.\n      this-&gt;ListView1-&gt;CheckBoxes = true;\n      \n      //Set the column headers and populate the columns.\n      ListView1-&gt;HeaderStyle = ColumnHeaderStyle::Nonclickable;\n      ColumnHeader^ columnHeader1 = gcnew ColumnHeader;\n      columnHeader1-&gt;Text = &quot;Breakfast Choices&quot;;\n      columnHeader1-&gt;TextAlign = HorizontalAlignment::Left;\n      columnHeader1-&gt;Width = 146;\n      ColumnHeader^ columnHeader2 = gcnew ColumnHeader;\n      columnHeader2-&gt;Text = &quot;Price Each&quot;;\n      columnHeader2-&gt;TextAlign = HorizontalAlignment::Center;\n      columnHeader2-&gt;Width = 142;\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader1 );\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader2 );\n      array&lt;String^&gt;^foodList = {&quot;Juice&quot;,&quot;Coffee&quot;,&quot;Cereal &amp; Milk&quot;,&quot;Fruit Plate&quot;,&quot;Toast &amp; Jelly&quot;,&quot;Bagel &amp; Cream Cheese&quot;};\n      array&lt;String^&gt;^foodPrice = {&quot;1.09&quot;,&quot;1.09&quot;,&quot;2.19&quot;,&quot;2.79&quot;,&quot;2.09&quot;,&quot;2.69&quot;};\n      int count;\n      \n      // Members are added one at a time, so call BeginUpdate to ensure \n      // the list is painted only once, rather than as each list item is added.\n      ListView1-&gt;BeginUpdate();\n      for ( count = 0; count &lt; foodList-&gt;Length; count++ )\n      {\n         ListViewItem^ listItem = gcnew ListViewItem( foodList[ count ] );\n         listItem-&gt;SubItems-&gt;Add( foodPrice[ count ] );\n         ListView1-&gt;Items-&gt;Add( listItem );\n      }\n      \n      //Call EndUpdate when you finish adding items to the ListView.\n      ListView1-&gt;EndUpdate();\n      this-&gt;Controls-&gt;Add( this-&gt;ListView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView2#2\">\tdouble price = 0.0;\n\n\t// Handles the ItemCheck event. The method uses the CurrentValue\n\t// property of the ItemCheckEventArgs to retrieve and tally the  \n\t// price of the menu items selected.  \n\tprivate void ListView1_ItemCheck1(object sender, \n\t\tSystem.Windows.Forms.ItemCheckEventArgs e)\n\t{\n\t\tif (e.CurrentValue==CheckState.Unchecked)\n\t\t{\n\t\t\tprice += Double.Parse(\n\t\t\t\tthis.ListView1.Items[e.Index].SubItems[1].Text);\n\t\t}\n\t\telse if((e.CurrentValue==CheckState.Checked))\n\t\t{\n\t\t\tprice -= Double.Parse(\n\t\t\t\tthis.ListView1.Items[e.Index].SubItems[1].Text);\n\t\t}\n\n\t\t// Output the price to TextBox1.\n\t\tTextBox1.Text = price.ToString();\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView2#2\">    Dim price As Double = 0.0\n\n    &#39; Handles the ItemChecked event. The method uses the CurrentValue property \n    &#39; of the ItemCheckEventArgs to retrieve and tally the price of the menu \n    &#39; items selected.  \n    Private Sub ListView1_ItemCheck1(ByVal sender As Object, _\n        ByVal e As System.Windows.Forms.ItemCheckEventArgs) _\n        Handles ListView1.ItemCheck\n\n        If (e.CurrentValue = CheckState.Unchecked) Then\n            price += Double.Parse( _\n            Me.ListView1.Items(e.Index).SubItems(1).Text)\n        ElseIf (e.CurrentValue = CheckState.Checked) Then\n            price -= Double.Parse( _\n                Me.ListView1.Items(e.Index).SubItems(1).Text)\n        End If\n\n        &#39; Output the price to TextBox1.\n        TextBox1.Text = CType(price, String)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView2#2\">   double price;\n\n   // Handles the ItemCheck event. The method uses the CurrentValue\n   // property of the ItemCheckEventArgs to retrieve and tally the  \n   // price of the menu items selected.  \n   void ListView1_ItemCheck1( Object^ /*sender*/, System::Windows::Forms::ItemCheckEventArgs^ e )\n   {\n      if ( e-&gt;CurrentValue == CheckState::Unchecked )\n      {\n         price += Double::Parse( this-&gt;ListView1-&gt;Items[ e-&gt;Index ]-&gt;SubItems[ 1 ]-&gt;Text );\n      }\n      else\n      if ( (e-&gt;CurrentValue == CheckState::Checked) )\n      {\n         price -= Double::Parse( this-&gt;ListView1-&gt;Items[ e-&gt;Index ]-&gt;SubItems[ 1 ]-&gt;Text );\n      }\n\n\n      \n      // Output the price to TextBox1.\n      TextBox1-&gt;Text = price.ToString();\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ItemChecked\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemChecked</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the checked state of an item changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.ItemCheckedEventHandler ItemChecked;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is similar to the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemCheck\" data-linktype=\"relative-path\">ItemCheck</a> event, but is raised after the item has been checked.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ItemChecked event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> For another example, see the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemCheck\" data-linktype=\"relative-path\">ItemCheck</a> event. The code there works equally well if the event handler is attached to the ItemChecked event.  </p>\n<p> To run this example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>ListView1</code>. Then ensure that the event handler is associated with the ItemChecked event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#475\">private void ListView1_ItemChecked(Object sender, ItemCheckedEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Item&quot;, e.Item );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ItemChecked Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#475\">Private Sub ListView1_ItemChecked(sender as Object, e as ItemCheckedEventArgs) _ \n     Handles ListView1.ItemChecked\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Item&quot;, e.Item)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ItemChecked Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ItemDrag\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemDrag</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user begins dragging an item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.ItemDragEventHandler ItemDrag;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ItemDrag event occurs when the user begins dragging an item. Typically the event handler for the ItemDrag event performs the task of dragging by calling the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoDragDrop_\" data-linktype=\"relative-path\">DoDragDrop</a> method. You can use this event to perform the tasks necessary to drag items into and out of your application&#39;s <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ItemDrag event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>ListView1</code>. Then ensure that the event handler is associated with the ItemDrag event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#476\">private void ListView1_ItemDrag(Object sender, ItemDragEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Item&quot;, e.Item );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ItemDrag Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#476\">Private Sub ListView1_ItemDrag(sender as Object, e as ItemDragEventArgs) _ \n     Handles ListView1.ItemDrag\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Item&quot;, e.Item)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ItemDrag Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ItemMouseHover\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemMouseHover</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the mouse hovers over an item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.ListViewItemMouseHoverEventHandler ItemMouseHover;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ItemMouseHover event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>ListView1</code>. Then ensure that the event handler is associated with the ItemMouseHover event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#477\">private void ListView1_ItemMouseHover(Object sender, ListViewItemMouseHoverEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Item&quot;, e.Item );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ItemMouseHover Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#477\">Private Sub ListView1_ItemMouseHover(sender as Object, e as ListViewItemMouseHoverEventArgs) _ \n     Handles ListView1.ItemMouseHover\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Item&quot;, e.Item)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ItemMouseHover Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_ItemSelectionChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ItemSelectionChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the selection state of an item changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.ListViewItemSelectionChangedEventHandler ItemSelectionChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In virtual mode, the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_VirtualItemsSelectionRangeChanged\" data-linktype=\"relative-path\">VirtualItemsSelectionRangeChanged</a> event will occur when the selection state of multiple items changes.  </p>\n<p> The ItemSelectionChanged event occurs whether the item state changes from selected to deselected or deselected to selected.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ItemSelectionChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>ListView1</code>. Then ensure that the event handler is associated with the ItemSelectionChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#478\">private void ListView1_ItemSelectionChanged(Object sender, ListViewItemSelectionChangedEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsSelected&quot;, e.IsSelected );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Item&quot;, e.Item );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemIndex&quot;, e.ItemIndex );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ItemSelectionChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#478\">Private Sub ListView1_ItemSelectionChanged(sender as Object, e as ListViewItemSelectionChangedEventArgs) _ \n     Handles ListView1.ItemSelectionChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsSelected&quot;, e.IsSelected)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Item&quot;, e.Item)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemIndex&quot;, e.ItemIndex)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ItemSelectionChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_PaddingChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaddingChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.ListView.Padding*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler PaddingChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_Paint\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Paint</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is painted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.PaintEventHandler Paint;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control is drawn by the operating system or is owner drawn, so the Paint event is never raised. For more information about owner-drawing, see the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_OwnerDraw_\" data-linktype=\"relative-path\">OwnerDraw</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_RetrieveVirtualItem\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RetrieveVirtualItem</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is in virtual mode and requires a <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.RetrieveVirtualItemEventHandler RetrieveVirtualItem;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Windows.Forms.RetrieveVirtualItemEventArgs.Item*</span> property is not set to an item when the RetrieveVirtualItem event is handled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> object is in virtual mode, it creates <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> objects dynamically instead of using the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Items_\" data-linktype=\"relative-path\">Items</a> collection. This event is raised when the object must create a <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> object. A handler for this event should create the appropriate <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> or retrieve it from the cache, and pass it back by way of the <a class=\"xref\" href=\"system.windows.forms.retrievevirtualitemeventargs#System_Windows_Forms_RetrieveVirtualItemEventArgs_Item_\" data-linktype=\"relative-path\">Item</a> property.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates a handler for this event. In this example, listView1 needs each <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> to display the square of its index. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView.VirtualMode#2\">    //The basic VirtualMode function.  Dynamically returns a ListViewItem\n    //with the required properties; in this case, the square of the index.\n    void listView1_RetrieveVirtualItem(object sender, RetrieveVirtualItemEventArgs e)\n    {\n        //Caching is not required but improves performance on large sets.\n        //To leave out caching, don&#39;t connect the CacheVirtualItems event \n        //and make sure myCache is null.\n\n        //check to see if the requested item is currently in the cache\n        if (myCache != null &amp;&amp; e.ItemIndex &gt;= firstItem &amp;&amp; e.ItemIndex &lt; firstItem + myCache.Length)\n        {\n            //A cache hit, so get the ListViewItem from the cache instead of making a new one.\n            e.Item = myCache[e.ItemIndex - firstItem];\n        }\n        else\n        {\n            //A cache miss, so create a new ListViewItem and pass it back.\n            int x = e.ItemIndex * e.ItemIndex;\n            e.Item = new ListViewItem(x.ToString());\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView.VirtualMode#2\">    &#39;The basic VirtualMode function.  Dynamically returns a ListViewItem\n    &#39;with the required properties; in this case, the square of the index.\n    Private Sub listView1_RetrieveVirtualItem(ByVal sender As Object, ByVal e As RetrieveVirtualItemEventArgs) Handles listView1.RetrieveVirtualItem\n        &#39;Caching is not required but improves performance on large sets.\n        &#39;To leave out caching, don&#39;t connect the CacheVirtualItems event \n        &#39;and make sure myCache is null.\n        &#39;check to see if the requested item is currently in the cache\n        If Not (myCache Is Nothing) AndAlso e.ItemIndex &gt;= firstItem AndAlso e.ItemIndex &lt; firstItem + myCache.Length Then\n            &#39;A cache hit, so get the ListViewItem from the cache instead of making a new one.\n            e.Item = myCache((e.ItemIndex - firstItem))\n        Else\n            &#39;A cache miss, so create a new ListViewItem and pass it back.\n            Dim x As Integer = e.ItemIndex * e.ItemIndex\n            e.Item = New ListViewItem(x.ToString())\n        End If\n\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_RightToLeftLayoutChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RightToLeftLayoutChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.ListView.RightToLeftLayout*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler RightToLeftLayoutChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RightToLeftLayoutChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>ListView1</code>. Then ensure that the event handler is associated with the RightToLeftLayoutChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#462\">private void ListView1_RightToLeftLayoutChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the ListView.RightToLeftLayoutChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#462\">Private Sub ListView1_RightToLeftLayoutChanged(sender as Object, e as EventArgs) _ \n     Handles ListView1.RightToLeftLayoutChanged\n\n   MessageBox.Show(&quot;You are in the ListView.RightToLeftLayoutChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_SearchForVirtualItem\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SearchForVirtualItem</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is in virtual mode and a search is taking place.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.SearchForVirtualItemEventHandler SearchForVirtualItem;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs when a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is in virtual mode and the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindNearestItem_\" data-linktype=\"relative-path\">FindNearestItem</a> or <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindItemWithText_\" data-linktype=\"relative-path\">FindItemWithText</a> method is called. When handling this event, you should calculate which item from the list of items supplied by the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_Items_\" data-linktype=\"relative-path\">Items</a> property matches the search criteria and set the <a class=\"xref\" href=\"system.windows.forms.searchforvirtualitemeventargs#System_Windows_Forms_SearchForVirtualItemEventArgs_Index_\" data-linktype=\"relative-path\">Index</a> property to the index of the <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a>. If an item is not provided, <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindNearestItem_\" data-linktype=\"relative-path\">FindNearestItem</a> and <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_FindItemWithText_\" data-linktype=\"relative-path\">FindItemWithText</a> will return <code>null</code>.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, a search returns the nearest match to a specified integer in a list of the first ten thousand squares. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView.VirtualMode#4\">    //This event handler enables search functionality, and is called\n    //for every search request when in Virtual mode.\n    void listView1_SearchForVirtualItem(object sender, SearchForVirtualItemEventArgs e)\n    {\n        //We&#39;ve gotten a search request.\n        //In this example, finding the item is easy since it&#39;s\n        //just the square of its index.  We&#39;ll take the square root\n        //and round.\n        double x = 0;\n        if (Double.TryParse(e.Text, out x)) //check if this is a valid search\n        {\n            x = Math.Sqrt(x);\n            x = Math.Round(x);\n            e.Index = (int)x;\n               \n        }\n        //If e.Index is not set, the search returns null.\n        //Note that this only handles simple searches over the entire\n        //list, ignoring any other settings.  Handling Direction, StartIndex,\n        //and the other properties of SearchForVirtualItemEventArgs is up\n        //to this handler.\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView.VirtualMode#4\">    &#39;This event handler enables search functionality, and is called\n    &#39;for every search request when in Virtual mode.\n    Private Sub listView1_SearchForVirtualItem(ByVal sender As Object, ByVal e As SearchForVirtualItemEventArgs) Handles listView1.SearchForVirtualItem\n        &#39;We&#39;ve gotten a search request.\n        &#39;In this example, finding the item is easy since it&#39;s\n        &#39;just the square of its index.  We&#39;ll take the square root\n        &#39;and round.\n        Dim x As Double = 0\n        If [Double].TryParse(e.Text, x) Then &#39;check if this is a valid search\n            x = Math.Sqrt(x)\n            x = Math.Round(x)\n            e.Index = Fix(x)\n        End If\n        &#39;Note that this only handles simple searches over the entire\n        &#39;list, ignoring any other settings.  Handling Direction, StartIndex,\n        &#39;and the other properties of SearchForVirtualItemEventArgs is up\n        &#39;to this handler.\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_SelectedIndexChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedIndexChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.ListView.SelectedIndices*</span> collection changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler SelectedIndexChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedIndices_\" data-linktype=\"relative-path\">SelectedIndices</a> collection changes whenever the <a class=\"xref\" href=\"system.windows.forms.listviewitem#System_Windows_Forms_ListViewItem_Selected_\" data-linktype=\"relative-path\">Selected</a> property of a <a class=\"xref\" href=\"system.windows.forms.listviewitem\" data-linktype=\"relative-path\">ListViewItem</a> changes. The property change can occur programmatically or when the user selects an item or clears the selection of an item. When the user selects an item without pressing CTRL to perform a multiple selection, the control first clears the previous selection. In this case, this event occurs one time for each item that was previously selected and one time for the newly selected item.  </p>\n<p> To determine which items are selected in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control, use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedItems_\" data-linktype=\"relative-path\">SelectedItems</a> property to access the <a class=\"xref\" href=\"system.windows.forms.listview.selectedlistviewitemcollection\" data-linktype=\"relative-path\">ListView+SelectedListViewItemCollection</a>. You can create an event handler for this event to perform tasks whenever there is a change to the selected items in the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> control.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_SelectedItems_\" data-linktype=\"relative-path\">SelectedItems</a> property, SelectedIndexChanged event, <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_HeaderStyle_\" data-linktype=\"relative-path\">HeaderStyle</a> members, and the <a class=\"xref\" href=\"system.windows.forms.listview.selectedlistviewitemcollection\" data-linktype=\"relative-path\">ListView+SelectedListViewItemCollection</a> class. To run this example, paste the following code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> object named <code>ListView1</code> and a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> named <code>TextBox1</code>. Call the <code>InitializeListView</code> method from the form&#39;s constructor or <code>Load</code> method. This example requires that the event handler is correctly associated with the SelectedIndexChanged event  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView1#1\">\t// This method adds two columns to the ListView, setting the Text \n\t// and TextAlign, and Width properties of each ColumnHeader.  The \n\t// HeaderStyle property is set to NonClickable since the ColumnClick \n\t// event is not handled.  Finally the method adds ListViewItems and \n\t// SubItems to each column.\n\tprivate void InitializeListView()\n\t{\n\t\tthis.ListView1 = new System.Windows.Forms.ListView();\n\t\tthis.ListView1.BackColor = System.Drawing.SystemColors.Control;\n\t\tthis.ListView1.Dock = System.Windows.Forms.DockStyle.Top;\n\t\tthis.ListView1.Location = new System.Drawing.Point(0, 0);\n\t\tthis.ListView1.Name = &quot;ListView1&quot;;\n\t\tthis.ListView1.Size = new System.Drawing.Size(292, 130);\n\t\tthis.ListView1.TabIndex = 0;\n\t\tthis.ListView1.View = System.Windows.Forms.View.Details;\n\t\tthis.ListView1.MultiSelect = true;\n\t\tthis.ListView1.HideSelection = false;\n\t\tthis.ListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable;\n\t\t\n\t\tColumnHeader columnHeader1 = new ColumnHeader();\n\t\tcolumnHeader1.Text = &quot;Breakfast Item&quot;;\n\t\tcolumnHeader1.TextAlign = HorizontalAlignment.Left;\n\t\tcolumnHeader1.Width = 146;\n\n\t \tColumnHeader columnHeader2 = new ColumnHeader();\n\t\tcolumnHeader2.Text = &quot;Price Each&quot;;\n\t\tcolumnHeader2.TextAlign = HorizontalAlignment.Center;\n\t\tcolumnHeader2.Width = 142;\n  \n\t\tthis.ListView1.Columns.Add(columnHeader1);\n\t\tthis.ListView1.Columns.Add(columnHeader2);\n\n\t\tstring[] foodList = new string[]{&quot;Juice&quot;, &quot;Coffee&quot;, \n\t\t\t&quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, \n\t\t\t&quot;Bagel &amp; Cream Cheese&quot;};\n\t\tstring[] foodPrice = new string[]{&quot;1.09&quot;, &quot;1.09&quot;, &quot;2.19&quot;, \n\t\t\t&quot;2.49&quot;, &quot;1.49&quot;, &quot;1.49&quot;};\n\t\t\n\t\tfor(int count=0; count &lt; foodList.Length; count++)\n\t\t{\n\t\t\tListViewItem listItem = new ListViewItem(foodList[count]);\n\t\t\tlistItem.SubItems.Add(foodPrice[count]);\n\t\t\tListView1.Items.Add(listItem);\n\t\t}\n\t\tthis.Controls.Add(ListView1);\n\t}\n\t\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView1#1\">    &#39; This method adds two columns to the ListView, setting the Text \n    &#39; and TextAlign, and Width properties of each ColumnHeader.  The \n    &#39; HeaderStyle property is set to NonClickable since the ColumnClick \n    &#39; event is not handled.  Finally the method adds ListViewItems and \n    &#39; SubItems to each column.\n    Private Sub InitializeListView()\n        Me.ListView1 = New System.Windows.Forms.ListView\n        Me.ListView1.BackColor = System.Drawing.SystemColors.Control\n        Me.ListView1.Dock = System.Windows.Forms.DockStyle.Top\n        Me.ListView1.Location = New System.Drawing.Point(0, 0)\n        Me.ListView1.Name = &quot;ListView1&quot;\n        Me.ListView1.Size = New System.Drawing.Size(292, 130)\n        Me.ListView1.TabIndex = 0\n        Me.ListView1.View = System.Windows.Forms.View.Details\n        Me.ListView1.MultiSelect = True\n        Me.ListView1.HideSelection = False\n        ListView1.HeaderStyle = ColumnHeaderStyle.Nonclickable\n        Dim columnHeader1 As New ColumnHeader\n        With columnHeader1\n            .Text = &quot;Breakfast Item&quot;\n            .TextAlign = HorizontalAlignment.Left\n            .Width = 146\n        End With\n        Dim columnHeader2 As New ColumnHeader\n        With columnHeader2\n            .Text = &quot;Price Each&quot;\n            .TextAlign = HorizontalAlignment.Center\n            .Width = 142\n        End With\n\n        Me.ListView1.Columns.Add(columnHeader1)\n        Me.ListView1.Columns.Add(columnHeader2)\n        Dim foodList() As String = New String() {&quot;Juice&quot;, &quot;Coffee&quot;, _\n            &quot;Cereal &amp; Milk&quot;, &quot;Fruit Plate&quot;, &quot;Toast &amp; Jelly&quot;, _\n            &quot;Bagel &amp; Cream Cheese&quot;}\n        Dim foodPrice() As String = New String() {&quot;1.09&quot;, &quot;1.09&quot;, _\n            &quot;2.19&quot;, &quot;2.49&quot;, &quot;1.49&quot;, &quot;1.49&quot;}\n        Dim count As Integer\n        For count = 0 To foodList.Length - 1\n            Dim listItem As New ListViewItem(foodList(count))\n            listItem.SubItems.Add(foodPrice(count))\n            ListView1.Items.Add(listItem)\n        Next\n        Me.Controls.Add(Me.ListView1)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView1#1\">   // This method adds two columns to the ListView, setting the Text \n   // and TextAlign, and Width properties of each ColumnHeader.  The \n   // HeaderStyle property is set to NonClickable since the ColumnClick \n   // event is not handled.  Finally the method adds ListViewItems and \n   // SubItems to each column.\n   void InitializeListView()\n   {\n      this-&gt;ListView1 = gcnew System::Windows::Forms::ListView;\n      this-&gt;ListView1-&gt;BackColor = System::Drawing::SystemColors::Control;\n      this-&gt;ListView1-&gt;Dock = System::Windows::Forms::DockStyle::Top;\n      this-&gt;ListView1-&gt;Location = System::Drawing::Point( 0, 0 );\n      this-&gt;ListView1-&gt;Name = &quot;ListView1&quot;;\n      this-&gt;ListView1-&gt;Size = System::Drawing::Size( 292, 130 );\n      this-&gt;ListView1-&gt;TabIndex = 0;\n      this-&gt;ListView1-&gt;View = System::Windows::Forms::View::Details;\n      this-&gt;ListView1-&gt;MultiSelect = true;\n      this-&gt;ListView1-&gt;HideSelection = false;\n      this-&gt;ListView1-&gt;HeaderStyle = ColumnHeaderStyle::Nonclickable;\n      ColumnHeader^ columnHeader1 = gcnew ColumnHeader;\n      columnHeader1-&gt;Text = &quot;Breakfast Item&quot;;\n      columnHeader1-&gt;TextAlign = HorizontalAlignment::Left;\n      columnHeader1-&gt;Width = 146;\n      ColumnHeader^ columnHeader2 = gcnew ColumnHeader;\n      columnHeader2-&gt;Text = &quot;Price Each&quot;;\n      columnHeader2-&gt;TextAlign = HorizontalAlignment::Center;\n      columnHeader2-&gt;Width = 142;\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader1 );\n      this-&gt;ListView1-&gt;Columns-&gt;Add( columnHeader2 );\n      array&lt;String^&gt;^foodList = {&quot;Juice&quot;,&quot;Coffee&quot;,&quot;Cereal &amp; Milk&quot;,&quot;Fruit Plate&quot;,&quot;Toast &amp; Jelly&quot;,&quot;Bagel &amp; Cream Cheese&quot;};\n      array&lt;String^&gt;^foodPrice = {&quot;1.09&quot;,&quot;1.09&quot;,&quot;2.19&quot;,&quot;2.49&quot;,&quot;1.49&quot;,&quot;1.49&quot;};\n      for ( int count = 0; count &lt; foodList-&gt;Length; count++ )\n      {\n         ListViewItem^ listItem = gcnew ListViewItem( foodList[ count ] );\n         listItem-&gt;SubItems-&gt;Add( foodPrice[ count ] );\n         ListView1-&gt;Items-&gt;Add( listItem );\n\n      }\n      this-&gt;Controls-&gt;Add( ListView1 );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ListView1#2\">\t// Uses the SelectedItems property to retrieve and tally the price \n\t// of the selected menu items.\n\tprivate void ListView1_SelectedIndexChanged_UsingItems(\n\t\tobject sender, System.EventArgs e)\n\t{\n\n\t\tListView.SelectedListViewItemCollection breakfast = \n\t\t\tthis.ListView1.SelectedItems;\n\t\t\n\t\tdouble price = 0.0;\n\t\tforeach ( ListViewItem item in breakfast )\n\t\t{\n\t\t\tprice += Double.Parse(item.SubItems[1].Text);\n\t\t}\n\n\t\t// Output the price to TextBox1.\n\t\tTextBox1.Text = price.ToString();\n\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ListView1#2\">    &#39; Uses the SelectedItems property to retrieve and tally the price \n    &#39; of the selected menu items.\n    Private Sub ListView1_SelectedIndexChanged_UsingItems _\n        (ByVal sender As Object, ByVal e As System.EventArgs) _\n        Handles ListView1.SelectedIndexChanged\n\n        Dim breakfast As ListView.SelectedListViewItemCollection = _\n            Me.ListView1.SelectedItems\n        Dim item As ListViewItem\n        Dim price As Double = 0.0\n        For Each item In breakfast\n            price += Double.Parse(item.SubItems(1).Text)\n        Next\n\n        &#39; Output the price to TextBox1.\n        TextBox1.Text = CType(price, String)\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.ListView1#2\">   // Uses the SelectedItems property to retrieve and tally the price \n   // of the selected menu items.\n   void ListView1_SelectedIndexChanged_UsingItems( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      ListView::SelectedListViewItemCollection^ breakfast = this-&gt;ListView1-&gt;SelectedItems;\n      double price = 0.0;\n      System::Collections::IEnumerator^ myEnum = breakfast-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         ListViewItem^ item = safe_cast&lt;ListViewItem^&gt;(myEnum-&gt;Current);\n         price += Double::Parse( item-&gt;SubItems[ 1 ]-&gt;Text );\n      }\n\n      // Output the price to TextBox1.\n      TextBox1-&gt;Text = price.ToString();\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_TextChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TextChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.ListView.Text*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler TextChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ListView_VirtualItemsSelectionRangeChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VirtualItemsSelectionRangeChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is in virtual mode and the selection state of a range of items has changed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventHandler VirtualItemsSelectionRangeChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> is not in virtual mode, the <a class=\"xref\" href=\"system.windows.forms.listview#System_Windows_Forms_ListView_ItemSelectionChanged\" data-linktype=\"relative-path\">ItemSelectionChanged</a> event will occur.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the VirtualItemsSelectionRangeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.listview\" data-linktype=\"relative-path\">ListView</a> named <code>ListView1</code>. Then ensure that the event handler is associated with the VirtualItemsSelectionRangeChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#482\">private void ListView1_VirtualItemsSelectionRangeChanged(Object sender, ListViewVirtualItemsSelectionRangeChangedEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;EndIndex&quot;, e.EndIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsSelected&quot;, e.IsSelected );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;StartIndex&quot;, e.StartIndex );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;VirtualItemsSelectionRangeChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#482\">Private Sub ListView1_VirtualItemsSelectionRangeChanged(sender as Object, e as ListViewVirtualItemsSelectionRangeChangedEventArgs) _ \n     Handles ListView1.VirtualItemsSelectionRangeChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;EndIndex&quot;, e.EndIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;IsSelected&quot;, e.IsSelected)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;StartIndex&quot;, e.StartIndex)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;VirtualItemsSelectionRangeChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.ListView.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.ListView.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.Activation\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.AfterLabelEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_AfterLabelEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_AfterLabelEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.Alignment\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.AllowColumnReorder\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.ArrangeIcons\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.AutoArrange\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.AutoResizeColumn\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.AutoResizeColumns\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.BackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.BackgroundImageLayout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.BackgroundImageLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_BackgroundImageLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_BackgroundImageLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.BackgroundImageTiled\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.BeforeLabelEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_BeforeLabelEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_BeforeLabelEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.BeginUpdate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.BorderStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.CacheVirtualItems\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_CacheVirtualItems\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_CacheVirtualItems\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.CheckBoxes\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.CheckedIndices\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.CheckedItems\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.Clear\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.ColumnClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_ColumnClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_ColumnClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.ColumnReordered\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_ColumnReordered\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_ColumnReordered\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.Columns\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.ColumnWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_ColumnWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_ColumnWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.ColumnWidthChanging\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_ColumnWidthChanging\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_ColumnWidthChanging\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.CreateHandle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.CreateParams\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.DefaultSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.DoubleBuffered\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.DrawColumnHeader\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_DrawColumnHeader\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_DrawColumnHeader\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.DrawItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_DrawItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_DrawItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.DrawSubItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_DrawSubItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_DrawSubItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.EndUpdate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.EnsureVisible\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.FindItemWithText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.FindNearestItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.FocusedItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.ForeColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.FullRowSelect\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.GetItemAt\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.GetItemRect\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.GridLines\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.Groups\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.HeaderStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.HideSelection\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.HitTest\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.HotTracking\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.HoverSelection\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.InsertionMark\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.IsInputKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.ItemActivate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_ItemActivate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_ItemActivate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.ItemCheck\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_ItemCheck\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_ItemCheck\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.ItemChecked\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_ItemChecked\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_ItemChecked\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.ItemDrag\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_ItemDrag\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_ItemDrag\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.ItemMouseHover\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_ItemMouseHover\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_ItemMouseHover\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.Items\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.ItemSelectionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_ItemSelectionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_ItemSelectionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.LabelEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.LabelWrap\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.LargeImageList\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.ListViewItemSorter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.MultiSelect\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnAfterLabelEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnBackgroundImageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnBeforeLabelEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnCacheVirtualItems\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnColumnClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnColumnReordered\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnColumnWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnColumnWidthChanging\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnDrawColumnHeader\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnDrawItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnDrawSubItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnFontChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnHandleCreated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnHandleDestroyed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnItemActivate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnItemCheck\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnItemChecked\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnItemDrag\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnItemMouseHover\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnItemSelectionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnMouseHover\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnMouseLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnParentChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnResize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnRetrieveVirtualItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnRightToLeftLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnSearchForVirtualItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnSelectedIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnSystemColorsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.OwnerDraw\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.Padding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.PaddingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_PaddingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_PaddingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.Paint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_Paint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_Paint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.RealizeProperties\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.RedrawItems\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.RetrieveVirtualItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_RetrieveVirtualItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_RetrieveVirtualItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.RightToLeftLayout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.RightToLeftLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_RightToLeftLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_RightToLeftLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.Scrollable\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.SearchForVirtualItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_SearchForVirtualItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_SearchForVirtualItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.SelectedIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_SelectedIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_SelectedIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.SelectedIndices\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.SelectedItems\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.ShowGroups\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.ShowItemToolTips\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.SmallImageList\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.Sort\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.Sorting\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.StateImageList\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.Text\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.TextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_TextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_TextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.TileSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.TopItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.ToString\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.UpdateExtendedStyles\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.UseCompatibleStateImageBehavior\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.View\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.add_VirtualItemsSelectionRangeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.remove_VirtualItemsSelectionRangeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.VirtualListSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.VirtualMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ListView.WndProc\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"85fd8299-7b9a-b7c1-01f6-6c43b37c4005\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\ListView.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a Windows list view control, which displays a collection of items that can be displayed using one of four different views.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.ListView\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.ListView.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.ListView.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.ListView","System.Windows.Forms.ListView..ctor","System.Windows.Forms.ListView.Activation","System.Windows.Forms.ListView.AfterLabelEdit","System.Windows.Forms.ListView.add_AfterLabelEdit","System.Windows.Forms.ListView.remove_AfterLabelEdit","System.Windows.Forms.ListView.Alignment","System.Windows.Forms.ListView.AllowColumnReorder","System.Windows.Forms.ListView.ArrangeIcons","System.Windows.Forms.ListView.AutoArrange","System.Windows.Forms.ListView.AutoResizeColumn","System.Windows.Forms.ListView.AutoResizeColumns","System.Windows.Forms.ListView.BackColor","System.Windows.Forms.ListView.BackgroundImageLayout","System.Windows.Forms.ListView.BackgroundImageLayoutChanged","System.Windows.Forms.ListView.add_BackgroundImageLayoutChanged","System.Windows.Forms.ListView.remove_BackgroundImageLayoutChanged","System.Windows.Forms.ListView.BackgroundImageTiled","System.Windows.Forms.ListView.BeforeLabelEdit","System.Windows.Forms.ListView.add_BeforeLabelEdit","System.Windows.Forms.ListView.remove_BeforeLabelEdit","System.Windows.Forms.ListView.BeginUpdate","System.Windows.Forms.ListView.BorderStyle","System.Windows.Forms.ListView.CacheVirtualItems","System.Windows.Forms.ListView.add_CacheVirtualItems","System.Windows.Forms.ListView.remove_CacheVirtualItems","System.Windows.Forms.ListView.CheckBoxes","System.Windows.Forms.ListView.CheckedIndices","System.Windows.Forms.ListView.CheckedItems","System.Windows.Forms.ListView.Clear","System.Windows.Forms.ListView.ColumnClick","System.Windows.Forms.ListView.add_ColumnClick","System.Windows.Forms.ListView.remove_ColumnClick","System.Windows.Forms.ListView.ColumnReordered","System.Windows.Forms.ListView.add_ColumnReordered","System.Windows.Forms.ListView.remove_ColumnReordered","System.Windows.Forms.ListView.Columns","System.Windows.Forms.ListView.ColumnWidthChanged","System.Windows.Forms.ListView.add_ColumnWidthChanged","System.Windows.Forms.ListView.remove_ColumnWidthChanged","System.Windows.Forms.ListView.ColumnWidthChanging","System.Windows.Forms.ListView.add_ColumnWidthChanging","System.Windows.Forms.ListView.remove_ColumnWidthChanging","System.Windows.Forms.ListView.CreateHandle","System.Windows.Forms.ListView.CreateParams","System.Windows.Forms.ListView.DefaultSize","System.Windows.Forms.ListView.Dispose","System.Windows.Forms.ListView.DoubleBuffered","System.Windows.Forms.ListView.DrawColumnHeader","System.Windows.Forms.ListView.add_DrawColumnHeader","System.Windows.Forms.ListView.remove_DrawColumnHeader","System.Windows.Forms.ListView.DrawItem","System.Windows.Forms.ListView.add_DrawItem","System.Windows.Forms.ListView.remove_DrawItem","System.Windows.Forms.ListView.DrawSubItem","System.Windows.Forms.ListView.add_DrawSubItem","System.Windows.Forms.ListView.remove_DrawSubItem","System.Windows.Forms.ListView.EndUpdate","System.Windows.Forms.ListView.EnsureVisible","System.Windows.Forms.ListView.FindItemWithText","System.Windows.Forms.ListView.FindNearestItem","System.Windows.Forms.ListView.FocusedItem","System.Windows.Forms.ListView.ForeColor","System.Windows.Forms.ListView.FullRowSelect","System.Windows.Forms.ListView.GetItemAt","System.Windows.Forms.ListView.GetItemRect","System.Windows.Forms.ListView.GridLines","System.Windows.Forms.ListView.Groups","System.Windows.Forms.ListView.HeaderStyle","System.Windows.Forms.ListView.HideSelection","System.Windows.Forms.ListView.HitTest","System.Windows.Forms.ListView.HotTracking","System.Windows.Forms.ListView.HoverSelection","System.Windows.Forms.ListView.InsertionMark","System.Windows.Forms.ListView.IsInputKey","System.Windows.Forms.ListView.ItemActivate","System.Windows.Forms.ListView.add_ItemActivate","System.Windows.Forms.ListView.remove_ItemActivate","System.Windows.Forms.ListView.ItemCheck","System.Windows.Forms.ListView.add_ItemCheck","System.Windows.Forms.ListView.remove_ItemCheck","System.Windows.Forms.ListView.ItemChecked","System.Windows.Forms.ListView.add_ItemChecked","System.Windows.Forms.ListView.remove_ItemChecked","System.Windows.Forms.ListView.ItemDrag","System.Windows.Forms.ListView.add_ItemDrag","System.Windows.Forms.ListView.remove_ItemDrag","System.Windows.Forms.ListView.ItemMouseHover","System.Windows.Forms.ListView.add_ItemMouseHover","System.Windows.Forms.ListView.remove_ItemMouseHover","System.Windows.Forms.ListView.Items","System.Windows.Forms.ListView.ItemSelectionChanged","System.Windows.Forms.ListView.add_ItemSelectionChanged","System.Windows.Forms.ListView.remove_ItemSelectionChanged","System.Windows.Forms.ListView.LabelEdit","System.Windows.Forms.ListView.LabelWrap","System.Windows.Forms.ListView.LargeImageList","System.Windows.Forms.ListView.ListViewItemSorter","System.Windows.Forms.ListView.MultiSelect","System.Windows.Forms.ListView.OnAfterLabelEdit","System.Windows.Forms.ListView.OnBackgroundImageChanged","System.Windows.Forms.ListView.OnBeforeLabelEdit","System.Windows.Forms.ListView.OnCacheVirtualItems","System.Windows.Forms.ListView.OnColumnClick","System.Windows.Forms.ListView.OnColumnReordered","System.Windows.Forms.ListView.OnColumnWidthChanged","System.Windows.Forms.ListView.OnColumnWidthChanging","System.Windows.Forms.ListView.OnDrawColumnHeader","System.Windows.Forms.ListView.OnDrawItem","System.Windows.Forms.ListView.OnDrawSubItem","System.Windows.Forms.ListView.OnFontChanged","System.Windows.Forms.ListView.OnHandleCreated","System.Windows.Forms.ListView.OnHandleDestroyed","System.Windows.Forms.ListView.OnItemActivate","System.Windows.Forms.ListView.OnItemCheck","System.Windows.Forms.ListView.OnItemChecked","System.Windows.Forms.ListView.OnItemDrag","System.Windows.Forms.ListView.OnItemMouseHover","System.Windows.Forms.ListView.OnItemSelectionChanged","System.Windows.Forms.ListView.OnMouseHover","System.Windows.Forms.ListView.OnMouseLeave","System.Windows.Forms.ListView.OnParentChanged","System.Windows.Forms.ListView.OnResize","System.Windows.Forms.ListView.OnRetrieveVirtualItem","System.Windows.Forms.ListView.OnRightToLeftLayoutChanged","System.Windows.Forms.ListView.OnSearchForVirtualItem","System.Windows.Forms.ListView.OnSelectedIndexChanged","System.Windows.Forms.ListView.OnSystemColorsChanged","System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged","System.Windows.Forms.ListView.OwnerDraw","System.Windows.Forms.ListView.Padding","System.Windows.Forms.ListView.PaddingChanged","System.Windows.Forms.ListView.add_PaddingChanged","System.Windows.Forms.ListView.remove_PaddingChanged","System.Windows.Forms.ListView.Paint","System.Windows.Forms.ListView.add_Paint","System.Windows.Forms.ListView.remove_Paint","System.Windows.Forms.ListView.RealizeProperties","System.Windows.Forms.ListView.RedrawItems","System.Windows.Forms.ListView.RetrieveVirtualItem","System.Windows.Forms.ListView.add_RetrieveVirtualItem","System.Windows.Forms.ListView.remove_RetrieveVirtualItem","System.Windows.Forms.ListView.RightToLeftLayout","System.Windows.Forms.ListView.RightToLeftLayoutChanged","System.Windows.Forms.ListView.add_RightToLeftLayoutChanged","System.Windows.Forms.ListView.remove_RightToLeftLayoutChanged","System.Windows.Forms.ListView.Scrollable","System.Windows.Forms.ListView.SearchForVirtualItem","System.Windows.Forms.ListView.add_SearchForVirtualItem","System.Windows.Forms.ListView.remove_SearchForVirtualItem","System.Windows.Forms.ListView.SelectedIndexChanged","System.Windows.Forms.ListView.add_SelectedIndexChanged","System.Windows.Forms.ListView.remove_SelectedIndexChanged","System.Windows.Forms.ListView.SelectedIndices","System.Windows.Forms.ListView.SelectedItems","System.Windows.Forms.ListView.ShowGroups","System.Windows.Forms.ListView.ShowItemToolTips","System.Windows.Forms.ListView.SmallImageList","System.Windows.Forms.ListView.Sort","System.Windows.Forms.ListView.Sorting","System.Windows.Forms.ListView.StateImageList","System.Windows.Forms.ListView.Text","System.Windows.Forms.ListView.TextChanged","System.Windows.Forms.ListView.add_TextChanged","System.Windows.Forms.ListView.remove_TextChanged","System.Windows.Forms.ListView.TileSize","System.Windows.Forms.ListView.TopItem","System.Windows.Forms.ListView.ToString","System.Windows.Forms.ListView.UpdateExtendedStyles","System.Windows.Forms.ListView.UseCompatibleStateImageBehavior","System.Windows.Forms.ListView.View","System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged","System.Windows.Forms.ListView.add_VirtualItemsSelectionRangeChanged","System.Windows.Forms.ListView.remove_VirtualItemsSelectionRangeChanged","System.Windows.Forms.ListView.VirtualListSize","System.Windows.Forms.ListView.VirtualMode","System.Windows.Forms.ListView.WndProc"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.ListView","System::Windows::Forms::ListView","System.Windows.Forms.ListView.#ctor","System::Windows::Forms::ListView::#ctor","System.Windows.Forms.ListView.Activation","System::Windows::Forms::ListView::Activation","System.Windows.Forms.ListView.AfterLabelEdit","System::Windows::Forms::ListView::AfterLabelEdit","System.Windows.Forms.ListView.Alignment","System::Windows::Forms::ListView::Alignment","System.Windows.Forms.ListView.AllowColumnReorder","System::Windows::Forms::ListView::AllowColumnReorder","System.Windows.Forms.ListView.ArrangeIcons","System::Windows::Forms::ListView::ArrangeIcons","System.Windows.Forms.ListView.AutoArrange","System::Windows::Forms::ListView::AutoArrange","System.Windows.Forms.ListView.AutoResizeColumn","System::Windows::Forms::ListView::AutoResizeColumn","System.Windows.Forms.ListView.AutoResizeColumns","System::Windows::Forms::ListView::AutoResizeColumns","System.Windows.Forms.ListView.BackColor","System::Windows::Forms::ListView::BackColor","System.Windows.Forms.ListView.BackgroundImageLayout","System::Windows::Forms::ListView::BackgroundImageLayout","System.Windows.Forms.ListView.BackgroundImageLayoutChanged","System::Windows::Forms::ListView::BackgroundImageLayoutChanged","System.Windows.Forms.ListView.BackgroundImageTiled","System::Windows::Forms::ListView::BackgroundImageTiled","System.Windows.Forms.ListView.BeforeLabelEdit","System::Windows::Forms::ListView::BeforeLabelEdit","System.Windows.Forms.ListView.BeginUpdate","System::Windows::Forms::ListView::BeginUpdate","System.Windows.Forms.ListView.BorderStyle","System::Windows::Forms::ListView::BorderStyle","System.Windows.Forms.ListView.CacheVirtualItems","System::Windows::Forms::ListView::CacheVirtualItems","System.Windows.Forms.ListView.CheckBoxes","System::Windows::Forms::ListView::CheckBoxes","System.Windows.Forms.ListView.CheckedIndices","System::Windows::Forms::ListView::CheckedIndices","System.Windows.Forms.ListView.CheckedItems","System::Windows::Forms::ListView::CheckedItems","System.Windows.Forms.ListView.Clear","System::Windows::Forms::ListView::Clear","System.Windows.Forms.ListView.ColumnClick","System::Windows::Forms::ListView::ColumnClick","System.Windows.Forms.ListView.ColumnReordered","System::Windows::Forms::ListView::ColumnReordered","System.Windows.Forms.ListView.Columns","System::Windows::Forms::ListView::Columns","System.Windows.Forms.ListView.ColumnWidthChanged","System::Windows::Forms::ListView::ColumnWidthChanged","System.Windows.Forms.ListView.ColumnWidthChanging","System::Windows::Forms::ListView::ColumnWidthChanging","System.Windows.Forms.ListView.CreateHandle","System::Windows::Forms::ListView::CreateHandle","System.Windows.Forms.ListView.CreateParams","System::Windows::Forms::ListView::CreateParams","System.Windows.Forms.ListView.DefaultSize","System::Windows::Forms::ListView::DefaultSize","System.Windows.Forms.ListView.Dispose","System::Windows::Forms::ListView::Dispose","System.Windows.Forms.ListView.DoubleBuffered","System::Windows::Forms::ListView::DoubleBuffered","System.Windows.Forms.ListView.DrawColumnHeader","System::Windows::Forms::ListView::DrawColumnHeader","System.Windows.Forms.ListView.DrawItem","System::Windows::Forms::ListView::DrawItem","System.Windows.Forms.ListView.DrawSubItem","System::Windows::Forms::ListView::DrawSubItem","System.Windows.Forms.ListView.EndUpdate","System::Windows::Forms::ListView::EndUpdate","System.Windows.Forms.ListView.EnsureVisible","System::Windows::Forms::ListView::EnsureVisible","System.Windows.Forms.ListView.FindItemWithText","System::Windows::Forms::ListView::FindItemWithText","System.Windows.Forms.ListView.FindNearestItem","System::Windows::Forms::ListView::FindNearestItem","System.Windows.Forms.ListView.FocusedItem","System::Windows::Forms::ListView::FocusedItem","System.Windows.Forms.ListView.ForeColor","System::Windows::Forms::ListView::ForeColor","System.Windows.Forms.ListView.FullRowSelect","System::Windows::Forms::ListView::FullRowSelect","System.Windows.Forms.ListView.GetItemAt","System::Windows::Forms::ListView::GetItemAt","System.Windows.Forms.ListView.GetItemRect","System::Windows::Forms::ListView::GetItemRect","System.Windows.Forms.ListView.GridLines","System::Windows::Forms::ListView::GridLines","System.Windows.Forms.ListView.Groups","System::Windows::Forms::ListView::Groups","System.Windows.Forms.ListView.HeaderStyle","System::Windows::Forms::ListView::HeaderStyle","System.Windows.Forms.ListView.HideSelection","System::Windows::Forms::ListView::HideSelection","System.Windows.Forms.ListView.HitTest","System::Windows::Forms::ListView::HitTest","System.Windows.Forms.ListView.HotTracking","System::Windows::Forms::ListView::HotTracking","System.Windows.Forms.ListView.HoverSelection","System::Windows::Forms::ListView::HoverSelection","System.Windows.Forms.ListView.InsertionMark","System::Windows::Forms::ListView::InsertionMark","System.Windows.Forms.ListView.IsInputKey","System::Windows::Forms::ListView::IsInputKey","System.Windows.Forms.ListView.ItemActivate","System::Windows::Forms::ListView::ItemActivate","System.Windows.Forms.ListView.ItemCheck","System::Windows::Forms::ListView::ItemCheck","System.Windows.Forms.ListView.ItemChecked","System::Windows::Forms::ListView::ItemChecked","System.Windows.Forms.ListView.ItemDrag","System::Windows::Forms::ListView::ItemDrag","System.Windows.Forms.ListView.ItemMouseHover","System::Windows::Forms::ListView::ItemMouseHover","System.Windows.Forms.ListView.Items","System::Windows::Forms::ListView::Items","System.Windows.Forms.ListView.ItemSelectionChanged","System::Windows::Forms::ListView::ItemSelectionChanged","System.Windows.Forms.ListView.LabelEdit","System::Windows::Forms::ListView::LabelEdit","System.Windows.Forms.ListView.LabelWrap","System::Windows::Forms::ListView::LabelWrap","System.Windows.Forms.ListView.LargeImageList","System::Windows::Forms::ListView::LargeImageList","System.Windows.Forms.ListView.ListViewItemSorter","System::Windows::Forms::ListView::ListViewItemSorter","System.Windows.Forms.ListView.MultiSelect","System::Windows::Forms::ListView::MultiSelect","System.Windows.Forms.ListView.OnAfterLabelEdit","System::Windows::Forms::ListView::OnAfterLabelEdit","System.Windows.Forms.ListView.OnBackgroundImageChanged","System::Windows::Forms::ListView::OnBackgroundImageChanged","System.Windows.Forms.ListView.OnBeforeLabelEdit","System::Windows::Forms::ListView::OnBeforeLabelEdit","System.Windows.Forms.ListView.OnCacheVirtualItems","System::Windows::Forms::ListView::OnCacheVirtualItems","System.Windows.Forms.ListView.OnColumnClick","System::Windows::Forms::ListView::OnColumnClick","System.Windows.Forms.ListView.OnColumnReordered","System::Windows::Forms::ListView::OnColumnReordered","System.Windows.Forms.ListView.OnColumnWidthChanged","System::Windows::Forms::ListView::OnColumnWidthChanged","System.Windows.Forms.ListView.OnColumnWidthChanging","System::Windows::Forms::ListView::OnColumnWidthChanging","System.Windows.Forms.ListView.OnDrawColumnHeader","System::Windows::Forms::ListView::OnDrawColumnHeader","System.Windows.Forms.ListView.OnDrawItem","System::Windows::Forms::ListView::OnDrawItem","System.Windows.Forms.ListView.OnDrawSubItem","System::Windows::Forms::ListView::OnDrawSubItem","System.Windows.Forms.ListView.OnFontChanged","System::Windows::Forms::ListView::OnFontChanged","System.Windows.Forms.ListView.OnHandleCreated","System::Windows::Forms::ListView::OnHandleCreated","System.Windows.Forms.ListView.OnHandleDestroyed","System::Windows::Forms::ListView::OnHandleDestroyed","System.Windows.Forms.ListView.OnItemActivate","System::Windows::Forms::ListView::OnItemActivate","System.Windows.Forms.ListView.OnItemCheck","System::Windows::Forms::ListView::OnItemCheck","System.Windows.Forms.ListView.OnItemChecked","System::Windows::Forms::ListView::OnItemChecked","System.Windows.Forms.ListView.OnItemDrag","System::Windows::Forms::ListView::OnItemDrag","System.Windows.Forms.ListView.OnItemMouseHover","System::Windows::Forms::ListView::OnItemMouseHover","System.Windows.Forms.ListView.OnItemSelectionChanged","System::Windows::Forms::ListView::OnItemSelectionChanged","System.Windows.Forms.ListView.OnMouseHover","System::Windows::Forms::ListView::OnMouseHover","System.Windows.Forms.ListView.OnMouseLeave","System::Windows::Forms::ListView::OnMouseLeave","System.Windows.Forms.ListView.OnParentChanged","System::Windows::Forms::ListView::OnParentChanged","System.Windows.Forms.ListView.OnResize","System::Windows::Forms::ListView::OnResize","System.Windows.Forms.ListView.OnRetrieveVirtualItem","System::Windows::Forms::ListView::OnRetrieveVirtualItem","System.Windows.Forms.ListView.OnRightToLeftLayoutChanged","System::Windows::Forms::ListView::OnRightToLeftLayoutChanged","System.Windows.Forms.ListView.OnSearchForVirtualItem","System::Windows::Forms::ListView::OnSearchForVirtualItem","System.Windows.Forms.ListView.OnSelectedIndexChanged","System::Windows::Forms::ListView::OnSelectedIndexChanged","System.Windows.Forms.ListView.OnSystemColorsChanged","System::Windows::Forms::ListView::OnSystemColorsChanged","System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged","System::Windows::Forms::ListView::OnVirtualItemsSelectionRangeChanged","System.Windows.Forms.ListView.OwnerDraw","System::Windows::Forms::ListView::OwnerDraw","System.Windows.Forms.ListView.Padding","System::Windows::Forms::ListView::Padding","System.Windows.Forms.ListView.PaddingChanged","System::Windows::Forms::ListView::PaddingChanged","System.Windows.Forms.ListView.Paint","System::Windows::Forms::ListView::Paint","System.Windows.Forms.ListView.RealizeProperties","System::Windows::Forms::ListView::RealizeProperties","System.Windows.Forms.ListView.RedrawItems","System::Windows::Forms::ListView::RedrawItems","System.Windows.Forms.ListView.RetrieveVirtualItem","System::Windows::Forms::ListView::RetrieveVirtualItem","System.Windows.Forms.ListView.RightToLeftLayout","System::Windows::Forms::ListView::RightToLeftLayout","System.Windows.Forms.ListView.RightToLeftLayoutChanged","System::Windows::Forms::ListView::RightToLeftLayoutChanged","System.Windows.Forms.ListView.Scrollable","System::Windows::Forms::ListView::Scrollable","System.Windows.Forms.ListView.SearchForVirtualItem","System::Windows::Forms::ListView::SearchForVirtualItem","System.Windows.Forms.ListView.SelectedIndexChanged","System::Windows::Forms::ListView::SelectedIndexChanged","System.Windows.Forms.ListView.SelectedIndices","System::Windows::Forms::ListView::SelectedIndices","System.Windows.Forms.ListView.SelectedItems","System::Windows::Forms::ListView::SelectedItems","System.Windows.Forms.ListView.ShowGroups","System::Windows::Forms::ListView::ShowGroups","System.Windows.Forms.ListView.ShowItemToolTips","System::Windows::Forms::ListView::ShowItemToolTips","System.Windows.Forms.ListView.SmallImageList","System::Windows::Forms::ListView::SmallImageList","System.Windows.Forms.ListView.Sort","System::Windows::Forms::ListView::Sort","System.Windows.Forms.ListView.Sorting","System::Windows::Forms::ListView::Sorting","System.Windows.Forms.ListView.StateImageList","System::Windows::Forms::ListView::StateImageList","System.Windows.Forms.ListView.Text","System::Windows::Forms::ListView::Text","System.Windows.Forms.ListView.TextChanged","System::Windows::Forms::ListView::TextChanged","System.Windows.Forms.ListView.TileSize","System::Windows::Forms::ListView::TileSize","System.Windows.Forms.ListView.TopItem","System::Windows::Forms::ListView::TopItem","System.Windows.Forms.ListView.ToString","System::Windows::Forms::ListView::ToString","System.Windows.Forms.ListView.UpdateExtendedStyles","System::Windows::Forms::ListView::UpdateExtendedStyles","System.Windows.Forms.ListView.UseCompatibleStateImageBehavior","System::Windows::Forms::ListView::UseCompatibleStateImageBehavior","System.Windows.Forms.ListView.View","System::Windows::Forms::ListView::View","System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged","System::Windows::Forms::ListView::VirtualItemsSelectionRangeChanged","System.Windows.Forms.ListView.VirtualListSize","System::Windows::Forms::ListView::VirtualListSize","System.Windows.Forms.ListView.VirtualMode","System::Windows::Forms::ListView::VirtualMode","System.Windows.Forms.ListView.WndProc","System::Windows::Forms::ListView::WndProc"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"85fd8299-7b9a-b7c1-01f6-6c43b37c4005","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\ListView.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/ListView.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ListView class | Microsoft Docs","_op_ogTitle":"ListView class","description":"Represents a Windows list view control, which displays a collection of items that can be displayed using one of four different views.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.ListView","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.listview","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.listview","fileRelativePath":"System.Windows.Forms.ListView.html"},"themesRelativePathToOutputRoot":"_themes/"}