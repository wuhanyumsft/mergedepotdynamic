{"content":"    \r\n    <h1 id=\"Microsoft_Build_BuildEngine_BuildItem\">\r\n      <span class=\"lang-csharp\">BuildItem</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a single item in an <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/vstecmsbuild-md.md&quot; -->MSBuild<!--END INCLUDE --> project.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Diagnostics.DebuggerDisplay(&quot;BuildItem (Name = { Name }, Include = { Include }, FinalItemSpec = { FinalItemSpec }, Condition = { Condition } )&quot;)]\npublic class BuildItem</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">BuildItem</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>An  element in a project can represent multiple items through the use of wildcards. Therefore, each BuildItem object does not necessarily represent an <code>Item</code> element in the project.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem__ctor_System_String_Microsoft_Build_Framework_ITaskItem_\" data-linktype=\"self-bookmark\">BuildItem(String,ITaskItem)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a> class based on an <a class=\"xref\" href=\"microsoft.build.framework.itaskitem\" data-linktype=\"relative-path\">ITaskItem</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem__ctor_System_String_System_String_\" data-linktype=\"self-bookmark\">BuildItem(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a> class with the specified <span class=\"xref\">crosoft.Build.BuildEngine.BuildItem.Name*</span> and <span class=\"xref\">crosoft.Build.BuildEngine.BuildItem.Include*</span> property values.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_Condition\" data-linktype=\"self-bookmark\">Condition</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <code>Condition</code> attribute value of the item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_CustomMetadataCount\" data-linktype=\"self-bookmark\">CustomMetadataCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of custom attributes that are set on this item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_CustomMetadataNames\" data-linktype=\"self-bookmark\">CustomMetadataNames</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets all user-defined or custom attribute names.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_Exclude\" data-linktype=\"self-bookmark\">Exclude</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <code>Exclude</code> attribute value of the item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_FinalItemSpec\" data-linktype=\"self-bookmark\">FinalItemSpec</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the final specification of the item after all wildcards and properties have been evaluated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_Include\" data-linktype=\"self-bookmark\">Include</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the <code>Include</code> attribute that created the <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_IsImported\" data-linktype=\"self-bookmark\">IsImported</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the item was imported into the project.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_MetadataCount\" data-linktype=\"self-bookmark\">MetadataCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of metadata set on the item</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_MetadataNames\" data-linktype=\"self-bookmark\">MetadataNames</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the names of metadata on the item, including pre-defined or reserved item-spec modifiers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the item collection to which the item belongs.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a shallow copy of the <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_CopyCustomMetadataTo_Microsoft_Build_BuildEngine_BuildItem_\" data-linktype=\"self-bookmark\">CopyCustomMetadataTo(BuildItem)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies all item metadata on this <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a> to the specified <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_GetEvaluatedMetadata_System_String_\" data-linktype=\"self-bookmark\">GetEvaluatedMetadata(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the value of the specified item metadata after after all item and property references have been evaluated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_GetMetadata_System_String_\" data-linktype=\"self-bookmark\">GetMetadata(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the value of the specified item metadata.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_HasMetadata_System_String_\" data-linktype=\"self-bookmark\">HasMetadata(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the item has the specified item metadata.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_RemoveMetadata_System_String_\" data-linktype=\"self-bookmark\">RemoveMetadata(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the specified item metadata.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_SetMetadata_System_String_System_String_\" data-linktype=\"self-bookmark\">SetMetadata(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Assigns the specified value to the specified item metadata.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_Build_BuildEngine_BuildItem_SetMetadata_System_String_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">SetMetadata(String,String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Assigns the specified value to the specified item metadata, and optionally treats the metadata as a literal value.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem__ctor_System_String_Microsoft_Build_Framework_ITaskItem_\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BuildItem(String,ITaskItem)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a> class based on an <a class=\"xref\" href=\"microsoft.build.framework.itaskitem\" data-linktype=\"relative-path\">ITaskItem</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public BuildItem (string itemName, Microsoft.Build.Framework.ITaskItem taskItem);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>itemName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">crosoft.Build.BuildEngine.BuildItem.Name*</span> property of the <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>taskItem</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.build.framework.itaskitem\" data-linktype=\"relative-path\">ITaskItem</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"microsoft.build.framework.itaskitem\" data-linktype=\"relative-path\">ITaskItem</a> from which to create the <span class=\"xref\">crosoft.Build.BuildEngine.BuildItem.Include*</span> property of the <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem__ctor_System_String_System_String_\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BuildItem(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a> class with the specified <span class=\"xref\">crosoft.Build.BuildEngine.BuildItem.Name*</span> and <span class=\"xref\">crosoft.Build.BuildEngine.BuildItem.Include*</span> property values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public BuildItem (string itemName, string itemInclude);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>itemName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">crosoft.Build.BuildEngine.BuildItem.Name*</span> property of the <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>itemInclude</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <span class=\"xref\">crosoft.Build.BuildEngine.BuildItem.Include*</span> property of the <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_Condition\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_Condition_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Condition</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <code>Condition</code> attribute value of the item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Condition { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The <code>Condition</code> attribute value of the item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_CustomMetadataCount\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_CustomMetadataCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CustomMetadataCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of custom attributes that are set on this item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int CustomMetadataCount { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An integer indicating how many custom attributes are set on this item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value returned by CustomMetadataCount does include pre-defined or reserved item-spec modifiers, because they are not custom attributes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_CustomMetadataNames\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_CustomMetadataNames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CustomMetadataNames</div>        \r\n          </div>\r\n    \r\n            <p>Gets all user-defined or custom attribute names.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ICollection CustomMetadataNames { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> containing string names for all of the user-defined or custom attributes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>CustomMetadataNames does not include the names of non-user-defined or non-custom attributes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_Exclude\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_Exclude_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Exclude</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <code>Exclude</code> attribute value of the item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Exclude { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Gets or sets the <code>Exclude</code> attribute value of the item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_FinalItemSpec\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_FinalItemSpec_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FinalItemSpec</div>        \r\n          </div>\r\n    \r\n            <p>Gets the final specification of the item after all wildcards and properties have been evaluated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string FinalItemSpec { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The final specification of the item after all wildcards and properties have been evaluated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_Include\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_Include_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Include</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the <code>Include</code> attribute that created the <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Include { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The <code>Include</code> attribute that created the <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"microsoft.build.buildengine.project\" data-linktype=\"relative-path\">Project</a> object and uses the <a class=\"xref\" href=\"microsoft.build.buildengine.project#Microsoft_Build_BuildEngine_Project_LoadXml_\" data-linktype=\"relative-path\">LoadXml</a> method to add content to the project. The <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a>, <a class=\"xref\" href=\"microsoft.build.buildengine.builditemgroup\" data-linktype=\"relative-path\">BuildItemGroup</a>, and <a class=\"xref\" href=\"microsoft.build.buildengine.builditemgroupcollection\" data-linktype=\"relative-path\">BuildItemGroupCollection</a> classes are used to add, remove, and change items in the project.  </p>\n<pre><code class=\"lang-vb\" name=\"msbuild_AddNewItem#1\">Module Module1\n\n    &#39;&#39;&#39; &lt;summary&gt;\n    &#39;&#39;&#39; This code demonstrates the use of the following methods:\n    &#39;&#39;&#39;     Engine constructor\n    &#39;&#39;&#39;     Project constructor\n    &#39;&#39;&#39;     Project.LoadFromXml\n    &#39;&#39;&#39;     Project.Xml\n    &#39;&#39;&#39;     BuildItemGroupCollection.GetEnumerator\n    &#39;&#39;&#39;     BuildItemGroup.GetEnumerator\n    &#39;&#39;&#39;     BuildItem.Name (get)\n    &#39;&#39;&#39;     BuildItem.Include (set)\n    &#39;&#39;&#39;     BuildItem.GetMetadata\n    &#39;&#39;&#39;     BuildItem.SetMetadata\n    &#39;&#39;&#39;     BuildItemGroup.RemoveItem\n    &#39;&#39;&#39;     BuildItemGroup.AddNewItem\n    &#39;&#39;&#39; &lt;/summary&gt;\n    &#39;&#39;&#39; &lt;remarks&gt;&lt;/remarks&gt;\n    Sub Main()\n\n        &#39; Create a new Engine object.\n        Dim engine As New Engine(Environment.CurrentDirectory)\n\n        &#39; Create a new Project object.\n        Dim project As New Project(engine)\n\n        &#39; Load the project with the following XML, which contains\n        &#39; two ItemGroups.\n        project.LoadXml( _\n            &quot;&lt;Project xmlns=&#39;http://schemas.microsoft.com/developer/msbuild/2003&#39;&gt;&quot; &amp; _\n                &quot;&lt;ItemGroup&gt;&quot; &amp; _\n                    &quot;&lt;Compile Include=&#39;Program.cs&#39;/&gt;&quot; &amp; _\n                    &quot;&lt;Compile Include=&#39;Class1.cs&#39;/&gt;&quot; &amp; _\n                    &quot;&lt;RemoveThisItemPlease Include=&#39;readme.txt&#39;/&gt;&quot; &amp; _\n                &quot;&lt;/ItemGroup&gt;&quot; &amp; _\n                &quot;&lt;ItemGroup&gt;&quot; &amp; _\n                    &quot;&lt;EmbeddedResource Include=&#39;Strings.resx&#39;&gt;&quot; &amp; _\n                        &quot;&lt;LogicalName&gt;Strings.resources&lt;/LogicalName&gt;&quot; &amp; _\n                        &quot;&lt;Culture&gt;fr-fr&lt;/Culture&gt;&quot; &amp; _\n                    &quot;&lt;/EmbeddedResource&gt;&quot; &amp; _\n                &quot;&lt;/ItemGroup&gt;&quot; &amp; _\n            &quot;&lt;/Project&gt;&quot; _\n            )\n\n        &#39; Iterate through each ItemGroup in the Project.  There are two.\n        For Each ig As BuildItemGroup In project.ItemGroups\n\n            Dim itemToRemove As BuildItem\n            itemToRemove = Nothing\n\n            &#39; Iterate through each Item in the ItemGroup.\n            For Each item As BuildItem In ig\n\n                &#39; If the item&#39;s name is &quot;RemoveThisItemPlease&quot;, then\n                &#39; store a reference to this item in a local variable,\n                &#39; so we can remove it later.\n                If item.Name = &quot;RemoveThisItemPlease&quot; Then\n                    itemToRemove = item\n                End If\n\n                &#39; If the item&#39;s name is &quot;EmbeddedResource&quot; and it has a metadata Culture\n                &#39; set to &quot;fr-fr&quot;, then ...\n                If (item.Name = &quot;EmbeddedResource&quot;) And (item.GetMetadata(&quot;Culture&quot;) = &quot;fr-fr&quot;) Then\n                    &#39; Change the item&#39;s Include path to &quot;FrenchStrings.fr.resx&quot;, \n                    &#39; and add a new metadata Visiable=&quot;false&quot;.\n                    item.Include = &quot;FrenchStrings.fr.resx&quot;\n                    item.SetMetadata(&quot;Visible&quot;, &quot;false&quot;)\n                End If\n            Next\n\n            &#39; Remove the item named &quot;RemoveThisItemPlease&quot; from the\n            &#39; ItemGroup\n            If Not itemToRemove Is Nothing Then\n                ig.RemoveItem(itemToRemove)\n            End If\n\n            &#39; For each ItemGroup that we found, add to the end of it\n            &#39; a new item Content with Include=&quot;SplashScreen.bmp&quot;.\n            ig.AddNewItem(&quot;Content&quot;, &quot;SplashScreen.bmp&quot;)\n        Next\n\n        &#39; The project now looks like this:\n        &#39;\n        &#39;     &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;\n        &#39;     &lt;Project xmlns=&quot;http:&#39;schemas.microsoft.com/developer/msbuild/2003&quot;&gt;\n        &#39;         &lt;Compile Include=&quot;Program.cs&quot; /&gt;\n        &#39;         &lt;Compile Include=&quot;Class1.cs&quot; /&gt;\n        &#39;         &lt;Content Include=&quot;SplashScreen.bmp&quot; /&gt;\n        &#39;         &lt;EmbeddedResource Include=&quot;FrenchStrings.fr.resx&quot;&gt;\n        &#39;           &lt;LogicalName&gt;Strings.resources&lt;/LogicalName&gt;\n        &#39;           &lt;Culture&gt;fr-fr&lt;/Culture&gt;\n        &#39;           &lt;Visible&gt;false&lt;/Visible&gt;\n        &#39;         &lt;Content Include=&quot;SplashScreen.bmp&quot; /&gt;\n        &#39;\n        Console.WriteLine(project.Xml)\n\n    End Sub\n\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"msbuild_AddNewItem#1\">using System;\nusing System.Collections.Generic;\nusing System.Text;\n\nusing Microsoft.Build.BuildEngine;\n\nnamespace AddNewItem\n{\n    class Program\n    {\n        /// &lt;summary&gt;\n        /// This code demonstrates the use of the following methods:\n        ///     Engine constructor\n        ///     Project constructor\n        ///     Project.LoadFromXml\n        ///     Project.Xml\n        ///     BuildItemGroupCollection.GetEnumerator\n        ///     BuildItemGroup.GetEnumerator\n        ///     BuildItem.Name (get)\n        ///     BuildItem.Include (set)\n        ///     BuildItem.GetMetadata\n        ///     BuildItem.SetMetadata\n        ///     BuildItemGroup.RemoveItem\n        ///     BuildItemGroup.AddNewItem\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;args&quot;&gt;&lt;/param&gt;\n        static void Main(string[] args)\n        {\n            // Create a new Engine object.\n            Engine engine = new Engine(Environment.CurrentDirectory);\n\n            // Create a new Project object.\n            Project project = new Project(engine);\n\n            // Load the project with the following XML, which contains\n            // two ItemGroups.\n            project.LoadXml(@&quot;\n                &lt;Project xmlns=&#39;http://schemas.microsoft.com/developer/msbuild/2003&#39;&gt;\n\n                    &lt;ItemGroup&gt;\n                        &lt;Compile Include=&#39;Program.cs&#39;/&gt;\n                        &lt;Compile Include=&#39;Class1.cs&#39;/&gt;\n                        &lt;RemoveThisItemPlease Include=&#39;readme.txt&#39;/&gt;\n                    &lt;/ItemGroup&gt;\n\n                    &lt;ItemGroup&gt;\n                        &lt;EmbeddedResource Include=&#39;Strings.resx&#39;&gt;\n                            &lt;LogicalName&gt;Strings.resources&lt;/LogicalName&gt;\n                            &lt;Culture&gt;fr-fr&lt;/Culture&gt;\n                        &lt;/EmbeddedResource&gt;\n                    &lt;/ItemGroup&gt;\n\n                &lt;/Project&gt;\n                &quot;);\n\n            // Iterate through each ItemGroup in the Project.  There are two.\n            foreach (BuildItemGroup ig in project.ItemGroups)\n            {\n                BuildItem itemToRemove = null;\n\n                // Iterate through each Item in the ItemGroup.\n                foreach (BuildItem item in ig)\n                {\n                    // If the item&#39;s name is &quot;RemoveThisItemPlease&quot;, then\n                    // store a reference to this item in a local variable,\n                    // so we can remove it later.\n                    if (item.Name == &quot;RemoveThisItemPlease&quot;)\n                    {\n                        itemToRemove = item;\n                    }\n\n                    // If the item&#39;s name is &quot;EmbeddedResource&quot; and it has a metadata Culture\n                    // set to &quot;fr-fr&quot;, then ...\n                    if ((item.Name == &quot;EmbeddedResource&quot;) &amp;&amp; (item.GetMetadata(&quot;Culture&quot;) == &quot;fr-fr&quot;))\n                    {\n                        // Change the item&#39;s Include path to &quot;FrenchStrings.fr.resx&quot;, \n                        // and add a new metadata Visiable=&quot;false&quot;.\n                        item.Include = @&quot;FrenchStrings.fr.resx&quot;;\n                        item.SetMetadata(&quot;Visible&quot;, &quot;false&quot;);\n                    }\n                }\n\n                // Remove the item named &quot;RemoveThisItemPlease&quot; from the\n                // ItemGroup\n                if (itemToRemove != null)\n                {\n                    ig.RemoveItem(itemToRemove);\n                }\n\n                // For each ItemGroup that we found, add to the end of it\n                // a new item Content with Include=&quot;SplashScreen.bmp&quot;.\n                ig.AddNewItem(&quot;Content&quot;, &quot;SplashScreen.bmp&quot;);\n            }\n\n            // The project now looks like this:\n            //\n            //     &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;\n            //     &lt;Project xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;\n            //         &lt;Compile Include=&quot;Program.cs&quot; /&gt;\n            //         &lt;Compile Include=&quot;Class1.cs&quot; /&gt;\n            //         &lt;Content Include=&quot;SplashScreen.bmp&quot; /&gt;\n            //         &lt;EmbeddedResource Include=&quot;FrenchStrings.fr.resx&quot;&gt;\n            //           &lt;LogicalName&gt;Strings.resources&lt;/LogicalName&gt;\n            //           &lt;Culture&gt;fr-fr&lt;/Culture&gt;\n            //           &lt;Visible&gt;false&lt;/Visible&gt;\n            //         &lt;Content Include=&quot;SplashScreen.bmp&quot; /&gt;\n            //\n            Console.WriteLine(project.Xml);\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_IsImported\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_IsImported_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsImported</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the item was imported into the project.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsImported { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the item was imported into the project; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_MetadataCount\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_MetadataCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MetadataCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of metadata set on the item</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int MetadataCount { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An integer representing the number of metadata items.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value returned by MetadataCount includes pre-defined or reserved item-spec modifiers as well as other metadata.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_MetadataNames\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_MetadataNames_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MetadataNames</div>        \r\n          </div>\r\n    \r\n            <p>Gets the names of metadata on the item, including pre-defined or reserved item-spec modifiers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.ICollection MetadataNames { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> containing name strings of all metadata on the item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value returned by MetadataNames includes the names of all metadata, including user-defined and custom attributes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_Name\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the item collection to which the item belongs.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Name { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the item collection to which the item belongs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"microsoft.build.buildengine.project\" data-linktype=\"relative-path\">Project</a> object and uses the <a class=\"xref\" href=\"microsoft.build.buildengine.project#Microsoft_Build_BuildEngine_Project_LoadXml_\" data-linktype=\"relative-path\">LoadXml</a> method to add content to the project. The <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a>, <a class=\"xref\" href=\"microsoft.build.buildengine.builditemgroup\" data-linktype=\"relative-path\">BuildItemGroup</a>, and <a class=\"xref\" href=\"microsoft.build.buildengine.builditemgroupcollection\" data-linktype=\"relative-path\">BuildItemGroupCollection</a> classes are used to add, remove, and change items in the project.  </p>\n<pre><code class=\"lang-vb\" name=\"msbuild_AddNewItem#1\">Module Module1\n\n    &#39;&#39;&#39; &lt;summary&gt;\n    &#39;&#39;&#39; This code demonstrates the use of the following methods:\n    &#39;&#39;&#39;     Engine constructor\n    &#39;&#39;&#39;     Project constructor\n    &#39;&#39;&#39;     Project.LoadFromXml\n    &#39;&#39;&#39;     Project.Xml\n    &#39;&#39;&#39;     BuildItemGroupCollection.GetEnumerator\n    &#39;&#39;&#39;     BuildItemGroup.GetEnumerator\n    &#39;&#39;&#39;     BuildItem.Name (get)\n    &#39;&#39;&#39;     BuildItem.Include (set)\n    &#39;&#39;&#39;     BuildItem.GetMetadata\n    &#39;&#39;&#39;     BuildItem.SetMetadata\n    &#39;&#39;&#39;     BuildItemGroup.RemoveItem\n    &#39;&#39;&#39;     BuildItemGroup.AddNewItem\n    &#39;&#39;&#39; &lt;/summary&gt;\n    &#39;&#39;&#39; &lt;remarks&gt;&lt;/remarks&gt;\n    Sub Main()\n\n        &#39; Create a new Engine object.\n        Dim engine As New Engine(Environment.CurrentDirectory)\n\n        &#39; Create a new Project object.\n        Dim project As New Project(engine)\n\n        &#39; Load the project with the following XML, which contains\n        &#39; two ItemGroups.\n        project.LoadXml( _\n            &quot;&lt;Project xmlns=&#39;http://schemas.microsoft.com/developer/msbuild/2003&#39;&gt;&quot; &amp; _\n                &quot;&lt;ItemGroup&gt;&quot; &amp; _\n                    &quot;&lt;Compile Include=&#39;Program.cs&#39;/&gt;&quot; &amp; _\n                    &quot;&lt;Compile Include=&#39;Class1.cs&#39;/&gt;&quot; &amp; _\n                    &quot;&lt;RemoveThisItemPlease Include=&#39;readme.txt&#39;/&gt;&quot; &amp; _\n                &quot;&lt;/ItemGroup&gt;&quot; &amp; _\n                &quot;&lt;ItemGroup&gt;&quot; &amp; _\n                    &quot;&lt;EmbeddedResource Include=&#39;Strings.resx&#39;&gt;&quot; &amp; _\n                        &quot;&lt;LogicalName&gt;Strings.resources&lt;/LogicalName&gt;&quot; &amp; _\n                        &quot;&lt;Culture&gt;fr-fr&lt;/Culture&gt;&quot; &amp; _\n                    &quot;&lt;/EmbeddedResource&gt;&quot; &amp; _\n                &quot;&lt;/ItemGroup&gt;&quot; &amp; _\n            &quot;&lt;/Project&gt;&quot; _\n            )\n\n        &#39; Iterate through each ItemGroup in the Project.  There are two.\n        For Each ig As BuildItemGroup In project.ItemGroups\n\n            Dim itemToRemove As BuildItem\n            itemToRemove = Nothing\n\n            &#39; Iterate through each Item in the ItemGroup.\n            For Each item As BuildItem In ig\n\n                &#39; If the item&#39;s name is &quot;RemoveThisItemPlease&quot;, then\n                &#39; store a reference to this item in a local variable,\n                &#39; so we can remove it later.\n                If item.Name = &quot;RemoveThisItemPlease&quot; Then\n                    itemToRemove = item\n                End If\n\n                &#39; If the item&#39;s name is &quot;EmbeddedResource&quot; and it has a metadata Culture\n                &#39; set to &quot;fr-fr&quot;, then ...\n                If (item.Name = &quot;EmbeddedResource&quot;) And (item.GetMetadata(&quot;Culture&quot;) = &quot;fr-fr&quot;) Then\n                    &#39; Change the item&#39;s Include path to &quot;FrenchStrings.fr.resx&quot;, \n                    &#39; and add a new metadata Visiable=&quot;false&quot;.\n                    item.Include = &quot;FrenchStrings.fr.resx&quot;\n                    item.SetMetadata(&quot;Visible&quot;, &quot;false&quot;)\n                End If\n            Next\n\n            &#39; Remove the item named &quot;RemoveThisItemPlease&quot; from the\n            &#39; ItemGroup\n            If Not itemToRemove Is Nothing Then\n                ig.RemoveItem(itemToRemove)\n            End If\n\n            &#39; For each ItemGroup that we found, add to the end of it\n            &#39; a new item Content with Include=&quot;SplashScreen.bmp&quot;.\n            ig.AddNewItem(&quot;Content&quot;, &quot;SplashScreen.bmp&quot;)\n        Next\n\n        &#39; The project now looks like this:\n        &#39;\n        &#39;     &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;\n        &#39;     &lt;Project xmlns=&quot;http:&#39;schemas.microsoft.com/developer/msbuild/2003&quot;&gt;\n        &#39;         &lt;Compile Include=&quot;Program.cs&quot; /&gt;\n        &#39;         &lt;Compile Include=&quot;Class1.cs&quot; /&gt;\n        &#39;         &lt;Content Include=&quot;SplashScreen.bmp&quot; /&gt;\n        &#39;         &lt;EmbeddedResource Include=&quot;FrenchStrings.fr.resx&quot;&gt;\n        &#39;           &lt;LogicalName&gt;Strings.resources&lt;/LogicalName&gt;\n        &#39;           &lt;Culture&gt;fr-fr&lt;/Culture&gt;\n        &#39;           &lt;Visible&gt;false&lt;/Visible&gt;\n        &#39;         &lt;Content Include=&quot;SplashScreen.bmp&quot; /&gt;\n        &#39;\n        Console.WriteLine(project.Xml)\n\n    End Sub\n\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"msbuild_AddNewItem#1\">using System;\nusing System.Collections.Generic;\nusing System.Text;\n\nusing Microsoft.Build.BuildEngine;\n\nnamespace AddNewItem\n{\n    class Program\n    {\n        /// &lt;summary&gt;\n        /// This code demonstrates the use of the following methods:\n        ///     Engine constructor\n        ///     Project constructor\n        ///     Project.LoadFromXml\n        ///     Project.Xml\n        ///     BuildItemGroupCollection.GetEnumerator\n        ///     BuildItemGroup.GetEnumerator\n        ///     BuildItem.Name (get)\n        ///     BuildItem.Include (set)\n        ///     BuildItem.GetMetadata\n        ///     BuildItem.SetMetadata\n        ///     BuildItemGroup.RemoveItem\n        ///     BuildItemGroup.AddNewItem\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;args&quot;&gt;&lt;/param&gt;\n        static void Main(string[] args)\n        {\n            // Create a new Engine object.\n            Engine engine = new Engine(Environment.CurrentDirectory);\n\n            // Create a new Project object.\n            Project project = new Project(engine);\n\n            // Load the project with the following XML, which contains\n            // two ItemGroups.\n            project.LoadXml(@&quot;\n                &lt;Project xmlns=&#39;http://schemas.microsoft.com/developer/msbuild/2003&#39;&gt;\n\n                    &lt;ItemGroup&gt;\n                        &lt;Compile Include=&#39;Program.cs&#39;/&gt;\n                        &lt;Compile Include=&#39;Class1.cs&#39;/&gt;\n                        &lt;RemoveThisItemPlease Include=&#39;readme.txt&#39;/&gt;\n                    &lt;/ItemGroup&gt;\n\n                    &lt;ItemGroup&gt;\n                        &lt;EmbeddedResource Include=&#39;Strings.resx&#39;&gt;\n                            &lt;LogicalName&gt;Strings.resources&lt;/LogicalName&gt;\n                            &lt;Culture&gt;fr-fr&lt;/Culture&gt;\n                        &lt;/EmbeddedResource&gt;\n                    &lt;/ItemGroup&gt;\n\n                &lt;/Project&gt;\n                &quot;);\n\n            // Iterate through each ItemGroup in the Project.  There are two.\n            foreach (BuildItemGroup ig in project.ItemGroups)\n            {\n                BuildItem itemToRemove = null;\n\n                // Iterate through each Item in the ItemGroup.\n                foreach (BuildItem item in ig)\n                {\n                    // If the item&#39;s name is &quot;RemoveThisItemPlease&quot;, then\n                    // store a reference to this item in a local variable,\n                    // so we can remove it later.\n                    if (item.Name == &quot;RemoveThisItemPlease&quot;)\n                    {\n                        itemToRemove = item;\n                    }\n\n                    // If the item&#39;s name is &quot;EmbeddedResource&quot; and it has a metadata Culture\n                    // set to &quot;fr-fr&quot;, then ...\n                    if ((item.Name == &quot;EmbeddedResource&quot;) &amp;&amp; (item.GetMetadata(&quot;Culture&quot;) == &quot;fr-fr&quot;))\n                    {\n                        // Change the item&#39;s Include path to &quot;FrenchStrings.fr.resx&quot;, \n                        // and add a new metadata Visiable=&quot;false&quot;.\n                        item.Include = @&quot;FrenchStrings.fr.resx&quot;;\n                        item.SetMetadata(&quot;Visible&quot;, &quot;false&quot;);\n                    }\n                }\n\n                // Remove the item named &quot;RemoveThisItemPlease&quot; from the\n                // ItemGroup\n                if (itemToRemove != null)\n                {\n                    ig.RemoveItem(itemToRemove);\n                }\n\n                // For each ItemGroup that we found, add to the end of it\n                // a new item Content with Include=&quot;SplashScreen.bmp&quot;.\n                ig.AddNewItem(&quot;Content&quot;, &quot;SplashScreen.bmp&quot;);\n            }\n\n            // The project now looks like this:\n            //\n            //     &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;\n            //     &lt;Project xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;\n            //         &lt;Compile Include=&quot;Program.cs&quot; /&gt;\n            //         &lt;Compile Include=&quot;Class1.cs&quot; /&gt;\n            //         &lt;Content Include=&quot;SplashScreen.bmp&quot; /&gt;\n            //         &lt;EmbeddedResource Include=&quot;FrenchStrings.fr.resx&quot;&gt;\n            //           &lt;LogicalName&gt;Strings.resources&lt;/LogicalName&gt;\n            //           &lt;Culture&gt;fr-fr&lt;/Culture&gt;\n            //           &lt;Visible&gt;false&lt;/Visible&gt;\n            //         &lt;Content Include=&quot;SplashScreen.bmp&quot; /&gt;\n            //\n            Console.WriteLine(project.Xml);\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_Clone\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a shallow copy of the <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Microsoft.Build.BuildEngine.BuildItem Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a></div>\r\n                  </div>\r\n                  <p>A copy of the <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_CopyCustomMetadataTo_Microsoft_Build_BuildEngine_BuildItem_\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_CopyCustomMetadataTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyCustomMetadataTo(BuildItem)</div>        \r\n          </div>\r\n    \r\n            <p>Copies all item metadata on this <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a> to the specified <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyCustomMetadataTo (Microsoft.Build.BuildEngine.BuildItem destinationItem);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>destinationItem</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a> to which to copy the item metadata.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_GetEvaluatedMetadata_System_String_\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_GetEvaluatedMetadata_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEvaluatedMetadata(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the value of the specified item metadata after after all item and property references have been evaluated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetEvaluatedMetadata (string metadataName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metadataName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The item metadata name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of the specified item metadata after after all item and property references have been evaluated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_GetMetadata_System_String_\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_GetMetadata_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetMetadata(String)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the value of the specified item metadata.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetMetadata (string metadataName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metadataName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The item metadata name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of the specified item metadata.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"microsoft.build.buildengine.project\" data-linktype=\"relative-path\">Project</a> object and uses the <a class=\"xref\" href=\"microsoft.build.buildengine.project#Microsoft_Build_BuildEngine_Project_LoadXml_\" data-linktype=\"relative-path\">LoadXml</a> method to add content to the project. The <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a>, <a class=\"xref\" href=\"microsoft.build.buildengine.builditemgroup\" data-linktype=\"relative-path\">BuildItemGroup</a>, and <a class=\"xref\" href=\"microsoft.build.buildengine.builditemgroupcollection\" data-linktype=\"relative-path\">BuildItemGroupCollection</a> classes are used to add, remove, and change items in the project.  </p>\n<pre><code class=\"lang-vb\" name=\"msbuild_AddNewItem#1\">Module Module1\n\n    &#39;&#39;&#39; &lt;summary&gt;\n    &#39;&#39;&#39; This code demonstrates the use of the following methods:\n    &#39;&#39;&#39;     Engine constructor\n    &#39;&#39;&#39;     Project constructor\n    &#39;&#39;&#39;     Project.LoadFromXml\n    &#39;&#39;&#39;     Project.Xml\n    &#39;&#39;&#39;     BuildItemGroupCollection.GetEnumerator\n    &#39;&#39;&#39;     BuildItemGroup.GetEnumerator\n    &#39;&#39;&#39;     BuildItem.Name (get)\n    &#39;&#39;&#39;     BuildItem.Include (set)\n    &#39;&#39;&#39;     BuildItem.GetMetadata\n    &#39;&#39;&#39;     BuildItem.SetMetadata\n    &#39;&#39;&#39;     BuildItemGroup.RemoveItem\n    &#39;&#39;&#39;     BuildItemGroup.AddNewItem\n    &#39;&#39;&#39; &lt;/summary&gt;\n    &#39;&#39;&#39; &lt;remarks&gt;&lt;/remarks&gt;\n    Sub Main()\n\n        &#39; Create a new Engine object.\n        Dim engine As New Engine(Environment.CurrentDirectory)\n\n        &#39; Create a new Project object.\n        Dim project As New Project(engine)\n\n        &#39; Load the project with the following XML, which contains\n        &#39; two ItemGroups.\n        project.LoadXml( _\n            &quot;&lt;Project xmlns=&#39;http://schemas.microsoft.com/developer/msbuild/2003&#39;&gt;&quot; &amp; _\n                &quot;&lt;ItemGroup&gt;&quot; &amp; _\n                    &quot;&lt;Compile Include=&#39;Program.cs&#39;/&gt;&quot; &amp; _\n                    &quot;&lt;Compile Include=&#39;Class1.cs&#39;/&gt;&quot; &amp; _\n                    &quot;&lt;RemoveThisItemPlease Include=&#39;readme.txt&#39;/&gt;&quot; &amp; _\n                &quot;&lt;/ItemGroup&gt;&quot; &amp; _\n                &quot;&lt;ItemGroup&gt;&quot; &amp; _\n                    &quot;&lt;EmbeddedResource Include=&#39;Strings.resx&#39;&gt;&quot; &amp; _\n                        &quot;&lt;LogicalName&gt;Strings.resources&lt;/LogicalName&gt;&quot; &amp; _\n                        &quot;&lt;Culture&gt;fr-fr&lt;/Culture&gt;&quot; &amp; _\n                    &quot;&lt;/EmbeddedResource&gt;&quot; &amp; _\n                &quot;&lt;/ItemGroup&gt;&quot; &amp; _\n            &quot;&lt;/Project&gt;&quot; _\n            )\n\n        &#39; Iterate through each ItemGroup in the Project.  There are two.\n        For Each ig As BuildItemGroup In project.ItemGroups\n\n            Dim itemToRemove As BuildItem\n            itemToRemove = Nothing\n\n            &#39; Iterate through each Item in the ItemGroup.\n            For Each item As BuildItem In ig\n\n                &#39; If the item&#39;s name is &quot;RemoveThisItemPlease&quot;, then\n                &#39; store a reference to this item in a local variable,\n                &#39; so we can remove it later.\n                If item.Name = &quot;RemoveThisItemPlease&quot; Then\n                    itemToRemove = item\n                End If\n\n                &#39; If the item&#39;s name is &quot;EmbeddedResource&quot; and it has a metadata Culture\n                &#39; set to &quot;fr-fr&quot;, then ...\n                If (item.Name = &quot;EmbeddedResource&quot;) And (item.GetMetadata(&quot;Culture&quot;) = &quot;fr-fr&quot;) Then\n                    &#39; Change the item&#39;s Include path to &quot;FrenchStrings.fr.resx&quot;, \n                    &#39; and add a new metadata Visiable=&quot;false&quot;.\n                    item.Include = &quot;FrenchStrings.fr.resx&quot;\n                    item.SetMetadata(&quot;Visible&quot;, &quot;false&quot;)\n                End If\n            Next\n\n            &#39; Remove the item named &quot;RemoveThisItemPlease&quot; from the\n            &#39; ItemGroup\n            If Not itemToRemove Is Nothing Then\n                ig.RemoveItem(itemToRemove)\n            End If\n\n            &#39; For each ItemGroup that we found, add to the end of it\n            &#39; a new item Content with Include=&quot;SplashScreen.bmp&quot;.\n            ig.AddNewItem(&quot;Content&quot;, &quot;SplashScreen.bmp&quot;)\n        Next\n\n        &#39; The project now looks like this:\n        &#39;\n        &#39;     &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;\n        &#39;     &lt;Project xmlns=&quot;http:&#39;schemas.microsoft.com/developer/msbuild/2003&quot;&gt;\n        &#39;         &lt;Compile Include=&quot;Program.cs&quot; /&gt;\n        &#39;         &lt;Compile Include=&quot;Class1.cs&quot; /&gt;\n        &#39;         &lt;Content Include=&quot;SplashScreen.bmp&quot; /&gt;\n        &#39;         &lt;EmbeddedResource Include=&quot;FrenchStrings.fr.resx&quot;&gt;\n        &#39;           &lt;LogicalName&gt;Strings.resources&lt;/LogicalName&gt;\n        &#39;           &lt;Culture&gt;fr-fr&lt;/Culture&gt;\n        &#39;           &lt;Visible&gt;false&lt;/Visible&gt;\n        &#39;         &lt;Content Include=&quot;SplashScreen.bmp&quot; /&gt;\n        &#39;\n        Console.WriteLine(project.Xml)\n\n    End Sub\n\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"msbuild_AddNewItem#1\">using System;\nusing System.Collections.Generic;\nusing System.Text;\n\nusing Microsoft.Build.BuildEngine;\n\nnamespace AddNewItem\n{\n    class Program\n    {\n        /// &lt;summary&gt;\n        /// This code demonstrates the use of the following methods:\n        ///     Engine constructor\n        ///     Project constructor\n        ///     Project.LoadFromXml\n        ///     Project.Xml\n        ///     BuildItemGroupCollection.GetEnumerator\n        ///     BuildItemGroup.GetEnumerator\n        ///     BuildItem.Name (get)\n        ///     BuildItem.Include (set)\n        ///     BuildItem.GetMetadata\n        ///     BuildItem.SetMetadata\n        ///     BuildItemGroup.RemoveItem\n        ///     BuildItemGroup.AddNewItem\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;args&quot;&gt;&lt;/param&gt;\n        static void Main(string[] args)\n        {\n            // Create a new Engine object.\n            Engine engine = new Engine(Environment.CurrentDirectory);\n\n            // Create a new Project object.\n            Project project = new Project(engine);\n\n            // Load the project with the following XML, which contains\n            // two ItemGroups.\n            project.LoadXml(@&quot;\n                &lt;Project xmlns=&#39;http://schemas.microsoft.com/developer/msbuild/2003&#39;&gt;\n\n                    &lt;ItemGroup&gt;\n                        &lt;Compile Include=&#39;Program.cs&#39;/&gt;\n                        &lt;Compile Include=&#39;Class1.cs&#39;/&gt;\n                        &lt;RemoveThisItemPlease Include=&#39;readme.txt&#39;/&gt;\n                    &lt;/ItemGroup&gt;\n\n                    &lt;ItemGroup&gt;\n                        &lt;EmbeddedResource Include=&#39;Strings.resx&#39;&gt;\n                            &lt;LogicalName&gt;Strings.resources&lt;/LogicalName&gt;\n                            &lt;Culture&gt;fr-fr&lt;/Culture&gt;\n                        &lt;/EmbeddedResource&gt;\n                    &lt;/ItemGroup&gt;\n\n                &lt;/Project&gt;\n                &quot;);\n\n            // Iterate through each ItemGroup in the Project.  There are two.\n            foreach (BuildItemGroup ig in project.ItemGroups)\n            {\n                BuildItem itemToRemove = null;\n\n                // Iterate through each Item in the ItemGroup.\n                foreach (BuildItem item in ig)\n                {\n                    // If the item&#39;s name is &quot;RemoveThisItemPlease&quot;, then\n                    // store a reference to this item in a local variable,\n                    // so we can remove it later.\n                    if (item.Name == &quot;RemoveThisItemPlease&quot;)\n                    {\n                        itemToRemove = item;\n                    }\n\n                    // If the item&#39;s name is &quot;EmbeddedResource&quot; and it has a metadata Culture\n                    // set to &quot;fr-fr&quot;, then ...\n                    if ((item.Name == &quot;EmbeddedResource&quot;) &amp;&amp; (item.GetMetadata(&quot;Culture&quot;) == &quot;fr-fr&quot;))\n                    {\n                        // Change the item&#39;s Include path to &quot;FrenchStrings.fr.resx&quot;, \n                        // and add a new metadata Visiable=&quot;false&quot;.\n                        item.Include = @&quot;FrenchStrings.fr.resx&quot;;\n                        item.SetMetadata(&quot;Visible&quot;, &quot;false&quot;);\n                    }\n                }\n\n                // Remove the item named &quot;RemoveThisItemPlease&quot; from the\n                // ItemGroup\n                if (itemToRemove != null)\n                {\n                    ig.RemoveItem(itemToRemove);\n                }\n\n                // For each ItemGroup that we found, add to the end of it\n                // a new item Content with Include=&quot;SplashScreen.bmp&quot;.\n                ig.AddNewItem(&quot;Content&quot;, &quot;SplashScreen.bmp&quot;);\n            }\n\n            // The project now looks like this:\n            //\n            //     &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;\n            //     &lt;Project xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;\n            //         &lt;Compile Include=&quot;Program.cs&quot; /&gt;\n            //         &lt;Compile Include=&quot;Class1.cs&quot; /&gt;\n            //         &lt;Content Include=&quot;SplashScreen.bmp&quot; /&gt;\n            //         &lt;EmbeddedResource Include=&quot;FrenchStrings.fr.resx&quot;&gt;\n            //           &lt;LogicalName&gt;Strings.resources&lt;/LogicalName&gt;\n            //           &lt;Culture&gt;fr-fr&lt;/Culture&gt;\n            //           &lt;Visible&gt;false&lt;/Visible&gt;\n            //         &lt;Content Include=&quot;SplashScreen.bmp&quot; /&gt;\n            //\n            Console.WriteLine(project.Xml);\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_HasMetadata_System_String_\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_HasMetadata_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HasMetadata(String)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the item has the specified item metadata.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool HasMetadata (string metadataName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metadataName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The item metadata name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the item has the specified item metadata; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_RemoveMetadata_System_String_\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_RemoveMetadata_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveMetadata(String)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the specified item metadata.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RemoveMetadata (string metadataName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metadataName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The item metadata name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_SetMetadata_System_String_System_String_\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_SetMetadata_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetMetadata(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Assigns the specified value to the specified item metadata.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetMetadata (string metadataName, string metadataValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metadataName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The item metadata name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>metadataValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The item metadata value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"microsoft.build.buildengine.project\" data-linktype=\"relative-path\">Project</a> object and uses the <a class=\"xref\" href=\"microsoft.build.buildengine.project#Microsoft_Build_BuildEngine_Project_LoadXml_\" data-linktype=\"relative-path\">LoadXml</a> method to add content to the project. The <a class=\"xref\" href=\"microsoft.build.buildengine.builditem\" data-linktype=\"relative-path\">BuildItem</a>, <a class=\"xref\" href=\"microsoft.build.buildengine.builditemgroup\" data-linktype=\"relative-path\">BuildItemGroup</a>, and <a class=\"xref\" href=\"microsoft.build.buildengine.builditemgroupcollection\" data-linktype=\"relative-path\">BuildItemGroupCollection</a> classes are used to add, remove, and change items in the project.  </p>\n<pre><code class=\"lang-vb\" name=\"msbuild_AddNewItem#1\">Module Module1\n\n    &#39;&#39;&#39; &lt;summary&gt;\n    &#39;&#39;&#39; This code demonstrates the use of the following methods:\n    &#39;&#39;&#39;     Engine constructor\n    &#39;&#39;&#39;     Project constructor\n    &#39;&#39;&#39;     Project.LoadFromXml\n    &#39;&#39;&#39;     Project.Xml\n    &#39;&#39;&#39;     BuildItemGroupCollection.GetEnumerator\n    &#39;&#39;&#39;     BuildItemGroup.GetEnumerator\n    &#39;&#39;&#39;     BuildItem.Name (get)\n    &#39;&#39;&#39;     BuildItem.Include (set)\n    &#39;&#39;&#39;     BuildItem.GetMetadata\n    &#39;&#39;&#39;     BuildItem.SetMetadata\n    &#39;&#39;&#39;     BuildItemGroup.RemoveItem\n    &#39;&#39;&#39;     BuildItemGroup.AddNewItem\n    &#39;&#39;&#39; &lt;/summary&gt;\n    &#39;&#39;&#39; &lt;remarks&gt;&lt;/remarks&gt;\n    Sub Main()\n\n        &#39; Create a new Engine object.\n        Dim engine As New Engine(Environment.CurrentDirectory)\n\n        &#39; Create a new Project object.\n        Dim project As New Project(engine)\n\n        &#39; Load the project with the following XML, which contains\n        &#39; two ItemGroups.\n        project.LoadXml( _\n            &quot;&lt;Project xmlns=&#39;http://schemas.microsoft.com/developer/msbuild/2003&#39;&gt;&quot; &amp; _\n                &quot;&lt;ItemGroup&gt;&quot; &amp; _\n                    &quot;&lt;Compile Include=&#39;Program.cs&#39;/&gt;&quot; &amp; _\n                    &quot;&lt;Compile Include=&#39;Class1.cs&#39;/&gt;&quot; &amp; _\n                    &quot;&lt;RemoveThisItemPlease Include=&#39;readme.txt&#39;/&gt;&quot; &amp; _\n                &quot;&lt;/ItemGroup&gt;&quot; &amp; _\n                &quot;&lt;ItemGroup&gt;&quot; &amp; _\n                    &quot;&lt;EmbeddedResource Include=&#39;Strings.resx&#39;&gt;&quot; &amp; _\n                        &quot;&lt;LogicalName&gt;Strings.resources&lt;/LogicalName&gt;&quot; &amp; _\n                        &quot;&lt;Culture&gt;fr-fr&lt;/Culture&gt;&quot; &amp; _\n                    &quot;&lt;/EmbeddedResource&gt;&quot; &amp; _\n                &quot;&lt;/ItemGroup&gt;&quot; &amp; _\n            &quot;&lt;/Project&gt;&quot; _\n            )\n\n        &#39; Iterate through each ItemGroup in the Project.  There are two.\n        For Each ig As BuildItemGroup In project.ItemGroups\n\n            Dim itemToRemove As BuildItem\n            itemToRemove = Nothing\n\n            &#39; Iterate through each Item in the ItemGroup.\n            For Each item As BuildItem In ig\n\n                &#39; If the item&#39;s name is &quot;RemoveThisItemPlease&quot;, then\n                &#39; store a reference to this item in a local variable,\n                &#39; so we can remove it later.\n                If item.Name = &quot;RemoveThisItemPlease&quot; Then\n                    itemToRemove = item\n                End If\n\n                &#39; If the item&#39;s name is &quot;EmbeddedResource&quot; and it has a metadata Culture\n                &#39; set to &quot;fr-fr&quot;, then ...\n                If (item.Name = &quot;EmbeddedResource&quot;) And (item.GetMetadata(&quot;Culture&quot;) = &quot;fr-fr&quot;) Then\n                    &#39; Change the item&#39;s Include path to &quot;FrenchStrings.fr.resx&quot;, \n                    &#39; and add a new metadata Visiable=&quot;false&quot;.\n                    item.Include = &quot;FrenchStrings.fr.resx&quot;\n                    item.SetMetadata(&quot;Visible&quot;, &quot;false&quot;)\n                End If\n            Next\n\n            &#39; Remove the item named &quot;RemoveThisItemPlease&quot; from the\n            &#39; ItemGroup\n            If Not itemToRemove Is Nothing Then\n                ig.RemoveItem(itemToRemove)\n            End If\n\n            &#39; For each ItemGroup that we found, add to the end of it\n            &#39; a new item Content with Include=&quot;SplashScreen.bmp&quot;.\n            ig.AddNewItem(&quot;Content&quot;, &quot;SplashScreen.bmp&quot;)\n        Next\n\n        &#39; The project now looks like this:\n        &#39;\n        &#39;     &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;\n        &#39;     &lt;Project xmlns=&quot;http:&#39;schemas.microsoft.com/developer/msbuild/2003&quot;&gt;\n        &#39;         &lt;Compile Include=&quot;Program.cs&quot; /&gt;\n        &#39;         &lt;Compile Include=&quot;Class1.cs&quot; /&gt;\n        &#39;         &lt;Content Include=&quot;SplashScreen.bmp&quot; /&gt;\n        &#39;         &lt;EmbeddedResource Include=&quot;FrenchStrings.fr.resx&quot;&gt;\n        &#39;           &lt;LogicalName&gt;Strings.resources&lt;/LogicalName&gt;\n        &#39;           &lt;Culture&gt;fr-fr&lt;/Culture&gt;\n        &#39;           &lt;Visible&gt;false&lt;/Visible&gt;\n        &#39;         &lt;Content Include=&quot;SplashScreen.bmp&quot; /&gt;\n        &#39;\n        Console.WriteLine(project.Xml)\n\n    End Sub\n\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"msbuild_AddNewItem#1\">using System;\nusing System.Collections.Generic;\nusing System.Text;\n\nusing Microsoft.Build.BuildEngine;\n\nnamespace AddNewItem\n{\n    class Program\n    {\n        /// &lt;summary&gt;\n        /// This code demonstrates the use of the following methods:\n        ///     Engine constructor\n        ///     Project constructor\n        ///     Project.LoadFromXml\n        ///     Project.Xml\n        ///     BuildItemGroupCollection.GetEnumerator\n        ///     BuildItemGroup.GetEnumerator\n        ///     BuildItem.Name (get)\n        ///     BuildItem.Include (set)\n        ///     BuildItem.GetMetadata\n        ///     BuildItem.SetMetadata\n        ///     BuildItemGroup.RemoveItem\n        ///     BuildItemGroup.AddNewItem\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;args&quot;&gt;&lt;/param&gt;\n        static void Main(string[] args)\n        {\n            // Create a new Engine object.\n            Engine engine = new Engine(Environment.CurrentDirectory);\n\n            // Create a new Project object.\n            Project project = new Project(engine);\n\n            // Load the project with the following XML, which contains\n            // two ItemGroups.\n            project.LoadXml(@&quot;\n                &lt;Project xmlns=&#39;http://schemas.microsoft.com/developer/msbuild/2003&#39;&gt;\n\n                    &lt;ItemGroup&gt;\n                        &lt;Compile Include=&#39;Program.cs&#39;/&gt;\n                        &lt;Compile Include=&#39;Class1.cs&#39;/&gt;\n                        &lt;RemoveThisItemPlease Include=&#39;readme.txt&#39;/&gt;\n                    &lt;/ItemGroup&gt;\n\n                    &lt;ItemGroup&gt;\n                        &lt;EmbeddedResource Include=&#39;Strings.resx&#39;&gt;\n                            &lt;LogicalName&gt;Strings.resources&lt;/LogicalName&gt;\n                            &lt;Culture&gt;fr-fr&lt;/Culture&gt;\n                        &lt;/EmbeddedResource&gt;\n                    &lt;/ItemGroup&gt;\n\n                &lt;/Project&gt;\n                &quot;);\n\n            // Iterate through each ItemGroup in the Project.  There are two.\n            foreach (BuildItemGroup ig in project.ItemGroups)\n            {\n                BuildItem itemToRemove = null;\n\n                // Iterate through each Item in the ItemGroup.\n                foreach (BuildItem item in ig)\n                {\n                    // If the item&#39;s name is &quot;RemoveThisItemPlease&quot;, then\n                    // store a reference to this item in a local variable,\n                    // so we can remove it later.\n                    if (item.Name == &quot;RemoveThisItemPlease&quot;)\n                    {\n                        itemToRemove = item;\n                    }\n\n                    // If the item&#39;s name is &quot;EmbeddedResource&quot; and it has a metadata Culture\n                    // set to &quot;fr-fr&quot;, then ...\n                    if ((item.Name == &quot;EmbeddedResource&quot;) &amp;&amp; (item.GetMetadata(&quot;Culture&quot;) == &quot;fr-fr&quot;))\n                    {\n                        // Change the item&#39;s Include path to &quot;FrenchStrings.fr.resx&quot;, \n                        // and add a new metadata Visiable=&quot;false&quot;.\n                        item.Include = @&quot;FrenchStrings.fr.resx&quot;;\n                        item.SetMetadata(&quot;Visible&quot;, &quot;false&quot;);\n                    }\n                }\n\n                // Remove the item named &quot;RemoveThisItemPlease&quot; from the\n                // ItemGroup\n                if (itemToRemove != null)\n                {\n                    ig.RemoveItem(itemToRemove);\n                }\n\n                // For each ItemGroup that we found, add to the end of it\n                // a new item Content with Include=&quot;SplashScreen.bmp&quot;.\n                ig.AddNewItem(&quot;Content&quot;, &quot;SplashScreen.bmp&quot;);\n            }\n\n            // The project now looks like this:\n            //\n            //     &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-16&quot;?&gt;\n            //     &lt;Project xmlns=&quot;http://schemas.microsoft.com/developer/msbuild/2003&quot;&gt;\n            //         &lt;Compile Include=&quot;Program.cs&quot; /&gt;\n            //         &lt;Compile Include=&quot;Class1.cs&quot; /&gt;\n            //         &lt;Content Include=&quot;SplashScreen.bmp&quot; /&gt;\n            //         &lt;EmbeddedResource Include=&quot;FrenchStrings.fr.resx&quot;&gt;\n            //           &lt;LogicalName&gt;Strings.resources&lt;/LogicalName&gt;\n            //           &lt;Culture&gt;fr-fr&lt;/Culture&gt;\n            //           &lt;Visible&gt;false&lt;/Visible&gt;\n            //         &lt;Content Include=&quot;SplashScreen.bmp&quot; /&gt;\n            //\n            Console.WriteLine(project.Xml);\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_Build_BuildEngine_BuildItem_SetMetadata_System_String_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"Microsoft_Build_BuildEngine_BuildItem_SetMetadata_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetMetadata(String,String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Assigns the specified value to the specified item metadata, and optionally treats the metadata as a literal value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SetMetadata (string metadataName, string metadataValue, bool treatMetadataValueAsLiteral);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>metadataName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The item metadata name.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>metadataValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The item metadata value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>treatMetadataValueAsLiteral</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to treat the metadata as a literal value by escaping all <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/vstecmsbuild-md.md&quot; -->MSBuild<!--END INCLUDE --> special characters; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.Build.BuildEngine.BuildItem.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.Build.BuildEngine.BuildItem.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem..ctor\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.Clone\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.Condition\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.CopyCustomMetadataTo\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.CustomMetadataCount\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.CustomMetadataNames\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.Exclude\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.FinalItemSpec\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.GetEvaluatedMetadata\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.GetMetadata\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.HasMetadata\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.Include\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.IsImported\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.MetadataCount\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.MetadataNames\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.Name\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.RemoveMetadata\">\r\n<meta name=\"APIName\" content=\"Microsoft.Build.BuildEngine.BuildItem.SetMetadata\">\r\n<meta name=\"APILocation\" content=\"Microsoft.Build.Engine.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a32a9721-dfe4-effa-4345-50dd012baa0d\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\Microsoft.Build.BuildEngine\\BuildItem.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a single item in an MSBuild project.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/Microsoft.Build.BuildEngine/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.Build.BuildEngine.BuildItem\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.Build.BuildEngine.BuildItem.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.Build.BuildEngine.BuildItem.yml","open_to_public_contributors":true,"api_name":["Microsoft.Build.BuildEngine.BuildItem","Microsoft.Build.BuildEngine.BuildItem..ctor","Microsoft.Build.BuildEngine.BuildItem.Clone","Microsoft.Build.BuildEngine.BuildItem.Condition","Microsoft.Build.BuildEngine.BuildItem.CopyCustomMetadataTo","Microsoft.Build.BuildEngine.BuildItem.CustomMetadataCount","Microsoft.Build.BuildEngine.BuildItem.CustomMetadataNames","Microsoft.Build.BuildEngine.BuildItem.Exclude","Microsoft.Build.BuildEngine.BuildItem.FinalItemSpec","Microsoft.Build.BuildEngine.BuildItem.GetEvaluatedMetadata","Microsoft.Build.BuildEngine.BuildItem.GetMetadata","Microsoft.Build.BuildEngine.BuildItem.HasMetadata","Microsoft.Build.BuildEngine.BuildItem.Include","Microsoft.Build.BuildEngine.BuildItem.IsImported","Microsoft.Build.BuildEngine.BuildItem.MetadataCount","Microsoft.Build.BuildEngine.BuildItem.MetadataNames","Microsoft.Build.BuildEngine.BuildItem.Name","Microsoft.Build.BuildEngine.BuildItem.RemoveMetadata","Microsoft.Build.BuildEngine.BuildItem.SetMetadata"],"api_location":["Microsoft.Build.Engine.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.Build.BuildEngine.BuildItem","Microsoft::Build::BuildEngine::BuildItem","Microsoft.Build.BuildEngine.BuildItem.#ctor","Microsoft::Build::BuildEngine::BuildItem::#ctor","Microsoft.Build.BuildEngine.BuildItem.Clone","Microsoft::Build::BuildEngine::BuildItem::Clone","Microsoft.Build.BuildEngine.BuildItem.Condition","Microsoft::Build::BuildEngine::BuildItem::Condition","Microsoft.Build.BuildEngine.BuildItem.CopyCustomMetadataTo","Microsoft::Build::BuildEngine::BuildItem::CopyCustomMetadataTo","Microsoft.Build.BuildEngine.BuildItem.CustomMetadataCount","Microsoft::Build::BuildEngine::BuildItem::CustomMetadataCount","Microsoft.Build.BuildEngine.BuildItem.CustomMetadataNames","Microsoft::Build::BuildEngine::BuildItem::CustomMetadataNames","Microsoft.Build.BuildEngine.BuildItem.Exclude","Microsoft::Build::BuildEngine::BuildItem::Exclude","Microsoft.Build.BuildEngine.BuildItem.FinalItemSpec","Microsoft::Build::BuildEngine::BuildItem::FinalItemSpec","Microsoft.Build.BuildEngine.BuildItem.GetEvaluatedMetadata","Microsoft::Build::BuildEngine::BuildItem::GetEvaluatedMetadata","Microsoft.Build.BuildEngine.BuildItem.GetMetadata","Microsoft::Build::BuildEngine::BuildItem::GetMetadata","Microsoft.Build.BuildEngine.BuildItem.HasMetadata","Microsoft::Build::BuildEngine::BuildItem::HasMetadata","Microsoft.Build.BuildEngine.BuildItem.Include","Microsoft::Build::BuildEngine::BuildItem::Include","Microsoft.Build.BuildEngine.BuildItem.IsImported","Microsoft::Build::BuildEngine::BuildItem::IsImported","Microsoft.Build.BuildEngine.BuildItem.MetadataCount","Microsoft::Build::BuildEngine::BuildItem::MetadataCount","Microsoft.Build.BuildEngine.BuildItem.MetadataNames","Microsoft::Build::BuildEngine::BuildItem::MetadataNames","Microsoft.Build.BuildEngine.BuildItem.Name","Microsoft::Build::BuildEngine::BuildItem::Name","Microsoft.Build.BuildEngine.BuildItem.RemoveMetadata","Microsoft::Build::BuildEngine::BuildItem::RemoveMetadata","Microsoft.Build.BuildEngine.BuildItem.SetMetadata","Microsoft::Build::BuildEngine::BuildItem::SetMetadata"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a32a9721-dfe4-effa-4345-50dd012baa0d","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\Microsoft.Build.BuildEngine\\BuildItem.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/Microsoft.Build.BuildEngine/BuildItem.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"BuildItem class | Microsoft Docs","_op_ogTitle":"BuildItem class","description":"Represents a single item in an MSBuild project.\n","toc_asset_id":"_splitted/Microsoft.Build.BuildEngine/toc.json","toc_rel":"_splitted/Microsoft.Build.BuildEngine/toc.json","source_url":"","ms.assetid":"Microsoft.Build.BuildEngine.BuildItem","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.build.buildengine.builditem","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.build.buildengine.builditem","fileRelativePath":"Microsoft.Build.BuildEngine.BuildItem.html"},"themesRelativePathToOutputRoot":"_themes/"}