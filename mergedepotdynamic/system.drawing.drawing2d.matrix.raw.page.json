{"content":"    \r\n    <h1 id=\"System_Drawing_Drawing2D_Matrix\">\r\n      <span class=\"lang-csharp\">Matrix</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Encapsulates a 3-by-3 affine matrix that represents a geometric transform. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class Matrix : MarshalByRefObject, IDisposable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">System.MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Matrix</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>In <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/ndptecgdiplus-md.md&quot; -->GDI+<!--END INCLUDE --> you can store an affine transformation in a Matrix object. Because the third column of a matrix that represents an affine transformation is always (0, 0, 1), you specify only the six numbers in the first two columns when you construct a Matrix object. The statement <code>Matrix myMatrix = new Matrix(0, 1, -1, 0, 3, 4)</code> constructs the matrix shown in the following figure.  </p>\n<p> <img src=\"add/media/aboutgdip05-art10.gif\" alt=\"Transformations\" title=\"Transformations\" data-linktype=\"relative-path\">  </p>\n<h2 id=\"composite-transformations\">Composite Transformations</h2>\n<p> A composite transformation is a sequence of transformations, one followed by the other. Consider the matrices and transformations in the following list:  </p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Matrix A</td>\n<td>Rotate 90 degrees</td>\n</tr>\n<tr>\n<td>Matrix B</td>\n<td>Scale by a factor of 2 in the x direction</td>\n</tr>\n<tr>\n<td>Matrix C</td>\n<td>Translate 3 units in the y direction</td>\n</tr>\n</tbody>\n</table>\n<p> If we start with the point (2, 1) â€” represented by the matrix [2 1 1] â€” and multiply by A, then B, then C, the point (2, 1) will undergo the three transformations in the order listed.  </p>\n<p> [2 1 1]ABC = [-2 5 1]  </p>\n<p> Rather than store the three parts of the composite transformation in three separate matrices, you can multiply A, B, and C together to get a single 3Ã—3 matrix that stores the entire composite transformation. Suppose ABC = D. Then a point multiplied by D gives the same result as a point multiplied by A, then B, then C.  </p>\n<p> [2 1 1]D = [-2 5 1]  </p>\n<p> The following illustration shows the matrices A, B, C, and D.  </p>\n<p> <img src=\"add/media/aboutgdip05-art12.gif\" alt=\"Transformations\" title=\"Transformations\" data-linktype=\"relative-path\">  </p>\n<p> The fact that the matrix of a composite transformation can be formed by multiplying the individual transformation matrices means that any sequence of affine transformations can be stored in a single Matrix object.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> The order of a composite transformation is important. In general, rotate, then scale, then translate is not the same as scale, then rotate, then translate. Similarly, the order of matrix multiplication is important. In general, ABC is not the same as BAC.  </p>\n</div>\n<p> The Matrix class provides several methods for building a composite transformation: <a class=\"xref\" href=\"system.drawing.drawing2d.matrix#System_Drawing_Drawing2D_Matrix_Multiply_\" data-linktype=\"relative-path\">Multiply</a>, <a class=\"xref\" href=\"system.drawing.drawing2d.matrix#System_Drawing_Drawing2D_Matrix_Rotate_\" data-linktype=\"relative-path\">Rotate</a>, <a class=\"xref\" href=\"system.drawing.drawing2d.matrix#System_Drawing_Drawing2D_Matrix_RotateAt_\" data-linktype=\"relative-path\">RotateAt</a>, <a class=\"xref\" href=\"system.drawing.drawing2d.matrix#System_Drawing_Drawing2D_Matrix_Scale_\" data-linktype=\"relative-path\">Scale</a>, <a class=\"xref\" href=\"system.drawing.drawing2d.matrix#System_Drawing_Drawing2D_Matrix_Shear_\" data-linktype=\"relative-path\">Shear</a>, and <a class=\"xref\" href=\"system.drawing.drawing2d.matrix#System_Drawing_Drawing2D_Matrix_Translate_\" data-linktype=\"relative-path\">Translate</a>. The following example creates the matrix of a composite transformation that first rotates 30 degrees, then scales by a factor of 2 in the y direction, and then translates 5 units in the x direction:  </p>\n<pre><code class=\"lang-vb\" name=\"System.Drawing.CoordinateSystems#11\">        Dim myMatrix As New Matrix()\n        myMatrix.Rotate(30)\n        myMatrix.Scale(1, 2, MatrixOrder.Append)\n        myMatrix.Translate(5, 0, MatrixOrder.Append)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.CoordinateSystems#11\">        Matrix myMatrix = new Matrix();\n        myMatrix.Rotate(30);\n        myMatrix.Scale(1, 2, MatrixOrder.Append);\n        myMatrix.Translate(5, 0, MatrixOrder.Append);\n</code></pre>\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix__ctor\" data-linktype=\"self-bookmark\">Matrix()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> class as the identity matrix.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix__ctor_System_Drawing_Rectangle_System_Drawing_Point___\" data-linktype=\"self-bookmark\">Matrix(Rectangle,Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> class to the geometric transform defined by the specified rectangle and array of points.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix__ctor_System_Drawing_RectangleF_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">Matrix(RectangleF,PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> class to the geometric transform defined by the specified rectangle and array of points.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix__ctor_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_\" data-linktype=\"self-bookmark\">Matrix(Single,Single,Single,Single,Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> class with the specified elements.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Elements\" data-linktype=\"self-bookmark\">Elements</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an array of floating-point values that represents the elements of this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_IsIdentity\" data-linktype=\"self-bookmark\">IsIdentity</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> is the identity matrix.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_IsInvertible\" data-linktype=\"self-bookmark\">IsInvertible</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> is invertible.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_OffsetX\" data-linktype=\"self-bookmark\">OffsetX</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the x translation value (the dx value, or the element in the third row and first column) of this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_OffsetY\" data-linktype=\"self-bookmark\">OffsetY</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the y translation value (the dy value, or the element in the third row and second column) of this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an exact copy of this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Dispose\" data-linktype=\"self-bookmark\">Dispose()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases all resources used by this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Tests whether the specified object is a <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> and is identical to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Finalize\" data-linktype=\"self-bookmark\">Finalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a hash code.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Invert\" data-linktype=\"self-bookmark\">Invert()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inverts this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>, if it is invertible.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Multiply_System_Drawing_Drawing2D_Matrix_\" data-linktype=\"self-bookmark\">Multiply(Matrix)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Multiplies this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by the matrix specified in the <code>matrix</code> parameter, by prepending the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Multiply_System_Drawing_Drawing2D_Matrix_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">Multiply(Matrix,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Multiplies this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by the matrix specified in the <code>matrix</code> parameter, and in the order specified in the <code>order</code> parameter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Reset\" data-linktype=\"self-bookmark\">Reset()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> to have the elements of the identity matrix.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Rotate_System_Single_\" data-linktype=\"self-bookmark\">Rotate(Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Prepend to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> a clockwise rotation, around the origin and by the specified angle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Rotate_System_Single_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">Rotate(Single,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies a clockwise rotation of an amount specified in the <code>angle</code> parameter, around the origin (zero x and y coordinates) for this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_RotateAt_System_Single_System_Drawing_PointF_\" data-linktype=\"self-bookmark\">RotateAt(Single,PointF)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies a clockwise rotation to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> around the point specified in the <code>point</code> parameter, and by prepending the rotation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_RotateAt_System_Single_System_Drawing_PointF_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">RotateAt(Single,PointF,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies a clockwise rotation about the specified point to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> in the specified order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Scale_System_Single_System_Single_\" data-linktype=\"self-bookmark\">Scale(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies the specified scale vector to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by prepending the scale vector.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Scale_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">Scale(Single,Single,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies the specified scale vector (<code>scaleX</code> and <code>scaleY</code>) to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> using the specified order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Shear_System_Single_System_Single_\" data-linktype=\"self-bookmark\">Shear(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies the specified shear vector to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by prepending the shear transformation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Shear_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">Shear(Single,Single,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies the specified shear vector to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> in the specified order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_TransformPoints_System_Drawing_Point___\" data-linktype=\"self-bookmark\">TransformPoints(Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies the geometric transform represented by this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> to a specified array of points.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_TransformPoints_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">TransformPoints(PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies the geometric transform represented by this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> to a specified array of points.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_TransformVectors_System_Drawing_Point___\" data-linktype=\"self-bookmark\">TransformVectors(Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies only the scale and rotate components of this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> to the specified array of points.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_TransformVectors_System_Drawing_PointF___\" data-linktype=\"self-bookmark\">TransformVectors(PointF[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Multiplies each vector in an array by the matrix. The translation elements of this matrix (third row) are ignored.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Translate_System_Single_System_Single_\" data-linktype=\"self-bookmark\">Translate(Single,Single)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies the specified translation vector (<code>offsetX</code> and <code>offsetY</code>) to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by prepending the translation vector.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_Translate_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"self-bookmark\">Translate(Single,Single,MatrixOrder)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies the specified translation vector to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> in the specified order.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Drawing_Drawing2D_Matrix_VectorTransformPoints_System_Drawing_Point___\" data-linktype=\"self-bookmark\">VectorTransformPoints(Point[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Multiplies each vector in an array by the matrix. The translation elements of this matrix (third row) are ignored.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix__ctor\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Matrix()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> class as the identity matrix.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Matrix ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix__ctor_System_Drawing_Rectangle_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Matrix(Rectangle,Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> class to the geometric transform defined by the specified rectangle and array of points.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Matrix (System.Drawing.Rectangle rect, System.Drawing.Point[] plgpts);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> structure that represents the rectangle to be transformed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>plgpts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of three <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed. The lower-right corner of the parallelogram is implied by the first three corners.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method initializes the new Matrix such that it represents the geometric transform that maps the rectangle specified by the <code>rect</code> parameter to the parallelogram defined by the three points in the <code>plgpts</code> parameter. The upper-left corner of the rectangle is mapped to the first point in the <code>plgpts</code> array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point. The lower-right point of the parallelogram is implied by the first three.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix__ctor_System_Drawing_RectangleF_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Matrix(RectangleF,PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> class to the geometric transform defined by the specified rectangle and array of points.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Matrix (System.Drawing.RectangleF rect, System.Drawing.PointF[] plgpts);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectanglef\" data-linktype=\"relative-path\">RectangleF</a> structure that represents the rectangle to be transformed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>plgpts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of three <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed. The lower-right corner of the parallelogram is implied by the first three corners.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method initializes the new <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> such that it represents the geometric transform that maps the rectangle specified by the <code>rect</code> parameter to the parallelogram defined by the three points in the <code>plgpts</code> parameter. The upper-left corner of the rectangle is mapped to the first point in the <code>plgpts</code> array, the upper-right corner is mapped to the second point, and the lower-left corner is mapped to the third point. The lower-right point of the parallelogram is implied by the first three.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix__ctor_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Matrix(Single,Single,Single,Single,Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> class with the specified elements.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Matrix (float m11, float m12, float m21, float m22, float dx, float dy);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>m11</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value in the first row and first column of the new <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>m12</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value in the first row and second column of the new <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>m21</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value in the second row and first column of the new <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>m22</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value in the second row and second column of the new <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dx</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value in the third row and first column of the new <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dy</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value in the third row and second column of the new <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Elements\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Elements_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Elements</div>        \r\n          </div>\r\n    \r\n            <p>Gets an array of floating-point values that represents the elements of this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float[] Elements { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a>[]</div>\r\n                  </div>\r\n                  <p>An array of floating-point values that represents the elements of this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The elements m11, m12, m21, m22, dx, and dy of the <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> are represented by the values in the array in that order.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_IsIdentity\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_IsIdentity_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsIdentity</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> is the identity matrix.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsIdentity { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This property is <code>true</code> if this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> is identity; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_IsInvertible\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_IsInvertible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsInvertible</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> is invertible.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsInvertible { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This property is <code>true</code> if this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> is invertible; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_OffsetX\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_OffsetX_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OffsetX</div>        \r\n          </div>\r\n    \r\n            <p>Gets the x translation value (the dx value, or the element in the third row and first column) of this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float OffsetX { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>The x translation value of this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_OffsetY\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_OffsetY_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OffsetY</div>        \r\n          </div>\r\n    \r\n            <p>Gets the y translation value (the dy value, or the element in the third row and second column) of this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public float OffsetY { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </div>\r\n                  <p>The y translation value of this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Clone\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Creates an exact copy of this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Drawing2D.Matrix Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> that this method creates.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Dispose\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose()</div>        \r\n          </div>\r\n    \r\n            <p>Releases all resources used by this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Dispose ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Calling <code>Dispose</code> allows the resources used by this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> object to be reallocated for other purposes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Tests whether the specified object is a <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> and is identical to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>This method returns <code>true</code> if <code>obj</code> is the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> identical to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Finalize\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Finalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Finalize()</div>        \r\n          </div>\r\n    \r\n            <p>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">~Matrix ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_GetHashCode\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a hash code.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The hash code for this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Invert\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Invert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Invert()</div>        \r\n          </div>\r\n    \r\n            <p>Inverts this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>, if it is invertible.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Invert ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a matrix and inverts it:  </p>\n<pre><code class=\"lang-c#\">Matrix myMatrix = new Matrix(3, 5, 1, 2, 2, 4);  \n myMatrix.Invert();\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Multiply_System_Drawing_Drawing2D_Matrix_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Multiply_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Multiply(Matrix)</div>        \r\n          </div>\r\n    \r\n            <p>Multiplies this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by the matrix specified in the <code>matrix</code> parameter, by prepending the specified <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Multiply (System.Drawing.Drawing2D.Matrix matrix);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by which this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> is to be multiplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.matrix#System_Drawing_Drawing2D_Matrix_Multiply_\" data-linktype=\"relative-path\">Multiply</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Multiply_System_Drawing_Drawing2D_Matrix_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Multiply_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Multiply(Matrix,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Multiplies this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by the matrix specified in the <code>matrix</code> parameter, and in the order specified in the <code>order</code> parameter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Multiply (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>matrix</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by which this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> is to be multiplied.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> that represents the order of the multiplication.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the specified order is <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a>, this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> is multiplied by the specified matrix in a prepended order. If the specified order is <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a>, this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> is multiplied by the specified matrix in an appended order.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates three matrices.  </p>\n</li>\n<li><p>Lists the contents of matrix 1 to the screen.  </p>\n</li>\n<li><p>Multiplies matrix 1 by matrix 2 and stores the result in matrix 1.  </p>\n</li>\n<li><p>Lists the contents of matrix 1 to the screen.  </p>\n</li>\n<li><p>Multiplies the result stored in matrix 1 by matrix 3, and again stores the result in matrix 1.  </p>\n</li>\n<li><p>Lists the contents of matrix 1 to the screen.  </p>\n</li>\n<li><p>Draws a rectangle to the screen prior to applying the matrix 1 transform (the blue rectangle).  </p>\n</li>\n<li><p>Applies the transform to the rectangle.  </p>\n</li>\n<li><p>Draws the transformed rectangle to the screen (the red rectangle), using the same coordinates as the previous rectangle.  </p>\n<p>Notice that the red rectangle has been scaled by a factor of two in the horizontal direction, then rotated 90 degrees, and then moved (translated) 250 points in the x direction and 50 points in the y direction.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#1\">public:\n   void MultiplyExample( PaintEventArgs^ e )\n   {\n      Pen^ myPen = gcnew Pen( Color::Blue,1.0f );\n      Pen^ myPen2 = gcnew Pen( Color::Red,1.0f );\n\n      // Set up the matrices.\n      Matrix^ myMatrix1 = gcnew Matrix( 2.0f,0.0f,0.0f,1.0f,0.0f,0.0f );\n      Matrix^ myMatrix2 = gcnew Matrix( 0.0f,1.0f,-1.0f,0.0f,0.0f,0.0f );\n      Matrix^ myMatrix3 = gcnew Matrix( 1.0f,0.0f,0.0f,1.0f,250.0f,50.0f );\n\n      // Display the elements of the starting matrix.\n      ListMatrixElements( e, myMatrix1, &quot;Beginning Matrix&quot;, 6, 40 );\n\n      // Multiply Matrix1 by Matrix 2.\n      myMatrix1-&gt;Multiply( myMatrix2, MatrixOrder::Append );\n\n      // Display the result of the multiplication of Matrix1 and\n      // Matrix2.\n      ListMatrixElements( e, myMatrix1, &quot;Matrix After 1st Multiplication&quot;, 6, 60 );\n\n      // Multiply the result from the previous multiplication by\n      // Matrix3.\n      myMatrix1-&gt;Multiply( myMatrix3, MatrixOrder::Append );\n\n      // Display the result of the previous multiplication\n      // multiplied by Matrix3.\n      ListMatrixElements1( e, myMatrix1, &quot;Matrix After 2nd Multiplication&quot;, 6, 80 );\n\n      // Draw the rectangle prior to transformation.\n      e-&gt;Graphics-&gt;DrawRectangle( myPen, 0, 0, 100, 100 );\n\n      // Make the transformation.\n      e-&gt;Graphics-&gt;Transform = myMatrix1;\n\n      // Draw the rectangle after transformation.\n      e-&gt;Graphics-&gt;DrawRectangle( myPen2, 0, 0, 100, 100 );\n   }\n\n   //-------------------------------------------------------\n   // The following function is a helper function to\n   // list the contents of a matrix.\n   //-------------------------------------------------------\n   void ListMatrixElements1( PaintEventArgs^ e, Matrix^ matrix, String^ matrixName, int numElements, int y )\n   {\n      // Set up variables for drawing the array\n      // of points to the screen.\n      int i;\n      float x = 20,X = 200;\n      System::Drawing::Font^ myFont = gcnew System::Drawing::Font( &quot;Arial&quot;,8 );\n      SolidBrush^ myBrush = gcnew SolidBrush( Color::Black );\n\n      // Draw the matrix name to the screen.\n      e-&gt;Graphics-&gt;DrawString( String::Concat( matrixName, &quot;:  &quot; ), myFont, myBrush, (float)x, (float)y );\n\n      // Draw the set of path points and types to the screen.\n      for ( i = 0; i &lt; numElements; i++ )\n      {\n         e-&gt;Graphics-&gt;DrawString( String::Concat( matrix-&gt;Elements[ i ], &quot;, &quot; ), myFont, myBrush, (float)X, (float)y );\n         X += 30;\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#1\">    Public Sub MultiplyExample(ByVal e As PaintEventArgs)\n        Dim myPen As New Pen(Color.Blue, 1)\n        Dim myPen2 As New Pen(Color.Red, 1)\n\n        &#39; Set up the matrices.\n        Dim myMatrix1 As New Matrix(2.0F, 0.0F, 0.0F, 1.0F, 0.0F, 0.0F)\n\n        &#39; Scale.\n        Dim myMatrix2 As New Matrix(0.0F, 1.0F, -1.0F, 0.0F, 0.0F, 0.0F)\n\n        &#39; Rotate 90.\n        Dim myMatrix3 As New Matrix(1.0F, 0.0F, 0.0F, 1.0F, 250.0F, 50.0F)\n\n        &#39; Display the elements of the starting matrix.\n        ListMatrixElementsHelper(e, myMatrix1, &quot;Beginning Matrix&quot;, 6, 40)\n\n        &#39; Multiply Matrix1 by Matrix 2.\n        myMatrix1.Multiply(myMatrix2, MatrixOrder.Append)\n\n        &#39; Display the result of the multiplication of Matrix1 and\n        &#39; Matrix2.\n        ListMatrixElementsHelper(e, myMatrix1, _\n        &quot;Matrix After 1st Multiplication&quot;, 6, 60)\n\n        &#39; Multiply the result from the pervious multiplication by\n        &#39; Matrix3.\n        myMatrix1.Multiply(myMatrix3, MatrixOrder.Append)\n\n        &#39; Display the result of the previous multiplication\n        &#39; multiplied by Matrix3.\n        ListMatrixElementsHelper1(e, myMatrix1, _\n        &quot;Matrix After 2nd Multiplication&quot;, 6, 80)\n\n        &#39; Draw the rectangle prior to transformation.\n        e.Graphics.DrawRectangle(myPen, 0, 0, 100, 100)\n        e.Graphics.Transform = myMatrix1\n\n        &#39; Draw the rectangle after transformation.\n        e.Graphics.DrawRectangle(myPen2, 0, 0, 100, 100)\n    End Sub\n\n    &#39; A helper function to list the contents of a matrix.\n    Public Sub ListMatrixElementsHelper1(ByVal e As PaintEventArgs, _\n    ByVal matrix As Matrix, ByVal matrixName As String, ByVal numElements As Integer, _\n    ByVal y As Integer)\n\n        &#39; Set up variables for drawing the array\n\n        &#39; of points to the screen.\n        Dim i As Integer\n        Dim x As Single = 20\n        Dim j As Single = 200\n        Dim myFont As New Font(&quot;Arial&quot;, 8)\n        Dim myBrush As New SolidBrush(Color.Black)\n\n        &#39; Draw the matrix name to the screen.\n        e.Graphics.DrawString(matrixName + &quot;:  &quot;, myFont, myBrush, x, y)\n\n        &#39; Draw the set of path points and types to the screen.\n        For i = 0 To numElements - 1\n            e.Graphics.DrawString(matrix.Elements(i).ToString() + &quot;, &quot;, _\n            myFont, myBrush, j, y)\n            j += 30\n        Next i\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#1\">        public void MultiplyExample(PaintEventArgs e)\n        {\n            Pen myPen = new Pen(Color.Blue, 1);\n            Pen myPen2 = new Pen(Color.Red, 1);\n                     \n            // Set up the matrices.\n            Matrix myMatrix1 = new Matrix(\n                2.0f, 0.0f, 0.0f, 1.0f, 0.0f, 0.0f);  \n            \n            Matrix myMatrix2 = new Matrix(\n                0.0f, 1.0f, -1.0f, 0.0f, 0.0f, 0.0f); \n          \n            Matrix myMatrix3 = new Matrix(\n                1.0f, 0.0f, 0.0f, 1.0f, 250.0f, 50.0f);  \n         \n                     \n            // Display the elements of the starting matrix.\n            ListMatrixElements(e, myMatrix1, &quot;Beginning Matrix&quot;, 6, 40);\n                     \n            // Multiply Matrix1 by Matrix 2.\n            myMatrix1.Multiply(myMatrix2, MatrixOrder.Append);\n                     \n            // Display the result of the multiplication of Matrix1 and\n                     \n            // Matrix2.\n            ListMatrixElements(e,\n                myMatrix1,\n                &quot;Matrix After 1st Multiplication&quot;,\n                6,\n                60);\n                     \n            // Multiply the result from the pervious multiplication by\n            // Matrix3.\n            myMatrix1.Multiply(myMatrix3, MatrixOrder.Append);\n                     \n            // Display the result of the previous multiplication\n            // multiplied by Matrix3.\n            ListMatrixElements1(e,\n                myMatrix1,\n                &quot;Matrix After 2nd Multiplication&quot;,\n                6,\n                80);\n                     \n            // Draw the rectangle prior to transformation.\n            e.Graphics.DrawRectangle(myPen, 0, 0, 100, 100);\n                     \n            // Make the transformation.\n            e.Graphics.Transform = myMatrix1;\n                     \n            // Draw the rectangle after transformation.\n            e.Graphics.DrawRectangle(myPen2, 0, 0, 100, 100);\n        }\n                     \n        //-------------------------------------------------------\n        // The following function is a helper function to\n        // list the contents of a matrix.\n        //-------------------------------------------------------\n        public void ListMatrixElements1(\n            PaintEventArgs e,\n            Matrix matrix,\n            string matrixName,\n            int numElements,\n            int y)\n        {\n                     \n            // Set up variables for drawing the array\n            // of points to the screen.\n            int i;\n            float x = 20, X = 200;\n            Font myFont = new Font(&quot;Arial&quot;, 8);\n            SolidBrush myBrush = new SolidBrush(Color.Black);\n                     \n            // Draw the matrix name to the screen.\n            e.Graphics.DrawString(\n                matrixName + &quot;:  &quot;,\n                myFont,\n                myBrush,\n                x,\n                y);\n                     \n            // Draw the set of path points and types to the screen.\n            for(i=0; i&lt;numElements; i++)\n            {\n                e.Graphics.DrawString(\n                    matrix.Elements[i].ToString() + &quot;, &quot;,\n                    myFont,\n                    myBrush,\n                    X,\n                    y);\n                X += 30;\n            }\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Reset\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Reset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Reset()</div>        \r\n          </div>\r\n    \r\n            <p>Resets this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> to have the elements of the identity matrix.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Reset ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The elements on the main diagonal of the identity matrix are 1. All other elements of the identity matrix are 0.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates a scaling matrix.  </p>\n</li>\n<li><p>Lists the matrix elements to the screen.  </p>\n</li>\n<li><p>Resets the matrix to identity.  </p>\n</li>\n<li><p>Lists the elements to the screen.  </p>\n</li>\n<li><p>Translates the matrix by 50 points in the x-axis and 40 points in the y-axis.  </p>\n</li>\n<li><p>Lists the elements of the translated matrix to the screen.  </p>\n</li>\n<li><p>Draws a rectangle is drawn to the screen prior to applying the matrix transform (the blue rectangle).  </p>\n</li>\n<li><p>Applies the transform to the rectangle.  </p>\n</li>\n<li><p>Draws the transformed rectangle is drawn to the screen (the red rectangle), using the same coordinates as the previous rectangle.  </p>\n<p>Notice that the red rectangle was not scaled (because of the reset) but was translated in the x-axis and y-axis.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#2\">public:\n   void ResetExample( PaintEventArgs^ e )\n   {\n      Pen^ myPen = gcnew Pen( Color::Blue,1.0f );\n      Pen^ myPen2 = gcnew Pen( Color::Red,1.0f );\n\n      // Create a matrix that scales by 5 in the x direction and\n      // by 3 in the y direction.\n      Matrix^ myMatrix = gcnew Matrix( 5.0f,0.0f,0.0f,3.0f,0.0f,0.0f );\n\n      // List the matrix elements to the screen.\n      ListMatrixElements( e, myMatrix, &quot;Beginning Matrix&quot;, 6, 20 );\n\n      // Reset the matrix to identity.\n      myMatrix-&gt;Reset();\n\n      // Again list the matrix elements to the screen.\n      ListMatrixElements2( e, myMatrix, &quot;Matrix After Reset&quot;, 6, 40 );\n\n      // Translate the matrix by 50 points in the x-axis and 40 points\n      // in the y-axis.\n      myMatrix-&gt;Translate( 50.0f, 40.0f );\n\n      // List the matrix elements to the screen.\n      ListMatrixElements1( e, myMatrix, &quot;Matrix After Translation&quot;, 6, 60 );\n\n      // Draw a rectangle to the screen.\n      e-&gt;Graphics-&gt;DrawRectangle( myPen, 0, 0, 100, 100 );\n\n      // Apply the matrix transform to the Graphics.\n      e-&gt;Graphics-&gt;Transform = myMatrix;\n\n      // Draw another rectangle to the screen that has the transform\n      // applied.\n      e-&gt;Graphics-&gt;DrawRectangle( myPen2, 0, 0, 100, 100 );\n   }\n\n   //-------------------------------------------------------\n   // This function is a helper function to\n   // list the contents of a matrix.\n   //-------------------------------------------------------\n   void ListMatrixElements2( PaintEventArgs^ e, Matrix^ matrix, String^ matrixName, int numElements, int y )\n   {\n      // Set up variables for drawing the array\n      // of points to the screen.\n      int i;\n      float x = 20,X = 200;\n      System::Drawing::Font^ myFont = gcnew System::Drawing::Font( &quot;Arial&quot;,8 );\n      SolidBrush^ myBrush = gcnew SolidBrush( Color::Black );\n\n      // Draw the matrix name to the screen.\n      e-&gt;Graphics-&gt;DrawString( String::Concat( matrixName, &quot;:  &quot; ), myFont, myBrush, (float)x, (float)y );\n\n      // Draw the set of path points and types to the screen.\n      for ( i = 0; i &lt; numElements; i++ )\n      {\n         e-&gt;Graphics-&gt;DrawString( String::Concat( matrix-&gt;Elements[ i ], &quot;, &quot; ), myFont, myBrush, (float)X, (float)y );\n         X += 30;\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#2\">    Public Sub ResetExample(ByVal e As PaintEventArgs)\n        Dim myPen As New Pen(Color.Blue, 1)\n        Dim myPen2 As New Pen(Color.Red, 1)\n        Dim myMatrix As New Matrix(5.0F, 0.0F, 0.0F, 3.0F, 0.0F, 0.0F)\n\n        ListMatrixElementsHelper2(e, myMatrix, &quot;Beginning Matrix&quot;, 6, 20)\n        myMatrix.Reset()\n        ListMatrixElementsHelper(e, myMatrix, &quot;Matrix After Reset&quot;, 6, 40)\n\n        &#39; Translate.\n        myMatrix.Translate(50.0F, 40.0F)\n\n        ListMatrixElementsHelper(e, myMatrix, &quot;Matrix After Translation&quot;, _\n            6, 60)\n        e.Graphics.DrawRectangle(myPen, 0, 0, 100, 100)\n        e.Graphics.Transform = myMatrix\n        e.Graphics.DrawRectangle(myPen2, 0, 0, 100, 100)\n    End Sub\n\n    &#39; A helper function to list the contents of a matrix.\n    Public Sub ListMatrixElementsHelper2(ByVal e As PaintEventArgs, _\n    ByVal matrix As Matrix, ByVal matrixName As String, ByVal numElements As Integer, _\n    ByVal y As Integer)\n\n        &#39; Set up variables for drawing the array\n        &#39; of points to the screen.\n        Dim i As Integer\n        Dim x As Single = 20\n        Dim j As Single = 200\n        Dim myFont As New Font(&quot;Arial&quot;, 8)\n        Dim myBrush As New SolidBrush(Color.Black)\n\n        &#39; Draw the matrix name to the screen.\n        e.Graphics.DrawString(matrixName + &quot;:  &quot;, myFont, myBrush, x, y)\n\n        &#39; Draw the set of path points and types to the screen.\n        For i = 0 To numElements - 1\n            e.Graphics.DrawString(matrix.Elements(i).ToString() + &quot;, &quot;, _\n            myFont, myBrush, j, y)\n            j += 30\n        Next i\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#2\">        public void ResetExample(PaintEventArgs e)\n        {\n            Pen myPen = new Pen(Color.Blue, 1);\n            Pen myPen2 = new Pen(Color.Red, 1);\n                     \n            // Create a matrix that scales by 5 in the x direction and\n            // by 3 in the y direction.\n            Matrix myMatrix = new Matrix(\n                5.0f, 0.0f, 0.0f, 3.0f, 0.0f, 0.0f); \n                     \n            // List the matrix elements to the screen.\n            ListMatrixElements(e, myMatrix, &quot;Beginning Matrix&quot;, 6, 20);\n                     \n            // Reset the matrix to identity.\n            myMatrix.Reset();\n                     \n            // Again list the matrix elements to the screen.\n            ListMatrixElements2(e, myMatrix, &quot;Matrix After Reset&quot;, 6, 40);\n                     \n            // Translate the matrix by 50 points in the x-axis and 40 points\n            // in the y-axis.\n            myMatrix.Translate(50.0f, 40.0f); \n          \n            // List the matrix elements to the screen.\n            ListMatrixElements1(e, myMatrix, &quot;Matrix After Translation&quot;, 6, 60);\n                     \n            // Draw a rectangle to the screen.\n            e.Graphics.DrawRectangle(myPen, 0, 0, 100, 100);\n                     \n            // Apply the matrix transform to the Graphics.\n            e.Graphics.Transform = myMatrix;\n                     \n            // Draw another rectangle to the screen that has the transform\n            // applied.\n            e.Graphics.DrawRectangle(myPen2, 0, 0, 100, 100);\n        }\n                     \n        //-------------------------------------------------------\n        // This function is a helper function to\n        // list the contents of a matrix.\n        //-------------------------------------------------------\n        public void ListMatrixElements2(\n            PaintEventArgs e,\n            Matrix matrix,\n            string matrixName,\n            int numElements,\n            int y)\n        {\n                     \n            // Set up variables for drawing the array\n            // of points to the screen.\n            int i;\n            float x = 20, X = 200;\n            Font myFont = new Font(&quot;Arial&quot;, 8);\n            SolidBrush myBrush = new SolidBrush(Color.Black);\n                     \n            // Draw the matrix name to the screen.\n            e.Graphics.DrawString(\n                matrixName + &quot;:  &quot;,\n                myFont,\n                myBrush,\n                x,\n                y);\n                     \n            // Draw the set of path points and types to the screen.\n            for(i=0; i &lt; numElements; i++)\n            {\n                e.Graphics.DrawString(\n                    matrix.Elements[i].ToString() + &quot;, &quot;,\n                    myFont,\n                    myBrush,\n                    X,\n                    y);\n                X += 30;\n            }\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Rotate_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Rotate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Rotate(Single)</div>        \r\n          </div>\r\n    \r\n            <p>Prepend to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> a clockwise rotation, around the origin and by the specified angle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Rotate (float angle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle of the rotation, in degrees.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.matrix#System_Drawing_Drawing2D_Matrix_Rotate_System_Single_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"relative-path\">Rotate(Single,MatrixOrder)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Rotate_System_Single_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Rotate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Rotate(Single,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Applies a clockwise rotation of an amount specified in the <code>angle</code> parameter, around the origin (zero x and y coordinates) for this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Rotate (float angle, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle (extent) of the rotation, in degrees.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> that specifies the order (append or prepend) in which the rotation is applied to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).  </p>\n</li>\n<li><p>Creates a matrix and rotates it 45 degrees.  </p>\n</li>\n<li><p>Applies this matrix transform to the rectangle.  </p>\n</li>\n<li><p>Draws the transformed rectangle to the screen (the red rectangle).  </p>\n<p>Notice that the red rectangle has been rotated around the 0, 0 screen coordinates.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#3\">public:\n   void RotateExample( PaintEventArgs^ e )\n   {\n      Pen^ myPen = gcnew Pen( Color::Blue,1.0f );\n      Pen^ myPen2 = gcnew Pen( Color::Red,1.0f );\n\n      // Draw the rectangle to the screen before applying the transform.\n      e-&gt;Graphics-&gt;DrawRectangle( myPen, 150, 50, 200, 100 );\n\n      // Create a matrix and rotate it 45 degrees.\n      Matrix^ myMatrix = gcnew Matrix;\n      myMatrix-&gt;Rotate( 45, MatrixOrder::Append );\n\n      // Draw the rectangle to the screen again after applying the\n      // transform.\n      e-&gt;Graphics-&gt;Transform = myMatrix;\n      e-&gt;Graphics-&gt;DrawRectangle( myPen2, 150, 50, 200, 100 );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#3\">    Public Sub RotateExample(ByVal e As PaintEventArgs)\n        Dim myPen As New Pen(Color.Blue, 1)\n        Dim myPen2 As New Pen(Color.Red, 1)\n\n        &#39; Draw the rectangle to the screen before applying the transform.\n        e.Graphics.DrawRectangle(myPen, 150, 50, 200, 100)\n\n        &#39; Create a matrix and rotate it 45 degrees.\n        Dim myMatrix As New Matrix\n        myMatrix.Rotate(45, MatrixOrder.Append)\n\n        &#39; Draw the rectangle to the screen again after applying the\n        &#39; transform.\n        e.Graphics.Transform = myMatrix\n        e.Graphics.DrawRectangle(myPen2, 150, 50, 200, 100)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#3\">        public void RotateExample(PaintEventArgs e)\n        {\n            Pen myPen = new Pen(Color.Blue, 1);\n            Pen myPen2 = new Pen(Color.Red, 1);\n                     \n            // Draw the rectangle to the screen before applying the transform.\n            e.Graphics.DrawRectangle(myPen, 150, 50, 200, 100);\n                     \n            // Create a matrix and rotate it 45 degrees.\n            Matrix myMatrix = new Matrix();\n            myMatrix.Rotate(45, MatrixOrder.Append);\n                     \n            // Draw the rectangle to the screen again after applying the\n                     \n            // transform.\n            e.Graphics.Transform = myMatrix;\n            e.Graphics.DrawRectangle(myPen2, 150, 50, 200, 100);\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_RotateAt_System_Single_System_Drawing_PointF_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_RotateAt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RotateAt(Single,PointF)</div>        \r\n          </div>\r\n    \r\n            <p>Applies a clockwise rotation to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> around the point specified in the <code>point</code> parameter, and by prepending the rotation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RotateAt (float angle, System.Drawing.PointF point);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle (extent) of the rotation, in degrees.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> that represents the center of the rotation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using a <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> and the <a class=\"xref\" href=\"system.drawing.drawing2d.graphicspath#System_Drawing_Drawing2D_GraphicsPath_Transform_\" data-linktype=\"relative-path\">Transform</a> method to rotate a string. This example is designed to be used with Windows Forms. Create a form and paste the following code into it. Call the <code>DrawVerticalStringFromBottomUp</code> method in the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event handler, passing <code>e</code> as <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Drawing.MiscExamples#5\">    public void DrawVerticalStringFromBottomUp(PaintEventArgs e)\n    {\n\n        // Create the string to draw on the form.\n        string text = &quot;Can you read this?&quot;;\n\n        // Create a GraphicsPath.\n        System.Drawing.Drawing2D.GraphicsPath path = \n            new System.Drawing.Drawing2D.GraphicsPath();\n\n        // Add the string to the path; declare the font, font style, size, and\n        // vertical format for the string.\n        path.AddString(text, this.Font.FontFamily, 1, 15, \n            new PointF(0.0F, 0.0F), \n            new StringFormat(StringFormatFlags.DirectionVertical));\n\n        // Declare a matrix that will be used to rotate the text.\n        System.Drawing.Drawing2D.Matrix rotateMatrix = \n            new System.Drawing.Drawing2D.Matrix();\n\n        // Set the rotation angle and starting point for the text.\n        rotateMatrix.RotateAt(180.0F, new PointF(10.0F, 100.0F));\n\n        // Transform the text with the matrix.\n        path.Transform(rotateMatrix);\n\n        // Set the SmoothingMode to high quality for best readability.\n        e.Graphics.SmoothingMode = \n            System.Drawing.Drawing2D.SmoothingMode.HighQuality;\n\n        // Fill in the path to draw the string.\n        e.Graphics.FillPath(Brushes.Red, path);\n\n        // Dispose of the path.\n        path.Dispose();\n\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Drawing.MiscExamples#5\">private:\n   void DrawVerticalStringFromBottomUp( PaintEventArgs^ e )\n   {\n      // Create the string to draw on the form.\n      String^ text = &quot;Can you read this?&quot;;\n\n      // Create a GraphicsPath.\n      System::Drawing::Drawing2D::GraphicsPath^ path = gcnew System::Drawing::Drawing2D::GraphicsPath;\n\n      // Add the string to the path; declare the font, font style, size, and\n      // vertical format for the string.\n      path-&gt;AddString( text, this-&gt;Font-&gt;FontFamily, 1, 15, PointF(0.0F,0.0F), gcnew StringFormat( StringFormatFlags::DirectionVertical ) );\n\n      // Declare a matrix that will be used to rotate the text.\n      System::Drawing::Drawing2D::Matrix^ rotateMatrix = gcnew System::Drawing::Drawing2D::Matrix;\n\n      // Set the rotation angle and starting point for the text.\n      rotateMatrix-&gt;RotateAt( 180.0F, PointF(10.0F,100.0F) );\n\n      // Transform the text with the matrix.\n      path-&gt;Transform(rotateMatrix);\n\n      // Set the SmoothingMode to high quality for best readability.\n      e-&gt;Graphics-&gt;SmoothingMode = System::Drawing::Drawing2D::SmoothingMode::HighQuality;\n\n      // Fill in the path to draw the string.\n      e-&gt;Graphics-&gt;FillPath( Brushes::Red, path );\n\n      // Dispose of the path.\n      delete path;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.MiscExamples#5\">    Public Sub DrawVerticalStringFromBottomUp(ByVal e As PaintEventArgs)\n\n        &#39; Create the string to draw on the form.\n        Dim text As String = &quot;Can you read this?&quot;\n\n        &#39; Create a GraphicsPath.\n        Dim path As New System.Drawing.Drawing2D.GraphicsPath\n\n        &#39; Add the string to the path; declare the font, font style, size, and\n        &#39; vertical format for the string.\n        path.AddString(text, Me.Font.FontFamily, 1, 15, New PointF(0.0F, 0.0F), _\n            New StringFormat(StringFormatFlags.DirectionVertical))\n\n        &#39; Declare a matrix that will be used to rotate the text.\n        Dim rotateMatrix As New System.Drawing.Drawing2D.Matrix\n\n        &#39; Set the rotation angle and starting point for the text.\n        rotateMatrix.RotateAt(180.0F, New PointF(10.0F, 100.0F))\n\n        &#39; Transform the text with the matrix.\n        path.Transform(rotateMatrix)\n\n        &#39; Set the SmoothingMode to high quality for best readability.\n        e.Graphics.SmoothingMode = Drawing2D.SmoothingMode.HighQuality\n\n        &#39; Fill in the path to draw the string.\n        e.Graphics.FillPath(Brushes.Red, path)\n\n        &#39; Dispose of the path.\n        path.Dispose()\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_RotateAt_System_Single_System_Drawing_PointF_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_RotateAt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RotateAt(Single,PointF,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Applies a clockwise rotation about the specified point to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> in the specified order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void RotateAt (float angle, System.Drawing.PointF point, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>angle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The angle of the rotation, in degrees.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>point</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> that represents the center of the rotation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> that specifies the order (append or prepend) in which the rotation is applied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Draws a rectangle to the screen prior to applying a rotation transform (the blue rectangle).  </p>\n</li>\n<li><p>Creates a matrix and rotates it 45 degrees around a specified point.  </p>\n</li>\n<li><p>Applies this matrix transform is to the rectangle.  </p>\n</li>\n<li><p>Draws the transformed rectangle to the screen (the red rectangle).  </p>\n<p>Notice that the red rectangle has been rotated around the upper left-hand corner of the rectangle (the rotation point specified the RotateAt method).  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#4\">public:\n   void RotateAtExample( PaintEventArgs^ e )\n   {\n      Pen^ myPen = gcnew Pen( Color::Blue,1.0f );\n      Pen^ myPen2 = gcnew Pen( Color::Red,1.0f );\n      PointF rotatePoint = PointF(150.0f,50.0f);\n\n      // Draw the rectangle to the screen before applying the\n      // transform.\n      e-&gt;Graphics-&gt;DrawRectangle( myPen, 150, 50, 200, 100 );\n\n      // Create a matrix and rotate it 45 degrees.\n      Matrix^ myMatrix = gcnew Matrix;\n      myMatrix-&gt;RotateAt( 45, rotatePoint, MatrixOrder::Append );\n\n      // Draw the rectangle to the screen again after applying the\n      // transform.\n      e-&gt;Graphics-&gt;Transform = myMatrix;\n      e-&gt;Graphics-&gt;DrawRectangle( myPen2, 150, 50, 200, 100 );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#4\">    Public Sub RotateAtExample(ByVal e As PaintEventArgs)\n        Dim myPen As New Pen(Color.Blue, 1)\n        Dim myPen2 As New Pen(Color.Red, 1)\n        Dim rotatePoint As New PointF(150.0F, 50.0F)\n\n        &#39; Draw the rectangle to the screen before applying the\n        &#39; transform.\n        e.Graphics.DrawRectangle(myPen, 150, 50, 200, 100)\n\n        &#39; Create a matrix and rotate it 45 degrees.\n        Dim myMatrix As New Matrix\n        myMatrix.RotateAt(45, rotatePoint, MatrixOrder.Append)\n\n        &#39; Draw the rectangle to the screen again after applying the\n        &#39; transform.\n        e.Graphics.Transform = myMatrix\n        e.Graphics.DrawRectangle(myPen2, 150, 50, 200, 100)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#4\">        public void RotateAtExample(PaintEventArgs e)\n        {\n            Pen myPen = new Pen(Color.Blue, 1);\n            Pen myPen2 = new Pen(Color.Red, 1);\n            PointF rotatePoint = new PointF(150.0f, 50.0f);\n                     \n            // Draw the rectangle to the screen before applying the\n            // transform.\n            e.Graphics.DrawRectangle(myPen, 150, 50, 200, 100);\n                     \n            // Create a matrix and rotate it 45 degrees.\n            Matrix myMatrix = new Matrix();\n            myMatrix.RotateAt(45, rotatePoint, MatrixOrder.Append);\n                     \n            // Draw the rectangle to the screen again after applying the\n            // transform.\n            e.Graphics.Transform = myMatrix;\n            e.Graphics.DrawRectangle(myPen2, 150, 50, 200, 100);\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Scale_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Scale_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Scale(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Applies the specified scale vector to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by prepending the scale vector.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Scale (float scaleX, float scaleY);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>scaleX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value by which to scale this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> in the x-axis direction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scaleY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value by which to scale this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> in the y-axis direction.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.matrix#System_Drawing_Drawing2D_Matrix_Scale_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"relative-path\">Scale(Single,Single,MatrixOrder)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Scale_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Scale_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Scale(Single,Single,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Applies the specified scale vector (<code>scaleX</code> and <code>scaleY</code>) to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> using the specified order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Scale (float scaleX, float scaleY, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>scaleX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value by which to scale this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> in the x-axis direction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>scaleY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value by which to scale this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> in the y-axis direction.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> that specifies the order (append or prepend) in which the scale vector is applied to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Draws a rectangle to the screen prior to applying a scaling transform (the blue rectangle).  </p>\n</li>\n<li><p>Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.  </p>\n</li>\n<li><p>Applies this matrix transform to the rectangle.  </p>\n</li>\n<li><p>Draws the transformed rectangle to the screen (the red rectangle).  </p>\n<p>Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#5\">public:\n   void ScaleExample( PaintEventArgs^ e )\n   {\n      Pen^ myPen = gcnew Pen( Color::Blue,1.0f );\n      Pen^ myPen2 = gcnew Pen( Color::Red,1.0f );\n\n      // Draw the rectangle to the screen before applying the\n      // transform.\n      e-&gt;Graphics-&gt;DrawRectangle( myPen, 50, 50, 100, 100 );\n\n      // Create a matrix and scale it.\n      Matrix^ myMatrix = gcnew Matrix;\n      myMatrix-&gt;Scale( 3, 2, MatrixOrder::Append );\n\n      // Draw the rectangle to the screen again after applying the\n      // transform.\n      e-&gt;Graphics-&gt;Transform = myMatrix;\n      e-&gt;Graphics-&gt;DrawRectangle( myPen2, 50, 50, 100, 100 );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#5\">    Public Sub ScaleExample(ByVal e As PaintEventArgs)\n        Dim myPen As New Pen(Color.Blue, 1)\n        Dim myPen2 As New Pen(Color.Red, 1)\n\n        &#39; Draw the rectangle to the screen before applying the\n        &#39; transform.\n        e.Graphics.DrawRectangle(myPen, 50, 50, 100, 100)\n\n        &#39; Create a matrix and scale it.\n        Dim myMatrix As New Matrix\n        myMatrix.Scale(3, 2, MatrixOrder.Append)\n\n        &#39; Draw the rectangle to the screen again after applying the\n        &#39; transform.\n        e.Graphics.Transform = myMatrix\n        e.Graphics.DrawRectangle(myPen2, 50, 50, 100, 100)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#5\">        public void ScaleExample(PaintEventArgs e)\n        {\n            Pen myPen = new Pen(Color.Blue, 1);\n            Pen myPen2 = new Pen(Color.Red, 1);\n                     \n            // Draw the rectangle to the screen before applying the\n            // transform.\n            e.Graphics.DrawRectangle(myPen, 50, 50, 100, 100);\n                     \n            // Create a matrix and scale it.\n            Matrix myMatrix = new Matrix();\n            myMatrix.Scale(3, 2, MatrixOrder.Append);\n                     \n            // Draw the rectangle to the screen again after applying the\n            // transform.\n            e.Graphics.Transform = myMatrix;\n            e.Graphics.DrawRectangle(myPen2, 50, 50, 100, 100);\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Shear_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Shear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Shear(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Applies the specified shear vector to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by prepending the shear transformation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Shear (float shearX, float shearY);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>shearX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The horizontal shear factor.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>shearY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The vertical shear factor.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The transformation applied in this method is a pure shear only if one of the parameters is 0. Applied to a rectangle at the origin, when the <code>shearY</code> factor is 0, the transformation moves the bottom edge horizontally by <code>shearX</code> times the height of the rectangle. When the <code>shearX</code> factor is 0, it moves the right edge vertically by <code>shearY</code> times the width of the rectangle. Caution is in order when both parameters are nonzero, because the results are hard to predict. For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event object. The code performs the following action:  </p>\n<ul>\n<li><p>Draws a rectangle to the screen, using a green pen, prior to applying a scaling transform.  </p>\n</li>\n<li><p>Creates a <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> and uses it to set a world-coordinate transform for the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a>.  </p>\n</li>\n<li><p>Draws another rectangle using a red pen.  </p>\n</li>\n<li><p>Draws an ellipse using a blue pen.  </p>\n<p>The result is a green rectangle, a red parallelogram and a transformed, blue ellipse. Notice that the green rectangle (drawn prior to setting the transform) directly uses the coordinates supplied in the <a class=\"xref\" href=\"system.drawing.graphics#System_Drawing_Graphics_DrawRectangle_\" data-linktype=\"relative-path\">DrawRectangle</a> call. The other two figures are transformed prior to drawing. The rectangle is transformed to a parallelogram (red), and the ellipse (blue) is transformed to fit into the transformed parallelogram. Notice the bottom of the rectangle is moved (sheared) in the x-axis by a factor of two times the height of the rectangle, thus forming the parallelogram.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#6\">public:\n   void MatrixShearExample( PaintEventArgs^ e )\n   {\n      Matrix^ myMatrix = gcnew Matrix;\n      myMatrix-&gt;Shear( 2, 0 );\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Green ), 0, 0, 100, 50 );\n      e-&gt;Graphics-&gt;MultiplyTransform( myMatrix );\n      e-&gt;Graphics-&gt;DrawRectangle( gcnew Pen( Color::Red ), 0, 0, 100, 50 );\n      e-&gt;Graphics-&gt;DrawEllipse( gcnew Pen( Color::Blue ), 0, 0, 100, 50 );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#6\">    Public Sub MatrixShearExample(ByVal e As PaintEventArgs)\n        Dim myMatrix As New Matrix\n        myMatrix.Shear(2, 0)\n        e.Graphics.DrawRectangle(New Pen(Color.Green), 0, 0, 100, 50)\n        e.Graphics.MultiplyTransform(myMatrix)\n        e.Graphics.DrawRectangle(New Pen(Color.Red), 0, 0, 100, 50)\n        e.Graphics.DrawEllipse(New Pen(Color.Blue), 0, 0, 100, 50)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#6\">        public void MatrixShearExample(PaintEventArgs e)\n        {\n            Matrix myMatrix = new Matrix();\n            myMatrix.Shear(2, 0);\n            e.Graphics.DrawRectangle(new Pen(Color.Green), 0, 0, 100, 50);\n            e.Graphics.MultiplyTransform(myMatrix);\n            e.Graphics.DrawRectangle(new Pen(Color.Red), 0, 0, 100, 50);\n            e.Graphics.DrawEllipse(new Pen(Color.Blue), 0, 0, 100, 50);\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Shear_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Shear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Shear(Single,Single,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Applies the specified shear vector to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> in the specified order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Shear (float shearX, float shearY, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>shearX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The horizontal shear factor.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>shearY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The vertical shear factor.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> that specifies the order (append or prepend) in which the shear is applied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The transformation applied in this method is a pure shear only if one of the parameters is 0. Applied to a rectangle at the origin, when the <code>shearY</code> factor is 0, the transformation moves the bottom edge horizontally by <code>shearX</code> times the height of the rectangle. When the <code>shearX</code> factor is 0, it moves the right edge vertically by <code>shearY</code> times the width of the rectangle. Caution is in order when both parameters are nonzero, because the results are hard to predict. For example, if both factors are 1, the transformation is singular (hence noninvertible), squeezing the entire plane to a single line.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.matrix#System_Drawing_Drawing2D_Matrix_Shear_System_Single_System_Single_\" data-linktype=\"relative-path\">Shear(Single,Single)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_TransformPoints_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_TransformPoints_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransformPoints(Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Applies the geometric transform represented by this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> to a specified array of points.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TransformPoints (System.Drawing.Point[] pts);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represents the points to transform.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an array of points that form a rectangle.  </p>\n</li>\n<li><p>Draws this array of points (to the screen prior to applying a scaling transform (the blue rectangle).  </p>\n</li>\n<li><p>Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis.  </p>\n</li>\n<li><p>Applies this matrix transform to the array of points.  </p>\n</li>\n<li><p>Draws the transformed array to the screen (the red rectangle).  </p>\n<p>Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle).  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#7\">public:\n   void TransformPointsExample( PaintEventArgs^ e )\n   {\n      Pen^ myPen = gcnew Pen( Color::Blue,1.0f );\n      Pen^ myPen2 = gcnew Pen( Color::Red,1.0f );\n\n      // Create an array of points.\n      array&lt;Point&gt;^ myArray = {Point(20,20),Point(120,20),Point(120,120),Point(20,120),Point(20,20)};\n\n      // Draw the Points to the screen before applying the\n      // transform.\n      e-&gt;Graphics-&gt;DrawLines( myPen, myArray );\n\n      // Create a matrix and scale it.\n      Matrix^ myMatrix = gcnew Matrix;\n      myMatrix-&gt;Scale( 3, 2, MatrixOrder::Append );\n      myMatrix-&gt;TransformPoints( myArray );\n\n      // Draw the Points to the screen again after applying the\n      // transform.\n      e-&gt;Graphics-&gt;DrawLines( myPen2, myArray );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#7\">    Public Sub TransformPointsExample(ByVal e As PaintEventArgs)\n        Dim myPen As New Pen(Color.Blue, 1)\n        Dim myPen2 As New Pen(Color.Red, 1)\n\n        &#39; Create an array of points.\n        Dim myArray As Point() = {New Point(20, 20), New Point(120, 20), _\n        New Point(120, 120), New Point(20, 120), New Point(20, 20)}\n\n        &#39; Draw the Points to the screen before applying the\n        &#39; transform.\n        e.Graphics.DrawLines(myPen, myArray)\n\n        &#39; Create a matrix and scale it.\n        Dim myMatrix As New Matrix\n        myMatrix.Scale(3, 2, MatrixOrder.Append)\n        myMatrix.TransformPoints(myArray)\n\n        &#39; Draw the Points to the screen again after applying the\n        &#39; transform.\n        e.Graphics.DrawLines(myPen2, myArray)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#7\">        public void TransformPointsExample(PaintEventArgs e)\n        {\n            Pen myPen = new Pen(Color.Blue, 1);\n            Pen myPen2 = new Pen(Color.Red, 1);\n                     \n            // Create an array of points.\n            Point[] myArray =\n                     {\n                         new Point(20, 20),\n                         new Point(120, 20),\n                         new Point(120, 120),\n                         new Point(20, 120),\n                         new Point(20,20)\n                     };\n                     \n            // Draw the Points to the screen before applying the\n            // transform.\n            e.Graphics.DrawLines(myPen, myArray);\n                     \n            // Create a matrix and scale it.\n            Matrix myMatrix = new Matrix();\n            myMatrix.Scale(3, 2, MatrixOrder.Append);\n            myMatrix.TransformPoints(myArray);\n                     \n            // Draw the Points to the screen again after applying the\n            // transform.\n            e.Graphics.DrawLines(myPen2, myArray);\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_TransformPoints_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_TransformPoints_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransformPoints(PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Applies the geometric transform represented by this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> to a specified array of points.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TransformPoints (System.Drawing.PointF[] pts);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a> structures that represents the points to transform.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see [TransformPoints(Point&lt;xref:System.Drawing.Drawing2D.Matrix.TransformPoints%28System.Drawing.Point%5B%5D%29&gt;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_TransformVectors_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_TransformVectors_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransformVectors(Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Applies only the scale and rotate components of this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> to the specified array of points.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TransformVectors (System.Drawing.Point[] pts);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represents the points to transform.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Creates an array of points that form a rectangle.  </p>\n</li>\n<li><p>Draws this array of points to the screen prior to applying a scaling transform (the blue rectangle).  </p>\n</li>\n<li><p>Creates a matrix and scales it by 3 in the x-axis and 2 in the y-axis, and translates it by 100 in both axes.  </p>\n</li>\n<li><p>Lists the matrix elements to the screen.  </p>\n</li>\n<li><p>Applies this matrix transform to the array of points.  </p>\n</li>\n<li><p>Draws the transformed array to the screen (the red rectangle).  </p>\n<p>Notice that the red rectangle has been scaled by a factor of 3 in the x-axis and by 2 in the y-axis, including the upper left-hand corner of the rectangle (the beginning point of the rectangle) but the translation vector (the last two elements of the matrix) is ignored.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#8\">public:\n   void TransformVectorsExample( PaintEventArgs^ e )\n   {\n      Pen^ myPen = gcnew Pen( Color::Blue,1.0f );\n      Pen^ myPen2 = gcnew Pen( Color::Red,1.0f );\n\n      // Create an array of points.\n      array&lt;Point&gt;^ myArray = {Point(20,20),Point(120,20),Point(120,120),Point(20,120),Point(20,20)};\n\n      // Draw the Points to the screen before applying the\n      // transform.\n      e-&gt;Graphics-&gt;DrawLines( myPen, myArray );\n\n      // Create a matrix, scale it, and translate it.\n      Matrix^ myMatrix = gcnew Matrix;\n      myMatrix-&gt;Scale( 3, 2, MatrixOrder::Append );\n      myMatrix-&gt;Translate( 100, 100, MatrixOrder::Append );\n\n      // List the matrix elements to the screen.\n      ListMatrixElements( e, myMatrix, &quot;Scaled and Translated Matrix&quot;, 6, 20 );\n\n      // Apply the transform to the array.\n      myMatrix-&gt;TransformVectors( myArray );\n\n      // Draw the Points to the screen again after applying the\n      // transform.\n      e-&gt;Graphics-&gt;DrawLines( myPen2, myArray );\n   }\n\n   //-------------------------------------------------------\n   // This function is a helper function to\n   // list the contents of a matrix.\n   //-------------------------------------------------------\n   void ListMatrixElements( PaintEventArgs^ e, Matrix^ matrix, String^ matrixName, int numElements, int y )\n   {\n      // Set up variables for drawing the array\n      // of points to the screen.\n      int i;\n      float x = 20,X = 200;\n      System::Drawing::Font^ myFont = gcnew System::Drawing::Font( &quot;Arial&quot;,8 );\n      SolidBrush^ myBrush = gcnew SolidBrush( Color::Black );\n\n      // Draw the matrix name to the screen.\n      e-&gt;Graphics-&gt;DrawString( String::Concat( matrixName, &quot;:  &quot; ), myFont, myBrush, (float)x, (float)y );\n\n      // Draw the set of path points and types to the screen.\n      for ( i = 0; i &lt; numElements; i++ )\n      {\n         e-&gt;Graphics-&gt;DrawString( String::Concat( matrix-&gt;Elements[ i ], &quot;, &quot; ), myFont, myBrush, (float)X, (float)y );\n         X += 30;\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#8\">    Public Sub TransformVectorsExample(ByVal e As PaintEventArgs)\n        Dim myPen As New Pen(Color.Blue, 1)\n        Dim myPen2 As New Pen(Color.Red, 1)\n\n        &#39; Create an array of points.\n        Dim myArray As Point() = {New Point(20, 20), New Point(120, 20), _\n        New Point(120, 120), New Point(20, 120), New Point(20, 20)}\n\n        &#39; Draw the Points to the screen before applying the\n        &#39; transform.\n        e.Graphics.DrawLines(myPen, myArray)\n\n        &#39; Create a matrix and scale it.\n        Dim myMatrix As New Matrix\n        myMatrix.Scale(3, 2, MatrixOrder.Append)\n        myMatrix.Translate(100, 100, MatrixOrder.Append)\n        ListMatrixElementsHelper(e, myMatrix, _\n        &quot;Scaled and Translated Matrix&quot;, 6, 20)\n        myMatrix.TransformVectors(myArray)\n\n        &#39; Draw the Points to the screen again after applying the\n        &#39; transform.\n        e.Graphics.DrawLines(myPen2, myArray)\n    End Sub\n\n    &#39; A helper function to list the contents of a matrix.\n    Public Sub ListMatrixElementsHelper(ByVal e As PaintEventArgs, _\n    ByVal matrix As Matrix, ByVal matrixName As String, ByVal numElements As Integer, _\n    ByVal y As Integer)\n\n        &#39; Set up variables for drawing the array\n        &#39; of points to the screen.\n        Dim i As Integer\n        Dim x As Single = 20\n        Dim j As Single = 200\n        Dim myFont As New Font(&quot;Arial&quot;, 8)\n        Dim myBrush As New SolidBrush(Color.Black)\n\n        &#39; Draw the matrix name to the screen.\n        e.Graphics.DrawString(matrixName + &quot;:  &quot;, myFont, myBrush, x, y)\n\n        &#39; Draw the set of path points and types to the screen.\n        For i = 0 To numElements - 1\n            e.Graphics.DrawString(matrix.Elements(i).ToString() + &quot;, &quot;, _\n            myFont, myBrush, j, y)\n            j += 30\n        Next i\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#8\">        public void TransformVectorsExample(PaintEventArgs e)\n        {\n            Pen myPen = new Pen(Color.Blue, 1);\n            Pen myPen2 = new Pen(Color.Red, 1);\n                     \n            // Create an array of points.\n            Point[] myArray =\n                     {\n                         new Point(20, 20),\n                         new Point(120, 20),\n                         new Point(120, 120),\n                         new Point(20, 120),\n                         new Point(20,20)\n                     };\n                     \n            // Draw the Points to the screen before applying the\n            // transform.\n            e.Graphics.DrawLines(myPen, myArray);\n                     \n            // Create a matrix, scale it, and translate it.\n            Matrix myMatrix = new Matrix();\n            myMatrix.Scale(3, 2, MatrixOrder.Append);\n            myMatrix.Translate(100, 100, MatrixOrder.Append);\n                     \n            // List the matrix elements to the screen.\n            ListMatrixElements(e,\n                myMatrix,\n                &quot;Scaled and Translated Matrix&quot;,\n                6,\n                20);\n                     \n            // Apply the transform to the array.\n            myMatrix.TransformVectors(myArray);\n                     \n            // Draw the Points to the screen again after applying the\n            // transform.\n            e.Graphics.DrawLines(myPen2, myArray);\n        }\n                     \n        //-------------------------------------------------------\n        // This function is a helper function to\n        // list the contents of a matrix.\n        //-------------------------------------------------------\n        public void ListMatrixElements(\n            PaintEventArgs e,\n            Matrix matrix,\n            string matrixName,\n            int numElements,\n            int y)\n        {\n                     \n            // Set up variables for drawing the array\n            // of points to the screen.\n            int i;\n            float x = 20, X = 200;\n            Font myFont = new Font(&quot;Arial&quot;, 8);\n            SolidBrush myBrush = new SolidBrush(Color.Black);\n                     \n            // Draw the matrix name to the screen.\n            e.Graphics.DrawString(\n                matrixName + &quot;:  &quot;,\n                myFont,\n                myBrush,\n                x,\n                y);\n                     \n            // Draw the set of path points and types to the screen.\n            for(i=0; i&lt;numElements; i++)\n            {\n                e.Graphics.DrawString(\n                    matrix.Elements[i].ToString() + &quot;, &quot;,\n                    myFont,\n                    myBrush,\n                    X,\n                    y);\n                X += 30;\n            }\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_TransformVectors_System_Drawing_PointF___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_TransformVectors_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransformVectors(PointF[])</div>        \r\n          </div>\r\n    \r\n            <p>Multiplies each vector in an array by the matrix. The translation elements of this matrix (third row) are ignored.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void TransformVectors (System.Drawing.PointF[] pts);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.pointf\" data-linktype=\"relative-path\">PointF</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represents the points to transform.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see [TransformVectors(Point&lt;xref:System.Drawing.Drawing2D.Matrix.TransformVectors%28System.Drawing.Point%5B%5D%29&gt;.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Translate_System_Single_System_Single_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Translate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Translate(Single,Single)</div>        \r\n          </div>\r\n    \r\n            <p>Applies the specified translation vector (<code>offsetX</code> and <code>offsetY</code>) to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> by prepending the translation vector.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Translate (float offsetX, float offsetY);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>offsetX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x value by which to translate this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offsetY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y value by which to translate this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>For an example, see <a class=\"xref\" href=\"system.drawing.drawing2d.matrix#System_Drawing_Drawing2D_Matrix_Translate_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\" data-linktype=\"relative-path\">Translate(Single,Single,MatrixOrder)</a>.</p>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_Translate_System_Single_System_Single_System_Drawing_Drawing2D_MatrixOrder_\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_Translate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Translate(Single,Single,MatrixOrder)</div>        \r\n          </div>\r\n    \r\n            <p>Applies the specified translation vector to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a> in the specified order.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Translate (float offsetX, float offsetY, System.Drawing.Drawing2D.MatrixOrder order);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>offsetX</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x value by which to translate this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>offsetY</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y value by which to translate this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>order</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.drawing2d.matrixorder\" data-linktype=\"relative-path\">MatrixOrder</a> that specifies the order (append or prepend) in which the translation is applied to this <a class=\"xref\" href=\"system.drawing.drawing2d.matrix\" data-linktype=\"relative-path\">Matrix</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example is designed for use with Windows Forms, and it requires <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a><code>e</code>, an <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event object. The code performs the following actions:  </p>\n<ul>\n<li><p>Draws a rectangle to the screen prior to applying a translate transform (the blue rectangle).  </p>\n</li>\n<li><p>Creates a matrix and translates it by 100 in both axes.  </p>\n</li>\n<li><p>Applies this matrix transform to the rectangle,  </p>\n</li>\n<li><p>Draws the transformed rectangle to the screen (the red rectangle).  </p>\n<p>Notice that the beginning of the red rectangle is located 100 points in both axes from the beginning of the blue triangle.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#9\">public:\n   void TranslateExample( PaintEventArgs^ e )\n   {\n      Pen^ myPen = gcnew Pen( Color::Blue,1.0f );\n      Pen^ myPen2 = gcnew Pen( Color::Red,1.0f );\n\n      // Draw a rectangle to the screen before applying the\n      // transform.\n      e-&gt;Graphics-&gt;DrawRectangle( myPen, 20, 20, 100, 50 );\n\n      // Create a matrix and translate it.\n      Matrix^ myMatrix = gcnew Matrix;\n      myMatrix-&gt;Translate( 100, 100, MatrixOrder::Append );\n\n      // Draw the Points to the screen again after applying the\n      // transform.\n      e-&gt;Graphics-&gt;Transform = myMatrix;\n      e-&gt;Graphics-&gt;DrawRectangle( myPen2, 20, 20, 100, 50 );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#9\">    Public Sub TranslateExample(ByVal e As PaintEventArgs)\n        Dim myPen As New Pen(Color.Blue, 1)\n        Dim myPen2 As New Pen(Color.Red, 1)\n\n        &#39; Draw a rectangle to the screen before applying the\n        &#39; transform.\n        e.Graphics.DrawRectangle(myPen, 20, 20, 100, 50)\n\n        &#39; Create a matrix and translate it.\n        Dim myMatrix As New Matrix\n        myMatrix.Translate(100, 100, MatrixOrder.Append)\n\n        &#39; Draw the Points to the screen again after applying the\n        &#39; transform.\n        e.Graphics.Transform = myMatrix\n        e.Graphics.DrawRectangle(myPen2, 20, 20, 100, 50)\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Drawing.Drawing2D.ClassicMatrixExamples#9\">        public void TranslateExample(PaintEventArgs e)\n        {\n            Pen myPen = new Pen(Color.Blue, 1);\n            Pen myPen2 = new Pen(Color.Red, 1);\n                     \n            // Draw a rectangle to the screen before applying the\n            // transform.\n            e.Graphics.DrawRectangle(myPen, 20, 20, 100, 50);\n                     \n            // Create a matrix and translate it.\n            Matrix myMatrix = new Matrix();\n            myMatrix.Translate(100, 100, MatrixOrder.Append);\n                     \n            // Draw the Points to the screen again after applying the\n            // transform.\n            e.Graphics.Transform = myMatrix;\n            e.Graphics.DrawRectangle(myPen2, 20, 20, 100, 50);\n        }\n</code></pre></li>\n</ul>\n\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Drawing_Drawing2D_Matrix_VectorTransformPoints_System_Drawing_Point___\">\r\n    \r\n            <a id=\"System_Drawing_Drawing2D_Matrix_VectorTransformPoints_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VectorTransformPoints(Point[])</div>        \r\n          </div>\r\n    \r\n            <p>Multiplies each vector in an array by the matrix. The translation elements of this matrix (third row) are ignored.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void VectorTransformPoints (System.Drawing.Point[] pts);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pts</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> structures that represents the points to transform.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Drawing2D.Matrix.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Drawing2D.Matrix.yml\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix..ctor\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.Clone\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.Elements\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.Equals\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.Finalize\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.Invert\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.IsIdentity\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.IsInvertible\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.Multiply\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.OffsetX\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.OffsetY\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.Reset\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.Rotate\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.RotateAt\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.Scale\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.Shear\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.TransformPoints\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.TransformVectors\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.Translate\">\r\n<meta name=\"APIName\" content=\"System.Drawing.Drawing2D.Matrix.VectorTransformPoints\">\r\n<meta name=\"APILocation\" content=\"System.Drawing.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"d0501efc-3205-bbf8-c6bc-a5b1c1bccb2d\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Drawing.Drawing2D\\Matrix.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Encapsulates a 3-by-3 affine matrix that represents a geometric transform. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Drawing.Drawing2D/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Drawing.Drawing2D.Matrix\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Drawing.Drawing2D.Matrix.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Drawing.Drawing2D.Matrix.yml","open_to_public_contributors":true,"api_name":["System.Drawing.Drawing2D.Matrix","System.Drawing.Drawing2D.Matrix..ctor","System.Drawing.Drawing2D.Matrix.Clone","System.Drawing.Drawing2D.Matrix.Dispose","System.Drawing.Drawing2D.Matrix.Elements","System.Drawing.Drawing2D.Matrix.Equals","System.Drawing.Drawing2D.Matrix.Finalize","System.Drawing.Drawing2D.Matrix.GetHashCode","System.Drawing.Drawing2D.Matrix.Invert","System.Drawing.Drawing2D.Matrix.IsIdentity","System.Drawing.Drawing2D.Matrix.IsInvertible","System.Drawing.Drawing2D.Matrix.Multiply","System.Drawing.Drawing2D.Matrix.OffsetX","System.Drawing.Drawing2D.Matrix.OffsetY","System.Drawing.Drawing2D.Matrix.Reset","System.Drawing.Drawing2D.Matrix.Rotate","System.Drawing.Drawing2D.Matrix.RotateAt","System.Drawing.Drawing2D.Matrix.Scale","System.Drawing.Drawing2D.Matrix.Shear","System.Drawing.Drawing2D.Matrix.TransformPoints","System.Drawing.Drawing2D.Matrix.TransformVectors","System.Drawing.Drawing2D.Matrix.Translate","System.Drawing.Drawing2D.Matrix.VectorTransformPoints"],"api_location":["System.Drawing.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Drawing.Drawing2D.Matrix","System::Drawing::Drawing2D::Matrix","System.Drawing.Drawing2D.Matrix.#ctor","System::Drawing::Drawing2D::Matrix::#ctor","System.Drawing.Drawing2D.Matrix.Clone","System::Drawing::Drawing2D::Matrix::Clone","System.Drawing.Drawing2D.Matrix.Dispose","System::Drawing::Drawing2D::Matrix::Dispose","System.Drawing.Drawing2D.Matrix.Elements","System::Drawing::Drawing2D::Matrix::Elements","System.Drawing.Drawing2D.Matrix.Equals","System::Drawing::Drawing2D::Matrix::Equals","System.Drawing.Drawing2D.Matrix.Finalize","System::Drawing::Drawing2D::Matrix::Finalize","System.Drawing.Drawing2D.Matrix.GetHashCode","System::Drawing::Drawing2D::Matrix::GetHashCode","System.Drawing.Drawing2D.Matrix.Invert","System::Drawing::Drawing2D::Matrix::Invert","System.Drawing.Drawing2D.Matrix.IsIdentity","System::Drawing::Drawing2D::Matrix::IsIdentity","System.Drawing.Drawing2D.Matrix.IsInvertible","System::Drawing::Drawing2D::Matrix::IsInvertible","System.Drawing.Drawing2D.Matrix.Multiply","System::Drawing::Drawing2D::Matrix::Multiply","System.Drawing.Drawing2D.Matrix.OffsetX","System::Drawing::Drawing2D::Matrix::OffsetX","System.Drawing.Drawing2D.Matrix.OffsetY","System::Drawing::Drawing2D::Matrix::OffsetY","System.Drawing.Drawing2D.Matrix.Reset","System::Drawing::Drawing2D::Matrix::Reset","System.Drawing.Drawing2D.Matrix.Rotate","System::Drawing::Drawing2D::Matrix::Rotate","System.Drawing.Drawing2D.Matrix.RotateAt","System::Drawing::Drawing2D::Matrix::RotateAt","System.Drawing.Drawing2D.Matrix.Scale","System::Drawing::Drawing2D::Matrix::Scale","System.Drawing.Drawing2D.Matrix.Shear","System::Drawing::Drawing2D::Matrix::Shear","System.Drawing.Drawing2D.Matrix.TransformPoints","System::Drawing::Drawing2D::Matrix::TransformPoints","System.Drawing.Drawing2D.Matrix.TransformVectors","System::Drawing::Drawing2D::Matrix::TransformVectors","System.Drawing.Drawing2D.Matrix.Translate","System::Drawing::Drawing2D::Matrix::Translate","System.Drawing.Drawing2D.Matrix.VectorTransformPoints","System::Drawing::Drawing2D::Matrix::VectorTransformPoints"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"d0501efc-3205-bbf8-c6bc-a5b1c1bccb2d","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Drawing.Drawing2D\\Matrix.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Drawing.Drawing2D/Matrix.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Matrix class | Microsoft Docs","_op_ogTitle":"Matrix class","description":"Encapsulates a 3-by-3 affine matrix that represents a geometric transform. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Drawing.Drawing2D/toc.json","toc_rel":"_splitted/System.Drawing.Drawing2D/toc.json","source_url":"","ms.assetid":"System.Drawing.Drawing2D.Matrix","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.drawing2d.matrix","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.drawing.drawing2d.matrix","fileRelativePath":"System.Drawing.Drawing2D.Matrix.html"},"themesRelativePathToOutputRoot":"_themes/"}