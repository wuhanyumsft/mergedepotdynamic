{"content":"    \r\n    <h1 id=\"System_IO_Log_LogPolicy\">\r\n      <span class=\"lang-csharp\">LogPolicy</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents the policy associated with a <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a>.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class LogPolicy</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">LogPolicy</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A policy is a set of rules to be followed by a <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> instance and its clients. A LogPolicy instance is used to examine and modify the policy associated with a specific <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a>. A policy can describe the minimum and maximum allowable log sizes, or how the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> instance is allowed to grow. In addition, you can also control whether a <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> instance can be archived.  </p>\n<p> After changing any of the properties, you should use the <a class=\"xref\" href=\"system.io.log.logpolicy#System_IO_Log_LogPolicy_Commit_\" data-linktype=\"relative-path\">Commit</a> method to ensure that the changes are applied to the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a>. You can call the <a class=\"xref\" href=\"system.io.log.logpolicy#System_IO_Log_LogPolicy_Refresh_\" data-linktype=\"relative-path\">Refresh</a> method to discard changes or to get the most current policy.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Log_LogPolicy_AutoGrow\" data-linktype=\"self-bookmark\">AutoGrow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> can grow automatically.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Log_LogPolicy_AutoShrinkPercentage\" data-linktype=\"self-bookmark\">AutoShrinkPercentage</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the percentage of free space the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> can shrink.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Log_LogPolicy_GrowthRate\" data-linktype=\"self-bookmark\">GrowthRate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the rate of automatic growth of the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Log_LogPolicy_MaximumExtentCount\" data-linktype=\"self-bookmark\">MaximumExtentCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the maximum number of <a class=\"xref\" href=\"system.io.log.logextent\" data-linktype=\"relative-path\">LogExtent</a> instances the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> can contain.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Log_LogPolicy_MinimumExtentCount\" data-linktype=\"self-bookmark\">MinimumExtentCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the minimum number of <a class=\"xref\" href=\"system.io.log.logextent\" data-linktype=\"relative-path\">LogExtent</a> instances the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> can contain.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Log_LogPolicy_NewExtentPrefix\" data-linktype=\"self-bookmark\">NewExtentPrefix</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the prefix string for automatically created extents.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Log_LogPolicy_NextExtentSuffix\" data-linktype=\"self-bookmark\">NextExtentSuffix</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the suffix number for new extents.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Log_LogPolicy_PinnedTailThreshold\" data-linktype=\"self-bookmark\">PinnedTailThreshold</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the amount of space that the <a class=\"xref\" href=\"system.io.log.logrecordsequence#System_IO_Log_LogRecordSequence_TailPinned\" data-linktype=\"relative-path\">TailPinned</a> event requires for advancing the base of the log.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Log_LogPolicy_Commit\" data-linktype=\"self-bookmark\">Commit()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets this policy as the current policy for the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IO_Log_LogPolicy_Refresh\" data-linktype=\"self-bookmark\">Refresh()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads the current policy for the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a>, discarding any changes that may have been made.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Log_LogPolicy_AutoGrow\">\r\n    \r\n            <a id=\"System_IO_Log_LogPolicy_AutoGrow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoGrow</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> can grow automatically.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AutoGrow { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> can grow its size automatically; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how to use the <a class=\"xref\" href=\"system.io.log.logpolicy\" data-linktype=\"relative-path\">LogPolicy</a> class to set policy for a log record sequence.  </p>\n<pre><code class=\"lang-cs\" name=\"S_UELogRecordSequence#2\">            // SET LOG POLICY\n\n            LogPolicy policy = sequence.LogStore.Policy;\n\n            // Set AutoGrow policy. This enables the log to automatically grow\n            // when the existing extents are full. New extents are added until\n            // we reach the MaximumExtentCount extents.\n            // AutoGrow policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoGrow = true;\n\n            // Set the Growth Rate in terms of extents. This policy specifies\n            // &quot;how much&quot; the log should grow. \n            policy.GrowthRate = new PolicyUnit(2, PolicyUnitType.Extents);\n\n            // Set the AutoShrink policy. This enables the log to automatically\n            // shrink if the available free space exceeds the shrink percentage. \n            // AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n            // Set the PinnedTailThreshold policy.\n            // A tail pinned event is triggered when there is no\n            // log space available and log space may be freed by advancing the base.\n            // The user must handle the tail pinned event by advancing the base of the log. \n            // If the user is not able to move the base of the log, the user should report with exception in\n            // the tail pinned handler.\n            // PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n            // for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n            // which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n            \n            policy.PinnedTailThreshold = new PolicyUnit(10, PolicyUnitType.Percentage);\n\n            // Set the maximum extents the log can have.\n            policy.MaximumExtentCount = 6;\n            \n            // Set the minimum extents the log can have.\n            policy.MinimumExtentCount = 2;\n            \n            // Set the prefix for new containers that are added. \n            // when AutoGrow is enabled.\n            //policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n            \n            // Set the suffix number for new containers that are added.\n            // when AutoGrow is enabled. \n            policy.NextExtentSuffix = 3;\n\n            // Commit the log policy.\n            policy.Commit();\n\n            // Refresh updates the IO.Log policy properties with current log policy \n            // set in the log. \n            policy.Refresh();\n\n            // LOG POLICY END\n            // \n</code></pre><pre><code class=\"lang-vb\" name=\"S_UELogRecordSequence#2\">\t\t\t&#39; SET LOG POLICY\n\n\t\t\tDim policy As LogPolicy = sequence.LogStore.Policy\n\n\t\t\t&#39; Set AutoGrow policy. This enables the log to automatically grow\n\t\t\t&#39; when the existing extents are full. New extents are added until\n\t\t\t&#39; we reach the MaximumExtentCount extents.\n\t\t\t&#39; AutoGrow policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoGrow = true;\n\n\t\t\t&#39; Set the Growth Rate in terms of extents. This policy specifies\n\t\t\t&#39; &quot;how much&quot; the log should grow. \n\t\t\tpolicy.GrowthRate = New PolicyUnit(2, PolicyUnitType.Extents)\n\n\t\t\t&#39; Set the AutoShrink policy. This enables the log to automatically\n\t\t\t&#39; shrink if the available free space exceeds the shrink percentage. \n\t\t\t&#39; AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n\t\t\t&#39; Set the PinnedTailThreshold policy.\n\t\t\t&#39; A tail pinned event is triggered when there is no\n\t\t\t&#39; log space available and log space may be freed by advancing the base.\n\t\t\t&#39; The user must handle the tail pinned event by advancing the base of the log. \n\t\t\t&#39; If the user is not able to move the base of the log, the user should report with exception in\n\t\t\t&#39; the tail pinned handler.\n\t\t\t&#39; PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n\t\t\t&#39; for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n\t\t\t&#39; which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n\n\t\t\tpolicy.PinnedTailThreshold = New PolicyUnit(10, PolicyUnitType.Percentage)\n\n\t\t\t&#39; Set the maximum extents the log can have.\n\t\t\tpolicy.MaximumExtentCount = 6\n\n\t\t\t&#39; Set the minimum extents the log can have.\n\t\t\tpolicy.MinimumExtentCount = 2\n\n\t\t\t&#39; Set the prefix for new containers that are added. \n\t\t\t&#39; when AutoGrow is enabled.\n\t\t\t&#39;policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n\n\t\t\t&#39; Set the suffix number for new containers that are added.\n\t\t\t&#39; when AutoGrow is enabled. \n\t\t\tpolicy.NextExtentSuffix = 3\n\n\t\t\t&#39; Commit the log policy.\n\t\t\tpolicy.Commit()\n\n\t\t\t&#39; Refresh updates the IO.Log policy properties with current log policy \n\t\t\t&#39; set in the log. \n\t\t\tpolicy.Refresh()\n\n\t\t\t&#39; LOG POLICY END\n\t\t\t&#39; \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Log_LogPolicy_AutoShrinkPercentage\">\r\n    \r\n            <a id=\"System_IO_Log_LogPolicy_AutoShrinkPercentage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoShrinkPercentage</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the percentage of free space the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> can shrink.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int AutoShrinkPercentage { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The percentage of free space the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> can shrink.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the amount of free space in the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> is greater than the amount specified by this property, the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> automatically reduces its size until it reaches the size specified by the <a class=\"xref\" href=\"system.io.log.logpolicy#System_IO_Log_LogPolicy_MinimumExtentCount_\" data-linktype=\"relative-path\">MinimumExtentCount</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how to use the <a class=\"xref\" href=\"system.io.log.logpolicy\" data-linktype=\"relative-path\">LogPolicy</a> class to set policy for a log record sequence.  </p>\n<pre><code class=\"lang-cs\" name=\"S_UELogRecordSequence#2\">            // SET LOG POLICY\n\n            LogPolicy policy = sequence.LogStore.Policy;\n\n            // Set AutoGrow policy. This enables the log to automatically grow\n            // when the existing extents are full. New extents are added until\n            // we reach the MaximumExtentCount extents.\n            // AutoGrow policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoGrow = true;\n\n            // Set the Growth Rate in terms of extents. This policy specifies\n            // &quot;how much&quot; the log should grow. \n            policy.GrowthRate = new PolicyUnit(2, PolicyUnitType.Extents);\n\n            // Set the AutoShrink policy. This enables the log to automatically\n            // shrink if the available free space exceeds the shrink percentage. \n            // AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n            // Set the PinnedTailThreshold policy.\n            // A tail pinned event is triggered when there is no\n            // log space available and log space may be freed by advancing the base.\n            // The user must handle the tail pinned event by advancing the base of the log. \n            // If the user is not able to move the base of the log, the user should report with exception in\n            // the tail pinned handler.\n            // PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n            // for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n            // which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n            \n            policy.PinnedTailThreshold = new PolicyUnit(10, PolicyUnitType.Percentage);\n\n            // Set the maximum extents the log can have.\n            policy.MaximumExtentCount = 6;\n            \n            // Set the minimum extents the log can have.\n            policy.MinimumExtentCount = 2;\n            \n            // Set the prefix for new containers that are added. \n            // when AutoGrow is enabled.\n            //policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n            \n            // Set the suffix number for new containers that are added.\n            // when AutoGrow is enabled. \n            policy.NextExtentSuffix = 3;\n\n            // Commit the log policy.\n            policy.Commit();\n\n            // Refresh updates the IO.Log policy properties with current log policy \n            // set in the log. \n            policy.Refresh();\n\n            // LOG POLICY END\n            // \n</code></pre><pre><code class=\"lang-vb\" name=\"S_UELogRecordSequence#2\">\t\t\t&#39; SET LOG POLICY\n\n\t\t\tDim policy As LogPolicy = sequence.LogStore.Policy\n\n\t\t\t&#39; Set AutoGrow policy. This enables the log to automatically grow\n\t\t\t&#39; when the existing extents are full. New extents are added until\n\t\t\t&#39; we reach the MaximumExtentCount extents.\n\t\t\t&#39; AutoGrow policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoGrow = true;\n\n\t\t\t&#39; Set the Growth Rate in terms of extents. This policy specifies\n\t\t\t&#39; &quot;how much&quot; the log should grow. \n\t\t\tpolicy.GrowthRate = New PolicyUnit(2, PolicyUnitType.Extents)\n\n\t\t\t&#39; Set the AutoShrink policy. This enables the log to automatically\n\t\t\t&#39; shrink if the available free space exceeds the shrink percentage. \n\t\t\t&#39; AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n\t\t\t&#39; Set the PinnedTailThreshold policy.\n\t\t\t&#39; A tail pinned event is triggered when there is no\n\t\t\t&#39; log space available and log space may be freed by advancing the base.\n\t\t\t&#39; The user must handle the tail pinned event by advancing the base of the log. \n\t\t\t&#39; If the user is not able to move the base of the log, the user should report with exception in\n\t\t\t&#39; the tail pinned handler.\n\t\t\t&#39; PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n\t\t\t&#39; for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n\t\t\t&#39; which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n\n\t\t\tpolicy.PinnedTailThreshold = New PolicyUnit(10, PolicyUnitType.Percentage)\n\n\t\t\t&#39; Set the maximum extents the log can have.\n\t\t\tpolicy.MaximumExtentCount = 6\n\n\t\t\t&#39; Set the minimum extents the log can have.\n\t\t\tpolicy.MinimumExtentCount = 2\n\n\t\t\t&#39; Set the prefix for new containers that are added. \n\t\t\t&#39; when AutoGrow is enabled.\n\t\t\t&#39;policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n\n\t\t\t&#39; Set the suffix number for new containers that are added.\n\t\t\t&#39; when AutoGrow is enabled. \n\t\t\tpolicy.NextExtentSuffix = 3\n\n\t\t\t&#39; Commit the log policy.\n\t\t\tpolicy.Commit()\n\n\t\t\t&#39; Refresh updates the IO.Log policy properties with current log policy \n\t\t\t&#39; set in the log. \n\t\t\tpolicy.Refresh()\n\n\t\t\t&#39; LOG POLICY END\n\t\t\t&#39; \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Log_LogPolicy_GrowthRate\">\r\n    \r\n            <a id=\"System_IO_Log_LogPolicy_GrowthRate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GrowthRate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the rate of automatic growth of the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Log.PolicyUnit GrowthRate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.log.policyunit\" data-linktype=\"relative-path\">PolicyUnit</a></div>\r\n                  </div>\r\n                  <p>The rate of automatic growth of the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> becomes full, this policy value determines how much more space can be added. Space will not be added if it causes the number of extents in the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> to exceed <a class=\"xref\" href=\"system.io.log.logpolicy#System_IO_Log_LogPolicy_MaximumExtentCount_\" data-linktype=\"relative-path\">MaximumExtentCount</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how to use the <a class=\"xref\" href=\"system.io.log.logpolicy\" data-linktype=\"relative-path\">LogPolicy</a> class to set policy for a log record sequence.  </p>\n<pre><code class=\"lang-cs\" name=\"S_UELogRecordSequence#2\">            // SET LOG POLICY\n\n            LogPolicy policy = sequence.LogStore.Policy;\n\n            // Set AutoGrow policy. This enables the log to automatically grow\n            // when the existing extents are full. New extents are added until\n            // we reach the MaximumExtentCount extents.\n            // AutoGrow policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoGrow = true;\n\n            // Set the Growth Rate in terms of extents. This policy specifies\n            // &quot;how much&quot; the log should grow. \n            policy.GrowthRate = new PolicyUnit(2, PolicyUnitType.Extents);\n\n            // Set the AutoShrink policy. This enables the log to automatically\n            // shrink if the available free space exceeds the shrink percentage. \n            // AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n            // Set the PinnedTailThreshold policy.\n            // A tail pinned event is triggered when there is no\n            // log space available and log space may be freed by advancing the base.\n            // The user must handle the tail pinned event by advancing the base of the log. \n            // If the user is not able to move the base of the log, the user should report with exception in\n            // the tail pinned handler.\n            // PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n            // for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n            // which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n            \n            policy.PinnedTailThreshold = new PolicyUnit(10, PolicyUnitType.Percentage);\n\n            // Set the maximum extents the log can have.\n            policy.MaximumExtentCount = 6;\n            \n            // Set the minimum extents the log can have.\n            policy.MinimumExtentCount = 2;\n            \n            // Set the prefix for new containers that are added. \n            // when AutoGrow is enabled.\n            //policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n            \n            // Set the suffix number for new containers that are added.\n            // when AutoGrow is enabled. \n            policy.NextExtentSuffix = 3;\n\n            // Commit the log policy.\n            policy.Commit();\n\n            // Refresh updates the IO.Log policy properties with current log policy \n            // set in the log. \n            policy.Refresh();\n\n            // LOG POLICY END\n            // \n</code></pre><pre><code class=\"lang-vb\" name=\"S_UELogRecordSequence#2\">\t\t\t&#39; SET LOG POLICY\n\n\t\t\tDim policy As LogPolicy = sequence.LogStore.Policy\n\n\t\t\t&#39; Set AutoGrow policy. This enables the log to automatically grow\n\t\t\t&#39; when the existing extents are full. New extents are added until\n\t\t\t&#39; we reach the MaximumExtentCount extents.\n\t\t\t&#39; AutoGrow policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoGrow = true;\n\n\t\t\t&#39; Set the Growth Rate in terms of extents. This policy specifies\n\t\t\t&#39; &quot;how much&quot; the log should grow. \n\t\t\tpolicy.GrowthRate = New PolicyUnit(2, PolicyUnitType.Extents)\n\n\t\t\t&#39; Set the AutoShrink policy. This enables the log to automatically\n\t\t\t&#39; shrink if the available free space exceeds the shrink percentage. \n\t\t\t&#39; AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n\t\t\t&#39; Set the PinnedTailThreshold policy.\n\t\t\t&#39; A tail pinned event is triggered when there is no\n\t\t\t&#39; log space available and log space may be freed by advancing the base.\n\t\t\t&#39; The user must handle the tail pinned event by advancing the base of the log. \n\t\t\t&#39; If the user is not able to move the base of the log, the user should report with exception in\n\t\t\t&#39; the tail pinned handler.\n\t\t\t&#39; PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n\t\t\t&#39; for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n\t\t\t&#39; which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n\n\t\t\tpolicy.PinnedTailThreshold = New PolicyUnit(10, PolicyUnitType.Percentage)\n\n\t\t\t&#39; Set the maximum extents the log can have.\n\t\t\tpolicy.MaximumExtentCount = 6\n\n\t\t\t&#39; Set the minimum extents the log can have.\n\t\t\tpolicy.MinimumExtentCount = 2\n\n\t\t\t&#39; Set the prefix for new containers that are added. \n\t\t\t&#39; when AutoGrow is enabled.\n\t\t\t&#39;policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n\n\t\t\t&#39; Set the suffix number for new containers that are added.\n\t\t\t&#39; when AutoGrow is enabled. \n\t\t\tpolicy.NextExtentSuffix = 3\n\n\t\t\t&#39; Commit the log policy.\n\t\t\tpolicy.Commit()\n\n\t\t\t&#39; Refresh updates the IO.Log policy properties with current log policy \n\t\t\t&#39; set in the log. \n\t\t\tpolicy.Refresh()\n\n\t\t\t&#39; LOG POLICY END\n\t\t\t&#39; \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Log_LogPolicy_MaximumExtentCount\">\r\n    \r\n            <a id=\"System_IO_Log_LogPolicy_MaximumExtentCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaximumExtentCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the maximum number of <a class=\"xref\" href=\"system.io.log.logextent\" data-linktype=\"relative-path\">LogExtent</a> instances the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> can contain.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int MaximumExtentCount { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The maximum number of <a class=\"xref\" href=\"system.io.log.logextent\" data-linktype=\"relative-path\">LogExtent</a> instances the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> can contain.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how to use the <a class=\"xref\" href=\"system.io.log.logpolicy\" data-linktype=\"relative-path\">LogPolicy</a> class to set policy for a log record sequence.  </p>\n<pre><code class=\"lang-cs\" name=\"S_UELogRecordSequence#2\">            // SET LOG POLICY\n\n            LogPolicy policy = sequence.LogStore.Policy;\n\n            // Set AutoGrow policy. This enables the log to automatically grow\n            // when the existing extents are full. New extents are added until\n            // we reach the MaximumExtentCount extents.\n            // AutoGrow policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoGrow = true;\n\n            // Set the Growth Rate in terms of extents. This policy specifies\n            // &quot;how much&quot; the log should grow. \n            policy.GrowthRate = new PolicyUnit(2, PolicyUnitType.Extents);\n\n            // Set the AutoShrink policy. This enables the log to automatically\n            // shrink if the available free space exceeds the shrink percentage. \n            // AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n            // Set the PinnedTailThreshold policy.\n            // A tail pinned event is triggered when there is no\n            // log space available and log space may be freed by advancing the base.\n            // The user must handle the tail pinned event by advancing the base of the log. \n            // If the user is not able to move the base of the log, the user should report with exception in\n            // the tail pinned handler.\n            // PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n            // for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n            // which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n            \n            policy.PinnedTailThreshold = new PolicyUnit(10, PolicyUnitType.Percentage);\n\n            // Set the maximum extents the log can have.\n            policy.MaximumExtentCount = 6;\n            \n            // Set the minimum extents the log can have.\n            policy.MinimumExtentCount = 2;\n            \n            // Set the prefix for new containers that are added. \n            // when AutoGrow is enabled.\n            //policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n            \n            // Set the suffix number for new containers that are added.\n            // when AutoGrow is enabled. \n            policy.NextExtentSuffix = 3;\n\n            // Commit the log policy.\n            policy.Commit();\n\n            // Refresh updates the IO.Log policy properties with current log policy \n            // set in the log. \n            policy.Refresh();\n\n            // LOG POLICY END\n            // \n</code></pre><pre><code class=\"lang-vb\" name=\"S_UELogRecordSequence#2\">\t\t\t&#39; SET LOG POLICY\n\n\t\t\tDim policy As LogPolicy = sequence.LogStore.Policy\n\n\t\t\t&#39; Set AutoGrow policy. This enables the log to automatically grow\n\t\t\t&#39; when the existing extents are full. New extents are added until\n\t\t\t&#39; we reach the MaximumExtentCount extents.\n\t\t\t&#39; AutoGrow policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoGrow = true;\n\n\t\t\t&#39; Set the Growth Rate in terms of extents. This policy specifies\n\t\t\t&#39; &quot;how much&quot; the log should grow. \n\t\t\tpolicy.GrowthRate = New PolicyUnit(2, PolicyUnitType.Extents)\n\n\t\t\t&#39; Set the AutoShrink policy. This enables the log to automatically\n\t\t\t&#39; shrink if the available free space exceeds the shrink percentage. \n\t\t\t&#39; AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n\t\t\t&#39; Set the PinnedTailThreshold policy.\n\t\t\t&#39; A tail pinned event is triggered when there is no\n\t\t\t&#39; log space available and log space may be freed by advancing the base.\n\t\t\t&#39; The user must handle the tail pinned event by advancing the base of the log. \n\t\t\t&#39; If the user is not able to move the base of the log, the user should report with exception in\n\t\t\t&#39; the tail pinned handler.\n\t\t\t&#39; PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n\t\t\t&#39; for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n\t\t\t&#39; which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n\n\t\t\tpolicy.PinnedTailThreshold = New PolicyUnit(10, PolicyUnitType.Percentage)\n\n\t\t\t&#39; Set the maximum extents the log can have.\n\t\t\tpolicy.MaximumExtentCount = 6\n\n\t\t\t&#39; Set the minimum extents the log can have.\n\t\t\tpolicy.MinimumExtentCount = 2\n\n\t\t\t&#39; Set the prefix for new containers that are added. \n\t\t\t&#39; when AutoGrow is enabled.\n\t\t\t&#39;policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n\n\t\t\t&#39; Set the suffix number for new containers that are added.\n\t\t\t&#39; when AutoGrow is enabled. \n\t\t\tpolicy.NextExtentSuffix = 3\n\n\t\t\t&#39; Commit the log policy.\n\t\t\tpolicy.Commit()\n\n\t\t\t&#39; Refresh updates the IO.Log policy properties with current log policy \n\t\t\t&#39; set in the log. \n\t\t\tpolicy.Refresh()\n\n\t\t\t&#39; LOG POLICY END\n\t\t\t&#39; \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Log_LogPolicy_MinimumExtentCount\">\r\n    \r\n            <a id=\"System_IO_Log_LogPolicy_MinimumExtentCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MinimumExtentCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the minimum number of <a class=\"xref\" href=\"system.io.log.logextent\" data-linktype=\"relative-path\">LogExtent</a> instances the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> can contain.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int MinimumExtentCount { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An integer that specifies the minimum number of <a class=\"xref\" href=\"system.io.log.logextent\" data-linktype=\"relative-path\">LogExtent</a> instances the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> can contain. Since the CLFS requires that the minimum extent count to be 2 extents, this value should be at least 2.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how to use the <a class=\"xref\" href=\"system.io.log.logpolicy\" data-linktype=\"relative-path\">LogPolicy</a> class to set policy for a log record sequence.  </p>\n<pre><code class=\"lang-cs\" name=\"S_UELogRecordSequence#2\">            // SET LOG POLICY\n\n            LogPolicy policy = sequence.LogStore.Policy;\n\n            // Set AutoGrow policy. This enables the log to automatically grow\n            // when the existing extents are full. New extents are added until\n            // we reach the MaximumExtentCount extents.\n            // AutoGrow policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoGrow = true;\n\n            // Set the Growth Rate in terms of extents. This policy specifies\n            // &quot;how much&quot; the log should grow. \n            policy.GrowthRate = new PolicyUnit(2, PolicyUnitType.Extents);\n\n            // Set the AutoShrink policy. This enables the log to automatically\n            // shrink if the available free space exceeds the shrink percentage. \n            // AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n            // Set the PinnedTailThreshold policy.\n            // A tail pinned event is triggered when there is no\n            // log space available and log space may be freed by advancing the base.\n            // The user must handle the tail pinned event by advancing the base of the log. \n            // If the user is not able to move the base of the log, the user should report with exception in\n            // the tail pinned handler.\n            // PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n            // for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n            // which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n            \n            policy.PinnedTailThreshold = new PolicyUnit(10, PolicyUnitType.Percentage);\n\n            // Set the maximum extents the log can have.\n            policy.MaximumExtentCount = 6;\n            \n            // Set the minimum extents the log can have.\n            policy.MinimumExtentCount = 2;\n            \n            // Set the prefix for new containers that are added. \n            // when AutoGrow is enabled.\n            //policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n            \n            // Set the suffix number for new containers that are added.\n            // when AutoGrow is enabled. \n            policy.NextExtentSuffix = 3;\n\n            // Commit the log policy.\n            policy.Commit();\n\n            // Refresh updates the IO.Log policy properties with current log policy \n            // set in the log. \n            policy.Refresh();\n\n            // LOG POLICY END\n            // \n</code></pre><pre><code class=\"lang-vb\" name=\"S_UELogRecordSequence#2\">\t\t\t&#39; SET LOG POLICY\n\n\t\t\tDim policy As LogPolicy = sequence.LogStore.Policy\n\n\t\t\t&#39; Set AutoGrow policy. This enables the log to automatically grow\n\t\t\t&#39; when the existing extents are full. New extents are added until\n\t\t\t&#39; we reach the MaximumExtentCount extents.\n\t\t\t&#39; AutoGrow policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoGrow = true;\n\n\t\t\t&#39; Set the Growth Rate in terms of extents. This policy specifies\n\t\t\t&#39; &quot;how much&quot; the log should grow. \n\t\t\tpolicy.GrowthRate = New PolicyUnit(2, PolicyUnitType.Extents)\n\n\t\t\t&#39; Set the AutoShrink policy. This enables the log to automatically\n\t\t\t&#39; shrink if the available free space exceeds the shrink percentage. \n\t\t\t&#39; AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n\t\t\t&#39; Set the PinnedTailThreshold policy.\n\t\t\t&#39; A tail pinned event is triggered when there is no\n\t\t\t&#39; log space available and log space may be freed by advancing the base.\n\t\t\t&#39; The user must handle the tail pinned event by advancing the base of the log. \n\t\t\t&#39; If the user is not able to move the base of the log, the user should report with exception in\n\t\t\t&#39; the tail pinned handler.\n\t\t\t&#39; PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n\t\t\t&#39; for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n\t\t\t&#39; which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n\n\t\t\tpolicy.PinnedTailThreshold = New PolicyUnit(10, PolicyUnitType.Percentage)\n\n\t\t\t&#39; Set the maximum extents the log can have.\n\t\t\tpolicy.MaximumExtentCount = 6\n\n\t\t\t&#39; Set the minimum extents the log can have.\n\t\t\tpolicy.MinimumExtentCount = 2\n\n\t\t\t&#39; Set the prefix for new containers that are added. \n\t\t\t&#39; when AutoGrow is enabled.\n\t\t\t&#39;policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n\n\t\t\t&#39; Set the suffix number for new containers that are added.\n\t\t\t&#39; when AutoGrow is enabled. \n\t\t\tpolicy.NextExtentSuffix = 3\n\n\t\t\t&#39; Commit the log policy.\n\t\t\tpolicy.Commit()\n\n\t\t\t&#39; Refresh updates the IO.Log policy properties with current log policy \n\t\t\t&#39; set in the log. \n\t\t\tpolicy.Refresh()\n\n\t\t\t&#39; LOG POLICY END\n\t\t\t&#39; \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Log_LogPolicy_NewExtentPrefix\">\r\n    \r\n            <a id=\"System_IO_Log_LogPolicy_NewExtentPrefix_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NewExtentPrefix</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the prefix string for automatically created extents.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string NewExtentPrefix { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The prefix string for automatically created extents.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This string can contain a full path to the directory where the new extent is created. The default path to the extent is the directory that contains the base <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a> file.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how to use the <a class=\"xref\" href=\"system.io.log.logpolicy\" data-linktype=\"relative-path\">LogPolicy</a> class to set policy for a log record sequence.  </p>\n<pre><code class=\"lang-cs\" name=\"S_UELogRecordSequence#2\">            // SET LOG POLICY\n\n            LogPolicy policy = sequence.LogStore.Policy;\n\n            // Set AutoGrow policy. This enables the log to automatically grow\n            // when the existing extents are full. New extents are added until\n            // we reach the MaximumExtentCount extents.\n            // AutoGrow policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoGrow = true;\n\n            // Set the Growth Rate in terms of extents. This policy specifies\n            // &quot;how much&quot; the log should grow. \n            policy.GrowthRate = new PolicyUnit(2, PolicyUnitType.Extents);\n\n            // Set the AutoShrink policy. This enables the log to automatically\n            // shrink if the available free space exceeds the shrink percentage. \n            // AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n            // Set the PinnedTailThreshold policy.\n            // A tail pinned event is triggered when there is no\n            // log space available and log space may be freed by advancing the base.\n            // The user must handle the tail pinned event by advancing the base of the log. \n            // If the user is not able to move the base of the log, the user should report with exception in\n            // the tail pinned handler.\n            // PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n            // for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n            // which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n            \n            policy.PinnedTailThreshold = new PolicyUnit(10, PolicyUnitType.Percentage);\n\n            // Set the maximum extents the log can have.\n            policy.MaximumExtentCount = 6;\n            \n            // Set the minimum extents the log can have.\n            policy.MinimumExtentCount = 2;\n            \n            // Set the prefix for new containers that are added. \n            // when AutoGrow is enabled.\n            //policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n            \n            // Set the suffix number for new containers that are added.\n            // when AutoGrow is enabled. \n            policy.NextExtentSuffix = 3;\n\n            // Commit the log policy.\n            policy.Commit();\n\n            // Refresh updates the IO.Log policy properties with current log policy \n            // set in the log. \n            policy.Refresh();\n\n            // LOG POLICY END\n            // \n</code></pre><pre><code class=\"lang-vb\" name=\"S_UELogRecordSequence#2\">\t\t\t&#39; SET LOG POLICY\n\n\t\t\tDim policy As LogPolicy = sequence.LogStore.Policy\n\n\t\t\t&#39; Set AutoGrow policy. This enables the log to automatically grow\n\t\t\t&#39; when the existing extents are full. New extents are added until\n\t\t\t&#39; we reach the MaximumExtentCount extents.\n\t\t\t&#39; AutoGrow policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoGrow = true;\n\n\t\t\t&#39; Set the Growth Rate in terms of extents. This policy specifies\n\t\t\t&#39; &quot;how much&quot; the log should grow. \n\t\t\tpolicy.GrowthRate = New PolicyUnit(2, PolicyUnitType.Extents)\n\n\t\t\t&#39; Set the AutoShrink policy. This enables the log to automatically\n\t\t\t&#39; shrink if the available free space exceeds the shrink percentage. \n\t\t\t&#39; AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n\t\t\t&#39; Set the PinnedTailThreshold policy.\n\t\t\t&#39; A tail pinned event is triggered when there is no\n\t\t\t&#39; log space available and log space may be freed by advancing the base.\n\t\t\t&#39; The user must handle the tail pinned event by advancing the base of the log. \n\t\t\t&#39; If the user is not able to move the base of the log, the user should report with exception in\n\t\t\t&#39; the tail pinned handler.\n\t\t\t&#39; PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n\t\t\t&#39; for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n\t\t\t&#39; which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n\n\t\t\tpolicy.PinnedTailThreshold = New PolicyUnit(10, PolicyUnitType.Percentage)\n\n\t\t\t&#39; Set the maximum extents the log can have.\n\t\t\tpolicy.MaximumExtentCount = 6\n\n\t\t\t&#39; Set the minimum extents the log can have.\n\t\t\tpolicy.MinimumExtentCount = 2\n\n\t\t\t&#39; Set the prefix for new containers that are added. \n\t\t\t&#39; when AutoGrow is enabled.\n\t\t\t&#39;policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n\n\t\t\t&#39; Set the suffix number for new containers that are added.\n\t\t\t&#39; when AutoGrow is enabled. \n\t\t\tpolicy.NextExtentSuffix = 3\n\n\t\t\t&#39; Commit the log policy.\n\t\t\tpolicy.Commit()\n\n\t\t\t&#39; Refresh updates the IO.Log policy properties with current log policy \n\t\t\t&#39; set in the log. \n\t\t\tpolicy.Refresh()\n\n\t\t\t&#39; LOG POLICY END\n\t\t\t&#39; \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Log_LogPolicy_NextExtentSuffix\">\r\n    \r\n            <a id=\"System_IO_Log_LogPolicy_NextExtentSuffix_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NextExtentSuffix</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the suffix number for new extents.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public long NextExtentSuffix { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></div>\r\n                  </div>\r\n                  <p>The suffix number for new extents.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how to use the <a class=\"xref\" href=\"system.io.log.logpolicy\" data-linktype=\"relative-path\">LogPolicy</a> class to set policy for a log record sequence.  </p>\n<pre><code class=\"lang-cs\" name=\"S_UELogRecordSequence#2\">            // SET LOG POLICY\n\n            LogPolicy policy = sequence.LogStore.Policy;\n\n            // Set AutoGrow policy. This enables the log to automatically grow\n            // when the existing extents are full. New extents are added until\n            // we reach the MaximumExtentCount extents.\n            // AutoGrow policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoGrow = true;\n\n            // Set the Growth Rate in terms of extents. This policy specifies\n            // &quot;how much&quot; the log should grow. \n            policy.GrowthRate = new PolicyUnit(2, PolicyUnitType.Extents);\n\n            // Set the AutoShrink policy. This enables the log to automatically\n            // shrink if the available free space exceeds the shrink percentage. \n            // AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n            // Set the PinnedTailThreshold policy.\n            // A tail pinned event is triggered when there is no\n            // log space available and log space may be freed by advancing the base.\n            // The user must handle the tail pinned event by advancing the base of the log. \n            // If the user is not able to move the base of the log, the user should report with exception in\n            // the tail pinned handler.\n            // PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n            // for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n            // which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n            \n            policy.PinnedTailThreshold = new PolicyUnit(10, PolicyUnitType.Percentage);\n\n            // Set the maximum extents the log can have.\n            policy.MaximumExtentCount = 6;\n            \n            // Set the minimum extents the log can have.\n            policy.MinimumExtentCount = 2;\n            \n            // Set the prefix for new containers that are added. \n            // when AutoGrow is enabled.\n            //policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n            \n            // Set the suffix number for new containers that are added.\n            // when AutoGrow is enabled. \n            policy.NextExtentSuffix = 3;\n\n            // Commit the log policy.\n            policy.Commit();\n\n            // Refresh updates the IO.Log policy properties with current log policy \n            // set in the log. \n            policy.Refresh();\n\n            // LOG POLICY END\n            // \n</code></pre><pre><code class=\"lang-vb\" name=\"S_UELogRecordSequence#2\">\t\t\t&#39; SET LOG POLICY\n\n\t\t\tDim policy As LogPolicy = sequence.LogStore.Policy\n\n\t\t\t&#39; Set AutoGrow policy. This enables the log to automatically grow\n\t\t\t&#39; when the existing extents are full. New extents are added until\n\t\t\t&#39; we reach the MaximumExtentCount extents.\n\t\t\t&#39; AutoGrow policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoGrow = true;\n\n\t\t\t&#39; Set the Growth Rate in terms of extents. This policy specifies\n\t\t\t&#39; &quot;how much&quot; the log should grow. \n\t\t\tpolicy.GrowthRate = New PolicyUnit(2, PolicyUnitType.Extents)\n\n\t\t\t&#39; Set the AutoShrink policy. This enables the log to automatically\n\t\t\t&#39; shrink if the available free space exceeds the shrink percentage. \n\t\t\t&#39; AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n\t\t\t&#39; Set the PinnedTailThreshold policy.\n\t\t\t&#39; A tail pinned event is triggered when there is no\n\t\t\t&#39; log space available and log space may be freed by advancing the base.\n\t\t\t&#39; The user must handle the tail pinned event by advancing the base of the log. \n\t\t\t&#39; If the user is not able to move the base of the log, the user should report with exception in\n\t\t\t&#39; the tail pinned handler.\n\t\t\t&#39; PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n\t\t\t&#39; for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n\t\t\t&#39; which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n\n\t\t\tpolicy.PinnedTailThreshold = New PolicyUnit(10, PolicyUnitType.Percentage)\n\n\t\t\t&#39; Set the maximum extents the log can have.\n\t\t\tpolicy.MaximumExtentCount = 6\n\n\t\t\t&#39; Set the minimum extents the log can have.\n\t\t\tpolicy.MinimumExtentCount = 2\n\n\t\t\t&#39; Set the prefix for new containers that are added. \n\t\t\t&#39; when AutoGrow is enabled.\n\t\t\t&#39;policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n\n\t\t\t&#39; Set the suffix number for new containers that are added.\n\t\t\t&#39; when AutoGrow is enabled. \n\t\t\tpolicy.NextExtentSuffix = 3\n\n\t\t\t&#39; Commit the log policy.\n\t\t\tpolicy.Commit()\n\n\t\t\t&#39; Refresh updates the IO.Log policy properties with current log policy \n\t\t\t&#39; set in the log. \n\t\t\tpolicy.Refresh()\n\n\t\t\t&#39; LOG POLICY END\n\t\t\t&#39; \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Log_LogPolicy_PinnedTailThreshold\">\r\n    \r\n            <a id=\"System_IO_Log_LogPolicy_PinnedTailThreshold_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PinnedTailThreshold</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the amount of space that the <a class=\"xref\" href=\"system.io.log.logrecordsequence#System_IO_Log_LogRecordSequence_TailPinned\" data-linktype=\"relative-path\">TailPinned</a> event requires for advancing the base of the log.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.IO.Log.PolicyUnit PinnedTailThreshold { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.log.policyunit\" data-linktype=\"relative-path\">PolicyUnit</a></div>\r\n                  </div>\r\n                  <p>The amount of space that the <a class=\"xref\" href=\"system.io.log.logrecordsequence#System_IO_Log_LogRecordSequence_TailPinned\" data-linktype=\"relative-path\">TailPinned</a> event requires for advancing the base of the log.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The amount of space can be expressed in percentage, or in bytes which is rounded off to the nearest containers in CLFS. The default is 35 percent.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how to use the <a class=\"xref\" href=\"system.io.log.logpolicy\" data-linktype=\"relative-path\">LogPolicy</a> class to set policy for a log record sequence.  </p>\n<pre><code class=\"lang-cs\" name=\"S_UELogRecordSequence#2\">            // SET LOG POLICY\n\n            LogPolicy policy = sequence.LogStore.Policy;\n\n            // Set AutoGrow policy. This enables the log to automatically grow\n            // when the existing extents are full. New extents are added until\n            // we reach the MaximumExtentCount extents.\n            // AutoGrow policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoGrow = true;\n\n            // Set the Growth Rate in terms of extents. This policy specifies\n            // &quot;how much&quot; the log should grow. \n            policy.GrowthRate = new PolicyUnit(2, PolicyUnitType.Extents);\n\n            // Set the AutoShrink policy. This enables the log to automatically\n            // shrink if the available free space exceeds the shrink percentage. \n            // AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n            // Set the PinnedTailThreshold policy.\n            // A tail pinned event is triggered when there is no\n            // log space available and log space may be freed by advancing the base.\n            // The user must handle the tail pinned event by advancing the base of the log. \n            // If the user is not able to move the base of the log, the user should report with exception in\n            // the tail pinned handler.\n            // PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n            // for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n            // which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n            \n            policy.PinnedTailThreshold = new PolicyUnit(10, PolicyUnitType.Percentage);\n\n            // Set the maximum extents the log can have.\n            policy.MaximumExtentCount = 6;\n            \n            // Set the minimum extents the log can have.\n            policy.MinimumExtentCount = 2;\n            \n            // Set the prefix for new containers that are added. \n            // when AutoGrow is enabled.\n            //policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n            \n            // Set the suffix number for new containers that are added.\n            // when AutoGrow is enabled. \n            policy.NextExtentSuffix = 3;\n\n            // Commit the log policy.\n            policy.Commit();\n\n            // Refresh updates the IO.Log policy properties with current log policy \n            // set in the log. \n            policy.Refresh();\n\n            // LOG POLICY END\n            // \n</code></pre><pre><code class=\"lang-vb\" name=\"S_UELogRecordSequence#2\">\t\t\t&#39; SET LOG POLICY\n\n\t\t\tDim policy As LogPolicy = sequence.LogStore.Policy\n\n\t\t\t&#39; Set AutoGrow policy. This enables the log to automatically grow\n\t\t\t&#39; when the existing extents are full. New extents are added until\n\t\t\t&#39; we reach the MaximumExtentCount extents.\n\t\t\t&#39; AutoGrow policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoGrow = true;\n\n\t\t\t&#39; Set the Growth Rate in terms of extents. This policy specifies\n\t\t\t&#39; &quot;how much&quot; the log should grow. \n\t\t\tpolicy.GrowthRate = New PolicyUnit(2, PolicyUnitType.Extents)\n\n\t\t\t&#39; Set the AutoShrink policy. This enables the log to automatically\n\t\t\t&#39; shrink if the available free space exceeds the shrink percentage. \n\t\t\t&#39; AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n\t\t\t&#39; Set the PinnedTailThreshold policy.\n\t\t\t&#39; A tail pinned event is triggered when there is no\n\t\t\t&#39; log space available and log space may be freed by advancing the base.\n\t\t\t&#39; The user must handle the tail pinned event by advancing the base of the log. \n\t\t\t&#39; If the user is not able to move the base of the log, the user should report with exception in\n\t\t\t&#39; the tail pinned handler.\n\t\t\t&#39; PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n\t\t\t&#39; for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n\t\t\t&#39; which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n\n\t\t\tpolicy.PinnedTailThreshold = New PolicyUnit(10, PolicyUnitType.Percentage)\n\n\t\t\t&#39; Set the maximum extents the log can have.\n\t\t\tpolicy.MaximumExtentCount = 6\n\n\t\t\t&#39; Set the minimum extents the log can have.\n\t\t\tpolicy.MinimumExtentCount = 2\n\n\t\t\t&#39; Set the prefix for new containers that are added. \n\t\t\t&#39; when AutoGrow is enabled.\n\t\t\t&#39;policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n\n\t\t\t&#39; Set the suffix number for new containers that are added.\n\t\t\t&#39; when AutoGrow is enabled. \n\t\t\tpolicy.NextExtentSuffix = 3\n\n\t\t\t&#39; Commit the log policy.\n\t\t\tpolicy.Commit()\n\n\t\t\t&#39; Refresh updates the IO.Log policy properties with current log policy \n\t\t\t&#39; set in the log. \n\t\t\tpolicy.Refresh()\n\n\t\t\t&#39; LOG POLICY END\n\t\t\t&#39; \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Log_LogPolicy_Commit\">\r\n    \r\n            <a id=\"System_IO_Log_LogPolicy_Commit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Commit()</div>        \r\n          </div>\r\n    \r\n            <p>Sets this policy as the current policy for the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Commit ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The set of policies installed on the log is invalid.  </p>\n<p> -or-  </p>\n<p> A policy of the log prevented this operation from completing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The request could not be performed because of an unexpected I/O exception.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Setting this policy is not supported on the current platform.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The method was called after the sequence has been disposed of.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.outofmemoryexception\" data-linktype=\"relative-path\">OutOfMemoryException</a></div>\r\n                  </div>\r\n                  <p>There is not enough memory to continue the execution of the program.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.pathtoolongexception\" data-linktype=\"relative-path\">PathTooLongException</a></div>\r\n                  </div>\r\n                  <p>The new extent prefix is invalid or too long. A valid prefix must be provided.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.log.sequencefullexception\" data-linktype=\"relative-path\">SequenceFullException</a></div>\r\n                  </div>\r\n                  <p>The record sequence is full.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Access for the specified log store is denied by the operating system.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You must call Commit after making any changes to ensure that the changes are recorded.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how to use the <a class=\"xref\" href=\"system.io.log.logpolicy\" data-linktype=\"relative-path\">LogPolicy</a> class to set policy for a log record sequence.  </p>\n<pre><code class=\"lang-cs\" name=\"S_UELogRecordSequence#2\">            // SET LOG POLICY\n\n            LogPolicy policy = sequence.LogStore.Policy;\n\n            // Set AutoGrow policy. This enables the log to automatically grow\n            // when the existing extents are full. New extents are added until\n            // we reach the MaximumExtentCount extents.\n            // AutoGrow policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoGrow = true;\n\n            // Set the Growth Rate in terms of extents. This policy specifies\n            // &quot;how much&quot; the log should grow. \n            policy.GrowthRate = new PolicyUnit(2, PolicyUnitType.Extents);\n\n            // Set the AutoShrink policy. This enables the log to automatically\n            // shrink if the available free space exceeds the shrink percentage. \n            // AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n            // Set the PinnedTailThreshold policy.\n            // A tail pinned event is triggered when there is no\n            // log space available and log space may be freed by advancing the base.\n            // The user must handle the tail pinned event by advancing the base of the log. \n            // If the user is not able to move the base of the log, the user should report with exception in\n            // the tail pinned handler.\n            // PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n            // for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n            // which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n            \n            policy.PinnedTailThreshold = new PolicyUnit(10, PolicyUnitType.Percentage);\n\n            // Set the maximum extents the log can have.\n            policy.MaximumExtentCount = 6;\n            \n            // Set the minimum extents the log can have.\n            policy.MinimumExtentCount = 2;\n            \n            // Set the prefix for new containers that are added. \n            // when AutoGrow is enabled.\n            //policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n            \n            // Set the suffix number for new containers that are added.\n            // when AutoGrow is enabled. \n            policy.NextExtentSuffix = 3;\n\n            // Commit the log policy.\n            policy.Commit();\n\n            // Refresh updates the IO.Log policy properties with current log policy \n            // set in the log. \n            policy.Refresh();\n\n            // LOG POLICY END\n            // \n</code></pre><pre><code class=\"lang-vb\" name=\"S_UELogRecordSequence#2\">\t\t\t&#39; SET LOG POLICY\n\n\t\t\tDim policy As LogPolicy = sequence.LogStore.Policy\n\n\t\t\t&#39; Set AutoGrow policy. This enables the log to automatically grow\n\t\t\t&#39; when the existing extents are full. New extents are added until\n\t\t\t&#39; we reach the MaximumExtentCount extents.\n\t\t\t&#39; AutoGrow policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoGrow = true;\n\n\t\t\t&#39; Set the Growth Rate in terms of extents. This policy specifies\n\t\t\t&#39; &quot;how much&quot; the log should grow. \n\t\t\tpolicy.GrowthRate = New PolicyUnit(2, PolicyUnitType.Extents)\n\n\t\t\t&#39; Set the AutoShrink policy. This enables the log to automatically\n\t\t\t&#39; shrink if the available free space exceeds the shrink percentage. \n\t\t\t&#39; AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n\t\t\t&#39; Set the PinnedTailThreshold policy.\n\t\t\t&#39; A tail pinned event is triggered when there is no\n\t\t\t&#39; log space available and log space may be freed by advancing the base.\n\t\t\t&#39; The user must handle the tail pinned event by advancing the base of the log. \n\t\t\t&#39; If the user is not able to move the base of the log, the user should report with exception in\n\t\t\t&#39; the tail pinned handler.\n\t\t\t&#39; PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n\t\t\t&#39; for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n\t\t\t&#39; which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n\n\t\t\tpolicy.PinnedTailThreshold = New PolicyUnit(10, PolicyUnitType.Percentage)\n\n\t\t\t&#39; Set the maximum extents the log can have.\n\t\t\tpolicy.MaximumExtentCount = 6\n\n\t\t\t&#39; Set the minimum extents the log can have.\n\t\t\tpolicy.MinimumExtentCount = 2\n\n\t\t\t&#39; Set the prefix for new containers that are added. \n\t\t\t&#39; when AutoGrow is enabled.\n\t\t\t&#39;policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n\n\t\t\t&#39; Set the suffix number for new containers that are added.\n\t\t\t&#39; when AutoGrow is enabled. \n\t\t\tpolicy.NextExtentSuffix = 3\n\n\t\t\t&#39; Commit the log policy.\n\t\t\tpolicy.Commit()\n\n\t\t\t&#39; Refresh updates the IO.Log policy properties with current log policy \n\t\t\t&#39; set in the log. \n\t\t\tpolicy.Refresh()\n\n\t\t\t&#39; LOG POLICY END\n\t\t\t&#39; \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IO_Log_LogPolicy_Refresh\">\r\n    \r\n            <a id=\"System_IO_Log_LogPolicy_Refresh_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Refresh()</div>        \r\n          </div>\r\n    \r\n            <p>Reads the current policy for the <a class=\"xref\" href=\"system.io.log.logstore\" data-linktype=\"relative-path\">LogStore</a>, discarding any changes that may have been made.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Refresh ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The set of policies installed on the log is invalid.  </p>\n<p> -or-  </p>\n<p> A policy of the log prevented this operation from completing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.ioexception\" data-linktype=\"relative-path\">IOException</a></div>\r\n                  </div>\r\n                  <p>The request could not be performed because of an unexpected I/O exception.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>Setting this policy is not supported on the current platform.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.objectdisposedexception\" data-linktype=\"relative-path\">ObjectDisposedException</a></div>\r\n                  </div>\r\n                  <p>The method was called after the sequence has been disposed of.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.outofmemoryexception\" data-linktype=\"relative-path\">OutOfMemoryException</a></div>\r\n                  </div>\r\n                  <p>There is not enough memory to continue the execution of the program.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.io.log.sequencefullexception\" data-linktype=\"relative-path\">SequenceFullException</a></div>\r\n                  </div>\r\n                  <p>The record sequence is full.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.unauthorizedaccessexception\" data-linktype=\"relative-path\">UnauthorizedAccessException</a></div>\r\n                  </div>\r\n                  <p>Access for the specified log store is denied by the operating system.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>This example shows how to use the <a class=\"xref\" href=\"system.io.log.logpolicy\" data-linktype=\"relative-path\">LogPolicy</a> class to set policy for a log record sequence.  </p>\n<pre><code class=\"lang-cs\" name=\"S_UELogRecordSequence#2\">            // SET LOG POLICY\n\n            LogPolicy policy = sequence.LogStore.Policy;\n\n            // Set AutoGrow policy. This enables the log to automatically grow\n            // when the existing extents are full. New extents are added until\n            // we reach the MaximumExtentCount extents.\n            // AutoGrow policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoGrow = true;\n\n            // Set the Growth Rate in terms of extents. This policy specifies\n            // &quot;how much&quot; the log should grow. \n            policy.GrowthRate = new PolicyUnit(2, PolicyUnitType.Extents);\n\n            // Set the AutoShrink policy. This enables the log to automatically\n            // shrink if the available free space exceeds the shrink percentage. \n            // AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n            \n            //policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n            // Set the PinnedTailThreshold policy.\n            // A tail pinned event is triggered when there is no\n            // log space available and log space may be freed by advancing the base.\n            // The user must handle the tail pinned event by advancing the base of the log. \n            // If the user is not able to move the base of the log, the user should report with exception in\n            // the tail pinned handler.\n            // PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n            // for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n            // which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n            \n            policy.PinnedTailThreshold = new PolicyUnit(10, PolicyUnitType.Percentage);\n\n            // Set the maximum extents the log can have.\n            policy.MaximumExtentCount = 6;\n            \n            // Set the minimum extents the log can have.\n            policy.MinimumExtentCount = 2;\n            \n            // Set the prefix for new containers that are added. \n            // when AutoGrow is enabled.\n            //policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n            \n            // Set the suffix number for new containers that are added.\n            // when AutoGrow is enabled. \n            policy.NextExtentSuffix = 3;\n\n            // Commit the log policy.\n            policy.Commit();\n\n            // Refresh updates the IO.Log policy properties with current log policy \n            // set in the log. \n            policy.Refresh();\n\n            // LOG POLICY END\n            // \n</code></pre><pre><code class=\"lang-vb\" name=\"S_UELogRecordSequence#2\">\t\t\t&#39; SET LOG POLICY\n\n\t\t\tDim policy As LogPolicy = sequence.LogStore.Policy\n\n\t\t\t&#39; Set AutoGrow policy. This enables the log to automatically grow\n\t\t\t&#39; when the existing extents are full. New extents are added until\n\t\t\t&#39; we reach the MaximumExtentCount extents.\n\t\t\t&#39; AutoGrow policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoGrow = true;\n\n\t\t\t&#39; Set the Growth Rate in terms of extents. This policy specifies\n\t\t\t&#39; &quot;how much&quot; the log should grow. \n\t\t\tpolicy.GrowthRate = New PolicyUnit(2, PolicyUnitType.Extents)\n\n\t\t\t&#39; Set the AutoShrink policy. This enables the log to automatically\n\t\t\t&#39; shrink if the available free space exceeds the shrink percentage. \n\t\t\t&#39; AutoGrow/shrink policy is supported only in Windows Vista and not available in R2.\n\n\t\t\t&#39;policy.AutoShrinkPercentage = new PolicyUnit(30, PolicyUnitType.Percentage);\n\n\t\t\t&#39; Set the PinnedTailThreshold policy.\n\t\t\t&#39; A tail pinned event is triggered when there is no\n\t\t\t&#39; log space available and log space may be freed by advancing the base.\n\t\t\t&#39; The user must handle the tail pinned event by advancing the base of the log. \n\t\t\t&#39; If the user is not able to move the base of the log, the user should report with exception in\n\t\t\t&#39; the tail pinned handler.\n\t\t\t&#39; PinnedTailThreashold policy dictates the amount of space that the TailPinned event requests \n\t\t\t&#39; for advancing the base of the log. The amount of space can be in percentage or in terms of bytes \n\t\t\t&#39; which is rounded off to the nearest containers in CLFS. The default is 35 percent.\n\n\n\t\t\tpolicy.PinnedTailThreshold = New PolicyUnit(10, PolicyUnitType.Percentage)\n\n\t\t\t&#39; Set the maximum extents the log can have.\n\t\t\tpolicy.MaximumExtentCount = 6\n\n\t\t\t&#39; Set the minimum extents the log can have.\n\t\t\tpolicy.MinimumExtentCount = 2\n\n\t\t\t&#39; Set the prefix for new containers that are added. \n\t\t\t&#39; when AutoGrow is enabled.\n\t\t\t&#39;policy.NewExtentPrefix = &quot;MyLogPrefix&quot;;\n\n\t\t\t&#39; Set the suffix number for new containers that are added.\n\t\t\t&#39; when AutoGrow is enabled. \n\t\t\tpolicy.NextExtentSuffix = 3\n\n\t\t\t&#39; Commit the log policy.\n\t\t\tpolicy.Commit()\n\n\t\t\t&#39; Refresh updates the IO.Log policy properties with current log policy \n\t\t\t&#39; set in the log. \n\t\t\tpolicy.Refresh()\n\n\t\t\t&#39; LOG POLICY END\n\t\t\t&#39; \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IO.Log.LogPolicy.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IO.Log.LogPolicy.yml\">\r\n<meta name=\"APIName\" content=\"System.IO.Log.LogPolicy\">\r\n<meta name=\"APIName\" content=\"System.IO.Log.LogPolicy.AutoGrow\">\r\n<meta name=\"APIName\" content=\"System.IO.Log.LogPolicy.AutoShrinkPercentage\">\r\n<meta name=\"APIName\" content=\"System.IO.Log.LogPolicy.Commit\">\r\n<meta name=\"APIName\" content=\"System.IO.Log.LogPolicy.GrowthRate\">\r\n<meta name=\"APIName\" content=\"System.IO.Log.LogPolicy.MaximumExtentCount\">\r\n<meta name=\"APIName\" content=\"System.IO.Log.LogPolicy.MinimumExtentCount\">\r\n<meta name=\"APIName\" content=\"System.IO.Log.LogPolicy.NewExtentPrefix\">\r\n<meta name=\"APIName\" content=\"System.IO.Log.LogPolicy.NextExtentSuffix\">\r\n<meta name=\"APIName\" content=\"System.IO.Log.LogPolicy.PinnedTailThreshold\">\r\n<meta name=\"APIName\" content=\"System.IO.Log.LogPolicy.Refresh\">\r\n<meta name=\"APILocation\" content=\"System.IO.Log.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"9cdc8b59-8faa-030f-9019-f1af8f81e4fe\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the policy associated with a .\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.IO.Log/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IO.Log.LogPolicy\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IO.Log.LogPolicy.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IO.Log.LogPolicy.yml","open_to_public_contributors":true,"api_name":["System.IO.Log.LogPolicy","System.IO.Log.LogPolicy.AutoGrow","System.IO.Log.LogPolicy.AutoShrinkPercentage","System.IO.Log.LogPolicy.Commit","System.IO.Log.LogPolicy.GrowthRate","System.IO.Log.LogPolicy.MaximumExtentCount","System.IO.Log.LogPolicy.MinimumExtentCount","System.IO.Log.LogPolicy.NewExtentPrefix","System.IO.Log.LogPolicy.NextExtentSuffix","System.IO.Log.LogPolicy.PinnedTailThreshold","System.IO.Log.LogPolicy.Refresh"],"api_location":["System.IO.Log.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IO.Log.LogPolicy","System::IO::Log::LogPolicy","System.IO.Log.LogPolicy.AutoGrow","System::IO::Log::LogPolicy::AutoGrow","System.IO.Log.LogPolicy.AutoShrinkPercentage","System::IO::Log::LogPolicy::AutoShrinkPercentage","System.IO.Log.LogPolicy.Commit","System::IO::Log::LogPolicy::Commit","System.IO.Log.LogPolicy.GrowthRate","System::IO::Log::LogPolicy::GrowthRate","System.IO.Log.LogPolicy.MaximumExtentCount","System::IO::Log::LogPolicy::MaximumExtentCount","System.IO.Log.LogPolicy.MinimumExtentCount","System::IO::Log::LogPolicy::MinimumExtentCount","System.IO.Log.LogPolicy.NewExtentPrefix","System::IO::Log::LogPolicy::NewExtentPrefix","System.IO.Log.LogPolicy.NextExtentSuffix","System::IO::Log::LogPolicy::NextExtentSuffix","System.IO.Log.LogPolicy.PinnedTailThreshold","System::IO::Log::LogPolicy::PinnedTailThreshold","System.IO.Log.LogPolicy.Refresh","System::IO::Log::LogPolicy::Refresh"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"9cdc8b59-8faa-030f-9019-f1af8f81e4fe","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.IO.Log/LogPolicy.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"LogPolicy class | Microsoft Docs","_op_ogTitle":"LogPolicy class","description":"Represents the policy associated with a .\n","toc_asset_id":"_splitted/System.IO.Log/toc.json","toc_rel":"_splitted/System.IO.Log/toc.json","source_url":"","ms.assetid":"System.IO.Log.LogPolicy","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.io.log.logpolicy","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.io.log.logpolicy","fileRelativePath":"System.IO.Log.LogPolicy.html"},"themesRelativePathToOutputRoot":"_themes/"}