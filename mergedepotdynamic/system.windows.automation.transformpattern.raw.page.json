{"content":"    \r\n    <h1 id=\"System_Windows_Automation_TransformPattern\">\r\n      <span class=\"lang-csharp\">TransformPattern</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a control that can be moved, resized, or rotated within a two-dimensional space.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class TransformPattern : System.Windows.Automation.BasePattern</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.automation.basepattern\" data-linktype=\"relative-path\">System.Windows.Automation.BasePattern</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">TransformPattern</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Support for this control pattern is not limited to objects on the desktop. This control pattern must also be supported by the children of a container object as long as the children can be moved, resized, or rotated freely within the boundaries of the container.</p>\n\r\n    \r\n    \r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TransformPattern_CanMoveProperty\" data-linktype=\"self-bookmark\">CanMoveProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TransformPattern_CanResizeProperty\" data-linktype=\"self-bookmark\">CanResizeProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TransformPattern_CanRotateProperty\" data-linktype=\"self-bookmark\">CanRotateProperty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TransformPattern_Pattern\" data-linktype=\"self-bookmark\">Pattern</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Identifies the <a class=\"xref\" href=\"system.windows.automation.transformpattern\" data-linktype=\"relative-path\">TransformPattern</a> control pattern.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TransformPattern_Cached\" data-linktype=\"self-bookmark\">Cached</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the cached UI Automation property values for this <a class=\"xref\" href=\"system.windows.automation.transformpattern\" data-linktype=\"relative-path\">TransformPattern</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TransformPattern_Current\" data-linktype=\"self-bookmark\">Current</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the current UI Automation property values for this <a class=\"xref\" href=\"system.windows.automation.transformpattern\" data-linktype=\"relative-path\">TransformPattern</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TransformPattern_Move_System_Double_System_Double_\" data-linktype=\"self-bookmark\">Move(Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Moves the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TransformPattern_Resize_System_Double_System_Double_\" data-linktype=\"self-bookmark\">Resize(Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resizes the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_TransformPattern_Rotate_System_Double_\" data-linktype=\"self-bookmark\">Rotate(Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Rotates the control.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TransformPattern_CanMoveProperty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanMoveProperty</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.Automation.AutomationProperty CanMoveProperty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <a class=\"xref\" href=\"system.windows.automation.transformpatternidentifiers\" data-linktype=\"relative-path\">TransformPatternIdentifiers</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a root element is passed to a function that returns a collection of UI Automation elements that are descendants of the root and satisfy a set of property conditions.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATransformPattern_snip#100\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Finds all automation elements that satisfy \n/// the specified condition(s).\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;rootElement&quot;&gt;\n/// The automation element from which to start searching.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// A collection of automation elements satisfying \n/// the specified condition(s).\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate AutomationElementCollection FindAutomationElement(\n    AutomationElement rootElement)\n{\n    if (rootElement == null)\n    {\n        throw new ArgumentException(&quot;Root element cannot be null.&quot;);\n    }\n\n    PropertyCondition conditionCanMove =\n        new PropertyCondition(TransformPattern.CanMoveProperty, false);\n\n    PropertyCondition conditionCanResize =\n        new PropertyCondition(TransformPattern.CanResizeProperty, true);\n\n    PropertyCondition conditionCanRotate =\n        new PropertyCondition(TransformPattern.CanRotateProperty, true);\n\n    // Use any combination of the preceding condtions to \n    // find the control(s) of interest\n    Condition condition = new AndCondition(\n        conditionCanRotate,\n        conditionCanMove,\n        conditionCanResize);\n\n    return rootElement.FindAll(TreeScope.Descendants, condition);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATransformPattern_snip#100\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Finds all automation elements that satisfy \n&#39;&#39;&#39; the specified condition(s).\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;rootElement&quot;&gt;\n&#39;&#39;&#39; The automation element from which to start searching.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; A collection of automation elements satisfying \n&#39;&#39;&#39; the specified condition(s).\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Function FindAutomationElement( _\nByVal rootElement As AutomationElement) As AutomationElementCollection\n    If rootElement Is Nothing Then\n        Throw New ArgumentException(&quot;Root element cannot be null.&quot;)\n    End If\n\n    Dim conditionCanMove As New PropertyCondition( _\n    TransformPattern.CanMoveProperty, False)\n\n    Dim conditionCanResize As New PropertyCondition( _\n    TransformPattern.CanResizeProperty, True)\n\n    Dim conditionCanRotate As New PropertyCondition( _\n    TransformPattern.CanRotateProperty, True)\n\n    &#39; Use any combination of the preceding condtions to \n    &#39; find the control(s) of interest\n    Dim condition As AndCondition = New AndCondition( _\n    conditionCanRotate, conditionCanMove, conditionCanResize)\n\n    Return rootElement.FindAll(TreeScope.Descendants, condition)\n\nEnd Function &#39;FindAutomationElement    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TransformPattern_CanResizeProperty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanResizeProperty</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.Automation.AutomationProperty CanResizeProperty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <a class=\"xref\" href=\"system.windows.automation.transformpatternidentifiers\" data-linktype=\"relative-path\">TransformPatternIdentifiers</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a root element is passed to a function that returns a collection of UI Automation elements that are descendants of the root and satisfy a set of property conditions.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATransformPattern_snip#100\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Finds all automation elements that satisfy \n/// the specified condition(s).\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;rootElement&quot;&gt;\n/// The automation element from which to start searching.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// A collection of automation elements satisfying \n/// the specified condition(s).\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate AutomationElementCollection FindAutomationElement(\n    AutomationElement rootElement)\n{\n    if (rootElement == null)\n    {\n        throw new ArgumentException(&quot;Root element cannot be null.&quot;);\n    }\n\n    PropertyCondition conditionCanMove =\n        new PropertyCondition(TransformPattern.CanMoveProperty, false);\n\n    PropertyCondition conditionCanResize =\n        new PropertyCondition(TransformPattern.CanResizeProperty, true);\n\n    PropertyCondition conditionCanRotate =\n        new PropertyCondition(TransformPattern.CanRotateProperty, true);\n\n    // Use any combination of the preceding condtions to \n    // find the control(s) of interest\n    Condition condition = new AndCondition(\n        conditionCanRotate,\n        conditionCanMove,\n        conditionCanResize);\n\n    return rootElement.FindAll(TreeScope.Descendants, condition);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATransformPattern_snip#100\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Finds all automation elements that satisfy \n&#39;&#39;&#39; the specified condition(s).\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;rootElement&quot;&gt;\n&#39;&#39;&#39; The automation element from which to start searching.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; A collection of automation elements satisfying \n&#39;&#39;&#39; the specified condition(s).\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Function FindAutomationElement( _\nByVal rootElement As AutomationElement) As AutomationElementCollection\n    If rootElement Is Nothing Then\n        Throw New ArgumentException(&quot;Root element cannot be null.&quot;)\n    End If\n\n    Dim conditionCanMove As New PropertyCondition( _\n    TransformPattern.CanMoveProperty, False)\n\n    Dim conditionCanResize As New PropertyCondition( _\n    TransformPattern.CanResizeProperty, True)\n\n    Dim conditionCanRotate As New PropertyCondition( _\n    TransformPattern.CanRotateProperty, True)\n\n    &#39; Use any combination of the preceding condtions to \n    &#39; find the control(s) of interest\n    Dim condition As AndCondition = New AndCondition( _\n    conditionCanRotate, conditionCanMove, conditionCanResize)\n\n    Return rootElement.FindAll(TreeScope.Descendants, condition)\n\nEnd Function &#39;FindAutomationElement    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TransformPattern_CanRotateProperty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanRotateProperty</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <span class=\"xref\">stem.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.Automation.AutomationProperty CanRotateProperty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <a class=\"xref\" href=\"system.windows.automation.transformpatternidentifiers\" data-linktype=\"relative-path\">TransformPatternIdentifiers</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a root element is passed to a function that returns a collection of UI Automation elements that are descendants of the root and satisfy a set of property conditions.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATransformPattern_snip#100\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Finds all automation elements that satisfy \n/// the specified condition(s).\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;rootElement&quot;&gt;\n/// The automation element from which to start searching.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// A collection of automation elements satisfying \n/// the specified condition(s).\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate AutomationElementCollection FindAutomationElement(\n    AutomationElement rootElement)\n{\n    if (rootElement == null)\n    {\n        throw new ArgumentException(&quot;Root element cannot be null.&quot;);\n    }\n\n    PropertyCondition conditionCanMove =\n        new PropertyCondition(TransformPattern.CanMoveProperty, false);\n\n    PropertyCondition conditionCanResize =\n        new PropertyCondition(TransformPattern.CanResizeProperty, true);\n\n    PropertyCondition conditionCanRotate =\n        new PropertyCondition(TransformPattern.CanRotateProperty, true);\n\n    // Use any combination of the preceding condtions to \n    // find the control(s) of interest\n    Condition condition = new AndCondition(\n        conditionCanRotate,\n        conditionCanMove,\n        conditionCanResize);\n\n    return rootElement.FindAll(TreeScope.Descendants, condition);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATransformPattern_snip#100\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Finds all automation elements that satisfy \n&#39;&#39;&#39; the specified condition(s).\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;rootElement&quot;&gt;\n&#39;&#39;&#39; The automation element from which to start searching.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; A collection of automation elements satisfying \n&#39;&#39;&#39; the specified condition(s).\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Function FindAutomationElement( _\nByVal rootElement As AutomationElement) As AutomationElementCollection\n    If rootElement Is Nothing Then\n        Throw New ArgumentException(&quot;Root element cannot be null.&quot;)\n    End If\n\n    Dim conditionCanMove As New PropertyCondition( _\n    TransformPattern.CanMoveProperty, False)\n\n    Dim conditionCanResize As New PropertyCondition( _\n    TransformPattern.CanResizeProperty, True)\n\n    Dim conditionCanRotate As New PropertyCondition( _\n    TransformPattern.CanRotateProperty, True)\n\n    &#39; Use any combination of the preceding condtions to \n    &#39; find the control(s) of interest\n    Dim condition As AndCondition = New AndCondition( _\n    conditionCanRotate, conditionCanMove, conditionCanResize)\n\n    Return rootElement.FindAll(TreeScope.Descendants, condition)\n\nEnd Function &#39;FindAutomationElement    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TransformPattern_Pattern\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Pattern</div>        \r\n          </div>\r\n    \r\n            <p>Identifies the <a class=\"xref\" href=\"system.windows.automation.transformpattern\" data-linktype=\"relative-path\">TransformPattern</a> control pattern.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.Windows.Automation.AutomationPattern Pattern;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This identifier is used by UI Automation client applications. UI Automation providers should use the equivalent field in <a class=\"xref\" href=\"system.windows.automation.transformpatternidentifiers\" data-linktype=\"relative-path\">TransformPatternIdentifiers</a>.  </p>\n<p> The pattern identifier is passed to methods such as <a class=\"xref\" href=\"system.windows.automation.automationelement#System_Windows_Automation_AutomationElement_GetCurrentPattern_\" data-linktype=\"relative-path\">GetCurrentPattern</a> to retrieve the control pattern of interest from the specified <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a <a class=\"xref\" href=\"system.windows.automation.transformpattern\" data-linktype=\"relative-path\">TransformPattern</a> control pattern is obtained from an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATransformPattern_snip#101\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains a TransformPattern control pattern from \n/// an automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;targetControl&quot;&gt;\n/// The automation element of interest.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// A TransformPattern object.\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate TransformPattern GetTransformPattern(\n    AutomationElement targetControl)\n{\n    TransformPattern transformPattern = null;\n\n    try\n    {\n        transformPattern =\n            targetControl.GetCurrentPattern(TransformPattern.Pattern)\n            as TransformPattern;\n    }\n    catch (InvalidOperationException)\n    {\n        // object doesn&#39;t support the TransformPattern control pattern\n        return null;\n    }\n\n    return transformPattern;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATransformPattern_snip#101\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains a TransformPattern control pattern from \n&#39;&#39;&#39; an automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;targetControl&quot;&gt;\n&#39;&#39;&#39; The automation element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; A TransformPattern object.\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Function GetTransformPattern( _\nByVal targetControl As AutomationElement) As TransformPattern\n    Dim transformPattern As TransformPattern = Nothing\n\n    Try\n        transformPattern = DirectCast( _\n        targetControl.GetCurrentPattern(transformPattern.Pattern), _\n        TransformPattern)\n    Catch exc As InvalidOperationException\n        &#39; object doesn&#39;t support the TransformPattern control pattern\n        Return Nothing\n    End Try\n\n    Return transformPattern\n\nEnd Function &#39;GetTransformPattern    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TransformPattern_Cached\">\r\n    \r\n            <a id=\"System_Windows_Automation_TransformPattern_Cached_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Cached</div>        \r\n          </div>\r\n    \r\n            <p>Gets the cached UI Automation property values for this <a class=\"xref\" href=\"system.windows.automation.transformpattern\" data-linktype=\"relative-path\">TransformPattern</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Automation.TransformPattern.TransformPatternInformation Cached { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.transformpattern.transformpatterninformation\" data-linktype=\"relative-path\">TransformPattern+TransformPatternInformation</a></div>\r\n                  </div>\r\n                  <p>A structure containing the cached UI Automation property values for the control pattern.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The requested property is not in the cache.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Cached property values must have been previously requested using a <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a>. Use <a class=\"xref\" href=\"system.windows.automation.transformpattern#System_Windows_Automation_TransformPattern_Current_\" data-linktype=\"relative-path\">Current</a> to get the current value of a property.  </p>\n<p> For information on the properties available and their use, see <a class=\"xref\" href=\"system.windows.automation.transformpattern.transformpatterninformation\" data-linktype=\"relative-path\">TransformPattern+TransformPatternInformation</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TransformPattern_Current\">\r\n    \r\n            <a id=\"System_Windows_Automation_TransformPattern_Current_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Current</div>        \r\n          </div>\r\n    \r\n            <p>Gets the current UI Automation property values for this <a class=\"xref\" href=\"system.windows.automation.transformpattern\" data-linktype=\"relative-path\">TransformPattern</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Automation.TransformPattern.TransformPatternInformation Current { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.automation.transformpattern.transformpatterninformation\" data-linktype=\"relative-path\">TransformPattern+TransformPatternInformation</a></div>\r\n                  </div>\r\n                  <p>A structure containing the current UI Automation property values for the control pattern.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This pattern must be from an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> with an <a class=\"xref\" href=\"system.windows.automation.automationelementmode\" data-linktype=\"relative-path\">AutomationElementMode</a> reference in order to get current values. If the <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> was obtained using <a class=\"xref\" href=\"system.windows.automation.automationelementmode\" data-linktype=\"relative-path\">AutomationElementMode</a>, it contains only cached data, and attempting to get the current value of any property raises an exception. Use <a class=\"xref\" href=\"system.windows.automation.transformpattern#System_Windows_Automation_TransformPattern_Cached_\" data-linktype=\"relative-path\">Cached</a> to get the cached value of a property that was previously specified using a <a class=\"xref\" href=\"system.windows.automation.cacherequest\" data-linktype=\"relative-path\">CacheRequest</a>.  </p>\n<p> For information on the properties available and their use, see <a class=\"xref\" href=\"system.windows.automation.transformpattern.transformpatterninformation\" data-linktype=\"relative-path\">TransformPattern+TransformPatternInformation</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TransformPattern_Move_System_Double_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Automation_TransformPattern_Move_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Move(Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Moves the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Move (double x, double y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Absolute screen coordinates of the left side of the control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Absolute screen coordinates of the top of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Windows.Automation.TransformPattern.TransformPatternInformation.CanMove*</span> property is false.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse. For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container&#39;s viewport. In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a <a class=\"xref\" href=\"system.windows.automation.transformpattern\" data-linktype=\"relative-path\">TransformPattern</a> control pattern is obtained from an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> and subsequently used to move the <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATransformPattern_snip#101\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains a TransformPattern control pattern from \n/// an automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;targetControl&quot;&gt;\n/// The automation element of interest.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// A TransformPattern object.\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate TransformPattern GetTransformPattern(\n    AutomationElement targetControl)\n{\n    TransformPattern transformPattern = null;\n\n    try\n    {\n        transformPattern =\n            targetControl.GetCurrentPattern(TransformPattern.Pattern)\n            as TransformPattern;\n    }\n    catch (InvalidOperationException)\n    {\n        // object doesn&#39;t support the TransformPattern control pattern\n        return null;\n    }\n\n    return transformPattern;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATransformPattern_snip#101\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains a TransformPattern control pattern from \n&#39;&#39;&#39; an automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;targetControl&quot;&gt;\n&#39;&#39;&#39; The automation element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; A TransformPattern object.\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Function GetTransformPattern( _\nByVal targetControl As AutomationElement) As TransformPattern\n    Dim transformPattern As TransformPattern = Nothing\n\n    Try\n        transformPattern = DirectCast( _\n        targetControl.GetCurrentPattern(transformPattern.Pattern), _\n        TransformPattern)\n    Catch exc As InvalidOperationException\n        &#39; object doesn&#39;t support the TransformPattern control pattern\n        Return Nothing\n    End Try\n\n    Return transformPattern\n\nEnd Function &#39;GetTransformPattern    \n</code></pre><pre><code class=\"lang-cs\" name=\"UIATransformPattern_snip#103\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Calls the TransformPattern.Move() method for an associated \n/// automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;transformPattern&quot;&gt;\n/// The TransformPattern control pattern obtained from\n/// an automation element.\n/// &lt;/param&gt;\n/// &lt;param name=&quot;x&quot;&gt;\n/// The number of screen pixels to move the automation element \n/// horizontally.\n/// &lt;/param&gt;\n/// &lt;param name=&quot;y&quot;&gt;\n/// The number of screen pixels to move the automation element \n/// vertically.\n/// &lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void MoveElement(\n    TransformPattern transformPattern, double x, double y)\n{\n    try\n    {\n        if (transformPattern.Current.CanMove)\n        {\n            transformPattern.Move(x, y);\n        }\n    }\n    catch (InvalidOperationException)\n    {\n        // object is not able to perform the requested action\n        return;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATransformPattern_snip#103\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Calls the TransformPattern.Move() method for an associated \n&#39;&#39;&#39; automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;transformPattern&quot;&gt;\n&#39;&#39;&#39; The TransformPattern control pattern obtained from\n&#39;&#39;&#39; an automation element.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;x&quot;&gt;\n&#39;&#39;&#39; The number of screen pixels to move the automation element \n&#39;&#39;&#39; horizontally.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;y&quot;&gt;\n&#39;&#39;&#39; The number of screen pixels to move the automation element \n&#39;&#39;&#39; vertically.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub MoveElement( _\nByVal transformPattern As TransformPattern, _\nByVal x As Double, ByVal y As Double)\n    Try\n        If transformPattern.Current.CanMove Then\n            transformPattern.Move(x, y)\n        End If\n    Catch exc As InvalidOperationException\n        &#39; object is not able to perform the requested action\n        Return\n    End Try\n\nEnd Sub &#39;MoveElement    \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TransformPattern_Resize_System_Double_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Automation_TransformPattern_Resize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Resize(Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Resizes the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Resize (double width, double height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new width of the window, in pixels.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new height of the window, in pixels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Windows.Automation.TransformPattern.TransformPatternInformation.CanResize*</span> property is false.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When called on a control that supports split panes, this method can have the side effect of resizing other contiguous panes.  </p>\n<p> An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse. For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container&#39;s viewport. In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a <a class=\"xref\" href=\"system.windows.automation.transformpattern\" data-linktype=\"relative-path\">TransformPattern</a> control pattern is obtained from an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> and subsequently used to resize the <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATransformPattern_snip#101\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains a TransformPattern control pattern from \n/// an automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;targetControl&quot;&gt;\n/// The automation element of interest.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// A TransformPattern object.\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate TransformPattern GetTransformPattern(\n    AutomationElement targetControl)\n{\n    TransformPattern transformPattern = null;\n\n    try\n    {\n        transformPattern =\n            targetControl.GetCurrentPattern(TransformPattern.Pattern)\n            as TransformPattern;\n    }\n    catch (InvalidOperationException)\n    {\n        // object doesn&#39;t support the TransformPattern control pattern\n        return null;\n    }\n\n    return transformPattern;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATransformPattern_snip#101\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains a TransformPattern control pattern from \n&#39;&#39;&#39; an automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;targetControl&quot;&gt;\n&#39;&#39;&#39; The automation element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; A TransformPattern object.\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Function GetTransformPattern( _\nByVal targetControl As AutomationElement) As TransformPattern\n    Dim transformPattern As TransformPattern = Nothing\n\n    Try\n        transformPattern = DirectCast( _\n        targetControl.GetCurrentPattern(transformPattern.Pattern), _\n        TransformPattern)\n    Catch exc As InvalidOperationException\n        &#39; object doesn&#39;t support the TransformPattern control pattern\n        Return Nothing\n    End Try\n\n    Return transformPattern\n\nEnd Function &#39;GetTransformPattern    \n</code></pre><pre><code class=\"lang-cs\" name=\"UIATransformPattern_snip#104\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Calls the TransformPattern.Resize() method for an associated \n/// automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;transformPattern&quot;&gt;\n/// The TransformPattern control pattern obtained from\n/// an automation element.\n/// &lt;/param&gt;\n/// &lt;param name=&quot;width&quot;&gt;\n/// The requested width of the automation element.\n/// &lt;/param&gt;\n/// &lt;param name=&quot;height&quot;&gt;\n/// The requested height of the automation element.\n/// &lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void ResizeElement(\n    TransformPattern transformPattern, double width, double height)\n{\n    try\n    {\n        if (transformPattern.Current.CanResize)\n        {\n            transformPattern.Resize(width, height);\n        }\n    }\n    catch (InvalidOperationException)\n    {\n        // object is not able to perform the requested action\n        return;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATransformPattern_snip#104\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Calls the TransformPattern.Resize() method for an associated \n&#39;&#39;&#39; automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;transformPattern&quot;&gt;\n&#39;&#39;&#39; The TransformPattern control pattern obtained from\n&#39;&#39;&#39; an automation element.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;width&quot;&gt;\n&#39;&#39;&#39; The requested width of the automation element.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;height&quot;&gt;\n&#39;&#39;&#39; The requested height of the automation element.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub ResizeElement( _\nByVal transformPattern As TransformPattern, _\nByVal width As Double, ByVal height As Double)\n    Try\n        If transformPattern.Current.CanResize Then\n            transformPattern.Resize(width, height)\n        End If\n    Catch\n        &#39; object is not able to perform the requested action\n        Return\n    End Try\n\nEnd Sub &#39;ResizeElement\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_TransformPattern_Rotate_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Automation_TransformPattern_Rotate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Rotate(Double)</div>        \r\n          </div>\r\n    \r\n            <p>Rotates the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Rotate (double degrees);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>degrees</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of degrees to rotate the element. A positive number rotates clockwise; a negative number rotates counterclockwise.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Windows.Automation.TransformPattern.TransformPatternInformation.CanRotate*</span> property is false.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse. For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container&#39;s viewport. In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In the following example, a <a class=\"xref\" href=\"system.windows.automation.transformpattern\" data-linktype=\"relative-path\">TransformPattern</a> control pattern is obtained from an <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a> and subsequently used to rotate the <a class=\"xref\" href=\"system.windows.automation.automationelement\" data-linktype=\"relative-path\">AutomationElement</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"UIATransformPattern_snip#101\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Obtains a TransformPattern control pattern from \n/// an automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;targetControl&quot;&gt;\n/// The automation element of interest.\n/// &lt;/param&gt;\n/// &lt;returns&gt;\n/// A TransformPattern object.\n/// &lt;/returns&gt;\n///--------------------------------------------------------------------\nprivate TransformPattern GetTransformPattern(\n    AutomationElement targetControl)\n{\n    TransformPattern transformPattern = null;\n\n    try\n    {\n        transformPattern =\n            targetControl.GetCurrentPattern(TransformPattern.Pattern)\n            as TransformPattern;\n    }\n    catch (InvalidOperationException)\n    {\n        // object doesn&#39;t support the TransformPattern control pattern\n        return null;\n    }\n\n    return transformPattern;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATransformPattern_snip#101\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Obtains a TransformPattern control pattern from \n&#39;&#39;&#39; an automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;targetControl&quot;&gt;\n&#39;&#39;&#39; The automation element of interest.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;returns&gt;\n&#39;&#39;&#39; A TransformPattern object.\n&#39;&#39;&#39; &lt;/returns&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Function GetTransformPattern( _\nByVal targetControl As AutomationElement) As TransformPattern\n    Dim transformPattern As TransformPattern = Nothing\n\n    Try\n        transformPattern = DirectCast( _\n        targetControl.GetCurrentPattern(transformPattern.Pattern), _\n        TransformPattern)\n    Catch exc As InvalidOperationException\n        &#39; object doesn&#39;t support the TransformPattern control pattern\n        Return Nothing\n    End Try\n\n    Return transformPattern\n\nEnd Function &#39;GetTransformPattern    \n</code></pre><pre><code class=\"lang-cs\" name=\"UIATransformPattern_snip#102\">///--------------------------------------------------------------------\n/// &lt;summary&gt;\n/// Calls the TransformPattern.Rotate() method for an associated \n/// automation element.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;transformPattern&quot;&gt;\n/// The TransformPattern control pattern obtained from\n/// an automation element.\n/// &lt;/param&gt;\n/// &lt;param name=&quot;degrees&quot;&gt;\n/// The amount of degrees to rotate the automation element.\n/// &lt;/param&gt;\n///--------------------------------------------------------------------\nprivate void RotateElement(\n    TransformPattern transformPattern, double degrees)\n{\n    try\n    {\n        if (transformPattern.Current.CanRotate)\n        {\n            transformPattern.Rotate(degrees);\n        }\n    }\n    catch (InvalidOperationException)\n    {\n        // object is not able to perform the requested action\n        return;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"UIATransformPattern_snip#102\">&#39;&#39;&#39;--------------------------------------------------------------------\n&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Calls the TransformPattern.Rotate() method for an associated \n&#39;&#39;&#39; automation element.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;transformPattern&quot;&gt;\n&#39;&#39;&#39; The TransformPattern control pattern obtained from\n&#39;&#39;&#39; an automation element.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;degrees&quot;&gt;\n&#39;&#39;&#39; The amount of degrees to rotate the automation element.\n&#39;&#39;&#39; &lt;/param&gt;\n&#39;&#39;&#39;--------------------------------------------------------------------\nPrivate Sub RotateElement( _\nByVal transformPattern As TransformPattern, ByVal degrees As Double)\n    Try\n        If transformPattern.Current.CanRotate Then\n            transformPattern.Rotate(degrees)\n        End If\n    Catch\n        &#39; object is not able to perform the requested action\n        Return\n    End Try\n\nEnd Sub &#39;RotateElement\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.TransformPattern.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.TransformPattern.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TransformPattern\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TransformPattern.Cached\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TransformPattern.CanMoveProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TransformPattern.CanResizeProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TransformPattern.CanRotateProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TransformPattern.Current\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TransformPattern.Move\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TransformPattern.Pattern\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TransformPattern.Resize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.TransformPattern.Rotate\">\r\n<meta name=\"APILocation\" content=\"UIAutomationClient.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"225639de-279b-fa87-7db0-c16b51cb95c1\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a control that can be moved, resized, or rotated within a two-dimensional space.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Automation/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Automation.TransformPattern\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.TransformPattern.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.TransformPattern.yml","open_to_public_contributors":true,"api_name":["System.Windows.Automation.TransformPattern","System.Windows.Automation.TransformPattern.Cached","System.Windows.Automation.TransformPattern.CanMoveProperty","System.Windows.Automation.TransformPattern.CanResizeProperty","System.Windows.Automation.TransformPattern.CanRotateProperty","System.Windows.Automation.TransformPattern.Current","System.Windows.Automation.TransformPattern.Move","System.Windows.Automation.TransformPattern.Pattern","System.Windows.Automation.TransformPattern.Resize","System.Windows.Automation.TransformPattern.Rotate"],"api_location":["UIAutomationClient.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Automation.TransformPattern","System::Windows::Automation::TransformPattern","System.Windows.Automation.TransformPattern.Cached","System::Windows::Automation::TransformPattern::Cached","System.Windows.Automation.TransformPattern.CanMoveProperty","System::Windows::Automation::TransformPattern::CanMoveProperty","System.Windows.Automation.TransformPattern.CanResizeProperty","System::Windows::Automation::TransformPattern::CanResizeProperty","System.Windows.Automation.TransformPattern.CanRotateProperty","System::Windows::Automation::TransformPattern::CanRotateProperty","System.Windows.Automation.TransformPattern.Current","System::Windows::Automation::TransformPattern::Current","System.Windows.Automation.TransformPattern.Move","System::Windows::Automation::TransformPattern::Move","System.Windows.Automation.TransformPattern.Pattern","System::Windows::Automation::TransformPattern::Pattern","System.Windows.Automation.TransformPattern.Resize","System::Windows::Automation::TransformPattern::Resize","System.Windows.Automation.TransformPattern.Rotate","System::Windows::Automation::TransformPattern::Rotate"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"225639de-279b-fa87-7db0-c16b51cb95c1","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Automation/TransformPattern.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"TransformPattern class | Microsoft Docs","_op_ogTitle":"TransformPattern class","description":"Represents a control that can be moved, resized, or rotated within a two-dimensional space.\n","toc_asset_id":"_splitted/System.Windows.Automation/toc.json","toc_rel":"_splitted/System.Windows.Automation/toc.json","source_url":"","ms.assetid":"System.Windows.Automation.TransformPattern","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.transformpattern","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.transformpattern","fileRelativePath":"System.Windows.Automation.TransformPattern.html"},"themesRelativePathToOutputRoot":"_themes/"}