{"content":"    \r\n    <h1 id=\"System_Data_SqlClient_SqlConnectionStringBuilder\">\r\n      <span class=\"lang-csharp\">SqlConnectionStringBuilder</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a simple way to create and manage the contents of connection strings used by the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> class.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultProperty(&quot;DataSource&quot;)]\n[System.ComponentModel.TypeConverter(typeof(System.Data.SqlClient.SqlConnectionStringBuilder/SqlConnectionStringBuilderConverter))]\npublic sealed class SqlConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder\" data-linktype=\"relative-path\">System.Data.Common.DbConnectionStringBuilder</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SqlConnectionStringBuilder</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_Add_System_String_System_Object_\" data-linktype=\"relative-path\">Add(String,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_AppendKeyValuePair_System_Text_StringBuilder_System_String_System_String_\" data-linktype=\"relative-path\">AppendKeyValuePair(StringBuilder,String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_AppendKeyValuePair_System_Text_StringBuilder_System_String_System_String_System_Boolean_\" data-linktype=\"relative-path\">AppendKeyValuePair(StringBuilder,String,String,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_BrowsableConnectionString\" data-linktype=\"relative-path\">BrowsableConnectionString</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_ClearPropertyDescriptors\" data-linktype=\"relative-path\">ClearPropertyDescriptors()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_ConnectionString\" data-linktype=\"relative-path\">ConnectionString</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_Count\" data-linktype=\"relative-path\">Count</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_EquivalentTo_System_Data_Common_DbConnectionStringBuilder_\" data-linktype=\"relative-path\">EquivalentTo(DbConnectionStringBuilder)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_IsReadOnly\" data-linktype=\"relative-path\">IsReadOnly</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_Collections_ICollection_CopyTo_System_Array_System_Int32_\" data-linktype=\"relative-path\">ICollection.CopyTo(Array,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_Collections_ICollection_IsSynchronized\" data-linktype=\"relative-path\">ICollection.IsSynchronized</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_Collections_ICollection_SyncRoot\" data-linktype=\"relative-path\">ICollection.SyncRoot</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_Collections_IDictionary_Add_System_Object_System_Object_\" data-linktype=\"relative-path\">IDictionary.Add(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_Collections_IDictionary_Contains_System_Object_\" data-linktype=\"relative-path\">IDictionary.Contains(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_Collections_IDictionary_GetEnumerator\" data-linktype=\"relative-path\">IDictionary.GetEnumerator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_Collections_IDictionary_Item_System_Object_\" data-linktype=\"relative-path\">IDictionary.Item(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_Collections_IDictionary_Remove_System_Object_\" data-linktype=\"relative-path\">IDictionary.Remove(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_Collections_IEnumerable_GetEnumerator\" data-linktype=\"relative-path\">IEnumerable.GetEnumerator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_ComponentModel_ICustomTypeDescriptor_GetAttributes\" data-linktype=\"relative-path\">ICustomTypeDescriptor.GetAttributes()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_ComponentModel_ICustomTypeDescriptor_GetClassName\" data-linktype=\"relative-path\">ICustomTypeDescriptor.GetClassName()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_ComponentModel_ICustomTypeDescriptor_GetComponentName\" data-linktype=\"relative-path\">ICustomTypeDescriptor.GetComponentName()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_ComponentModel_ICustomTypeDescriptor_GetConverter\" data-linktype=\"relative-path\">ICustomTypeDescriptor.GetConverter()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_ComponentModel_ICustomTypeDescriptor_GetDefaultEvent\" data-linktype=\"relative-path\">ICustomTypeDescriptor.GetDefaultEvent()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_ComponentModel_ICustomTypeDescriptor_GetDefaultProperty\" data-linktype=\"relative-path\">ICustomTypeDescriptor.GetDefaultProperty()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_ComponentModel_ICustomTypeDescriptor_GetEditor_System_Type_\" data-linktype=\"relative-path\">ICustomTypeDescriptor.GetEditor(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_ComponentModel_ICustomTypeDescriptor_GetEvents\" data-linktype=\"relative-path\">ICustomTypeDescriptor.GetEvents()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_ComponentModel_ICustomTypeDescriptor_GetEvents_System_Attribute___\" data-linktype=\"relative-path\">ICustomTypeDescriptor.GetEvents(Attribute[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_ComponentModel_ICustomTypeDescriptor_GetProperties\" data-linktype=\"relative-path\">ICustomTypeDescriptor.GetProperties()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_ComponentModel_ICustomTypeDescriptor_GetProperties_System_Attribute___\" data-linktype=\"relative-path\">ICustomTypeDescriptor.GetProperties(Attribute[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_System_ComponentModel_ICustomTypeDescriptor_GetPropertyOwner_System_ComponentModel_PropertyDescriptor_\" data-linktype=\"relative-path\">ICustomTypeDescriptor.GetPropertyOwner(PropertyDescriptor)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The connection string builder lets developers programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, using properties and methods of the class. The connection string builder provides strongly typed properties corresponding to the known key/value pairs allowed by SQL Server. Developers needing to create connection strings as part of applications can use the SqlConnectionStringBuilder class to build and modify connection strings. The class also makes it easy to manage connection strings stored in an application configuration file.  </p>\n<p> The SqlConnectionStringBuilder performs checks for valid key/value pairs. Therefore, you cannot use this class to create invalid connection strings; trying to add invalid pairs will throw an exception. The class maintains a fixed collection of synonyms and can translate from a synonym to the corresponding well-known key name.  </p>\n<p> For example, when you use the <strong>Item</strong> property to retrieve a value, you can specify a string that contains any synonym for the key you need. For example, you can specify &quot;Network Address&quot;, &quot;addr&quot;, or any other acceptable synonym for this key within a connection string when you use any member that requires a string that contains the key name, such as the <strong>Item</strong> property or the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder#System_Data_SqlClient_SqlConnectionStringBuilder_Remove_\" data-linktype=\"relative-path\">Remove</a> method. See the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection#System_Data_SqlClient_SqlConnection_ConnectionString_\" data-linktype=\"relative-path\">ConnectionString</a> property for a full list of acceptable synonyms.  </p>\n<p> The <strong>Item</strong> property handles tries to insert malicious entries. For example, the following code, using the default Item property (the indexer, in C#) correctly escapes the nested key/value pair:  </p>\n<p> [Visual Basic]  </p>\n<pre><code>Dim builder As New System.Data.SqlClient.SqlConnectionStringBuilder  \nbuilder(&quot;Data Source&quot;) = &quot;(local)&quot;  \nbuilder(&quot;Integrated Security&quot;) = True  \nbuilder(&quot;Initial Catalog&quot;) = &quot;AdventureWorks;NewValue=Bad&quot;  \nConsole.WriteLine(builder.ConnectionString)  \n</code></pre><p> [C#]  </p>\n<pre><code>System.Data.SqlClient.SqlConnectionStringBuilder builder =  \n  new System.Data.SqlClient.SqlConnectionStringBuilder();  \nbuilder[&quot;Data Source&quot;] = &quot;(local)&quot;;  \nbuilder[&quot;integrated Security&quot;] = true;  \nbuilder[&quot;Initial Catalog&quot;] = &quot;AdventureWorks;NewValue=Bad&quot;;  \nConsole.WriteLine(builder.ConnectionString);  \n</code></pre><p> The result is the following connection string that handles the invalid value in a safe manner:  </p>\n<pre><code>Source=(local);Initial Catalog=&quot;AdventureWorks;NewValue=Bad&quot;;  \nIntegrated Security=True  \n</code></pre>\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder__ctor\" data-linktype=\"self-bookmark\">SqlConnectionStringBuilder()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder__ctor_System_String_\" data-linktype=\"self-bookmark\">SqlConnectionStringBuilder(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> class. The provided connection string provides the data for the instance&#39;s internal connection information.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_ApplicationIntent\" data-linktype=\"self-bookmark\">ApplicationIntent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Declares the application workload type when connecting to a database in an SQL Server Availability Group. You can set the value of this property with <a class=\"xref\" href=\"system.data.sqlclient.applicationintent\" data-linktype=\"relative-path\">ApplicationIntent</a>. For more information about SqlClient support for Always On Availability Groups, see <a href=\"../Topic/SqlClient%20Support%20for%20High%20Availability,%20Disaster%20Recovery.md\" data-linktype=\"relative-path\">SqlClient Support for High Availability, Disaster Recovery</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_ApplicationName\" data-linktype=\"self-bookmark\">ApplicationName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the application associated with the connection string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_AsynchronousProcessing\" data-linktype=\"self-bookmark\">AsynchronousProcessing</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a Boolean value that indicates whether asynchronous processing is allowed by the connection created by using this connection string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_AttachDBFilename\" data-linktype=\"self-bookmark\">AttachDBFilename</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a string that contains the name of the primary data file. This includes the full path name of an attachable database.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_Authentication\" data-linktype=\"self-bookmark\">Authentication</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the authentication of the connection string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_ColumnEncryptionSetting\" data-linktype=\"self-bookmark\">ColumnEncryptionSetting</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets and sets the column encryption settings for the connection string builder.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_ConnectionReset\" data-linktype=\"self-bookmark\">ConnectionReset</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Obsolete. Gets or sets a Boolean value that indicates whether the connection is reset when drawn from the connection pool.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_ConnectRetryCount\" data-linktype=\"self-bookmark\">ConnectRetryCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> The number of reconnections attempted after identifying that there was an idle connection failure. This must be an integer between 0 and 255. Default is 1. Set to 0 to disable reconnecting on idle connection failures. An <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> will be thrown if set to a value outside of the allowed range.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_ConnectRetryInterval\" data-linktype=\"self-bookmark\">ConnectRetryInterval</a></div>\r\n          </td>\r\n            <td>\r\n            <p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> Amount of time (in seconds) between each reconnection attempt after identifying that there was an idle connection failure. This must be an integer between 1 and 60. The default is 10 seconds. An <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> will be thrown if set to a value outside of the allowed range.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_ConnectTimeout\" data-linktype=\"self-bookmark\">ConnectTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the length of time (in seconds) to wait for a connection to the server before terminating the attempt and generating an error.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_ContextConnection\" data-linktype=\"self-bookmark\">ContextConnection</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether a client/server or in-process connection to SQL Server should be made.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_CurrentLanguage\" data-linktype=\"self-bookmark\">CurrentLanguage</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the SQL Server Language record name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_DataSource\" data-linktype=\"self-bookmark\">DataSource</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name or network address of the instance of SQL Server to connect to.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_Encrypt\" data-linktype=\"self-bookmark\">Encrypt</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a Boolean value that indicates whether SQL Server uses SSL encryption for all data sent between the client and server if the server has a certificate installed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_Enlist\" data-linktype=\"self-bookmark\">Enlist</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a Boolean value that indicates whether the SQL Server connection pooler automatically enlists the connection in the creation thread&#39;s current transaction context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_FailoverPartner\" data-linktype=\"self-bookmark\">FailoverPartner</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name or address of the partner server to connect to if the primary server is down.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_InitialCatalog\" data-linktype=\"self-bookmark\">InitialCatalog</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the database associated with the connection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_IntegratedSecurity\" data-linktype=\"self-bookmark\">IntegratedSecurity</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a Boolean value that indicates whether User ID and Password are specified in the connection (when <code>false</code>) or whether the current Windows account credentials are used for authentication (when <code>true</code>).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_IsFixedSize\" data-linktype=\"self-bookmark\">IsFixedSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> has a fixed size.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_Item_System_String_\" data-linktype=\"self-bookmark\">Item(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the value associated with the specified key. In C#, this property is the indexer.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_Keys\" data-linktype=\"self-bookmark\">Keys</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> that contains the keys in the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_LoadBalanceTimeout\" data-linktype=\"self-bookmark\">LoadBalanceTimeout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the minimum time, in seconds, for the connection to live in the connection pool before being destroyed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_MaxPoolSize\" data-linktype=\"self-bookmark\">MaxPoolSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the maximum number of connections allowed in the connection pool for this specific connection string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_MinPoolSize\" data-linktype=\"self-bookmark\">MinPoolSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the minimum number of connections allowed in the connection pool for this specific connection string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_MultipleActiveResultSets\" data-linktype=\"self-bookmark\">MultipleActiveResultSets</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When true, an application can maintain multiple active result sets (MARS). When false, an application must process or cancel all result sets from one batch before it can execute any other batch on that connection.  </p>\n<p> For more information, see <a href=\"http://msdn.microsoft.com//library/cfa084cz.aspx\" data-linktype=\"external\">Multiple Active Result Sets (MARS)</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_MultiSubnetFailover\" data-linktype=\"self-bookmark\">MultiSubnetFailover</a></div>\r\n          </td>\r\n            <td>\r\n            <p>If your application is connecting to an AlwaysOn availability group (AG) on different subnets, setting MultiSubnetFailover=true provides faster detection of and connection to the (currently) active server. For more information about SqlClient support for Always On Availability Groups, see <a href=\"../Topic/SqlClient%20Support%20for%20High%20Availability,%20Disaster%20Recovery.md\" data-linktype=\"relative-path\">SqlClient Support for High Availability, Disaster Recovery</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_NetworkLibrary\" data-linktype=\"self-bookmark\">NetworkLibrary</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a string that contains the name of the network library used to establish a connection to the SQL Server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_PacketSize\" data-linktype=\"self-bookmark\">PacketSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the size in bytes of the network packets used to communicate with an instance of SQL Server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_Password\" data-linktype=\"self-bookmark\">Password</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the password for the SQL Server account.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_PersistSecurityInfo\" data-linktype=\"self-bookmark\">PersistSecurityInfo</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a Boolean value that indicates if security-sensitive information, such as the password, is not returned as part of the connection if the connection is open or has ever been in an open state.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_PoolBlockingPeriod\" data-linktype=\"self-bookmark\">PoolBlockingPeriod</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The blocking period behavior for a connection pool.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_Pooling\" data-linktype=\"self-bookmark\">Pooling</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a Boolean value that indicates whether the connection will be pooled or explicitly opened every time that the connection is requested.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_Replication\" data-linktype=\"self-bookmark\">Replication</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a Boolean value that indicates whether replication is supported using the connection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_TransactionBinding\" data-linktype=\"self-bookmark\">TransactionBinding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a string value that indicates how the connection maintains its association with an enlisted <code>System.Transactions</code> transaction.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_TransparentNetworkIPResolution\" data-linktype=\"self-bookmark\">TransparentNetworkIPResolution</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When the value of this key is set to <code>true</code>, the application is required to retrieve all IP addresses for a particular DNS entry and attempt to connect with the first one in the list. If the connection is not established within 0.5 seconds, the application will try to connect to all others in parallel. When the first answers, the application will establish the connection with the respondent IP address.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_TrustServerCertificate\" data-linktype=\"self-bookmark\">TrustServerCertificate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether the channel will be encrypted while bypassing walking the certificate chain to validate trust.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_TypeSystemVersion\" data-linktype=\"self-bookmark\">TypeSystemVersion</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a string value that indicates the type system the application expects.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_UserID\" data-linktype=\"self-bookmark\">UserID</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the user ID to be used when connecting to SQL Server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_UserInstance\" data-linktype=\"self-bookmark\">UserInstance</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether to redirect the connection from the default SQL Server Express instance to a runtime-initiated instance running under the account of the caller.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_Values\" data-linktype=\"self-bookmark\">Values</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> that contains the values in the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_WorkstationID\" data-linktype=\"self-bookmark\">WorkstationID</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the workstation connecting to SQL Server.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_Clear\" data-linktype=\"self-bookmark\">Clear()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Clears the contents of the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_ContainsKey_System_String_\" data-linktype=\"self-bookmark\">ContainsKey(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> contains a specific key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_GetProperties_System_Collections_Hashtable_\" data-linktype=\"self-bookmark\">GetProperties(Hashtable)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_Remove_System_String_\" data-linktype=\"self-bookmark\">Remove(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the entry with the specified key from the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_ShouldSerialize_System_String_\" data-linktype=\"self-bookmark\">ShouldSerialize(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the specified key exists in this <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Data_SqlClient_SqlConnectionStringBuilder_TryGetValue_System_String_System_Object__\" data-linktype=\"self-bookmark\">TryGetValue(String,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a value corresponding to the supplied key from this <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder__ctor\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SqlConnectionStringBuilder()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SqlConnectionStringBuilder ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SqlConnectionStringBuilder(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> class. The provided connection string provides the data for the instance&#39;s internal connection information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public SqlConnectionStringBuilder (string connectionString);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>connectionString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The basis for the object&#39;s internal connection information. Parsed into name/value pairs. Invalid key names raise <a class=\"xref\" href=\"system.collections.generic.keynotfoundexception\" data-linktype=\"relative-path\">KeyNotFoundException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.keynotfoundexception\" data-linktype=\"relative-path\">KeyNotFoundException</a></div>\r\n                  </div>\r\n                  <p>Invalid key name within the connection string.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>Invalid value within the connection string (specifically, when a Boolean or numeric value was expected but not supplied).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The supplied <code>connectionString</code> is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> class provides a fixed internal collection of key/value pairs. Even if you supply only a small subset of the possible connection string values in the constructor, the object always provides default values for each key/value pair. When the <code>ConnectionString</code> property of the object is retrieved, the string contains only key/value pairs in which the value is not the default value for the item.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example supplies a simple SQL Server connection string in the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> object&#39;s constructor, and then iterates through all the key/value pairs within the object. Note that the collection provides default values for each item. Also note that the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> class converts synonyms for the well-known keys so that they are consistent with the well-known names.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This example includes a password to demonstrate how <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.Password#1\">using System.Data.SqlClient;\n\nclass Program\n{\n    static void Main()\n    {\n        try\n        {\n            string connectString = \n                &quot;Server=(local);Database=AdventureWorks;UID=ab;Pwd= a!Pass@@&quot;;\n            Console.WriteLine(&quot;Original: &quot; + connectString);\n            SqlConnectionStringBuilder builder = \n                new SqlConnectionStringBuilder(connectString);\n            Console.WriteLine(&quot;Modified: &quot; + builder.ConnectionString);\n            foreach (string key in builder.Keys)\n                Console.WriteLine(key + &quot;=&quot; + builder[key].ToString());\n            Console.WriteLine(&quot;Press any key to finish.&quot;);\n            Console.ReadLine();\n\n        }\n        catch (System.Collections.Generic.KeyNotFoundException ex)\n        {\n            Console.WriteLine(&quot;KeyNotFoundException: &quot; + ex.Message);\n        }\n        catch (System.FormatException ex)\n        {\n            Console.WriteLine(&quot;Format exception: &quot; + ex.Message);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.Password#1\">Imports System.Data.SqlClient\n\nModule Module1\n    Sub Main()\n        Try\n            Dim connectString As String = _\n                &quot;Server=(local);Database=AdventureWorks;UID=ab;Pwd=a!Pass@@&quot;\n            Console.WriteLine(&quot;Original: &quot; &amp; connectString)\n            Dim builder As New SqlConnectionStringBuilder(connectString)\n            Console.WriteLine(&quot;Modified: &quot; &amp; builder.ConnectionString)\n            For Each key As String In builder.Keys\n                Console.WriteLine(key &amp; &quot;=&quot; &amp; builder.Item(key).ToString)\n            Next\n            Console.WriteLine(&quot;Press any key to finish.&quot;)\n            Console.ReadLine()\n\n        Catch ex As System.Collections.Generic.KeyNotFoundException\n            Console.WriteLine(&quot;KeyNotFoundException: &quot; &amp; ex.Message)\n        Catch ex As System.FormatException\n            Console.WriteLine(&quot;Format exception: &quot; &amp; ex.Message)\n        End Try\n    End Sub\nEnd Module \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ApplicationIntent\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ApplicationIntent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ApplicationIntent</div>        \r\n          </div>\r\n    \r\n            <p>Declares the application workload type when connecting to a database in an SQL Server Availability Group. You can set the value of this property with <a class=\"xref\" href=\"system.data.sqlclient.applicationintent\" data-linktype=\"relative-path\">ApplicationIntent</a>. For more information about SqlClient support for Always On Availability Groups, see <a href=\"../Topic/SqlClient%20Support%20for%20High%20Availability,%20Disaster%20Recovery.md\" data-linktype=\"relative-path\">SqlClient Support for High Availability, Disaster Recovery</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.SqlClient.ApplicationIntent ApplicationIntent { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.sqlclient.applicationintent\" data-linktype=\"relative-path\">ApplicationIntent</a></div>\r\n                  </div>\r\n                  <p>Returns the current value of the property (a value of type <a class=\"xref\" href=\"system.data.sqlclient.applicationintent\" data-linktype=\"relative-path\">ApplicationIntent</a>).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ApplicationName\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ApplicationName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ApplicationName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the application associated with the connection string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ApplicationName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the application, or &quot;.NET SqlClient Data Provider&quot; if no name has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>To set the value to null, use <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Application Name&quot; and &quot;app&quot; keys within the connection string.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> and assigns a connection string in the object&#39;s constructor. The code displays the parsed and recreated version of the connection string, and then modifies the ApplicationName property of the object. Finally, the code displays the new connection string, including the new key/value pair.  </p>\n<pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.ApplicationName#1\">using System.Data.SqlClient;\n\nclass Program\n{\n    static void Main()\n    {\n        try\n        {\n            string connectString = &quot;Server=(local);Initial Catalog=AdventureWorks;&quot; + \n                &quot;Integrated Security=true&quot;;\n            SqlConnectionStringBuilder builder = \n                new SqlConnectionStringBuilder(connectString);\n            Console.WriteLine(&quot;Original: &quot; + builder.ConnectionString);\n            Console.WriteLine(&quot;ApplicationName={0}&quot;,\n                builder.ApplicationName);\n\n            builder.ApplicationName = &quot;My Application&quot;;\n            Console.WriteLine(&quot;Modified: &quot; + builder.ConnectionString);\n\n            Console.WriteLine(&quot;Press any key to finish.&quot;);\n            Console.ReadLine();\n\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(ex.Message);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.ApplicationName#1\">Imports System.Data.SqlClient\n\nModule Module1\n\n    Sub Main()\n        Try\n            Dim connectString As String = _\n             &quot;Server=(local);Initial Catalog=AdventureWorks;&quot; &amp; _\n                 &quot;Integrated Security=True&quot;\n            Dim builder As New SqlConnectionStringBuilder(connectString)\n            Console.WriteLine(&quot;Original: &quot; &amp; builder.ConnectionString)\n            Console.WriteLine(&quot;ApplicationName={0}&quot;, _\n                builder.ApplicationName)\n            builder.ApplicationName = &quot;My Application&quot;\n            Console.WriteLine(&quot;Modified: &quot; &amp; builder.ConnectionString)\n\n            Console.WriteLine(&quot;Press any key to finish.&quot;)\n            Console.ReadLine()\n\n        Catch ex As Exception\n            Console.WriteLine(ex.Message)\n        End Try\n    End Sub\nEnd Module\n</code></pre><p> The sample displays the following text in the console window:  </p>\n<pre><code>Original: Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True  \nApplicationName=&quot;.Net SqlClient Data Provider&quot;  \nModified: Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True;Application Name=&quot;My Application&quot;  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_AsynchronousProcessing\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_AsynchronousProcessing_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AsynchronousProcessing</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a Boolean value that indicates whether asynchronous processing is allowed by the connection created by using this connection string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AsynchronousProcessing { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>The value of the AsynchronousProcessing property, or <code>false</code> if no value has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Asynchronous Processing&quot; and &quot;async&quot; keys within the connection string. In order to take advantage of the asynchronous processing provided by the <a class=\"xref\" href=\"system.data.sqlclient.sqlcommand\" data-linktype=\"relative-path\">SqlCommand</a> object, this key/value pair must be included within the connection string of the associated <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example retrieves a connection string and verifies that the connection string is configured to allow for asynchronous processing. (In this case, the string comes from a procedure within the application, but in a production application, the connection string might come from a configuration file, or some other source.) Then, the example performs an asynchronous operation, updating values within a sample database on a background thread.  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.Async#1\">Imports System.Data.SqlClient\nImports System.Threading\n\n\nModule Module1\n    Sub Main()\n        &#39; Create a SqlConnectionStringBuilder instance, \n        &#39; and ensure that it is set up for asynchronous processing.\n        Dim builder As _\n         New SqlConnectionStringBuilder(GetConnectionString())\n        &#39; Asynchronous method calls won&#39;t work unless you\n        &#39; have added this option, or have added\n        &#39; the clause &quot;Asynchronous Processing=True&quot;\n        &#39; to the connection string.\n        builder.AsynchronousProcessing = True\n\n        Dim commandText As String = _\n         &quot;UPDATE Production.Product SET ReorderPoint = ReorderPoint + 1 &quot; &amp; _\n         &quot;WHERE ReorderPoint Is Not Null;&quot; &amp; _\n         &quot;WAITFOR DELAY &#39;0:0:3&#39;;&quot; &amp; _\n         &quot;UPDATE Production.Product SET ReorderPoint = ReorderPoint - 1 &quot; &amp; _\n         &quot;WHERE ReorderPoint Is Not Null&quot;\n        RunCommandAsynchronously(commandText, builder.ConnectionString)\n\n        Console.WriteLine(&quot;Press any key to finish.&quot;)\n        Console.ReadLine()\n    End Sub\n\n    Private Function GetConnectionString() As String\n        &#39; To avoid storing the connection string in your code,\n        &#39; you can retrieve it from a configuration file. \n        Return &quot;Data Source=(local);Integrated Security=SSPI;&quot; &amp; _\n          &quot;Initial Catalog=AdventureWorks&quot;\n    End Function\n\n    Private Sub RunCommandAsynchronously( _\n     ByVal commandText As String, ByVal connectionString As String)\n\n        &#39; Given command text and connection string, asynchronously execute\n        &#39; the specified command against the connection. For this example,\n        &#39; the code displays an indicator as it&#39;s working, verifying the \n        &#39; asynchronous behavior. \n        Using connection As New SqlConnection(connectionString)\n            Try\n                Dim count As Integer = 0\n                Dim command As New SqlCommand(commandText, connection)\n                connection.Open()\n                Dim result As IAsyncResult = command.BeginExecuteNonQuery()\n                While Not result.IsCompleted\n                    Console.WriteLine(&quot;Waiting {0}.&quot;, count)\n                    &#39; Wait for 1/10 second, so the counter\n                    &#39; doesn&#39;t consume all available resources \n                    &#39; on the main thread.\n                    Threading.Thread.Sleep(100)\n                    count += 1\n                End While\n                Console.WriteLine(&quot;Command complete. Affected {0} rows.&quot;, _\n                    command.EndExecuteNonQuery(result))\n            Catch ex As SqlException\n                Console.WriteLine( _\n                &quot;Error {0}: System.Data.SqlClient.SqlConnectionStringBuilder&quot;, _\n                ex.Number, ex.Message)\n            Catch ex As InvalidOperationException\n                Console.WriteLine(&quot;Error: {0}&quot;, ex.Message)\n            Catch ex As Exception\n                &#39; You might want to pass these errors\n                &#39; back out to the caller.\n                Console.WriteLine(&quot;Error: {0}&quot;, ex.Message)\n            End Try\n        End Using\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.Async#1\">using System.Data.SqlClient;\nusing System.Threading;\n\nclass Program\n{\n    static void Main()\n    {\n        // Create a SqlConnectionStringBuilder instance, \n        // and ensure that it is set up for asynchronous processing.\n        SqlConnectionStringBuilder builder =\n            new SqlConnectionStringBuilder(GetConnectionString());\n        // Asynchronous method calls won&#39;t work unless you\n        // have added this option, or have added\n        // the clause &quot;Asynchronous Processing=true&quot;\n        // to the connection string.\n        builder.AsynchronousProcessing = true;\n\n        string commandText =\n            &quot;UPDATE Production.Product SET ReorderPoint = ReorderPoint + 1 &quot; +\n            &quot;WHERE ReorderPoint IS NOT Null;&quot; +\n            &quot;WAITFOR DELAY &#39;0:0:3&#39;;&quot; +\n            &quot;UPDATE Production.Product SET ReorderPoint = ReorderPoint - 1 &quot; +\n            &quot;WHERE ReorderPoint IS NOT Null&quot;;\n        RunCommandAsynchronously(commandText, builder.ConnectionString);\n\n        Console.WriteLine(&quot;Press any key to finish.&quot;);\n        Console.ReadLine();\n    }\n\n    private static string GetConnectionString()\n    {\n        // To avoid storing the connection string in your code,\n        // you can retrieve it from a configuration file. \n        return &quot;Data Source=(local);Integrated Security=SSPI;&quot; +\n            &quot;Initial Catalog=AdventureWorks&quot;;\n    }\n\n    private static void RunCommandAsynchronously(string commandText, \n        string connectionString)\n    {\n        // Given command text and connection string, asynchronously execute\n        // the specified command against the connection. For this example,\n        // the code displays an indicator as it&#39;s working, verifying the \n        // asynchronous behavior. \n        using (SqlConnection connection = new SqlConnection(connectionString))\n        {\n            try\n            {\n                int count = 0;\n                SqlCommand command = new SqlCommand(commandText, connection);\n                connection.Open();\n                IAsyncResult result = command.BeginExecuteNonQuery();\n                while (!result.IsCompleted)\n                {\n                    Console.WriteLine(&quot;Waiting {0}.&quot;, count);\n                    // Wait for 1/10 second, so the counter\n                    // doesn&#39;t consume all available resources \n                    // on the main thread.\n                    Thread.Sleep(100);\n                    count += 1;\n                }\n                Console.WriteLine(&quot;Command complete. Affected {0} rows.&quot;,\n                    command.EndExecuteNonQuery(result));\n\n            }\n            catch (SqlException ex)\n            {\n                Console.WriteLine(\n                    &quot;Error {0}: System.Data.SqlClient.SqlConnectionStringBuilder&quot;, \n                    ex.Number, ex.Message);\n            }\n            catch (InvalidOperationException ex)\n            {\n                Console.WriteLine(&quot;Error: {0}&quot;, ex.Message);\n            }\n            catch (Exception ex)\n            {\n                // You might want to pass these errors\n                // back out to the caller.\n                Console.WriteLine(&quot;Error: {0}&quot;, ex.Message);\n            }\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_AttachDBFilename\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_AttachDBFilename_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AttachDBFilename</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a string that contains the name of the primary data file. This includes the full path name of an attachable database.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string AttachDBFilename { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of the <code>AttachDBFilename</code> property, or <code>String.Empty</code> if no value has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>To set the value to null, use <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;AttachDBFilename&quot;, &quot;extended properties&quot;, and &quot;initial file name&quot; keys within the connection string.  </p>\n<p> <code>AttachDBFilename</code> is only supported for primary data files with an .mdf extension.  </p>\n<p> An error will be generated if a log file exists in the same directory as the data file and the &#39;database&#39; keyword is used when attaching the primary data file. In this case, remove the log file. Once the database is attached, a new log file will be automatically generated based on the physical path.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> instance, and sets the <code>AttachDBFilename</code> property in order to specify the name of an attached data file.  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.AttachDBFilename#1\">Imports System.Data.SqlClient\n\nModule Module1\n    Sub Main()\n        Try\n            Dim connectString As String = _\n             &quot;Server=(local);&quot; &amp; _\n             &quot;Integrated Security=True&quot;\n            Dim builder As New SqlConnectionStringBuilder(connectString)\n            Console.WriteLine(&quot;Original: &quot; &amp; builder.ConnectionString)\n            Console.WriteLine(&quot;AttachDBFileName={0}&quot;, _\n             builder.AttachDBFilename)\n            builder.AttachDBFilename = &quot;C:\\MyDatabase.mdf&quot;\n            Console.WriteLine(&quot;Modified: &quot; &amp; builder.ConnectionString)\n\n            Using connection As New SqlConnection(builder.ConnectionString)\n                connection.Open()\n                &#39; Now use the open connection.\n                Console.WriteLine(&quot;Database = &quot; &amp; connection.Database)\n            End Using\n\n            Console.WriteLine(&quot;Press any key to finish.&quot;)\n            Console.ReadLine()\n\n        Catch ex As Exception\n            Console.WriteLine(ex.Message)\n        End Try\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.AttachDBFilename#1\">using System.Data.SqlClient;\n\nclass Program\n{\n    static void Main()\n    {\n        try\n        {\n            string connectString =\n                &quot;Server=(local);&quot; +\n                &quot;Integrated Security=true&quot;;\n            SqlConnectionStringBuilder builder =\n                new SqlConnectionStringBuilder(connectString);\n            Console.WriteLine(&quot;Original: &quot; + builder.ConnectionString);\n            Console.WriteLine(&quot;AttachDBFileName={0}&quot;, builder.AttachDBFilename);\n\n            builder.AttachDBFilename = @&quot;C:\\MyDatabase.mdf&quot;;\n            Console.WriteLine(&quot;Modified: &quot; + builder.ConnectionString);\n\n            using (SqlConnection connection = new SqlConnection(builder.ConnectionString))\n            {\n                connection.Open();\n                // Now use the open connection.\n                Console.WriteLine(&quot;Database = &quot; + connection.Database);\n            }\n            Console.WriteLine(&quot;Press any key to finish.&quot;);\n            Console.ReadLine();\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(ex.Message);\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Authentication\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Authentication_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Authentication</div>        \r\n          </div>\r\n    \r\n            <p>Gets the authentication of the connection string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.SqlClient.SqlAuthenticationMethod Authentication { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.sqlclient.sqlauthenticationmethod\" data-linktype=\"relative-path\">SqlAuthenticationMethod</a></div>\r\n                  </div>\r\n                  <p>The authentication of the connection string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ColumnEncryptionSetting\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ColumnEncryptionSetting_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnEncryptionSetting</div>        \r\n          </div>\r\n    \r\n            <p>Gets and sets the column encryption settings for the connection string builder.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.SqlClient.SqlConnectionColumnEncryptionSetting ColumnEncryptionSetting { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.sqlclient.sqlconnectioncolumnencryptionsetting\" data-linktype=\"relative-path\">SqlConnectionColumnEncryptionSetting</a></div>\r\n                  </div>\r\n                  <p>The column encryption settings for the connection string builder.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ConnectionReset\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ConnectionReset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectionReset</div>        \r\n          </div>\r\n    \r\n            <p>Obsolete. Gets or sets a Boolean value that indicates whether the connection is reset when drawn from the connection pool.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ConnectionReset { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>The value of the ConnectionReset property, or true if no value has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Connection Reset&quot; key within the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> connection string, which has been removed from version 3.5 SP1 of the .NET Framework.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ConnectRetryCount\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ConnectRetryCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectRetryCount</div>        \r\n          </div>\r\n    \r\n            <p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> The number of reconnections attempted after identifying that there was an idle connection failure. This must be an integer between 0 and 255. Default is 1. Set to 0 to disable reconnecting on idle connection failures. An <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> will be thrown if set to a value outside of the allowed range.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ConnectRetryCount { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of reconnections attempted after identifying that there was an idle connection failure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ConnectRetryInterval\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ConnectRetryInterval_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectRetryInterval</div>        \r\n          </div>\r\n    \r\n            <p>[Supported in the .NET Framework 4.5.1 and later versions]  </p>\n<p> Amount of time (in seconds) between each reconnection attempt after identifying that there was an idle connection failure. This must be an integer between 1 and 60. The default is 10 seconds. An <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> will be thrown if set to a value outside of the allowed range.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ConnectRetryInterval { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Amount of time (in seconds) between each reconnection attempt after identifying that there was an idle connection failure.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ConnectTimeout\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ConnectTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConnectTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the length of time (in seconds) to wait for a connection to the server before terminating the attempt and generating an error.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ConnectTimeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The value of the ConnectTimeout property, or 15 seconds if no value has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Connect Timeout&quot;, &quot;connection timeout&quot;, and &quot;timeout&quot; keys within the connection string.  </p>\n<p> When opening a connection to a Azure SQL Database, set the connection timeout to 30 seconds.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example first displays the contents of a connection string that does not specify the &quot;Connect Timeout&quot; value, sets the ConnectTimeout property, and then displays the new connection string.  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.ConnectTimeout#1\">Imports System.Data.SqlClient\n    \nModule Module1\n\n    Sub Main()\n        Try\n            Dim connectString As String = _\n             &quot;Server=(local);Initial Catalog=AdventureWorks;&quot; &amp; _\n             &quot;Integrated Security=True&quot;\n            Dim builder As New SqlConnectionStringBuilder(connectString)\n            Console.WriteLine(&quot;Original: &quot; &amp; builder.ConnectionString)\n            Console.WriteLine(&quot;ConnectTimeout={0}&quot;, _\n                builder.ConnectTimeout)\n            builder.ConnectTimeout = 100\n            Console.WriteLine(&quot;Modified: &quot; &amp; builder.ConnectionString)\n\n            Console.WriteLine(&quot;Press any key to finish.&quot;)\n            Console.ReadLine()\n\n        Catch ex As Exception\n            Console.WriteLine(ex.Message)\n        End Try\n    End Sub\n\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.ConnectTimeout#1\">using System.Data.SqlClient;\n\nclass Program\n{\n    static void Main()\n    {\n        try\n        {\n            string connectString =\n                &quot;Server=(local);Initial Catalog=AdventureWorks;&quot; +\n                &quot;Integrated Security=true&quot;;\n            SqlConnectionStringBuilder builder =\n                new SqlConnectionStringBuilder(connectString);\n            Console.WriteLine(&quot;Original: &quot; + builder.ConnectionString);\n            Console.WriteLine(&quot;ConnectTimeout={0}&quot;,\n                builder.ConnectTimeout);\n            builder.ConnectTimeout = 100;\n            Console.WriteLine(&quot;Modified: &quot; + builder.ConnectionString);\n\n            Console.WriteLine(&quot;Press any key to finish.&quot;);\n            Console.ReadLine();\n\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(ex.Message);\n        }\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ContextConnection\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ContextConnection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContextConnection</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether a client/server or in-process connection to SQL Server should be made.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ContextConnection { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>The value of the ContextConnection property, or <code>False</code> if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Context Connection&quot; key within the connection string.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection#System_Data_SqlClient_SqlConnection_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property returns <code>null</code> if the connection string for the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> is &quot;context connection=true&quot;.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_CurrentLanguage\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_CurrentLanguage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentLanguage</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the SQL Server Language record name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string CurrentLanguage { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of the CurrentLanguage property, or <code>String.Empty</code> if no value has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>To set the value to null, use <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Current Language&quot; and &quot;language&quot; keys within the connection string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_DataSource\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_DataSource_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataSource</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name or network address of the instance of SQL Server to connect to.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DataSource { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of the DataSource property, or <code>String.Empty</code> if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>To set the value to null, use <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Data Source&quot;, &quot;server&quot;, &quot;address&quot;, &quot;addr&quot;, and &quot;network address&quot; keys within the connection string. Regardless of which of these values has been supplied within the supplied connection string, the connection string created by the <code>SqlConnectionStringBuilder</code> will use the well-known &quot;Data Source&quot; key.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates that the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> class converts synonyms for the &quot;Data Source&quot; connection string key into the well-known key:  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.DataSource#1\">Imports System.Data.SqlClient\n\nModule Module1\n\n    Sub Main()\n        Dim builder As _\n         New SqlConnectionStringBuilder( _\n         &quot;Network Address=(local);Integrated Security=SSPI;&quot; &amp; _\n         &quot;Initial Catalog=AdventureWorks&quot;)\n\n        &#39; Display the connection string, which should now \n        &#39; contain the &quot;Data Source&quot; key, as opposed to the \n        &#39; supplied &quot;Network Address&quot;.\n        Console.WriteLine(builder.ConnectionString)\n\n        &#39; Retrieve the DataSource property:\n        Console.WriteLine(&quot;DataSource = &quot; &amp; builder.DataSource)\n\n        Console.WriteLine(&quot;Press any key to continue.&quot;)\n        Console.ReadLine()\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.DataSource#1\">using System.Data.SqlClient;\n\nclass Program\n{\n    static void Main()\n    {\n        SqlConnectionStringBuilder builder = new SqlConnectionStringBuilder(\n            &quot;Network Address=(local);Integrated Security=SSPI;&quot; +\n            &quot;Initial Catalog=AdventureWorks&quot;);\n\n        // Display the connection string, which should now \n        // contain the &quot;Data Source&quot; key, as opposed to the \n        // supplied &quot;Network Address&quot;.\n        Console.WriteLine(builder.ConnectionString);\n\n        // Retrieve the DataSource property.\n        Console.WriteLine(&quot;DataSource = &quot; + builder.DataSource);\n\n        Console.WriteLine(&quot;Press any key to continue.&quot;);\n        Console.ReadLine();\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Encrypt\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Encrypt_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Encrypt</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a Boolean value that indicates whether SQL Server uses SSL encryption for all data sent between the client and server if the server has a certificate installed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Encrypt { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>The value of the Encrypt property, or <code>false</code> if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Encrypt&quot; key within the connection string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Enlist\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Enlist_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Enlist</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a Boolean value that indicates whether the SQL Server connection pooler automatically enlists the connection in the creation thread&#39;s current transaction context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Enlist { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>The value of the Enlist property, or <code>true</code>if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Enlist&quot; key within the connection string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_FailoverPartner\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_FailoverPartner_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FailoverPartner</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name or address of the partner server to connect to if the primary server is down.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string FailoverPartner { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of the FailoverPartner property, or <code>String.Empty</code> if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>To set the value to null, use <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_InitialCatalog\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_InitialCatalog_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InitialCatalog</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the database associated with the connection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string InitialCatalog { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of the InitialCatalog property, or <code>String.Empty</code> if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>To set the value to null, use <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Initial Catalog&quot; and &quot;database&quot; keys within the connection string.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a simple connection string and then uses the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> class to add the name of the database to the connection string. The code displays the contents of the InitialCatalog property, just to verify that the class was able to convert from the synonym (&quot;Database&quot;) to the appropriate property value.  </p>\n<pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.InitialCatalog#1\">using System.Data.SqlClient;\n\nclass Program\n{\n    static void Main()\n    {\n        try\n        {\n            string connectString = &quot;Data Source=(local);&quot; +\n                &quot;Integrated Security=true&quot;;\n\n            SqlConnectionStringBuilder builder = \n                new SqlConnectionStringBuilder(connectString);\n            Console.WriteLine(&quot;Original: &quot; + builder.ConnectionString);\n\n            // Normally, you could simply set the InitialCatalog\n            // property of the SqlConnectionStringBuilder object. This\n            // example uses the default Item property (the C# indexer)\n            // and the &quot;Database&quot; string, simply to demonstrate that\n            // setting the value in this way results in the same\n            // connection string:\n            builder[&quot;Database&quot;] = &quot;AdventureWorks&quot;;\n            Console.WriteLine(&quot;builder.InitialCatalog = &quot; \n                + builder.InitialCatalog);\n            Console.WriteLine(&quot;Modified: &quot; + builder.ConnectionString);\n\n            using (SqlConnection connection = \n                new SqlConnection(builder.ConnectionString))\n            {\n                connection.Open();\n                // Now use the open connection.\n                Console.WriteLine(&quot;Database = &quot; + connection.Database);\n            }\n\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(ex.Message);\n        }\n\n        Console.WriteLine(&quot;Press any key to finish.&quot;);\n        Console.ReadLine();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.InitialCatalog#1\">Imports System.Data.SqlClient\n    \nModule Module1\n    Sub Main()\n        Try\n            Dim connectString As String = _\n             &quot;Data Source=(local);&quot; &amp; _\n             &quot;Integrated Security=True&quot;\n\n            Dim builder As New SqlConnectionStringBuilder(connectString)\n            Console.WriteLine(&quot;Original: &quot; &amp; builder.ConnectionString)\n\n            &#39; Normally, you could simply set the InitialCatalog\n            &#39; property of the SqlConnectionStringBuilder object. This\n            &#39; example uses the default Item property (the C# indexer)\n            &#39; and the &quot;Database&quot; string, simply to demonstrate that\n            &#39; setting the value in this way results in the same\n            &#39; connection string.\n            builder(&quot;Database&quot;) = &quot;AdventureWorks&quot;\n            Console.WriteLine(&quot;builder.InitialCatalog = &quot; _\n                &amp; builder.InitialCatalog)\n            Console.WriteLine(&quot;Modified: &quot; &amp; builder.ConnectionString)\n\n            Using connection As New SqlConnection(builder.ConnectionString)\n                connection.Open()\n                &#39; Now use the open connection.\n                Console.WriteLine(&quot;Database = &quot; &amp; connection.Database)\n            End Using\n\n        Catch ex As Exception\n            Console.WriteLine(ex.Message)\n        End Try\n\n        Console.WriteLine(&quot;Press any key to finish.&quot;)\n        Console.ReadLine()\n    End Sub\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_IntegratedSecurity\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_IntegratedSecurity_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IntegratedSecurity</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a Boolean value that indicates whether User ID and Password are specified in the connection (when <code>false</code>) or whether the current Windows account credentials are used for authentication (when <code>true</code>).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IntegratedSecurity { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>The value of the IntegratedSecurity property, or <code>false</code> if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Integrated Security&quot; and &quot;trusted_connection&quot; keys within the connection string.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example converts an existing connection string from using SQL Server Authentication to using integrated security. The example does its work by removing the user name and password from the connection string and then setting the IntegratedSecurity property of the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> object.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This example includes a password to demonstrate how <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.IntegratedSecurity#1\">using System.Data.SqlClient;\n\nclass Program\n{\n    static void Main()\n    {\n        try\n        {\n            string connectString =\n                &quot;Data Source=(local);User ID=ab;Password=MyPassword;&quot; +\n                &quot;Initial Catalog=AdventureWorks&quot;;\n\n            SqlConnectionStringBuilder builder = \n                new SqlConnectionStringBuilder(connectString);\n            Console.WriteLine(&quot;Original: &quot; + builder.ConnectionString);\n\n            // Use the Remove method\n            // in order to reset the user ID and password back to their\n            // default (empty string) values. Simply setting the \n            // associated property values to an empty string won&#39;t\n            // remove them from the connection string; you must\n            // call the Remove method.\n            builder.Remove(&quot;User ID&quot;);\n            builder.Remove(&quot;Password&quot;);\n\n            // Turn on integrated security:\n            builder.IntegratedSecurity = true;\n\n            Console.WriteLine(&quot;Modified: &quot; + builder.ConnectionString);\n\n            using (SqlConnection connection = \n                       new SqlConnection(builder.ConnectionString))\n            {\n                connection.Open();\n                // Now use the open connection.\n                Console.WriteLine(&quot;Database = &quot; + connection.Database);\n            }\n\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(ex.Message);\n        }\n\n        Console.WriteLine(&quot;Press any key to finish.&quot;);\n        Console.ReadLine();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.IntegratedSecurity#1\">Imports System.Data.SqlClient\n    \nModule Module1\n    Sub Main()\n        Try\n            Dim connectString As String = _\n             &quot;Data Source=(local);User ID=ab;Password=MyPassword;&quot; &amp; _\n             &quot;Initial Catalog=AdventureWorks&quot;\n\n            Dim builder As New SqlConnectionStringBuilder(connectString)\n            Console.WriteLine(&quot;Original: &quot; &amp; builder.ConnectionString)\n\n            &#39; Use the Remove method\n            &#39; in order to reset the user ID and password back to their\n            &#39; default (empty string) values. Simply setting the \n            &#39; associated property values to an empty string won&#39;t\n            &#39; remove them from the connection string; you must\n            &#39; call the Remove method.\n            builder.Remove(&quot;User ID&quot;)\n            builder.Remove(&quot;Password&quot;)\n\n            &#39; Turn on integrated security.\n            builder.IntegratedSecurity = True\n\n            Console.WriteLine(&quot;Modified: &quot; &amp; builder.ConnectionString)\n\n            Using connection As New SqlConnection(builder.ConnectionString)\n                connection.Open()\n                &#39; Now use the open connection.\n                Console.WriteLine(&quot;Database = &quot; &amp; connection.Database)\n            End Using\n\n        Catch ex As Exception\n            Console.WriteLine(ex.Message)\n        End Try\n\n        Console.WriteLine(&quot;Press any key to finish.&quot;)\n        Console.ReadLine()\n    End Sub\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_IsFixedSize\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_IsFixedSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsFixedSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> has a fixed size.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsFixedSize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> in every case, because the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> supplies a fixed-size collection of key/value pairs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Item_System_String_\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(String)</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the value associated with the specified key. In C#, this property is the indexer.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override object this[string keyword] { get; set; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyword</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key of the item to get or set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The value associated with the specified key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>keyword</code> is a null reference (<code>Nothing</code> in Visual Basic).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.keynotfoundexception\" data-linktype=\"relative-path\">KeyNotFoundException</a></div>\r\n                  </div>\r\n                  <p>Tried to add a key that does not exist within the available keys.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></div>\r\n                  </div>\r\n                  <p>Invalid value within the connection string (specifically, a Boolean or numeric value was expected but not supplied).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> contains a fixed-size dictionary, trying to add a key that does not exist within the dictionary throws a <a class=\"xref\" href=\"system.collections.generic.keynotfoundexception\" data-linktype=\"relative-path\">KeyNotFoundException</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code, in a console application, creates a new <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> and adds key/value pairs to its connection string, using the Item property.  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.Item#1\">Module Module1\n    Sub Main()\n        Dim builder As New SqlConnectionStringBuilder\n        builder.Item(&quot;Data Source&quot;) = &quot;(local)&quot;\n        &#39; Item is the default property, so \n        &#39; you needn&#39;t include it in the reference.\n        builder(&quot;Integrated Security&quot;) = True\n        builder.Item(&quot;Initial Catalog&quot;) = &quot;AdventureWorks&quot;\n\n        &#39; Overwrite the existing value for the Data Source value.\n        builder.Item(&quot;Data Source&quot;) = &quot;.&quot;\n\n        Console.WriteLine(builder.ConnectionString)\n        Console.WriteLine()\n        Console.WriteLine(&quot;Press Enter to continue.&quot;)\n        Console.ReadLine()\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.Item#1\">class Program\n{\n    static void Main()\n    {\n        SqlConnectionStringBuilder builder = \n            new SqlConnectionStringBuilder();\n        builder[&quot;Data Source&quot;] = &quot;(local)&quot;;\n        builder[&quot;Integrated Security&quot;] = true;\n        builder[&quot;Initial Catalog&quot;] = &quot;AdventureWorks&quot;;\n\n        // Overwrite the existing value for the Data Source value.\n        builder[&quot;Data Source&quot;] = &quot;.&quot;;\n\n        Console.WriteLine(builder.ConnectionString);\n        Console.WriteLine();\n        Console.WriteLine(&quot;Press Enter to continue.&quot;);\n        Console.ReadLine();\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Keys\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Keys_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Keys</div>        \r\n          </div>\r\n    \r\n            <p>Gets an <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> that contains the keys in the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Collections.ICollection Keys { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> that contains the keys in the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The order of the values in the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> is unspecified, but it is the same order as the associated values in the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> returned by the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder#System_Data_SqlClient_SqlConnectionStringBuilder_Values_\" data-linktype=\"relative-path\">Values</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following console application example creates a new <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a>. The code loops through the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> returned by the Keys property displaying the key/value pairs.  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.Keys#1\">Imports System.Data.SqlClient\n\nModule Module1\n    Sub Main()\n        Dim builder As New SqlConnectionStringBuilder\n        builder.DataSource = &quot;(local)&quot;\n        builder.IntegratedSecurity = True\n        builder.InitialCatalog = &quot;AdventureWorks&quot;\n\n        &#39; Loop through the collection of keys, displaying \n        &#39; the key and value for each item.\n        For Each key As String In builder.Keys\n            Console.WriteLine(&quot;{0}={1}&quot;, key, builder(key))\n        Next\n\n        Console.WriteLine()\n        Console.WriteLine(&quot;Press Enter to continue.&quot;)\n        Console.ReadLine()\n    End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.Keys#1\">using System.Data.SqlClient;\n\nclass Program\n{\n    static void Main()\n    {\n        SqlConnectionStringBuilder builder =\n            new SqlConnectionStringBuilder();\n        builder.DataSource = &quot;(local)&quot;;\n        builder.IntegratedSecurity = true;\n        builder.InitialCatalog = &quot;AdventureWorks&quot;;\n\n        // Loop through the collection of keys, displaying \n        // the key and value for each item:\n        foreach (string key in builder.Keys)\n            Console.WriteLine(&quot;{0}={1}&quot;, key, builder[key]);\n\n        Console.WriteLine();\n        Console.WriteLine(&quot;Press Enter to continue.&quot;);\n        Console.ReadLine();\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_LoadBalanceTimeout\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_LoadBalanceTimeout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadBalanceTimeout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the minimum time, in seconds, for the connection to live in the connection pool before being destroyed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int LoadBalanceTimeout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The value of the LoadBalanceTimeout property, or 0 if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Load Balance Timeout&quot; and &quot;connection lifetime&quot; keys within the connection string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_MaxPoolSize\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_MaxPoolSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MaxPoolSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the maximum number of connections allowed in the connection pool for this specific connection string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int MaxPoolSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The value of the MaxPoolSize property, or 100 if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Max Pool Size&quot; key within the connection string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_MinPoolSize\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_MinPoolSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MinPoolSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the minimum number of connections allowed in the connection pool for this specific connection string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int MinPoolSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The value of the MinPoolSize property, or 0 if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Min Pool Size&quot; key within the connection string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_MultipleActiveResultSets\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_MultipleActiveResultSets_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MultipleActiveResultSets</div>        \r\n          </div>\r\n    \r\n            <p>When true, an application can maintain multiple active result sets (MARS). When false, an application must process or cancel all result sets from one batch before it can execute any other batch on that connection.  </p>\n<p> For more information, see <a href=\"http://msdn.microsoft.com//library/cfa084cz.aspx\" data-linktype=\"external\">Multiple Active Result Sets (MARS)</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool MultipleActiveResultSets { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>The value of the MultipleActiveResultSets property, or <code>false</code> if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;MultipleActiveResultSets&quot; key within the connection string.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example explicitly disables the Multiple Active Result Sets feature.  </p>\n<pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.MARS#1\">using System.Data.SqlClient;\n\nclass Program\n{\n    static void Main()\n    {\n        SqlConnectionStringBuilder builder = new SqlConnectionStringBuilder();\n        builder.DataSource = &quot;(local)&quot;;\n        builder.IntegratedSecurity = true;\n        builder.InitialCatalog = &quot;AdventureWorks&quot;;\n\n        // The connection does not allow multiple active result sets\n        // by default, so this line of code explicitly\n        // enables this feature. Note that this feature is \n        // only available when programming against SQL Server 2005\n        // or later.\n        builder.MultipleActiveResultSets = true;\n\n        Console.WriteLine(builder.ConnectionString);\n        Console.WriteLine();\n\n        Console.WriteLine(&quot;Press Enter to continue.&quot;);\n        Console.ReadLine();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.MARS#1\">Imports System.Data.SqlClient\nModule Module1\n    Sub Main()\n        Dim builder As New SqlConnectionStringBuilder\n        builder.DataSource = &quot;(local)&quot;\n        builder.IntegratedSecurity = True\n        builder.InitialCatalog = &quot;AdventureWorks&quot;\n\n        &#39; The connection does not allow multiple active result sets\n        &#39; by default, so this line of code explicitly\n        &#39; enables this feature. Note that this feature is \n        &#39; only available when programming against SQL Server 2005\n        &#39; or later.\n        builder.MultipleActiveResultSets = True\n\n        Console.WriteLine(builder.ConnectionString)\n        Console.WriteLine()\n\n        Console.WriteLine(&quot;Press Enter to continue.&quot;)\n        Console.ReadLine()\n    End Sub\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_MultiSubnetFailover\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_MultiSubnetFailover_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MultiSubnetFailover</div>        \r\n          </div>\r\n    \r\n            <p>If your application is connecting to an AlwaysOn availability group (AG) on different subnets, setting MultiSubnetFailover=true provides faster detection of and connection to the (currently) active server. For more information about SqlClient support for Always On Availability Groups, see <a href=\"../Topic/SqlClient%20Support%20for%20High%20Availability,%20Disaster%20Recovery.md\" data-linktype=\"relative-path\">SqlClient Support for High Availability, Disaster Recovery</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool MultiSubnetFailover { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>Returns <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> indicating the current value of the property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_NetworkLibrary\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_NetworkLibrary_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NetworkLibrary</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a string that contains the name of the network library used to establish a connection to the SQL Server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string NetworkLibrary { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of the NetworkLibrary property, or <code>String.Empty</code> if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>To set the value to null, use <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Network Library&quot;, &quot;network&quot;, and &quot;net&quot; keys within the connection string.  </p>\n<p> Supported values for this property include dbnmpntw (Named Pipes), dbmsrpcn (Multiprotocol), dbmsadsn (AppleTalk), dbmsgnet (VIA), dbmslpcn (Shared Memory) and dbmsspxn (IPX/SPX), and dbmssocn (TCP/IP). The corresponding network DLL must be installed on the system to which you connect. If you do not specify a network and you use a local server (for example, &quot;.&quot; or &quot;(local)&quot;), Shared Memory is used.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_PacketSize\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_PacketSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PacketSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the size in bytes of the network packets used to communicate with an instance of SQL Server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int PacketSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The value of the PacketSize property, or 8000 if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Packet Size&quot; key within the connection string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Password\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Password_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Password</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the password for the SQL Server account.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Password { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of the Password property, or <code>String.Empty</code> if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The password was incorrectly set to null.  See code sample below.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Password&quot; and &quot;pwd&quot; keys within the connection string.  </p>\n<p> If Password has not been set and you retrieve the value, the return value is <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>. To reset the password for the connection string, pass null to the Item property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how to set Password.  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.Password.2#1\">Imports System.Data.SqlClient\nPublic Class Program\n   Public Shared Sub Main()\n\n      Dim builder As New SqlConnectionStringBuilder()\n\n      builder(&quot;Password&quot;) = Nothing\n      Dim aa As String = builder.Password\n      Console.WriteLine(aa.Length)\n\n      builder(&quot;Password&quot;) = &quot;??????&quot;\n      aa = builder.Password\n      Console.WriteLine(aa.Length)\n\n      Try\n         builder.Password = Nothing\n      Catch e As ArgumentNullException\n         Console.WriteLine(&quot;{0}&quot;, e)\n      End Try\n   End Sub\nEnd Class\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.Password.2#1\">using System;\nusing System.Data.SqlClient;\n\nclass Program {\n   public static void Main() {\n      SqlConnectionStringBuilder builder = new SqlConnectionStringBuilder();\n\n      builder[&quot;Password&quot;] = null;\n      string aa = builder.Password;\n      Console.WriteLine(aa.Length);\n\n      builder[&quot;Password&quot;] = &quot;??????&quot;;\n      aa = builder.Password;\n      Console.WriteLine(aa.Length);\n\n      try {\n         builder.Password = null;\n      }\n      catch (ArgumentNullException e) {\n         Console.WriteLine(&quot;{0}&quot;, e);\n      }\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_PersistSecurityInfo\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_PersistSecurityInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PersistSecurityInfo</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a Boolean value that indicates if security-sensitive information, such as the password, is not returned as part of the connection if the connection is open or has ever been in an open state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool PersistSecurityInfo { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>The value of the PersistSecurityInfo property, or <code>false</code> if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Persist Security Info&quot; and &quot;persistsecurityinfo&quot; keys within the connection string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_PoolBlockingPeriod\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_PoolBlockingPeriod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PoolBlockingPeriod</div>        \r\n          </div>\r\n    \r\n            <p>The blocking period behavior for a connection pool.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Data.SqlClient.PoolBlockingPeriod PoolBlockingPeriod { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.data.sqlclient.poolblockingperiod\" data-linktype=\"relative-path\">PoolBlockingPeriod</a></div>\r\n                  </div>\r\n                  <p>The available blocking period settings.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When connection pooling is enabled and  a timeout error or other login error occurs, an exception will be thrown and subsequent connection attempts will fail for the next five seconds, the &quot;blocking period&quot;. If the application attempts to connect within the blocking period, the first exception will be thrown again. Subsequent failures after a blocking period ends will result in a new blocking period that is twice as long as the previous blocking period, up to a maximum of one minute.  </p>\n<p> Attempting to connect to Azure SQL databases can fail with transient errors which are typically recovered within a few seconds. However, with the connection pool blocking period behavior, you may not be able to reach your database for extensive periods even though the database is  available. This is especially problematic for apps that need to render fast. The <strong>PoolBlockingPeriod</strong> enables you to select the blocking period best suited for your app. See the <a href=\"../Topic/PoolBlockingPeriod%20Enumeration.md\" data-linktype=\"relative-path\">PoolBlockingPeriod Enumeration</a> for available settings.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Pooling\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Pooling_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Pooling</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a Boolean value that indicates whether the connection will be pooled or explicitly opened every time that the connection is requested.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Pooling { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>The value of the Pooling property, or <code>true</code> if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Pooling&quot; key within the connection string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Replication\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Replication_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Replication</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a Boolean value that indicates whether replication is supported using the connection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Replication { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>The value of the Replication property, or false if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Replication&quot; key within the connection string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_TransactionBinding\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_TransactionBinding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransactionBinding</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a string value that indicates how the connection maintains its association with an enlisted <code>System.Transactions</code> transaction.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string TransactionBinding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of the TransactionBinding property, or <code>String.Empty</code> if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Transaction Binding keywords in a <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection#System_Data_SqlClient_SqlConnection_ConnectionString_\" data-linktype=\"relative-path\">ConnectionString</a> control how a <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection\" data-linktype=\"relative-path\">SqlConnection</a> binds to an enlisted <a class=\"xref\" href=\"system.transactions.transaction\" data-linktype=\"relative-path\">Transaction</a>.  </p>\n<p> The following table shows the possible values for the TransactionBinding property:  </p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Implicit Unbind</td>\n<td>The default. Causes the connection to detach from the transaction when it ends. After detaching, additional requests on the connection are performed in autocommit mode. The <a class=\"xref\" href=\"system.transactions.transaction#System_Transactions_Transaction_Current_\" data-linktype=\"relative-path\">Current</a> property is not checked when executing requests while the transaction is active. After the transaction has ended, additional requests are performed in autocommit mode.</td>\n</tr>\n<tr>\n<td>Explicit Unbind</td>\n<td>Causes the connection to remain attached to the transaction until the connection is closed or until <a class=\"xref\" href=\"system.data.sqlclient.sqlconnection#System_Data_SqlClient_SqlConnection_EnlistTransaction_\" data-linktype=\"relative-path\">EnlistTransaction</a> is called with a <code>null</code> (<code>Nothing</code> in Visual Basic) value. An <a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a> is thrown if <a class=\"xref\" href=\"system.transactions.transaction#System_Transactions_Transaction_Current_\" data-linktype=\"relative-path\">Current</a> is not the enlisted transaction or if the enlisted transaction is not active. This behavior enforces the strict scoping rules required for <a class=\"xref\" href=\"system.transactions.transactionscope\" data-linktype=\"relative-path\">TransactionScope</a> support.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_TransparentNetworkIPResolution\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_TransparentNetworkIPResolution_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TransparentNetworkIPResolution</div>        \r\n          </div>\r\n    \r\n            <p>When the value of this key is set to <code>true</code>, the application is required to retrieve all IP addresses for a particular DNS entry and attempt to connect with the first one in the list. If the connection is not established within 0.5 seconds, the application will try to connect to all others in parallel. When the first answers, the application will establish the connection with the respondent IP address.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool TransparentNetworkIPResolution { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A boolean value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <code>MultiSubnetFailover</code> key is set to <code>true</code>, <code>TransparentNetworkIPResolution</code> is ignored.  </p>\n<p> If the <code>Failover Partner</code> key is set, <code>TransparentNetworkIPResolution</code> is ignored.  </p>\n<p> The value of this key must be <code>true</code>, <code>false</code>, <code>yes</code>, or <code>no</code>.  </p>\n<p> A value of <code>yes</code> is treated the same as a value of <code>true</code>.  </p>\n<p> A value of <code>no</code> is treated the same as a value of <code>false</code>.  </p>\n<p> This key defaults to <code>false</code> when:  </p>\n<ul>\n<li><p>Connecting to Azure SQL Database where the data source ends with:  </p>\n<ul>\n<li><p>.database.chinacloudapi.cn  </p>\n</li>\n<li><p>.database.usgovcloudapi.net  </p>\n</li>\n<li><p>.database.cloudapi.de  </p>\n</li>\n<li><p>.database.windows.net  </p>\n</li>\n</ul>\n</li>\n<li><p><code>Authentication</code> is &#39;Active Directory Password&#39; or &#39;Active Directory Integrated&#39;  </p>\n<p>Otherwise it defaults to <code>true</code>.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_TrustServerCertificate\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_TrustServerCertificate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TrustServerCertificate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether the channel will be encrypted while bypassing walking the certificate chain to validate trust.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool TrustServerCertificate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <code>Boolean</code>. Recognized values are <code>true</code>, <code>false</code>, <code>yes</code>, and <code>no</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When <code>TrustServerCertificate</code> is set to <code>true</code>, the transport layer will use SSL to encrypt the channel and bypass walking the certificate chain to validate trust. If <code>TrustServerCertificate</code> is set to <code>true</code> and encryption is turned on, the encryption level specified on the server will be used even if <code>Encrypt</code> is set to <code>false</code>. The connection will fail otherwise.  </p>\n<p> For more information, see &quot;Encryption Hierarchy&quot; and &quot;Using Encryption Without Validation&quot; in SQL Server Books Online.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_TypeSystemVersion\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_TypeSystemVersion_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TypeSystemVersion</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a string value that indicates the type system the application expects.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string TypeSystemVersion { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The following table shows the possible values for the TypeSystemVersion property:  </p>\n <table><thead><tr><th> Value<br>\n </th><th> Description<br>\n </th></tr></thead><tbody><tr><td> SQL Server 2005<br>\n </td><td> Uses the SQL Server 2005 type system. No conversions are made for the current version of ADO.NET.<br>\n </td></tr><tr><td> SQL Server 2008<br>\n </td><td> Uses the SQL Server 2008 type system.<br>\n </td></tr><tr><td> Latest<br>\n </td><td> Use the latest version than this client-server pair can handle. This will automatically move forward as the client and server components are upgraded.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>TypeSystemVersion</code> property can be used to specify a down-level version of SQL Server for applications written against that version. This avoids possible problems with incompatible types in a newer version of SQL Server that may cause the application to break.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_UserID\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_UserID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserID</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the user ID to be used when connecting to SQL Server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string UserID { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of the UserID property, or <code>String.Empty</code> if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>To set the value to null, use <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;User ID&quot;, &quot;user&quot;, and &quot;uid&quot; keys within the connection string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_UserInstance\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_UserInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserInstance</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether to redirect the connection from the default SQL Server Express instance to a runtime-initiated instance running under the account of the caller.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool UserInstance { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>The value of the UserInstance property, or <code>False</code> if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>To set the value to null, use <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;User Instance&quot; key within the connection string.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This feature is available only with the SQL Server Express Edition. For more information on user instances, see <a href=\"../Topic/SQL%20Server%20Express%20User%20Instances.md\" data-linktype=\"relative-path\">SQL Server Express User Instances</a> and &quot;User Instances for Non-Administrators&quot; in SQL Server Books Online.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Values\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Values_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Values</div>        \r\n          </div>\r\n    \r\n            <p>Gets an <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> that contains the values in the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Collections.ICollection Values { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> that contains the values in the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The order of the values in the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> is unspecified, but it is the same order as the associated keys in the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> returned by the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder#System_Data_SqlClient_SqlConnectionStringBuilder_Keys_\" data-linktype=\"relative-path\">Keys</a> property. Because each instance of the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> always contains the same fixed set of keys, the Values property always returns the values corresponding to the fixed set of keys, in the same order as the keys.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example first creates a new <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a>, and then iterates through all the values within the object.  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.Values#1\">Imports System.Data.SqlClient\n    \nModule Module1\n    Sub Main()\n        Dim builder As _\n         New SqlConnectionStringBuilder(GetConnectionString())\n\n        &#39; Loop through each of the values, displaying the contents.\n        For Each value As Object In builder.Values\n            Console.WriteLine(value)\n        Next\n\n        Console.WriteLine(&quot;Press any key to continue.&quot;)\n        Console.ReadLine()\n    End Sub\n\n    Private Function GetConnectionString() As String\n        &#39; To avoid storing the connection string in your code,\n        &#39; you can retrieve it from a configuration file. \n        Return &quot;Data Source=(local);Integrated Security=SSPI;&quot; &amp; _\n          &quot;Initial Catalog=AdventureWorks; Asynchronous Processing=True&quot;\n    End Function\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.Values#1\">using System.Data.SqlClient;\n\nclass Program\n{\n    static void Main()\n    {\n        SqlConnectionStringBuilder builder = \n            new SqlConnectionStringBuilder(GetConnectionString());\n\n        // Loop through each of the values, displaying the contents.\n        foreach (object value in builder.Values)\n            Console.WriteLine(value);\n\n        Console.WriteLine(&quot;Press any key to continue.&quot;);\n        Console.ReadLine();\n    }\n\n    private static string GetConnectionString()\n    {\n        // To avoid storing the connection string in your code,\n        // you can retrieve it from a configuration file. \n        return &quot;Data Source=(local);Integrated Security=SSPI;&quot; +\n            &quot;Initial Catalog=AdventureWorks; Asynchronous Processing=true&quot;;\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_WorkstationID\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_WorkstationID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WorkstationID</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the workstation connecting to SQL Server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string WorkstationID { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of the WorkstationID property, or <code>String.Empty</code> if none has been supplied.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>To set the value to null, use <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">Value</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property corresponds to the &quot;Workstation ID&quot; and &quot;wsid&quot; keys within the connection string.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Clear\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clear()</div>        \r\n          </div>\r\n    \r\n            <p>Clears the contents of the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Clear ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_Clear_\" data-linktype=\"relative-path\">Clear</a> method removes all key/value pairs from the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a>, and resets all corresponding properties. This includes setting the <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_Count_\" data-linktype=\"relative-path\">Count</a> property to 0, and setting the <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_ConnectionString_\" data-linktype=\"relative-path\">ConnectionString</a> property to an empty string.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates calling the <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_Clear_\" data-linktype=\"relative-path\">Clear</a> method. This example populates the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> with some key/value pairs, and then calls the <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_Clear_\" data-linktype=\"relative-path\">Clear</a> method and shows the results.  </p>\n<pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.Clear#1\">using System.Data.SqlClient;\n\nclass Program\n{\n    static void Main()\n    {\n        SqlConnectionStringBuilder builder = new SqlConnectionStringBuilder();\n        builder.DataSource = &quot;(local)&quot;;\n        builder.IntegratedSecurity = true;\n        builder.InitialCatalog = &quot;AdventureWorks&quot;;\n        Console.WriteLine(&quot;Initial connection string: &quot; + builder.ConnectionString);\n\n        builder.Clear();\n        Console.WriteLine(&quot;After call to Clear, count = &quot; + builder.Count);\n        Console.WriteLine(&quot;Cleared connection string: &quot; + builder.ConnectionString);\n        Console.WriteLine();\n\n        Console.WriteLine(&quot;Press Enter to continue.&quot;);\n        Console.ReadLine();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.Clear#1\">Imports System.Data.SqlClient\n    \nModule Module1\n    Sub Main()\n        Dim builder As New SqlConnectionStringBuilder\n        builder.DataSource = &quot;(local)&quot;\n        builder.IntegratedSecurity = True\n        builder.InitialCatalog = &quot;AdventureWorks&quot;\n        Console.WriteLine(&quot;Initial connection string: &quot; &amp; builder.ConnectionString)\n\n        builder.Clear()\n        Console.WriteLine(&quot;After call to Clear, count = &quot; &amp; builder.Count)\n        Console.WriteLine(&quot;Cleared connection string: &quot; &amp; builder.ConnectionString)\n        Console.WriteLine()\n\n        Console.WriteLine(&quot;Press Enter to continue.&quot;)\n        Console.ReadLine()\n    End Sub\nEnd Module\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ContainsKey_System_String_\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ContainsKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ContainsKey(String)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> contains a specific key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool ContainsKey (string keyword);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyword</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key to locate in the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>true if the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> contains an element that has the specified key; otherwise, false.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>keyword</code> is null (<code>Nothing</code> in Visual Basic)</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> contains a fixed-size collection of key/value pairs, the <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_ContainsKey_\" data-linktype=\"relative-path\">ContainsKey</a> method determines only if a particular key name is valid.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> instance, sets some of its properties, and then tries to determine whether various keys exist within the object by calling the <strong>ContainsKey</strong> method.  </p>\n<pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.ContainsKey#1\">using System.Data.SqlClient;\n\nclass Program\n{\n    static void Main()\n    {\n        SqlConnectionStringBuilder builder =\n            new SqlConnectionStringBuilder(GetConnectionString());\n        Console.WriteLine(&quot;Connection string = &quot; + builder.ConnectionString);\n\n        // Keys you have provided return true.\n        Console.WriteLine(builder.ContainsKey(&quot;Server&quot;));\n\n        // Comparison is case insensitive, and synonyms\n        // are automatically converted to their &quot;well-known&quot;\n        // names.\n        Console.WriteLine(builder.ContainsKey(&quot;Database&quot;));\n\n        // Keys that are valid but have not been set return true.\n        Console.WriteLine(builder.ContainsKey(&quot;Max Pool Size&quot;));\n\n        // Keys that do not exist return false.\n        Console.WriteLine(builder.ContainsKey(&quot;MyKey&quot;));\n\n        Console.WriteLine(&quot;Press Enter to continue.&quot;);\n        Console.ReadLine();\n\n    }\n\n    private static string GetConnectionString()\n    {\n        // To avoid storing the connection string in your code,\n        // you can retrieve it from a configuration file. \n        return &quot;Server=(local);Integrated Security=SSPI;&quot; +\n            &quot;Initial Catalog=AdventureWorks&quot;;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.ContainsKey#1\">Imports System.Data.SqlClient\n\nModule Module1\n    Sub Main()\n        Dim builder As _\n         New SqlConnectionStringBuilder(GetConnectionString())\n        Console.WriteLine(&quot;Connection string = &quot; &amp; builder.ConnectionString)\n\n        &#39; Keys you have provided return true.\n        Console.WriteLine(builder.ContainsKey(&quot;Server&quot;))\n\n        &#39; Comparison is case insensitive, and synonyms\n        &#39; are automatically converted to their &quot;well-known&quot;\n        &#39; names.\n        Console.WriteLine(builder.ContainsKey(&quot;Database&quot;))\n\n        &#39; Keys that are valid but have not been set return true.\n        Console.WriteLine(builder.ContainsKey(&quot;Max Pool Size&quot;))\n\n        &#39; Keys that do not exist return false.\n        Console.WriteLine(builder.ContainsKey(&quot;MyKey&quot;))\n\n        Console.WriteLine(&quot;Press Enter to continue.&quot;)\n        Console.ReadLine()\n    End Sub\n\n    Private Function GetConnectionString() As String\n        &#39; To avoid storing the connection string in your code,\n        &#39; you can retrieve it from a configuration file. \n        Return &quot;Server=(local);Integrated Security=SSPI;&quot; &amp; _\n          &quot;Initial Catalog=AdventureWorks&quot;\n    End Function\nEnd Module\n</code></pre><p> The example displays the following output in the console window:  </p>\n<pre><code>Connection string = Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True  \nTrue  \nTrue  \nTrue  \nFalse  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_GetProperties_System_Collections_Hashtable_\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_GetProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetProperties(Hashtable)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void GetProperties (System.Collections.Hashtable propertyDescriptors);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>propertyDescriptors</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.hashtable\" data-linktype=\"relative-path\">Hashtable</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Remove_System_String_\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_Remove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Remove(String)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the entry with the specified key from the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Remove (string keyword);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyword</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key of the key/value pair to be removed from the connection string in this <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key existed within the connection string and was removed; <code>false</code> if the key did not exist.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>keyword</code> is null (<code>Nothing</code> in Visual Basic)</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Because the <strong>Remove</strong> method returns a value that indicates its success, it is not required to look for a key before trying to remove the key/value pair from the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> instance. Because the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> maintains a fixed-size collection of key/value pairs, calling the Remove method simply resets the value of the key/value pair back to its default value.  </p>\n<p> Because the collection of keys supported by the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> is fixed, every item within the collection has a known default value. The following table lists the keys, and the value for each when the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> is first initialized, or after the Remove method has been called.  </p>\n<table>\n<thead>\n<tr>\n<th>Key</th>\n<th>Default value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Application Name</td>\n<td>&quot;.Net SqlClient Data Provider&quot;</td>\n</tr>\n<tr>\n<td>Asynchronous Processing</td>\n<td>False</td>\n</tr>\n<tr>\n<td>AttachDBFilename</td>\n<td>Empty string</td>\n</tr>\n<tr>\n<td>Connection Timeout</td>\n<td>15</td>\n</tr>\n<tr>\n<td>Context Connection</td>\n<td>False</td>\n</tr>\n<tr>\n<td>Current Language</td>\n<td>Empty string</td>\n</tr>\n<tr>\n<td>Data Source</td>\n<td>Empty string</td>\n</tr>\n<tr>\n<td>Encrypt</td>\n<td>False</td>\n</tr>\n<tr>\n<td>Enlist</td>\n<td>True</td>\n</tr>\n<tr>\n<td>Failover Partner</td>\n<td>Empty string</td>\n</tr>\n<tr>\n<td>Initial Catalog</td>\n<td>Empty string</td>\n</tr>\n<tr>\n<td>Integrated Security</td>\n<td>False</td>\n</tr>\n<tr>\n<td>Load Balance Timeout</td>\n<td>0</td>\n</tr>\n<tr>\n<td>Max Pool Size</td>\n<td>100</td>\n</tr>\n<tr>\n<td>Min Pool Size</td>\n<td>0</td>\n</tr>\n<tr>\n<td>MultipleActiveResultSets</td>\n<td>False</td>\n</tr>\n<tr>\n<td>Network Library</td>\n<td>Empty string</td>\n</tr>\n<tr>\n<td>Packet Size</td>\n<td>8000</td>\n</tr>\n<tr>\n<td>Password</td>\n<td>Empty string</td>\n</tr>\n<tr>\n<td>Persist Security Info</td>\n<td>False</td>\n</tr>\n<tr>\n<td>Pooling</td>\n<td>True</td>\n</tr>\n<tr>\n<td>Replication</td>\n<td>False</td>\n</tr>\n<tr>\n<td>Transaction Binding</td>\n<td>Implicit Unbind</td>\n</tr>\n<tr>\n<td>User ID</td>\n<td>Empty string</td>\n</tr>\n<tr>\n<td>User Instance</td>\n<td>False</td>\n</tr>\n<tr>\n<td>Workstation ID</td>\n<td>Empty string</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example converts an existing connection string from using Windows Authentication to using integrated security. The example works by removing the user name and password from the connection string, and then setting the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder#System_Data_SqlClient_SqlConnectionStringBuilder_IntegratedSecurity_\" data-linktype=\"relative-path\">IntegratedSecurity</a> property of the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> object.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This example includes a password to demonstrate how <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  </p>\n</div>\n<pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.Remove#1\">using System.Data.SqlClient;\n\nclass Program\n{\n    static void Main()\n    {\n        try\n        {\n            string connectString =\n                &quot;Data Source=(local);User ID=ab;Password= a1Pass@@11;&quot; +\n                &quot;Initial Catalog=AdventureWorks&quot;;\n\n            SqlConnectionStringBuilder builder = new SqlConnectionStringBuilder(connectString);\n            Console.WriteLine(&quot;Original: &quot; + builder.ConnectionString);\n\n            // Use the Remove method\n            // in order to reset the user ID and password back to their\n            // default (empty string) values. \n            builder.Remove(&quot;User ID&quot;);\n            builder.Remove(&quot;Password&quot;);\n\n            // Turn on integrated security:\n            builder.IntegratedSecurity = true;\n\n            Console.WriteLine(&quot;Modified: &quot; + builder.ConnectionString);\n\n            using (SqlConnection\n                       connection = new SqlConnection(builder.ConnectionString))\n            {\n                connection.Open();\n                // Now use the open connection.\n                Console.WriteLine(&quot;Database = &quot; + connection.Database);\n            }\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(ex.Message);\n        }\n\n        Console.WriteLine(&quot;Press any key to finish.&quot;);\n        Console.ReadLine();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.Remove#1\">Imports System.Data.SqlClient\n    \nModule Module1\n  Sub Main()\n    Try\n      Dim connectString As String = _\n       &quot;Data Source=(local);User ID=ab;Password=a1Pass@@11;&quot; &amp; _\n       &quot;Initial Catalog=AdventureWorks&quot;\n\n      Dim builder As New SqlConnectionStringBuilder(connectString)\n      Console.WriteLine(&quot;Original: &quot; &amp; builder.ConnectionString)\n\n      &#39; Use the Remove method\n      &#39; in order to reset the user ID and password back to their\n      &#39; default (empty string) values.\n      builder.Remove(&quot;User ID&quot;)\n      builder.Remove(&quot;Password&quot;)\n\n      &#39; Turn on integrated security:\n      builder.IntegratedSecurity = True\n\n      Console.WriteLine(&quot;Modified: &quot; &amp; builder.ConnectionString)\n\n      Using connection As New SqlConnection(builder.ConnectionString)\n        connection.Open()\n        &#39; Now use the open connection.\n        Console.WriteLine(&quot;Database = &quot; &amp; connection.Database)\n      End Using\n\n    Catch ex As Exception\n      Console.WriteLine(ex.Message)\n    End Try\n\n    Console.WriteLine(&quot;Press any key to finish.&quot;)\n    Console.ReadLine()\n  End Sub\nEnd Module\n</code></pre><p> The example displays the following text in the console window:  </p>\n<pre><code>Original: Data Source=(local);Initial Catalog=AdventureWorks;User ID=ab;Password= a1Pass@@11  \nModified: Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True  \nDatabase = AdventureWorks  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ShouldSerialize_System_String_\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_ShouldSerialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShouldSerialize(String)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the specified key exists in this <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool ShouldSerialize (string keyword);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyword</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key to locate in the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> contains an entry with the specified key; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method behaves identically to the <a class=\"xref\" href=\"system.data.common.dbconnectionstringbuilder#System_Data_Common_DbConnectionStringBuilder_ContainsKey_\" data-linktype=\"relative-path\">ContainsKey</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Data_SqlClient_SqlConnectionStringBuilder_TryGetValue_System_String_System_Object__\">\r\n    \r\n            <a id=\"System_Data_SqlClient_SqlConnectionStringBuilder_TryGetValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryGetValue(String,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a value corresponding to the supplied key from this <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool TryGetValue (string keyword, out object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyword</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key of the item to retrieve.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value corresponding to <code>keyword.</code></p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if <code>keyword</code> was found within the connection string; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>keyword</code> contains a null value (<code>Nothing</code> in Visual Basic).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The TryGetValue method lets developers safely retrieve a value from a <a class=\"xref\" href=\"system.data.sqlclient.sqlconnectionstringbuilder\" data-linktype=\"relative-path\">SqlConnectionStringBuilder</a> without needing to verify that the supplied key name is a valid key name. Because <strong>TryGetValue</strong> does not raise an exception when you call it, passing in a nonexistent key, you do not have to look for a key before retrieving its value.  Calling <strong>TryGetValue</strong> with a nonexistent key will place the value null (<code>Nothing</code> in Visual Basic) in the <code>value</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the behavior of the <strong>TryGetValue</strong> method.  </p>\n<pre><code class=\"lang-vb\" name=\"DataWorks SqlConnectionStringBuilder.TryGetValue#1\">Imports System.Data.SqlClient\n    \nModule Module1\n    Sub Main()\n        Dim builder As New SqlConnectionStringBuilder\n        builder.ConnectionString = GetConnectionString()\n\n        &#39; Call TryGetValue method for multiple\n        &#39; key names. Note that these keys are converted\n        &#39; to well-known synonynms for data retrieval.\n        DisplayValue(builder, &quot;Data Source&quot;)\n        DisplayValue(builder, &quot;Trusted_Connection&quot;)\n        DisplayValue(builder, &quot;InvalidKey&quot;)\n        DisplayValue(builder, Nothing)\n\n        Console.WriteLine(&quot;Press any key to continue.&quot;)\n        Console.ReadLine()\n    End Sub\n\n    Private Sub DisplayValue( _\n     ByVal builder As SqlConnectionStringBuilder, ByVal key As String)\n        Dim value As Object = Nothing\n\n        &#39; Although TryGetValue handles missing keys,\n        &#39; it doesn&#39;t handle passing in a null (Nothing in Visual Basic)\n        &#39; key. This example traps for that particular error, but\n        &#39; passes any other unknown exceptions back out to the\n        &#39; caller. \n        Try\n            If builder.TryGetValue(key, value) Then\n                Console.WriteLine(&quot;{0}=&#39;{1}&#39; &quot;, key, value)\n            Else\n                Console.WriteLine(&quot;Unable to retrieve value for &#39;{0}&#39;&quot;, key)\n            End If\n        Catch ex As ArgumentNullException\n            Console.WriteLine(&quot;Unable to retrieve value for null key.&quot;)\n        End Try\n    End Sub\n\n    Private Function GetConnectionString() As String\n        &#39; To avoid storing the connection string in your code,\n        &#39; you can retrieve it from a configuration file. \n        Return &quot;Server=(local);Integrated Security=SSPI;&quot; &amp; _\n          &quot;Initial Catalog=AdventureWorks&quot;\n    End Function\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"DataWorks SqlConnectionStringBuilder.TryGetValue#1\">using System.Data.SqlClient;\n\nusing System;\nusing System.Data.SqlClient;\n\n\nclass Program\n{\n    static void Main()\n    {\n        SqlConnectionStringBuilder builder = new SqlConnectionStringBuilder();\n        builder.ConnectionString = GetConnectionString();\n\n        // Call TryGetValue method for multiple\n        // key names. Note that these keys are converted\n        // to well-known synonynms for data retrieval.\n        DisplayValue(builder, &quot;Data Source&quot;);\n        DisplayValue(builder, &quot;Trusted_Connection&quot;);\n        DisplayValue(builder, &quot;InvalidKey&quot;);\n        DisplayValue(builder, null);\n\n        Console.WriteLine(&quot;Press any key to continue.&quot;);\n        Console.ReadLine();\n    }\n\n    private static void DisplayValue(\n        SqlConnectionStringBuilder builder, string key)\n    {\n        object value = null;\n\n        // Although TryGetValue handles missing keys,\n        // it doesn&#39;t handle passing in a null\n        // key. This example traps for that particular error, but\n        // passes any other unknown exceptions back out to the\n        // caller. \n        try\n        {\n            if (builder.TryGetValue(key, out value))\n            {\n                Console.WriteLine(&quot;{0}=&#39;{1}&#39;&quot;, key, value);\n            }\n            else\n            {\n                Console.WriteLine(&quot;Unable to retrieve value for &#39;{0}&#39;&quot;, key);\n            }\n        }\n        catch (ArgumentNullException)\n        {\n            Console.WriteLine(&quot;Unable to retrieve value for null key.&quot;);\n        }\n    }\n\n    private static string GetConnectionString()\n    {\n        // To avoid storing the connection string in your code,\n        // you can retrieve it from a configuration file. \n        return &quot;Server=(local);Integrated Security=SSPI;&quot; +\n            &quot;Initial Catalog=AdventureWorks&quot;;\n    }\n}\n</code></pre><p> The sample displays the following results:  </p>\n<pre><code>Data Source=(local)  \nTrusted_Connection=True  \nUnable to retrieve value for &#39;InvalidKey&#39;  \nUnable to retrieve value for null key.  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.SqlClient.SqlConnectionStringBuilder.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.SqlClient.SqlConnectionStringBuilder.yml\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder..ctor\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.Authentication\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.Clear\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.DataSource\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.Enlist\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.Item\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.Keys\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.Password\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.Pooling\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.Remove\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.Replication\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.UserID\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.Values\">\r\n<meta name=\"APIName\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID\">\r\n<meta name=\"APILocation\" content=\"System.Data.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"2efd1726-03a0-4700-cde0-b58fbfca26b0\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a simple way to create and manage the contents of connection strings used by the  class.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Data.SqlClient/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Data.SqlClient.SqlConnectionStringBuilder\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Data.SqlClient.SqlConnectionStringBuilder.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Data.SqlClient.SqlConnectionStringBuilder.yml","open_to_public_contributors":true,"api_name":["System.Data.SqlClient.SqlConnectionStringBuilder","System.Data.SqlClient.SqlConnectionStringBuilder..ctor","System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent","System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName","System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing","System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename","System.Data.SqlClient.SqlConnectionStringBuilder.Authentication","System.Data.SqlClient.SqlConnectionStringBuilder.Clear","System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting","System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset","System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount","System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval","System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout","System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey","System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection","System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage","System.Data.SqlClient.SqlConnectionStringBuilder.DataSource","System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt","System.Data.SqlClient.SqlConnectionStringBuilder.Enlist","System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner","System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties","System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog","System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity","System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize","System.Data.SqlClient.SqlConnectionStringBuilder.Item","System.Data.SqlClient.SqlConnectionStringBuilder.Keys","System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout","System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize","System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize","System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets","System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover","System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary","System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize","System.Data.SqlClient.SqlConnectionStringBuilder.Password","System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo","System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod","System.Data.SqlClient.SqlConnectionStringBuilder.Pooling","System.Data.SqlClient.SqlConnectionStringBuilder.Remove","System.Data.SqlClient.SqlConnectionStringBuilder.Replication","System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize","System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding","System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution","System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate","System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue","System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion","System.Data.SqlClient.SqlConnectionStringBuilder.UserID","System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance","System.Data.SqlClient.SqlConnectionStringBuilder.Values","System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID"],"api_location":["System.Data.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Data.SqlClient.SqlConnectionStringBuilder","System::Data::SqlClient::SqlConnectionStringBuilder","System.Data.SqlClient.SqlConnectionStringBuilder.#ctor","System::Data::SqlClient::SqlConnectionStringBuilder::#ctor","System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent","System::Data::SqlClient::SqlConnectionStringBuilder::ApplicationIntent","System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName","System::Data::SqlClient::SqlConnectionStringBuilder::ApplicationName","System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing","System::Data::SqlClient::SqlConnectionStringBuilder::AsynchronousProcessing","System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename","System::Data::SqlClient::SqlConnectionStringBuilder::AttachDBFilename","System.Data.SqlClient.SqlConnectionStringBuilder.Authentication","System::Data::SqlClient::SqlConnectionStringBuilder::Authentication","System.Data.SqlClient.SqlConnectionStringBuilder.Clear","System::Data::SqlClient::SqlConnectionStringBuilder::Clear","System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting","System::Data::SqlClient::SqlConnectionStringBuilder::ColumnEncryptionSetting","System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset","System::Data::SqlClient::SqlConnectionStringBuilder::ConnectionReset","System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount","System::Data::SqlClient::SqlConnectionStringBuilder::ConnectRetryCount","System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval","System::Data::SqlClient::SqlConnectionStringBuilder::ConnectRetryInterval","System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout","System::Data::SqlClient::SqlConnectionStringBuilder::ConnectTimeout","System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey","System::Data::SqlClient::SqlConnectionStringBuilder::ContainsKey","System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection","System::Data::SqlClient::SqlConnectionStringBuilder::ContextConnection","System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage","System::Data::SqlClient::SqlConnectionStringBuilder::CurrentLanguage","System.Data.SqlClient.SqlConnectionStringBuilder.DataSource","System::Data::SqlClient::SqlConnectionStringBuilder::DataSource","System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt","System::Data::SqlClient::SqlConnectionStringBuilder::Encrypt","System.Data.SqlClient.SqlConnectionStringBuilder.Enlist","System::Data::SqlClient::SqlConnectionStringBuilder::Enlist","System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner","System::Data::SqlClient::SqlConnectionStringBuilder::FailoverPartner","System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties","System::Data::SqlClient::SqlConnectionStringBuilder::GetProperties","System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog","System::Data::SqlClient::SqlConnectionStringBuilder::InitialCatalog","System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity","System::Data::SqlClient::SqlConnectionStringBuilder::IntegratedSecurity","System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize","System::Data::SqlClient::SqlConnectionStringBuilder::IsFixedSize","System.Data.SqlClient.SqlConnectionStringBuilder.Item","System::Data::SqlClient::SqlConnectionStringBuilder::Item","System.Data.SqlClient.SqlConnectionStringBuilder.Keys","System::Data::SqlClient::SqlConnectionStringBuilder::Keys","System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout","System::Data::SqlClient::SqlConnectionStringBuilder::LoadBalanceTimeout","System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize","System::Data::SqlClient::SqlConnectionStringBuilder::MaxPoolSize","System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize","System::Data::SqlClient::SqlConnectionStringBuilder::MinPoolSize","System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets","System::Data::SqlClient::SqlConnectionStringBuilder::MultipleActiveResultSets","System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover","System::Data::SqlClient::SqlConnectionStringBuilder::MultiSubnetFailover","System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary","System::Data::SqlClient::SqlConnectionStringBuilder::NetworkLibrary","System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize","System::Data::SqlClient::SqlConnectionStringBuilder::PacketSize","System.Data.SqlClient.SqlConnectionStringBuilder.Password","System::Data::SqlClient::SqlConnectionStringBuilder::Password","System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo","System::Data::SqlClient::SqlConnectionStringBuilder::PersistSecurityInfo","System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod","System::Data::SqlClient::SqlConnectionStringBuilder::PoolBlockingPeriod","System.Data.SqlClient.SqlConnectionStringBuilder.Pooling","System::Data::SqlClient::SqlConnectionStringBuilder::Pooling","System.Data.SqlClient.SqlConnectionStringBuilder.Remove","System::Data::SqlClient::SqlConnectionStringBuilder::Remove","System.Data.SqlClient.SqlConnectionStringBuilder.Replication","System::Data::SqlClient::SqlConnectionStringBuilder::Replication","System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize","System::Data::SqlClient::SqlConnectionStringBuilder::ShouldSerialize","System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding","System::Data::SqlClient::SqlConnectionStringBuilder::TransactionBinding","System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution","System::Data::SqlClient::SqlConnectionStringBuilder::TransparentNetworkIPResolution","System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate","System::Data::SqlClient::SqlConnectionStringBuilder::TrustServerCertificate","System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue","System::Data::SqlClient::SqlConnectionStringBuilder::TryGetValue","System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion","System::Data::SqlClient::SqlConnectionStringBuilder::TypeSystemVersion","System.Data.SqlClient.SqlConnectionStringBuilder.UserID","System::Data::SqlClient::SqlConnectionStringBuilder::UserID","System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance","System::Data::SqlClient::SqlConnectionStringBuilder::UserInstance","System.Data.SqlClient.SqlConnectionStringBuilder.Values","System::Data::SqlClient::SqlConnectionStringBuilder::Values","System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID","System::Data::SqlClient::SqlConnectionStringBuilder::WorkstationID"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"2efd1726-03a0-4700-cde0-b58fbfca26b0","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Data.SqlClient/SqlConnectionStringBuilder.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SqlConnectionStringBuilder class | Microsoft Docs","_op_ogTitle":"SqlConnectionStringBuilder class","description":"Provides a simple way to create and manage the contents of connection strings used by the  class.\n","toc_asset_id":"_splitted/System.Data.SqlClient/toc.json","toc_rel":"_splitted/System.Data.SqlClient/toc.json","source_url":"","ms.assetid":"System.Data.SqlClient.SqlConnectionStringBuilder","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.sqlclient.sqlconnectionstringbuilder","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.data.sqlclient.sqlconnectionstringbuilder","fileRelativePath":"System.Data.SqlClient.SqlConnectionStringBuilder.html"},"themesRelativePathToOutputRoot":"_themes/"}