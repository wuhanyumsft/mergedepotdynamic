{"content":"    \r\n    <h1 id=\"System_Workflow_ComponentModel_Design_IIdentifierCreationService\">\r\n      <span class=\"lang-csharp\">IIdentifierCreationService</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a mechanism to create uniquely named identifiers throughout a specified range of activities.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Obsolete(&quot;The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*&quot;)]\npublic interface IIdentifierCreationService</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <div class=\"NOTE\"><h5>Note</h5><p> This material discusses types and namespaces that are obsolete. For more information, see <a href=\"http://aka.ms/wfdeprecatedtypes\" data-linktype=\"external\">Deprecated Types in Windows Workflow Foundation 4.5</a>.  </p>\n</div>\n<p> IIdentifierCreationService provides a mechanism to create uniquely named identifiers throughout a range of activities.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_IIdentifierCreationService_EnsureUniqueIdentifiers_System_Workflow_ComponentModel_CompositeActivity_System_Collections_ICollection_\" data-linktype=\"self-bookmark\">EnsureUniqueIdentifiers(CompositeActivity,ICollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides a mechanism to ensure that Activities added to a <a class=\"xref\" href=\"system.workflow.componentmodel.compositeactivity\" data-linktype=\"relative-path\">CompositeActivity</a> are uniquely named.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_ComponentModel_Design_IIdentifierCreationService_ValidateIdentifier_System_Workflow_ComponentModel_Activity_System_String_\" data-linktype=\"self-bookmark\">ValidateIdentifier(Activity,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides a mechanism to test that an identifier is unique within an <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_IIdentifierCreationService_EnsureUniqueIdentifiers_System_Workflow_ComponentModel_CompositeActivity_System_Collections_ICollection_\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_IIdentifierCreationService_EnsureUniqueIdentifiers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnsureUniqueIdentifiers(CompositeActivity,ICollection)</div>        \r\n          </div>\r\n    \r\n            <p>Provides a mechanism to ensure that Activities added to a <a class=\"xref\" href=\"system.workflow.componentmodel.compositeactivity\" data-linktype=\"relative-path\">CompositeActivity</a> are uniquely named.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void EnsureUniqueIdentifiers (System.Workflow.ComponentModel.CompositeActivity parentActivity, System.Collections.ICollection childActivities);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>parentActivity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.compositeactivity\" data-linktype=\"relative-path\">CompositeActivity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.workflow.componentmodel.compositeactivity\" data-linktype=\"relative-path\">CompositeActivity</a> that will contain the uniquely named activities.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>childActivities</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A collection of activities to ensure that activities are uniquely named.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use EnsureUniqueIdentifiers to ensure activities inserted into a <a class=\"xref\" href=\"system.workflow.componentmodel.compositeactivity\" data-linktype=\"relative-path\">CompositeActivity</a> have unique identifiers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an implementation of the <a class=\"xref\" href=\"system.workflow.componentmodel.design.iidentifiercreationservice\" data-linktype=\"relative-path\">IIdentifierCreationService</a>. This service ensures that each of the identifiers used within the current workflow is unique.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#43\">void IIdentifierCreationService.EnsureUniqueIdentifiers(CompositeActivity parentActivity, ICollection childActivities)\n{\n    if (parentActivity == null)\n        throw new ArgumentNullException(&quot;parentActivity&quot;);\n    if (childActivities == null)\n        throw new ArgumentNullException(&quot;childActivities&quot;);\n\n    List&lt;Activity&gt; allActivities = new List&lt;Activity&gt;();\n\n    Queue activities = new Queue(childActivities);\n    while (activities.Count &gt; 0)\n    {\n        Activity activity = (Activity)activities.Dequeue();\n        if (activity is CompositeActivity)\n        {\n            foreach (Activity child in ((CompositeActivity)activity).Activities)\n                activities.Enqueue(child);\n        }\n\n        //If we are moving activities, we need not regenerate their identifiers\n        if (((IComponent)activity).Site != null)\n            continue;\n\n        allActivities.Add(activity);\n    }\n\n    // get the root activity\n    CompositeActivity rootActivity = GetRootActivity(parentActivity) as CompositeActivity;\n    ArrayList identifiers = new ArrayList(); // all the identifiers in the workflow\n    identifiers.AddRange(GetIdentifiersInCompositeActivity(rootActivity));\n\n    foreach (Activity activity in allActivities)\n    {\n        string finalIdentifier = activity.Name;\n\n        // now loop until we find a identifier that hasn&#39;t been used.\n        string baseIdentifier = GetBaseIdentifier(activity);\n        int index = 0;\n\n        identifiers.Sort();\n        while (finalIdentifier == null || finalIdentifier.Length == 0 || identifiers.BinarySearch(finalIdentifier.ToLower(), StringComparer.OrdinalIgnoreCase) &gt;= 0)\n        {\n            finalIdentifier = string.Format(&quot;{0}{1}&quot;, baseIdentifier, ++index);\n        }\n\n        // add new identifier to collection \n        identifiers.Add(finalIdentifier);\n        activity.Name = finalIdentifier;\n    }\n}\n\nprivate static IList GetIdentifiersInCompositeActivity(CompositeActivity compositeActivity)\n{\n    ArrayList identifiers = new ArrayList();\n    if (compositeActivity != null)\n    {\n        identifiers.Add(compositeActivity.Name);\n        IList&lt;Activity&gt; allChildren = GetAllNestedActivities(compositeActivity);\n        foreach (Activity activity in allChildren)\n            identifiers.Add(activity.Name);\n    }\n    return ArrayList.ReadOnly(identifiers);\n}\n\nprivate static string GetBaseIdentifier(Activity activity)\n{\n    string baseIdentifier = activity.GetType().Name;\n    StringBuilder b = new StringBuilder(baseIdentifier.Length);\n    for (int i = 0; i &lt; baseIdentifier.Length; i++)\n    {\n        if (Char.IsUpper(baseIdentifier[i]) &amp;&amp; (i == 0 || i == baseIdentifier.Length - 1 || Char.IsUpper(baseIdentifier[i + 1])))\n        {\n            b.Append(Char.ToLower(baseIdentifier[i]));\n        }\n        else\n        {\n            b.Append(baseIdentifier.Substring(i));\n            break;\n        }\n    }\n    return b.ToString();\n}\n\nprivate static Activity GetRootActivity(Activity activity)\n{\n    if (activity == null)\n        throw new ArgumentException(&quot;activity&quot;);\n\n    while (activity.Parent != null)\n        activity = activity.Parent;\n\n    return activity;\n}\n\nprivate static Activity[] GetAllNestedActivities(CompositeActivity compositeActivity)\n{\n    if (compositeActivity == null)\n        throw new ArgumentNullException(&quot;compositeActivity&quot;);\n\n    ArrayList nestedActivities = new ArrayList();\n    Queue compositeActivities = new Queue();\n    compositeActivities.Enqueue(compositeActivity);\n    while (compositeActivities.Count &gt; 0)\n    {\n        CompositeActivity compositeActivity2 = (CompositeActivity)compositeActivities.Dequeue();\n\n        foreach (Activity activity in compositeActivity2.Activities)\n        {\n            nestedActivities.Add(activity);\n            if (activity is CompositeActivity)\n                compositeActivities.Enqueue(activity);\n        }\n\n        foreach (Activity activity in compositeActivity2.EnabledActivities)\n        {\n            if (!nestedActivities.Contains(activity))\n            {\n                nestedActivities.Add(activity);\n                if (activity is CompositeActivity)\n                    compositeActivities.Enqueue(activity);\n            }\n        }\n    }\n    return (Activity[])nestedActivities.ToArray(typeof(Activity));\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#43\">Sub EnsureUniqueIdentifiers(ByVal parentActivity As CompositeActivity, ByVal childActivities As ICollection) Implements IIdentifierCreationService.EnsureUniqueIdentifiers\n\n    If parentActivity Is Nothing Then\n        Throw New ArgumentNullException(&quot;parentActivity&quot;)\n    End If\n    If childActivities Is Nothing Then\n        Throw New ArgumentNullException(&quot;childActivities&quot;)\n    End If\n    Dim allActivities As New List(Of Activity)()\n\n    Dim activities As New Queue(childActivities)\n    While activities.Count &gt; 0\n\n        Dim activity As Activity = CType(activities.Dequeue(), Activity)\n        If TypeOf activity Is CompositeActivity Then\n            For Each child As Activity In CType(activity, CompositeActivity).Activities\n                activities.Enqueue(child)\n            Next\n        End If\n\n        &#39;If we are moving activities, we need not regenerate their identifiers\n        If CType(activity, IComponent).Site IsNot Nothing Then\n            Continue While\n        End If\n\n        allActivities.Add(activity)\n    End While\n\n    &#39; get the root activity\n    Dim rootActivity As CompositeActivity = CType(GetRootActivity(parentActivity), CompositeActivity)\n    Dim identifiers As New ArrayList() &#39; all the identifiers in the workflow\n    identifiers.AddRange(GetIdentifiersInCompositeActivity(rootActivity))\n\n    For Each activity As Activity In allActivities\n\n        Dim finalIdentifier As String = activity.Name\n\n        &#39; now loop until we find a identifier that hasn&#39;t been used.\n        Dim baseIdentifier As String = GetBaseIdentifier(activity)\n        Dim index As Integer = 0\n\n        identifiers.Sort()\n        While finalIdentifier Is Nothing Or _\n        finalIdentifier.Length = 0 Or _\n        identifiers.BinarySearch(finalIdentifier.ToLower(), StringComparer.OrdinalIgnoreCase) &gt;= 0\n            finalIdentifier = String.Format(&quot;0}1}&quot;, baseIdentifier, ++index)\n        End While\n\n        &#39; add new identifier to collection \n        identifiers.Add(finalIdentifier)\n        activity.Name = finalIdentifier\n    Next\nEnd Sub\n\nPrivate Shared Function GetIdentifiersInCompositeActivity(ByVal CompositeActivity As CompositeActivity) As IList\n    Dim identifiers As New ArrayList()\n    If CompositeActivity IsNot Nothing Then\n        identifiers.Add(CompositeActivity.Name)\n        Dim allChildren As IList(Of Activity) = GetAllNestedActivities(CompositeActivity)\n        For Each activity As Activity In allChildren\n            identifiers.Add(activity.Name)\n        Next\n    End If\n\n    Return ArrayList.ReadOnly(identifiers)\nEnd Function\n\nPrivate Shared Function GetBaseIdentifier(ByVal activity As Activity)\n    Dim baseIdentifier As String = activity.GetType().Name\n    Dim b As New StringBuilder(baseIdentifier.Length)\n    For i As Integer = 0 To baseIdentifier.Length\n        If Char.IsUpper(baseIdentifier(i)) And (i = 0 Or i = baseIdentifier.Length - 1 Or Char.IsUpper(baseIdentifier(i + 1))) Then\n            b.Append(Char.ToLower(baseIdentifier(i)))\n        Else\n            b.Append(baseIdentifier.Substring(i))\n            Exit For\n        End If\n    Next\n    Return b.ToString()\nEnd Function\n\nPrivate Shared Function GetRootActivity(ByVal activity As Activity) As Activity\n    If activity Is Nothing Then\n        Throw New ArgumentException(&quot;activity&quot;)\n    End If\n\n    While activity.Parent IsNot Nothing\n        activity = activity.Parent\n    End While\n\n    Return activity\nEnd Function\n\nPrivate Shared Function GetAllNestedActivities(ByVal compositeActivity As CompositeActivity) As Activity()\n\n    If compositeActivity Is Nothing Then\n        Throw New ArgumentNullException(&quot;compositeActivity&quot;)\n    End If\n\n    Dim nestedActivities As New ArrayList()\n    Dim compositeActivities As New Queue()\n    compositeActivities.Enqueue(compositeActivity)\n    While compositeActivities.Count &gt; 0\n\n        Dim compositeActivity2 As CompositeActivity = CType(compositeActivities.Dequeue(), CompositeActivity)\n\n        For Each activity As Activity In compositeActivity2.Activities\n            nestedActivities.Add(activity)\n            If activity Is compositeActivity Then\n                compositeActivities.Enqueue(activity)\n            End If\n        Next\n\n        For Each activity As Activity In compositeActivity2.EnabledActivities\n            If Not nestedActivities.Contains(activity) Then\n                nestedActivities.Add(activity)\n                If (activity Is compositeActivity) Then\n                    compositeActivities.Enqueue(activity)\n                End If\n            End If\n        Next\n    End While\n    Return CType(nestedActivities.ToArray(GetType(Activity)), Activity())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_ComponentModel_Design_IIdentifierCreationService_ValidateIdentifier_System_Workflow_ComponentModel_Activity_System_String_\">\r\n    \r\n            <a id=\"System_Workflow_ComponentModel_Design_IIdentifierCreationService_ValidateIdentifier_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ValidateIdentifier(Activity,String)</div>        \r\n          </div>\r\n    \r\n            <p>Provides a mechanism to test that an identifier is unique within an <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ValidateIdentifier (System.Workflow.ComponentModel.Activity activity, string identifier);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>activity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a> against which to test the identifier.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>identifier</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The identifier to test for validity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use ValidateIdentifier to make sure an identifier is unique and properly formatted for use within a specified <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an implementation of the <a class=\"xref\" href=\"system.workflow.componentmodel.design.iidentifiercreationservice\" data-linktype=\"relative-path\">IIdentifierCreationService</a>. This service ensures that each of the identifiers used within the current workflow is unique.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#42\">void IIdentifierCreationService.ValidateIdentifier(Activity activity, string identifier)\n{\n    if (identifier == null)\n        throw new ArgumentNullException(&quot;identifier&quot;);\n    if (activity == null)\n        throw new ArgumentNullException(&quot;activity&quot;);\n\n    if (activity.Name.ToLower().Equals(identifier.ToLower()))\n        return;\n\n    ArrayList identifiers = new ArrayList();\n    Activity rootActivity = GetRootActivity(activity);\n    identifiers.AddRange(GetIdentifiersInCompositeActivity(rootActivity as CompositeActivity));\n    identifiers.Sort();\n    if (identifiers.BinarySearch(identifier.ToLower(), StringComparer.OrdinalIgnoreCase) &gt;= 0)\n        throw new ArgumentException(string.Format(&quot;Duplicate Component Identifier {0}&quot;, identifier));\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#42\">Sub ValidateIdentifier(ByVal activity As Activity, ByVal identifier As String) Implements IIdentifierCreationService.ValidateIdentifier\n    If identifier Is Nothing Then\n        Throw New ArgumentNullException(&quot;identifier&quot;)\n    End If\n    If activity Is Nothing Then\n        Throw New ArgumentNullException(&quot;activity&quot;)\n    End If\n    If activity.Name.ToLower().Equals(identifier.ToLower()) Then\n        Return\n    End If\n    Dim identifiers As New ArrayList()\n    Dim rootActivity As Activity = GetRootActivity(activity)\n    identifiers.AddRange(GetIdentifiersInCompositeActivity(CType(rootActivity, CompositeActivity)))\n    identifiers.Sort()\n    If identifiers.BinarySearch(identifier.ToLower(), StringComparer.OrdinalIgnoreCase) &gt;= 0 Then\n        Throw New ArgumentException(String.Format(&quot;Duplicate Component Identifier 0}&quot;, identifier))\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Workflow.ComponentModel.Design.IIdentifierCreationService.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Workflow.ComponentModel.Design.IIdentifierCreationService.yml\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.IIdentifierCreationService\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.IIdentifierCreationService.EnsureUniqueIdentifiers\">\r\n<meta name=\"APIName\" content=\"System.Workflow.ComponentModel.Design.IIdentifierCreationService.ValidateIdentifier\">\r\n<meta name=\"APILocation\" content=\"System.Workflow.ComponentModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"d66ff005-f33e-f2f4-88f0-c65b2ab70de7\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a mechanism to create uniquely named identifiers throughout a specified range of activities.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Workflow.ComponentModel.Design/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Workflow.ComponentModel.Design.IIdentifierCreationService\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Workflow.ComponentModel.Design.IIdentifierCreationService.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Workflow.ComponentModel.Design.IIdentifierCreationService.yml","open_to_public_contributors":true,"api_name":["System.Workflow.ComponentModel.Design.IIdentifierCreationService","System.Workflow.ComponentModel.Design.IIdentifierCreationService.EnsureUniqueIdentifiers","System.Workflow.ComponentModel.Design.IIdentifierCreationService.ValidateIdentifier"],"api_location":["System.Workflow.ComponentModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Workflow.ComponentModel.Design.IIdentifierCreationService","System::Workflow::ComponentModel::Design::IIdentifierCreationService","System.Workflow.ComponentModel.Design.IIdentifierCreationService.EnsureUniqueIdentifiers","System::Workflow::ComponentModel::Design::IIdentifierCreationService::EnsureUniqueIdentifiers","System.Workflow.ComponentModel.Design.IIdentifierCreationService.ValidateIdentifier","System::Workflow::ComponentModel::Design::IIdentifierCreationService::ValidateIdentifier"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"d66ff005-f33e-f2f4-88f0-c65b2ab70de7","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Workflow.ComponentModel.Design/IIdentifierCreationService.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IIdentifierCreationService interface | Microsoft Docs","_op_ogTitle":"IIdentifierCreationService interface","description":"Provides a mechanism to create uniquely named identifiers throughout a specified range of activities.\n","toc_asset_id":"_splitted/System.Workflow.ComponentModel.Design/toc.json","toc_rel":"_splitted/System.Workflow.ComponentModel.Design/toc.json","source_url":"","ms.assetid":"System.Workflow.ComponentModel.Design.IIdentifierCreationService","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.workflow.componentmodel.design.iidentifiercreationservice","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.workflow.componentmodel.design.iidentifiercreationservice","fileRelativePath":"System.Workflow.ComponentModel.Design.IIdentifierCreationService.html"},"themesRelativePathToOutputRoot":"_themes/"}