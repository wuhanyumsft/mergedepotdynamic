{"content":"    \r\n    <h1 id=\"System_Runtime_Remoting_RemotingConfiguration\">\r\n      <span class=\"lang-csharp\">RemotingConfiguration</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides various static methods for configuring the remoting infrastructure.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic static class RemotingConfiguration</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">RemotingConfiguration</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_ApplicationId\" data-linktype=\"self-bookmark\">ApplicationId</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the ID of the currently executing application.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_ApplicationName\" data-linktype=\"self-bookmark\">ApplicationName</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of a remoting application.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_CustomErrorsMode\" data-linktype=\"self-bookmark\">CustomErrorsMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets value that indicates how custom errors are handled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_ProcessId\" data-linktype=\"self-bookmark\">ProcessId</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the ID of the currently executing process.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_Configure_System_String_\" data-linktype=\"self-bookmark\">Configure(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads the configuration file and configures the remoting infrastructure. Configure is obsolete. Please use <span class=\"xref\">stem.Runtime.Remoting.RemotingConfiguration.Configure(System.String,System.Boolean)</span> instead.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_Configure_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">Configure(String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Reads the configuration file and configures the remoting infrastructure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_CustomErrorsEnabled_System_Boolean_\" data-linktype=\"self-bookmark\">CustomErrorsEnabled(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the server channels in this application domain return filtered or complete exception information to local or remote callers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_GetRegisteredActivatedClientTypes\" data-linktype=\"self-bookmark\">GetRegisteredActivatedClientTypes()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves an array of object types registered on the client as types that will be activated remotely.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_GetRegisteredActivatedServiceTypes\" data-linktype=\"self-bookmark\">GetRegisteredActivatedServiceTypes()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves an array of object types registered on the service end that can be activated on request from a client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_GetRegisteredWellKnownClientTypes\" data-linktype=\"self-bookmark\">GetRegisteredWellKnownClientTypes()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves an array of object types registered on the client end as well-known types.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_GetRegisteredWellKnownServiceTypes\" data-linktype=\"self-bookmark\">GetRegisteredWellKnownServiceTypes()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves an array of object types registered on the service end as well-known types.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_IsActivationAllowed_System_Type_\" data-linktype=\"self-bookmark\">IsActivationAllowed(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a Boolean value that indicates whether the specified <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> is allowed to be client activated.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_IsRemotelyActivatedClientType_System_Type_\" data-linktype=\"self-bookmark\">IsRemotelyActivatedClientType(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks whether the specified object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> is registered as a remotely activated client type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_IsRemotelyActivatedClientType_System_String_System_String_\" data-linktype=\"self-bookmark\">IsRemotelyActivatedClientType(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks whether the object specified by its type name and assembly name is registered as a remotely activated client type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_IsWellKnownClientType_System_Type_\" data-linktype=\"self-bookmark\">IsWellKnownClientType(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks whether the specified object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> is registered as a well-known client type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_IsWellKnownClientType_System_String_System_String_\" data-linktype=\"self-bookmark\">IsWellKnownClientType(String,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Checks whether the object specified by its type name and assembly name is registered as a well-known client type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedClientType_System_Runtime_Remoting_ActivatedClientTypeEntry_\" data-linktype=\"self-bookmark\">RegisterActivatedClientType(ActivatedClientTypeEntry)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers an object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> recorded in the provided <a class=\"xref\" href=\"system.runtime.remoting.activatedclienttypeentry\" data-linktype=\"relative-path\">ActivatedClientTypeEntry</a> on the client end as a type that can be activated on the server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedClientType_System_Type_System_String_\" data-linktype=\"self-bookmark\">RegisterActivatedClientType(Type,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers an object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> on the client end as a type that can be activated on the server, using the given parameters to initialize a new instance of the <a class=\"xref\" href=\"system.runtime.remoting.activatedclienttypeentry\" data-linktype=\"relative-path\">ActivatedClientTypeEntry</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedServiceType_System_Runtime_Remoting_ActivatedServiceTypeEntry_\" data-linktype=\"self-bookmark\">RegisterActivatedServiceType(ActivatedServiceTypeEntry)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers an object type recorded in the provided <a class=\"xref\" href=\"system.runtime.remoting.activatedservicetypeentry\" data-linktype=\"relative-path\">ActivatedServiceTypeEntry</a> on the service end as one that can be activated on request from a client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedServiceType_System_Type_\" data-linktype=\"self-bookmark\">RegisterActivatedServiceType(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers a specified object type on the service end as a type that can be activated on request from a client.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownClientType_System_Runtime_Remoting_WellKnownClientTypeEntry_\" data-linktype=\"self-bookmark\">RegisterWellKnownClientType(WellKnownClientTypeEntry)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers an object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> recorded in the provided <a class=\"xref\" href=\"system.runtime.remoting.wellknownclienttypeentry\" data-linktype=\"relative-path\">WellKnownClientTypeEntry</a> on the client end as a well-known type that can be activated on the server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownClientType_System_Type_System_String_\" data-linktype=\"self-bookmark\">RegisterWellKnownClientType(Type,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers an object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> on the client end as a well-known type that can be activated on the server, using the given parameters to initialize a new instance of the <a class=\"xref\" href=\"system.runtime.remoting.wellknownclienttypeentry\" data-linktype=\"relative-path\">WellKnownClientTypeEntry</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownServiceType_System_Runtime_Remoting_WellKnownServiceTypeEntry_\" data-linktype=\"self-bookmark\">RegisterWellKnownServiceType(WellKnownServiceTypeEntry)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers an object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> recorded in the provided <a class=\"xref\" href=\"system.runtime.remoting.wellknownservicetypeentry\" data-linktype=\"relative-path\">WellKnownServiceTypeEntry</a> on the service end as a well-known type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownServiceType_System_Type_System_String_System_Runtime_Remoting_WellKnownObjectMode_\" data-linktype=\"self-bookmark\">RegisterWellKnownServiceType(Type,String,WellKnownObjectMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers an object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> on the service end as a well-known type, using the given parameters to initialize a new instance of <a class=\"xref\" href=\"system.runtime.remoting.wellknownservicetypeentry\" data-linktype=\"relative-path\">WellKnownServiceTypeEntry</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_ApplicationId\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_ApplicationId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ApplicationId</div>        \r\n          </div>\r\n    \r\n            <p>Gets the ID of the currently executing application.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ApplicationId { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the ID of the currently executing application.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The application ID is prepended to the URI of the objects created by the currently executing application.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_ApplicationName\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_ApplicationName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ApplicationName</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of a remoting application.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ApplicationName { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of a remoting application.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels. This exception is thrown only when setting the property value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An application name can be set only once, either through the current property or through a configuration file. If an application is running inside a hosted environment, such as Internet Information Services (IIS), this value might have already been set (usually to the virtual directory). The current property will return <code>null</code> if the application name has not been set.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the ApplicationName property to indicate the name of the remoting application. For the full example code, see examples for the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownClientType_\" data-linktype=\"relative-path\">RegisterWellKnownClientType</a> and <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownServiceType_\" data-linktype=\"relative-path\">RegisterWellKnownServiceType</a> methods.  </p>\n<pre><code class=\"lang-cs\" name=\"RemotingConfiguration.ServerActivation1#2\">        ChannelServices.RegisterChannel(new TcpChannel(8082));\n\n        RemotingConfiguration.ApplicationName = &quot;HelloServiceApplication&quot;;\n\n        RemotingConfiguration.RegisterWellKnownServiceType( typeof(HelloService),\n                                                            &quot;MyUri&quot;,\n                                                            WellKnownObjectMode.SingleCall \n                                                          );\n</code></pre><pre><code class=\"lang-cpp\" name=\"RemotingConfiguration.ServerActivation1#2\">   ChannelServices::RegisterChannel( gcnew TcpChannel( 8082 ) );\n   RemotingConfiguration::ApplicationName = &quot;HelloServiceApplication&quot;;\n   RemotingConfiguration::RegisterWellKnownServiceType( HelloService::typeid,\n                                                        &quot;MyUri&quot;,\n                                                        WellKnownObjectMode::SingleCall );\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration.ServerActivation1#2\">      ChannelServices.RegisterChannel(New TcpChannel(8082))\n      \n      RemotingConfiguration.ApplicationName = &quot;HelloServiceApplication&quot;\n      \n      RemotingConfiguration.RegisterWellKnownServiceType(GetType(HelloService), &quot;MyUri&quot;, WellKnownObjectMode.SingleCall)\n</code></pre><p> The following code example demonstrates how to access an object remoted from a named application.  </p>\n<pre><code class=\"lang-cpp\" name=\"RemotingConfiguration.ServerActivation1#6\">   ChannelServices::RegisterChannel( gcnew TcpChannel );\n   RemotingConfiguration::RegisterWellKnownClientType( HelloService::typeid,\n                                                       &quot;tcp://localhost:8082/HelloServiceApplication/MyUri&quot; );\n   HelloService ^ service = gcnew HelloService;\n</code></pre><pre><code class=\"lang-cs\" name=\"RemotingConfiguration.ServerActivation1#6\">        ChannelServices.RegisterChannel(new TcpChannel());\n\n        RemotingConfiguration.RegisterWellKnownClientType(\n                                                           typeof(HelloService),\n                                                           &quot;tcp://localhost:8082/HelloServiceApplication/MyUri&quot;\n                                                         );\n\n        HelloService service = new HelloService();\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration.ServerActivation1#6\">      ChannelServices.RegisterChannel(New TcpChannel())\n      \n      RemotingConfiguration.RegisterWellKnownClientType(GetType(HelloService), &quot;tcp://localhost:8082/HelloServiceApplication/MyUri&quot;)\n      \n      Dim service As New HelloService()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_CustomErrorsMode\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_CustomErrorsMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CustomErrorsMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets value that indicates how custom errors are handled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Remoting.CustomErrorsModes CustomErrorsMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.customerrorsmodes\" data-linktype=\"relative-path\">CustomErrorsModes</a></div>\r\n                  </div>\r\n                  <p>A member of the <a class=\"xref\" href=\"system.runtime.remoting.customerrorsmodes\" data-linktype=\"relative-path\">CustomErrorsModes</a> enumeration that indicates how custom errors are handled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_ProcessId\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_ProcessId_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessId</div>        \r\n          </div>\r\n    \r\n            <p>Gets the ID of the currently executing process.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string ProcessId { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the ID of the currently executing process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>The immediate caller does not have infrastructure permission.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_Configure_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_Configure_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Configure(String)</div>        \r\n          </div>\r\n    \r\n            <p>Reads the configuration file and configures the remoting infrastructure. Configure is obsolete. Please use <span class=\"xref\">stem.Runtime.Remoting.RemotingConfiguration.Configure(System.String,System.Boolean)</span> instead.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Configure (string filename);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the remoting configuration file. Can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <div class=\"NOTE\"><h5>Note</h5><p> Configure is obsolete. Please use <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_Configure_System_String_System_Boolean_\" data-linktype=\"relative-path\">Configure(String,Boolean)</a> instead.  </p>\n</div>\n<p> Passing <code>null</code> as the <code>filename</code> parameter will cause default remoting initialization without requiring the existence of a configuration file.  </p>\n<p> For configuration file syntax, see <a href=\"http://msdn.microsoft.com/en-us/dc2d1e62-9af7-4ca1-99fd-98b93bb4db9e\" data-linktype=\"external\">Remoting Settings Schema</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Marshal-by-reference objects (MBRs) do not reside in memory forever. Instead, unless the type overrides <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService_\" data-linktype=\"relative-path\">InitializeLifetimeService</a> to control its own lifetime policies, each MBR has a finite lifetime before the .NET Framework remoting system begins the process of deleting it and reclaiming the memory. For more information, see <a href=\"http://msdn.microsoft.com/en-us/c72d561c-1266-4c8b-b258-2c168c08da9a\" data-linktype=\"external\">Lifetime Leases</a>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"RemotingConfiguration_Configure_Client#1\">\n    // Configure the remoting structure.\n    RemotingConfiguration.Configure(&quot;server.config&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration_Configure_Client#1\">      &#39; Configure the remoting structure.\n      RemotingConfiguration.Configure(&quot;server.config&quot;)\n      \n</code></pre><pre><code class=\"lang-cpp\" name=\"RemotingConfiguration_Configure_Client#1\">   // Configure the remoting structure.\n   RemotingConfiguration::Configure( &quot;server.config&quot; );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_Configure_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_Configure_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Configure(String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Reads the configuration file and configures the remoting infrastructure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Configure (string filename, bool ensureSecurity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>filename</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the remoting configuration file. Can be <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>ensureSecurity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>If set to <code>true</code> security is required. If set to <code>false</code>, security is not required but still may be used.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Passing <code>null</code> as the <code>filename</code> parameter will cause default remoting initialization without requiring the existence of a configuration file. For more information about remoting and security see <a href=\"http://msdn.microsoft.com/en-us/9574262c-d4b1-41c5-8600-24ff147c0add\" data-linktype=\"external\">Security in Remoting.</a>  </p>\n<p> For configuration file syntax, see <a href=\"http://msdn.microsoft.com/en-us/dc2d1e62-9af7-4ca1-99fd-98b93bb4db9e\" data-linktype=\"external\">Remoting Settings Schema</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Marshal-by-reference objects (MBRs) do not reside in memory forever. Instead, unless the type overrides <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService_\" data-linktype=\"relative-path\">InitializeLifetimeService</a> to control its own lifetime policies, each MBR has a finite lifetime before the .NET Framework remoting system begins the process of deleting it and reclaiming the memory. For more information, see <a href=\"http://msdn.microsoft.com/en-us/c72d561c-1266-4c8b-b258-2c168c08da9a\" data-linktype=\"external\">Lifetime Leases</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_CustomErrorsEnabled_System_Boolean_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_CustomErrorsEnabled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CustomErrorsEnabled(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the server channels in this application domain return filtered or complete exception information to local or remote callers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool CustomErrorsEnabled (bool isLocalRequest);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>isLocalRequest</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to specify local callers; <code>false</code> to specify remote callers.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if only filtered exception information is returned to local or remote callers, as specified by the <code>isLocalRequest</code> parameter; <code>false</code> if complete exception information is returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Complete exception information includes the exact server exception and the server stack trace. Filtered information includes a standard remoting exception but no server stack trace.  </p>\n<p> The <code>CustomErrorsEnabled</code> method reflects configuration settings that were specified in the <code>mode</code> attribute of the <code>&lt;customErrors&gt;</code> element of the application configuration file. For more information about configuration options, see <a href=\"http://msdn.microsoft.com/en-us/92c0c097-d984-4315-835b-7490ecdf1097\" data-linktype=\"external\">&#91;&lt;topic://cpconconfiguration&gt;&#93;</a>.  </p>\n<p> The following table shows the three server channel property values that specify which callers receive exception information and what type of information they receive.  </p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>off</code></td>\n<td>All callers receive complete exception information.</td>\n</tr>\n<tr>\n<td><code>on</code></td>\n<td>All callers receive filtered exception information.</td>\n</tr>\n<tr>\n<td><code>remoteOnly</code></td>\n<td>Local callers receive complete exception information; remote callers receive filtered exception information.</td>\n</tr>\n</tbody>\n</table>\n<p> The following table shows the interaction of the <code>isLocalRequest</code> parameter and the server channel property.  </p>\n<table>\n<thead>\n<tr>\n<th>Value</th>\n<th>isLocalRequest</th>\n<th>Return value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>on</code></td>\n<td><code>true</code></td>\n<td><code>true</code></td>\n<td>Local callers receive filtered exception information.</td>\n</tr>\n<tr>\n<td><code>on</code></td>\n<td><code>false</code></td>\n<td><code>true</code></td>\n<td>Remote callers receive filtered exception information.</td>\n</tr>\n<tr>\n<td><code>off</code></td>\n<td><code>true</code></td>\n<td><code>false</code></td>\n<td>Local callers receive complete exception information.</td>\n</tr>\n<tr>\n<td><code>off</code></td>\n<td><code>false</code></td>\n<td><code>false</code></td>\n<td>Remote callers receive complete exception information.</td>\n</tr>\n<tr>\n<td><code>remoteOnly</code></td>\n<td><code>true</code></td>\n<td><code>false</code></td>\n<td>Local callers receive complete exception information.</td>\n</tr>\n<tr>\n<td><code>remoteOnly</code></td>\n<td><code>false</code></td>\n<td><code>true</code></td>\n<td>Remote callers receive filtered exception information.</td>\n</tr>\n</tbody>\n</table>\n<p> For information about using application configuration files to control the return of exception information to callers, see the <code>&lt;customErrors&gt;</code> element.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_GetRegisteredActivatedClientTypes\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_GetRegisteredActivatedClientTypes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRegisteredActivatedClientTypes()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves an array of object types registered on the client as types that will be activated remotely.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Remoting.ActivatedClientTypeEntry[] GetRegisteredActivatedClientTypes ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.activatedclienttypeentry\" data-linktype=\"relative-path\">ActivatedClientTypeEntry</a>[]</div>\r\n                  </div>\r\n                  <p>An array of object types registered on the client as types that will be activated remotely.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For a detailed description of client-activated objects, see <a href=\"http://msdn.microsoft.com/en-us/4a791494-c18a-4711-a5c1-4ab0e49a8f1a\" data-linktype=\"external\">&#91;&lt;topic://cpconClientActivation&gt;&#93;</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_GetRegisteredActivatedServiceTypes\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_GetRegisteredActivatedServiceTypes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRegisteredActivatedServiceTypes()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves an array of object types registered on the service end that can be activated on request from a client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Remoting.ActivatedServiceTypeEntry[] GetRegisteredActivatedServiceTypes ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.activatedservicetypeentry\" data-linktype=\"relative-path\">ActivatedServiceTypeEntry</a>[]</div>\r\n                  </div>\r\n                  <p>An array of object types registered on the service end that can be activated on request from a client.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For a detailed description of client-activated objects, see <a href=\"http://msdn.microsoft.com/en-us/4a791494-c18a-4711-a5c1-4ab0e49a8f1a\" data-linktype=\"external\">&#91;&lt;topic://cpconClientActivation&gt;&#93;</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"RemotingConfiguration_GetRegisteredActivatedServer_Client#2\">\n      // Check whether the &#39;MyServerImpl&#39; object is allowed for \n      // activation or not.\n      if(RemotingConfiguration.IsActivationAllowed(typeof(MyServerImpl)))\n      {\n       // Get the registered activated service types .\n       ActivatedServiceTypeEntry[] myActivatedServiceEntries =\n             RemotingConfiguration.GetRegisteredActivatedServiceTypes();\n      Console.WriteLine(&quot;The Length of the registered activated service&quot;\n                       +&quot; type array is &quot;+myActivatedServiceEntries.Length);\n      Console.WriteLine(&quot;The Object type is:&quot;\n                          +myActivatedServiceEntries[0].ObjectType);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration_GetRegisteredActivatedServer_Client#2\">      &#39; Check whether the &#39;MyServerImpl&#39; object is allowed for activation or not.\n      If RemotingConfiguration.IsActivationAllowed(GetType(MyServerImpl)) Then\n         &#39; Get the registered activated service types .\n         Dim myActivatedServiceEntries As ActivatedServiceTypeEntry() = _ \n                             RemotingConfiguration.GetRegisteredActivatedServiceTypes()\n         Console.WriteLine(&quot;The Length of the registered activated service type array is &quot; + _ \n                                        myActivatedServiceEntries.Length.ToString())\n         Console.WriteLine(&quot;The Object type is:&quot; + _ \n                                 myActivatedServiceEntries(0).ObjectType.ToString())\n      End If\n</code></pre><pre><code class=\"lang-cpp\" name=\"RemotingConfiguration_GetRegisteredActivatedServer_Client#2\">   // Check whether the &#39;MyServerImpl&#39; object is allowed for \n   // activation or not.\n   if ( RemotingConfiguration::IsActivationAllowed( MyServerImpl::typeid ) )\n   {\n      // Get the registered activated service types .\n      array&lt;ActivatedServiceTypeEntry^&gt;^myActivatedServiceEntries = RemotingConfiguration::GetRegisteredActivatedServiceTypes();\n      Console::WriteLine( &quot;The Length of the registered activated service type array is {0}&quot;, myActivatedServiceEntries-&gt;Length );\n      Console::WriteLine( &quot;The Object type is:{0}&quot;, myActivatedServiceEntries[ 0 ]-&gt;ObjectType );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_GetRegisteredWellKnownClientTypes\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_GetRegisteredWellKnownClientTypes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRegisteredWellKnownClientTypes()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves an array of object types registered on the client end as well-known types.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Remoting.WellKnownClientTypeEntry[] GetRegisteredWellKnownClientTypes ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.wellknownclienttypeentry\" data-linktype=\"relative-path\">WellKnownClientTypeEntry</a>[]</div>\r\n                  </div>\r\n                  <p>An array of object types registered on the client end as well-known types.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Well-known object types can be either single call or singleton. If an object type is single call, then a new instance of it is created each time a call from the client comes in. All calls to a singleton object are handled by one instance of that object.  </p>\n<p> For a more detailed description of well-known objects, see <a href=\"http://msdn.microsoft.com/en-us/77ded6e2-4ca8-448b-acf2-562d27fd4396\" data-linktype=\"external\">&#91;&lt;topic://cpconServerActivation&gt;&#93;</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-vb\" name=\"RemotingConfiguration_GetRegisteredWellKnownClient_Client#1\">      &#39; Get the well-known types registered at the client.\n      Dim myEntries As WellKnownClientTypeEntry() = _ \n                              RemotingConfiguration.GetRegisteredWellKnownClientTypes()\n      Console.WriteLine(&quot;The number of WellKnownClientTypeEntries are:&quot; +  _ \n                                                        myEntries.Length.ToString())\n      Console.WriteLine(&quot;The Object type is:&quot; + myEntries(0).ObjectType.ToString())\n      Console.WriteLine(&quot;The Object Url is:&quot; + myEntries(0).ObjectUrl.ToString())\n</code></pre><pre><code class=\"lang-cs\" name=\"RemotingConfiguration_GetRegisteredWellKnownClient_Client#1\">         // Get the well-known types registered at the client.\n         WellKnownClientTypeEntry[] myEntries =\n                RemotingConfiguration.GetRegisteredWellKnownClientTypes();\n         Console.WriteLine(&quot;The number of WellKnownClientTypeEntries are:&quot;\n                                    +myEntries.Length);\n         Console.WriteLine(&quot;The Object type is:&quot;+myEntries[0].ObjectType);\n         Console.WriteLine(&quot;The Object Url is:&quot;+myEntries[0].ObjectUrl);\n</code></pre><pre><code class=\"lang-cpp\" name=\"RemotingConfiguration_GetRegisteredWellKnownClient_Client#1\">   // Get the well-known types registered at the client.\n   array&lt;WellKnownClientTypeEntry^&gt;^myEntries = RemotingConfiguration::GetRegisteredWellKnownClientTypes();\n   Console::WriteLine( &quot;The number of WellKnownClientTypeEntries are:{0}&quot;, myEntries-&gt;Length );\n   Console::WriteLine( &quot;The Object type is:{0}&quot;, myEntries[ 0 ]-&gt;ObjectType );\n   Console::WriteLine( &quot;The Object Url is:{0}&quot;, myEntries[ 0 ]-&gt;ObjectUrl );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_GetRegisteredWellKnownServiceTypes\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_GetRegisteredWellKnownServiceTypes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRegisteredWellKnownServiceTypes()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves an array of object types registered on the service end as well-known types.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Remoting.WellKnownServiceTypeEntry[] GetRegisteredWellKnownServiceTypes ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.wellknownservicetypeentry\" data-linktype=\"relative-path\">WellKnownServiceTypeEntry</a>[]</div>\r\n                  </div>\r\n                  <p>An array of object types registered on the service end as well-known types.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Well-known object types can be either single call or singleton. If an object type is single call, then a new instance of it is created each time a call from the client comes in. All calls to a singleton object are handled by one instance of that object.  </p>\n<p> For a more detailed description of well-known objects, see <a href=\"http://msdn.microsoft.com/en-us/77ded6e2-4ca8-448b-acf2-562d27fd4396\" data-linktype=\"external\">&#91;&lt;topic://cpconServerActivation&gt;&#93;</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"RemotingConfiguration_Configure_Client#2\">\n   // Retrive the array of objects registered as well known types at\n   // the service end.\n   WellKnownServiceTypeEntry[] myEntries =\n             RemotingConfiguration.GetRegisteredWellKnownServiceTypes();\n   Console.WriteLine(&quot;The number of WellKnownServiceTypeEntries are:&quot;\n                                 +myEntries.Length);\n   Console.WriteLine(&quot;The Object Type is:&quot;+myEntries[0].ObjectType);\n   Console.WriteLine(&quot;The Object Uri is:&quot;+myEntries[0].ObjectUri);\n   Console.WriteLine(&quot;The Mode is:&quot;+myEntries[0].Mode);\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration_Configure_Client#2\">\n      &#39; Retrive the array of objects registered as well known types at\n      &#39; the service end.\n      Dim myEntries As WellKnownServiceTypeEntry() = _ \n                       RemotingConfiguration.GetRegisteredWellKnownServiceTypes()\n      Console.WriteLine(&quot;The number of WellKnownServiceTypeEntries are:&quot; + myEntries.Length.ToString())\n      Console.WriteLine(&quot;The Object Type is:&quot; + myEntries(0).ObjectType.ToString())\n      Console.WriteLine(&quot;The Object Uri is:&quot; + myEntries(0).ObjectUri)\n      Console.WriteLine(&quot;The Mode is:&quot; + myEntries(0).Mode.ToString())\n      \n</code></pre><pre><code class=\"lang-cpp\" name=\"RemotingConfiguration_Configure_Client#2\">   // Retrive the array of objects registered as well known types at\n   // the service end.\n   array&lt;WellKnownServiceTypeEntry^&gt;^myEntries = RemotingConfiguration::GetRegisteredWellKnownServiceTypes();\n   Console::WriteLine( &quot;The number of WellKnownServiceTypeEntries are:{0}&quot;, myEntries-&gt;Length );\n   Console::WriteLine( &quot;The Object Type is:{0}&quot;, myEntries[ 0 ]-&gt;ObjectType );\n   Console::WriteLine( &quot;The Object Uri is:{0}&quot;, myEntries[ 0 ]-&gt;ObjectUri );\n   Console::WriteLine( &quot;The Mode is:{0}&quot;, myEntries[ 0 ]-&gt;Mode );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_IsActivationAllowed_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_IsActivationAllowed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsActivationAllowed(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a Boolean value that indicates whether the specified <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> is allowed to be client activated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsActivationAllowed (Type svrType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>svrType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to check.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> is allowed to be client activated; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The current method is used at the server end to determine whether an activation of the object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> is explicitly allowed by the server.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"RemotingConfiguration_GetRegisteredActivatedServer_Client#1\">\n      // Check whether the &#39;MyServerImpl&#39; object is allowed for \n      // activation or not.\n      if(RemotingConfiguration.IsActivationAllowed(typeof(MyServerImpl)))\n      {\n       // Get the registered activated service types .\n       ActivatedServiceTypeEntry[] myActivatedServiceEntries =\n             RemotingConfiguration.GetRegisteredActivatedServiceTypes();\n      Console.WriteLine(&quot;The Length of the registered activated service&quot;\n                       +&quot; type array is &quot;+myActivatedServiceEntries.Length);\n      Console.WriteLine(&quot;The Object type is:&quot;\n                          +myActivatedServiceEntries[0].ObjectType);\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration_GetRegisteredActivatedServer_Client#1\">      &#39; Check whether the &#39;MyServerImpl&#39; object is allowed for activation or not.\n      If RemotingConfiguration.IsActivationAllowed(GetType(MyServerImpl)) Then\n         &#39; Get the registered activated service types .\n         Dim myActivatedServiceEntries As ActivatedServiceTypeEntry() = _ \n                             RemotingConfiguration.GetRegisteredActivatedServiceTypes()\n         Console.WriteLine(&quot;The Length of the registered activated service type array is &quot; + _ \n                                        myActivatedServiceEntries.Length.ToString())\n         Console.WriteLine(&quot;The Object type is:&quot; + _ \n                                 myActivatedServiceEntries(0).ObjectType.ToString())\n      End If\n</code></pre><pre><code class=\"lang-cpp\" name=\"RemotingConfiguration_GetRegisteredActivatedServer_Client#1\">   // Check whether the &#39;MyServerImpl&#39; object is allowed for \n   // activation or not.\n   if ( RemotingConfiguration::IsActivationAllowed( MyServerImpl::typeid ) )\n   {\n      // Get the registered activated service types .\n      array&lt;ActivatedServiceTypeEntry^&gt;^myActivatedServiceEntries = RemotingConfiguration::GetRegisteredActivatedServiceTypes();\n      Console::WriteLine( &quot;The Length of the registered activated service type array is {0}&quot;, myActivatedServiceEntries-&gt;Length );\n      Console::WriteLine( &quot;The Object type is:{0}&quot;, myActivatedServiceEntries[ 0 ]-&gt;ObjectType );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_IsRemotelyActivatedClientType_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_IsRemotelyActivatedClientType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsRemotelyActivatedClientType(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Checks whether the specified object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> is registered as a remotely activated client type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType (Type svrType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>svrType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object type to check.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.activatedclienttypeentry\" data-linktype=\"relative-path\">ActivatedClientTypeEntry</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.remoting.activatedclienttypeentry\" data-linktype=\"relative-path\">ActivatedClientTypeEntry</a> that corresponds to the specified object type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"RemotingConfiguration_IsRemotelyActivatedClientType1_Client#1\">      // Check whether the &#39;MyServerImpl&#39; type is registered as\n      // a remotely activated client type.\n\t  ActivatedClientTypeEntry^ myActivatedClientEntry = RemotingConfiguration::IsRemotelyActivatedClientType( MyServerImpl::typeid);\n      Console::WriteLine( &quot;The Object type is {0}&quot;, myActivatedClientEntry-&gt;ObjectType );\n      Console::WriteLine( &quot;The Application Url is {0}&quot;, myActivatedClientEntry-&gt;ApplicationUrl );\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"RemotingConfiguration_IsRemotelyActivatedClientType1_Client#1\">            // Check whether the &#39;MyServerImpl&#39; type is registered as\n            // a remotely activated client type.\n            ActivatedClientTypeEntry myActivatedClientEntry =\n            RemotingConfiguration.IsRemotelyActivatedClientType(\n                                            typeof(MyServerImpl));\n            Console.WriteLine(&quot;The Object type is &quot;\n                   +myActivatedClientEntry.ObjectType);\n            Console.WriteLine(&quot;The Application Url is &quot;\n                   +myActivatedClientEntry.ApplicationUrl);\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration_IsRemotelyActivatedClientType1_Client#1\">         &#39; Check whether the &#39;MyServerImpl&#39; type is registered as a remotely activated client type.\n         Dim myActivatedClientEntry As ActivatedClientTypeEntry = _ \n                        RemotingConfiguration.IsRemotelyActivatedClientType(GetType(MyServerImpl))\n         Console.WriteLine(&quot;The Object type is &quot; + myActivatedClientEntry.ObjectType.ToString())\n         Console.WriteLine(&quot;The Application Url is &quot; + _ \n                                          myActivatedClientEntry.ApplicationUrl.ToString())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_IsRemotelyActivatedClientType_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_IsRemotelyActivatedClientType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsRemotelyActivatedClientType(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Checks whether the object specified by its type name and assembly name is registered as a remotely activated client type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Remoting.ActivatedClientTypeEntry IsRemotelyActivatedClientType (string typeName, string assemblyName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type name of the object to check.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The assembly name of the object to check.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.activatedclienttypeentry\" data-linktype=\"relative-path\">ActivatedClientTypeEntry</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.remoting.activatedclienttypeentry\" data-linktype=\"relative-path\">ActivatedClientTypeEntry</a> that corresponds to the specified object type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"RemotingConfiguration_IsRemotelyActivatedClientType2_Client#1\">      Assembly^ myAssembly = Assembly::GetAssembly( MyServerImpl::typeid );\n      AssemblyName^ myName = myAssembly-&gt;GetName();\n\n      // Check whether the &#39;MyServerImpl&#39; type is registered as\n      // a remotely activated client type.\n      ActivatedClientTypeEntry^ myActivatedClientEntry = \n\t\t  RemotingConfiguration::IsRemotelyActivatedClientType( MyServerImpl::typeid-&gt;FullName, myName-&gt;Name );\n      Console::WriteLine( &quot;The Object type : {0}&quot;, myActivatedClientEntry-&gt;ObjectType );\n      Console::WriteLine( &quot;The Application Url : {0}&quot;, myActivatedClientEntry-&gt;ApplicationUrl );\n      if (myActivatedClientEntry)\n         Console::WriteLine( &quot;The object is client activated&quot;);\n      else\n\tConsole::WriteLine(&quot;The object is not client activated&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration_IsRemotelyActivatedClientType2_Client#1\">         Dim myAssembly As [Assembly] = [Assembly].GetAssembly(GetType(MyServerImpl))\n         Dim myName As AssemblyName = myAssembly.GetName()\n         &#39; Check whether the &#39;MyServerImpl&#39; type is registered as\n         &#39; a remotely activated client type.\n         Dim myActivatedClientEntry As ActivatedClientTypeEntry = _\n                 RemotingConfiguration.IsRemotelyActivatedClientType(GetType(MyServerImpl).FullName, _\n                 myName.Name)\n         Console.WriteLine(&quot;The Object type : &quot; + myActivatedClientEntry.ObjectType.ToString())\n         Console.WriteLine(&quot;The Application Url : &quot; + myActivatedClientEntry.ApplicationUrl)\n         if myActivatedClientEntry is nothing then\n\t   Console.WriteLine(&quot;The object is not client activated&quot;)\n\telse\n           Console.WriteLine(&quot;The object is client activated&quot;)\n\tend if\n</code></pre><pre><code class=\"lang-cs\" name=\"RemotingConfiguration_IsRemotelyActivatedClientType2_Client#1\">            Assembly myAssembly = Assembly.GetAssembly(typeof(MyServerImpl));\n            AssemblyName myName = myAssembly.GetName();\n            // Check whether the &#39;MyServerImpl&#39; type is registered as\n            // a remotely activated client type.\n            ActivatedClientTypeEntry myActivatedClientEntry =\n            RemotingConfiguration.IsRemotelyActivatedClientType(\n                                 (typeof(MyServerImpl)).FullName,myName.Name);\n            Console.WriteLine(&quot;The Object type : &quot;\n                   +myActivatedClientEntry.ObjectType);\n            Console.WriteLine(&quot;The Application Url : &quot;\n                   +myActivatedClientEntry.ApplicationUrl);\n\t    if (myActivatedClientEntry != null)\n\t\tConsole.WriteLine(&quot;Object is client activated&quot;);\n\t    else \n\t\tConsole.WriteLine(&quot;Object is not client activated&quot;);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_IsWellKnownClientType_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_IsWellKnownClientType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsWellKnownClientType(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Checks whether the specified object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> is registered as a well-known client type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType (Type svrType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>svrType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> to check.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.wellknownclienttypeentry\" data-linktype=\"relative-path\">WellKnownClientTypeEntry</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.remoting.wellknownclienttypeentry\" data-linktype=\"relative-path\">WellKnownClientTypeEntry</a> that corresponds to the specified object type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"RemotingConfiguration_IsWellKnownClientType1_Client#1\">         // Check whether the specified object type is registered as \n         // well known client type or not.\n         WellKnownClientTypeEntry myWellKnownClientType =\n             RemotingConfiguration.IsWellKnownClientType(typeof(MyServerImpl));\n         Console.WriteLine(&quot;The Object type is &quot;\n                           +myWellKnownClientType.ObjectType);\n         Console.WriteLine(&quot;The Object Url is &quot;\n                           +myWellKnownClientType.ObjectUrl);\n</code></pre><pre><code class=\"lang-cpp\" name=\"RemotingConfiguration_IsWellKnownClientType1_Client#1\">   // Check whether the specified object type is registered as \n   // well known client type or not.\n   WellKnownClientTypeEntry^ myWellKnownClientType = RemotingConfiguration::IsWellKnownClientType( MyServerImpl::typeid );\n   Console::WriteLine( &quot;The Object type is {0}&quot;, myWellKnownClientType-&gt;ObjectType );\n   Console::WriteLine( &quot;The Object Url is {0}&quot;, myWellKnownClientType-&gt;ObjectUrl );\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration_IsWellKnownClientType1_Client#1\">      &#39; Check whether the specified object type is registered as \n      &#39; well known client type or not.\n      Dim myWellKnownClientType As WellKnownClientTypeEntry = _ \n                         RemotingConfiguration.IsWellKnownClientType(GetType(MyServerImpl))\n      Console.WriteLine(&quot;The Object type is &quot; + myWellKnownClientType.ObjectType.ToString())\n      Console.WriteLine(&quot;The Object Url is &quot; + myWellKnownClientType.ObjectUrl)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_IsWellKnownClientType_System_String_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_IsWellKnownClientType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsWellKnownClientType(String,String)</div>        \r\n          </div>\r\n    \r\n            <p>Checks whether the object specified by its type name and assembly name is registered as a well-known client type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Remoting.WellKnownClientTypeEntry IsWellKnownClientType (string typeName, string assemblyName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>typeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type name of the object to check.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>assemblyName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The assembly name of the object to check.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.wellknownclienttypeentry\" data-linktype=\"relative-path\">WellKnownClientTypeEntry</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.runtime.remoting.wellknownclienttypeentry\" data-linktype=\"relative-path\">WellKnownClientTypeEntry</a> that corresponds to the specified object type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cpp\" name=\"RemotingConfiguration_IsWellKnownClientType2_Client#1\">   MyServerImpl ^ myObject = gcnew MyServerImpl;\n\n   // Get the assembly for the &#39;MyServerImpl&#39; object.\n   Assembly^ myAssembly = Assembly::GetAssembly( MyServerImpl::typeid );\n   AssemblyName^ myName = myAssembly-&gt;GetName();\n\n   // Check whether the specified object type is registered as\n   // well-known client type.\n   WellKnownClientTypeEntry^ myWellKnownClientType = RemotingConfiguration::IsWellKnownClientType( MyServerImpl::typeid-&gt;FullName, myName-&gt;Name );\n   Console::WriteLine( &quot;The Object type :{0}&quot;, myWellKnownClientType-&gt;ObjectType );\n   Console::WriteLine( &quot;The Object Uri :{0}&quot;, myWellKnownClientType-&gt;ObjectUrl );\n</code></pre><pre><code class=\"lang-cs\" name=\"RemotingConfiguration_IsWellKnownClientType2_Client#1\">         MyServerImpl myObject = new MyServerImpl();\n         // Get the assembly for the &#39;MyServerImpl&#39; object.\n         Assembly myAssembly = Assembly.GetAssembly(typeof(MyServerImpl));\n         AssemblyName myName = myAssembly.GetName();\n        // Check whether the specified object type is registered as\n        // well-known client type.\n        WellKnownClientTypeEntry myWellKnownClientType =\n           RemotingConfiguration.IsWellKnownClientType(\n                             (typeof(MyServerImpl)).FullName,myName.Name);\n        Console.WriteLine(&quot;The Object type :&quot;\n                        +myWellKnownClientType.ObjectType);\n        Console.WriteLine(&quot;The Object Uri :&quot;\n                        +myWellKnownClientType.ObjectUrl);\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration_IsWellKnownClientType2_Client#1\">      Dim myObject As New MyServerImpl()\n      &#39; Get the assembly for the &#39;MyServerImpl&#39; object.\n      Dim myAssembly As [Assembly] = [Assembly].GetAssembly(GetType(MyServerImpl))\n      Dim myName As AssemblyName = myAssembly.GetName()\n      &#39; Check whether the specified object type is registered as\n      &#39; well-known client type.\n      Dim myWellKnownClientType As WellKnownClientTypeEntry = _\n           RemotingConfiguration.IsWellKnownClientType(GetType(MyServerImpl).FullName, myName.Name)\n      Console.WriteLine(&quot;The Object type :&quot; + myWellKnownClientType.ObjectType.ToString())\n      Console.WriteLine(&quot;The Object Uri :&quot; + myWellKnownClientType.ObjectUrl)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedClientType_System_Runtime_Remoting_ActivatedClientTypeEntry_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedClientType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterActivatedClientType(ActivatedClientTypeEntry)</div>        \r\n          </div>\r\n    \r\n            <p>Registers an object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> recorded in the provided <a class=\"xref\" href=\"system.runtime.remoting.activatedclienttypeentry\" data-linktype=\"relative-path\">ActivatedClientTypeEntry</a> on the client end as a type that can be activated on the server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterActivatedClientType (System.Runtime.Remoting.ActivatedClientTypeEntry entry);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entry</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.activatedclienttypeentry\" data-linktype=\"relative-path\">ActivatedClientTypeEntry</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Configuration settings for the client-activated type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To create an instance of a client-activated object on the server, you must know its <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> and it must be registered on the server end by using the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedServiceType_\" data-linktype=\"relative-path\">RegisterActivatedServiceType</a> method. To obtain a proxy for a new instance of the client-activated object, the client must first register a channel with <a class=\"xref\" href=\"system.runtime.remoting.channels.channelservices\" data-linktype=\"relative-path\">ChannelServices</a> and then activate the object by calling <code>new</code>.  </p>\n<p> To activate a client-activated object type with the <code>new</code> keyword, you must first register the object type on the client end using the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedClientType_\" data-linktype=\"relative-path\">RegisterActivatedClientType</a> method. Calling the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedClientType_\" data-linktype=\"relative-path\">RegisterActivatedClientType</a> method gives the remoting infrastructure the location of the remote application where <code>new</code> attempts to create it. If, on the other hand, you use the <a class=\"xref\" href=\"system.activator#System_Activator_CreateInstance_\" data-linktype=\"relative-path\">CreateInstance</a> method to create a new instance of the client-activated object, you must supply the remote application&#39;s URL as a parameter, so no prior registration on the client end is necessary. To supply the <a class=\"xref\" href=\"system.activator#System_Activator_CreateInstance_\" data-linktype=\"relative-path\">CreateInstance</a> method with the URL of the server where you want to create the object, you must encapsulate the URL in an instance of the <a class=\"xref\" href=\"system.runtime.remoting.activation.urlattribute\" data-linktype=\"relative-path\">UrlAttribute</a> class.  </p>\n<p> For a detailed description of client-activated objects, see <a href=\"http://msdn.microsoft.com/en-us/4a791494-c18a-4711-a5c1-4ab0e49a8f1a\" data-linktype=\"external\">&#91;&lt;topic://cpconClientActivation&gt;&#93;</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedClientType_System_Type_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedClientType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterActivatedClientType(Type,String)</div>        \r\n          </div>\r\n    \r\n            <p>Registers an object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> on the client end as a type that can be activated on the server, using the given parameters to initialize a new instance of the <a class=\"xref\" href=\"system.runtime.remoting.activatedclienttypeentry\" data-linktype=\"relative-path\">ActivatedClientTypeEntry</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterActivatedClientType (Type type, string appUrl);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>appUrl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>URL of the application where this type is activated.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>typeName</code> or <code>URI</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To create an instance of a client-activated object on the server, you must know its <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> and it must be registered on the server end by using the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedServiceType_\" data-linktype=\"relative-path\">RegisterActivatedServiceType</a> method. To obtain a proxy for a new instance of the client-activated object, the client must first register a channel with <a class=\"xref\" href=\"system.runtime.remoting.channels.channelservices\" data-linktype=\"relative-path\">ChannelServices</a> and then activate the object by calling <code>new</code>.  </p>\n<p> To activate a client-activated object type with the <code>new</code> keyword, you must first register the object type on the client end using the RegisterActivatedClientType method. Calling the RegisterActivatedClientType method gives the remoting infrastructure the location of the remote application where <code>new</code> attempts to create it. If, on the other hand, you use the <a class=\"xref\" href=\"system.activator#System_Activator_CreateInstance_\" data-linktype=\"relative-path\">CreateInstance</a> method to create a new instance of the client-activated object, you must supply the remote application&#39;s URL as a parameter, so no prior registration on the client end is necessary. To supply the <a class=\"xref\" href=\"system.activator#System_Activator_CreateInstance_\" data-linktype=\"relative-path\">CreateInstance</a> method with the URL of the server where you want to create the object, you must encapsulate the URL in an instance of the <a class=\"xref\" href=\"system.runtime.remoting.activation.urlattribute\" data-linktype=\"relative-path\">UrlAttribute</a> class.  </p>\n<p> For a detailed description of client-activated objects, see <a href=\"http://msdn.microsoft.com/en-us/4a791494-c18a-4711-a5c1-4ab0e49a8f1a\" data-linktype=\"external\">&#91;&lt;topic://cpconClientActivation&gt;&#93;</a></p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates registration of an object type on the client end as a type that can be activated on the server. For the server code that corresponds to the presented client code, see the example for the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedServiceType_\" data-linktype=\"relative-path\">RegisterActivatedServiceType</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"RemotingConfiguration.ClientActivation#1\">using System;\nusing System.Runtime.Remoting;\nusing System.Runtime.Remoting.Channels;\nusing System.Runtime.Remoting.Channels.Tcp;\n\npublic class ClientClass {\n\n    public static void Main() { \n\n        ChannelServices.RegisterChannel(new TcpChannel());\n\n        RemotingConfiguration.RegisterActivatedClientType(typeof(HelloServiceClass),\n                                                   &quot;tcp://localhost:8082&quot;);\n\n        try\n        {\n            HelloServiceClass service = new HelloServiceClass();\n\n\n           // Calls the remote method.\n           Console.WriteLine();\n           Console.WriteLine(&quot;Calling remote object&quot;);\n           Console.WriteLine(service.HelloMethod(&quot;Caveman&quot;));\n           Console.WriteLine(service.HelloMethod(&quot;Spaceman&quot;));\n           Console.WriteLine(service.HelloMethod(&quot;Client Man&quot;));\n           Console.WriteLine(&quot;Finished remote object call&quot;);\n           Console.WriteLine();\n        }\n\tcatch (Exception ex)\n\t{\n\t   Console.WriteLine(&quot;An exception occured: &quot; + ex.Message);\n        }\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"RemotingConfiguration.ClientActivation#1\">#using &lt;system.dll&gt;\n#using &lt;system.runtime.remoting.dll&gt;\n#using &quot;service.dll&quot;\n\nusing namespace System;\nusing namespace System::Runtime::Remoting;\nusing namespace System::Runtime::Remoting::Channels;\nusing namespace System::Runtime::Remoting::Channels::Tcp;\n\nint main()\n{\n   ChannelServices::RegisterChannel( gcnew TcpChannel );\n   RemotingConfiguration::RegisterActivatedClientType( HelloServiceClass::typeid, &quot;tcp://localhost:8082&quot; );\n   try\n   {\n      HelloServiceClass ^ service = gcnew HelloServiceClass;\n\n      // Calls the remote method.\n      Console::WriteLine();\n      Console::WriteLine( &quot;Calling remote Object&quot; );\n      Console::WriteLine( service-&gt;HelloMethod( &quot;Caveman&quot; ) );\n      Console::WriteLine( service-&gt;HelloMethod( &quot;Spaceman&quot; ) );\n      Console::WriteLine( service-&gt;HelloMethod( &quot;Client Man&quot; ) );\n      Console::WriteLine( &quot;Finished remote Object call&quot; );\n    }\n    catch (Exception ex)\n    {\n        Console::WriteLine(&quot;An exception occurred: &quot; + ex.Message);\n    }\n   Console::WriteLine();\n   return 0;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration.ClientActivation#1\">Imports System\nImports System.Runtime.Remoting\nImports System.Runtime.Remoting.Channels\nImports System.Runtime.Remoting.Channels.Tcp\n\n\nPublic Class ClientClass\n   \n   Public Shared Sub Main()\n      \n      ChannelServices.RegisterChannel(New TcpChannel())\n      \n      RemotingConfiguration.RegisterActivatedClientType(GetType(HelloServiceClass), &quot;tcp://localhost:8082&quot;)\n      \n      Try\n          Dim service As New HelloServiceClass()\n      \n       \n          &#39; Calls the remote method.\n          Console.WriteLine()\n          Console.WriteLine(&quot;Calling remote object&quot;)\n          Console.WriteLine(service.HelloMethod(&quot;Caveman&quot;))\n          Console.WriteLine(service.HelloMethod(&quot;Spaceman&quot;))\n          Console.WriteLine(service.HelloMethod(&quot;Client Man&quot;))\n          Console.WriteLine(&quot;Finished remote object call&quot;)\n      Catch ex as Exception\n          Console.WriteLine(&quot;An exception occurred: &quot; + ex.Message)\n      End Try\n\n      Console.WriteLine()\n\n   End Sub &#39;Main\n\nEnd Class &#39;ClientClass\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedServiceType_System_Runtime_Remoting_ActivatedServiceTypeEntry_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedServiceType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterActivatedServiceType(ActivatedServiceTypeEntry)</div>        \r\n          </div>\r\n    \r\n            <p>Registers an object type recorded in the provided <a class=\"xref\" href=\"system.runtime.remoting.activatedservicetypeentry\" data-linktype=\"relative-path\">ActivatedServiceTypeEntry</a> on the service end as one that can be activated on request from a client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterActivatedServiceType (System.Runtime.Remoting.ActivatedServiceTypeEntry entry);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entry</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.activatedservicetypeentry\" data-linktype=\"relative-path\">ActivatedServiceTypeEntry</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Configuration settings for the client-activated type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To create an instance of a client-activated object on the server, you must know its <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> and it must be registered on the server end by using the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedServiceType_\" data-linktype=\"relative-path\">RegisterActivatedServiceType</a> method. To obtain a proxy for a new instance of the client-activated object, the client must first register a channel with <a class=\"xref\" href=\"system.runtime.remoting.channels.channelservices\" data-linktype=\"relative-path\">ChannelServices</a> and then activate the object by calling <code>new</code> or <a class=\"xref\" href=\"system.activator#System_Activator_CreateInstance_\" data-linktype=\"relative-path\">CreateInstance</a>.  </p>\n<p> To activate a client-activated object type with the <code>new</code> keyword, you must first register the object type on the client end using the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedClientType_\" data-linktype=\"relative-path\">RegisterActivatedClientType</a> method. Calling the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedClientType_\" data-linktype=\"relative-path\">RegisterActivatedClientType</a> method gives the remoting infrastructure the location of the remote application, where <code>new</code> attempts to create it. If, on the other hand, you use the <a class=\"xref\" href=\"system.activator#System_Activator_CreateInstance_\" data-linktype=\"relative-path\">CreateInstance</a> method to create a new instance of the client-activated object, you must supply the remote application&#39;s URL as a parameter, so no prior registration on the client end is necessary. To supply the <a class=\"xref\" href=\"system.activator#System_Activator_CreateInstance_\" data-linktype=\"relative-path\">CreateInstance</a> method with the URL of the server where you want to create the object, you must encapsulate the URL in an instance of the <a class=\"xref\" href=\"system.runtime.remoting.activation.urlattribute\" data-linktype=\"relative-path\">UrlAttribute</a> class.  </p>\n<p> For a detailed description of client-activated objects, see <a href=\"http://msdn.microsoft.com/en-us/4a791494-c18a-4711-a5c1-4ab0e49a8f1a\" data-linktype=\"external\">&#91;&lt;topic://cpconClientActivation&gt;&#93;</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedServiceType_System_Type_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedServiceType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterActivatedServiceType(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Registers a specified object type on the service end as a type that can be activated on request from a client.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterActivatedServiceType (Type type);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of object to register.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To create an instance of a client-activated object on the server, you must know its <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> and it must be registered on the server end by using the RegisterActivatedServiceType method. To obtain a proxy for a new instance of the client-activated object, the client must first register a channel with <a class=\"xref\" href=\"system.runtime.remoting.channels.channelservices\" data-linktype=\"relative-path\">ChannelServices</a> and then activate the object by calling <code>new</code> or <a class=\"xref\" href=\"system.activator#System_Activator_CreateInstance_\" data-linktype=\"relative-path\">CreateInstance</a>.  </p>\n<p> To activate a client-activated object type with the <code>new</code> keyword, you must first register the object type on the client end using the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedClientType_\" data-linktype=\"relative-path\">RegisterActivatedClientType</a> method. Calling the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedClientType_\" data-linktype=\"relative-path\">RegisterActivatedClientType</a> method gives the remoting infrastructure the location of the remote application, where <code>new</code> attempts to create it. If, on the other hand, you use the <a class=\"xref\" href=\"system.activator#System_Activator_CreateInstance_\" data-linktype=\"relative-path\">CreateInstance</a> method to create a new instance of the client-activated object, you must supply the remote application&#39;s URL as a parameter, so no prior registration on the client end is necessary. To supply the <a class=\"xref\" href=\"system.activator#System_Activator_CreateInstance_\" data-linktype=\"relative-path\">CreateInstance</a> method with the URL of the server where you want to create the object, you must encapsulate the URL in an instance of the <a class=\"xref\" href=\"system.runtime.remoting.activation.urlattribute\" data-linktype=\"relative-path\">UrlAttribute</a> class.  </p>\n<p> For a detailed description of client-activated objects, see <a href=\"http://msdn.microsoft.com/en-us/4a791494-c18a-4711-a5c1-4ab0e49a8f1a\" data-linktype=\"external\">&#91;&lt;topic://cpconClientActivation&gt;&#93;</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates registration of an object type on the server as a type that can be activated by the client. For the client code that corresponds to the presented server code, see the example for the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterActivatedClientType_\" data-linktype=\"relative-path\">RegisterActivatedClientType</a> method.  </p>\n<pre><code class=\"lang-cpp\" name=\"RemotingConfiguration.ClientActivation#2\">#using &lt;system.dll&gt;\n#using &lt;system.runtime.remoting.dll&gt;\n#using &quot;service.dll&quot;\n\nusing namespace System;\nusing namespace System::Runtime::Remoting;\nusing namespace System::Runtime::Remoting::Channels;\nusing namespace System::Runtime::Remoting::Channels::Tcp;\n\nint main()\n{\n   ChannelServices::RegisterChannel( gcnew TcpChannel( 8082 ) );\n   RemotingConfiguration::RegisterActivatedServiceType( HelloServiceClass::typeid );\n   Console::WriteLine( &quot;Press enter to stop this process.&quot; );\n   Console::ReadLine();\n   return 0;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration.ClientActivation#2\">Imports System\nImports System.Runtime.Remoting\nImports System.Runtime.Remoting.Channels\nImports System.Runtime.Remoting.Channels.Tcp\n\n\nPublic Class ServerClass\n      \n   Public Shared Sub Main()\n      \n      ChannelServices.RegisterChannel(New TcpChannel(8082))     \n      RemotingConfiguration.RegisterActivatedServiceType(GetType(HelloServiceClass))\n      \n      Console.WriteLine(&quot;Press enter to stop this process.&quot;)\n      Console.ReadLine()\n\n   End Sub &#39;Main\n\nEnd Class &#39;ServerClass\n</code></pre><pre><code class=\"lang-cs\" name=\"RemotingConfiguration.ClientActivation#2\">using System;\nusing System.Runtime.Remoting;\nusing System.Runtime.Remoting.Channels;\nusing System.Runtime.Remoting.Channels.Tcp;\n\npublic class ServerClass {\n\n    public static void Main()  {\n\n        ChannelServices.RegisterChannel(new TcpChannel(8082));\n\n        RemotingConfiguration.RegisterActivatedServiceType(typeof(HelloServiceClass));\n\n        Console.WriteLine(&quot;Press enter to stop this process.&quot;);\n        Console.ReadLine();\n    }\n}\n</code></pre><p> The following code example shows the service object registered in the sample code above.  </p>\n<pre><code class=\"lang-cpp\" name=\"RemotingConfiguration.ClientActivation#3\">#using &lt;system.dll&gt;\n\nusing namespace System;\n\npublic ref class HelloServiceClass: public MarshalByRefObject\n{\nprivate:\n   static int n_instance;\n\npublic:\n   HelloServiceClass()\n   {\n      n_instance++;\n      Console::WriteLine(  &quot;{0} has been created.  Instance # = {1}&quot;, this-&gt;GetType()-&gt;Name, n_instance );\n   }\n\n   ~HelloServiceClass()\n   {\n      Console::WriteLine( &quot;Destroyed instance {0} of HelloServiceClass.&quot;, n_instance );\n      n_instance--;\n   }\n\n   String^ HelloMethod( String^ name )\n   {\n      // Reports that the method was called.\n      Console::WriteLine();\n      Console::WriteLine( &quot;Called HelloMethod on instance {0} with the &#39;{1}&#39; parameter.&quot;, n_instance, name );\n\n      // Calculates and returns the result to the client.\n      return String::Format( &quot;Hi there {0}&quot;, name );\n   }\n};\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration.ClientActivation#3\">Imports System\n\nPublic Class HelloServiceClass\n   Inherits MarshalByRefObject\n   \n   Private Shared n_instance As Integer\n\n      \n   Public Sub New()\n      n_instance += 1\n      Console.WriteLine(Me.GetType().Name + &quot; has been created.  Instance # = {0}&quot;, n_instance)\n   End Sub &#39;New\n      \n   \n   Protected Overrides Sub Finalize()\n      Console.WriteLine(&quot;Destroyed instance {0} of HelloServiceClass.&quot;, n_instance)\n      n_instance -= 1\n      MyBase.Finalize()\n   End Sub &#39;Finalize\n   \n   \n   \n   Public Function HelloMethod(name As [String]) As [String]\n      \n      &#39; Reports that the method was called.\n      Console.WriteLine()\n      Console.WriteLine(&quot;Called HelloMethod on instance {0} with the &#39;{1}&#39; parameter.&quot;, n_instance, name)\n      \n      &#39; Calculates and returns the result to the client.\n      Return &quot;Hi there &quot; + name + &quot;.&quot;\n\n   End Function &#39;HelloMethod\n\nEnd Class &#39;HelloServiceClass\n</code></pre><pre><code class=\"lang-cs\" name=\"RemotingConfiguration.ClientActivation#3\">using System;\n\npublic class HelloServiceClass : MarshalByRefObject {\n\n    static int n_instance;\n\n    public HelloServiceClass() {\n        n_instance++;\n        Console.WriteLine(this.GetType().Name + &quot; has been created.  Instance # = {0}&quot;, n_instance);\n    }\n\n\n    ~HelloServiceClass() {\n        Console.WriteLine(&quot;Destroyed instance {0} of HelloServiceClass.&quot;, n_instance);\n        n_instance --;\n    }\n\n\n    public String HelloMethod(String name) {\n\n        // Reports that the method was called.\n        Console.WriteLine();\n        Console.WriteLine(&quot;Called HelloMethod on instance {0} with the &#39;{1}&#39; parameter.&quot;, \n                             n_instance, name);\n\n        // Calculates and returns the result to the client.\n        return &quot;Hi there &quot; + name + &quot;.&quot;;\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownClientType_System_Runtime_Remoting_WellKnownClientTypeEntry_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownClientType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterWellKnownClientType(WellKnownClientTypeEntry)</div>        \r\n          </div>\r\n    \r\n            <p>Registers an object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> recorded in the provided <a class=\"xref\" href=\"system.runtime.remoting.wellknownclienttypeentry\" data-linktype=\"relative-path\">WellKnownClientTypeEntry</a> on the client end as a well-known type that can be activated on the server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterWellKnownClientType (System.Runtime.Remoting.WellKnownClientTypeEntry entry);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entry</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.wellknownclienttypeentry\" data-linktype=\"relative-path\">WellKnownClientTypeEntry</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Configuration settings for the well-known type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any client that knows the URI of a registered well-known object can obtain a proxy for the object by registering the channel it prefers with <a class=\"xref\" href=\"system.runtime.remoting.channels.channelservices\" data-linktype=\"relative-path\">ChannelServices</a>, and activating the object by calling <code>new</code> or <a class=\"xref\" href=\"system.activator#System_Activator_GetObject_\" data-linktype=\"relative-path\">GetObject</a>. To activate a well-known object with <code>new</code>, you must first register the well-known object type on the client using the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownClientType_\" data-linktype=\"relative-path\">RegisterWellKnownClientType</a> method. Calling the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownClientType_\" data-linktype=\"relative-path\">RegisterWellKnownClientType</a> method gives the remoting infrastructure the location of the remote object, which allows the <code>new</code> keyword to create it. If, on the other hand, you use the <a class=\"xref\" href=\"system.activator#System_Activator_GetObject_\" data-linktype=\"relative-path\">GetObject</a> method to activate the well-known object, you must supply it with the object&#39;s URL as an argument, so no prior registration on the client end is necessary.  </p>\n<p> For a detailed description of well-known objects, see <a href=\"http://msdn.microsoft.com/en-us/77ded6e2-4ca8-448b-acf2-562d27fd4396\" data-linktype=\"external\">&#91;&lt;topic://cpconServerActivation&gt;&#93;</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownClientType_System_Type_System_String_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownClientType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterWellKnownClientType(Type,String)</div>        \r\n          </div>\r\n    \r\n            <p>Registers an object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> on the client end as a well-known type that can be activated on the server, using the given parameters to initialize a new instance of the <a class=\"xref\" href=\"system.runtime.remoting.wellknownclienttypeentry\" data-linktype=\"relative-path\">WellKnownClientTypeEntry</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterWellKnownClientType (Type type, string objectUrl);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>objectUrl</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>URL of a well-known client object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any client that knows the URI of a registered well-known object can obtain a proxy for the object by registering the channel it prefers with <a class=\"xref\" href=\"system.runtime.remoting.channels.channelservices\" data-linktype=\"relative-path\">ChannelServices</a>, and activating the object by calling <code>new</code> or <a class=\"xref\" href=\"system.activator#System_Activator_GetObject_\" data-linktype=\"relative-path\">GetObject</a>. To activate a well-known object with <code>new</code>, you must first register the well-known object type on the client using the RegisterWellKnownClientType method. Calling the RegisterWellKnownClientType method gives the remoting infrastructure the location of the remote object, which allows the <code>new</code> keyword to create it. If, on the other hand, you use the <a class=\"xref\" href=\"system.activator#System_Activator_GetObject_\" data-linktype=\"relative-path\">GetObject</a> method to activate the well-known object, you must supply it with the object&#39;s URL as an argument, so no prior registration on the client end is necessary.  </p>\n<p> For a detailed description of well-known objects, see <a href=\"http://msdn.microsoft.com/en-us/77ded6e2-4ca8-448b-acf2-562d27fd4396\" data-linktype=\"external\">&#91;&lt;topic://cpconServerActivation&gt;&#93;</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates registration of an object type on the client end as a well-known type. For the server code that corresponds to the presented client code, see the example for the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownServiceType_\" data-linktype=\"relative-path\">RegisterWellKnownServiceType</a> method.  </p>\n<pre><code class=\"lang-cpp\" name=\"RemotingConfiguration.ServerActivation1#5\">#using &lt;system.dll&gt;\n#using &lt;system.runtime.remoting.dll&gt;\n#using &quot;service.dll&quot;\n\nusing namespace System;\nusing namespace System::Runtime::Remoting;\nusing namespace System::Runtime::Remoting::Channels::Tcp;\nusing namespace System::Runtime::Remoting::Channels;\nint main()\n{\n</code></pre><pre><code class=\"lang-cs\" name=\"RemotingConfiguration.ServerActivation1#5\">using System;\nusing System.Runtime.Remoting;\nusing System.Runtime.Remoting.Channels.Tcp;\nusing System.Runtime.Remoting.Channels;\n\n\npublic class ClientClass {\n\n    public static void Main() { \n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration.ServerActivation1#5\">Imports System\nImports System.Runtime.Remoting\nImports System.Runtime.Remoting.Channels.Tcp\nImports System.Runtime.Remoting.Channels\n\n\nPublic Class ClientClass\n   \n   \n   Public Shared Sub Main()\n      \n</code></pre><pre><code class=\"lang-cpp\" name=\"RemotingConfiguration.ServerActivation1#6\">   ChannelServices::RegisterChannel( gcnew TcpChannel );\n   RemotingConfiguration::RegisterWellKnownClientType( HelloService::typeid,\n                                                       &quot;tcp://localhost:8082/HelloServiceApplication/MyUri&quot; );\n   HelloService ^ service = gcnew HelloService;\n</code></pre><pre><code class=\"lang-cs\" name=\"RemotingConfiguration.ServerActivation1#6\">        ChannelServices.RegisterChannel(new TcpChannel());\n\n        RemotingConfiguration.RegisterWellKnownClientType(\n                                                           typeof(HelloService),\n                                                           &quot;tcp://localhost:8082/HelloServiceApplication/MyUri&quot;\n                                                         );\n\n        HelloService service = new HelloService();\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration.ServerActivation1#6\">      ChannelServices.RegisterChannel(New TcpChannel())\n      \n      RemotingConfiguration.RegisterWellKnownClientType(GetType(HelloService), &quot;tcp://localhost:8082/HelloServiceApplication/MyUri&quot;)\n      \n      Dim service As New HelloService()\n</code></pre><pre><code class=\"lang-cpp\" name=\"RemotingConfiguration.ServerActivation1#7\">   if ( service == nullptr )\n   {\n      Console::WriteLine( &quot;Could not locate server.&quot; );\n      return  -1;\n   }\n\n   // Calls the remote method.\n   Console::WriteLine();\n   Console::WriteLine( &quot;Calling remote Object*&quot; );\n   Console::WriteLine( service-&gt;HelloMethod( &quot;Caveman&quot; ) );\n   Console::WriteLine( service-&gt;HelloMethod( &quot;Spaceman&quot; ) );\n   Console::WriteLine( service-&gt;HelloMethod( &quot;Client Man&quot; ) );\n   Console::WriteLine( &quot;Finished remote Object* call&quot; );\n   Console::WriteLine();\n   return 0;\n}\n</code></pre><pre><code class=\"lang-cs\" name=\"RemotingConfiguration.ServerActivation1#7\">\n        if(service == null) {\n            Console.WriteLine(&quot;Could not locate server.&quot;);\n            return;\n        }\n\n\n        // Calls the remote method.\n        Console.WriteLine();\n        Console.WriteLine(&quot;Calling remote object&quot;);\n        Console.WriteLine(service.HelloMethod(&quot;Caveman&quot;));\n        Console.WriteLine(service.HelloMethod(&quot;Spaceman&quot;));\n        Console.WriteLine(service.HelloMethod(&quot;Client Man&quot;));\n        Console.WriteLine(&quot;Finished remote object call&quot;);\n        Console.WriteLine();\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration.ServerActivation1#7\">\n      If service Is Nothing Then\n         Console.WriteLine(&quot;Could not locate server.&quot;)\n         Return\n      End If\n            \n      &#39; Calls the remote method.\n      Console.WriteLine()\n      Console.WriteLine(&quot;Calling remote object&quot;)\n      Console.WriteLine(service.HelloMethod(&quot;Caveman&quot;))\n      Console.WriteLine(service.HelloMethod(&quot;Spaceman&quot;))\n      Console.WriteLine(service.HelloMethod(&quot;Client Man&quot;))\n      Console.WriteLine(&quot;Finished remote object call&quot;)\n      Console.WriteLine()\n\n   End Sub &#39;Main\n\nEnd Class &#39;ClientClass\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownServiceType_System_Runtime_Remoting_WellKnownServiceTypeEntry_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownServiceType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterWellKnownServiceType(WellKnownServiceTypeEntry)</div>        \r\n          </div>\r\n    \r\n            <p>Registers an object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> recorded in the provided <a class=\"xref\" href=\"system.runtime.remoting.wellknownservicetypeentry\" data-linktype=\"relative-path\">WellKnownServiceTypeEntry</a> on the service end as a well-known type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterWellKnownServiceType (System.Runtime.Remoting.WellKnownServiceTypeEntry entry);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>entry</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.wellknownservicetypeentry\" data-linktype=\"relative-path\">WellKnownServiceTypeEntry</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Configuration settings for the well-known type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any client that knows the URI of a registered well-known object can obtain a proxy for the object by registering the channel it prefers with <a class=\"xref\" href=\"system.runtime.remoting.channels.channelservices\" data-linktype=\"relative-path\">ChannelServices</a>, and activating the object by calling <code>new</code> or the <a class=\"xref\" href=\"system.activator#System_Activator_GetObject_\" data-linktype=\"relative-path\">GetObject</a> method. To activate a well-known object with <code>new</code>, you must first register the well-known object type on the client using the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownClientType_\" data-linktype=\"relative-path\">RegisterWellKnownClientType</a> method. Calling the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownClientType_\" data-linktype=\"relative-path\">RegisterWellKnownClientType</a> method gives the remoting infrastructure the location of the remote object, which allows the <code>new</code> keyword to create it. If, on the other hand, you use the <a class=\"xref\" href=\"system.activator#System_Activator_GetObject_\" data-linktype=\"relative-path\">GetObject</a> method to activate the well-known object, you must supply it with the object&#39;s URL as an argument, so no prior registration on the client end is necessary.  </p>\n<p> When the call arrives at the server, the .NET Framework extracts the URI from the message, examines the remoting tables to locate the reference for the object that matches the URI, and then instantiates the object if necessary, forwarding the method call to the object. If the object is registered as <a class=\"xref\" href=\"system.runtime.remoting.wellknownobjectmode\" data-linktype=\"relative-path\">WellKnownObjectMode</a>, it is destroyed after the method call is completed. A new instance of the object is created for each method called. The only difference between <a class=\"xref\" href=\"system.activator#System_Activator_GetObject_\" data-linktype=\"relative-path\">GetObject</a> and <code>new</code> is that the former allows you to specify a URL as a parameter, and the latter obtains the URL from the configuration.  </p>\n<p> The remote object itself is not instantiated by the registration process. This only happens when a client attempts to call a method on the object or activates the object from the client side.  </p>\n<p> For a detailed description of well-known objects, see <a href=\"http://msdn.microsoft.com/en-us/77ded6e2-4ca8-448b-acf2-562d27fd4396\" data-linktype=\"external\">&#91;&lt;topic://cpconServerActivation&gt;&#93;</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <pre><code class=\"lang-cs\" name=\"CreateObjRef2#2\">using System;\nusing System.Runtime.Remoting;\nusing System.Runtime.Remoting.Channels;\nusing System.Runtime.Remoting.Channels.Http;\nusing System.Runtime.Remoting.Messaging;\nusing System.Runtime.Serialization;\nusing System.Security.Permissions;\n\npublic class ObjRefExample {\n\n   [PermissionSet(SecurityAction.LinkDemand)]\n   public static void Main() {\n\n      ChannelServices.RegisterChannel(new HttpChannel(8090));\n\n      WellKnownServiceTypeEntry wkste = \n         new WellKnownServiceTypeEntry(typeof(RemoteObject), \n                                       &quot;RemoteObject&quot;, \n                                       WellKnownObjectMode.Singleton);\n      \n      RemotingConfiguration.RegisterWellKnownServiceType( wkste );\n\n      RemoteObject RObj = \n         (RemoteObject)Activator.GetObject(typeof(RemoteObject), \n                                           &quot;http://localhost:8090/RemoteObject&quot;);\n\n      LocalObject LObj = new LocalObject();\n      \n      RObj.Method1( LObj );\n\n      Console.WriteLine(&quot;Press Return to exit...&quot;);\n      Console.ReadLine();\n   }\n}\n\n[PermissionSet(SecurityAction.Demand, Name=&quot;FullTrust&quot;)] \npublic class RemoteObject : MarshalByRefObject {\n\n   public void Method1(LocalObject param) {\n      Console.WriteLine(&quot;Invoked: Method1({0})&quot;, param);\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"CreateObjRef2#2\">Imports System\nImports System.Runtime.Remoting\nImports System.Runtime.Remoting.Channels\nImports System.Runtime.Remoting.Channels.Http\nImports System.Runtime.Remoting.Messaging\nImports System.Runtime.Serialization\nImports System.Security.Permissions\nImports Microsoft.VisualBasic\n\n\n&#39; code that drives the example\nPublic Class ObjRefExample\n\n   &lt;PermissionSet(SecurityAction.LinkDemand)&gt; _\n   Public Overloads Shared Sub Main()\n      ChannelServices.RegisterChannel(New HttpChannel(8090))\n\n      RemotingConfiguration.RegisterWellKnownServiceType(New WellKnownServiceTypeEntry(GetType(RemoteObject), &quot;RemoteObject&quot;, WellKnownObjectMode.Singleton))\n\n      Dim RObj As RemoteObject = CType(Activator.GetObject(GetType(RemoteObject), &quot;http://localhost:8090/RemoteObject&quot;), RemoteObject)\n      Dim LObj As New LocalObject()\n\n      RObj.Method1(LObj)\n\n      Console.WriteLine(&quot;Press Return to exit...&quot;)\n\n      Console.ReadLine()\n   End Sub\n\nEnd Class\n\n\n&#39; a simple remote object\n&lt;PermissionSet(SecurityAction.Demand, Name:=&quot;FullTrust&quot;)&gt; _\nPublic Class RemoteObject\n   Inherits MarshalByRefObject\n\n   Public Sub Method1(ByVal param As LocalObject)\n       Console.WriteLine(&quot;Invoked: Method1({0})&quot;, param)\n   End Sub\n\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"CreateObjRef2#2\">#using &lt;system.dll&gt;\n#using &lt;system.runtime.remoting.dll&gt;\n\nusing namespace System;\nusing namespace System::Runtime::Remoting;\nusing namespace System::Runtime::Remoting::Channels;\nusing namespace System::Runtime::Remoting::Channels::Http;\nusing namespace System::Runtime::Remoting::Messaging;\nusing namespace System::Runtime::Serialization;\n\npublic ref class RemoteObject: public MarshalByRefObject\n{\npublic:\n   void Method1( LocalObject^ param )\n   {\n      Console::WriteLine( &quot;Invoked: Method1( {0})&quot;, param );\n   }\n};\n\nint main()\n{\n   ChannelServices::RegisterChannel( gcnew HttpChannel( 8090 ) );\n   WellKnownServiceTypeEntry^ wkste = gcnew WellKnownServiceTypeEntry( RemoteObject::typeid,&quot;RemoteObject&quot;,WellKnownObjectMode::Singleton );\n   RemotingConfiguration::RegisterWellKnownServiceType( wkste );\n   RemoteObject^ RObj = dynamic_cast&lt;RemoteObject^&gt;(Activator::GetObject( RemoteObject::typeid, &quot;http://localhost:8090/RemoteObject&quot; ));\n   LocalObject^ LObj = gcnew LocalObject;\n   RObj-&gt;Method1( LObj );\n   Console::WriteLine( &quot;Press Return to exit...&quot; );\n   Console::ReadLine();\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownServiceType_System_Type_System_String_System_Runtime_Remoting_WellKnownObjectMode_\">\r\n    \r\n            <a id=\"System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownServiceType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterWellKnownServiceType(Type,String,WellKnownObjectMode)</div>        \r\n          </div>\r\n    \r\n            <p>Registers an object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> on the service end as a well-known type, using the given parameters to initialize a new instance of <a class=\"xref\" href=\"system.runtime.remoting.wellknownservicetypeentry\" data-linktype=\"relative-path\">WellKnownServiceTypeEntry</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterWellKnownServiceType (Type type, string objectUri, System.Runtime.Remoting.WellKnownObjectMode mode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>type</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>objectUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object URI.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>mode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.remoting.wellknownobjectmode\" data-linktype=\"relative-path\">WellKnownObjectMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The activation mode of the well-known object type being registered. (See <a class=\"xref\" href=\"system.runtime.remoting.wellknownobjectmode\" data-linktype=\"relative-path\">WellKnownObjectMode</a>.)</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Any client that knows the URI of a registered well-known object can obtain a proxy for the object by registering the channel it prefers with <a class=\"xref\" href=\"system.runtime.remoting.channels.channelservices\" data-linktype=\"relative-path\">ChannelServices</a>, and activating the object by calling <code>new</code> or the <a class=\"xref\" href=\"system.activator#System_Activator_GetObject_\" data-linktype=\"relative-path\">GetObject</a> method. To activate a well-known object with <code>new</code>, you must first register the well-known object type on the client using the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownClientType_\" data-linktype=\"relative-path\">RegisterWellKnownClientType</a> method. Calling the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownClientType_\" data-linktype=\"relative-path\">RegisterWellKnownClientType</a> method gives the remoting infrastructure the location of the remote object, which allows the <code>new</code> keyword to create it. If, on the other hand, you use the <a class=\"xref\" href=\"system.activator#System_Activator_GetObject_\" data-linktype=\"relative-path\">GetObject</a> method to activate the well-known object, you must supply it with the object&#39;s URL as an argument, so no prior registration on the client end is necessary.  </p>\n<p> When the call arrives at the server, the .NET Framework extracts the URI from the message, examines the remoting tables to locate the reference for the object that matches the URI, and then instantiates the object if necessary, forwarding the method call to the object. If the object is registered as <a class=\"xref\" href=\"system.runtime.remoting.wellknownobjectmode\" data-linktype=\"relative-path\">WellKnownObjectMode</a>, it is destroyed after the method call is completed. A new instance of the object is created for each method called. The only difference between <a class=\"xref\" href=\"system.activator#System_Activator_GetObject_\" data-linktype=\"relative-path\">GetObject</a> and <code>new</code> is that the former allows you to specify a URL as a parameter, and the latter obtains the URL from the configuration.  </p>\n<p> The remote object itself is not instantiated by the registration process. This only happens when a client attempts to call a method on the object or activates the object from the client side.  </p>\n<p> For a detailed description of well-known objects, see <a href=\"http://msdn.microsoft.com/en-us/77ded6e2-4ca8-448b-acf2-562d27fd4396\" data-linktype=\"external\">&#91;&lt;topic://cpconServerActivation&gt;&#93;</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates registration of an object type on the server as a well-known object type. For the client code that corresponds to the presented server code, see the example for the <a class=\"xref\" href=\"system.runtime.remoting.remotingconfiguration#System_Runtime_Remoting_RemotingConfiguration_RegisterWellKnownClientType_\" data-linktype=\"relative-path\">RegisterWellKnownClientType</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"RemotingConfiguration.ServerActivation1#1\">using System;\nusing System.Runtime.Remoting;\nusing System.Runtime.Remoting.Channels;\nusing System.Runtime.Remoting.Channels.Tcp;\n\npublic class ServerClass {\n\n    public static void Main()  {\n</code></pre><pre><code class=\"lang-cpp\" name=\"RemotingConfiguration.ServerActivation1#1\">#using &lt;system.dll&gt;\n#using &lt;system.runtime.remoting.dll&gt;\n#using &quot;service.dll&quot;\n\nusing namespace System;\nusing namespace System::Runtime::Remoting;\nusing namespace System::Runtime::Remoting::Channels;\nusing namespace System::Runtime::Remoting::Channels::Tcp;\nint main()\n{\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration.ServerActivation1#1\">Imports System\nImports System.Runtime.Remoting\nImports System.Runtime.Remoting.Channels\nImports System.Runtime.Remoting.Channels.Tcp\n\n\nPublic Class ServerClass\n   \n   Public Shared Sub Main()\n</code></pre><pre><code class=\"lang-cs\" name=\"RemotingConfiguration.ServerActivation1#2\">        ChannelServices.RegisterChannel(new TcpChannel(8082));\n\n        RemotingConfiguration.ApplicationName = &quot;HelloServiceApplication&quot;;\n\n        RemotingConfiguration.RegisterWellKnownServiceType( typeof(HelloService),\n                                                            &quot;MyUri&quot;,\n                                                            WellKnownObjectMode.SingleCall \n                                                          );\n</code></pre><pre><code class=\"lang-cpp\" name=\"RemotingConfiguration.ServerActivation1#2\">   ChannelServices::RegisterChannel( gcnew TcpChannel( 8082 ) );\n   RemotingConfiguration::ApplicationName = &quot;HelloServiceApplication&quot;;\n   RemotingConfiguration::RegisterWellKnownServiceType( HelloService::typeid,\n                                                        &quot;MyUri&quot;,\n                                                        WellKnownObjectMode::SingleCall );\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration.ServerActivation1#2\">      ChannelServices.RegisterChannel(New TcpChannel(8082))\n      \n      RemotingConfiguration.ApplicationName = &quot;HelloServiceApplication&quot;\n      \n      RemotingConfiguration.RegisterWellKnownServiceType(GetType(HelloService), &quot;MyUri&quot;, WellKnownObjectMode.SingleCall)\n</code></pre><pre><code class=\"lang-cs\" name=\"RemotingConfiguration.ServerActivation1#3\">\n        Console.WriteLine(&quot;Press enter to stop this process.&quot;);\n        Console.ReadLine();\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"RemotingConfiguration.ServerActivation1#3\">   Console::WriteLine( &quot;Press enter to stop this process.&quot; );\n   Console::ReadLine();\n   return 0;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration.ServerActivation1#3\">\n      Console.WriteLine(&quot;Press enter to stop this process.&quot;)\n      Console.ReadLine()\n\n   End Sub &#39;Main\n\nEnd Class &#39;ServerClass\n</code></pre><p> The following code example shows the service object registered in the sample code above.  </p>\n<pre><code class=\"lang-cpp\" name=\"RemotingConfiguration.ServerActivation1#4\">#using &lt;system.dll&gt;\n\nusing namespace System;\npublic ref class HelloService: public MarshalByRefObject\n{\nprivate:\n   static int n_instances;\n\npublic:\n   HelloService()\n   {\n      n_instances++;\n      Console::WriteLine( &quot;&quot; );\n      Console::WriteLine( &quot;HelloService activated - instance # {0}.&quot;, n_instances );\n   }\n\n   ~HelloService()\n   {\n      Console::WriteLine( &quot;HelloService instance {0} destroyed.&quot;, n_instances );\n      n_instances--;\n   }\n\n   String^ HelloMethod( String^ name )\n   {\n      Console::WriteLine( &quot;HelloMethod called on HelloService instance {0}.&quot;, n_instances );\n      return String::Format( &quot;Hi there {0}.&quot;, name );\n   }\n\n};\n</code></pre><pre><code class=\"lang-cs\" name=\"RemotingConfiguration.ServerActivation1#4\">using System;\n\npublic class HelloService : MarshalByRefObject {\n\n    static int n_instances;\n\n    public HelloService() {\n        n_instances++;\n        Console.WriteLine(&quot;&quot;);\n        Console.WriteLine(&quot;HelloService activated - instance # {0}.&quot;, n_instances);\n    }\n\n\n    ~HelloService()  {\n        Console.WriteLine(&quot;HelloService instance {0} destroyed.&quot;, n_instances);\n        n_instances--;\n    }\n\n\n    public String HelloMethod(String name)  {\n\n        Console.WriteLine(&quot;HelloMethod called on HelloService instance {0}.&quot;, n_instances);\n        return &quot;Hi there &quot; + name + &quot;.&quot;;\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"RemotingConfiguration.ServerActivation1#4\">Imports System\n\n\nPublic Class HelloService\n   Inherits MarshalByRefObject\n   \n   Private Shared n_instances As Integer\n     \n   Public Sub New()\n      n_instances += 1\n      Console.WriteLine(&quot;&quot;)\n      Console.WriteLine(&quot;HelloService activated - instance # {0}.&quot;, n_instances)\n   End Sub &#39;New\n   \n   \n   Protected Overrides Sub Finalize()\n      Console.WriteLine(&quot;HelloService instance {0} destroyed.&quot;, n_instances)\n      n_instances -= 1\n      MyBase.Finalize()\n   End Sub &#39;Finalize\n   \n   \n   Public Function HelloMethod(name As [String]) As [String]\n      Console.WriteLine(&quot;HelloMethod called on HelloService instance {0}.&quot;, n_instances)\n      Return &quot;Hi there &quot; + name + &quot;.&quot;\n   End Function &#39;HelloMethod\n\nEnd Class &#39;HelloService\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Remoting.RemotingConfiguration.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Remoting.RemotingConfiguration.yml\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.ApplicationId\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.ApplicationName\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.Configure\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.CustomErrorsEnabled\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.CustomErrorsMode\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedClientTypes\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedServiceTypes\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownClientTypes\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownServiceTypes\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.IsActivationAllowed\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.IsRemotelyActivatedClientType\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.IsWellKnownClientType\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.ProcessId\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType\">\r\n<meta name=\"APIName\" content=\"System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"1a665e80-eb1b-52ad-e61b-1f45e1464f88\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides various static methods for configuring the remoting infrastructure.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Runtime.Remoting/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Runtime.Remoting.RemotingConfiguration\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Runtime.Remoting.RemotingConfiguration.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Runtime.Remoting.RemotingConfiguration.yml","open_to_public_contributors":true,"api_name":["System.Runtime.Remoting.RemotingConfiguration","System.Runtime.Remoting.RemotingConfiguration.ApplicationId","System.Runtime.Remoting.RemotingConfiguration.ApplicationName","System.Runtime.Remoting.RemotingConfiguration.Configure","System.Runtime.Remoting.RemotingConfiguration.CustomErrorsEnabled","System.Runtime.Remoting.RemotingConfiguration.CustomErrorsMode","System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedClientTypes","System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedServiceTypes","System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownClientTypes","System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownServiceTypes","System.Runtime.Remoting.RemotingConfiguration.IsActivationAllowed","System.Runtime.Remoting.RemotingConfiguration.IsRemotelyActivatedClientType","System.Runtime.Remoting.RemotingConfiguration.IsWellKnownClientType","System.Runtime.Remoting.RemotingConfiguration.ProcessId","System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType","System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType","System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType","System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Runtime.Remoting.RemotingConfiguration","System::Runtime::Remoting::RemotingConfiguration","System.Runtime.Remoting.RemotingConfiguration.ApplicationId","System::Runtime::Remoting::RemotingConfiguration::ApplicationId","System.Runtime.Remoting.RemotingConfiguration.ApplicationName","System::Runtime::Remoting::RemotingConfiguration::ApplicationName","System.Runtime.Remoting.RemotingConfiguration.Configure","System::Runtime::Remoting::RemotingConfiguration::Configure","System.Runtime.Remoting.RemotingConfiguration.CustomErrorsEnabled","System::Runtime::Remoting::RemotingConfiguration::CustomErrorsEnabled","System.Runtime.Remoting.RemotingConfiguration.CustomErrorsMode","System::Runtime::Remoting::RemotingConfiguration::CustomErrorsMode","System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedClientTypes","System::Runtime::Remoting::RemotingConfiguration::GetRegisteredActivatedClientTypes","System.Runtime.Remoting.RemotingConfiguration.GetRegisteredActivatedServiceTypes","System::Runtime::Remoting::RemotingConfiguration::GetRegisteredActivatedServiceTypes","System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownClientTypes","System::Runtime::Remoting::RemotingConfiguration::GetRegisteredWellKnownClientTypes","System.Runtime.Remoting.RemotingConfiguration.GetRegisteredWellKnownServiceTypes","System::Runtime::Remoting::RemotingConfiguration::GetRegisteredWellKnownServiceTypes","System.Runtime.Remoting.RemotingConfiguration.IsActivationAllowed","System::Runtime::Remoting::RemotingConfiguration::IsActivationAllowed","System.Runtime.Remoting.RemotingConfiguration.IsRemotelyActivatedClientType","System::Runtime::Remoting::RemotingConfiguration::IsRemotelyActivatedClientType","System.Runtime.Remoting.RemotingConfiguration.IsWellKnownClientType","System::Runtime::Remoting::RemotingConfiguration::IsWellKnownClientType","System.Runtime.Remoting.RemotingConfiguration.ProcessId","System::Runtime::Remoting::RemotingConfiguration::ProcessId","System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedClientType","System::Runtime::Remoting::RemotingConfiguration::RegisterActivatedClientType","System.Runtime.Remoting.RemotingConfiguration.RegisterActivatedServiceType","System::Runtime::Remoting::RemotingConfiguration::RegisterActivatedServiceType","System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownClientType","System::Runtime::Remoting::RemotingConfiguration::RegisterWellKnownClientType","System.Runtime.Remoting.RemotingConfiguration.RegisterWellKnownServiceType","System::Runtime::Remoting::RemotingConfiguration::RegisterWellKnownServiceType"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"1a665e80-eb1b-52ad-e61b-1f45e1464f88","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Runtime.Remoting/RemotingConfiguration.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"RemotingConfiguration class | Microsoft Docs","_op_ogTitle":"RemotingConfiguration class","description":"Provides various static methods for configuring the remoting infrastructure.\n","toc_asset_id":"_splitted/System.Runtime.Remoting/toc.json","toc_rel":"_splitted/System.Runtime.Remoting/toc.json","source_url":"","ms.assetid":"System.Runtime.Remoting.RemotingConfiguration","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.remoting.remotingconfiguration","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.runtime.remoting.remotingconfiguration","fileRelativePath":"System.Runtime.Remoting.RemotingConfiguration.html"},"themesRelativePathToOutputRoot":"_themes/"}