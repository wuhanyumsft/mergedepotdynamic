{"content":"    \r\n    <h1 id=\"System_Windows_Forms_ToolStripManager\">\r\n      <span class=\"lang-csharp\">ToolStripManager</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Controls <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> rendering and rafting, and the merging of <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a>, <a class=\"xref\" href=\"system.windows.forms.toolstripdropdownmenu\" data-linktype=\"relative-path\">ToolStripDropDownMenu</a>, and <a class=\"xref\" href=\"system.windows.forms.toolstripmenuitem\" data-linktype=\"relative-path\">ToolStripMenuItem</a> objects. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class ToolStripManager</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ToolStripManager</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>ToolStripManager supports <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a>-related tasks for entire applications, such as merging, settings, and renderer options. The overloaded <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_Merge_\" data-linktype=\"relative-path\">Merge</a> method combines <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> controls with each other, and the overloaded <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_RevertMerge_\" data-linktype=\"relative-path\">RevertMerge</a> method undoes a merge operation.  </p>\n<p> Use the <a class=\"xref\" href=\"system.windows.forms.toolstriprenderer\" data-linktype=\"relative-path\">ToolStripRenderer</a> class with the ToolStripManager class to gain even more control and customizability over painting and layout style.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripManager_Renderer\" data-linktype=\"self-bookmark\">Renderer</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the default painting styles for the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripManager_RenderMode\" data-linktype=\"self-bookmark\">RenderMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the default theme for the form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripManager_VisualStylesEnabled\" data-linktype=\"self-bookmark\">VisualStylesEnabled</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether a <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> is rendered using visual style information called themes.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripManager_FindToolStrip_System_String_\" data-linktype=\"self-bookmark\">FindToolStrip(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Finds the specified <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> or a type derived from <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripManager_IsShortcutDefined_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">IsShortcutDefined(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a value indicating whether the specified shortcut key is used by any of the <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> controls of a form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripManager_IsValidShortcut_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">IsValidShortcut(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves a value indicating whether a defined shortcut key is valid.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripManager_LoadSettings_System_Windows_Forms_Form_\" data-linktype=\"self-bookmark\">LoadSettings(Form)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads settings for the given <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> using the full name of the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> as the settings key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripManager_LoadSettings_System_Windows_Forms_Form_System_String_\" data-linktype=\"self-bookmark\">LoadSettings(Form,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Loads settings for the specified <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> using the specified settings key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripManager_Merge_System_Windows_Forms_ToolStrip_System_String_\" data-linktype=\"self-bookmark\">Merge(ToolStrip,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Combines two <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects of the same type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripManager_Merge_System_Windows_Forms_ToolStrip_System_Windows_Forms_ToolStrip_\" data-linktype=\"self-bookmark\">Merge(ToolStrip,ToolStrip)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Combines two <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects of different types.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripManager_RevertMerge_System_String_\" data-linktype=\"self-bookmark\">RevertMerge(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Undoes a merging of two <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects, returning the <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> with the specified name to its state before the merge and nullifying all previous merge operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripManager_RevertMerge_System_Windows_Forms_ToolStrip_\" data-linktype=\"self-bookmark\">RevertMerge(ToolStrip)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Undoes a merging of two <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects, returning the specified <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> to its state before the merge and nullifying all previous merge operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripManager_RevertMerge_System_Windows_Forms_ToolStrip_System_Windows_Forms_ToolStrip_\" data-linktype=\"self-bookmark\">RevertMerge(ToolStrip,ToolStrip)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Undoes a merging of two <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects, returning both <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> controls to their state before the merge and nullifying all previous merge operations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripManager_SaveSettings_System_Windows_Forms_Form_\" data-linktype=\"self-bookmark\">SaveSettings(Form)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves settings for the given <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> using the full name of the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> as the settings key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripManager_SaveSettings_System_Windows_Forms_Form_System_String_\" data-linktype=\"self-bookmark\">SaveSettings(Form,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Saves settings for the specified <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> using the specified settings key.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_ToolStripManager_RendererChanged\" data-linktype=\"self-bookmark\">RendererChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.ToolStripManager.Renderer*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripManager_Renderer\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripManager_Renderer_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Renderer</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the default painting styles for the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Windows.Forms.ToolStripRenderer Renderer { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.toolstriprenderer\" data-linktype=\"relative-path\">ToolStripRenderer</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.toolstriprenderer\" data-linktype=\"relative-path\">ToolStripRenderer</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This Renderer property is used when the <a class=\"xref\" href=\"system.windows.forms.toolstrip#System_Windows_Forms_ToolStrip_RenderMode_\" data-linktype=\"relative-path\">RenderMode</a> property of the current <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> is set to <a class=\"xref\" href=\"system.windows.forms.toolstriprendermode\" data-linktype=\"relative-path\">ToolStripRenderMode</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to apply a custom professional renderer to an individual <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> or to the application as a whole.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ToolStrip.Misc#70\">    // This example demonstrates how to apply a \n    // custom professional renderer to an individual\n    // ToolStrip or to the application as a whole.\n    class Form6 : Form\n    {\n        ComboBox targetComboBox = new ComboBox();\n\n        public Form6()\n        {\n            // Alter the renderer at the top level.\n\n            // Create and populate a new ToolStrip control.\n            ToolStrip ts = new ToolStrip();\n            ts.Name = &quot;ToolStrip&quot;;\n            ts.Items.Add(&quot;Apples&quot;);\n            ts.Items.Add(&quot;Oranges&quot;);\n            ts.Items.Add(&quot;Pears&quot;);\n\n            // Create a new menustrip with a new window.\n            MenuStrip ms = new MenuStrip();\n            ms.Name = &quot;MenuStrip&quot;;\n            ms.Dock = DockStyle.Top;\n\n            // add top level items\n            ToolStripMenuItem fileMenuItem = new ToolStripMenuItem(&quot;File&quot;);\n            ms.Items.Add(fileMenuItem);\n            ms.Items.Add(&quot;Edit&quot;);\n            ms.Items.Add(&quot;View&quot;);\n            ms.Items.Add(&quot;Window&quot;);\n\n            // Add subitems to the &quot;File&quot; menu.\n            fileMenuItem.DropDownItems.Add(&quot;Open&quot;);\n            fileMenuItem.DropDownItems.Add(&quot;Save&quot;);\n            fileMenuItem.DropDownItems.Add(&quot;Save As...&quot;);\n            fileMenuItem.DropDownItems.Add(&quot;-&quot;);\n            fileMenuItem.DropDownItems.Add(&quot;Exit&quot;);\n\n            // Add a Button control to apply renderers.\n            Button applyButton = new Button();\n            applyButton.Text = &quot;Apply Custom Renderer&quot;;\n            applyButton.Click += new EventHandler(applyButton_Click);\n\n            // Add the ComboBox control for choosing how\n            // to apply the renderers.\n            targetComboBox.Items.Add(&quot;All&quot;);\n            targetComboBox.Items.Add(&quot;MenuStrip&quot;);\n            targetComboBox.Items.Add(&quot;ToolStrip&quot;);\n            targetComboBox.Items.Add(&quot;Reset&quot;);\n\n            // Create and set up a TableLayoutPanel control.\n            TableLayoutPanel tlp = new TableLayoutPanel();\n            tlp.Dock = DockStyle.Fill;\n            tlp.RowCount = 1;\n            tlp.ColumnCount = 2;\n            tlp.ColumnStyles.Add(new ColumnStyle(SizeType.AutoSize));\n            tlp.ColumnStyles.Add(new ColumnStyle(SizeType.Percent));\n            tlp.Controls.Add(applyButton);\n            tlp.Controls.Add(targetComboBox);\n\n            // Create a GroupBox for the TableLayoutPanel control.\n            GroupBox gb = new GroupBox();\n            gb.Text = &quot;Apply Renderers&quot;;\n            gb.Dock = DockStyle.Fill;\n            gb.Controls.Add(tlp);\n\n            // Add the GroupBox to the form.\n            this.Controls.Add(gb);\n\n            // Add the ToolStrip to the form&#39;s Controls collection.\n            this.Controls.Add(ts);\n\n            // Add the MenuStrip control last.\n            // This is important for correct placement in the z-order.\n            this.Controls.Add(ms);\n        }\n\n        // This event handler is invoked when \n        // the &quot;Apply Renderers&quot; button is clicked.\n        // Depending on the value selected in a ComboBox control,\n        // it applies a custom renderer selectively to\n        // individual MenuStrip or ToolStrip controls,\n        // or it applies a custom renderer to the \n        // application as a whole.\n        void applyButton_Click(object sender, EventArgs e)\n        {\n            ToolStrip ms = ToolStripManager.FindToolStrip(&quot;MenuStrip&quot;);\n            ToolStrip ts = ToolStripManager.FindToolStrip(&quot;ToolStrip&quot;);\n\n            if (targetComboBox.SelectedItem != null)\n            {\n                switch (targetComboBox.SelectedItem.ToString())\n                {\n                    case &quot;Reset&quot;:\n                    {\n                        ms.RenderMode = ToolStripRenderMode.ManagerRenderMode;\n                        ts.RenderMode = ToolStripRenderMode.ManagerRenderMode;\n\n                        // Set the default RenderMode to Professional.\n                        ToolStripManager.RenderMode = ToolStripManagerRenderMode.Professional;\n\n                        break;\n                    }\n\n                    case &quot;All&quot;:\n                    {\n                        ms.RenderMode = ToolStripRenderMode.ManagerRenderMode;\n                        ts.RenderMode = ToolStripRenderMode.ManagerRenderMode;\n\n                        // Assign the custom renderer at the application level.\n                        ToolStripManager.Renderer = new CustomProfessionalRenderer();\n\n                        break;\n                    }\n\n                    case &quot;MenuStrip&quot;:\n                    {\n                        // Assign the custom renderer to the MenuStrip control only.\n                        ms.Renderer = new CustomProfessionalRenderer();\n\n                        break;\n                    }\n\n                    case &quot;ToolStrip&quot;:\n                    {\n                        // Assign the custom renderer to the ToolStrip control only.\n                        ts.Renderer = new CustomProfessionalRenderer();\n\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    // This type demonstrates a custom renderer. It overrides the\n    // OnRenderMenuItemBackground and OnRenderButtonBackground methods\n    // to customize the backgrounds of MenuStrip items and ToolStrip buttons.\n    class CustomProfessionalRenderer : ToolStripProfessionalRenderer\n    {\n        protected override void OnRenderMenuItemBackground(ToolStripItemRenderEventArgs e)\n        {\n            if (e.Item.Selected)\n            {\n                using (Brush b = new SolidBrush(ProfessionalColors.SeparatorLight))\n                {\n                    e.Graphics.FillEllipse(b, e.Item.ContentRectangle);\n                }\n            }\n            else\n            {\n                using (Pen p = new Pen(ProfessionalColors.SeparatorLight))\n                {\n                    e.Graphics.DrawEllipse(p, e.Item.ContentRectangle);\n                }\n            }\n        }\n\n        protected override void OnRenderButtonBackground(ToolStripItemRenderEventArgs e)\n        {\n            Rectangle r = Rectangle.Inflate(e.Item.ContentRectangle, -2, -2);\n\n            if (e.Item.Selected)\n            {\n                using (Brush b = new SolidBrush(ProfessionalColors.SeparatorLight))\n                {\n                    e.Graphics.FillRectangle(b, r);\n                }\n            }\n            else\n            {\n                using (Pen p = new Pen(ProfessionalColors.SeparatorLight))\n                {\n                    e.Graphics.DrawRectangle(p, r);\n                }\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ToolStrip.Misc#70\">&#39; This example demonstrates how to apply a \n&#39; custom professional renderer to an individual\n&#39; ToolStrip or to the application as a whole.\nClass Form6\n   Inherits Form\n   Private targetComboBox As New ComboBox()\n   \n   \n    Public Sub New()\n\n        &#39; Alter the renderer at the top level.\n        &#39; Create and populate a new ToolStrip control.\n        Dim ts As New ToolStrip()\n        ts.Name = &quot;ToolStrip&quot;\n        ts.Items.Add(&quot;Apples&quot;)\n        ts.Items.Add(&quot;Oranges&quot;)\n        ts.Items.Add(&quot;Pears&quot;)\n\n        &#39; Create a new menustrip with a new window.\n        Dim ms As New MenuStrip()\n        ms.Name = &quot;MenuStrip&quot;\n        ms.Dock = DockStyle.Top\n\n        &#39; add top level items\n        Dim fileMenuItem As New ToolStripMenuItem(&quot;File&quot;)\n        ms.Items.Add(fileMenuItem)\n        ms.Items.Add(&quot;Edit&quot;)\n        ms.Items.Add(&quot;View&quot;)\n        ms.Items.Add(&quot;Window&quot;)\n\n        &#39; Add subitems to the &quot;File&quot; menu.\n        fileMenuItem.DropDownItems.Add(&quot;Open&quot;)\n        fileMenuItem.DropDownItems.Add(&quot;Save&quot;)\n        fileMenuItem.DropDownItems.Add(&quot;Save As...&quot;)\n        fileMenuItem.DropDownItems.Add(&quot;-&quot;)\n        fileMenuItem.DropDownItems.Add(&quot;Exit&quot;)\n\n        &#39; Add a Button control to apply renderers.\n        Dim applyButton As New Button()\n        applyButton.Text = &quot;Apply Custom Renderer&quot;\n        AddHandler applyButton.Click, AddressOf applyButton_Click\n\n        &#39; Add the ComboBox control for choosing how\n        &#39; to apply the renderers.\n        targetComboBox.Items.Add(&quot;All&quot;)\n        targetComboBox.Items.Add(&quot;MenuStrip&quot;)\n        targetComboBox.Items.Add(&quot;ToolStrip&quot;)\n        targetComboBox.Items.Add(&quot;Reset&quot;)\n\n        &#39; Create and set up a TableLayoutPanel control.\n        Dim tlp As New TableLayoutPanel()\n        tlp.Dock = DockStyle.Fill\n        tlp.RowCount = 1\n        tlp.ColumnCount = 2\n        tlp.ColumnStyles.Add(New ColumnStyle(SizeType.AutoSize))\n        tlp.ColumnStyles.Add(New ColumnStyle(SizeType.Percent))\n        tlp.Controls.Add(applyButton)\n        tlp.Controls.Add(targetComboBox)\n\n        &#39; Create a GroupBox for the TableLayoutPanel control.\n        Dim gb As New GroupBox()\n        gb.Text = &quot;Apply Renderers&quot;\n        gb.Dock = DockStyle.Fill\n        gb.Controls.Add(tlp)\n\n        &#39; Add the GroupBox to the form.\n        Me.Controls.Add(gb)\n\n        &#39; Add the ToolStrip to the form&#39;s Controls collection.\n        Me.Controls.Add(ts)\n\n        &#39; Add the MenuStrip control last.\n        &#39; This is important for correct placement in the z-order.\n        Me.Controls.Add(ms)\n    End Sub\n   \n    &#39; This event handler is invoked when \n    &#39; the &quot;Apply Renderers&quot; button is clicked.\n    &#39; Depending on the value selected in a ComboBox \n    &#39; control, it applies a custom renderer selectively\n    &#39; to individual MenuStrip or ToolStrip controls,\n    &#39; or it applies a custom renderer to the \n    &#39; application as a whole.\n    Sub applyButton_Click(ByVal sender As Object, ByVal e As EventArgs)\n        Dim ms As ToolStrip = ToolStripManager.FindToolStrip(&quot;MenuStrip&quot;)\n        Dim ts As ToolStrip = ToolStripManager.FindToolStrip(&quot;ToolStrip&quot;)\n\n        If targetComboBox.SelectedItem IsNot Nothing Then\n\n            Select Case targetComboBox.SelectedItem.ToString()\n                Case &quot;Reset&quot;\n                    ms.RenderMode = ToolStripRenderMode.ManagerRenderMode\n                    ts.RenderMode = ToolStripRenderMode.ManagerRenderMode\n\n                    &#39; Set the default RenderMode to Professional.\n                    ToolStripManager.RenderMode = ToolStripManagerRenderMode.Professional\n\n                    Exit Select\n\n                Case &quot;All&quot;\n                    ms.RenderMode = ToolStripRenderMode.ManagerRenderMode\n                    ts.RenderMode = ToolStripRenderMode.ManagerRenderMode\n\n                    &#39; Assign the custom renderer at the application level.\n                    ToolStripManager.Renderer = New CustomProfessionalRenderer()\n\n                    Exit Select\n\n                Case &quot;MenuStrip&quot;\n                    &#39; Assign the custom renderer to the MenuStrip control only.\n                    ms.Renderer = New CustomProfessionalRenderer()\n\n                    Exit Select\n\n                Case &quot;ToolStrip&quot;\n                    &#39; Assign the custom renderer to the ToolStrip control only.\n                    ts.Renderer = New CustomProfessionalRenderer()\n\n                    Exit Select\n            End Select\n\n        End If\n    End Sub\nEnd Class\n\n&#39; This type demonstrates a custom renderer. It overrides the\n&#39; OnRenderMenuItemBackground and OnRenderButtonBackground methods\n&#39; to customize the backgrounds of MenuStrip items and ToolStrip buttons.\nClass CustomProfessionalRenderer\n   Inherits ToolStripProfessionalRenderer\n   \n   Protected Overrides Sub OnRenderMenuItemBackground(e As ToolStripItemRenderEventArgs)\n      If e.Item.Selected Then\n         Dim b = New SolidBrush(ProfessionalColors.SeparatorLight)\n         Try\n            e.Graphics.FillEllipse(b, e.Item.ContentRectangle)\n         Finally\n            b.Dispose()\n         End Try\n      Else\n         Dim p As New Pen(ProfessionalColors.SeparatorLight)\n         Try\n            e.Graphics.DrawEllipse(p, e.Item.ContentRectangle)\n         Finally\n            p.Dispose()\n         End Try\n      End If\n    End Sub\n\n   Protected Overrides Sub OnRenderButtonBackground(e As ToolStripItemRenderEventArgs)\n      Dim r As Rectangle = Rectangle.Inflate(e.Item.ContentRectangle, - 2, - 2)\n      \n      If e.Item.Selected Then\n         Dim b = New SolidBrush(ProfessionalColors.SeparatorLight)\n         Try\n            e.Graphics.FillRectangle(b, r)\n         Finally\n            b.Dispose()\n         End Try\n      Else\n         Dim p As New Pen(ProfessionalColors.SeparatorLight)\n         Try\n            e.Graphics.DrawRectangle(p, r)\n         Finally\n            p.Dispose()\n         End Try\n      End If\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripManager_RenderMode\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripManager_RenderMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RenderMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the default theme for the form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Windows.Forms.ToolStripManagerRenderMode RenderMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.toolstripmanagerrendermode\" data-linktype=\"relative-path\">ToolStripManagerRenderMode</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.toolstripmanagerrendermode\" data-linktype=\"relative-path\">ToolStripManagerRenderMode</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The set value was not one of the <a class=\"xref\" href=\"system.windows.forms.toolstripmanagerrendermode\" data-linktype=\"relative-path\">ToolStripManagerRenderMode</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p><a class=\"xref\" href=\"system.windows.forms.toolstripmanagerrendermode\" data-linktype=\"relative-path\">ToolStripManagerRenderMode</a> is set to <a class=\"xref\" href=\"system.windows.forms.toolstripmanagerrendermode\" data-linktype=\"relative-path\">ToolStripManagerRenderMode</a>; use the <span class=\"xref\">stem.Windows.Forms.ToolStripManager.Renderer*</span> property instead.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the RenderMode property to get or set whether the application is painted by the <a class=\"xref\" href=\"system.windows.forms.toolstripprofessionalrenderer\" data-linktype=\"relative-path\">ToolStripProfessionalRenderer</a>, the <a class=\"xref\" href=\"system.windows.forms.toolstripsystemrenderer\" data-linktype=\"relative-path\">ToolStripSystemRenderer</a>, or a customized <a class=\"xref\" href=\"system.windows.forms.toolstriprenderer\" data-linktype=\"relative-path\">ToolStripRenderer</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates a use of the RenderMode property. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_Renderer_\" data-linktype=\"relative-path\">Renderer</a> property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ToolStrip.Misc#80\">        // This event handler is invoked when \n        // the &quot;Apply Renderers&quot; button is clicked.\n        // Depending on the value selected in a ComboBox control,\n        // it applies a custom renderer selectively to\n        // individual MenuStrip or ToolStrip controls,\n        // or it applies a custom renderer to the \n        // application as a whole.\n        void applyButton_Click(object sender, EventArgs e)\n        {\n            ToolStrip ms = ToolStripManager.FindToolStrip(&quot;MenuStrip&quot;);\n            ToolStrip ts = ToolStripManager.FindToolStrip(&quot;ToolStrip&quot;);\n\n            if (targetComboBox.SelectedItem != null)\n            {\n                switch (targetComboBox.SelectedItem.ToString())\n                {\n                    case &quot;Reset&quot;:\n                    {\n                        ms.RenderMode = ToolStripRenderMode.ManagerRenderMode;\n                        ts.RenderMode = ToolStripRenderMode.ManagerRenderMode;\n\n                        // Set the default RenderMode to Professional.\n                        ToolStripManager.RenderMode = ToolStripManagerRenderMode.Professional;\n\n                        break;\n                    }\n\n                    case &quot;All&quot;:\n                    {\n                        ms.RenderMode = ToolStripRenderMode.ManagerRenderMode;\n                        ts.RenderMode = ToolStripRenderMode.ManagerRenderMode;\n\n                        // Assign the custom renderer at the application level.\n                        ToolStripManager.Renderer = new CustomProfessionalRenderer();\n\n                        break;\n                    }\n\n                    case &quot;MenuStrip&quot;:\n                    {\n                        // Assign the custom renderer to the MenuStrip control only.\n                        ms.Renderer = new CustomProfessionalRenderer();\n\n                        break;\n                    }\n\n                    case &quot;ToolStrip&quot;:\n                    {\n                        // Assign the custom renderer to the ToolStrip control only.\n                        ts.Renderer = new CustomProfessionalRenderer();\n\n                        break;\n                    }\n                }\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ToolStrip.Misc#80\">    &#39; This event handler is invoked when \n    &#39; the &quot;Apply Renderers&quot; button is clicked.\n    &#39; Depending on the value selected in a ComboBox \n    &#39; control, it applies a custom renderer selectively\n    &#39; to individual MenuStrip or ToolStrip controls,\n    &#39; or it applies a custom renderer to the \n    &#39; application as a whole.\n    Sub applyButton_Click(ByVal sender As Object, ByVal e As EventArgs)\n        Dim ms As ToolStrip = ToolStripManager.FindToolStrip(&quot;MenuStrip&quot;)\n        Dim ts As ToolStrip = ToolStripManager.FindToolStrip(&quot;ToolStrip&quot;)\n\n        If targetComboBox.SelectedItem IsNot Nothing Then\n\n            Select Case targetComboBox.SelectedItem.ToString()\n                Case &quot;Reset&quot;\n                    ms.RenderMode = ToolStripRenderMode.ManagerRenderMode\n                    ts.RenderMode = ToolStripRenderMode.ManagerRenderMode\n\n                    &#39; Set the default RenderMode to Professional.\n                    ToolStripManager.RenderMode = ToolStripManagerRenderMode.Professional\n\n                    Exit Select\n\n                Case &quot;All&quot;\n                    ms.RenderMode = ToolStripRenderMode.ManagerRenderMode\n                    ts.RenderMode = ToolStripRenderMode.ManagerRenderMode\n\n                    &#39; Assign the custom renderer at the application level.\n                    ToolStripManager.Renderer = New CustomProfessionalRenderer()\n\n                    Exit Select\n\n                Case &quot;MenuStrip&quot;\n                    &#39; Assign the custom renderer to the MenuStrip control only.\n                    ms.Renderer = New CustomProfessionalRenderer()\n\n                    Exit Select\n\n                Case &quot;ToolStrip&quot;\n                    &#39; Assign the custom renderer to the ToolStrip control only.\n                    ts.Renderer = New CustomProfessionalRenderer()\n\n                    Exit Select\n            End Select\n\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripManager_VisualStylesEnabled\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripManager_VisualStylesEnabled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VisualStylesEnabled</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether a <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> is rendered using visual style information called themes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool VisualStylesEnabled { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.windows.forms.toolstripitem\" data-linktype=\"relative-path\">ToolStripItem</a> is rendered using themes; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripManager_FindToolStrip_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripManager_FindToolStrip_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FindToolStrip(String)</div>        \r\n          </div>\r\n    \r\n            <p>Finds the specified <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> or a type derived from <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Windows.Forms.ToolStrip FindToolStrip (string toolStripName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>toolStripName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string specifying the name of the <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> or derived <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> type to find.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> or one of its derived types as specified by the <code>toolStripName</code> parameter, or <code>null</code> if the <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> is not found.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the FindToolStrip method to search for a <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> or an object derived from <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a>. Derived types of <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> are <a class=\"xref\" href=\"system.windows.forms.statusstrip\" data-linktype=\"relative-path\">StatusStrip</a>, <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a>, <a class=\"xref\" href=\"system.windows.forms.toolstripdropdown\" data-linktype=\"relative-path\">ToolStripDropDown</a>, <a class=\"xref\" href=\"system.windows.forms.toolstripdropdownmenu\" data-linktype=\"relative-path\">ToolStripDropDownMenu</a>, and <a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a>. If the object of the search is not specifically a <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> but one of these derived types, cast the return type as required.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates a use of the FindToolStrip method. This example is part of a larger example provided for the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_Renderer_\" data-linktype=\"relative-path\">Renderer</a> property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ToolStrip.Misc#80\">        // This event handler is invoked when \n        // the &quot;Apply Renderers&quot; button is clicked.\n        // Depending on the value selected in a ComboBox control,\n        // it applies a custom renderer selectively to\n        // individual MenuStrip or ToolStrip controls,\n        // or it applies a custom renderer to the \n        // application as a whole.\n        void applyButton_Click(object sender, EventArgs e)\n        {\n            ToolStrip ms = ToolStripManager.FindToolStrip(&quot;MenuStrip&quot;);\n            ToolStrip ts = ToolStripManager.FindToolStrip(&quot;ToolStrip&quot;);\n\n            if (targetComboBox.SelectedItem != null)\n            {\n                switch (targetComboBox.SelectedItem.ToString())\n                {\n                    case &quot;Reset&quot;:\n                    {\n                        ms.RenderMode = ToolStripRenderMode.ManagerRenderMode;\n                        ts.RenderMode = ToolStripRenderMode.ManagerRenderMode;\n\n                        // Set the default RenderMode to Professional.\n                        ToolStripManager.RenderMode = ToolStripManagerRenderMode.Professional;\n\n                        break;\n                    }\n\n                    case &quot;All&quot;:\n                    {\n                        ms.RenderMode = ToolStripRenderMode.ManagerRenderMode;\n                        ts.RenderMode = ToolStripRenderMode.ManagerRenderMode;\n\n                        // Assign the custom renderer at the application level.\n                        ToolStripManager.Renderer = new CustomProfessionalRenderer();\n\n                        break;\n                    }\n\n                    case &quot;MenuStrip&quot;:\n                    {\n                        // Assign the custom renderer to the MenuStrip control only.\n                        ms.Renderer = new CustomProfessionalRenderer();\n\n                        break;\n                    }\n\n                    case &quot;ToolStrip&quot;:\n                    {\n                        // Assign the custom renderer to the ToolStrip control only.\n                        ts.Renderer = new CustomProfessionalRenderer();\n\n                        break;\n                    }\n                }\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ToolStrip.Misc#80\">    &#39; This event handler is invoked when \n    &#39; the &quot;Apply Renderers&quot; button is clicked.\n    &#39; Depending on the value selected in a ComboBox \n    &#39; control, it applies a custom renderer selectively\n    &#39; to individual MenuStrip or ToolStrip controls,\n    &#39; or it applies a custom renderer to the \n    &#39; application as a whole.\n    Sub applyButton_Click(ByVal sender As Object, ByVal e As EventArgs)\n        Dim ms As ToolStrip = ToolStripManager.FindToolStrip(&quot;MenuStrip&quot;)\n        Dim ts As ToolStrip = ToolStripManager.FindToolStrip(&quot;ToolStrip&quot;)\n\n        If targetComboBox.SelectedItem IsNot Nothing Then\n\n            Select Case targetComboBox.SelectedItem.ToString()\n                Case &quot;Reset&quot;\n                    ms.RenderMode = ToolStripRenderMode.ManagerRenderMode\n                    ts.RenderMode = ToolStripRenderMode.ManagerRenderMode\n\n                    &#39; Set the default RenderMode to Professional.\n                    ToolStripManager.RenderMode = ToolStripManagerRenderMode.Professional\n\n                    Exit Select\n\n                Case &quot;All&quot;\n                    ms.RenderMode = ToolStripRenderMode.ManagerRenderMode\n                    ts.RenderMode = ToolStripRenderMode.ManagerRenderMode\n\n                    &#39; Assign the custom renderer at the application level.\n                    ToolStripManager.Renderer = New CustomProfessionalRenderer()\n\n                    Exit Select\n\n                Case &quot;MenuStrip&quot;\n                    &#39; Assign the custom renderer to the MenuStrip control only.\n                    ms.Renderer = New CustomProfessionalRenderer()\n\n                    Exit Select\n\n                Case &quot;ToolStrip&quot;\n                    &#39; Assign the custom renderer to the ToolStrip control only.\n                    ts.Renderer = New CustomProfessionalRenderer()\n\n                    Exit Select\n            End Select\n\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripManager_IsShortcutDefined_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripManager_IsShortcutDefined_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsShortcutDefined(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a value indicating whether the specified shortcut key is used by any of the <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> controls of a form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsShortcutDefined (System.Windows.Forms.Keys shortcut);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>shortcut</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The shortcut key for which to search.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the shortcut key is used by any <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> on the form; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripManager_IsValidShortcut_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripManager_IsValidShortcut_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsValidShortcut(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves a value indicating whether a defined shortcut key is valid.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsValidShortcut (System.Windows.Forms.Keys shortcut);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>shortcut</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The shortcut key to test for validity.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the shortcut key is valid; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Valid shortcut keys are the function keys F1 through F12 alone; function keys with CTRL, ALT, or SHIFT modifiers; or other keys with CTRL, ALT, or SHIFT modifiers. CTRL, ALT, or SHIFT keys and keys other than function keys are not valid shortcut keys if used alone.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripManager_LoadSettings_System_Windows_Forms_Form_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripManager_LoadSettings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadSettings(Form)</div>        \r\n          </div>\r\n    \r\n            <p>Loads settings for the given <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> using the full name of the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> as the settings key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void LoadSettings (System.Windows.Forms.Form targetForm);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetForm</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> whose name is also the settings key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>targetForm</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> controls that are not on the form at design time when the <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> settings are saved are removed from the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> when the settings are loaded. To reset the settings, comment out the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_LoadSettings_\" data-linktype=\"relative-path\">LoadSettings</a> line and leave the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_SaveSettings_\" data-linktype=\"relative-path\">SaveSettings</a> line. This will not load any settings and will persist the last state. When you remove the comment from the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_LoadSettings_\" data-linktype=\"relative-path\">LoadSettings</a> line, those settings will be applied.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripManager_LoadSettings_System_Windows_Forms_Form_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripManager_LoadSettings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadSettings(Form,String)</div>        \r\n          </div>\r\n    \r\n            <p>Loads settings for the specified <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> using the specified settings key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void LoadSettings (System.Windows.Forms.Form targetForm, string key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetForm</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> for which to load settings.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representing the settings key for this <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>key</code> parameter is <code>null</code> or empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> controls that are not on the form at design time when the <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> settings are saved are removed from the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> when the settings are loaded. To reset the settings, comment out the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_LoadSettings_\" data-linktype=\"relative-path\">LoadSettings</a> line and leave the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_SaveSettings_\" data-linktype=\"relative-path\">SaveSettings</a> line. This will not load any settings and will persist the last state. When you remove the comment from the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_LoadSettings_\" data-linktype=\"relative-path\">LoadSettings</a> line, those settings will be applied.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripManager_Merge_System_Windows_Forms_ToolStrip_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripManager_Merge_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Merge(ToolStrip,String)</div>        \r\n          </div>\r\n    \r\n            <p>Combines two <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects of the same type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool Merge (System.Windows.Forms.ToolStrip sourceToolStrip, string targetName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceToolStrip</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> to be combined with the <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> referred to by the <code>targetName</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> that receives the <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> referred to by the <code>sourceToolStrip</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the merge is successful; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>sourceToolStrip</code> or <code>targetName</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <code>sourceToolStrip</code> or <code>targetName</code> parameters refer to the same <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Merge method to combine <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects of identical type, such as <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects with other <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects, <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> objects with other <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> objects, and so on.  </p>\n<p> Use the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_Merge_\" data-linktype=\"relative-path\">Merge</a> method to combine <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects of different types.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.toolstrip#System_Windows_Forms_ToolStrip_AllowMerge_\" data-linktype=\"relative-path\">AllowMerge</a> property must be set to <code>true</code> for both <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects, and the source and target types must be identical, or this method returns <code>false</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If there are two <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> controls on an MDI child form, setting <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_IsMdiContainer_\" data-linktype=\"relative-path\">IsMdiContainer</a> to <code>true</code> for the parent form merges the contents of only one of the <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> controls. Use Merge to merge the contents of additional child <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> controls on the MDI parent form.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripManager_Merge_System_Windows_Forms_ToolStrip_System_Windows_Forms_ToolStrip_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripManager_Merge_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Merge(ToolStrip,ToolStrip)</div>        \r\n          </div>\r\n    \r\n            <p>Combines two <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects of different types.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool Merge (System.Windows.Forms.ToolStrip sourceToolStrip, System.Windows.Forms.ToolStrip targetToolStrip);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceToolStrip</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> to be combined with the <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> referred to by the <code>targetToolStrip</code> parameter.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetToolStrip</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> that receives the <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> referred to by the <code>sourceToolStrip</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the merge is successful; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the Merge method to combine <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects of different types.  </p>\n<p> Use the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_Merge_\" data-linktype=\"relative-path\">Merge</a> method to combine <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects of identical type, such as <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects with other <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects, <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> objects with other <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> objects, and so on.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.toolstrip#System_Windows_Forms_ToolStrip_AllowMerge_\" data-linktype=\"relative-path\">AllowMerge</a> property must be set to <code>true</code> for both <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects, or this method returns <code>false</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If there are two <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> controls on an MDI child form, setting <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_IsMdiContainer_\" data-linktype=\"relative-path\">IsMdiContainer</a> to <code>true</code> for the parent form merges the contents of only one of the <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> controls. Use <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_Merge_\" data-linktype=\"relative-path\">Merge</a> to merge the contents of additional child <a class=\"xref\" href=\"system.windows.forms.menustrip\" data-linktype=\"relative-path\">MenuStrip</a> controls on the MDI parent form.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example merges menu items based on specified choices. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager\" data-linktype=\"relative-path\">ToolStripManager</a> class overview.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ContextMenuStripMerge#4\">   \n   Private Property CurrentSample() As MergeSample\n      Get\n         Return currentSample1\n      End Get\n      Set\n         If currentSample1 &lt;&gt; value Then\n            Dim resetRequired As Boolean = False\n            \n            If currentSample1 = MergeSample.MatchOnly Then\n               resetRequired = True\n            End If\n            currentSample1 = value\n            &#39; Undo previous merge, if any.\n            ToolStripManager.RevertMerge(cmsBase, cmsItemsToMerge)\n            If resetRequired Then\n               RebuildItemsToMerge()\n            End If\n            \n            Select Case currentSample1\n               Case MergeSample.None\n                     Return\n               Case MergeSample.Append\n                  ScenarioText = &quot;This sample adds items to the end of the list using MergeAction.Append.&quot; + ControlChars.Cr + ControlChars.Lf + ControlChars.Cr + ControlChars.Lf + &quot;This is the default setting for MergeAction. A typical scenario is adding menu items to the end of the menu when some part of the program is activated.&quot;\n                  ShowAppendSample()\n               Case MergeSample.InsertInSameLocation\n                  ScenarioText = &quot;This sample adds items to the middle of the list using MergeAction.Insert.&quot; + ControlChars.Cr + ControlChars.Lf + ControlChars.Cr + ControlChars.Lf + &quot;Notice here how the items are added in reverse order: four, three, two, one. This is because they all have the same merge index.&quot; + ControlChars.Cr + ControlChars.Lf + ControlChars.Cr + ControlChars.Lf + &quot;A typical scenario is adding menu items to the middle or beginning of the menu when some part of the program is activated. &quot;\n                  ShowInsertInSameLocationSample()\n               Case MergeSample.InsertInSameLocationPreservingOrder\n                  ScenarioText = &quot;This sample is the same as InsertInSameLocation, except the items are added in normal order by increasing the MergeIndex of &quot;&quot;two merged items&quot;&quot; to be 3, &quot;&quot;three merged items&quot;&quot; to be 5, and so on.&quot; + ControlChars.Cr + ControlChars.Lf + &quot;  You could also add the original items backwards to the source ContextMenuStrip.&quot;\n                  ShowInsertInSameLocationPreservingOrderSample()\n               Case MergeSample.ReplacingItems\n                  ScenarioText = &quot;This sample replaces a menu item using MergeAction.Replace. Use this for the MDI scenario where saving does something completely different.&quot; + ControlChars.Cr + ControlChars.Lf + ControlChars.Cr + ControlChars.Lf + &quot;Matching is based on the Text property. If there is no text match, merging reverts to MergeIndex.&quot;\n                  ShowReplaceSample()\n               Case MergeSample.MatchOnly\n                  ScenarioText = &quot;This sample adds only the subitems from the child to the target ContextMenuStrip.&quot;\n                  ShowMatchOnlySample()\n            End Select\n            \n            &#39; Reapply with the new settings.\n            ToolStripManager.Merge(cmsItemsToMerge, cmsBase)\n         End If\n      End Set\n   End Property\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ContextMenuStripMerge#4\">    private MergeSample CurrentSample\n    {\n        get { return currentSample; }\n        set\n        {\n            if (currentSample != value)\n            {\n                bool resetRequired = false;\n\n                if (currentSample == MergeSample.MatchOnly)\n                {\n                    resetRequired = true;\n                }\n                currentSample = value;\n                // Undo previous merge, if any.\n                ToolStripManager.RevertMerge(cmsBase, cmsItemsToMerge);\n                if (resetRequired)\n                {\n                    RebuildItemsToMerge();\n                }\n\n                switch (currentSample)\n                {\n                    case MergeSample.None:\n                        return;\n                    case MergeSample.Append:\n                        ScenarioText = &quot;This sample adds items to the end of the list using MergeAction.Append.\\r<br>\\r<br>This is the default setting for MergeAction. A typical scenario is adding menu items to the end of the menu when some part of the program is activated.&quot;;\n                        ShowAppendSample();\n                        break;\n                    case MergeSample.InsertInSameLocation:\n                        ScenarioText = &quot;This sample adds items to the middle of the list using MergeAction.Insert.\\r<br>\\r<br>Notice here how the items are added in reverse order: four, three, two, one. This is because they all have the same merge index.\\r<br>\\r<br>A typical scenario is adding menu items to the middle or beginning of the menu when some part of the program is activated. &quot;;\n                        ShowInsertInSameLocationSample();\n                        break;\n                    case MergeSample.InsertInSameLocationPreservingOrder:\n                        ScenarioText = &quot;This sample is the same as InsertInSameLocation, except the items are added in normal order by increasing the MergeIndex of \\&quot;two merged items\\&quot; to be 3, \\&quot;three merged items\\&quot; to be 5, and so on.\\r<br>  You could also add the original items backwards to the source ContextMenuStrip.&quot;;\n                        ShowInsertInSameLocationPreservingOrderSample();\n                        break;\n                    case MergeSample.ReplacingItems:\n                        ScenarioText = &quot;This sample replaces a menu item using MergeAction.Replace. Use this for the MDI scenario where saving does something completely different.\\r<br>\\r<br>Matching is based on the Text property. If there is no text match, merging reverts to MergeIndex.&quot;;\n                        ShowReplaceSample();\n                        break;\n                    case MergeSample.MatchOnly:\n                        ScenarioText = &quot;This sample adds only the subitems from the child to the target ContextMenuStrip.&quot;;\n                        ShowMatchOnlySample();\n                        break;\n\n                }\n                // Reapply with the new settings.\n                ToolStripManager.Merge(cmsItemsToMerge, cmsBase);\n            }\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripManager_RevertMerge_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripManager_RevertMerge_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RevertMerge(String)</div>        \r\n          </div>\r\n    \r\n            <p>Undoes a merging of two <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects, returning the <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> with the specified name to its state before the merge and nullifying all previous merge operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool RevertMerge (string targetName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the <a class=\"xref\" href=\"system.windows.forms.toolstripitem\" data-linktype=\"relative-path\">ToolStripItem</a> for which to undo a merge operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the undoing of the merge is successful; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.toolstrip#System_Windows_Forms_ToolStrip_AllowMerge_\" data-linktype=\"relative-path\">AllowMerge</a> property must be set to <code>true</code> for both <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects, or this method returns <code>false</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripManager_RevertMerge_System_Windows_Forms_ToolStrip_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripManager_RevertMerge_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RevertMerge(ToolStrip)</div>        \r\n          </div>\r\n    \r\n            <p>Undoes a merging of two <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects, returning the specified <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> to its state before the merge and nullifying all previous merge operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool RevertMerge (System.Windows.Forms.ToolStrip targetToolStrip);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetToolStrip</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.toolstripitem\" data-linktype=\"relative-path\">ToolStripItem</a> for which to undo a merge operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the undoing of the merge is successful; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.toolstrip#System_Windows_Forms_ToolStrip_AllowMerge_\" data-linktype=\"relative-path\">AllowMerge</a> property must be set to <code>true</code> for both <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects, or this method returns <code>false</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example undoes the merging of menu items. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager\" data-linktype=\"relative-path\">ToolStripManager</a> class overview.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.ContextMenuStripMerge#4\">   \n   Private Property CurrentSample() As MergeSample\n      Get\n         Return currentSample1\n      End Get\n      Set\n         If currentSample1 &lt;&gt; value Then\n            Dim resetRequired As Boolean = False\n            \n            If currentSample1 = MergeSample.MatchOnly Then\n               resetRequired = True\n            End If\n            currentSample1 = value\n            &#39; Undo previous merge, if any.\n            ToolStripManager.RevertMerge(cmsBase, cmsItemsToMerge)\n            If resetRequired Then\n               RebuildItemsToMerge()\n            End If\n            \n            Select Case currentSample1\n               Case MergeSample.None\n                     Return\n               Case MergeSample.Append\n                  ScenarioText = &quot;This sample adds items to the end of the list using MergeAction.Append.&quot; + ControlChars.Cr + ControlChars.Lf + ControlChars.Cr + ControlChars.Lf + &quot;This is the default setting for MergeAction. A typical scenario is adding menu items to the end of the menu when some part of the program is activated.&quot;\n                  ShowAppendSample()\n               Case MergeSample.InsertInSameLocation\n                  ScenarioText = &quot;This sample adds items to the middle of the list using MergeAction.Insert.&quot; + ControlChars.Cr + ControlChars.Lf + ControlChars.Cr + ControlChars.Lf + &quot;Notice here how the items are added in reverse order: four, three, two, one. This is because they all have the same merge index.&quot; + ControlChars.Cr + ControlChars.Lf + ControlChars.Cr + ControlChars.Lf + &quot;A typical scenario is adding menu items to the middle or beginning of the menu when some part of the program is activated. &quot;\n                  ShowInsertInSameLocationSample()\n               Case MergeSample.InsertInSameLocationPreservingOrder\n                  ScenarioText = &quot;This sample is the same as InsertInSameLocation, except the items are added in normal order by increasing the MergeIndex of &quot;&quot;two merged items&quot;&quot; to be 3, &quot;&quot;three merged items&quot;&quot; to be 5, and so on.&quot; + ControlChars.Cr + ControlChars.Lf + &quot;  You could also add the original items backwards to the source ContextMenuStrip.&quot;\n                  ShowInsertInSameLocationPreservingOrderSample()\n               Case MergeSample.ReplacingItems\n                  ScenarioText = &quot;This sample replaces a menu item using MergeAction.Replace. Use this for the MDI scenario where saving does something completely different.&quot; + ControlChars.Cr + ControlChars.Lf + ControlChars.Cr + ControlChars.Lf + &quot;Matching is based on the Text property. If there is no text match, merging reverts to MergeIndex.&quot;\n                  ShowReplaceSample()\n               Case MergeSample.MatchOnly\n                  ScenarioText = &quot;This sample adds only the subitems from the child to the target ContextMenuStrip.&quot;\n                  ShowMatchOnlySample()\n            End Select\n            \n            &#39; Reapply with the new settings.\n            ToolStripManager.Merge(cmsItemsToMerge, cmsBase)\n         End If\n      End Set\n   End Property\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.ContextMenuStripMerge#4\">    private MergeSample CurrentSample\n    {\n        get { return currentSample; }\n        set\n        {\n            if (currentSample != value)\n            {\n                bool resetRequired = false;\n\n                if (currentSample == MergeSample.MatchOnly)\n                {\n                    resetRequired = true;\n                }\n                currentSample = value;\n                // Undo previous merge, if any.\n                ToolStripManager.RevertMerge(cmsBase, cmsItemsToMerge);\n                if (resetRequired)\n                {\n                    RebuildItemsToMerge();\n                }\n\n                switch (currentSample)\n                {\n                    case MergeSample.None:\n                        return;\n                    case MergeSample.Append:\n                        ScenarioText = &quot;This sample adds items to the end of the list using MergeAction.Append.\\r<br>\\r<br>This is the default setting for MergeAction. A typical scenario is adding menu items to the end of the menu when some part of the program is activated.&quot;;\n                        ShowAppendSample();\n                        break;\n                    case MergeSample.InsertInSameLocation:\n                        ScenarioText = &quot;This sample adds items to the middle of the list using MergeAction.Insert.\\r<br>\\r<br>Notice here how the items are added in reverse order: four, three, two, one. This is because they all have the same merge index.\\r<br>\\r<br>A typical scenario is adding menu items to the middle or beginning of the menu when some part of the program is activated. &quot;;\n                        ShowInsertInSameLocationSample();\n                        break;\n                    case MergeSample.InsertInSameLocationPreservingOrder:\n                        ScenarioText = &quot;This sample is the same as InsertInSameLocation, except the items are added in normal order by increasing the MergeIndex of \\&quot;two merged items\\&quot; to be 3, \\&quot;three merged items\\&quot; to be 5, and so on.\\r<br>  You could also add the original items backwards to the source ContextMenuStrip.&quot;;\n                        ShowInsertInSameLocationPreservingOrderSample();\n                        break;\n                    case MergeSample.ReplacingItems:\n                        ScenarioText = &quot;This sample replaces a menu item using MergeAction.Replace. Use this for the MDI scenario where saving does something completely different.\\r<br>\\r<br>Matching is based on the Text property. If there is no text match, merging reverts to MergeIndex.&quot;;\n                        ShowReplaceSample();\n                        break;\n                    case MergeSample.MatchOnly:\n                        ScenarioText = &quot;This sample adds only the subitems from the child to the target ContextMenuStrip.&quot;;\n                        ShowMatchOnlySample();\n                        break;\n\n                }\n                // Reapply with the new settings.\n                ToolStripManager.Merge(cmsItemsToMerge, cmsBase);\n            }\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripManager_RevertMerge_System_Windows_Forms_ToolStrip_System_Windows_Forms_ToolStrip_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripManager_RevertMerge_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RevertMerge(ToolStrip,ToolStrip)</div>        \r\n          </div>\r\n    \r\n            <p>Undoes a merging of two <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects, returning both <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> controls to their state before the merge and nullifying all previous merge operations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool RevertMerge (System.Windows.Forms.ToolStrip targetToolStrip, System.Windows.Forms.ToolStrip sourceToolStrip);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>targetToolStrip</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the <a class=\"xref\" href=\"system.windows.forms.toolstripitem\" data-linktype=\"relative-path\">ToolStripItem</a> for which to undo a merge operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceToolStrip</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> that was merged with the <code>targetToolStrip</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the undoing of the merge is successful; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>sourceToolStrip</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.toolstrip#System_Windows_Forms_ToolStrip_AllowMerge_\" data-linktype=\"relative-path\">AllowMerge</a> property must be set to <code>true</code> for both <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> objects, or this method returns <code>false</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripManager_SaveSettings_System_Windows_Forms_Form_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripManager_SaveSettings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SaveSettings(Form)</div>        \r\n          </div>\r\n    \r\n            <p>Saves settings for the given <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> using the full name of the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> as the settings key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void SaveSettings (System.Windows.Forms.Form sourceForm);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceForm</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> whose name is also the settings key.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>sourceForm</code> parameter is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> controls that are not on the form at design time when the <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> settings are saved are removed from the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> when the settings are loaded. To reset the settings, comment out the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_LoadSettings_\" data-linktype=\"relative-path\">LoadSettings</a> line and leave the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_SaveSettings_\" data-linktype=\"relative-path\">SaveSettings</a> line. This will not load any settings and will persist the last state. When you remove the comment from the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_LoadSettings_\" data-linktype=\"relative-path\">LoadSettings</a> line, those settings will be applied.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripManager_SaveSettings_System_Windows_Forms_Form_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_ToolStripManager_SaveSettings_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SaveSettings(Form,String)</div>        \r\n          </div>\r\n    \r\n            <p>Saves settings for the specified <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> using the specified settings key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void SaveSettings (System.Windows.Forms.Form sourceForm, string key);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sourceForm</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> for which to save settings.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>key</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representing the settings key for this <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>key</code> parameter is <code>null</code> or empty.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> controls that are not on the form at design time when the <a class=\"xref\" href=\"system.windows.forms.toolstrip\" data-linktype=\"relative-path\">ToolStrip</a> settings are saved are removed from the <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> when the settings are loaded. To reset the settings, comment out the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_LoadSettings_\" data-linktype=\"relative-path\">LoadSettings</a> line and leave the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_SaveSettings_\" data-linktype=\"relative-path\">SaveSettings</a> line. This will not load any settings and will persist the last state. When you remove the comment from the <a class=\"xref\" href=\"system.windows.forms.toolstripmanager#System_Windows_Forms_ToolStripManager_LoadSettings_\" data-linktype=\"relative-path\">LoadSettings</a> line, those settings will be applied.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_ToolStripManager_RendererChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RendererChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.ToolStripManager.Renderer*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static event EventHandler RendererChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.  </p>\n<div class=\"CAUTION\"><h5>Caution</h5><p> To prevent memory leaks, disable this event when your application is disposed.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RendererChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.toolstripmanager\" data-linktype=\"relative-path\">ToolStripManager</a> named <code>ToolStripManager1</code>. Then ensure that the event handler is associated with the RendererChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#603\">private void ToolStripManager1_RendererChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the ToolStripManager.RendererChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#603\">Private Sub ToolStripManager1_RendererChanged(sender as Object, e as EventArgs) _ \n     Handles ToolStripManager1.RendererChanged\n\n   MessageBox.Show(&quot;You are in the ToolStripManager.RendererChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.ToolStripManager.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.ToolStripManager.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripManager\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripManager.FindToolStrip\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripManager.IsShortcutDefined\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripManager.IsValidShortcut\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripManager.LoadSettings\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripManager.Merge\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripManager.Renderer\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripManager.RendererChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripManager.add_RendererChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripManager.remove_RendererChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripManager.RenderMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripManager.RevertMerge\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripManager.SaveSettings\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.ToolStripManager.VisualStylesEnabled\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ccf1f926-4f40-ad64-308a-af6157fc2c4f\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\ToolStripManager.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Controls  rendering and rafting, and the merging of , , and  objects. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.ToolStripManager\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.ToolStripManager.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.ToolStripManager.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.ToolStripManager","System.Windows.Forms.ToolStripManager.FindToolStrip","System.Windows.Forms.ToolStripManager.IsShortcutDefined","System.Windows.Forms.ToolStripManager.IsValidShortcut","System.Windows.Forms.ToolStripManager.LoadSettings","System.Windows.Forms.ToolStripManager.Merge","System.Windows.Forms.ToolStripManager.Renderer","System.Windows.Forms.ToolStripManager.RendererChanged","System.Windows.Forms.ToolStripManager.add_RendererChanged","System.Windows.Forms.ToolStripManager.remove_RendererChanged","System.Windows.Forms.ToolStripManager.RenderMode","System.Windows.Forms.ToolStripManager.RevertMerge","System.Windows.Forms.ToolStripManager.SaveSettings","System.Windows.Forms.ToolStripManager.VisualStylesEnabled"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.ToolStripManager","System::Windows::Forms::ToolStripManager","System.Windows.Forms.ToolStripManager.FindToolStrip","System::Windows::Forms::ToolStripManager::FindToolStrip","System.Windows.Forms.ToolStripManager.IsShortcutDefined","System::Windows::Forms::ToolStripManager::IsShortcutDefined","System.Windows.Forms.ToolStripManager.IsValidShortcut","System::Windows::Forms::ToolStripManager::IsValidShortcut","System.Windows.Forms.ToolStripManager.LoadSettings","System::Windows::Forms::ToolStripManager::LoadSettings","System.Windows.Forms.ToolStripManager.Merge","System::Windows::Forms::ToolStripManager::Merge","System.Windows.Forms.ToolStripManager.Renderer","System::Windows::Forms::ToolStripManager::Renderer","System.Windows.Forms.ToolStripManager.RendererChanged","System::Windows::Forms::ToolStripManager::RendererChanged","System.Windows.Forms.ToolStripManager.RenderMode","System::Windows::Forms::ToolStripManager::RenderMode","System.Windows.Forms.ToolStripManager.RevertMerge","System::Windows::Forms::ToolStripManager::RevertMerge","System.Windows.Forms.ToolStripManager.SaveSettings","System::Windows::Forms::ToolStripManager::SaveSettings","System.Windows.Forms.ToolStripManager.VisualStylesEnabled","System::Windows::Forms::ToolStripManager::VisualStylesEnabled"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ccf1f926-4f40-ad64-308a-af6157fc2c4f","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\ToolStripManager.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/ToolStripManager.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ToolStripManager class | Microsoft Docs","_op_ogTitle":"ToolStripManager class","description":"Controls  rendering and rafting, and the merging of , , and  objects. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.ToolStripManager","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.toolstripmanager","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.toolstripmanager","fileRelativePath":"System.Windows.Forms.ToolStripManager.html"},"themesRelativePathToOutputRoot":"_themes/"}