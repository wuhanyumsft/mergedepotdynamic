{"content":"    \r\n    <h1 id=\"System_Web_SessionState_SessionStateUtility\">\r\n      <span class=\"lang-csharp\">SessionStateUtility</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides helper methods used by session-state modules and session-state store providers to manage session information for an ASP.NET application. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static class SessionStateUtility</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SessionStateUtility</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The SessionStateUtility class provides static helper methods that are used by a session-state module or a session-state store provider. Application developers will not need to call these methods from their code.  </p>\n<p> The following table describes the ways the session-state module and session-state store provider use the methods.  </p>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>Use</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.web.sessionstate.sessionstateutility#System_Web_SessionState_SessionStateUtility_GetHttpSessionStateFromContext_\" data-linktype=\"relative-path\">GetHttpSessionStateFromContext</a> method</td>\n<td>Can be used by custom session-state modules to either retrieve session information for an existing session or create session information for a new session.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.sessionstate.sessionstateutility#System_Web_SessionState_SessionStateUtility_AddHttpSessionStateToContext_\" data-linktype=\"relative-path\">AddHttpSessionStateToContext</a> method</td>\n<td>Called by the session-state module to add the session data to the current <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> and make it available to application code through the <a class=\"xref\" href=\"system.web.httpcontext#System_Web_HttpContext_Session_\" data-linktype=\"relative-path\">Session</a> property.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.sessionstate.sessionstateutility#System_Web_SessionState_SessionStateUtility_RemoveHttpSessionStateFromContext_\" data-linktype=\"relative-path\">RemoveHttpSessionStateFromContext</a> method</td>\n<td>Called by the session-state module during the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_ReleaseRequestState\" data-linktype=\"relative-path\">ReleaseRequestState</a> or <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_EndRequest\" data-linktype=\"relative-path\">EndRequest</a> events at the end of a request, to clear session data from the current <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.web.sessionstate.sessionstateutility#System_Web_SessionState_SessionStateUtility_GetSessionStaticObjects_\" data-linktype=\"relative-path\">GetSessionStaticObjects</a> method</td>\n<td>Called by the session-state module to get a reference to the <a class=\"xref\" href=\"system.web.sessionstate.httpsessionstate#System_Web_SessionState_HttpSessionState_StaticObjects_\" data-linktype=\"relative-path\">StaticObjects</a> collection based on objects defined in the Global.asax file. The <a class=\"xref\" href=\"system.web.httpstaticobjectscollection\" data-linktype=\"relative-path\">HttpStaticObjectsCollection</a> collection returned is included with the session data added to the current <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a>.</td>\n</tr>\n</tbody>\n</table>\n<p> Session data is passed to and retrieved from the current <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> as an <a class=\"xref\" href=\"system.web.sessionstate.httpsessionstatecontainer\" data-linktype=\"relative-path\">HttpSessionStateContainer</a> object or any valid implementation of the <a class=\"xref\" href=\"system.web.sessionstate.ihttpsessionstate\" data-linktype=\"relative-path\">IHttpSessionState</a> interface.  </p>\n<p> For information about implementing a session-state store provider, see <a href=\"../Topic/Implementing%20a%20Session-State%20Store%20Provider.md\" data-linktype=\"relative-path\">Implementing a Session-State Store Provider</a>.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_SessionState_SessionStateUtility_SerializationSurrogateSelector\" data-linktype=\"self-bookmark\">SerializationSurrogateSelector</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a serialization surrogate selector that is used for session serialization customization.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_SessionState_SessionStateUtility_AddHttpSessionStateToContext_System_Web_HttpContext_System_Web_SessionState_IHttpSessionState_\" data-linktype=\"self-bookmark\">AddHttpSessionStateToContext(HttpContext,IHttpSessionState)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Applies the session data to the context for the current request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_SessionState_SessionStateUtility_GetHttpSessionStateFromContext_System_Web_HttpContext_\" data-linktype=\"self-bookmark\">GetHttpSessionStateFromContext(HttpContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves session data from the context for the current request.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_SessionState_SessionStateUtility_GetSessionStaticObjects_System_Web_HttpContext_\" data-linktype=\"self-bookmark\">GetSessionStaticObjects(HttpContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a reference to the static objects collection for the specified context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_SessionState_SessionStateUtility_IsSessionStateReadOnly_System_Web_HttpContext_\" data-linktype=\"self-bookmark\">IsSessionStateReadOnly(HttpContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value which indicates whether the session state is read-only for the specified <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_SessionState_SessionStateUtility_IsSessionStateRequired_System_Web_HttpContext_\" data-linktype=\"self-bookmark\">IsSessionStateRequired(HttpContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value which indicates whether the session state is required for the specified <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_SessionState_SessionStateUtility_RaiseSessionEnd_System_Web_SessionState_IHttpSessionState_System_Object_System_EventArgs_\" data-linktype=\"self-bookmark\">RaiseSessionEnd(IHttpSessionState,Object,EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Executes the <strong>Session_OnEnd</strong> event defined in the Global.asax file for the ASP.NET application.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_SessionState_SessionStateUtility_RemoveHttpSessionStateFromContext_System_Web_HttpContext_\" data-linktype=\"self-bookmark\">RemoveHttpSessionStateFromContext(HttpContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes session data from the specified context.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_SessionState_SessionStateUtility_SerializationSurrogateSelector\">\r\n    \r\n            <a id=\"System_Web_SessionState_SessionStateUtility_SerializationSurrogateSelector_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SerializationSurrogateSelector</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a serialization surrogate selector that is used for session serialization customization.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Runtime.Serialization.ISurrogateSelector SerializationSurrogateSelector { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.isurrogateselector\" data-linktype=\"relative-path\">ISurrogateSelector</a></div>\r\n                  </div>\r\n                  <p>A serialization surrogate selector.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_SessionState_SessionStateUtility_AddHttpSessionStateToContext_System_Web_HttpContext_System_Web_SessionState_IHttpSessionState_\">\r\n    \r\n            <a id=\"System_Web_SessionState_SessionStateUtility_AddHttpSessionStateToContext_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddHttpSessionStateToContext(HttpContext,IHttpSessionState)</div>        \r\n          </div>\r\n    \r\n            <p>Applies the session data to the context for the current request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void AddHttpSessionStateToContext (System.Web.HttpContext context, System.Web.SessionState.IHttpSessionState container);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> object to which to add the <a class=\"xref\" href=\"system.web.sessionstate.httpsessionstate\" data-linktype=\"relative-path\">HttpSessionState</a> object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>container</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.sessionstate.ihttpsessionstate\" data-linktype=\"relative-path\">IHttpSessionState</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.sessionstate.ihttpsessionstate\" data-linktype=\"relative-path\">IHttpSessionState</a> implementation instance to add to the specified HTTP context.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpexception\" data-linktype=\"relative-path\">HttpException</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.web.sessionstate.httpsessionstate\" data-linktype=\"relative-path\">HttpSessionState</a> object for the current session has already been added to the specified <code>context</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The AddHttpSessionStateToContext method is used by a session-state module to apply session data to the current request. This occurs during the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_AcquireRequestState\" data-linktype=\"relative-path\">AcquireRequestState</a> event at the beginning of a request. Session data for the current request is either retrieved for an existing session or created for a new session. The session data is then encapsulated in an <a class=\"xref\" href=\"system.web.sessionstate.ihttpsessionstate\" data-linktype=\"relative-path\">IHttpSessionState</a> implementation instance, which is passed to the AddHttpSessionStateToContext method along with the current <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a>. The supplied session data is then made available to application code through the <a class=\"xref\" href=\"system.web.httpcontext#System_Web_HttpContext_Session_\" data-linktype=\"relative-path\">Session</a> property of the current context.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the handler for the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_AcquireRequestState\" data-linktype=\"relative-path\">AcquireRequestState</a> event in a custom session-state module. The custom module retrieves existing session information or creates new session information and uses the AddHttpSessionStateToContext method to add it to the <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> of the current request. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.sessionstate.sessionstateutility\" data-linktype=\"relative-path\">SessionStateUtility</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.SessionState.SessionStateUtility#4\">        &#39;\n        &#39; Event handler for HttpApplication.AcquireRequestState\n        &#39;\n        Private Sub OnAcquireRequestState(ByVal [source] As Object, ByVal args As EventArgs)\n            Dim app As HttpApplication = CType([source], HttpApplication)\n            Dim context As HttpContext = app.Context\n            Dim isNew As Boolean = False\n            Dim sessionID As String\n            Dim sessionData As SessionItem = Nothing\n            Dim supportSessionIDReissue As Boolean = True\n\n            pSessionIDManager.InitializeRequest(context, False, supportSessionIDReissue)\n            sessionID = pSessionIDManager.GetSessionID(context)\n\n\n            If Not (sessionID Is Nothing) Then\n                Try\n                    pHashtableLock.AcquireReaderLock(Int32.MaxValue)\n                    sessionData = CType(pSessionItems(sessionID), SessionItem)\n\n                    If Not (sessionData Is Nothing) Then\n                        sessionData.Expires = DateTime.Now.AddMinutes(pTimeout)\n                    End If\n                Finally\n                    pHashtableLock.ReleaseReaderLock()\n                End Try\n            Else\n                Dim redirected, cookieAdded As Boolean\n\n                sessionID = pSessionIDManager.CreateSessionID(context)\n                pSessionIDManager.SaveSessionID(context, sessionID, redirected, cookieAdded)\n\n                If redirected Then Return\n            End If\n            If sessionData Is Nothing Then\n                &#39; Identify the session as a new session state instance. Create a new SessionItem\n                &#39; and add it to the local Hashtable.\n                isNew = True\n\n                sessionData = New SessionItem()\n\n                sessionData.Items = New SessionStateItemCollection()\n                sessionData.StaticObjects = SessionStateUtility.GetSessionStaticObjects(context)\n                sessionData.Expires = DateTime.Now.AddMinutes(pTimeout)\n\n                Try\n                    pHashtableLock.AcquireWriterLock(Int32.MaxValue)\n                    pSessionItems(sessionID) = sessionData\n                Finally\n                    pHashtableLock.ReleaseWriterLock()\n                End Try\n            End If\n\n            &#39; Add the session data to the current HttpContext.\n            SessionStateUtility.AddHttpSessionStateToContext(context, _\n                             New HttpSessionStateContainer(sessionID, _\n                                                          sessionData.Items, _\n                                                          sessionData.StaticObjects, _\n                                                          pTimeout, _\n                                                          isNew, _\n                                                          pCookieMode, _\n                                                          SessionStateMode.Custom, _\n                                                          False))\n\n            &#39; Execute the Session_OnStart event for a new session.\n            If isNew Then RaiseEvent Start(Me, EventArgs.Empty)\n        End Sub\n\n\n        &#39;\n        &#39; Event for Session_OnStart event in the Global.asax file.\n        &#39;\n\tPublic Event Start As EventHandler\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.SessionState.SessionStateUtility#4\">        //\n        // Event handler for HttpApplication.AcquireRequestState\n        //\n\n        private void OnAcquireRequestState(object source, EventArgs args)\n        {\n            HttpApplication app = (HttpApplication)source;\n            HttpContext context = app.Context;\n            bool isNew = false;\n            string sessionID;\n            SessionItem sessionData = null;\n            bool supportSessionIDReissue = true;\n\n            pSessionIDManager.InitializeRequest(context, false, out supportSessionIDReissue);\n            sessionID = pSessionIDManager.GetSessionID(context);\n\n\n            if (sessionID != null)\n            {\n                try\n                {\n                    pHashtableLock.AcquireReaderLock(Int32.MaxValue);\n                    sessionData = (SessionItem)pSessionItems[sessionID];\n\n                    if (sessionData != null)\n                       sessionData.Expires = DateTime.Now.AddMinutes(pTimeout);\n                }\n                finally\n                {\n                    pHashtableLock.ReleaseReaderLock();\n                }\n            }\n            else\n            {\n                bool redirected, cookieAdded;\n\n                sessionID = pSessionIDManager.CreateSessionID(context);\n                pSessionIDManager.SaveSessionID(context, sessionID, out redirected, out cookieAdded);\n\n                if (redirected)\n                    return;\n            }\n\n            if (sessionData == null)\n            {\n                // Identify the session as a new session state instance. Create a new SessionItem\n                // and add it to the local Hashtable.\n\n                isNew = true;\n\n                sessionData = new SessionItem();\n\n                sessionData.Items = new SessionStateItemCollection();\n                sessionData.StaticObjects = SessionStateUtility.GetSessionStaticObjects(context);\n                sessionData.Expires = DateTime.Now.AddMinutes(pTimeout);\n\n                try\n                {\n                    pHashtableLock.AcquireWriterLock(Int32.MaxValue);\n                    pSessionItems[sessionID] = sessionData;\n                }\n                finally\n                {\n                    pHashtableLock.ReleaseWriterLock();\n                }\n            }\n\n            // Add the session data to the current HttpContext.\n            SessionStateUtility.AddHttpSessionStateToContext(context,\n                             new HttpSessionStateContainer(sessionID,\n                                                          sessionData.Items,\n                                                          sessionData.StaticObjects,\n                                                          pTimeout,\n                                                          isNew,\n                                                          pCookieMode,\n                                                          SessionStateMode.Custom,\n                                                          false));\n\n            // Execute the Session_OnStart event for a new session.\n            if (isNew &amp;&amp; Start != null)\n            {\n                Start(this, EventArgs.Empty);\n            }\n        }\n\n        //\n        // Event for Session_OnStart event in the Global.asax file.\n        //\n\n        public event EventHandler Start;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_SessionState_SessionStateUtility_GetHttpSessionStateFromContext_System_Web_HttpContext_\">\r\n    \r\n            <a id=\"System_Web_SessionState_SessionStateUtility_GetHttpSessionStateFromContext_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHttpSessionStateFromContext(HttpContext)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves session data from the context for the current request.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Web.SessionState.IHttpSessionState GetHttpSessionStateFromContext (System.Web.HttpContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> from which to retrieve session data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.sessionstate.ihttpsessionstate\" data-linktype=\"relative-path\">IHttpSessionState</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.web.sessionstate.ihttpsessionstate\" data-linktype=\"relative-path\">IHttpSessionState</a> implementation instance populated with session data from the current request.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetHttpSessionStateFromContext method can be used by a session-state module to retrieve session data from the current request. This occurs during the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_ReleaseRequestState\" data-linktype=\"relative-path\">ReleaseRequestState</a> event at the end of a request. The returned session data can then be written to the session data store. If the session has been abandoned, the session data can be removed from the data store and <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a>, and the <strong>Session_OnEnd</strong> event can be executed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the handler for the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_ReleaseRequestState\" data-linktype=\"relative-path\">ReleaseRequestState</a> event in a custom session-state module. The module retrieves session data from the <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> for the current request using the GetHttpSessionStateFromContext method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.sessionstate.sessionstateutility\" data-linktype=\"relative-path\">SessionStateUtility</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.SessionState.SessionStateUtility#5\">        &#39;\n        &#39; Event handler for HttpApplication.ReleaseRequestState\n        &#39;\n        Private Sub OnReleaseRequestState(ByVal [source] As Object, ByVal args As EventArgs)\n            Dim app As HttpApplication = CType([source], HttpApplication)\n            Dim context As HttpContext = app.Context\n            Dim sessionID As String\n\n            &#39; Read the session state from the context\n            Dim stateProvider As HttpSessionStateContainer = _\n               CType(SessionStateUtility.GetHttpSessionStateFromContext(context), HttpSessionStateContainer)\n\n            &#39; If Session.Abandon() was called, remove the session data from the local Hashtable\n            &#39; and execute the Session_OnEnd event from the Global.asax file.\n            If stateProvider.IsAbandoned Then\n                Try\n                    pHashtableLock.AcquireWriterLock(Int32.MaxValue)\n\n                    sessionID = pSessionIDManager.GetSessionID(context)\n                    pSessionItems.Remove(sessionID)\n                Finally\n                    pHashtableLock.ReleaseWriterLock()\n                End Try\n\n                SessionStateUtility.RaiseSessionEnd(stateProvider, Me, EventArgs.Empty)\n            End If\n\n          SessionStateUtility.RemoveHttpSessionStateFromContext(context)\n        End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.SessionState.SessionStateUtility#5\">        //\n        // Event handler for HttpApplication.ReleaseRequestState\n        //\n\n        private void OnReleaseRequestState(object source, EventArgs args)\n        {\n            HttpApplication app = (HttpApplication)source;\n            HttpContext context = app.Context;\n            string sessionID;\n\n            // Read the session state from the context\n            HttpSessionStateContainer stateProvider =\n              (HttpSessionStateContainer)(SessionStateUtility.GetHttpSessionStateFromContext(context));\n\n            // If Session.Abandon() was called, remove the session data from the local Hashtable\n            // and execute the Session_OnEnd event from the Global.asax file.\n            if (stateProvider.IsAbandoned)\n            {\n                try\n                {\n                    pHashtableLock.AcquireWriterLock(Int32.MaxValue);\n\n                    sessionID = pSessionIDManager.GetSessionID(context);\n                    pSessionItems.Remove(sessionID);\n                }\n                finally\n                {\n                    pHashtableLock.ReleaseWriterLock();\n                }\n\n                SessionStateUtility.RaiseSessionEnd(stateProvider, this, EventArgs.Empty);\n            }\n\n            SessionStateUtility.RemoveHttpSessionStateFromContext(context);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_SessionState_SessionStateUtility_GetSessionStaticObjects_System_Web_HttpContext_\">\r\n    \r\n            <a id=\"System_Web_SessionState_SessionStateUtility_GetSessionStaticObjects_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSessionStaticObjects(HttpContext)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a reference to the static objects collection for the specified context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Web.HttpStaticObjectsCollection GetSessionStaticObjects (System.Web.HttpContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> from which to get the static objects collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpstaticobjectscollection\" data-linktype=\"relative-path\">HttpStaticObjectsCollection</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.web.httpstaticobjectscollection\" data-linktype=\"relative-path\">HttpStaticObjectsCollection</a> collection populated with the <span class=\"xref\">stem.Web.SessionState.HttpSessionState.StaticObjects*</span> property value for the specified <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetSessionStaticObjects method is used to retrieve the collection of static objects defined in the Global.asax file for the ASP.NET application. A session-state module implementation will supply the returned <a class=\"xref\" href=\"system.web.httpstaticobjectscollection\" data-linktype=\"relative-path\">HttpStaticObjectsCollection</a> collection to the <a class=\"xref\" href=\"system.web.sessionstate.ihttpsessionstate\" data-linktype=\"relative-path\">IHttpSessionState</a> implementation instance that is added to the current context using the <a class=\"xref\" href=\"system.web.sessionstate.sessionstateutility#System_Web_SessionState_SessionStateUtility_AddHttpSessionStateToContext_\" data-linktype=\"relative-path\">AddHttpSessionStateToContext</a> method.  </p>\n<p> A <a class=\"xref\" href=\"system.web.sessionstate.sessionstatestoreproviderbase\" data-linktype=\"relative-path\">SessionStateStoreProviderBase</a> can also use the GetSessionStaticObjects method when creating a <a class=\"xref\" href=\"system.web.sessionstate.sessionstatestoredata\" data-linktype=\"relative-path\">SessionStateStoreData</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the handler for the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_AcquireRequestState\" data-linktype=\"relative-path\">AcquireRequestState</a> event in a custom session-state module. The module retrieves existing session information or creates new session information, including the <a class=\"xref\" href=\"system.web.httpstaticobjectscollection\" data-linktype=\"relative-path\">HttpStaticObjectsCollection</a> collection returned from the GetSessionStaticObjects method, and adds it to the <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> of the current request. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.sessionstate.sessionstateutility\" data-linktype=\"relative-path\">SessionStateUtility</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.SessionState.SessionStateUtility#4\">        &#39;\n        &#39; Event handler for HttpApplication.AcquireRequestState\n        &#39;\n        Private Sub OnAcquireRequestState(ByVal [source] As Object, ByVal args As EventArgs)\n            Dim app As HttpApplication = CType([source], HttpApplication)\n            Dim context As HttpContext = app.Context\n            Dim isNew As Boolean = False\n            Dim sessionID As String\n            Dim sessionData As SessionItem = Nothing\n            Dim supportSessionIDReissue As Boolean = True\n\n            pSessionIDManager.InitializeRequest(context, False, supportSessionIDReissue)\n            sessionID = pSessionIDManager.GetSessionID(context)\n\n\n            If Not (sessionID Is Nothing) Then\n                Try\n                    pHashtableLock.AcquireReaderLock(Int32.MaxValue)\n                    sessionData = CType(pSessionItems(sessionID), SessionItem)\n\n                    If Not (sessionData Is Nothing) Then\n                        sessionData.Expires = DateTime.Now.AddMinutes(pTimeout)\n                    End If\n                Finally\n                    pHashtableLock.ReleaseReaderLock()\n                End Try\n            Else\n                Dim redirected, cookieAdded As Boolean\n\n                sessionID = pSessionIDManager.CreateSessionID(context)\n                pSessionIDManager.SaveSessionID(context, sessionID, redirected, cookieAdded)\n\n                If redirected Then Return\n            End If\n            If sessionData Is Nothing Then\n                &#39; Identify the session as a new session state instance. Create a new SessionItem\n                &#39; and add it to the local Hashtable.\n                isNew = True\n\n                sessionData = New SessionItem()\n\n                sessionData.Items = New SessionStateItemCollection()\n                sessionData.StaticObjects = SessionStateUtility.GetSessionStaticObjects(context)\n                sessionData.Expires = DateTime.Now.AddMinutes(pTimeout)\n\n                Try\n                    pHashtableLock.AcquireWriterLock(Int32.MaxValue)\n                    pSessionItems(sessionID) = sessionData\n                Finally\n                    pHashtableLock.ReleaseWriterLock()\n                End Try\n            End If\n\n            &#39; Add the session data to the current HttpContext.\n            SessionStateUtility.AddHttpSessionStateToContext(context, _\n                             New HttpSessionStateContainer(sessionID, _\n                                                          sessionData.Items, _\n                                                          sessionData.StaticObjects, _\n                                                          pTimeout, _\n                                                          isNew, _\n                                                          pCookieMode, _\n                                                          SessionStateMode.Custom, _\n                                                          False))\n\n            &#39; Execute the Session_OnStart event for a new session.\n            If isNew Then RaiseEvent Start(Me, EventArgs.Empty)\n        End Sub\n\n\n        &#39;\n        &#39; Event for Session_OnStart event in the Global.asax file.\n        &#39;\n\tPublic Event Start As EventHandler\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.SessionState.SessionStateUtility#4\">        //\n        // Event handler for HttpApplication.AcquireRequestState\n        //\n\n        private void OnAcquireRequestState(object source, EventArgs args)\n        {\n            HttpApplication app = (HttpApplication)source;\n            HttpContext context = app.Context;\n            bool isNew = false;\n            string sessionID;\n            SessionItem sessionData = null;\n            bool supportSessionIDReissue = true;\n\n            pSessionIDManager.InitializeRequest(context, false, out supportSessionIDReissue);\n            sessionID = pSessionIDManager.GetSessionID(context);\n\n\n            if (sessionID != null)\n            {\n                try\n                {\n                    pHashtableLock.AcquireReaderLock(Int32.MaxValue);\n                    sessionData = (SessionItem)pSessionItems[sessionID];\n\n                    if (sessionData != null)\n                       sessionData.Expires = DateTime.Now.AddMinutes(pTimeout);\n                }\n                finally\n                {\n                    pHashtableLock.ReleaseReaderLock();\n                }\n            }\n            else\n            {\n                bool redirected, cookieAdded;\n\n                sessionID = pSessionIDManager.CreateSessionID(context);\n                pSessionIDManager.SaveSessionID(context, sessionID, out redirected, out cookieAdded);\n\n                if (redirected)\n                    return;\n            }\n\n            if (sessionData == null)\n            {\n                // Identify the session as a new session state instance. Create a new SessionItem\n                // and add it to the local Hashtable.\n\n                isNew = true;\n\n                sessionData = new SessionItem();\n\n                sessionData.Items = new SessionStateItemCollection();\n                sessionData.StaticObjects = SessionStateUtility.GetSessionStaticObjects(context);\n                sessionData.Expires = DateTime.Now.AddMinutes(pTimeout);\n\n                try\n                {\n                    pHashtableLock.AcquireWriterLock(Int32.MaxValue);\n                    pSessionItems[sessionID] = sessionData;\n                }\n                finally\n                {\n                    pHashtableLock.ReleaseWriterLock();\n                }\n            }\n\n            // Add the session data to the current HttpContext.\n            SessionStateUtility.AddHttpSessionStateToContext(context,\n                             new HttpSessionStateContainer(sessionID,\n                                                          sessionData.Items,\n                                                          sessionData.StaticObjects,\n                                                          pTimeout,\n                                                          isNew,\n                                                          pCookieMode,\n                                                          SessionStateMode.Custom,\n                                                          false));\n\n            // Execute the Session_OnStart event for a new session.\n            if (isNew &amp;&amp; Start != null)\n            {\n                Start(this, EventArgs.Empty);\n            }\n        }\n\n        //\n        // Event for Session_OnStart event in the Global.asax file.\n        //\n\n        public event EventHandler Start;\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_SessionState_SessionStateUtility_IsSessionStateReadOnly_System_Web_HttpContext_\">\r\n    \r\n            <a id=\"System_Web_SessionState_SessionStateUtility_IsSessionStateReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSessionStateReadOnly(HttpContext)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value which indicates whether the session state is read-only for the specified <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsSessionStateReadOnly (System.Web.HttpContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Specifies the <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> to check.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the session state is read-only; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_SessionState_SessionStateUtility_IsSessionStateRequired_System_Web_HttpContext_\">\r\n    \r\n            <a id=\"System_Web_SessionState_SessionStateUtility_IsSessionStateRequired_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsSessionStateRequired(HttpContext)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value which indicates whether the session state is required for the specified <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsSessionStateRequired (System.Web.HttpContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Specifies the <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> to check.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the session state is required; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_SessionState_SessionStateUtility_RaiseSessionEnd_System_Web_SessionState_IHttpSessionState_System_Object_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Web_SessionState_SessionStateUtility_RaiseSessionEnd_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RaiseSessionEnd(IHttpSessionState,Object,EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Executes the <strong>Session_OnEnd</strong> event defined in the Global.asax file for the ASP.NET application.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RaiseSessionEnd (System.Web.SessionState.IHttpSessionState session, object eventSource, EventArgs eventArgs);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>session</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.sessionstate.ihttpsessionstate\" data-linktype=\"relative-path\">IHttpSessionState</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.sessionstate.ihttpsessionstate\" data-linktype=\"relative-path\">IHttpSessionState</a> implementation instance for the session that has ended.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventSource</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The event source object to supply to the <code>Session_OnEnd</code> event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventArgs</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> object to supply to the <code>Session_OnEnd</code> event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RaiseSessionEnd method is used by a session-state module to execute the <strong>Session_OnEnd</strong> event defined in the Global.asax file for an ASP.NET application. A session-state module will call the RaiseSessionEnd method when a session has been abandoned, or if the session expires.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the handler for the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_ReleaseRequestState\" data-linktype=\"relative-path\">ReleaseRequestState</a> event in a custom session-state module. If the session has been abandoned, the module executes the <strong>Session_OnEnd</strong> event defined in the Global.asax file for the application using the RaiseSessionEnd method. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.sessionstate.sessionstateutility\" data-linktype=\"relative-path\">SessionStateUtility</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.SessionState.SessionStateUtility#5\">        &#39;\n        &#39; Event handler for HttpApplication.ReleaseRequestState\n        &#39;\n        Private Sub OnReleaseRequestState(ByVal [source] As Object, ByVal args As EventArgs)\n            Dim app As HttpApplication = CType([source], HttpApplication)\n            Dim context As HttpContext = app.Context\n            Dim sessionID As String\n\n            &#39; Read the session state from the context\n            Dim stateProvider As HttpSessionStateContainer = _\n               CType(SessionStateUtility.GetHttpSessionStateFromContext(context), HttpSessionStateContainer)\n\n            &#39; If Session.Abandon() was called, remove the session data from the local Hashtable\n            &#39; and execute the Session_OnEnd event from the Global.asax file.\n            If stateProvider.IsAbandoned Then\n                Try\n                    pHashtableLock.AcquireWriterLock(Int32.MaxValue)\n\n                    sessionID = pSessionIDManager.GetSessionID(context)\n                    pSessionItems.Remove(sessionID)\n                Finally\n                    pHashtableLock.ReleaseWriterLock()\n                End Try\n\n                SessionStateUtility.RaiseSessionEnd(stateProvider, Me, EventArgs.Empty)\n            End If\n\n          SessionStateUtility.RemoveHttpSessionStateFromContext(context)\n        End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.SessionState.SessionStateUtility#5\">        //\n        // Event handler for HttpApplication.ReleaseRequestState\n        //\n\n        private void OnReleaseRequestState(object source, EventArgs args)\n        {\n            HttpApplication app = (HttpApplication)source;\n            HttpContext context = app.Context;\n            string sessionID;\n\n            // Read the session state from the context\n            HttpSessionStateContainer stateProvider =\n              (HttpSessionStateContainer)(SessionStateUtility.GetHttpSessionStateFromContext(context));\n\n            // If Session.Abandon() was called, remove the session data from the local Hashtable\n            // and execute the Session_OnEnd event from the Global.asax file.\n            if (stateProvider.IsAbandoned)\n            {\n                try\n                {\n                    pHashtableLock.AcquireWriterLock(Int32.MaxValue);\n\n                    sessionID = pSessionIDManager.GetSessionID(context);\n                    pSessionItems.Remove(sessionID);\n                }\n                finally\n                {\n                    pHashtableLock.ReleaseWriterLock();\n                }\n\n                SessionStateUtility.RaiseSessionEnd(stateProvider, this, EventArgs.Empty);\n            }\n\n            SessionStateUtility.RemoveHttpSessionStateFromContext(context);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_SessionState_SessionStateUtility_RemoveHttpSessionStateFromContext_System_Web_HttpContext_\">\r\n    \r\n            <a id=\"System_Web_SessionState_SessionStateUtility_RemoveHttpSessionStateFromContext_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RemoveHttpSessionStateFromContext(HttpContext)</div>        \r\n          </div>\r\n    \r\n            <p>Removes session data from the specified context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RemoveHttpSessionStateFromContext (System.Web.HttpContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a> from which to remove session data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RemoveHttpSessionStateFromContext method clears session data from the specified <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a>. A session-state module will call the RemoveHttpSessionStateFromContext method in the handler for the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_ReleaseRequestState\" data-linktype=\"relative-path\">ReleaseRequestState</a> event.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows the handler for the <a class=\"xref\" href=\"system.web.httpapplication#System_Web_HttpApplication_ReleaseRequestState\" data-linktype=\"relative-path\">ReleaseRequestState</a> event in a custom session-state module. The event handler removes session data from the current <a class=\"xref\" href=\"system.web.httpcontext\" data-linktype=\"relative-path\">HttpContext</a>. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.web.sessionstate.sessionstateutility\" data-linktype=\"relative-path\">SessionStateUtility</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Web.SessionState.SessionStateUtility#5\">        &#39;\n        &#39; Event handler for HttpApplication.ReleaseRequestState\n        &#39;\n        Private Sub OnReleaseRequestState(ByVal [source] As Object, ByVal args As EventArgs)\n            Dim app As HttpApplication = CType([source], HttpApplication)\n            Dim context As HttpContext = app.Context\n            Dim sessionID As String\n\n            &#39; Read the session state from the context\n            Dim stateProvider As HttpSessionStateContainer = _\n               CType(SessionStateUtility.GetHttpSessionStateFromContext(context), HttpSessionStateContainer)\n\n            &#39; If Session.Abandon() was called, remove the session data from the local Hashtable\n            &#39; and execute the Session_OnEnd event from the Global.asax file.\n            If stateProvider.IsAbandoned Then\n                Try\n                    pHashtableLock.AcquireWriterLock(Int32.MaxValue)\n\n                    sessionID = pSessionIDManager.GetSessionID(context)\n                    pSessionItems.Remove(sessionID)\n                Finally\n                    pHashtableLock.ReleaseWriterLock()\n                End Try\n\n                SessionStateUtility.RaiseSessionEnd(stateProvider, Me, EventArgs.Empty)\n            End If\n\n          SessionStateUtility.RemoveHttpSessionStateFromContext(context)\n        End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Web.SessionState.SessionStateUtility#5\">        //\n        // Event handler for HttpApplication.ReleaseRequestState\n        //\n\n        private void OnReleaseRequestState(object source, EventArgs args)\n        {\n            HttpApplication app = (HttpApplication)source;\n            HttpContext context = app.Context;\n            string sessionID;\n\n            // Read the session state from the context\n            HttpSessionStateContainer stateProvider =\n              (HttpSessionStateContainer)(SessionStateUtility.GetHttpSessionStateFromContext(context));\n\n            // If Session.Abandon() was called, remove the session data from the local Hashtable\n            // and execute the Session_OnEnd event from the Global.asax file.\n            if (stateProvider.IsAbandoned)\n            {\n                try\n                {\n                    pHashtableLock.AcquireWriterLock(Int32.MaxValue);\n\n                    sessionID = pSessionIDManager.GetSessionID(context);\n                    pSessionItems.Remove(sessionID);\n                }\n                finally\n                {\n                    pHashtableLock.ReleaseWriterLock();\n                }\n\n                SessionStateUtility.RaiseSessionEnd(stateProvider, this, EventArgs.Empty);\n            }\n\n            SessionStateUtility.RemoveHttpSessionStateFromContext(context);\n        }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.SessionState.SessionStateUtility.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.SessionState.SessionStateUtility.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.SessionState.SessionStateUtility\">\r\n<meta name=\"APIName\" content=\"System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext\">\r\n<meta name=\"APIName\" content=\"System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext\">\r\n<meta name=\"APIName\" content=\"System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects\">\r\n<meta name=\"APIName\" content=\"System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Web.SessionState.SessionStateUtility.IsSessionStateRequired\">\r\n<meta name=\"APIName\" content=\"System.Web.SessionState.SessionStateUtility.RaiseSessionEnd\">\r\n<meta name=\"APIName\" content=\"System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext\">\r\n<meta name=\"APIName\" content=\"System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"7676de76-8d1e-43a6-57bd-dc38e4aee79f\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides helper methods used by session-state modules and session-state store providers to manage session information for an ASP.NET application. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.SessionState/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.SessionState.SessionStateUtility\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.SessionState.SessionStateUtility.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.SessionState.SessionStateUtility.yml","open_to_public_contributors":true,"api_name":["System.Web.SessionState.SessionStateUtility","System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext","System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext","System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects","System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly","System.Web.SessionState.SessionStateUtility.IsSessionStateRequired","System.Web.SessionState.SessionStateUtility.RaiseSessionEnd","System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext","System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.SessionState.SessionStateUtility","System::Web::SessionState::SessionStateUtility","System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext","System::Web::SessionState::SessionStateUtility::AddHttpSessionStateToContext","System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext","System::Web::SessionState::SessionStateUtility::GetHttpSessionStateFromContext","System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects","System::Web::SessionState::SessionStateUtility::GetSessionStaticObjects","System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly","System::Web::SessionState::SessionStateUtility::IsSessionStateReadOnly","System.Web.SessionState.SessionStateUtility.IsSessionStateRequired","System::Web::SessionState::SessionStateUtility::IsSessionStateRequired","System.Web.SessionState.SessionStateUtility.RaiseSessionEnd","System::Web::SessionState::SessionStateUtility::RaiseSessionEnd","System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext","System::Web::SessionState::SessionStateUtility::RemoveHttpSessionStateFromContext","System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector","System::Web::SessionState::SessionStateUtility::SerializationSurrogateSelector"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"7676de76-8d1e-43a6-57bd-dc38e4aee79f","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.SessionState/SessionStateUtility.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SessionStateUtility class | Microsoft Docs","_op_ogTitle":"SessionStateUtility class","description":"Provides helper methods used by session-state modules and session-state store providers to manage session information for an ASP.NET application. This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Web.SessionState/toc.json","toc_rel":"_splitted/System.Web.SessionState/toc.json","source_url":"","ms.assetid":"System.Web.SessionState.SessionStateUtility","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.sessionstate.sessionstateutility","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.sessionstate.sessionstateutility","fileRelativePath":"System.Web.SessionState.SessionStateUtility.html"},"themesRelativePathToOutputRoot":"_themes/"}