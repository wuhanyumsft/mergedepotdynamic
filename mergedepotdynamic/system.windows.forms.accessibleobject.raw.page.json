{"content":"    \r\n    <h1 id=\"System_Windows_Forms_AccessibleObject\">\r\n      <span class=\"lang-csharp\">AccessibleObject</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides information that accessibility applications use to adjust an application&#39;s user interface (UI) for users with impairments.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class AccessibleObject : System.Runtime.InteropServices.StandardOleMarshalObject, Accessibility.IAccessible, System.Reflection.IReflect</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.runtime.interopservices.standardolemarshalobject\" data-linktype=\"relative-path\">System.Runtime.InteropServices.StandardOleMarshalObject</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">AccessibleObject</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Accessibility applications can adjust features of the application to improve usability for users with disabilities.  </p>\n<p> For users who are visually impaired, you can adjust software and operating system features to comply with their needs. For example, you can enlarge text and images and render them with a contrast. In addition, you can accommodate color-blindness with the appropriate use of colors. For users who are severely visually impaired, computers are accessible with screen review aids that translate on-screen text to speech or to a dynamic, refreshable, Braille display.  </p>\n<p> For users who are hard of hearing, you can design programs that use visual cues, such as a flashing toolbar; or you can display spoken messages as text. For example, when turned on, the <code>SoundSentry</code> feature, an accessibility option in Control Panel, provides a visual warning whenever the system makes an alarm sound.  </p>\n<p> For users with motion disabilities, you can design controls that refine or eliminate keyboard and mouse use, thereby improving computer accessibility. Control Panel offers assistance. For example, one alternative is to use the numeric keypad instead of the mouse for navigation. Another option, called <code>StickyKeys</code>, enables users who cannot hold down two or more keys at a time (such as CTRL+P) to get the same result by typing one key at a time.  </p>\n<p> For users with cognitive and language disabilities, you can design software programs to better accommodate their needs. For example, using conspicuous or cued sequencing, uncomplicated displays, fewer words, and a reading level targeted to elementary school standards can benefit these users.  </p>\n<p> For users with seizure disorders, you can design software programs to eliminate seizure provoking patterns.  </p>\n<p> For more information about accessibility, including information about accessibility applications, see the documentation for Microsoft Accessibility in the MSDN library or at the Microsoft Web site.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> To use the AccessibleObject, you must add a reference to the <code>Accessibility</code> assembly installed with the .NET Framework. Windows Forms only supports Active Accessibility 2.0.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject__ctor\" data-linktype=\"self-bookmark\">AccessibleObject()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Bounds\" data-linktype=\"self-bookmark\">Bounds</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the location and size of the accessible object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_DefaultAction\" data-linktype=\"self-bookmark\">DefaultAction</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a string that describes the default action of the object. Not all objects have a default action.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Description\" data-linktype=\"self-bookmark\">Description</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a string that describes the visual appearance of the specified object. Not all objects have a description.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Help\" data-linktype=\"self-bookmark\">Help</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a description of what the object does or how the object is used.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_KeyboardShortcut\" data-linktype=\"self-bookmark\">KeyboardShortcut</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the shortcut key or access key for the accessible object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Name\" data-linktype=\"self-bookmark\">Name</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the object name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Parent\" data-linktype=\"self-bookmark\">Parent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the parent of an accessible object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Role\" data-linktype=\"self-bookmark\">Role</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the role of this accessible object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_State\" data-linktype=\"self-bookmark\">State</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the state of this accessible object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Value\" data-linktype=\"self-bookmark\">Value</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the value of an accessible object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_DoDefaultAction\" data-linktype=\"self-bookmark\">DoDefaultAction()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs the default action associated with this accessible object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_GetChild_System_Int32_\" data-linktype=\"self-bookmark\">GetChild(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the accessible child corresponding to the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_GetChildCount\" data-linktype=\"self-bookmark\">GetChildCount()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the number of children belonging to an accessible object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_GetFocused\" data-linktype=\"self-bookmark\">GetFocused()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the object that has the keyboard focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_GetHelpTopic_System_String__\" data-linktype=\"self-bookmark\">GetHelpTopic(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an identifier for a Help topic identifier and the path to the Help file associated with this accessible object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_GetSelected\" data-linktype=\"self-bookmark\">GetSelected()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the currently selected child.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_HitTest_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">HitTest(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the child object at the specified screen coordinates.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Navigate_System_Windows_Forms_AccessibleNavigation_\" data-linktype=\"self-bookmark\">Navigate(AccessibleNavigation)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Navigates to another accessible object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Select_System_Windows_Forms_AccessibleSelection_\" data-linktype=\"self-bookmark\">Select(AccessibleSelection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Modifies the selection or moves the keyboard focus of the accessible object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_UseStdAccessibleObjects_System_IntPtr_\" data-linktype=\"self-bookmark\">UseStdAccessibleObjects(IntPtr)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Associates an object with an instance of an <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> based on the handle of the object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_UseStdAccessibleObjects_System_IntPtr_System_Int32_\" data-linktype=\"self-bookmark\">UseStdAccessibleObjects(IntPtr,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Associates an object with an instance of an <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> based on the handle and the object id of the object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accChildCount\" data-linktype=\"self-bookmark\">IAccessible.accChildCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of child interfaces that belong to this object. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accChildCount*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accDoDefaultAction_System_Object_\" data-linktype=\"self-bookmark\">IAccessible.accDoDefaultAction(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs the specified object&#39;s default action. Not all objects have a default action. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accDoDefaultAction*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accFocus\" data-linktype=\"self-bookmark\">IAccessible.accFocus</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the object that has the keyboard focus. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accFocus*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accHitTest_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">IAccessible.accHitTest(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the child object at the specified screen coordinates. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accHitTest*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accLocation_System_Int32__System_Int32__System_Int32__System_Int32__System_Object_\" data-linktype=\"self-bookmark\">IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the object&#39;s current screen location. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accLocation*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accNavigate_System_Int32_System_Object_\" data-linktype=\"self-bookmark\">IAccessible.accNavigate(Int32,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Navigates to an accessible object relative to the current object. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accNavigate*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accParent\" data-linktype=\"self-bookmark\">IAccessible.accParent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the parent accessible object of this object. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accParent*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accSelect_System_Int32_System_Object_\" data-linktype=\"self-bookmark\">IAccessible.accSelect(Int32,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Modifies the selection or moves the keyboard focus of the accessible object. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accSelect*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accSelection\" data-linktype=\"self-bookmark\">IAccessible.accSelection</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the selected child objects of an accessible object. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accSelection*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accChild_System_Object_\" data-linktype=\"self-bookmark\">IAccessible.get_accChild(Object)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accDefaultAction_System_Object_\" data-linktype=\"self-bookmark\">IAccessible.get_accDefaultAction(Object)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accDescription_System_Object_\" data-linktype=\"self-bookmark\">IAccessible.get_accDescription(Object)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accHelp_System_Object_\" data-linktype=\"self-bookmark\">IAccessible.get_accHelp(Object)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accHelpTopic_System_String__System_Object_\" data-linktype=\"self-bookmark\">IAccessible.get_accHelpTopic(String,Object)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accKeyboardShortcut_System_Object_\" data-linktype=\"self-bookmark\">IAccessible.get_accKeyboardShortcut(Object)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accName_System_Object_\" data-linktype=\"self-bookmark\">IAccessible.get_accName(Object)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accRole_System_Object_\" data-linktype=\"self-bookmark\">IAccessible.get_accRole(Object)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accState_System_Object_\" data-linktype=\"self-bookmark\">IAccessible.get_accState(Object)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accValue_System_Object_\" data-linktype=\"self-bookmark\">IAccessible.get_accValue(Object)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_set_accName_System_Object_System_String_\" data-linktype=\"self-bookmark\">IAccessible.set_accName(Object,String)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_set_accValue_System_Object_System_String_\" data-linktype=\"self-bookmark\">IAccessible.set_accValue(Object,String)</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetField_System_String_System_Reflection_BindingFlags_\" data-linktype=\"self-bookmark\">IReflect.GetField(String,BindingFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <a class=\"xref\" href=\"system.reflection.fieldinfo\" data-linktype=\"relative-path\">FieldInfo</a> object corresponding to the specified field and binding flag. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetField*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetFields_System_Reflection_BindingFlags_\" data-linktype=\"self-bookmark\">IReflect.GetFields(BindingFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an array of <a class=\"xref\" href=\"system.reflection.fieldinfo\" data-linktype=\"relative-path\">FieldInfo</a> objects corresponding to all fields of the current class. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetFields*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetMember_System_String_System_Reflection_BindingFlags_\" data-linktype=\"self-bookmark\">IReflect.GetMember(String,BindingFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an array of <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> objects corresponding to all public members or to all members that match a specified name. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetMember*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetMembers_System_Reflection_BindingFlags_\" data-linktype=\"self-bookmark\">IReflect.GetMembers(BindingFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an array of <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> objects corresponding either to all public members or to all members of the current class. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetMembers*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetMethod_System_String_System_Reflection_BindingFlags_\" data-linktype=\"self-bookmark\">IReflect.GetMethod(String,BindingFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> object corresponding to a specified method under specified search constraints. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetMethod*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetMethod_System_String_System_Reflection_BindingFlags_System_Reflection_Binder_System_Type___System_Reflection_ParameterModifier___\" data-linktype=\"self-bookmark\">IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> object corresponding to a specified method, using a Type array to choose from among overloaded methods. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetMethod*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetMethods_System_Reflection_BindingFlags_\" data-linktype=\"self-bookmark\">IReflect.GetMethods(BindingFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an array of <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> objects with all public methods or all methods of the current class. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetMethods*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetProperties_System_Reflection_BindingFlags_\" data-linktype=\"self-bookmark\">IReflect.GetProperties(BindingFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an array of <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> objects corresponding to all public properties or to all properties of the current class. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetProperties*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetProperty_System_String_System_Reflection_BindingFlags_\" data-linktype=\"self-bookmark\">IReflect.GetProperty(String,BindingFlags)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> object corresponding to a specified property under specified search constraints. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetProperty*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetProperty_System_String_System_Reflection_BindingFlags_System_Reflection_Binder_System_Type_System_Type___System_Reflection_ParameterModifier___\" data-linktype=\"self-bookmark\">IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> object corresponding to a specified property with specified search constraints. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetProperty*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_InvokeMember_System_String_System_Reflection_BindingFlags_System_Reflection_Binder_System_Object_System_Object___System_Reflection_ParameterModifier___System_Globalization_CultureInfo_System_String___\" data-linktype=\"self-bookmark\">IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Invokes a specified member. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.InvokeMember*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_UnderlyingSystemType\" data-linktype=\"self-bookmark\">IReflect.UnderlyingSystemType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the underlying type that represents the <a class=\"xref\" href=\"system.reflection.ireflect\" data-linktype=\"relative-path\">IReflect</a> object. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.UnderlyingSystemType*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject__ctor\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AccessibleObject()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public AccessibleObject ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, when you use this method to create an accessible object, you are providing your own implementations of the properties and methods of the class to provide functionality specific to your application.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Bounds\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Bounds_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Bounds</div>        \r\n          </div>\r\n    \r\n            <p>Gets the location and size of the accessible object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Drawing.Rectangle Bounds { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the bounds of the accessible object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.comexception\" data-linktype=\"relative-path\">COMException</a></div>\r\n                  </div>\r\n                  <p>The bounds of control cannot be retrieved.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Bounds property retrieves the object&#39;s bounding rectangle in screen coordinates. If the object has a nonrectangular shape, then this property represents the smallest rectangle that completely encompasses the entire object region. Therefore, for nonrectangular objects such as list view items, the coordinates of the object&#39;s bounding rectangle can fail, if tested, by calling the <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_HitTest_\" data-linktype=\"relative-path\">HitTest</a> method, because <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_HitTest_\" data-linktype=\"relative-path\">HitTest</a> determines the object&#39;s boundaries on a pixel-by-pixel basis.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the creation of an accessibility-aware chart control, using the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> and <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject\" data-linktype=\"relative-path\">Control+ControlAccessibleObject</a> classes to expose accessible information. The control plots two curves along with a legend. The <code>ChartControlAccessibleObject</code> class, which derives from <code>ControlAccessibleObject</code>, is used in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateAccessibilityInstance_\" data-linktype=\"relative-path\">CreateAccessibilityInstance</a> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the <code>ChartControlAccessibleObject</code> class overrides the <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_GetChild_\" data-linktype=\"relative-path\">GetChild</a> method to return the <code>CurveLegendAccessibleObject</code> that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  </p>\n<p> This code excerpt demonstrates overriding the Bounds property. See the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> class overview for the complete code example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.AccessibleObject#6\">            &#39; Inner class CurveLegendAccessibleObject represents accessible information \n            &#39; associated with the CurveLegend object.\n            Public Class CurveLegendAccessibleObject\n                Inherits AccessibleObject\n\n                Private curveLegend As CurveLegend\n                \n                Public Sub New(curveLegend As CurveLegend)\n                    Me.curveLegend = curveLegend\n                End Sub &#39;New\n                \n                &#39; Private property that helps get the reference to the parent ChartControl.                \n                Private ReadOnly Property ChartControl() As ChartControlAccessibleObject\n                    Get\n                        Return CType(Parent, ChartControlAccessibleObject)\n                    End Get\n                End Property\n\n                &#39; Friend helper function that returns the ID for this CurveLegend.                \n                Friend ReadOnly Property ID() As Integer\n                    Get\n                        Dim i As Integer\n                        For i = 0 To (ChartControl.GetChildCount()) - 1\n                            If ChartControl.GetChild(i) Is Me Then\n                                Return i\n                            End If\n                        Next i\n                        Return - 1\n                    End Get\n                End Property\n                \n                &#39; Gets the Bounds for the CurveLegend. This is used by accessibility programs.\n                Public Overrides ReadOnly Property Bounds() As Rectangle\n                    Get\n                        &#39; The bounds is in screen coordinates.\n                        Dim loc As Point = curveLegend.Location\n                        Return New Rectangle(curveLegend.chart.PointToScreen(loc), curveLegend.Size)\n                    End Get\n                End Property\n\n                &#39; Gets or sets the Name for the CurveLegend. This is used by accessibility programs.                \n                Public Overrides Property Name() As String\n                    Get\n                        Return curveLegend.Name\n                    End Get\n                    Set\n                        curveLegend.Name = value\n                    End Set\n                End Property\n                \n                &#39; Gets the Curve Legend Parent&#39;s Accessible object.\n                &#39; This is used by accessibility programs.                \n                Public Overrides ReadOnly Property Parent() As AccessibleObject\n                    Get\n                        Return curveLegend.chart.AccessibilityObject\n                    End Get\n                End Property\n                \n                &#39; Gets the role for the CurveLegend. This is used by accessibility programs.                \n                Public Overrides ReadOnly Property Role() As AccessibleRole\n                    Get\n                        Return System.Windows.Forms.AccessibleRole.StaticText\n                    End Get\n                End Property\n\n                &#39; Gets the state based on the selection for the CurveLegend. \n                &#39; This is used by accessibility programs.                \n                Public Overrides ReadOnly Property State() As AccessibleStates\n                    Get\n                        Dim stateTemp As AccessibleStates = AccessibleStates.Selectable\n                        If curveLegend.Selected Then\n                            stateTemp = stateTemp Or AccessibleStates.Selected\n                        End If\n                        Return stateTemp\n                    End Get\n                End Property\n                \n                &#39; Navigates through siblings of this CurveLegend. This is used by accessibility programs.                \n                Public Overrides Function Navigate(navdir As AccessibleNavigation) As AccessibleObject\n                    &#39; Use the Friend NavigateFromChild helper function that exists\n                    &#39; on ChartControlAccessibleObject.\n                    Return ChartControl.NavigateFromChild(Me, navdir)\n                End Function\n                \n                &#39; Selects or unselects this CurveLegend. This is used by accessibility programs.\n                Public Overrides Sub [Select](selection As AccessibleSelection)\n\n                    &#39; Use the internal SelectChild helper function that exists\n                    &#39; on ChartControlAccessibleObject.\n                    ChartControl.SelectChild(Me, selection)\n                End Sub\n\n            End Class &#39;CurveLegendAccessibleObject\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.AccessibleObject#6\">            // Inner class CurveLegendAccessibleObject represents accessible information \n            // associated with the CurveLegend object.\n            public class CurveLegendAccessibleObject : AccessibleObject\n            {\n                private CurveLegend curveLegend;\n\n                public CurveLegendAccessibleObject(CurveLegend curveLegend) : base() \n                {\n                    this.curveLegend = curveLegend;                    \n                }                \n\n                // Private property that helps get the reference to the parent ChartControl.\n                private ChartControlAccessibleObject ChartControl\n                {   \n                    get {\n                        return Parent as ChartControlAccessibleObject;\n                    }\n                }\n\n                // Internal helper function that returns the ID for this CurveLegend.\n                internal int ID\n                {\n                    get {\n                        for(int i = 0; i &lt; ChartControl.GetChildCount(); i++) {\n                            if (ChartControl.GetChild(i) == this) {\n                                return i;\n                            }\n                        }\n                        return -1;\n                    }\n                }\n\n                // Gets the Bounds for the CurveLegend. This is used by accessibility programs.\n                public override Rectangle Bounds\n                {\n                    get {                        \n                        // The bounds is in screen coordinates.\n                        Point loc = curveLegend.Location;\n                        return new Rectangle(curveLegend.chart.PointToScreen(loc), curveLegend.Size);\n                    }\n                }\n\n                // Gets or sets the Name for the CurveLegend. This is used by accessibility programs.\n                public override string Name\n                {\n                    get {\n                        return curveLegend.Name;\n                    }\n                    set {\n                        curveLegend.Name = value;                        \n                    }\n                }\n\n                // Gets the Curve Legend Parent&#39;s Accessible object.\n                // This is used by accessibility programs.\n                public override AccessibleObject Parent\n                {\n                    get {\n                        return curveLegend.chart.AccessibilityObject;\n                    }\n                }\n\n                // Gets the role for the CurveLegend. This is used by accessibility programs.\n                public override AccessibleRole Role \n                {\n                    get {\n                        return AccessibleRole.StaticText;\n                    }\n                }\n\n                // Gets the state based on the selection for the CurveLegend. \n                // This is used by accessibility programs.\n                public override AccessibleStates State \n                {\n                    get {\n                        AccessibleStates state = AccessibleStates.Selectable;\n                        if (curveLegend.Selected) \n                        {\n                            state |= AccessibleStates.Selected;\n                        }\n                        return state;\n                    }\n                }\n\n                // Navigates through siblings of this CurveLegend. This is used by accessibility programs.\n                public override AccessibleObject Navigate(AccessibleNavigation navdir) \n                {\n                    // Uses the internal NavigateFromChild helper function that exists\n                    // on ChartControlAccessibleObject.\n                    return ChartControl.NavigateFromChild(this, navdir);\n                }\n\n                // Selects or unselects this CurveLegend. This is used by accessibility programs.\n                public override void Select(AccessibleSelection selection) \n                {\n                    // Uses the internal SelectChild helper function that exists\n                    // on ChartControlAccessibleObject.\n                    ChartControl.SelectChild(this, selection);\n                }\n            }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.AccessibleObject#6\">      // Inner class CurveLegendAccessibleObject represents accessible information\n      // associated with the CurveLegend object.\n   public:\n      ref class CurveLegendAccessibleObject: public AccessibleObject\n      {\n      private:\n         CurveLegend^ curveLegend;\n\n      public:\n         CurveLegendAccessibleObject( CurveLegend^ curveLegend )\n            : AccessibleObject()\n         {\n            this-&gt;curveLegend = curveLegend;\n         }\n\n\n      private:\n\n         property ChartControlAccessibleObject^ ChartControl \n         {\n\n            // Private property that helps get the reference to the parent ChartControl.\n            ChartControlAccessibleObject^ get()\n            {\n               return dynamic_cast&lt;ChartControlAccessibleObject^&gt;(Parent);\n            }\n\n         }\n\n      internal:\n\n         property int ID \n         {\n\n            // Internal helper function that returns the ID for this CurveLegend.\n            int get()\n            {\n               for ( int i = 0; i &lt; ChartControl-&gt;GetChildCount(); i++ )\n               {\n                  if ( ChartControl-&gt;GetChild( i ) == this )\n                  {\n                     return i;\n                  }\n\n               }\n               return  -1;\n            }\n\n         }\n\n      public:\n\n         property Rectangle Bounds \n         {\n\n            // Gets the Bounds for the CurveLegend. This is used by accessibility programs.\n            virtual Rectangle get() override\n            {\n               \n               // The bounds is in screen coordinates.\n               Point loc = curveLegend-&gt;Location;\n               return Rectangle(curveLegend-&gt;chart-&gt;PointToScreen( loc ),curveLegend-&gt;Size);\n            }\n\n         }\n\n         property String^ Name \n         {\n\n            // Gets or sets the Name for the CurveLegend. This is used by accessibility programs.\n            virtual String^ get() override\n            {\n               return curveLegend-&gt;Name;\n            }\n\n            virtual void set( String^ value ) override\n            {\n               curveLegend-&gt;Name = value;\n            }\n\n         }\n\n         property AccessibleObject^ Parent \n         {\n\n            // Gets the Curve Legend Parent&#39;s Accessible object.\n            // This is used by accessibility programs.\n            virtual AccessibleObject^ get() override\n            {\n               return curveLegend-&gt;chart-&gt;AccessibilityObject;\n            }\n\n         }\n\n         property System::Windows::Forms::AccessibleRole Role \n         {\n\n            // Gets the role for the CurveLegend. This is used by accessibility programs.\n            virtual System::Windows::Forms::AccessibleRole get() override\n            {\n               return ::AccessibleRole::StaticText;\n            }\n\n         }\n\n         property AccessibleStates State \n         {\n\n            // Gets the state based on the selection for the CurveLegend.\n            // This is used by accessibility programs.\n            virtual AccessibleStates get() override\n            {\n               AccessibleStates state = AccessibleStates::Selectable;\n               if ( curveLegend-&gt;Selected )\n               {\n                  state = static_cast&lt;AccessibleStates&gt;(state | AccessibleStates::Selected);\n               }\n\n               return state;\n            }\n\n         }\n\n         // Navigates through siblings of this CurveLegend. This is used by accessibility programs.\n         virtual AccessibleObject^ Navigate( AccessibleNavigation navdir ) override\n         {\n            \n            // Uses the internal NavigateFromChild helper function that exists\n            // on ChartControlAccessibleObject.\n            return ChartControl-&gt;NavigateFromChild( this, navdir );\n         }\n\n\n         // Selects or unselects this CurveLegend. This is used by accessibility programs.\n         virtual void Select( AccessibleSelection selection ) override\n         {\n            \n            // Uses the internal SelectChild helper function that exists\n            // on ChartControlAccessibleObject.\n            ChartControl-&gt;SelectChild( this, selection );\n         }\n\n      };\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_DefaultAction\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_DefaultAction_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultAction</div>        \r\n          </div>\r\n    \r\n            <p>Gets a string that describes the default action of the object. Not all objects have a default action.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string DefaultAction { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A description of the default action for an object, or <code>null</code> if this object has no default action.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.comexception\" data-linktype=\"relative-path\">COMException</a></div>\r\n                  </div>\r\n                  <p>The default action for the control cannot be retrieved.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The string describes the action that is performed on an object, not what the object does as a result. That is, a toolbar button that prints a document has a default action of &quot;Press&quot; rather than &quot;Prints the current document.&quot; Do not confuse an object&#39;s default action with its value.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Description\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Description_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Description</div>        \r\n          </div>\r\n    \r\n            <p>Gets a string that describes the visual appearance of the specified object. Not all objects have a description.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string Description { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A description of the object&#39;s visual appearance to the user, or <code>null</code> if the object does not have a description.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.comexception\" data-linktype=\"relative-path\">COMException</a></div>\r\n                  </div>\r\n                  <p>The description for the control cannot be retrieved.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property describes the object&#39;s visual appearance to the user.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Help\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Help_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Help</div>        \r\n          </div>\r\n    \r\n            <p>Gets a description of what the object does or how the object is used.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string Help { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the description of what the object does or how the object is used. Returns <code>null</code> if no help is defined.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.comexception\" data-linktype=\"relative-path\">COMException</a></div>\r\n                  </div>\r\n                  <p>The help string for the control cannot be retrieved.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_KeyboardShortcut\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_KeyboardShortcut_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">KeyboardShortcut</div>        \r\n          </div>\r\n    \r\n            <p>Gets the shortcut key or access key for the accessible object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string KeyboardShortcut { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The shortcut key or access key for the accessible object, or <code>null</code> if there is no shortcut key associated with the object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.comexception\" data-linktype=\"relative-path\">COMException</a></div>\r\n                  </div>\r\n                  <p>The shortcut for the control cannot be retrieved.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An access key, also known as a mnemonic, is an underlined character in the text of a menu, menu item, label of a button, or some other control. For example, a user can display a menu by pressing the ALT key while also pressing the indicated underlined key, such as ALT+F, to open the <code>File</code> menu. To use the access key of a menu item, the menu containing the item must be active. Controls such as toolbar buttons and menu items often have an associated shortcut key. A menu item can have both an access key and a shortcut key associated with it. If the value of the KeyboardShortcut property is a single character, you can assume it is an access key.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Name\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Name_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Name</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the object name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string Name { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The object name, or <code>null</code> if the property has not been set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.comexception\" data-linktype=\"relative-path\">COMException</a></div>\r\n                  </div>\r\n                  <p>The name of the control cannot be retrieved or set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Name property is a string used by clients to identify, find, or announce an object for the user. To access the name of a child object, you must first call <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_GetChild_\" data-linktype=\"relative-path\">GetChild</a> with the index of the child whose name you are retrieving.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the creation of an accessibility-aware chart control, using the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> and <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject\" data-linktype=\"relative-path\">Control+ControlAccessibleObject</a> classes to expose accessible information. The control plots two curves along with a legend. The <code>ChartControlAccessibleObject</code> class, which derives from <code>ControlAccessibleObject</code>, is used in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateAccessibilityInstance_\" data-linktype=\"relative-path\">CreateAccessibilityInstance</a> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the <code>ChartControlAccessibleObject</code> class overrides the <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_GetChild_\" data-linktype=\"relative-path\">GetChild</a> method to return the <code>CurveLegendAccessibleObject</code> that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  </p>\n<p> This code excerpt demonstrates overriding the Name property. See the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> class overview for the complete code example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.AccessibleObject#6\">            &#39; Inner class CurveLegendAccessibleObject represents accessible information \n            &#39; associated with the CurveLegend object.\n            Public Class CurveLegendAccessibleObject\n                Inherits AccessibleObject\n\n                Private curveLegend As CurveLegend\n                \n                Public Sub New(curveLegend As CurveLegend)\n                    Me.curveLegend = curveLegend\n                End Sub &#39;New\n                \n                &#39; Private property that helps get the reference to the parent ChartControl.                \n                Private ReadOnly Property ChartControl() As ChartControlAccessibleObject\n                    Get\n                        Return CType(Parent, ChartControlAccessibleObject)\n                    End Get\n                End Property\n\n                &#39; Friend helper function that returns the ID for this CurveLegend.                \n                Friend ReadOnly Property ID() As Integer\n                    Get\n                        Dim i As Integer\n                        For i = 0 To (ChartControl.GetChildCount()) - 1\n                            If ChartControl.GetChild(i) Is Me Then\n                                Return i\n                            End If\n                        Next i\n                        Return - 1\n                    End Get\n                End Property\n                \n                &#39; Gets the Bounds for the CurveLegend. This is used by accessibility programs.\n                Public Overrides ReadOnly Property Bounds() As Rectangle\n                    Get\n                        &#39; The bounds is in screen coordinates.\n                        Dim loc As Point = curveLegend.Location\n                        Return New Rectangle(curveLegend.chart.PointToScreen(loc), curveLegend.Size)\n                    End Get\n                End Property\n\n                &#39; Gets or sets the Name for the CurveLegend. This is used by accessibility programs.                \n                Public Overrides Property Name() As String\n                    Get\n                        Return curveLegend.Name\n                    End Get\n                    Set\n                        curveLegend.Name = value\n                    End Set\n                End Property\n                \n                &#39; Gets the Curve Legend Parent&#39;s Accessible object.\n                &#39; This is used by accessibility programs.                \n                Public Overrides ReadOnly Property Parent() As AccessibleObject\n                    Get\n                        Return curveLegend.chart.AccessibilityObject\n                    End Get\n                End Property\n                \n                &#39; Gets the role for the CurveLegend. This is used by accessibility programs.                \n                Public Overrides ReadOnly Property Role() As AccessibleRole\n                    Get\n                        Return System.Windows.Forms.AccessibleRole.StaticText\n                    End Get\n                End Property\n\n                &#39; Gets the state based on the selection for the CurveLegend. \n                &#39; This is used by accessibility programs.                \n                Public Overrides ReadOnly Property State() As AccessibleStates\n                    Get\n                        Dim stateTemp As AccessibleStates = AccessibleStates.Selectable\n                        If curveLegend.Selected Then\n                            stateTemp = stateTemp Or AccessibleStates.Selected\n                        End If\n                        Return stateTemp\n                    End Get\n                End Property\n                \n                &#39; Navigates through siblings of this CurveLegend. This is used by accessibility programs.                \n                Public Overrides Function Navigate(navdir As AccessibleNavigation) As AccessibleObject\n                    &#39; Use the Friend NavigateFromChild helper function that exists\n                    &#39; on ChartControlAccessibleObject.\n                    Return ChartControl.NavigateFromChild(Me, navdir)\n                End Function\n                \n                &#39; Selects or unselects this CurveLegend. This is used by accessibility programs.\n                Public Overrides Sub [Select](selection As AccessibleSelection)\n\n                    &#39; Use the internal SelectChild helper function that exists\n                    &#39; on ChartControlAccessibleObject.\n                    ChartControl.SelectChild(Me, selection)\n                End Sub\n\n            End Class &#39;CurveLegendAccessibleObject\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.AccessibleObject#6\">            // Inner class CurveLegendAccessibleObject represents accessible information \n            // associated with the CurveLegend object.\n            public class CurveLegendAccessibleObject : AccessibleObject\n            {\n                private CurveLegend curveLegend;\n\n                public CurveLegendAccessibleObject(CurveLegend curveLegend) : base() \n                {\n                    this.curveLegend = curveLegend;                    \n                }                \n\n                // Private property that helps get the reference to the parent ChartControl.\n                private ChartControlAccessibleObject ChartControl\n                {   \n                    get {\n                        return Parent as ChartControlAccessibleObject;\n                    }\n                }\n\n                // Internal helper function that returns the ID for this CurveLegend.\n                internal int ID\n                {\n                    get {\n                        for(int i = 0; i &lt; ChartControl.GetChildCount(); i++) {\n                            if (ChartControl.GetChild(i) == this) {\n                                return i;\n                            }\n                        }\n                        return -1;\n                    }\n                }\n\n                // Gets the Bounds for the CurveLegend. This is used by accessibility programs.\n                public override Rectangle Bounds\n                {\n                    get {                        \n                        // The bounds is in screen coordinates.\n                        Point loc = curveLegend.Location;\n                        return new Rectangle(curveLegend.chart.PointToScreen(loc), curveLegend.Size);\n                    }\n                }\n\n                // Gets or sets the Name for the CurveLegend. This is used by accessibility programs.\n                public override string Name\n                {\n                    get {\n                        return curveLegend.Name;\n                    }\n                    set {\n                        curveLegend.Name = value;                        \n                    }\n                }\n\n                // Gets the Curve Legend Parent&#39;s Accessible object.\n                // This is used by accessibility programs.\n                public override AccessibleObject Parent\n                {\n                    get {\n                        return curveLegend.chart.AccessibilityObject;\n                    }\n                }\n\n                // Gets the role for the CurveLegend. This is used by accessibility programs.\n                public override AccessibleRole Role \n                {\n                    get {\n                        return AccessibleRole.StaticText;\n                    }\n                }\n\n                // Gets the state based on the selection for the CurveLegend. \n                // This is used by accessibility programs.\n                public override AccessibleStates State \n                {\n                    get {\n                        AccessibleStates state = AccessibleStates.Selectable;\n                        if (curveLegend.Selected) \n                        {\n                            state |= AccessibleStates.Selected;\n                        }\n                        return state;\n                    }\n                }\n\n                // Navigates through siblings of this CurveLegend. This is used by accessibility programs.\n                public override AccessibleObject Navigate(AccessibleNavigation navdir) \n                {\n                    // Uses the internal NavigateFromChild helper function that exists\n                    // on ChartControlAccessibleObject.\n                    return ChartControl.NavigateFromChild(this, navdir);\n                }\n\n                // Selects or unselects this CurveLegend. This is used by accessibility programs.\n                public override void Select(AccessibleSelection selection) \n                {\n                    // Uses the internal SelectChild helper function that exists\n                    // on ChartControlAccessibleObject.\n                    ChartControl.SelectChild(this, selection);\n                }\n            }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.AccessibleObject#6\">      // Inner class CurveLegendAccessibleObject represents accessible information\n      // associated with the CurveLegend object.\n   public:\n      ref class CurveLegendAccessibleObject: public AccessibleObject\n      {\n      private:\n         CurveLegend^ curveLegend;\n\n      public:\n         CurveLegendAccessibleObject( CurveLegend^ curveLegend )\n            : AccessibleObject()\n         {\n            this-&gt;curveLegend = curveLegend;\n         }\n\n\n      private:\n\n         property ChartControlAccessibleObject^ ChartControl \n         {\n\n            // Private property that helps get the reference to the parent ChartControl.\n            ChartControlAccessibleObject^ get()\n            {\n               return dynamic_cast&lt;ChartControlAccessibleObject^&gt;(Parent);\n            }\n\n         }\n\n      internal:\n\n         property int ID \n         {\n\n            // Internal helper function that returns the ID for this CurveLegend.\n            int get()\n            {\n               for ( int i = 0; i &lt; ChartControl-&gt;GetChildCount(); i++ )\n               {\n                  if ( ChartControl-&gt;GetChild( i ) == this )\n                  {\n                     return i;\n                  }\n\n               }\n               return  -1;\n            }\n\n         }\n\n      public:\n\n         property Rectangle Bounds \n         {\n\n            // Gets the Bounds for the CurveLegend. This is used by accessibility programs.\n            virtual Rectangle get() override\n            {\n               \n               // The bounds is in screen coordinates.\n               Point loc = curveLegend-&gt;Location;\n               return Rectangle(curveLegend-&gt;chart-&gt;PointToScreen( loc ),curveLegend-&gt;Size);\n            }\n\n         }\n\n         property String^ Name \n         {\n\n            // Gets or sets the Name for the CurveLegend. This is used by accessibility programs.\n            virtual String^ get() override\n            {\n               return curveLegend-&gt;Name;\n            }\n\n            virtual void set( String^ value ) override\n            {\n               curveLegend-&gt;Name = value;\n            }\n\n         }\n\n         property AccessibleObject^ Parent \n         {\n\n            // Gets the Curve Legend Parent&#39;s Accessible object.\n            // This is used by accessibility programs.\n            virtual AccessibleObject^ get() override\n            {\n               return curveLegend-&gt;chart-&gt;AccessibilityObject;\n            }\n\n         }\n\n         property System::Windows::Forms::AccessibleRole Role \n         {\n\n            // Gets the role for the CurveLegend. This is used by accessibility programs.\n            virtual System::Windows::Forms::AccessibleRole get() override\n            {\n               return ::AccessibleRole::StaticText;\n            }\n\n         }\n\n         property AccessibleStates State \n         {\n\n            // Gets the state based on the selection for the CurveLegend.\n            // This is used by accessibility programs.\n            virtual AccessibleStates get() override\n            {\n               AccessibleStates state = AccessibleStates::Selectable;\n               if ( curveLegend-&gt;Selected )\n               {\n                  state = static_cast&lt;AccessibleStates&gt;(state | AccessibleStates::Selected);\n               }\n\n               return state;\n            }\n\n         }\n\n         // Navigates through siblings of this CurveLegend. This is used by accessibility programs.\n         virtual AccessibleObject^ Navigate( AccessibleNavigation navdir ) override\n         {\n            \n            // Uses the internal NavigateFromChild helper function that exists\n            // on ChartControlAccessibleObject.\n            return ChartControl-&gt;NavigateFromChild( this, navdir );\n         }\n\n\n         // Selects or unselects this CurveLegend. This is used by accessibility programs.\n         virtual void Select( AccessibleSelection selection ) override\n         {\n            \n            // Uses the internal SelectChild helper function that exists\n            // on ChartControlAccessibleObject.\n            ChartControl-&gt;SelectChild( this, selection );\n         }\n\n      };\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Parent\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Parent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parent</div>        \r\n          </div>\r\n    \r\n            <p>Gets the parent of an accessible object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.AccessibleObject Parent { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> that represents the parent of an accessible object, or <code>null</code> if there is no parent object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the creation of an accessibility-aware chart control, using the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> and <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject\" data-linktype=\"relative-path\">Control+ControlAccessibleObject</a> classes to expose accessible information. The control plots two curves along with a legend. The <code>ChartControlAccessibleObject</code> class, which derives from <code>ControlAccessibleObject</code>, is used in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateAccessibilityInstance_\" data-linktype=\"relative-path\">CreateAccessibilityInstance</a> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the <code>ChartControlAccessibleObject</code> class overrides the <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_GetChild_\" data-linktype=\"relative-path\">GetChild</a> method to return the <code>CurveLegendAccessibleObject</code> that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  </p>\n<p> This code excerpt demonstrates overriding the Parent property. See the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> class overview for the complete code example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.AccessibleObject#6\">            &#39; Inner class CurveLegendAccessibleObject represents accessible information \n            &#39; associated with the CurveLegend object.\n            Public Class CurveLegendAccessibleObject\n                Inherits AccessibleObject\n\n                Private curveLegend As CurveLegend\n                \n                Public Sub New(curveLegend As CurveLegend)\n                    Me.curveLegend = curveLegend\n                End Sub &#39;New\n                \n                &#39; Private property that helps get the reference to the parent ChartControl.                \n                Private ReadOnly Property ChartControl() As ChartControlAccessibleObject\n                    Get\n                        Return CType(Parent, ChartControlAccessibleObject)\n                    End Get\n                End Property\n\n                &#39; Friend helper function that returns the ID for this CurveLegend.                \n                Friend ReadOnly Property ID() As Integer\n                    Get\n                        Dim i As Integer\n                        For i = 0 To (ChartControl.GetChildCount()) - 1\n                            If ChartControl.GetChild(i) Is Me Then\n                                Return i\n                            End If\n                        Next i\n                        Return - 1\n                    End Get\n                End Property\n                \n                &#39; Gets the Bounds for the CurveLegend. This is used by accessibility programs.\n                Public Overrides ReadOnly Property Bounds() As Rectangle\n                    Get\n                        &#39; The bounds is in screen coordinates.\n                        Dim loc As Point = curveLegend.Location\n                        Return New Rectangle(curveLegend.chart.PointToScreen(loc), curveLegend.Size)\n                    End Get\n                End Property\n\n                &#39; Gets or sets the Name for the CurveLegend. This is used by accessibility programs.                \n                Public Overrides Property Name() As String\n                    Get\n                        Return curveLegend.Name\n                    End Get\n                    Set\n                        curveLegend.Name = value\n                    End Set\n                End Property\n                \n                &#39; Gets the Curve Legend Parent&#39;s Accessible object.\n                &#39; This is used by accessibility programs.                \n                Public Overrides ReadOnly Property Parent() As AccessibleObject\n                    Get\n                        Return curveLegend.chart.AccessibilityObject\n                    End Get\n                End Property\n                \n                &#39; Gets the role for the CurveLegend. This is used by accessibility programs.                \n                Public Overrides ReadOnly Property Role() As AccessibleRole\n                    Get\n                        Return System.Windows.Forms.AccessibleRole.StaticText\n                    End Get\n                End Property\n\n                &#39; Gets the state based on the selection for the CurveLegend. \n                &#39; This is used by accessibility programs.                \n                Public Overrides ReadOnly Property State() As AccessibleStates\n                    Get\n                        Dim stateTemp As AccessibleStates = AccessibleStates.Selectable\n                        If curveLegend.Selected Then\n                            stateTemp = stateTemp Or AccessibleStates.Selected\n                        End If\n                        Return stateTemp\n                    End Get\n                End Property\n                \n                &#39; Navigates through siblings of this CurveLegend. This is used by accessibility programs.                \n                Public Overrides Function Navigate(navdir As AccessibleNavigation) As AccessibleObject\n                    &#39; Use the Friend NavigateFromChild helper function that exists\n                    &#39; on ChartControlAccessibleObject.\n                    Return ChartControl.NavigateFromChild(Me, navdir)\n                End Function\n                \n                &#39; Selects or unselects this CurveLegend. This is used by accessibility programs.\n                Public Overrides Sub [Select](selection As AccessibleSelection)\n\n                    &#39; Use the internal SelectChild helper function that exists\n                    &#39; on ChartControlAccessibleObject.\n                    ChartControl.SelectChild(Me, selection)\n                End Sub\n\n            End Class &#39;CurveLegendAccessibleObject\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.AccessibleObject#6\">            // Inner class CurveLegendAccessibleObject represents accessible information \n            // associated with the CurveLegend object.\n            public class CurveLegendAccessibleObject : AccessibleObject\n            {\n                private CurveLegend curveLegend;\n\n                public CurveLegendAccessibleObject(CurveLegend curveLegend) : base() \n                {\n                    this.curveLegend = curveLegend;                    \n                }                \n\n                // Private property that helps get the reference to the parent ChartControl.\n                private ChartControlAccessibleObject ChartControl\n                {   \n                    get {\n                        return Parent as ChartControlAccessibleObject;\n                    }\n                }\n\n                // Internal helper function that returns the ID for this CurveLegend.\n                internal int ID\n                {\n                    get {\n                        for(int i = 0; i &lt; ChartControl.GetChildCount(); i++) {\n                            if (ChartControl.GetChild(i) == this) {\n                                return i;\n                            }\n                        }\n                        return -1;\n                    }\n                }\n\n                // Gets the Bounds for the CurveLegend. This is used by accessibility programs.\n                public override Rectangle Bounds\n                {\n                    get {                        \n                        // The bounds is in screen coordinates.\n                        Point loc = curveLegend.Location;\n                        return new Rectangle(curveLegend.chart.PointToScreen(loc), curveLegend.Size);\n                    }\n                }\n\n                // Gets or sets the Name for the CurveLegend. This is used by accessibility programs.\n                public override string Name\n                {\n                    get {\n                        return curveLegend.Name;\n                    }\n                    set {\n                        curveLegend.Name = value;                        \n                    }\n                }\n\n                // Gets the Curve Legend Parent&#39;s Accessible object.\n                // This is used by accessibility programs.\n                public override AccessibleObject Parent\n                {\n                    get {\n                        return curveLegend.chart.AccessibilityObject;\n                    }\n                }\n\n                // Gets the role for the CurveLegend. This is used by accessibility programs.\n                public override AccessibleRole Role \n                {\n                    get {\n                        return AccessibleRole.StaticText;\n                    }\n                }\n\n                // Gets the state based on the selection for the CurveLegend. \n                // This is used by accessibility programs.\n                public override AccessibleStates State \n                {\n                    get {\n                        AccessibleStates state = AccessibleStates.Selectable;\n                        if (curveLegend.Selected) \n                        {\n                            state |= AccessibleStates.Selected;\n                        }\n                        return state;\n                    }\n                }\n\n                // Navigates through siblings of this CurveLegend. This is used by accessibility programs.\n                public override AccessibleObject Navigate(AccessibleNavigation navdir) \n                {\n                    // Uses the internal NavigateFromChild helper function that exists\n                    // on ChartControlAccessibleObject.\n                    return ChartControl.NavigateFromChild(this, navdir);\n                }\n\n                // Selects or unselects this CurveLegend. This is used by accessibility programs.\n                public override void Select(AccessibleSelection selection) \n                {\n                    // Uses the internal SelectChild helper function that exists\n                    // on ChartControlAccessibleObject.\n                    ChartControl.SelectChild(this, selection);\n                }\n            }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.AccessibleObject#6\">      // Inner class CurveLegendAccessibleObject represents accessible information\n      // associated with the CurveLegend object.\n   public:\n      ref class CurveLegendAccessibleObject: public AccessibleObject\n      {\n      private:\n         CurveLegend^ curveLegend;\n\n      public:\n         CurveLegendAccessibleObject( CurveLegend^ curveLegend )\n            : AccessibleObject()\n         {\n            this-&gt;curveLegend = curveLegend;\n         }\n\n\n      private:\n\n         property ChartControlAccessibleObject^ ChartControl \n         {\n\n            // Private property that helps get the reference to the parent ChartControl.\n            ChartControlAccessibleObject^ get()\n            {\n               return dynamic_cast&lt;ChartControlAccessibleObject^&gt;(Parent);\n            }\n\n         }\n\n      internal:\n\n         property int ID \n         {\n\n            // Internal helper function that returns the ID for this CurveLegend.\n            int get()\n            {\n               for ( int i = 0; i &lt; ChartControl-&gt;GetChildCount(); i++ )\n               {\n                  if ( ChartControl-&gt;GetChild( i ) == this )\n                  {\n                     return i;\n                  }\n\n               }\n               return  -1;\n            }\n\n         }\n\n      public:\n\n         property Rectangle Bounds \n         {\n\n            // Gets the Bounds for the CurveLegend. This is used by accessibility programs.\n            virtual Rectangle get() override\n            {\n               \n               // The bounds is in screen coordinates.\n               Point loc = curveLegend-&gt;Location;\n               return Rectangle(curveLegend-&gt;chart-&gt;PointToScreen( loc ),curveLegend-&gt;Size);\n            }\n\n         }\n\n         property String^ Name \n         {\n\n            // Gets or sets the Name for the CurveLegend. This is used by accessibility programs.\n            virtual String^ get() override\n            {\n               return curveLegend-&gt;Name;\n            }\n\n            virtual void set( String^ value ) override\n            {\n               curveLegend-&gt;Name = value;\n            }\n\n         }\n\n         property AccessibleObject^ Parent \n         {\n\n            // Gets the Curve Legend Parent&#39;s Accessible object.\n            // This is used by accessibility programs.\n            virtual AccessibleObject^ get() override\n            {\n               return curveLegend-&gt;chart-&gt;AccessibilityObject;\n            }\n\n         }\n\n         property System::Windows::Forms::AccessibleRole Role \n         {\n\n            // Gets the role for the CurveLegend. This is used by accessibility programs.\n            virtual System::Windows::Forms::AccessibleRole get() override\n            {\n               return ::AccessibleRole::StaticText;\n            }\n\n         }\n\n         property AccessibleStates State \n         {\n\n            // Gets the state based on the selection for the CurveLegend.\n            // This is used by accessibility programs.\n            virtual AccessibleStates get() override\n            {\n               AccessibleStates state = AccessibleStates::Selectable;\n               if ( curveLegend-&gt;Selected )\n               {\n                  state = static_cast&lt;AccessibleStates&gt;(state | AccessibleStates::Selected);\n               }\n\n               return state;\n            }\n\n         }\n\n         // Navigates through siblings of this CurveLegend. This is used by accessibility programs.\n         virtual AccessibleObject^ Navigate( AccessibleNavigation navdir ) override\n         {\n            \n            // Uses the internal NavigateFromChild helper function that exists\n            // on ChartControlAccessibleObject.\n            return ChartControl-&gt;NavigateFromChild( this, navdir );\n         }\n\n\n         // Selects or unselects this CurveLegend. This is used by accessibility programs.\n         virtual void Select( AccessibleSelection selection ) override\n         {\n            \n            // Uses the internal SelectChild helper function that exists\n            // on ChartControlAccessibleObject.\n            ChartControl-&gt;SelectChild( this, selection );\n         }\n\n      };\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Role\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Role_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Role</div>        \r\n          </div>\r\n    \r\n            <p>Gets the role of this accessible object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.AccessibleRole Role { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessiblerole\" data-linktype=\"relative-path\">AccessibleRole</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.accessiblerole\" data-linktype=\"relative-path\">AccessibleRole</a> values, or <a class=\"xref\" href=\"system.windows.forms.accessiblerole\" data-linktype=\"relative-path\">AccessibleRole</a> if no role has been specified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The role of the object helps describe the function of the object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the creation of an accessibility-aware chart control, using the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> and <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject\" data-linktype=\"relative-path\">Control+ControlAccessibleObject</a> classes to expose accessible information. The control plots two curves along with a legend. The <code>ChartControlAccessibleObject</code> class, which derives from <code>ControlAccessibleObject</code>, is used in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateAccessibilityInstance_\" data-linktype=\"relative-path\">CreateAccessibilityInstance</a> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the <code>ChartControlAccessibleObject</code> class overrides the <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_GetChild_\" data-linktype=\"relative-path\">GetChild</a> method to return the <code>CurveLegendAccessibleObject</code> that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  </p>\n<p> This code excerpt demonstrates overriding the Role property. See the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> class overview for the complete code example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.AccessibleObject#4\">        &#39; Inner Class ChartControlAccessibleObject represents accessible information \n        &#39; associated with the ChartControl.\n        &#39; The ChartControlAccessibleObject is returned in the         &#39; ChartControl.CreateAccessibilityInstance override.\n        Public Class ChartControlAccessibleObject\n            Inherits Control.ControlAccessibleObject\n\n            Private chartControl As ChartControl\n            \n            Public Sub New(ctrl As ChartControl)\n                MyBase.New(ctrl)\n                chartControl = ctrl\n            End Sub &#39;New\n            \n            &#39; Get the role for the Chart. This is used by accessibility programs.            \n            Public Overrides ReadOnly Property Role() As AccessibleRole\n                Get\n                    Return System.Windows.Forms.AccessibleRole.Chart\n                End Get\n            End Property\n            \n            &#39; Get the state for the Chart. This is used by accessibility programs.            \n            Public Overrides ReadOnly Property State() As AccessibleStates\n                Get\n                    Return AccessibleStates.ReadOnly\n                End Get\n            End Property                        \n            \n            &#39; The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so \n            &#39; return the number of ChartLengend objects.            \n            Public Overrides Function GetChildCount() As Integer\n                Return chartControl.Legends.Length\n            End Function \n            \n            &#39; Get the Accessibility object of the child CurveLegend idetified by index.\n            Public Overrides Function GetChild(index As Integer) As AccessibleObject\n                If index &gt;= 0 And index &lt; chartControl.Legends.Length Then\n                    Return chartControl.Legends(index).AccessibilityObject\n                End If\n                Return Nothing\n            End Function \n            \n            &#39; Helper function that is used by the CurveLegend&#39;s accessibility object\n            &#39; to navigate between sibiling controls. Specifically, this function is used in\n            &#39; the CurveLegend.CurveLegendAccessibleObject.Navigate function.\n            Friend Function NavigateFromChild(child As CurveLegend.CurveLegendAccessibleObject, _\n                                            navdir As AccessibleNavigation) As AccessibleObject\n                Select Case navdir\n                    Case AccessibleNavigation.Down, AccessibleNavigation.Next\n                            Return GetChild(child.ID + 1)\n                    \n                    Case AccessibleNavigation.Up, AccessibleNavigation.Previous\n                            Return GetChild(child.ID - 1)\n                End Select\n                Return Nothing\n            End Function            \n\n            &#39; Helper function that is used by the CurveLegend&#39;s accessibility object\n            &#39; to select a specific CurveLegend control. Specifically, this function is used \n            &#39; in the CurveLegend.CurveLegendAccessibleObject.Select function.            \n            Friend Sub SelectChild(child As CurveLegend.CurveLegendAccessibleObject, selection As AccessibleSelection)\n                Dim childID As Integer = child.ID\n                \n                &#39; Determine which selection action should occur, based on the\n                &#39; AccessibleSelection value.\n                If (selection And AccessibleSelection.TakeSelection) &lt;&gt; 0 Then\n                    Dim i As Integer\n                    For i = 0 To chartControl.Legends.Length - 1\n                        If i = childID Then\n                            chartControl.Legends(i).Selected = True\n                        Else\n                            chartControl.Legends(i).Selected = False\n                        End If\n                    Next i\n                    \n                    &#39; AccessibleSelection.AddSelection means that the CurveLegend will be selected.\n                    If (selection And AccessibleSelection.AddSelection) &lt;&gt; 0 Then\n                        chartControl.Legends(childID).Selected = True\n                    End If\n\n                    &#39; AccessibleSelection.AddSelection means that the CurveLegend will be unselected.                    \n                    If (selection And AccessibleSelection.RemoveSelection) &lt;&gt; 0 Then\n                        chartControl.Legends(childID).Selected = False\n                    End If\n                End If\n            End Sub &#39;SelectChild\n        End Class &#39;ChartControlAccessibleObject\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.AccessibleObject#4\">        // Inner class ChartControlAccessibleObject represents accessible information associated with the ChartControl.\n        // The ChartControlAccessibleObject is returned in the ChartControl.CreateAccessibilityInstance override.\n        public class ChartControlAccessibleObject : ControlAccessibleObject\n        {\n            ChartControl chartControl;\n\n            public ChartControlAccessibleObject(ChartControl ctrl) : base(ctrl) \n            {\n                chartControl = ctrl;\n            }\n\n            // Gets the role for the Chart. This is used by accessibility programs.\n            public override AccessibleRole Role\n            {  \n                get {\n                    return AccessibleRole.Chart;\n                }\n            }\n\n            // Gets the state for the Chart. This is used by accessibility programs.\n            public override AccessibleStates State\n            {  \n                get {                    \n                    return AccessibleStates.ReadOnly;\n                }\n            }\n\n            // The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so \n            // return the number of ChartLengend objects.\n            public override int GetChildCount()\n            {  \n                return chartControl.Legends.Length;\n            }\n\n            // Gets the Accessibility object of the child CurveLegend idetified by index.\n            public override AccessibleObject GetChild(int index)\n            {  \n                if (index &gt;= 0 &amp;&amp; index &lt; chartControl.Legends.Length) {\n                    return chartControl.Legends[index].AccessibilityObject;\n                }                \n                return null;\n            }\n\n            // Helper function that is used by the CurveLegend&#39;s accessibility object\n            // to navigate between sibiling controls. Specifically, this function is used in\n            // the CurveLegend.CurveLegendAccessibleObject.Navigate function.\n            internal AccessibleObject NavigateFromChild(CurveLegend.CurveLegendAccessibleObject child, \n                                                        AccessibleNavigation navdir) \n            {  \n                switch(navdir) {\n                    case AccessibleNavigation.Down:\n                    case AccessibleNavigation.Next:\n                        return GetChild(child.ID + 1);\n                        \n                    case AccessibleNavigation.Up:\n                    case AccessibleNavigation.Previous:\n                        return GetChild(child.ID - 1);                        \n                }\n                return null;\n            }\n\n            // Helper function that is used by the CurveLegend&#39;s accessibility object\n            // to select a specific CurveLegend control. Specifically, this function is used\n            // in the CurveLegend.CurveLegendAccessibleObject.Select function.\n            internal void SelectChild(CurveLegend.CurveLegendAccessibleObject child, AccessibleSelection selection) \n            {   \n                int childID = child.ID;\n\n                // Determine which selection action should occur, based on the\n                // AccessibleSelection value.\n                if ((selection &amp; AccessibleSelection.TakeSelection) != 0) {\n                    for(int i = 0; i &lt; chartControl.Legends.Length; i++) {\n                        if (i == childID) {\n                            chartControl.Legends[i].Selected = true;                        \n                        } else {\n                            chartControl.Legends[i].Selected = false;\n                        }\n                    }\n\n                    // AccessibleSelection.AddSelection means that the CurveLegend will be selected.\n                    if ((selection &amp; AccessibleSelection.AddSelection) != 0) {\n                        chartControl.Legends[childID].Selected = true;                        \n                    }\n\n                    // AccessibleSelection.AddSelection means that the CurveLegend will be unselected.\n                    if ((selection &amp; AccessibleSelection.RemoveSelection) != 0) {\n                        chartControl.Legends[childID].Selected = false;                        \n                    }\n                }            \n            }\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.AccessibleObject#4\">   // Inner class ChartControlAccessibleObject represents accessible information associated with the ChartControl.\n   // The ChartControlAccessibleObject is returned in the ChartControl::CreateAccessibilityInstance .\n   ref class ChartControlAccessibleObject: public ControlAccessibleObject\n   {\n   private:\n      ChartControl^ chartControl;\n\n   public:\n      ChartControlAccessibleObject( ChartControl^ ctrl )\n         : ControlAccessibleObject( ctrl )\n      {\n         chartControl = ctrl;\n      }\n\n\n      property System::Windows::Forms::AccessibleRole Role \n      {\n\n         // Gets the role for the Chart. This is used by accessibility programs.\n         virtual System::Windows::Forms::AccessibleRole get() override\n         {\n            return ::AccessibleRole::Chart;\n         }\n\n      }\n\n      property AccessibleStates State \n      {\n\n         // Gets the state for the Chart. This is used by accessibility programs.\n         virtual AccessibleStates get() override\n         {\n            return AccessibleStates::ReadOnly;\n         }\n\n      }\n\n      // The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so\n      // return the number of ChartLengend objects.\n      virtual int GetChildCount() override\n      {\n         return chartControl-&gt;Legends-&gt;Length;\n      }\n\n\n      // Gets the Accessibility object of the child CurveLegend idetified by index.\n      virtual AccessibleObject^ GetChild( int index ) override\n      {\n         if ( index &gt;= 0 &amp;&amp; index &lt; chartControl-&gt;Legends-&gt;Length )\n         {\n            return chartControl-&gt;Legends[ index ]-&gt;AccessibilityObject;\n         }\n\n         return nullptr;\n      }\n\n\n   internal:\n\n      // Helper function that is used by the CurveLegend&#39;s accessibility object\n      // to navigate between sibiling controls. Specifically, this function is used in\n      // the CurveLegend::CurveLegendAccessibleObject.Navigate function.\n      AccessibleObject^ NavigateFromChild( CurveLegend::CurveLegendAccessibleObject^ child, AccessibleNavigation navdir )\n      {\n         switch ( navdir )\n         {\n            case AccessibleNavigation::Down:\n            case AccessibleNavigation::Next:\n               return GetChild( child-&gt;ID + 1 );\n\n            case AccessibleNavigation::Up:\n            case AccessibleNavigation::Previous:\n               return GetChild( child-&gt;ID - 1 );\n         }\n         return nullptr;\n      }\n\n\n      // Helper function that is used by the CurveLegend&#39;s accessibility object\n      // to select a specific CurveLegend control. Specifically, this function is used\n      // in the CurveLegend::CurveLegendAccessibleObject.Select function.\n      void SelectChild( CurveLegend::CurveLegendAccessibleObject^ child, AccessibleSelection selection )\n      {\n         int childID = child-&gt;ID;\n         \n         // Determine which selection action should occur, based on the\n         // AccessibleSelection value.\n         if ( (selection &amp; AccessibleSelection::TakeSelection) != (AccessibleSelection)0 )\n         {\n            for ( int i = 0; i &lt; chartControl-&gt;Legends-&gt;Length; i++ )\n            {\n               if ( i == childID )\n               {\n                  chartControl-&gt;Legends[ i ]-&gt;Selected = true;\n               }\n               else\n               {\n                  chartControl-&gt;Legends[ i ]-&gt;Selected = false;\n               }\n\n            }\n            \n            // AccessibleSelection-&gt;AddSelection means that the CurveLegend will be selected.\n            if ( (selection &amp; AccessibleSelection::AddSelection) != (AccessibleSelection)0 )\n            {\n               chartControl-&gt;Legends[ childID ]-&gt;Selected = true;\n            }\n            \n            // AccessibleSelection-&gt;AddSelection means that the CurveLegend will be unselected.\n            if ( (selection &amp; AccessibleSelection::RemoveSelection) != (AccessibleSelection)0 )\n            {\n               chartControl-&gt;Legends[ childID ]-&gt;Selected = false;\n            }\n         }\n      }\n\n   };\n\n   // class ChartControlAccessibleObject\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_State\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_State_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">State</div>        \r\n          </div>\r\n    \r\n            <p>Gets the state of this accessible object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.AccessibleStates State { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessiblestates\" data-linktype=\"relative-path\">AccessibleStates</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.accessiblestates\" data-linktype=\"relative-path\">AccessibleStates</a> values, or <a class=\"xref\" href=\"system.windows.forms.accessiblestates\" data-linktype=\"relative-path\">AccessibleStates</a>, if no state has been set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the creation of an accessibility-aware chart control, using the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> and <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject\" data-linktype=\"relative-path\">Control+ControlAccessibleObject</a> classes to expose accessible information. The control plots two curves along with a legend. The <code>ChartControlAccessibleObject</code> class, which derives from <code>ControlAccessibleObject</code>, is used in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateAccessibilityInstance_\" data-linktype=\"relative-path\">CreateAccessibilityInstance</a> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the <code>ChartControlAccessibleObject</code> class overrides the <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_GetChild_\" data-linktype=\"relative-path\">GetChild</a> method to return the <code>CurveLegendAccessibleObject</code> that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  </p>\n<p> This code excerpt demonstrates overriding the State property. See the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> class overview for the complete code example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.AccessibleObject#4\">        &#39; Inner Class ChartControlAccessibleObject represents accessible information \n        &#39; associated with the ChartControl.\n        &#39; The ChartControlAccessibleObject is returned in the         &#39; ChartControl.CreateAccessibilityInstance override.\n        Public Class ChartControlAccessibleObject\n            Inherits Control.ControlAccessibleObject\n\n            Private chartControl As ChartControl\n            \n            Public Sub New(ctrl As ChartControl)\n                MyBase.New(ctrl)\n                chartControl = ctrl\n            End Sub &#39;New\n            \n            &#39; Get the role for the Chart. This is used by accessibility programs.            \n            Public Overrides ReadOnly Property Role() As AccessibleRole\n                Get\n                    Return System.Windows.Forms.AccessibleRole.Chart\n                End Get\n            End Property\n            \n            &#39; Get the state for the Chart. This is used by accessibility programs.            \n            Public Overrides ReadOnly Property State() As AccessibleStates\n                Get\n                    Return AccessibleStates.ReadOnly\n                End Get\n            End Property                        \n            \n            &#39; The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so \n            &#39; return the number of ChartLengend objects.            \n            Public Overrides Function GetChildCount() As Integer\n                Return chartControl.Legends.Length\n            End Function \n            \n            &#39; Get the Accessibility object of the child CurveLegend idetified by index.\n            Public Overrides Function GetChild(index As Integer) As AccessibleObject\n                If index &gt;= 0 And index &lt; chartControl.Legends.Length Then\n                    Return chartControl.Legends(index).AccessibilityObject\n                End If\n                Return Nothing\n            End Function \n            \n            &#39; Helper function that is used by the CurveLegend&#39;s accessibility object\n            &#39; to navigate between sibiling controls. Specifically, this function is used in\n            &#39; the CurveLegend.CurveLegendAccessibleObject.Navigate function.\n            Friend Function NavigateFromChild(child As CurveLegend.CurveLegendAccessibleObject, _\n                                            navdir As AccessibleNavigation) As AccessibleObject\n                Select Case navdir\n                    Case AccessibleNavigation.Down, AccessibleNavigation.Next\n                            Return GetChild(child.ID + 1)\n                    \n                    Case AccessibleNavigation.Up, AccessibleNavigation.Previous\n                            Return GetChild(child.ID - 1)\n                End Select\n                Return Nothing\n            End Function            \n\n            &#39; Helper function that is used by the CurveLegend&#39;s accessibility object\n            &#39; to select a specific CurveLegend control. Specifically, this function is used \n            &#39; in the CurveLegend.CurveLegendAccessibleObject.Select function.            \n            Friend Sub SelectChild(child As CurveLegend.CurveLegendAccessibleObject, selection As AccessibleSelection)\n                Dim childID As Integer = child.ID\n                \n                &#39; Determine which selection action should occur, based on the\n                &#39; AccessibleSelection value.\n                If (selection And AccessibleSelection.TakeSelection) &lt;&gt; 0 Then\n                    Dim i As Integer\n                    For i = 0 To chartControl.Legends.Length - 1\n                        If i = childID Then\n                            chartControl.Legends(i).Selected = True\n                        Else\n                            chartControl.Legends(i).Selected = False\n                        End If\n                    Next i\n                    \n                    &#39; AccessibleSelection.AddSelection means that the CurveLegend will be selected.\n                    If (selection And AccessibleSelection.AddSelection) &lt;&gt; 0 Then\n                        chartControl.Legends(childID).Selected = True\n                    End If\n\n                    &#39; AccessibleSelection.AddSelection means that the CurveLegend will be unselected.                    \n                    If (selection And AccessibleSelection.RemoveSelection) &lt;&gt; 0 Then\n                        chartControl.Legends(childID).Selected = False\n                    End If\n                End If\n            End Sub &#39;SelectChild\n        End Class &#39;ChartControlAccessibleObject\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.AccessibleObject#4\">        // Inner class ChartControlAccessibleObject represents accessible information associated with the ChartControl.\n        // The ChartControlAccessibleObject is returned in the ChartControl.CreateAccessibilityInstance override.\n        public class ChartControlAccessibleObject : ControlAccessibleObject\n        {\n            ChartControl chartControl;\n\n            public ChartControlAccessibleObject(ChartControl ctrl) : base(ctrl) \n            {\n                chartControl = ctrl;\n            }\n\n            // Gets the role for the Chart. This is used by accessibility programs.\n            public override AccessibleRole Role\n            {  \n                get {\n                    return AccessibleRole.Chart;\n                }\n            }\n\n            // Gets the state for the Chart. This is used by accessibility programs.\n            public override AccessibleStates State\n            {  \n                get {                    \n                    return AccessibleStates.ReadOnly;\n                }\n            }\n\n            // The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so \n            // return the number of ChartLengend objects.\n            public override int GetChildCount()\n            {  \n                return chartControl.Legends.Length;\n            }\n\n            // Gets the Accessibility object of the child CurveLegend idetified by index.\n            public override AccessibleObject GetChild(int index)\n            {  \n                if (index &gt;= 0 &amp;&amp; index &lt; chartControl.Legends.Length) {\n                    return chartControl.Legends[index].AccessibilityObject;\n                }                \n                return null;\n            }\n\n            // Helper function that is used by the CurveLegend&#39;s accessibility object\n            // to navigate between sibiling controls. Specifically, this function is used in\n            // the CurveLegend.CurveLegendAccessibleObject.Navigate function.\n            internal AccessibleObject NavigateFromChild(CurveLegend.CurveLegendAccessibleObject child, \n                                                        AccessibleNavigation navdir) \n            {  \n                switch(navdir) {\n                    case AccessibleNavigation.Down:\n                    case AccessibleNavigation.Next:\n                        return GetChild(child.ID + 1);\n                        \n                    case AccessibleNavigation.Up:\n                    case AccessibleNavigation.Previous:\n                        return GetChild(child.ID - 1);                        \n                }\n                return null;\n            }\n\n            // Helper function that is used by the CurveLegend&#39;s accessibility object\n            // to select a specific CurveLegend control. Specifically, this function is used\n            // in the CurveLegend.CurveLegendAccessibleObject.Select function.\n            internal void SelectChild(CurveLegend.CurveLegendAccessibleObject child, AccessibleSelection selection) \n            {   \n                int childID = child.ID;\n\n                // Determine which selection action should occur, based on the\n                // AccessibleSelection value.\n                if ((selection &amp; AccessibleSelection.TakeSelection) != 0) {\n                    for(int i = 0; i &lt; chartControl.Legends.Length; i++) {\n                        if (i == childID) {\n                            chartControl.Legends[i].Selected = true;                        \n                        } else {\n                            chartControl.Legends[i].Selected = false;\n                        }\n                    }\n\n                    // AccessibleSelection.AddSelection means that the CurveLegend will be selected.\n                    if ((selection &amp; AccessibleSelection.AddSelection) != 0) {\n                        chartControl.Legends[childID].Selected = true;                        \n                    }\n\n                    // AccessibleSelection.AddSelection means that the CurveLegend will be unselected.\n                    if ((selection &amp; AccessibleSelection.RemoveSelection) != 0) {\n                        chartControl.Legends[childID].Selected = false;                        \n                    }\n                }            \n            }\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.AccessibleObject#4\">   // Inner class ChartControlAccessibleObject represents accessible information associated with the ChartControl.\n   // The ChartControlAccessibleObject is returned in the ChartControl::CreateAccessibilityInstance .\n   ref class ChartControlAccessibleObject: public ControlAccessibleObject\n   {\n   private:\n      ChartControl^ chartControl;\n\n   public:\n      ChartControlAccessibleObject( ChartControl^ ctrl )\n         : ControlAccessibleObject( ctrl )\n      {\n         chartControl = ctrl;\n      }\n\n\n      property System::Windows::Forms::AccessibleRole Role \n      {\n\n         // Gets the role for the Chart. This is used by accessibility programs.\n         virtual System::Windows::Forms::AccessibleRole get() override\n         {\n            return ::AccessibleRole::Chart;\n         }\n\n      }\n\n      property AccessibleStates State \n      {\n\n         // Gets the state for the Chart. This is used by accessibility programs.\n         virtual AccessibleStates get() override\n         {\n            return AccessibleStates::ReadOnly;\n         }\n\n      }\n\n      // The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so\n      // return the number of ChartLengend objects.\n      virtual int GetChildCount() override\n      {\n         return chartControl-&gt;Legends-&gt;Length;\n      }\n\n\n      // Gets the Accessibility object of the child CurveLegend idetified by index.\n      virtual AccessibleObject^ GetChild( int index ) override\n      {\n         if ( index &gt;= 0 &amp;&amp; index &lt; chartControl-&gt;Legends-&gt;Length )\n         {\n            return chartControl-&gt;Legends[ index ]-&gt;AccessibilityObject;\n         }\n\n         return nullptr;\n      }\n\n\n   internal:\n\n      // Helper function that is used by the CurveLegend&#39;s accessibility object\n      // to navigate between sibiling controls. Specifically, this function is used in\n      // the CurveLegend::CurveLegendAccessibleObject.Navigate function.\n      AccessibleObject^ NavigateFromChild( CurveLegend::CurveLegendAccessibleObject^ child, AccessibleNavigation navdir )\n      {\n         switch ( navdir )\n         {\n            case AccessibleNavigation::Down:\n            case AccessibleNavigation::Next:\n               return GetChild( child-&gt;ID + 1 );\n\n            case AccessibleNavigation::Up:\n            case AccessibleNavigation::Previous:\n               return GetChild( child-&gt;ID - 1 );\n         }\n         return nullptr;\n      }\n\n\n      // Helper function that is used by the CurveLegend&#39;s accessibility object\n      // to select a specific CurveLegend control. Specifically, this function is used\n      // in the CurveLegend::CurveLegendAccessibleObject.Select function.\n      void SelectChild( CurveLegend::CurveLegendAccessibleObject^ child, AccessibleSelection selection )\n      {\n         int childID = child-&gt;ID;\n         \n         // Determine which selection action should occur, based on the\n         // AccessibleSelection value.\n         if ( (selection &amp; AccessibleSelection::TakeSelection) != (AccessibleSelection)0 )\n         {\n            for ( int i = 0; i &lt; chartControl-&gt;Legends-&gt;Length; i++ )\n            {\n               if ( i == childID )\n               {\n                  chartControl-&gt;Legends[ i ]-&gt;Selected = true;\n               }\n               else\n               {\n                  chartControl-&gt;Legends[ i ]-&gt;Selected = false;\n               }\n\n            }\n            \n            // AccessibleSelection-&gt;AddSelection means that the CurveLegend will be selected.\n            if ( (selection &amp; AccessibleSelection::AddSelection) != (AccessibleSelection)0 )\n            {\n               chartControl-&gt;Legends[ childID ]-&gt;Selected = true;\n            }\n            \n            // AccessibleSelection-&gt;AddSelection means that the CurveLegend will be unselected.\n            if ( (selection &amp; AccessibleSelection::RemoveSelection) != (AccessibleSelection)0 )\n            {\n               chartControl-&gt;Legends[ childID ]-&gt;Selected = false;\n            }\n         }\n      }\n\n   };\n\n   // class ChartControlAccessibleObject\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Value\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Value_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Value</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the value of an accessible object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual string Value { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The value of an accessible object, or <code>null</code> if the object has no value set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.comexception\" data-linktype=\"relative-path\">COMException</a></div>\r\n                  </div>\r\n                  <p>The value cannot be set or retrieved.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, the Value property represents visual information contained by the object. Not all objects support the Value property.  </p>\n<p> In most cases, the Value property is used to tell the client about what visual information an object contains. For example, the value for an edit control is the text it contains, but a menu item has no value.  </p>\n<p> The Value property can provide hierarchical information in cases such as a tree view control. Although the parent object in the tree view control does not provide information in the Value property, each item within the control has a zero-based value that represents its level within the hierarchy. Top-level items have a value of zero, second-level items have a value of one, and so on.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The values returned from scroll bar and trackbar accessible objects indicate percentages, so they are integers between 0 and 100, inclusive.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_DoDefaultAction\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_DoDefaultAction_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DoDefaultAction()</div>        \r\n          </div>\r\n    \r\n            <p>Performs the default action associated with this accessible object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void DoDefaultAction ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.comexception\" data-linktype=\"relative-path\">COMException</a></div>\r\n                  </div>\r\n                  <p>The default action for the control cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Clients can retrieve the object&#39;s default action by inspecting an object&#39;s <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_DefaultAction_\" data-linktype=\"relative-path\">DefaultAction</a> property. A client can use automation (if supported) instead of DoDefaultAction to perform an object&#39;s default action. However, DoDefaultAction provides an easy way to perform an object&#39;s most commonly used action.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_GetChild_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_GetChild_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetChild(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the accessible child corresponding to the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.AccessibleObject GetChild (int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the accessible child.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> that represents the accessible child corresponding to the specified index.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the creation of an accessibility-aware chart control, using the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> and <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject\" data-linktype=\"relative-path\">Control+ControlAccessibleObject</a> classes to expose accessible information. The control plots two curves along with a legend. The <code>ChartControlAccessibleObject</code> class, which derives from <code>ControlAccessibleObject</code>, is used in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateAccessibilityInstance_\" data-linktype=\"relative-path\">CreateAccessibilityInstance</a> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the <code>ChartControlAccessibleObject</code> class overrides the GetChild method to return the <code>CurveLegendAccessibleObject</code> that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  </p>\n<p> This code excerpt demonstrates overriding the GetChild method. See the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> class overview for the complete code example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.AccessibleObject#4\">        &#39; Inner Class ChartControlAccessibleObject represents accessible information \n        &#39; associated with the ChartControl.\n        &#39; The ChartControlAccessibleObject is returned in the         &#39; ChartControl.CreateAccessibilityInstance override.\n        Public Class ChartControlAccessibleObject\n            Inherits Control.ControlAccessibleObject\n\n            Private chartControl As ChartControl\n            \n            Public Sub New(ctrl As ChartControl)\n                MyBase.New(ctrl)\n                chartControl = ctrl\n            End Sub &#39;New\n            \n            &#39; Get the role for the Chart. This is used by accessibility programs.            \n            Public Overrides ReadOnly Property Role() As AccessibleRole\n                Get\n                    Return System.Windows.Forms.AccessibleRole.Chart\n                End Get\n            End Property\n            \n            &#39; Get the state for the Chart. This is used by accessibility programs.            \n            Public Overrides ReadOnly Property State() As AccessibleStates\n                Get\n                    Return AccessibleStates.ReadOnly\n                End Get\n            End Property                        \n            \n            &#39; The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so \n            &#39; return the number of ChartLengend objects.            \n            Public Overrides Function GetChildCount() As Integer\n                Return chartControl.Legends.Length\n            End Function \n            \n            &#39; Get the Accessibility object of the child CurveLegend idetified by index.\n            Public Overrides Function GetChild(index As Integer) As AccessibleObject\n                If index &gt;= 0 And index &lt; chartControl.Legends.Length Then\n                    Return chartControl.Legends(index).AccessibilityObject\n                End If\n                Return Nothing\n            End Function \n            \n            &#39; Helper function that is used by the CurveLegend&#39;s accessibility object\n            &#39; to navigate between sibiling controls. Specifically, this function is used in\n            &#39; the CurveLegend.CurveLegendAccessibleObject.Navigate function.\n            Friend Function NavigateFromChild(child As CurveLegend.CurveLegendAccessibleObject, _\n                                            navdir As AccessibleNavigation) As AccessibleObject\n                Select Case navdir\n                    Case AccessibleNavigation.Down, AccessibleNavigation.Next\n                            Return GetChild(child.ID + 1)\n                    \n                    Case AccessibleNavigation.Up, AccessibleNavigation.Previous\n                            Return GetChild(child.ID - 1)\n                End Select\n                Return Nothing\n            End Function            \n\n            &#39; Helper function that is used by the CurveLegend&#39;s accessibility object\n            &#39; to select a specific CurveLegend control. Specifically, this function is used \n            &#39; in the CurveLegend.CurveLegendAccessibleObject.Select function.            \n            Friend Sub SelectChild(child As CurveLegend.CurveLegendAccessibleObject, selection As AccessibleSelection)\n                Dim childID As Integer = child.ID\n                \n                &#39; Determine which selection action should occur, based on the\n                &#39; AccessibleSelection value.\n                If (selection And AccessibleSelection.TakeSelection) &lt;&gt; 0 Then\n                    Dim i As Integer\n                    For i = 0 To chartControl.Legends.Length - 1\n                        If i = childID Then\n                            chartControl.Legends(i).Selected = True\n                        Else\n                            chartControl.Legends(i).Selected = False\n                        End If\n                    Next i\n                    \n                    &#39; AccessibleSelection.AddSelection means that the CurveLegend will be selected.\n                    If (selection And AccessibleSelection.AddSelection) &lt;&gt; 0 Then\n                        chartControl.Legends(childID).Selected = True\n                    End If\n\n                    &#39; AccessibleSelection.AddSelection means that the CurveLegend will be unselected.                    \n                    If (selection And AccessibleSelection.RemoveSelection) &lt;&gt; 0 Then\n                        chartControl.Legends(childID).Selected = False\n                    End If\n                End If\n            End Sub &#39;SelectChild\n        End Class &#39;ChartControlAccessibleObject\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.AccessibleObject#4\">        // Inner class ChartControlAccessibleObject represents accessible information associated with the ChartControl.\n        // The ChartControlAccessibleObject is returned in the ChartControl.CreateAccessibilityInstance override.\n        public class ChartControlAccessibleObject : ControlAccessibleObject\n        {\n            ChartControl chartControl;\n\n            public ChartControlAccessibleObject(ChartControl ctrl) : base(ctrl) \n            {\n                chartControl = ctrl;\n            }\n\n            // Gets the role for the Chart. This is used by accessibility programs.\n            public override AccessibleRole Role\n            {  \n                get {\n                    return AccessibleRole.Chart;\n                }\n            }\n\n            // Gets the state for the Chart. This is used by accessibility programs.\n            public override AccessibleStates State\n            {  \n                get {                    \n                    return AccessibleStates.ReadOnly;\n                }\n            }\n\n            // The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so \n            // return the number of ChartLengend objects.\n            public override int GetChildCount()\n            {  \n                return chartControl.Legends.Length;\n            }\n\n            // Gets the Accessibility object of the child CurveLegend idetified by index.\n            public override AccessibleObject GetChild(int index)\n            {  \n                if (index &gt;= 0 &amp;&amp; index &lt; chartControl.Legends.Length) {\n                    return chartControl.Legends[index].AccessibilityObject;\n                }                \n                return null;\n            }\n\n            // Helper function that is used by the CurveLegend&#39;s accessibility object\n            // to navigate between sibiling controls. Specifically, this function is used in\n            // the CurveLegend.CurveLegendAccessibleObject.Navigate function.\n            internal AccessibleObject NavigateFromChild(CurveLegend.CurveLegendAccessibleObject child, \n                                                        AccessibleNavigation navdir) \n            {  \n                switch(navdir) {\n                    case AccessibleNavigation.Down:\n                    case AccessibleNavigation.Next:\n                        return GetChild(child.ID + 1);\n                        \n                    case AccessibleNavigation.Up:\n                    case AccessibleNavigation.Previous:\n                        return GetChild(child.ID - 1);                        \n                }\n                return null;\n            }\n\n            // Helper function that is used by the CurveLegend&#39;s accessibility object\n            // to select a specific CurveLegend control. Specifically, this function is used\n            // in the CurveLegend.CurveLegendAccessibleObject.Select function.\n            internal void SelectChild(CurveLegend.CurveLegendAccessibleObject child, AccessibleSelection selection) \n            {   \n                int childID = child.ID;\n\n                // Determine which selection action should occur, based on the\n                // AccessibleSelection value.\n                if ((selection &amp; AccessibleSelection.TakeSelection) != 0) {\n                    for(int i = 0; i &lt; chartControl.Legends.Length; i++) {\n                        if (i == childID) {\n                            chartControl.Legends[i].Selected = true;                        \n                        } else {\n                            chartControl.Legends[i].Selected = false;\n                        }\n                    }\n\n                    // AccessibleSelection.AddSelection means that the CurveLegend will be selected.\n                    if ((selection &amp; AccessibleSelection.AddSelection) != 0) {\n                        chartControl.Legends[childID].Selected = true;                        \n                    }\n\n                    // AccessibleSelection.AddSelection means that the CurveLegend will be unselected.\n                    if ((selection &amp; AccessibleSelection.RemoveSelection) != 0) {\n                        chartControl.Legends[childID].Selected = false;                        \n                    }\n                }            \n            }\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.AccessibleObject#4\">   // Inner class ChartControlAccessibleObject represents accessible information associated with the ChartControl.\n   // The ChartControlAccessibleObject is returned in the ChartControl::CreateAccessibilityInstance .\n   ref class ChartControlAccessibleObject: public ControlAccessibleObject\n   {\n   private:\n      ChartControl^ chartControl;\n\n   public:\n      ChartControlAccessibleObject( ChartControl^ ctrl )\n         : ControlAccessibleObject( ctrl )\n      {\n         chartControl = ctrl;\n      }\n\n\n      property System::Windows::Forms::AccessibleRole Role \n      {\n\n         // Gets the role for the Chart. This is used by accessibility programs.\n         virtual System::Windows::Forms::AccessibleRole get() override\n         {\n            return ::AccessibleRole::Chart;\n         }\n\n      }\n\n      property AccessibleStates State \n      {\n\n         // Gets the state for the Chart. This is used by accessibility programs.\n         virtual AccessibleStates get() override\n         {\n            return AccessibleStates::ReadOnly;\n         }\n\n      }\n\n      // The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so\n      // return the number of ChartLengend objects.\n      virtual int GetChildCount() override\n      {\n         return chartControl-&gt;Legends-&gt;Length;\n      }\n\n\n      // Gets the Accessibility object of the child CurveLegend idetified by index.\n      virtual AccessibleObject^ GetChild( int index ) override\n      {\n         if ( index &gt;= 0 &amp;&amp; index &lt; chartControl-&gt;Legends-&gt;Length )\n         {\n            return chartControl-&gt;Legends[ index ]-&gt;AccessibilityObject;\n         }\n\n         return nullptr;\n      }\n\n\n   internal:\n\n      // Helper function that is used by the CurveLegend&#39;s accessibility object\n      // to navigate between sibiling controls. Specifically, this function is used in\n      // the CurveLegend::CurveLegendAccessibleObject.Navigate function.\n      AccessibleObject^ NavigateFromChild( CurveLegend::CurveLegendAccessibleObject^ child, AccessibleNavigation navdir )\n      {\n         switch ( navdir )\n         {\n            case AccessibleNavigation::Down:\n            case AccessibleNavigation::Next:\n               return GetChild( child-&gt;ID + 1 );\n\n            case AccessibleNavigation::Up:\n            case AccessibleNavigation::Previous:\n               return GetChild( child-&gt;ID - 1 );\n         }\n         return nullptr;\n      }\n\n\n      // Helper function that is used by the CurveLegend&#39;s accessibility object\n      // to select a specific CurveLegend control. Specifically, this function is used\n      // in the CurveLegend::CurveLegendAccessibleObject.Select function.\n      void SelectChild( CurveLegend::CurveLegendAccessibleObject^ child, AccessibleSelection selection )\n      {\n         int childID = child-&gt;ID;\n         \n         // Determine which selection action should occur, based on the\n         // AccessibleSelection value.\n         if ( (selection &amp; AccessibleSelection::TakeSelection) != (AccessibleSelection)0 )\n         {\n            for ( int i = 0; i &lt; chartControl-&gt;Legends-&gt;Length; i++ )\n            {\n               if ( i == childID )\n               {\n                  chartControl-&gt;Legends[ i ]-&gt;Selected = true;\n               }\n               else\n               {\n                  chartControl-&gt;Legends[ i ]-&gt;Selected = false;\n               }\n\n            }\n            \n            // AccessibleSelection-&gt;AddSelection means that the CurveLegend will be selected.\n            if ( (selection &amp; AccessibleSelection::AddSelection) != (AccessibleSelection)0 )\n            {\n               chartControl-&gt;Legends[ childID ]-&gt;Selected = true;\n            }\n            \n            // AccessibleSelection-&gt;AddSelection means that the CurveLegend will be unselected.\n            if ( (selection &amp; AccessibleSelection::RemoveSelection) != (AccessibleSelection)0 )\n            {\n               chartControl-&gt;Legends[ childID ]-&gt;Selected = false;\n            }\n         }\n      }\n\n   };\n\n   // class ChartControlAccessibleObject\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_GetChildCount\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_GetChildCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetChildCount()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the number of children belonging to an accessible object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int GetChildCount ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of children belonging to an accessible object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the creation of an accessibility-aware chart control, using the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> and <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject\" data-linktype=\"relative-path\">Control+ControlAccessibleObject</a> classes to expose accessible information. The control plots two curves along with a legend. The <code>ChartControlAccessibleObject</code> class, which derives from <code>ControlAccessibleObject</code>, is used in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateAccessibilityInstance_\" data-linktype=\"relative-path\">CreateAccessibilityInstance</a> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the <code>ChartControlAccessibleObject</code> class overrides the <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_GetChild_\" data-linktype=\"relative-path\">GetChild</a> method to return the <code>CurveLegendAccessibleObject</code> that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  </p>\n<p> This code demonstrates shows overriding the GetChildCount method. See the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> class overview for the complete code example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.AccessibleObject#4\">        &#39; Inner Class ChartControlAccessibleObject represents accessible information \n        &#39; associated with the ChartControl.\n        &#39; The ChartControlAccessibleObject is returned in the         &#39; ChartControl.CreateAccessibilityInstance override.\n        Public Class ChartControlAccessibleObject\n            Inherits Control.ControlAccessibleObject\n\n            Private chartControl As ChartControl\n            \n            Public Sub New(ctrl As ChartControl)\n                MyBase.New(ctrl)\n                chartControl = ctrl\n            End Sub &#39;New\n            \n            &#39; Get the role for the Chart. This is used by accessibility programs.            \n            Public Overrides ReadOnly Property Role() As AccessibleRole\n                Get\n                    Return System.Windows.Forms.AccessibleRole.Chart\n                End Get\n            End Property\n            \n            &#39; Get the state for the Chart. This is used by accessibility programs.            \n            Public Overrides ReadOnly Property State() As AccessibleStates\n                Get\n                    Return AccessibleStates.ReadOnly\n                End Get\n            End Property                        \n            \n            &#39; The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so \n            &#39; return the number of ChartLengend objects.            \n            Public Overrides Function GetChildCount() As Integer\n                Return chartControl.Legends.Length\n            End Function \n            \n            &#39; Get the Accessibility object of the child CurveLegend idetified by index.\n            Public Overrides Function GetChild(index As Integer) As AccessibleObject\n                If index &gt;= 0 And index &lt; chartControl.Legends.Length Then\n                    Return chartControl.Legends(index).AccessibilityObject\n                End If\n                Return Nothing\n            End Function \n            \n            &#39; Helper function that is used by the CurveLegend&#39;s accessibility object\n            &#39; to navigate between sibiling controls. Specifically, this function is used in\n            &#39; the CurveLegend.CurveLegendAccessibleObject.Navigate function.\n            Friend Function NavigateFromChild(child As CurveLegend.CurveLegendAccessibleObject, _\n                                            navdir As AccessibleNavigation) As AccessibleObject\n                Select Case navdir\n                    Case AccessibleNavigation.Down, AccessibleNavigation.Next\n                            Return GetChild(child.ID + 1)\n                    \n                    Case AccessibleNavigation.Up, AccessibleNavigation.Previous\n                            Return GetChild(child.ID - 1)\n                End Select\n                Return Nothing\n            End Function            \n\n            &#39; Helper function that is used by the CurveLegend&#39;s accessibility object\n            &#39; to select a specific CurveLegend control. Specifically, this function is used \n            &#39; in the CurveLegend.CurveLegendAccessibleObject.Select function.            \n            Friend Sub SelectChild(child As CurveLegend.CurveLegendAccessibleObject, selection As AccessibleSelection)\n                Dim childID As Integer = child.ID\n                \n                &#39; Determine which selection action should occur, based on the\n                &#39; AccessibleSelection value.\n                If (selection And AccessibleSelection.TakeSelection) &lt;&gt; 0 Then\n                    Dim i As Integer\n                    For i = 0 To chartControl.Legends.Length - 1\n                        If i = childID Then\n                            chartControl.Legends(i).Selected = True\n                        Else\n                            chartControl.Legends(i).Selected = False\n                        End If\n                    Next i\n                    \n                    &#39; AccessibleSelection.AddSelection means that the CurveLegend will be selected.\n                    If (selection And AccessibleSelection.AddSelection) &lt;&gt; 0 Then\n                        chartControl.Legends(childID).Selected = True\n                    End If\n\n                    &#39; AccessibleSelection.AddSelection means that the CurveLegend will be unselected.                    \n                    If (selection And AccessibleSelection.RemoveSelection) &lt;&gt; 0 Then\n                        chartControl.Legends(childID).Selected = False\n                    End If\n                End If\n            End Sub &#39;SelectChild\n        End Class &#39;ChartControlAccessibleObject\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.AccessibleObject#4\">        // Inner class ChartControlAccessibleObject represents accessible information associated with the ChartControl.\n        // The ChartControlAccessibleObject is returned in the ChartControl.CreateAccessibilityInstance override.\n        public class ChartControlAccessibleObject : ControlAccessibleObject\n        {\n            ChartControl chartControl;\n\n            public ChartControlAccessibleObject(ChartControl ctrl) : base(ctrl) \n            {\n                chartControl = ctrl;\n            }\n\n            // Gets the role for the Chart. This is used by accessibility programs.\n            public override AccessibleRole Role\n            {  \n                get {\n                    return AccessibleRole.Chart;\n                }\n            }\n\n            // Gets the state for the Chart. This is used by accessibility programs.\n            public override AccessibleStates State\n            {  \n                get {                    \n                    return AccessibleStates.ReadOnly;\n                }\n            }\n\n            // The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so \n            // return the number of ChartLengend objects.\n            public override int GetChildCount()\n            {  \n                return chartControl.Legends.Length;\n            }\n\n            // Gets the Accessibility object of the child CurveLegend idetified by index.\n            public override AccessibleObject GetChild(int index)\n            {  \n                if (index &gt;= 0 &amp;&amp; index &lt; chartControl.Legends.Length) {\n                    return chartControl.Legends[index].AccessibilityObject;\n                }                \n                return null;\n            }\n\n            // Helper function that is used by the CurveLegend&#39;s accessibility object\n            // to navigate between sibiling controls. Specifically, this function is used in\n            // the CurveLegend.CurveLegendAccessibleObject.Navigate function.\n            internal AccessibleObject NavigateFromChild(CurveLegend.CurveLegendAccessibleObject child, \n                                                        AccessibleNavigation navdir) \n            {  \n                switch(navdir) {\n                    case AccessibleNavigation.Down:\n                    case AccessibleNavigation.Next:\n                        return GetChild(child.ID + 1);\n                        \n                    case AccessibleNavigation.Up:\n                    case AccessibleNavigation.Previous:\n                        return GetChild(child.ID - 1);                        \n                }\n                return null;\n            }\n\n            // Helper function that is used by the CurveLegend&#39;s accessibility object\n            // to select a specific CurveLegend control. Specifically, this function is used\n            // in the CurveLegend.CurveLegendAccessibleObject.Select function.\n            internal void SelectChild(CurveLegend.CurveLegendAccessibleObject child, AccessibleSelection selection) \n            {   \n                int childID = child.ID;\n\n                // Determine which selection action should occur, based on the\n                // AccessibleSelection value.\n                if ((selection &amp; AccessibleSelection.TakeSelection) != 0) {\n                    for(int i = 0; i &lt; chartControl.Legends.Length; i++) {\n                        if (i == childID) {\n                            chartControl.Legends[i].Selected = true;                        \n                        } else {\n                            chartControl.Legends[i].Selected = false;\n                        }\n                    }\n\n                    // AccessibleSelection.AddSelection means that the CurveLegend will be selected.\n                    if ((selection &amp; AccessibleSelection.AddSelection) != 0) {\n                        chartControl.Legends[childID].Selected = true;                        \n                    }\n\n                    // AccessibleSelection.AddSelection means that the CurveLegend will be unselected.\n                    if ((selection &amp; AccessibleSelection.RemoveSelection) != 0) {\n                        chartControl.Legends[childID].Selected = false;                        \n                    }\n                }            \n            }\n        }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.AccessibleObject#4\">   // Inner class ChartControlAccessibleObject represents accessible information associated with the ChartControl.\n   // The ChartControlAccessibleObject is returned in the ChartControl::CreateAccessibilityInstance .\n   ref class ChartControlAccessibleObject: public ControlAccessibleObject\n   {\n   private:\n      ChartControl^ chartControl;\n\n   public:\n      ChartControlAccessibleObject( ChartControl^ ctrl )\n         : ControlAccessibleObject( ctrl )\n      {\n         chartControl = ctrl;\n      }\n\n\n      property System::Windows::Forms::AccessibleRole Role \n      {\n\n         // Gets the role for the Chart. This is used by accessibility programs.\n         virtual System::Windows::Forms::AccessibleRole get() override\n         {\n            return ::AccessibleRole::Chart;\n         }\n\n      }\n\n      property AccessibleStates State \n      {\n\n         // Gets the state for the Chart. This is used by accessibility programs.\n         virtual AccessibleStates get() override\n         {\n            return AccessibleStates::ReadOnly;\n         }\n\n      }\n\n      // The CurveLegend objects are &quot;child&quot; controls in terms of accessibility so\n      // return the number of ChartLengend objects.\n      virtual int GetChildCount() override\n      {\n         return chartControl-&gt;Legends-&gt;Length;\n      }\n\n\n      // Gets the Accessibility object of the child CurveLegend idetified by index.\n      virtual AccessibleObject^ GetChild( int index ) override\n      {\n         if ( index &gt;= 0 &amp;&amp; index &lt; chartControl-&gt;Legends-&gt;Length )\n         {\n            return chartControl-&gt;Legends[ index ]-&gt;AccessibilityObject;\n         }\n\n         return nullptr;\n      }\n\n\n   internal:\n\n      // Helper function that is used by the CurveLegend&#39;s accessibility object\n      // to navigate between sibiling controls. Specifically, this function is used in\n      // the CurveLegend::CurveLegendAccessibleObject.Navigate function.\n      AccessibleObject^ NavigateFromChild( CurveLegend::CurveLegendAccessibleObject^ child, AccessibleNavigation navdir )\n      {\n         switch ( navdir )\n         {\n            case AccessibleNavigation::Down:\n            case AccessibleNavigation::Next:\n               return GetChild( child-&gt;ID + 1 );\n\n            case AccessibleNavigation::Up:\n            case AccessibleNavigation::Previous:\n               return GetChild( child-&gt;ID - 1 );\n         }\n         return nullptr;\n      }\n\n\n      // Helper function that is used by the CurveLegend&#39;s accessibility object\n      // to select a specific CurveLegend control. Specifically, this function is used\n      // in the CurveLegend::CurveLegendAccessibleObject.Select function.\n      void SelectChild( CurveLegend::CurveLegendAccessibleObject^ child, AccessibleSelection selection )\n      {\n         int childID = child-&gt;ID;\n         \n         // Determine which selection action should occur, based on the\n         // AccessibleSelection value.\n         if ( (selection &amp; AccessibleSelection::TakeSelection) != (AccessibleSelection)0 )\n         {\n            for ( int i = 0; i &lt; chartControl-&gt;Legends-&gt;Length; i++ )\n            {\n               if ( i == childID )\n               {\n                  chartControl-&gt;Legends[ i ]-&gt;Selected = true;\n               }\n               else\n               {\n                  chartControl-&gt;Legends[ i ]-&gt;Selected = false;\n               }\n\n            }\n            \n            // AccessibleSelection-&gt;AddSelection means that the CurveLegend will be selected.\n            if ( (selection &amp; AccessibleSelection::AddSelection) != (AccessibleSelection)0 )\n            {\n               chartControl-&gt;Legends[ childID ]-&gt;Selected = true;\n            }\n            \n            // AccessibleSelection-&gt;AddSelection means that the CurveLegend will be unselected.\n            if ( (selection &amp; AccessibleSelection::RemoveSelection) != (AccessibleSelection)0 )\n            {\n               chartControl-&gt;Legends[ childID ]-&gt;Selected = false;\n            }\n         }\n      }\n\n   };\n\n   // class ChartControlAccessibleObject\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_GetFocused\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_GetFocused_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetFocused()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the object that has the keyboard focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.AccessibleObject GetFocused ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> that specifies the currently focused child. This method returns the calling object if the object itself is focused. Returns <code>null</code> if no object has focus.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.comexception\" data-linktype=\"relative-path\">COMException</a></div>\r\n                  </div>\r\n                  <p>The control cannot be retrieved.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The concept of keyboard focus is related to that of an active window. An active window is the foreground window in which the user is working. The object with the keyboard focus is either the active window or a child object of the active window.  </p>\n<p> Only one object or item within a container can have the focus at any one time. The object with the keyboard focus is not necessarily the selected object.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_GetHelpTopic_System_String__\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_GetHelpTopic_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHelpTopic(String)</div>        \r\n          </div>\r\n    \r\n            <p>Gets an identifier for a Help topic identifier and the path to the Help file associated with this accessible object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual int GetHelpTopic (out string fileName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fileName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>On return, this property contains the path to the Help file associated with this accessible object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An identifier for a Help topic, or -1 if there is no Help topic. On return, the <code>fileName</code> parameter contains the path to the Help file associated with this accessible object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.comexception\" data-linktype=\"relative-path\">COMException</a></div>\r\n                  </div>\r\n                  <p>The Help topic for the control cannot be retrieved.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To display help for the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> using the Windows Help system, you can pass the file name and topic ID to the appropriate <a class=\"xref\" href=\"system.windows.forms.help#System_Windows_Forms_Help_ShowHelp_\" data-linktype=\"relative-path\">ShowHelp</a> method of <a class=\"xref\" href=\"system.windows.forms.help\" data-linktype=\"relative-path\">Help</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_GetSelected\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_GetSelected_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSelected()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the currently selected child.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.AccessibleObject GetSelected ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> that represents the currently selected child. This method returns the calling object if the object itself is selected. Returns <code>null</code> if is no child is currently selected and the object itself does not have focus.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.comexception\" data-linktype=\"relative-path\">COMException</a></div>\r\n                  </div>\r\n                  <p>The selected child cannot be retrieved.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_HitTest_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_HitTest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HitTest(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the child object at the specified screen coordinates.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.AccessibleObject HitTest (int x, int y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The horizontal screen coordinate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The vertical screen coordinate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> that represents the child object at the given screen coordinates. This method returns the calling object if the object itself is at the location specified. Returns <code>null</code> if no object is at the tested location.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.comexception\" data-linktype=\"relative-path\">COMException</a></div>\r\n                  </div>\r\n                  <p>The control cannot be hit tested.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For nonrectangular objects such as list view items, the coordinates of the object&#39;s bounding rectangle retrieved by <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_Bounds_\" data-linktype=\"relative-path\">Bounds</a> can fail if tested with HitTest, because HitTest determines the object&#39;s boundaries on a pixel-by-pixel basis.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Navigate_System_Windows_Forms_AccessibleNavigation_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Navigate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Navigate(AccessibleNavigation)</div>        \r\n          </div>\r\n    \r\n            <p>Navigates to another accessible object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.AccessibleObject Navigate (System.Windows.Forms.AccessibleNavigation navdir);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>navdir</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessiblenavigation\" data-linktype=\"relative-path\">AccessibleNavigation</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.accessiblenavigation\" data-linktype=\"relative-path\">AccessibleNavigation</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> that represents one of the <a class=\"xref\" href=\"system.windows.forms.accessiblenavigation\" data-linktype=\"relative-path\">AccessibleNavigation</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.comexception\" data-linktype=\"relative-path\">COMException</a></div>\r\n                  </div>\r\n                  <p>The navigation attempt fails.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Navigation, both spatial and logical, is always restricted to the user interface elements within a container. With spatial navigation, clients can navigate only to a sibling of the starting object. Depending on the navigational flag used with logical navigation, clients can navigate to either a child or to a sibling of the starting object. This method does not change the selection or focus. To change the focus or to select an object, use <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_Select_\" data-linktype=\"relative-path\">Select</a>. The Navigate method retrieves only user interface elements that have a defined screen location.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the creation of an accessibility-aware chart control, using the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> and <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject\" data-linktype=\"relative-path\">Control+ControlAccessibleObject</a> classes to expose accessible information. The control plots two curves along with a legend. The <code>ChartControlAccessibleObject</code> class, which derives from <code>ControlAccessibleObject</code>, is used in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateAccessibilityInstance_\" data-linktype=\"relative-path\">CreateAccessibilityInstance</a> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the <code>ChartControlAccessibleObject</code> class overrides the <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_GetChild_\" data-linktype=\"relative-path\">GetChild</a> method to return the <code>CurveLegendAccessibleObject</code> that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  </p>\n<p> This code demonstrates shows overriding the Navigate method. See the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> class overview for the complete code example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.AccessibleObject#6\">            &#39; Inner class CurveLegendAccessibleObject represents accessible information \n            &#39; associated with the CurveLegend object.\n            Public Class CurveLegendAccessibleObject\n                Inherits AccessibleObject\n\n                Private curveLegend As CurveLegend\n                \n                Public Sub New(curveLegend As CurveLegend)\n                    Me.curveLegend = curveLegend\n                End Sub &#39;New\n                \n                &#39; Private property that helps get the reference to the parent ChartControl.                \n                Private ReadOnly Property ChartControl() As ChartControlAccessibleObject\n                    Get\n                        Return CType(Parent, ChartControlAccessibleObject)\n                    End Get\n                End Property\n\n                &#39; Friend helper function that returns the ID for this CurveLegend.                \n                Friend ReadOnly Property ID() As Integer\n                    Get\n                        Dim i As Integer\n                        For i = 0 To (ChartControl.GetChildCount()) - 1\n                            If ChartControl.GetChild(i) Is Me Then\n                                Return i\n                            End If\n                        Next i\n                        Return - 1\n                    End Get\n                End Property\n                \n                &#39; Gets the Bounds for the CurveLegend. This is used by accessibility programs.\n                Public Overrides ReadOnly Property Bounds() As Rectangle\n                    Get\n                        &#39; The bounds is in screen coordinates.\n                        Dim loc As Point = curveLegend.Location\n                        Return New Rectangle(curveLegend.chart.PointToScreen(loc), curveLegend.Size)\n                    End Get\n                End Property\n\n                &#39; Gets or sets the Name for the CurveLegend. This is used by accessibility programs.                \n                Public Overrides Property Name() As String\n                    Get\n                        Return curveLegend.Name\n                    End Get\n                    Set\n                        curveLegend.Name = value\n                    End Set\n                End Property\n                \n                &#39; Gets the Curve Legend Parent&#39;s Accessible object.\n                &#39; This is used by accessibility programs.                \n                Public Overrides ReadOnly Property Parent() As AccessibleObject\n                    Get\n                        Return curveLegend.chart.AccessibilityObject\n                    End Get\n                End Property\n                \n                &#39; Gets the role for the CurveLegend. This is used by accessibility programs.                \n                Public Overrides ReadOnly Property Role() As AccessibleRole\n                    Get\n                        Return System.Windows.Forms.AccessibleRole.StaticText\n                    End Get\n                End Property\n\n                &#39; Gets the state based on the selection for the CurveLegend. \n                &#39; This is used by accessibility programs.                \n                Public Overrides ReadOnly Property State() As AccessibleStates\n                    Get\n                        Dim stateTemp As AccessibleStates = AccessibleStates.Selectable\n                        If curveLegend.Selected Then\n                            stateTemp = stateTemp Or AccessibleStates.Selected\n                        End If\n                        Return stateTemp\n                    End Get\n                End Property\n                \n                &#39; Navigates through siblings of this CurveLegend. This is used by accessibility programs.                \n                Public Overrides Function Navigate(navdir As AccessibleNavigation) As AccessibleObject\n                    &#39; Use the Friend NavigateFromChild helper function that exists\n                    &#39; on ChartControlAccessibleObject.\n                    Return ChartControl.NavigateFromChild(Me, navdir)\n                End Function\n                \n                &#39; Selects or unselects this CurveLegend. This is used by accessibility programs.\n                Public Overrides Sub [Select](selection As AccessibleSelection)\n\n                    &#39; Use the internal SelectChild helper function that exists\n                    &#39; on ChartControlAccessibleObject.\n                    ChartControl.SelectChild(Me, selection)\n                End Sub\n\n            End Class &#39;CurveLegendAccessibleObject\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.AccessibleObject#6\">            // Inner class CurveLegendAccessibleObject represents accessible information \n            // associated with the CurveLegend object.\n            public class CurveLegendAccessibleObject : AccessibleObject\n            {\n                private CurveLegend curveLegend;\n\n                public CurveLegendAccessibleObject(CurveLegend curveLegend) : base() \n                {\n                    this.curveLegend = curveLegend;                    \n                }                \n\n                // Private property that helps get the reference to the parent ChartControl.\n                private ChartControlAccessibleObject ChartControl\n                {   \n                    get {\n                        return Parent as ChartControlAccessibleObject;\n                    }\n                }\n\n                // Internal helper function that returns the ID for this CurveLegend.\n                internal int ID\n                {\n                    get {\n                        for(int i = 0; i &lt; ChartControl.GetChildCount(); i++) {\n                            if (ChartControl.GetChild(i) == this) {\n                                return i;\n                            }\n                        }\n                        return -1;\n                    }\n                }\n\n                // Gets the Bounds for the CurveLegend. This is used by accessibility programs.\n                public override Rectangle Bounds\n                {\n                    get {                        \n                        // The bounds is in screen coordinates.\n                        Point loc = curveLegend.Location;\n                        return new Rectangle(curveLegend.chart.PointToScreen(loc), curveLegend.Size);\n                    }\n                }\n\n                // Gets or sets the Name for the CurveLegend. This is used by accessibility programs.\n                public override string Name\n                {\n                    get {\n                        return curveLegend.Name;\n                    }\n                    set {\n                        curveLegend.Name = value;                        \n                    }\n                }\n\n                // Gets the Curve Legend Parent&#39;s Accessible object.\n                // This is used by accessibility programs.\n                public override AccessibleObject Parent\n                {\n                    get {\n                        return curveLegend.chart.AccessibilityObject;\n                    }\n                }\n\n                // Gets the role for the CurveLegend. This is used by accessibility programs.\n                public override AccessibleRole Role \n                {\n                    get {\n                        return AccessibleRole.StaticText;\n                    }\n                }\n\n                // Gets the state based on the selection for the CurveLegend. \n                // This is used by accessibility programs.\n                public override AccessibleStates State \n                {\n                    get {\n                        AccessibleStates state = AccessibleStates.Selectable;\n                        if (curveLegend.Selected) \n                        {\n                            state |= AccessibleStates.Selected;\n                        }\n                        return state;\n                    }\n                }\n\n                // Navigates through siblings of this CurveLegend. This is used by accessibility programs.\n                public override AccessibleObject Navigate(AccessibleNavigation navdir) \n                {\n                    // Uses the internal NavigateFromChild helper function that exists\n                    // on ChartControlAccessibleObject.\n                    return ChartControl.NavigateFromChild(this, navdir);\n                }\n\n                // Selects or unselects this CurveLegend. This is used by accessibility programs.\n                public override void Select(AccessibleSelection selection) \n                {\n                    // Uses the internal SelectChild helper function that exists\n                    // on ChartControlAccessibleObject.\n                    ChartControl.SelectChild(this, selection);\n                }\n            }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.AccessibleObject#6\">      // Inner class CurveLegendAccessibleObject represents accessible information\n      // associated with the CurveLegend object.\n   public:\n      ref class CurveLegendAccessibleObject: public AccessibleObject\n      {\n      private:\n         CurveLegend^ curveLegend;\n\n      public:\n         CurveLegendAccessibleObject( CurveLegend^ curveLegend )\n            : AccessibleObject()\n         {\n            this-&gt;curveLegend = curveLegend;\n         }\n\n\n      private:\n\n         property ChartControlAccessibleObject^ ChartControl \n         {\n\n            // Private property that helps get the reference to the parent ChartControl.\n            ChartControlAccessibleObject^ get()\n            {\n               return dynamic_cast&lt;ChartControlAccessibleObject^&gt;(Parent);\n            }\n\n         }\n\n      internal:\n\n         property int ID \n         {\n\n            // Internal helper function that returns the ID for this CurveLegend.\n            int get()\n            {\n               for ( int i = 0; i &lt; ChartControl-&gt;GetChildCount(); i++ )\n               {\n                  if ( ChartControl-&gt;GetChild( i ) == this )\n                  {\n                     return i;\n                  }\n\n               }\n               return  -1;\n            }\n\n         }\n\n      public:\n\n         property Rectangle Bounds \n         {\n\n            // Gets the Bounds for the CurveLegend. This is used by accessibility programs.\n            virtual Rectangle get() override\n            {\n               \n               // The bounds is in screen coordinates.\n               Point loc = curveLegend-&gt;Location;\n               return Rectangle(curveLegend-&gt;chart-&gt;PointToScreen( loc ),curveLegend-&gt;Size);\n            }\n\n         }\n\n         property String^ Name \n         {\n\n            // Gets or sets the Name for the CurveLegend. This is used by accessibility programs.\n            virtual String^ get() override\n            {\n               return curveLegend-&gt;Name;\n            }\n\n            virtual void set( String^ value ) override\n            {\n               curveLegend-&gt;Name = value;\n            }\n\n         }\n\n         property AccessibleObject^ Parent \n         {\n\n            // Gets the Curve Legend Parent&#39;s Accessible object.\n            // This is used by accessibility programs.\n            virtual AccessibleObject^ get() override\n            {\n               return curveLegend-&gt;chart-&gt;AccessibilityObject;\n            }\n\n         }\n\n         property System::Windows::Forms::AccessibleRole Role \n         {\n\n            // Gets the role for the CurveLegend. This is used by accessibility programs.\n            virtual System::Windows::Forms::AccessibleRole get() override\n            {\n               return ::AccessibleRole::StaticText;\n            }\n\n         }\n\n         property AccessibleStates State \n         {\n\n            // Gets the state based on the selection for the CurveLegend.\n            // This is used by accessibility programs.\n            virtual AccessibleStates get() override\n            {\n               AccessibleStates state = AccessibleStates::Selectable;\n               if ( curveLegend-&gt;Selected )\n               {\n                  state = static_cast&lt;AccessibleStates&gt;(state | AccessibleStates::Selected);\n               }\n\n               return state;\n            }\n\n         }\n\n         // Navigates through siblings of this CurveLegend. This is used by accessibility programs.\n         virtual AccessibleObject^ Navigate( AccessibleNavigation navdir ) override\n         {\n            \n            // Uses the internal NavigateFromChild helper function that exists\n            // on ChartControlAccessibleObject.\n            return ChartControl-&gt;NavigateFromChild( this, navdir );\n         }\n\n\n         // Selects or unselects this CurveLegend. This is used by accessibility programs.\n         virtual void Select( AccessibleSelection selection ) override\n         {\n            \n            // Uses the internal SelectChild helper function that exists\n            // on ChartControlAccessibleObject.\n            ChartControl-&gt;SelectChild( this, selection );\n         }\n\n      };\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Select_System_Windows_Forms_AccessibleSelection_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Select_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Select(AccessibleSelection)</div>        \r\n          </div>\r\n    \r\n            <p>Modifies the selection or moves the keyboard focus of the accessible object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Select (System.Windows.Forms.AccessibleSelection flags);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>flags</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.interopservices.comexception\" data-linktype=\"relative-path\">COMException</a></div>\r\n                  </div>\r\n                  <p>The selection cannot be performed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Applications can use this method to perform complex selection operations.  </p>\n<p> The following describes which <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a> values to specify when calling Select to perform complex selection operations.  </p>\n<table>\n<thead>\n<tr>\n<th>Operation</th>\n<th>Flag Combination</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>To simulate a click</td>\n<td><a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">System.Windows.Forms.AccessibleSelection</a> <code>OR</code> <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">System.Windows.Forms.AccessibleSelection</a> <strong>Note:</strong>  This combination will not select the desired control if called from within your own application. It will have the desired effect, however, if called from an external application.</td>\n</tr>\n<tr>\n<td>To select a target item by simulating CTRL + click</td>\n<td><a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">System.Windows.Forms.AccessibleSelection</a> <code>OR</code> <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">System.Windows.Forms.AccessibleSelection</a></td>\n</tr>\n<tr>\n<td>To cancel selection of a target item by simulating CTRL + click</td>\n<td><a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">System.Windows.Forms.AccessibleSelection</a> <code>OR</code> <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">System.Windows.Forms.AccessibleSelection</a></td>\n</tr>\n<tr>\n<td>To simulate SHIFT + click</td>\n<td><a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">System.Windows.Forms.AccessibleSelection</a> <code>OR</code> <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">System.Windows.Forms.AccessibleSelection</a></td>\n</tr>\n<tr>\n<td>To select a range of objects and put focus on the last object</td>\n<td>Specify <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">System.Windows.Forms.AccessibleSelection</a> on the starting object to set the selection anchor. Then call Select again and specify <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">System.Windows.Forms.AccessibleSelection</a><code>OR</code><a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">System.Windows.Forms.AccessibleSelection</a> on the last object.</td>\n</tr>\n<tr>\n<td>To deselect all objects</td>\n<td>Specify <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">System.Windows.Forms.AccessibleSelection</a> on any object. This flag deselects all selected objects except the one just selected. Then call Select again and specify <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">System.Windows.Forms.AccessibleSelection</a> on the same object.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the creation of an accessibility-aware chart control, using the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> and <a class=\"xref\" href=\"system.windows.forms.control.controlaccessibleobject\" data-linktype=\"relative-path\">Control+ControlAccessibleObject</a> classes to expose accessible information. The control plots two curves along with a legend. The <code>ChartControlAccessibleObject</code> class, which derives from <code>ControlAccessibleObject</code>, is used in the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateAccessibilityInstance_\" data-linktype=\"relative-path\">CreateAccessibilityInstance</a> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> -based control, but instead is drawn by the chart control, it does not have any built-in accessible information. Because of this, the <code>ChartControlAccessibleObject</code> class overrides the <a class=\"xref\" href=\"system.windows.forms.accessibleobject#System_Windows_Forms_AccessibleObject_GetChild_\" data-linktype=\"relative-path\">GetChild</a> method to return the <code>CurveLegendAccessibleObject</code> that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  </p>\n<p> This code demonstrates shows overriding the Select method. See the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> class overview for the complete code example.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.AccessibleObject#6\">            &#39; Inner class CurveLegendAccessibleObject represents accessible information \n            &#39; associated with the CurveLegend object.\n            Public Class CurveLegendAccessibleObject\n                Inherits AccessibleObject\n\n                Private curveLegend As CurveLegend\n                \n                Public Sub New(curveLegend As CurveLegend)\n                    Me.curveLegend = curveLegend\n                End Sub &#39;New\n                \n                &#39; Private property that helps get the reference to the parent ChartControl.                \n                Private ReadOnly Property ChartControl() As ChartControlAccessibleObject\n                    Get\n                        Return CType(Parent, ChartControlAccessibleObject)\n                    End Get\n                End Property\n\n                &#39; Friend helper function that returns the ID for this CurveLegend.                \n                Friend ReadOnly Property ID() As Integer\n                    Get\n                        Dim i As Integer\n                        For i = 0 To (ChartControl.GetChildCount()) - 1\n                            If ChartControl.GetChild(i) Is Me Then\n                                Return i\n                            End If\n                        Next i\n                        Return - 1\n                    End Get\n                End Property\n                \n                &#39; Gets the Bounds for the CurveLegend. This is used by accessibility programs.\n                Public Overrides ReadOnly Property Bounds() As Rectangle\n                    Get\n                        &#39; The bounds is in screen coordinates.\n                        Dim loc As Point = curveLegend.Location\n                        Return New Rectangle(curveLegend.chart.PointToScreen(loc), curveLegend.Size)\n                    End Get\n                End Property\n\n                &#39; Gets or sets the Name for the CurveLegend. This is used by accessibility programs.                \n                Public Overrides Property Name() As String\n                    Get\n                        Return curveLegend.Name\n                    End Get\n                    Set\n                        curveLegend.Name = value\n                    End Set\n                End Property\n                \n                &#39; Gets the Curve Legend Parent&#39;s Accessible object.\n                &#39; This is used by accessibility programs.                \n                Public Overrides ReadOnly Property Parent() As AccessibleObject\n                    Get\n                        Return curveLegend.chart.AccessibilityObject\n                    End Get\n                End Property\n                \n                &#39; Gets the role for the CurveLegend. This is used by accessibility programs.                \n                Public Overrides ReadOnly Property Role() As AccessibleRole\n                    Get\n                        Return System.Windows.Forms.AccessibleRole.StaticText\n                    End Get\n                End Property\n\n                &#39; Gets the state based on the selection for the CurveLegend. \n                &#39; This is used by accessibility programs.                \n                Public Overrides ReadOnly Property State() As AccessibleStates\n                    Get\n                        Dim stateTemp As AccessibleStates = AccessibleStates.Selectable\n                        If curveLegend.Selected Then\n                            stateTemp = stateTemp Or AccessibleStates.Selected\n                        End If\n                        Return stateTemp\n                    End Get\n                End Property\n                \n                &#39; Navigates through siblings of this CurveLegend. This is used by accessibility programs.                \n                Public Overrides Function Navigate(navdir As AccessibleNavigation) As AccessibleObject\n                    &#39; Use the Friend NavigateFromChild helper function that exists\n                    &#39; on ChartControlAccessibleObject.\n                    Return ChartControl.NavigateFromChild(Me, navdir)\n                End Function\n                \n                &#39; Selects or unselects this CurveLegend. This is used by accessibility programs.\n                Public Overrides Sub [Select](selection As AccessibleSelection)\n\n                    &#39; Use the internal SelectChild helper function that exists\n                    &#39; on ChartControlAccessibleObject.\n                    ChartControl.SelectChild(Me, selection)\n                End Sub\n\n            End Class &#39;CurveLegendAccessibleObject\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.AccessibleObject#6\">            // Inner class CurveLegendAccessibleObject represents accessible information \n            // associated with the CurveLegend object.\n            public class CurveLegendAccessibleObject : AccessibleObject\n            {\n                private CurveLegend curveLegend;\n\n                public CurveLegendAccessibleObject(CurveLegend curveLegend) : base() \n                {\n                    this.curveLegend = curveLegend;                    \n                }                \n\n                // Private property that helps get the reference to the parent ChartControl.\n                private ChartControlAccessibleObject ChartControl\n                {   \n                    get {\n                        return Parent as ChartControlAccessibleObject;\n                    }\n                }\n\n                // Internal helper function that returns the ID for this CurveLegend.\n                internal int ID\n                {\n                    get {\n                        for(int i = 0; i &lt; ChartControl.GetChildCount(); i++) {\n                            if (ChartControl.GetChild(i) == this) {\n                                return i;\n                            }\n                        }\n                        return -1;\n                    }\n                }\n\n                // Gets the Bounds for the CurveLegend. This is used by accessibility programs.\n                public override Rectangle Bounds\n                {\n                    get {                        \n                        // The bounds is in screen coordinates.\n                        Point loc = curveLegend.Location;\n                        return new Rectangle(curveLegend.chart.PointToScreen(loc), curveLegend.Size);\n                    }\n                }\n\n                // Gets or sets the Name for the CurveLegend. This is used by accessibility programs.\n                public override string Name\n                {\n                    get {\n                        return curveLegend.Name;\n                    }\n                    set {\n                        curveLegend.Name = value;                        \n                    }\n                }\n\n                // Gets the Curve Legend Parent&#39;s Accessible object.\n                // This is used by accessibility programs.\n                public override AccessibleObject Parent\n                {\n                    get {\n                        return curveLegend.chart.AccessibilityObject;\n                    }\n                }\n\n                // Gets the role for the CurveLegend. This is used by accessibility programs.\n                public override AccessibleRole Role \n                {\n                    get {\n                        return AccessibleRole.StaticText;\n                    }\n                }\n\n                // Gets the state based on the selection for the CurveLegend. \n                // This is used by accessibility programs.\n                public override AccessibleStates State \n                {\n                    get {\n                        AccessibleStates state = AccessibleStates.Selectable;\n                        if (curveLegend.Selected) \n                        {\n                            state |= AccessibleStates.Selected;\n                        }\n                        return state;\n                    }\n                }\n\n                // Navigates through siblings of this CurveLegend. This is used by accessibility programs.\n                public override AccessibleObject Navigate(AccessibleNavigation navdir) \n                {\n                    // Uses the internal NavigateFromChild helper function that exists\n                    // on ChartControlAccessibleObject.\n                    return ChartControl.NavigateFromChild(this, navdir);\n                }\n\n                // Selects or unselects this CurveLegend. This is used by accessibility programs.\n                public override void Select(AccessibleSelection selection) \n                {\n                    // Uses the internal SelectChild helper function that exists\n                    // on ChartControlAccessibleObject.\n                    ChartControl.SelectChild(this, selection);\n                }\n            }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.AccessibleObject#6\">      // Inner class CurveLegendAccessibleObject represents accessible information\n      // associated with the CurveLegend object.\n   public:\n      ref class CurveLegendAccessibleObject: public AccessibleObject\n      {\n      private:\n         CurveLegend^ curveLegend;\n\n      public:\n         CurveLegendAccessibleObject( CurveLegend^ curveLegend )\n            : AccessibleObject()\n         {\n            this-&gt;curveLegend = curveLegend;\n         }\n\n\n      private:\n\n         property ChartControlAccessibleObject^ ChartControl \n         {\n\n            // Private property that helps get the reference to the parent ChartControl.\n            ChartControlAccessibleObject^ get()\n            {\n               return dynamic_cast&lt;ChartControlAccessibleObject^&gt;(Parent);\n            }\n\n         }\n\n      internal:\n\n         property int ID \n         {\n\n            // Internal helper function that returns the ID for this CurveLegend.\n            int get()\n            {\n               for ( int i = 0; i &lt; ChartControl-&gt;GetChildCount(); i++ )\n               {\n                  if ( ChartControl-&gt;GetChild( i ) == this )\n                  {\n                     return i;\n                  }\n\n               }\n               return  -1;\n            }\n\n         }\n\n      public:\n\n         property Rectangle Bounds \n         {\n\n            // Gets the Bounds for the CurveLegend. This is used by accessibility programs.\n            virtual Rectangle get() override\n            {\n               \n               // The bounds is in screen coordinates.\n               Point loc = curveLegend-&gt;Location;\n               return Rectangle(curveLegend-&gt;chart-&gt;PointToScreen( loc ),curveLegend-&gt;Size);\n            }\n\n         }\n\n         property String^ Name \n         {\n\n            // Gets or sets the Name for the CurveLegend. This is used by accessibility programs.\n            virtual String^ get() override\n            {\n               return curveLegend-&gt;Name;\n            }\n\n            virtual void set( String^ value ) override\n            {\n               curveLegend-&gt;Name = value;\n            }\n\n         }\n\n         property AccessibleObject^ Parent \n         {\n\n            // Gets the Curve Legend Parent&#39;s Accessible object.\n            // This is used by accessibility programs.\n            virtual AccessibleObject^ get() override\n            {\n               return curveLegend-&gt;chart-&gt;AccessibilityObject;\n            }\n\n         }\n\n         property System::Windows::Forms::AccessibleRole Role \n         {\n\n            // Gets the role for the CurveLegend. This is used by accessibility programs.\n            virtual System::Windows::Forms::AccessibleRole get() override\n            {\n               return ::AccessibleRole::StaticText;\n            }\n\n         }\n\n         property AccessibleStates State \n         {\n\n            // Gets the state based on the selection for the CurveLegend.\n            // This is used by accessibility programs.\n            virtual AccessibleStates get() override\n            {\n               AccessibleStates state = AccessibleStates::Selectable;\n               if ( curveLegend-&gt;Selected )\n               {\n                  state = static_cast&lt;AccessibleStates&gt;(state | AccessibleStates::Selected);\n               }\n\n               return state;\n            }\n\n         }\n\n         // Navigates through siblings of this CurveLegend. This is used by accessibility programs.\n         virtual AccessibleObject^ Navigate( AccessibleNavigation navdir ) override\n         {\n            \n            // Uses the internal NavigateFromChild helper function that exists\n            // on ChartControlAccessibleObject.\n            return ChartControl-&gt;NavigateFromChild( this, navdir );\n         }\n\n\n         // Selects or unselects this CurveLegend. This is used by accessibility programs.\n         virtual void Select( AccessibleSelection selection ) override\n         {\n            \n            // Uses the internal SelectChild helper function that exists\n            // on ChartControlAccessibleObject.\n            ChartControl-&gt;SelectChild( this, selection );\n         }\n\n      };\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_UseStdAccessibleObjects_System_IntPtr_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_UseStdAccessibleObjects_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UseStdAccessibleObjects(IntPtr)</div>        \r\n          </div>\r\n    \r\n            <p>Associates an object with an instance of an <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> based on the handle of the object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void UseStdAccessibleObjects (IntPtr handle);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>handle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> that contains the handle of the object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Server applications can call this function when they contain a custom UI object that is similar to a system-provided object. Server applications call <code>CreateStdAccessibleObject</code> and override the <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> methods and properties as needed to match their custom object. This approach saves server developers the work of fully implementing all the <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> properties and methods. This function is similar to <code>CreateStdAccessibleProxy</code>, except that <code>CreateStdAccessibleProxy</code> enables you to specify the class name as a parameter, whereas <code>CreateStdAccessibleObject</code> uses the class name associated with the <code>hwnd</code>.  </p>\n<p> Calling this version of the <code>UseStdAccessible</code> is the same as calling the two parameter version with an objid of CLIENT.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_UseStdAccessibleObjects_System_IntPtr_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_UseStdAccessibleObjects_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UseStdAccessibleObjects(IntPtr,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Associates an object with an instance of an <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> based on the handle and the object id of the object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void UseStdAccessibleObjects (IntPtr handle, int objid);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>handle</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.intptr\" data-linktype=\"relative-path\">IntPtr</a> that contains the handle of the object.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>objid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An Int that defines the type of object that the <code>handle</code> parameter refers to.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Creates an accessible object with the methods and properties for the specified type of system-provided user interface element.  </p>\n<p> Server applications can call this function when they contain a custom UI object that is similar to a system-provided object. Server applications call <code>CreateStdAccessibleObject</code> and override the <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> methods and properties as needed to match their custom object. This approach saves server developers the work of fully implementing all the <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> properties and methods.  </p>\n<p> Valid <code>objid</code> values.  </p>\n<table>\n<thead>\n<tr>\n<th>Object</th>\n<th>Value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ALERT</td>\n<td>0xFFFFFFF6</td>\n<td>Refers to a message associated with a window or application.</td>\n</tr>\n<tr>\n<td>CARET</td>\n<td>0xFFFFFFF8</td>\n<td>Refers to the text insertion bar (caret) in the window.</td>\n</tr>\n<tr>\n<td>CLIENT</td>\n<td>0xFFFFFFFC</td>\n<td>Refers to the window&#39;s client area. In most cases, the operating system controls the frame elements, and the client object contains all elements that the application controls.</td>\n</tr>\n<tr>\n<td>CURSOR</td>\n<td>0xFFFFFFF7</td>\n<td>Refers to the mouse pointer. There is only one mouse pointer in the system and it is not a child of a window.</td>\n</tr>\n<tr>\n<td>HSCROLL</td>\n<td>0xFFFFFFFA</td>\n<td>Refers to the window&#39;s horizontal scroll bar.</td>\n</tr>\n<tr>\n<td>MENU</td>\n<td>0xFFFFFFFD</td>\n<td>Refers to the window&#39;s menu bar.</td>\n</tr>\n<tr>\n<td>SIZEGRIP</td>\n<td>0xFFFFFFF9</td>\n<td>Refers to the window&#39;s size grip, an optional frame component located at the lower right corner of the window frame.</td>\n</tr>\n<tr>\n<td>SOUND</td>\n<td>0xFFFFFFF5</td>\n<td>Refers to a sound object. Sound objects do not have screen locations or children, but do have name and state attributes. They are children of the application playing the sound.</td>\n</tr>\n<tr>\n<td>SYSMENU</td>\n<td>0xFFFFFFFF</td>\n<td>Refers to the window&#39;s system menu.</td>\n</tr>\n<tr>\n<td>TITLEBAR</td>\n<td>0xFFFFFFFE</td>\n<td>Refers to the window&#39;s title bar.</td>\n</tr>\n<tr>\n<td>VSCROLL</td>\n<td>0xFFFFFFFB</td>\n<td>Refers to the window&#39;s vertical scroll bar.</td>\n</tr>\n<tr>\n<td>WINDOW</td>\n<td>0x00000000</td>\n<td>Refers to the window itself rather than to a child object.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accChildCount\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accChildCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.accChildCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of child interfaces that belong to this object. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accChildCount*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int Accessibility.IAccessible.accChildCount { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of child accessible objects that belong to this object. If the object has no child objects, this value is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accDoDefaultAction_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accDoDefaultAction_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.accDoDefaultAction(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Performs the specified object&#39;s default action. Not all objects have a default action. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accDoDefaultAction*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IAccessible.accDoDefaultAction (object childID);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>childID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The child ID in the <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> interface/child ID pair that represents the accessible object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accFocus\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accFocus_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.accFocus</div>        \r\n          </div>\r\n    \r\n            <p>Gets the object that has the keyboard focus. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accFocus*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object Accessibility.IAccessible.accFocus { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The object that has keyboard focus.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The return value type of the IAccessible.accFocus property depends on the object that has keyboard focus. The following table describes the object types that the IAccessible.accFocus property returns.  </p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>null</code></td>\n<td>This object does not have the keyboard focus itself and does not contain a child that has the keyboard focus.</td>\n</tr>\n<tr>\n<td>integer</td>\n<td>0 if the current object has keyboard focus; otherwise, the child ID of the child accessible object with keyboard focus.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a></td>\n<td>The child accessible object that has the keyboard focus.</td>\n</tr>\n</tbody>\n</table>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accHitTest_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accHitTest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.accHitTest(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the child object at the specified screen coordinates. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accHitTest*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object IAccessible.accHitTest (int xLeft, int yTop);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>xLeft</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The horizontal coordinate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>yTop</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The vertical coordinate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The accessible object at the point specified by <code>xLeft</code> and <code>yTop</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table describes the object types that the IAccessible.accHitTest method can return.  </p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a></td>\n<td>The accessible object at the specified direction.</td>\n</tr>\n<tr>\n<td>integer</td>\n<td>0 if the point specified is either the current object or outside the objectâ€™s boundaries; otherwise, the child ID that identifies the accessible object at the specified direction.</td>\n</tr>\n</tbody>\n</table>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accLocation_System_Int32__System_Int32__System_Int32__System_Int32__System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accLocation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.accLocation(Int32,Int32,Int32,Int32,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the object&#39;s current screen location. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accLocation*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IAccessible.accLocation (out int pxLeft, out int pyTop, out int pcxWidth, out int pcyHeight, object childID);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pxLeft</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains the x-coordinate of the objectâ€™s left edge. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pyTop</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains the y-coordinate of the objectâ€™s top edge. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pcxWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains the width of the object. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>pcyHeight</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains the height of the object. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>childID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The ID number of the accessible object. This parameter is 0 to get the location of the object, or a child ID to get the location of one of the object&#39;s child objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accNavigate_System_Int32_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accNavigate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.accNavigate(Int32,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Navigates to an accessible object relative to the current object. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accNavigate*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object IAccessible.accNavigate (int navDir, object childID);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>navDir</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.accessiblenavigation\" data-linktype=\"relative-path\">AccessibleNavigation</a> enumerations that specifies the direction to navigate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>childID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The ID number of the accessible object. This parameter is 0 to start from the object, or a child ID to start from one of the object&#39;s child objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The accessible object positioned at the value specified by <code>navDir</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table describes the object types that the IAccessible.accNavigate method can return.  </p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>null</code></td>\n<td>There is not an accessible object at the specified direction.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a></td>\n<td>The accessible object at the specified direction.</td>\n</tr>\n<tr>\n<td>integer</td>\n<td>The child ID that identifies the accessible object at the specified direction. Use the parent <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> and the child ID to access the accessible object.</td>\n</tr>\n</tbody>\n</table>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accParent\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accParent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.accParent</div>        \r\n          </div>\r\n    \r\n            <p>Gets the parent accessible object of this object. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accParent*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object Accessibility.IAccessible.accParent { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> that represents the parent of the accessible object, or <code>null</code> if there is no parent object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> interface..</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accSelect_System_Int32_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accSelect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.accSelect(Int32,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Modifies the selection or moves the keyboard focus of the accessible object. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accSelect*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IAccessible.accSelect (int flagsSelect, object childID);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>flagsSelect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>childID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The ID number of the accessible object on which to perform the selection. This parameter is 0 to select the object, or a child ID to select one of the object&#39;s child objects.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following describes which <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a> values to specify when calling <code>Select</code> to perform complex selection operations.  </p>\n<table>\n<thead>\n<tr>\n<th>Operation</th>\n<th>Flag Combination</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>To simulate a click</td>\n<td><a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a> OR <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a></td>\n</tr>\n<tr>\n<td>To select a target item by simulating CTRL+click</td>\n<td><a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a> OR <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a></td>\n</tr>\n<tr>\n<td>To cancel selection of a target item by simulating CTRL+click</td>\n<td><a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a> OR <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a></td>\n</tr>\n<tr>\n<td>To simulate SHIFT+click</td>\n<td><a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a> OR <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a></td>\n</tr>\n<tr>\n<td>To select a range of objects and put focus on the last object</td>\n<td>Specify <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a> on the starting object to set the selection anchor. Then call Select again and specify <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a> OR <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a> on the last object.</td>\n</tr>\n<tr>\n<td>To deselect all objects</td>\n<td>Specify <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a> on any object. This flag deselects all selected objects except the one just selected. Then call Select again and specify <a class=\"xref\" href=\"system.windows.forms.accessibleselection\" data-linktype=\"relative-path\">AccessibleSelection</a> on the same object.</td>\n</tr>\n</tbody>\n</table>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accSelection\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_accSelection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.accSelection</div>        \r\n          </div>\r\n    \r\n            <p>Gets the selected child objects of an accessible object. For a description of this member, see <span class=\"xref\">cessibility.IAccessible.accSelection*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object Accessibility.IAccessible.accSelection { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The selected child objects of an accessible object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table describes the object types that the IAccessible.accSelection property returns  </p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>null</code></td>\n<td>No child objects are selected.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a></td>\n<td>The child accessible object that is selected.</td>\n</tr>\n<tr>\n<td>integer</td>\n<td>The child ID that identifies the accessible object that is selected. Use the parent <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> and the child ID to access the accessible object.</td>\n</tr>\n<tr>\n<td><code>IEnumVARIANT</code></td>\n<td>A list of child objects that are selected.</td>\n</tr>\n</tbody>\n</table>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"accessibility.iaccessible\" data-linktype=\"relative-path\">IAccessible</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accChild_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accChild_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.get_accChild(Object)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object IAccessible.get_accChild (object childID);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>childID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accDefaultAction_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accDefaultAction_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.get_accDefaultAction(Object)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string IAccessible.get_accDefaultAction (object childID);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>childID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accDescription_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accDescription_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.get_accDescription(Object)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string IAccessible.get_accDescription (object childID);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>childID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accHelp_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accHelp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.get_accHelp(Object)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string IAccessible.get_accHelp (object childID);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>childID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accHelpTopic_System_String__System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accHelpTopic_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.get_accHelpTopic(String,Object)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int IAccessible.get_accHelpTopic (out string pszHelpFile, object childID);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pszHelpFile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>childID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accKeyboardShortcut_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accKeyboardShortcut_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.get_accKeyboardShortcut(Object)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string IAccessible.get_accKeyboardShortcut (object childID);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>childID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accName_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.get_accName(Object)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string IAccessible.get_accName (object childID);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>childID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accRole_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accRole_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.get_accRole(Object)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object IAccessible.get_accRole (object childID);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>childID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accState_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.get_accState(Object)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object IAccessible.get_accState (object childID);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>childID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accValue_System_Object_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_get_accValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.get_accValue(Object)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">string IAccessible.get_accValue (object childID);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>childID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_set_accName_System_Object_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_set_accName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.set_accName(Object,String)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IAccessible.set_accName (object childID, string newName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>childID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>newName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_set_accValue_System_Object_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_Accessibility_IAccessible_set_accValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IAccessible.set_accValue(Object,String)</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void IAccessible.set_accValue (object childID, string newValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>childID</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>newValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetField_System_String_System_Reflection_BindingFlags_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetField_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IReflect.GetField(String,BindingFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <a class=\"xref\" href=\"system.reflection.fieldinfo\" data-linktype=\"relative-path\">FieldInfo</a> object corresponding to the specified field and binding flag. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetField*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Reflection.FieldInfo IReflect.GetField (string name, System.Reflection.BindingFlags bindingAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the field to find.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>bindingAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The binding attributes used to control the search.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.fieldinfo\" data-linktype=\"relative-path\">FieldInfo</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.reflection.fieldinfo\" data-linktype=\"relative-path\">FieldInfo</a> object containing the field information for the named object that meets the search constraints specified in <code>bindingAttr</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.ambiguousmatchexception\" data-linktype=\"relative-path\">AmbiguousMatchException</a></div>\r\n                  </div>\r\n                  <p>The object implements multiple fields with the same name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"system.reflection.ireflect\" data-linktype=\"relative-path\">IReflect</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetFields_System_Reflection_BindingFlags_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetFields_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IReflect.GetFields(BindingFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Gets an array of <a class=\"xref\" href=\"system.reflection.fieldinfo\" data-linktype=\"relative-path\">FieldInfo</a> objects corresponding to all fields of the current class. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetFields*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Reflection.FieldInfo[] IReflect.GetFields (System.Reflection.BindingFlags bindingAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>bindingAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The binding attributes used to control the search.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.fieldinfo\" data-linktype=\"relative-path\">FieldInfo</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.reflection.fieldinfo\" data-linktype=\"relative-path\">FieldInfo</a> objects containing all the field information for this reflection object that meets the search constraints specified in <code>bindingAttr</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Each field must have a unique name. The <a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">System.Reflection.BindingFlags</a> flag specifies that nonpublic fields are included in the search. The <a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">System.Reflection.BindingFlags</a> flag specifies that public fields are included in the search.  </p>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"system.reflection.ireflect\" data-linktype=\"relative-path\">IReflect</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetMember_System_String_System_Reflection_BindingFlags_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetMember_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IReflect.GetMember(String,BindingFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Gets an array of <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> objects corresponding to all public members or to all members that match a specified name. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetMember*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Reflection.MemberInfo[] IReflect.GetMember (string name, System.Reflection.BindingFlags bindingAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the member to find.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>bindingAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The binding attributes used to control the search.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> objects matching the name parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"system.reflection.ireflect\" data-linktype=\"relative-path\">IReflect</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetMembers_System_Reflection_BindingFlags_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetMembers_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IReflect.GetMembers(BindingFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Gets an array of <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> objects corresponding either to all public members or to all members of the current class. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetMembers*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Reflection.MemberInfo[] IReflect.GetMembers (System.Reflection.BindingFlags bindingAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>bindingAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The binding attributes used to control the search.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.reflection.memberinfo\" data-linktype=\"relative-path\">MemberInfo</a> objects containing all the member information for this reflection object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"system.reflection.ireflect\" data-linktype=\"relative-path\">IReflect</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetMethod_System_String_System_Reflection_BindingFlags_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IReflect.GetMethod(String,BindingFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> object corresponding to a specified method under specified search constraints. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetMethod*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the member to find.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>bindingAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The binding attributes used to control the search.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> object containing the method information, with the match being based on the method name and search constraints specified in <code>bindingAttr</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.ambiguousmatchexception\" data-linktype=\"relative-path\">AmbiguousMatchException</a></div>\r\n                  </div>\r\n                  <p>The object implements multiple methods with the same name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"system.reflection.ireflect\" data-linktype=\"relative-path\">IReflect</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetMethod_System_String_System_Reflection_BindingFlags_System_Reflection_Binder_System_Type___System_Reflection_ParameterModifier___\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetMethod_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IReflect.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> object corresponding to a specified method, using a Type array to choose from among overloaded methods. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetMethod*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Reflection.MethodInfo IReflect.GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the member to find.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>bindingAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The binding attributes used to control the search.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>binder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.binder\" data-linktype=\"relative-path\">Binder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that implements <a class=\"xref\" href=\"system.reflection.binder\" data-linktype=\"relative-path\">Binder</a>, containing properties related to this method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>types</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array used to choose among overloaded methods.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>modifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.parametermodifier\" data-linktype=\"relative-path\">ParameterModifier</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a></div>\r\n                  </div>\r\n                  <p>The requested method that matches all the specified parameters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.ambiguousmatchexception\" data-linktype=\"relative-path\">AmbiguousMatchException</a></div>\r\n                  </div>\r\n                  <p>The object implements multiple methods with the same name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The return value is a match based on the method name, the <a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">System.Reflection.BindingFlags</a> enumeration, the kind of type conversion specified by the <code>binder</code> parameter, the overload, and the <a class=\"xref\" href=\"system.reflection.parameterinfo\" data-linktype=\"relative-path\">System.Reflection.ParameterInfo</a> that describes the signature of the method.  </p>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"system.reflection.ireflect\" data-linktype=\"relative-path\">IReflect</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetMethods_System_Reflection_BindingFlags_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetMethods_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IReflect.GetMethods(BindingFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Gets an array of <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> objects with all public methods or all methods of the current class. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetMethods*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Reflection.MethodInfo[] IReflect.GetMethods (System.Reflection.BindingFlags bindingAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>bindingAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The binding attributes used to control the search.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.reflection.methodinfo\" data-linktype=\"relative-path\">MethodInfo</a> objects containing all the methods defined for this reflection object that meet the search constraints specified in <code>bindingAttr</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"system.reflection.ireflect\" data-linktype=\"relative-path\">IReflect</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetProperties_System_Reflection_BindingFlags_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetProperties_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IReflect.GetProperties(BindingFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Gets an array of <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> objects corresponding to all public properties or to all properties of the current class. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetProperties*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Reflection.PropertyInfo[] IReflect.GetProperties (System.Reflection.BindingFlags bindingAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>bindingAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The binding attribute used to control the search.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a>[]</div>\r\n                  </div>\r\n                  <p>An array of <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> objects for all the properties defined on the reflection object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"system.reflection.ireflect\" data-linktype=\"relative-path\">IReflect</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetProperty_System_String_System_Reflection_BindingFlags_\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetProperty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IReflect.GetProperty(String,BindingFlags)</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> object corresponding to a specified property under specified search constraints. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetProperty*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the property to find.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>bindingAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The binding attributes used to control the search.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> object for the located property that meets the search constraints specified in <code>bindingAttr</code>, or <code>null</code> if the property was not located.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.ambiguousmatchexception\" data-linktype=\"relative-path\">AmbiguousMatchException</a></div>\r\n                  </div>\r\n                  <p>The object implements multiple methods with the same name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"system.reflection.ireflect\" data-linktype=\"relative-path\">IReflect</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetProperty_System_String_System_Reflection_BindingFlags_System_Reflection_Binder_System_Type_System_Type___System_Reflection_ParameterModifier___\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_GetProperty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IReflect.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> object corresponding to a specified property with specified search constraints. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.GetProperty*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Reflection.PropertyInfo IReflect.GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the member to find.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>bindingAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The binding attributes used to control the search.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>binder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.binder\" data-linktype=\"relative-path\">Binder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that implements Binder, containing properties related to this method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>returnType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array used to choose among overloaded methods.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>types</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>modifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.parametermodifier\" data-linktype=\"relative-path\">ParameterModifier</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array used to choose the parameter modifiers.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.reflection.propertyinfo\" data-linktype=\"relative-path\">PropertyInfo</a> object for the located property, if a property with the specified name was located in this reflection object, or <code>null</code> if the property was not located.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"system.reflection.ireflect\" data-linktype=\"relative-path\">IReflect</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_InvokeMember_System_String_System_Reflection_BindingFlags_System_Reflection_Binder_System_Object_System_Object___System_Reflection_ParameterModifier___System_Globalization_CultureInfo_System_String___\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_InvokeMember_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IReflect.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])</div>        \r\n          </div>\r\n    \r\n            <p>Invokes a specified member. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.InvokeMember*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object IReflect.InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the member to find.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>invokeAttr</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a> invocation attributes.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>binder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.binder\" data-linktype=\"relative-path\">Binder</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.reflection.bindingflags\" data-linktype=\"relative-path\">BindingFlags</a> bit flags. Implements Binder, containing properties related to this method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>target</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object on which to invoke the specified member. This parameter is ignored for static members.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>args</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of objects that contains the number, order, and type of the parameters of the member to be invoked. This is an empty array if there are no parameters.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>modifiers</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.parametermodifier\" data-linktype=\"relative-path\">ParameterModifier</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.reflection.parametermodifier\" data-linktype=\"relative-path\">ParameterModifier</a> objects.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>culture</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> used to govern the coercion of types.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>namedParameters</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A String array of parameters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The specified member.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>More than one argument is specified for a field set operation.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.missingfieldexception\" data-linktype=\"relative-path\">MissingFieldException</a></div>\r\n                  </div>\r\n                  <p>The field or property cannot be found.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.missingmethodexception\" data-linktype=\"relative-path\">MissingMethodException</a></div>\r\n                  </div>\r\n                  <p>The method cannot be found.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>A private member is invoked without the necessary <a class=\"xref\" href=\"system.security.permissions.reflectionpermission\" data-linktype=\"relative-path\">ReflectionPermission</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>invokeAttr</code> parameter may be a constructor, method, property, or field. A suitable invocation attribute must be specified. Invoke the default member of a class by passing the empty string (&quot;&quot;) as the name of the member.  </p>\n<p> The <code>modifiers</code> parameter has the same length as the <code>args</code> parameter, representing the invoked member&#39;s argument attributes in the metadata. A parameter can have the following attributes: pdIn, pdOut, pdRetval, pdOptional, and pdHasDefault. These represent [In], [Out], [retval], [optional], and a default parameter, respectively.  </p>\n<p> This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"system.reflection.ireflect\" data-linktype=\"relative-path\">IReflect</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_UnderlyingSystemType\">\r\n    \r\n            <a id=\"System_Windows_Forms_AccessibleObject_System_Reflection_IReflect_UnderlyingSystemType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IReflect.UnderlyingSystemType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the underlying type that represents the <a class=\"xref\" href=\"system.reflection.ireflect\" data-linktype=\"relative-path\">IReflect</a> object. For a description of this member, see <span class=\"xref\">stem.Reflection.IReflect.UnderlyingSystemType*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">Type System.Reflection.IReflect.UnderlyingSystemType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </div>\r\n                  <p>The underlying type that represents the <a class=\"xref\" href=\"system.reflection.ireflect\" data-linktype=\"relative-path\">IReflect</a> object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> instance is cast to an <a class=\"xref\" href=\"system.reflection.ireflect\" data-linktype=\"relative-path\">IReflect</a> interface.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.AccessibleObject.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.AccessibleObject.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.accChildCount\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.accDoDefaultAction\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.accFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.accHitTest\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.accLocation\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.accNavigate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.accParent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.accSelect\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.accSelection\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.get_accChild\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.get_accDefaultAction\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.get_accDescription\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.get_accHelp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.get_accHelpTopic\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.get_accKeyboardShortcut\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.get_accName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.get_accRole\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.get_accState\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.get_accValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.set_accName\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IAccessible.set_accValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.Bounds\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.DefaultAction\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.Description\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.DoDefaultAction\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.GetChild\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.GetChildCount\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.GetFocused\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.GetHelpTopic\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.GetSelected\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.Help\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.HitTest\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.KeyboardShortcut\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.Name\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.Navigate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.Parent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.Role\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.Select\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.State\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IReflect.GetField\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IReflect.GetFields\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IReflect.GetMember\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IReflect.GetMembers\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IReflect.GetMethod\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IReflect.GetMethods\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IReflect.GetProperties\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IReflect.GetProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IReflect.InvokeMember\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.IReflect.UnderlyingSystemType\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.AccessibleObject.Value\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"240a27c8-f751-31f8-485c-19705c964091\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides information that accessibility applications use to adjust an application&amp;#39;s user interface (UI) for users with impairments.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.AccessibleObject\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.AccessibleObject.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.AccessibleObject.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.AccessibleObject","System.Windows.Forms.AccessibleObject..ctor","System.Windows.Forms.AccessibleObject.IAccessible.accChildCount","System.Windows.Forms.AccessibleObject.IAccessible.accDoDefaultAction","System.Windows.Forms.AccessibleObject.IAccessible.accFocus","System.Windows.Forms.AccessibleObject.IAccessible.accHitTest","System.Windows.Forms.AccessibleObject.IAccessible.accLocation","System.Windows.Forms.AccessibleObject.IAccessible.accNavigate","System.Windows.Forms.AccessibleObject.IAccessible.accParent","System.Windows.Forms.AccessibleObject.IAccessible.accSelect","System.Windows.Forms.AccessibleObject.IAccessible.accSelection","System.Windows.Forms.AccessibleObject.IAccessible.get_accChild","System.Windows.Forms.AccessibleObject.IAccessible.get_accDefaultAction","System.Windows.Forms.AccessibleObject.IAccessible.get_accDescription","System.Windows.Forms.AccessibleObject.IAccessible.get_accHelp","System.Windows.Forms.AccessibleObject.IAccessible.get_accHelpTopic","System.Windows.Forms.AccessibleObject.IAccessible.get_accKeyboardShortcut","System.Windows.Forms.AccessibleObject.IAccessible.get_accName","System.Windows.Forms.AccessibleObject.IAccessible.get_accRole","System.Windows.Forms.AccessibleObject.IAccessible.get_accState","System.Windows.Forms.AccessibleObject.IAccessible.get_accValue","System.Windows.Forms.AccessibleObject.IAccessible.set_accName","System.Windows.Forms.AccessibleObject.IAccessible.set_accValue","System.Windows.Forms.AccessibleObject.Bounds","System.Windows.Forms.AccessibleObject.DefaultAction","System.Windows.Forms.AccessibleObject.Description","System.Windows.Forms.AccessibleObject.DoDefaultAction","System.Windows.Forms.AccessibleObject.GetChild","System.Windows.Forms.AccessibleObject.GetChildCount","System.Windows.Forms.AccessibleObject.GetFocused","System.Windows.Forms.AccessibleObject.GetHelpTopic","System.Windows.Forms.AccessibleObject.GetSelected","System.Windows.Forms.AccessibleObject.Help","System.Windows.Forms.AccessibleObject.HitTest","System.Windows.Forms.AccessibleObject.KeyboardShortcut","System.Windows.Forms.AccessibleObject.Name","System.Windows.Forms.AccessibleObject.Navigate","System.Windows.Forms.AccessibleObject.Parent","System.Windows.Forms.AccessibleObject.Role","System.Windows.Forms.AccessibleObject.Select","System.Windows.Forms.AccessibleObject.State","System.Windows.Forms.AccessibleObject.IReflect.GetField","System.Windows.Forms.AccessibleObject.IReflect.GetFields","System.Windows.Forms.AccessibleObject.IReflect.GetMember","System.Windows.Forms.AccessibleObject.IReflect.GetMembers","System.Windows.Forms.AccessibleObject.IReflect.GetMethod","System.Windows.Forms.AccessibleObject.IReflect.GetMethods","System.Windows.Forms.AccessibleObject.IReflect.GetProperties","System.Windows.Forms.AccessibleObject.IReflect.GetProperty","System.Windows.Forms.AccessibleObject.IReflect.InvokeMember","System.Windows.Forms.AccessibleObject.IReflect.UnderlyingSystemType","System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects","System.Windows.Forms.AccessibleObject.Value"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.AccessibleObject","System::Windows::Forms::AccessibleObject","System.Windows.Forms.AccessibleObject.#ctor","System::Windows::Forms::AccessibleObject::#ctor","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accChildCount","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#accChildCount","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accDoDefaultAction","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#accDoDefaultAction","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accFocus","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#accFocus","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accHitTest","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#accHitTest","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accLocation","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#accLocation","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accNavigate","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#accNavigate","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accParent","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#accParent","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelect","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#accSelect","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#accSelection","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#accSelection","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accChild","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#get_accChild","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDefaultAction","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#get_accDefaultAction","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accDescription","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#get_accDescription","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelp","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#get_accHelp","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accHelpTopic","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#get_accHelpTopic","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accKeyboardShortcut","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#get_accKeyboardShortcut","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accName","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#get_accName","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accRole","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#get_accRole","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accState","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#get_accState","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#get_accValue","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#get_accValue","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accName","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#set_accName","System.Windows.Forms.AccessibleObject.Accessibility#IAccessible#set_accValue","System::Windows::Forms::AccessibleObject::Accessibility#IAccessible#set_accValue","System.Windows.Forms.AccessibleObject.Bounds","System::Windows::Forms::AccessibleObject::Bounds","System.Windows.Forms.AccessibleObject.DefaultAction","System::Windows::Forms::AccessibleObject::DefaultAction","System.Windows.Forms.AccessibleObject.Description","System::Windows::Forms::AccessibleObject::Description","System.Windows.Forms.AccessibleObject.DoDefaultAction","System::Windows::Forms::AccessibleObject::DoDefaultAction","System.Windows.Forms.AccessibleObject.GetChild","System::Windows::Forms::AccessibleObject::GetChild","System.Windows.Forms.AccessibleObject.GetChildCount","System::Windows::Forms::AccessibleObject::GetChildCount","System.Windows.Forms.AccessibleObject.GetFocused","System::Windows::Forms::AccessibleObject::GetFocused","System.Windows.Forms.AccessibleObject.GetHelpTopic","System::Windows::Forms::AccessibleObject::GetHelpTopic","System.Windows.Forms.AccessibleObject.GetSelected","System::Windows::Forms::AccessibleObject::GetSelected","System.Windows.Forms.AccessibleObject.Help","System::Windows::Forms::AccessibleObject::Help","System.Windows.Forms.AccessibleObject.HitTest","System::Windows::Forms::AccessibleObject::HitTest","System.Windows.Forms.AccessibleObject.KeyboardShortcut","System::Windows::Forms::AccessibleObject::KeyboardShortcut","System.Windows.Forms.AccessibleObject.Name","System::Windows::Forms::AccessibleObject::Name","System.Windows.Forms.AccessibleObject.Navigate","System::Windows::Forms::AccessibleObject::Navigate","System.Windows.Forms.AccessibleObject.Parent","System::Windows::Forms::AccessibleObject::Parent","System.Windows.Forms.AccessibleObject.Role","System::Windows::Forms::AccessibleObject::Role","System.Windows.Forms.AccessibleObject.Select","System::Windows::Forms::AccessibleObject::Select","System.Windows.Forms.AccessibleObject.State","System::Windows::Forms::AccessibleObject::State","System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetField","System::Windows::Forms::AccessibleObject::System#Reflection#IReflect#GetField","System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetFields","System::Windows::Forms::AccessibleObject::System#Reflection#IReflect#GetFields","System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMember","System::Windows::Forms::AccessibleObject::System#Reflection#IReflect#GetMember","System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMembers","System::Windows::Forms::AccessibleObject::System#Reflection#IReflect#GetMembers","System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethod","System::Windows::Forms::AccessibleObject::System#Reflection#IReflect#GetMethod","System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetMethods","System::Windows::Forms::AccessibleObject::System#Reflection#IReflect#GetMethods","System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperties","System::Windows::Forms::AccessibleObject::System#Reflection#IReflect#GetProperties","System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#GetProperty","System::Windows::Forms::AccessibleObject::System#Reflection#IReflect#GetProperty","System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#InvokeMember","System::Windows::Forms::AccessibleObject::System#Reflection#IReflect#InvokeMember","System.Windows.Forms.AccessibleObject.System#Reflection#IReflect#UnderlyingSystemType","System::Windows::Forms::AccessibleObject::System#Reflection#IReflect#UnderlyingSystemType","System.Windows.Forms.AccessibleObject.UseStdAccessibleObjects","System::Windows::Forms::AccessibleObject::UseStdAccessibleObjects","System.Windows.Forms.AccessibleObject.Value","System::Windows::Forms::AccessibleObject::Value"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"240a27c8-f751-31f8-485c-19705c964091","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/AccessibleObject.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"AccessibleObject class | Microsoft Docs","_op_ogTitle":"AccessibleObject class","description":"Provides information that accessibility applications use to adjust an application&#39;s user interface (UI) for users with impairments.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.AccessibleObject","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.accessibleobject","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.accessibleobject","fileRelativePath":"System.Windows.Forms.AccessibleObject.html"},"themesRelativePathToOutputRoot":"_themes/"}