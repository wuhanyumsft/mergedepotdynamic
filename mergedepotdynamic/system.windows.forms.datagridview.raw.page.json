{"content":"    \r\n    <h1 id=\"System_Windows_Forms_DataGridView\">\r\n      <span class=\"lang-csharp\">DataGridView</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Displays data in a customizable grid.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.ComplexBindingProperties(&quot;DataSource&quot;, &quot;DataMember&quot;)]\n[System.ComponentModel.DefaultEvent(&quot;CellContentClick&quot;)]\n[System.ComponentModel.Designer(&quot;System.Windows.Forms.Design.DataGridViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;)]\n[System.ComponentModel.Editor(&quot;System.Windows.Forms.Design.DataGridViewComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;, typeof(System.ComponentModel.ComponentEditor))]\n[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n[System.Runtime.InteropServices.ComVisible(true)]\n[System.Windows.Forms.Docking(System.Windows.Forms.DockingBehavior.Ask)]\npublic class DataGridView : System.Windows.Forms.Control, System.ComponentModel.ISupportInitialize</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">System.Windows.Forms.Control</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l4\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">DataGridView</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibilityNotifyClients_System_Windows_Forms_AccessibleEvents_System_Int32_\" data-linktype=\"relative-path\">AccessibilityNotifyClients(AccessibleEvents,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibilityNotifyClients_System_Windows_Forms_AccessibleEvents_System_Int32_System_Int32_\" data-linktype=\"relative-path\">AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibilityObject\" data-linktype=\"relative-path\">AccessibilityObject</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleDefaultActionDescription\" data-linktype=\"relative-path\">AccessibleDefaultActionDescription</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleDescription\" data-linktype=\"relative-path\">AccessibleDescription</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleName\" data-linktype=\"relative-path\">AccessibleName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibleRole\" data-linktype=\"relative-path\">AccessibleRole</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AllowDrop\" data-linktype=\"relative-path\">AllowDrop</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Anchor\" data-linktype=\"relative-path\">Anchor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AutoScrollOffset\" data-linktype=\"relative-path\">AutoScrollOffset</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AutoSizeChanged\" data-linktype=\"relative-path\">AutoSizeChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BeginInvoke_System_Delegate_\" data-linktype=\"relative-path\">BeginInvoke(Delegate)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BeginInvoke_System_Delegate_System_Object___\" data-linktype=\"relative-path\">BeginInvoke(Delegate,Object[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BindingContext\" data-linktype=\"relative-path\">BindingContext</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BindingContextChanged\" data-linktype=\"relative-path\">BindingContextChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Bottom\" data-linktype=\"relative-path\">Bottom</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Bounds\" data-linktype=\"relative-path\">Bounds</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BringToFront\" data-linktype=\"relative-path\">BringToFront()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CanFocus\" data-linktype=\"relative-path\">CanFocus</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CanSelect\" data-linktype=\"relative-path\">CanSelect</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Capture\" data-linktype=\"relative-path\">Capture</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidation\" data-linktype=\"relative-path\">CausesValidation</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CausesValidationChanged\" data-linktype=\"relative-path\">CausesValidationChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ChangeUICues\" data-linktype=\"relative-path\">ChangeUICues</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CheckForIllegalCrossThreadCalls\" data-linktype=\"relative-path\">CheckForIllegalCrossThreadCalls</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ClientRectangle\" data-linktype=\"relative-path\">ClientRectangle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ClientSize\" data-linktype=\"relative-path\">ClientSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ClientSizeChanged\" data-linktype=\"relative-path\">ClientSizeChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CompanyName\" data-linktype=\"relative-path\">CompanyName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Contains_System_Windows_Forms_Control_\" data-linktype=\"relative-path\">Contains(Control)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContainsFocus\" data-linktype=\"relative-path\">ContainsFocus</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenu\" data-linktype=\"relative-path\">ContextMenu</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenuChanged\" data-linktype=\"relative-path\">ContextMenuChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenuStrip\" data-linktype=\"relative-path\">ContextMenuStrip</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenuStripChanged\" data-linktype=\"relative-path\">ContextMenuStripChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ControlAdded\" data-linktype=\"relative-path\">ControlAdded</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ControlRemoved\" data-linktype=\"relative-path\">ControlRemoved</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls\" data-linktype=\"relative-path\">Controls</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateControl\" data-linktype=\"relative-path\">CreateControl()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Created\" data-linktype=\"relative-path\">Created</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateGraphics\" data-linktype=\"relative-path\">CreateGraphics()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateHandle\" data-linktype=\"relative-path\">CreateHandle()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CreateParams\" data-linktype=\"relative-path\">CreateParams</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Cursor\" data-linktype=\"relative-path\">Cursor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CursorChanged\" data-linktype=\"relative-path\">CursorChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DataBindings\" data-linktype=\"relative-path\">DataBindings</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultBackColor\" data-linktype=\"relative-path\">DefaultBackColor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultCursor\" data-linktype=\"relative-path\">DefaultCursor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultFont\" data-linktype=\"relative-path\">DefaultFont</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultForeColor\" data-linktype=\"relative-path\">DefaultForeColor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultImeMode\" data-linktype=\"relative-path\">DefaultImeMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultMargin\" data-linktype=\"relative-path\">DefaultMargin</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultMaximumSize\" data-linktype=\"relative-path\">DefaultMaximumSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultMinimumSize\" data-linktype=\"relative-path\">DefaultMinimumSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefaultPadding\" data-linktype=\"relative-path\">DefaultPadding</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DefWndProc_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">DefWndProc(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DestroyHandle\" data-linktype=\"relative-path\">DestroyHandle()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Disposing\" data-linktype=\"relative-path\">Disposing</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Dock\" data-linktype=\"relative-path\">Dock</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DockChanged\" data-linktype=\"relative-path\">DockChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoDragDrop_System_Object_System_Windows_Forms_DragDropEffects_\" data-linktype=\"relative-path\">DoDragDrop(Object,DragDropEffects)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleBuffered\" data-linktype=\"relative-path\">DoubleBuffered</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragDrop\" data-linktype=\"relative-path\">DragDrop</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragEnter\" data-linktype=\"relative-path\">DragEnter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragLeave\" data-linktype=\"relative-path\">DragLeave</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DragOver\" data-linktype=\"relative-path\">DragOver</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DrawToBitmap_System_Drawing_Bitmap_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">DrawToBitmap(Bitmap,Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enabled\" data-linktype=\"relative-path\">Enabled</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EnabledChanged\" data-linktype=\"relative-path\">EnabledChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EndInvoke_System_IAsyncResult_\" data-linktype=\"relative-path\">EndInvoke(IAsyncResult)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FindForm\" data-linktype=\"relative-path\">FindForm()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focus\" data-linktype=\"relative-path\">Focus()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Focused\" data-linktype=\"relative-path\">Focused</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FontHeight\" data-linktype=\"relative-path\">FontHeight</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FromChildHandle_System_IntPtr_\" data-linktype=\"relative-path\">FromChildHandle(IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_FromHandle_System_IntPtr_\" data-linktype=\"relative-path\">FromHandle(IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetAutoSizeMode\" data-linktype=\"relative-path\">GetAutoSizeMode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetChildAtPoint_System_Drawing_Point_\" data-linktype=\"relative-path\">GetChildAtPoint(Point)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetChildAtPoint_System_Drawing_Point_System_Windows_Forms_GetChildAtPointSkip_\" data-linktype=\"relative-path\">GetChildAtPoint(Point,GetChildAtPointSkip)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetContainerControl\" data-linktype=\"relative-path\">GetContainerControl()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetNextControl_System_Windows_Forms_Control_System_Boolean_\" data-linktype=\"relative-path\">GetNextControl(Control,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetPreferredSize_System_Drawing_Size_\" data-linktype=\"relative-path\">GetPreferredSize(Size)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetScaledBounds_System_Drawing_Rectangle_System_Drawing_SizeF_System_Windows_Forms_BoundsSpecified_\" data-linktype=\"relative-path\">GetScaledBounds(Rectangle,SizeF,BoundsSpecified)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetStyle_System_Windows_Forms_ControlStyles_\" data-linktype=\"relative-path\">GetStyle(ControlStyles)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GetTopLevel\" data-linktype=\"relative-path\">GetTopLevel()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Handle\" data-linktype=\"relative-path\">Handle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleCreated\" data-linktype=\"relative-path\">HandleCreated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleDestroyed\" data-linktype=\"relative-path\">HandleDestroyed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HasChildren\" data-linktype=\"relative-path\">HasChildren</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Height\" data-linktype=\"relative-path\">Height</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HelpRequested\" data-linktype=\"relative-path\">HelpRequested</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Hide\" data-linktype=\"relative-path\">Hide()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ImeMode\" data-linktype=\"relative-path\">ImeMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ImeModeBase\" data-linktype=\"relative-path\">ImeModeBase</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ImeModeChanged\" data-linktype=\"relative-path\">ImeModeChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InitLayout\" data-linktype=\"relative-path\">InitLayout()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate\" data-linktype=\"relative-path\">Invalidate()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Boolean_\" data-linktype=\"relative-path\">Invalidate(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">Invalidate(Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Drawing_Rectangle_System_Boolean_\" data-linktype=\"relative-path\">Invalidate(Rectangle,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Drawing_Region_\" data-linktype=\"relative-path\">Invalidate(Region)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_System_Drawing_Region_System_Boolean_\" data-linktype=\"relative-path\">Invalidate(Region,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidated\" data-linktype=\"relative-path\">Invalidated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_System_Delegate_\" data-linktype=\"relative-path\">Invoke(Delegate)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invoke_System_Delegate_System_Object___\" data-linktype=\"relative-path\">Invoke(Delegate,Object[])</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeGotFocus_System_Windows_Forms_Control_System_EventArgs_\" data-linktype=\"relative-path\">InvokeGotFocus(Control,EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeLostFocus_System_Windows_Forms_Control_System_EventArgs_\" data-linktype=\"relative-path\">InvokeLostFocus(Control,EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeOnClick_System_Windows_Forms_Control_System_EventArgs_\" data-linktype=\"relative-path\">InvokeOnClick(Control,EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokePaint_System_Windows_Forms_Control_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">InvokePaint(Control,PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokePaintBackground_System_Windows_Forms_Control_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">InvokePaintBackground(Control,PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_InvokeRequired\" data-linktype=\"relative-path\">InvokeRequired</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsAccessible\" data-linktype=\"relative-path\">IsAccessible</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsDisposed\" data-linktype=\"relative-path\">IsDisposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsHandleCreated\" data-linktype=\"relative-path\">IsHandleCreated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsKeyLocked_System_Windows_Forms_Keys_\" data-linktype=\"relative-path\">IsKeyLocked(Keys)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsMirrored\" data-linktype=\"relative-path\">IsMirrored</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_IsMnemonic_System_Char_System_String_\" data-linktype=\"relative-path\">IsMnemonic(Char,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LayoutEngine\" data-linktype=\"relative-path\">LayoutEngine</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Left\" data-linktype=\"relative-path\">Left</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Location\" data-linktype=\"relative-path\">Location</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LocationChanged\" data-linktype=\"relative-path\">LocationChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Margin\" data-linktype=\"relative-path\">Margin</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MarginChanged\" data-linktype=\"relative-path\">MarginChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MaximumSize\" data-linktype=\"relative-path\">MaximumSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MinimumSize\" data-linktype=\"relative-path\">MinimumSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ModifierKeys\" data-linktype=\"relative-path\">ModifierKeys</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseButtons\" data-linktype=\"relative-path\">MouseButtons</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseCaptureChanged\" data-linktype=\"relative-path\">MouseCaptureChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseClick\" data-linktype=\"relative-path\">MouseClick</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDoubleClick\" data-linktype=\"relative-path\">MouseDoubleClick</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseHover\" data-linktype=\"relative-path\">MouseHover</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MousePosition\" data-linktype=\"relative-path\">MousePosition</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseWheel\" data-linktype=\"relative-path\">MouseWheel</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Move\" data-linktype=\"relative-path\">Move</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Name\" data-linktype=\"relative-path\">Name</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_NotifyInvalidate_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">NotifyInvalidate(Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnAutoSizeChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnAutoSizeChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnBackColorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnBackColorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnBackgroundImageChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnBackgroundImageChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnBackgroundImageLayoutChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnBackgroundImageLayoutChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnCausesValidationChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnCausesValidationChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnChangeUICues_System_Windows_Forms_UICuesEventArgs_\" data-linktype=\"relative-path\">OnChangeUICues(UICuesEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnClick_System_EventArgs_\" data-linktype=\"relative-path\">OnClick(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnClientSizeChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnClientSizeChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnContextMenuChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnContextMenuChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnContextMenuStripChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnContextMenuStripChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnControlAdded_System_Windows_Forms_ControlEventArgs_\" data-linktype=\"relative-path\">OnControlAdded(ControlEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnControlRemoved_System_Windows_Forms_ControlEventArgs_\" data-linktype=\"relative-path\">OnControlRemoved(ControlEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnCreateControl\" data-linktype=\"relative-path\">OnCreateControl()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDockChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnDockChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDragDrop_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">OnDragDrop(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDragEnter_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">OnDragEnter(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDragLeave_System_EventArgs_\" data-linktype=\"relative-path\">OnDragLeave(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnDragOver_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">OnDragOver(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnGiveFeedback_System_Windows_Forms_GiveFeedbackEventArgs_\" data-linktype=\"relative-path\">OnGiveFeedback(GiveFeedbackEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnHelpRequested_System_Windows_Forms_HelpEventArgs_\" data-linktype=\"relative-path\">OnHelpRequested(HelpEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnImeModeChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnImeModeChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnInvalidated_System_Windows_Forms_InvalidateEventArgs_\" data-linktype=\"relative-path\">OnInvalidated(InvalidateEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnLocationChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnLocationChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMarginChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnMarginChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseCaptureChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnMouseCaptureChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMouseHover_System_EventArgs_\" data-linktype=\"relative-path\">OnMouseHover(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnMove_System_EventArgs_\" data-linktype=\"relative-path\">OnMove(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnNotifyMessage_System_Windows_Forms_Message_\" data-linktype=\"relative-path\">OnNotifyMessage(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPaddingChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnPaddingChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPaintBackground_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">OnPaintBackground(PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentBackColorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentBackColorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentBackgroundImageChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentBackgroundImageChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentBindingContextChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentBindingContextChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentCursorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentCursorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentEnabledChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentEnabledChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentFontChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentFontChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentForeColorChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentForeColorChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentRightToLeftChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentRightToLeftChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnParentVisibleChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnParentVisibleChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPreviewKeyDown_System_Windows_Forms_PreviewKeyDownEventArgs_\" data-linktype=\"relative-path\">OnPreviewKeyDown(PreviewKeyDownEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnPrint_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">OnPrint(PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnQueryContinueDrag_System_Windows_Forms_QueryContinueDragEventArgs_\" data-linktype=\"relative-path\">OnQueryContinueDrag(QueryContinueDragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnRegionChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnRegionChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnSizeChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnSizeChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnStyleChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnStyleChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnSystemColorsChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnSystemColorsChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnTabIndexChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnTabIndexChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnTabStopChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnTabStopChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnTextChanged_System_EventArgs_\" data-linktype=\"relative-path\">OnTextChanged(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_OnValidated_System_EventArgs_\" data-linktype=\"relative-path\">OnValidated(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Parent\" data-linktype=\"relative-path\">Parent</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ParentChanged\" data-linktype=\"relative-path\">ParentChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PerformLayout\" data-linktype=\"relative-path\">PerformLayout()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PerformLayout_System_Windows_Forms_Control_System_String_\" data-linktype=\"relative-path\">PerformLayout(Control,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PointToClient_System_Drawing_Point_\" data-linktype=\"relative-path\">PointToClient(Point)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PointToScreen_System_Drawing_Point_\" data-linktype=\"relative-path\">PointToScreen(Point)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreferredSize\" data-linktype=\"relative-path\">PreferredSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreProcessControlMessage_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">PreProcessControlMessage(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreProcessMessage_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">PreProcessMessage(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PreviewKeyDown\" data-linktype=\"relative-path\">PreviewKeyDown</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessCmdKey_System_Windows_Forms_Message__System_Windows_Forms_Keys_\" data-linktype=\"relative-path\">ProcessCmdKey(Message,Keys)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessDialogChar_System_Char_\" data-linktype=\"relative-path\">ProcessDialogChar(Char)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessKeyMessage_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">ProcessKeyMessage(Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessMnemonic_System_Char_\" data-linktype=\"relative-path\">ProcessMnemonic(Char)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProductName\" data-linktype=\"relative-path\">ProductName</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProductVersion\" data-linktype=\"relative-path\">ProductVersion</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_PropagatingImeMode\" data-linktype=\"relative-path\">PropagatingImeMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_QueryAccessibilityHelp\" data-linktype=\"relative-path\">QueryAccessibilityHelp</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_QueryContinueDrag\" data-linktype=\"relative-path\">QueryContinueDrag</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RaiseDragEvent_System_Object_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">RaiseDragEvent(Object,DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RaiseKeyEvent_System_Object_System_Windows_Forms_KeyEventArgs_\" data-linktype=\"relative-path\">RaiseKeyEvent(Object,KeyEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RaiseMouseEvent_System_Object_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"relative-path\">RaiseMouseEvent(Object,MouseEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RaisePaintEvent_System_Object_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"relative-path\">RaisePaintEvent(Object,PaintEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RecreateHandle\" data-linktype=\"relative-path\">RecreateHandle()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RecreatingHandle\" data-linktype=\"relative-path\">RecreatingHandle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RectangleToClient_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">RectangleToClient(Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RectangleToScreen_System_Drawing_Rectangle_\" data-linktype=\"relative-path\">RectangleToScreen(Rectangle)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ReflectMessage_System_IntPtr_System_Windows_Forms_Message__\" data-linktype=\"relative-path\">ReflectMessage(IntPtr,Message)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Refresh\" data-linktype=\"relative-path\">Refresh()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Region\" data-linktype=\"relative-path\">Region</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RegionChanged\" data-linktype=\"relative-path\">RegionChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RenderRightToLeft\" data-linktype=\"relative-path\">RenderRightToLeft</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetBackColor\" data-linktype=\"relative-path\">ResetBackColor()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetBindings\" data-linktype=\"relative-path\">ResetBindings()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetCursor\" data-linktype=\"relative-path\">ResetCursor()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetFont\" data-linktype=\"relative-path\">ResetFont()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetForeColor\" data-linktype=\"relative-path\">ResetForeColor()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetImeMode\" data-linktype=\"relative-path\">ResetImeMode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetMouseEventArgs\" data-linktype=\"relative-path\">ResetMouseEventArgs()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResetRightToLeft\" data-linktype=\"relative-path\">ResetRightToLeft()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResizeRedraw\" data-linktype=\"relative-path\">ResizeRedraw</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout\" data-linktype=\"relative-path\">ResumeLayout()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ResumeLayout_System_Boolean_\" data-linktype=\"relative-path\">ResumeLayout(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Right\" data-linktype=\"relative-path\">Right</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeft\" data-linktype=\"relative-path\">RightToLeft</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeftChanged\" data-linktype=\"relative-path\">RightToLeftChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateAlignment_System_Drawing_ContentAlignment_\" data-linktype=\"relative-path\">RtlTranslateAlignment(ContentAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateAlignment_System_Windows_Forms_HorizontalAlignment_\" data-linktype=\"relative-path\">RtlTranslateAlignment(HorizontalAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateAlignment_System_Windows_Forms_LeftRightAlignment_\" data-linktype=\"relative-path\">RtlTranslateAlignment(LeftRightAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateContent_System_Drawing_ContentAlignment_\" data-linktype=\"relative-path\">RtlTranslateContent(ContentAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateHorizontal_System_Windows_Forms_HorizontalAlignment_\" data-linktype=\"relative-path\">RtlTranslateHorizontal(HorizontalAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RtlTranslateLeftRight_System_Windows_Forms_LeftRightAlignment_\" data-linktype=\"relative-path\">RtlTranslateLeftRight(LeftRightAlignment)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Scale_System_Drawing_SizeF_\" data-linktype=\"relative-path\">Scale(SizeF)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Scale_System_Single_\" data-linktype=\"relative-path\">Scale(Single)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Scale_System_Single_System_Single_\" data-linktype=\"relative-path\">Scale(Single,Single)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ScaleChildren\" data-linktype=\"relative-path\">ScaleChildren</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ScaleControl_System_Drawing_SizeF_System_Windows_Forms_BoundsSpecified_\" data-linktype=\"relative-path\">ScaleControl(SizeF,BoundsSpecified)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ScaleCore_System_Single_System_Single_\" data-linktype=\"relative-path\">ScaleCore(Single,Single)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select\" data-linktype=\"relative-path\">Select()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Select_System_Boolean_System_Boolean_\" data-linktype=\"relative-path\">Select(Boolean,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SelectNextControl_System_Windows_Forms_Control_System_Boolean_System_Boolean_System_Boolean_System_Boolean_\" data-linktype=\"relative-path\">SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SendToBack\" data-linktype=\"relative-path\">SendToBack()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetAutoSizeMode_System_Windows_Forms_AutoSizeMode_\" data-linktype=\"relative-path\">SetAutoSizeMode(AutoSizeMode)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetBounds_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">SetBounds(Int32,Int32,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetBounds_System_Int32_System_Int32_System_Int32_System_Int32_System_Windows_Forms_BoundsSpecified_\" data-linktype=\"relative-path\">SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetClientSizeCore_System_Int32_System_Int32_\" data-linktype=\"relative-path\">SetClientSizeCore(Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetStyle_System_Windows_Forms_ControlStyles_System_Boolean_\" data-linktype=\"relative-path\">SetStyle(ControlStyles,Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetTopLevel_System_Boolean_\" data-linktype=\"relative-path\">SetTopLevel(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SetVisibleCore_System_Boolean_\" data-linktype=\"relative-path\">SetVisibleCore(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Show\" data-linktype=\"relative-path\">Show()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ShowFocusCues\" data-linktype=\"relative-path\">ShowFocusCues</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ShowKeyboardCues\" data-linktype=\"relative-path\">ShowKeyboardCues</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Size\" data-linktype=\"relative-path\">Size</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SizeChanged\" data-linktype=\"relative-path\">SizeChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SizeFromClientSize_System_Drawing_Size_\" data-linktype=\"relative-path\">SizeFromClientSize(Size)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SuspendLayout\" data-linktype=\"relative-path\">SuspendLayout()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragDrop_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">IDropTarget.OnDragDrop(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragEnter_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">IDropTarget.OnDragEnter(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragLeave_System_EventArgs_\" data-linktype=\"relative-path\">IDropTarget.OnDragLeave(EventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_System_Windows_Forms_IDropTarget_OnDragOver_System_Windows_Forms_DragEventArgs_\" data-linktype=\"relative-path\">IDropTarget.OnDragOver(DragEventArgs)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_SystemColorsChanged\" data-linktype=\"relative-path\">SystemColorsChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabIndex\" data-linktype=\"relative-path\">TabIndex</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabIndexChanged\" data-linktype=\"relative-path\">TabIndexChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabStop\" data-linktype=\"relative-path\">TabStop</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TabStopChanged\" data-linktype=\"relative-path\">TabStopChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Tag\" data-linktype=\"relative-path\">Tag</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Top\" data-linktype=\"relative-path\">Top</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_TopLevelControl\" data-linktype=\"relative-path\">TopLevelControl</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Update\" data-linktype=\"relative-path\">Update()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateBounds\" data-linktype=\"relative-path\">UpdateBounds()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateBounds_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">UpdateBounds(Int32,Int32,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateBounds_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\" data-linktype=\"relative-path\">UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateStyles\" data-linktype=\"relative-path\">UpdateStyles()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UpdateZOrder\" data-linktype=\"relative-path\">UpdateZOrder()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_UseWaitCursor\" data-linktype=\"relative-path\">UseWaitCursor</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Visible\" data-linktype=\"relative-path\">Visible</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_VisibleChanged\" data-linktype=\"relative-path\">VisibleChanged</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Width\" data-linktype=\"relative-path\">Width</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_WindowTarget\" data-linktype=\"relative-path\">WindowTarget</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The DataGridView control provides a customizable table for displaying data. The DataGridView class allows customization of cells, rows, columns, and borders through the use of properties such as <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">ColumnHeadersDefaultCellStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBorderStyle_\" data-linktype=\"relative-path\">CellBorderStyle</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GridColor_\" data-linktype=\"relative-path\">GridColor</a>. For more information, see <a href=\"../Topic/Basic%20Formatting%20and%20Styling%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Basic Formatting and Styling in the Windows Forms DataGridView Control</a>.  </p>\n<p> You can use a DataGridView control to display data with or without an underlying data source. Without specifying a data source, you can create columns and rows that contain data and add them directly to the DataGridView using the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Rows_\" data-linktype=\"relative-path\">Rows</a> and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Columns_\" data-linktype=\"relative-path\">Columns</a> properties. You can also use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Rows_\" data-linktype=\"relative-path\">Rows</a> collection to access <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> objects and the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_Cells_\" data-linktype=\"relative-path\">Cells</a> property to read or write cell values directly. The <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Item_\" data-linktype=\"relative-path\">Item</a> indexer also provides direct access to cells.  </p>\n<p> As an alternative to populating the control manually, you can set the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataMember_\" data-linktype=\"relative-path\">DataMember</a> properties to bind the DataGridView to a data source and automatically populate it with data. For more information, see <a href=\"../Topic/Displaying%20Data%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Displaying Data in the Windows Forms DataGridView Control</a>.  </p>\n<p> When working with very large amounts of data, you can set the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property to <code>true</code> to display a subset of the available data. Virtual mode requires the implementation of a data cache from which the DataGridView control is populated. For more information, see <a href=\"../Topic/Data%20Display%20Modes%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Data Display Modes in the Windows Forms DataGridView Control</a>.  </p>\n<p> For additional information about the features available in the DataGridView control, see <a href=\"../Topic/DataGridView%20Control%20(Windows%20Forms).md\" data-linktype=\"relative-path\">DataGridView Control</a>. The following table provides direct links to common tasks.  </p>\n<ul>\n<li><p><a href=\"http://msdn.microsoft.com/library/fbk67b6z(v=vs.110).aspx\" data-linktype=\"external\">How to: Bind Data to the Windows Forms DataGridView Control</a>  </p>\n</li>\n<li><p><a href=\"http://msdn.microsoft.com/library/2249cf0a(v=vs.110).aspx\" data-linktype=\"external\">How to: Add ToolTips to Individual Cells in a Windows Forms DataGridView Control</a>  </p>\n</li>\n<li><p><a href=\"http://msdn.microsoft.com/library/z2akwyy7(v=vs.110).aspx\" data-linktype=\"external\">How to: Set Font and Color Styles in the Windows Forms DataGridView Control</a>  </p>\n</li>\n<li><p><a href=\"http://msdn.microsoft.com/library/053656ss(v=vs.110).aspx\" data-linktype=\"external\">How to: Change the Type of a Windows Forms DataGridView Column Using the Designer</a>  </p>\n</li>\n<li><p><a href=\"http://msdn.microsoft.com/library/33w255ac(v=vs.110).aspx\" data-linktype=\"external\">How to: Bind Data to the Windows Forms DataGridView Control Using the Designer</a>  </p>\n</li>\n<li><p><a href=\"http://msdn.microsoft.com/library/95y5fz2x(v=vs.110).aspx\" data-linktype=\"external\">How to: Set Default Cell Styles and Data Formats for the Windows Forms DataGridView Control Using the Designer</a>  </p>\n</li>\n<li><p><a href=\"http://msdn.microsoft.com/library/f9x2790s(v=vs.110).aspx\" data-linktype=\"external\">How to: Format Data in the Windows Forms DataGridView Control</a>  </p>\n</li>\n<li><p><a href=\"http://msdn.microsoft.com/library/ykdxa0bc(v=vs.110).aspx\" data-linktype=\"external\">Walkthrough: Validating Data in the Windows Forms DataGridView Control</a>  </p>\n</li>\n<li><p><a href=\"http://msdn.microsoft.com/library/z1cc356h(v=vs.110).aspx\" data-linktype=\"external\">How to: Customize Data Formatting in the Windows Forms DataGridView Control</a>  </p>\n</li>\n<li><p><a href=\"http://msdn.microsoft.com/library/y8c0cxey(v=vs.110).aspx\" data-linktype=\"external\">Walkthrough: Creating a Master/Detail Form Using Two Windows Forms DataGridView Controls</a>  </p>\n<p>Although the DataGridView control replaces and adds functionality to the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control of previous versions, the <a class=\"xref\" href=\"system.windows.forms.datagrid\" data-linktype=\"relative-path\">DataGrid</a> control is retained for both backward compatibility and future use if you choose. For more information, see <a href=\"../Topic/Differences%20Between%20the%20Windows%20Forms%20DataGridView%20and%20DataGrid%20Controls.md\" data-linktype=\"relative-path\">Differences Between the Windows Forms DataGridView and DataGrid Controls</a>.  </p>\n</li>\n</ul>\n<div class=\"NOTE\"><h5>Note</h5><p> The DataGridView control inherits both the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a> and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> properties from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a>, but supports only the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> property. Using the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a> property with the DataGridView control has no effect.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView__ctor\" data-linktype=\"self-bookmark\">DataGridView()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AdjustedTopLeftHeaderBorderStyle\" data-linktype=\"self-bookmark\">AdjustedTopLeftHeaderBorderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the border style for the upper-left cell in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AdvancedCellBorderStyle\" data-linktype=\"self-bookmark\">AdvancedCellBorderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the border style of the cells in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AdvancedColumnHeadersBorderStyle\" data-linktype=\"self-bookmark\">AdvancedColumnHeadersBorderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the border style of the column header cells in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AdvancedRowHeadersBorderStyle\" data-linktype=\"self-bookmark\">AdvancedRowHeadersBorderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the border style of the row header cells in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AllowUserToAddRows\" data-linktype=\"self-bookmark\">AllowUserToAddRows</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the option to add rows is displayed to the user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AllowUserToDeleteRows\" data-linktype=\"self-bookmark\">AllowUserToDeleteRows</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the user is allowed to delete rows from the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AllowUserToOrderColumns\" data-linktype=\"self-bookmark\">AllowUserToOrderColumns</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether manual column repositioning is enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AllowUserToResizeColumns\" data-linktype=\"self-bookmark\">AllowUserToResizeColumns</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether users can resize columns.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AllowUserToResizeRows\" data-linktype=\"self-bookmark\">AllowUserToResizeRows</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether users can resize rows.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AlternatingRowsDefaultCellStyle\" data-linktype=\"self-bookmark\">AlternatingRowsDefaultCellStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the default cell style applied to odd-numbered rows of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoGenerateColumns\" data-linktype=\"self-bookmark\">AutoGenerateColumns</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether columns are created automatically when the <span class=\"xref\">stem.Windows.Forms.DataGridView.DataSource*</span> or <span class=\"xref\">stem.Windows.Forms.DataGridView.DataMember*</span> properties are set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoSize\" data-linktype=\"self-bookmark\">AutoSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This property is not relevant for this class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoSizeColumnsMode\" data-linktype=\"self-bookmark\">AutoSizeColumnsMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating how column widths are determined.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoSizeRowsMode\" data-linktype=\"self-bookmark\">AutoSizeRowsMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating how row heights are determined.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_BackColor\" data-linktype=\"self-bookmark\">BackColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the background color for the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_BackgroundColor\" data-linktype=\"self-bookmark\">BackgroundColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the background color of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_BackgroundImage\" data-linktype=\"self-bookmark\">BackgroundImage</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the background image displayed in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_BackgroundImageLayout\" data-linktype=\"self-bookmark\">BackgroundImageLayout</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the background image layout as defined in the <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a> enumeration.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_BorderStyle\" data-linktype=\"self-bookmark\">BorderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the border style for the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CanEnableIme\" data-linktype=\"self-bookmark\">CanEnableIme</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the <span class=\"xref\">stem.Windows.Forms.Control.ImeMode*</span> property can be set to an active value, to enable IME support.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellBorderStyle\" data-linktype=\"self-bookmark\">CellBorderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the cell border style for the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ClipboardCopyMode\" data-linktype=\"self-bookmark\">ClipboardCopyMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value that indicates whether users can copy cell text values to the <a class=\"xref\" href=\"system.windows.forms.clipboard\" data-linktype=\"relative-path\">Clipboard</a> and whether row and column header text is included.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnCount\" data-linktype=\"self-bookmark\">ColumnCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the number of columns displayed in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnHeadersBorderStyle\" data-linktype=\"self-bookmark\">ColumnHeadersBorderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the border style applied to the column headers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle\" data-linktype=\"self-bookmark\">ColumnHeadersDefaultCellStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the default column header style.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnHeadersHeight\" data-linktype=\"self-bookmark\">ColumnHeadersHeight</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the height, in pixels, of the column headers row</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnHeadersHeightSizeMode\" data-linktype=\"self-bookmark\">ColumnHeadersHeightSizeMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the height of the column headers is adjustable and whether it can be adjusted by the user or is automatically adjusted to fit the contents of the headers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnHeadersVisible\" data-linktype=\"self-bookmark\">ColumnHeadersVisible</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the column header row is displayed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_Columns\" data-linktype=\"self-bookmark\">Columns</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection that contains all the columns in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CurrentCell\" data-linktype=\"self-bookmark\">CurrentCell</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the currently active cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CurrentCellAddress\" data-linktype=\"self-bookmark\">CurrentCellAddress</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the row and column indexes of the currently active cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CurrentRow\" data-linktype=\"self-bookmark\">CurrentRow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the row containing the current cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_DataMember\" data-linktype=\"self-bookmark\">DataMember</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the name of the list or table in the data source for which the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is displaying data.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_DataSource\" data-linktype=\"self-bookmark\">DataSource</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the data source that the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is displaying data for.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_DefaultCellStyle\" data-linktype=\"self-bookmark\">DefaultCellStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the default cell style to be applied to the cells in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> if no other cell style properties are set.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_DefaultSize\" data-linktype=\"self-bookmark\">DefaultSize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the default initial size of the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_DisplayRectangle\" data-linktype=\"self-bookmark\">DisplayRectangle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the rectangle that represents the display area of the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_EditingControl\" data-linktype=\"self-bookmark\">EditingControl</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the control hosted by the current cell, if a cell with an editing control is in edit mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_EditingPanel\" data-linktype=\"self-bookmark\">EditingPanel</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the panel that contains the <span class=\"xref\">stem.Windows.Forms.DataGridView.EditingControl*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_EditMode\" data-linktype=\"self-bookmark\">EditMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating how to begin editing a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_EnableHeadersVisualStyles\" data-linktype=\"self-bookmark\">EnableHeadersVisualStyles</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether row and column headers use the visual styles of the user&#39;s current theme if visual styles are enabled for the application.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_FirstDisplayedCell\" data-linktype=\"self-bookmark\">FirstDisplayedCell</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the first cell currently displayed in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>; typically, this cell is in the upper left corner.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_FirstDisplayedScrollingColumnHiddenWidth\" data-linktype=\"self-bookmark\">FirstDisplayedScrollingColumnHiddenWidth</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the width of the portion of the column that is currently scrolled out of view..</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_FirstDisplayedScrollingColumnIndex\" data-linktype=\"self-bookmark\">FirstDisplayedScrollingColumnIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the index of the column that is the first column displayed on the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_FirstDisplayedScrollingRowIndex\" data-linktype=\"self-bookmark\">FirstDisplayedScrollingRowIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the index of the row that is the first row displayed on the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_Font\" data-linktype=\"self-bookmark\">Font</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the font of the text displayed by the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ForeColor\" data-linktype=\"self-bookmark\">ForeColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the foreground color of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_GridColor\" data-linktype=\"self-bookmark\">GridColor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the color of the grid lines separating the cells of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_HorizontalScrollBar\" data-linktype=\"self-bookmark\">HorizontalScrollBar</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the horizontal scroll bar of the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_HorizontalScrollingOffset\" data-linktype=\"self-bookmark\">HorizontalScrollingOffset</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the number of pixels by which the control is scrolled horizontally.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_IsCurrentCellDirty\" data-linktype=\"self-bookmark\">IsCurrentCellDirty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the current cell has uncommitted changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_IsCurrentCellInEditMode\" data-linktype=\"self-bookmark\">IsCurrentCellInEditMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the currently active cell is being edited.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_IsCurrentRowDirty\" data-linktype=\"self-bookmark\">IsCurrentRowDirty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the current row has uncommitted changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_Item_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">Item(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides an indexer to get or set the cell located at the intersection of the column and row with the specified indexes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_Item_System_String_System_Int32_\" data-linktype=\"self-bookmark\">Item(String,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides an indexer to get or set the cell located at the intersection of the row with the specified index and the column with the specified name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_MultiSelect\" data-linktype=\"self-bookmark\">MultiSelect</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the user is allowed to select more than one cell, row, or column of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> at a time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_NewRowIndex\" data-linktype=\"self-bookmark\">NewRowIndex</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the index of the row for new records.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_Padding\" data-linktype=\"self-bookmark\">Padding</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This property is not relevant for this control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ReadOnly\" data-linktype=\"self-bookmark\">ReadOnly</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the user can edit the cells of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowCount\" data-linktype=\"self-bookmark\">RowCount</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the number of rows displayed in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowHeadersBorderStyle\" data-linktype=\"self-bookmark\">RowHeadersBorderStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the border style of the row header cells.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowHeadersDefaultCellStyle\" data-linktype=\"self-bookmark\">RowHeadersDefaultCellStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the default style applied to the row header cells.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowHeadersVisible\" data-linktype=\"self-bookmark\">RowHeadersVisible</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the column that contains row headers is displayed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowHeadersWidth\" data-linktype=\"self-bookmark\">RowHeadersWidth</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the width, in pixels, of the column that contains the row headers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowHeadersWidthSizeMode\" data-linktype=\"self-bookmark\">RowHeadersWidthSizeMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the width of the row headers is adjustable and whether it can be adjusted by the user or is automatically adjusted to fit the contents of the headers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_Rows\" data-linktype=\"self-bookmark\">Rows</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a collection that contains all the rows in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowsDefaultCellStyle\" data-linktype=\"self-bookmark\">RowsDefaultCellStyle</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the default style applied to the row cells of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowTemplate\" data-linktype=\"self-bookmark\">RowTemplate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the row that represents the template for all the rows in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ScrollBars\" data-linktype=\"self-bookmark\">ScrollBars</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the type of scroll bars to display for the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_SelectedCells\" data-linktype=\"self-bookmark\">SelectedCells</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of cells selected by the user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_SelectedColumns\" data-linktype=\"self-bookmark\">SelectedColumns</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of columns selected by the user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_SelectedRows\" data-linktype=\"self-bookmark\">SelectedRows</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of rows selected by the user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_SelectionMode\" data-linktype=\"self-bookmark\">SelectionMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating how the cells of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> can be selected.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ShowCellErrors\" data-linktype=\"self-bookmark\">ShowCellErrors</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether to show cell errors.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ShowCellToolTips\" data-linktype=\"self-bookmark\">ShowCellToolTips</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether or not ToolTips will show when the mouse pointer pauses on a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ShowEditingIcon\" data-linktype=\"self-bookmark\">ShowEditingIcon</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether or not the editing glyph is visible in the row header of the cell being edited.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ShowRowErrors\" data-linktype=\"self-bookmark\">ShowRowErrors</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether row headers will display error glyphs for each row that contains a data entry error.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_SortedColumn\" data-linktype=\"self-bookmark\">SortedColumn</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the column by which the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> contents are currently sorted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_SortOrder\" data-linktype=\"self-bookmark\">SortOrder</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the items in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control are sorted in ascending or descending order, or are not sorted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_StandardTab\" data-linktype=\"self-bookmark\">StandardTab</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the TAB key moves the focus to the next control in the tab order rather than moving focus to the next cell in the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_Text\" data-linktype=\"self-bookmark\">Text</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the text associated with the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_TopLeftHeaderCell\" data-linktype=\"self-bookmark\">TopLeftHeaderCell</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the header cell located in the upper left corner of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_UserSetCursor\" data-linktype=\"self-bookmark\">UserSetCursor</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the default or user-specified value of the <span class=\"xref\">stem.Windows.Forms.Control.Cursor*</span> property.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_VerticalScrollBar\" data-linktype=\"self-bookmark\">VerticalScrollBar</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the vertical scroll bar of the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_VerticalScrollingOffset\" data-linktype=\"self-bookmark\">VerticalScrollingOffset</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of pixels by which the control is scrolled vertically.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_VirtualMode\" data-linktype=\"self-bookmark\">VirtualMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether you have provided your own data-management operations for the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AccessibilityNotifyCurrentCellChanged_System_Drawing_Point_\" data-linktype=\"self-bookmark\">AccessibilityNotifyCurrentCellChanged(Point)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Notifies the accessible client applications when a new cell becomes the current cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AdjustColumnHeaderBorderStyle_System_Windows_Forms_DataGridViewAdvancedBorderStyle_System_Windows_Forms_DataGridViewAdvancedBorderStyle_System_Boolean_System_Boolean_\" data-linktype=\"self-bookmark\">AdjustColumnHeaderBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> for a column header cell of a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that is currently being painted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AreAllCellsSelected_System_Boolean_\" data-linktype=\"self-bookmark\">AreAllCellsSelected(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a value indicating whether all the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> cells are currently selected.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeColumn_System_Int32_\" data-linktype=\"self-bookmark\">AutoResizeColumn(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the width of the specified column to fit the contents of all its cells, including the header cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeColumn_System_Int32_System_Windows_Forms_DataGridViewAutoSizeColumnMode_\" data-linktype=\"self-bookmark\">AutoResizeColumn(Int32,DataGridViewAutoSizeColumnMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the width of the specified column using the specified size mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeColumn_System_Int32_System_Windows_Forms_DataGridViewAutoSizeColumnMode_System_Boolean_\" data-linktype=\"self-bookmark\">AutoResizeColumn(Int32,DataGridViewAutoSizeColumnMode,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the width of the specified column using the specified size mode, optionally calculating the width with the expectation that row heights will subsequently be adjusted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight\" data-linktype=\"self-bookmark\">AutoResizeColumnHeadersHeight()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the height of the column headers to fit the contents of the largest column header.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight_System_Int32_\" data-linktype=\"self-bookmark\">AutoResizeColumnHeadersHeight(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the height of the column headers based on changes to the contents of the header in the specified column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight_System_Boolean_System_Boolean_\" data-linktype=\"self-bookmark\">AutoResizeColumnHeadersHeight(Boolean,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the height of the column headers to fit their contents, optionally calculating the height with the expectation that the column and/or row header widths will subsequently be adjusted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight_System_Int32_System_Boolean_System_Boolean_\" data-linktype=\"self-bookmark\">AutoResizeColumnHeadersHeight(Int32,Boolean,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the height of the column headers based on changes to the contents of the header in the specified column, optionally calculating the height with the expectation that the column and/or row header widths will subsequently be adjusted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeColumns\" data-linktype=\"self-bookmark\">AutoResizeColumns()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the width of all columns to fit the contents of all their cells, including the header cells.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeColumns_System_Windows_Forms_DataGridViewAutoSizeColumnsMode_\" data-linktype=\"self-bookmark\">AutoResizeColumns(DataGridViewAutoSizeColumnsMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the width of all columns using the specified size mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeColumns_System_Windows_Forms_DataGridViewAutoSizeColumnsMode_System_Boolean_\" data-linktype=\"self-bookmark\">AutoResizeColumns(DataGridViewAutoSizeColumnsMode,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the width of all columns using the specified size mode, optionally calculating the widths with the expectation that row heights will subsequently be adjusted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeRow_System_Int32_\" data-linktype=\"self-bookmark\">AutoResizeRow(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the height of the specified row to fit the contents of all its cells including the header cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeRow_System_Int32_System_Windows_Forms_DataGridViewAutoSizeRowMode_\" data-linktype=\"self-bookmark\">AutoResizeRow(Int32,DataGridViewAutoSizeRowMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the height of the specified row using the specified size mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeRow_System_Int32_System_Windows_Forms_DataGridViewAutoSizeRowMode_System_Boolean_\" data-linktype=\"self-bookmark\">AutoResizeRow(Int32,DataGridViewAutoSizeRowMode,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the height of the specified row using the specified size mode, optionally calculating the height with the expectation that column widths will subsequently be adjusted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeRowHeadersWidth_System_Windows_Forms_DataGridViewRowHeadersWidthSizeMode_\" data-linktype=\"self-bookmark\">AutoResizeRowHeadersWidth(DataGridViewRowHeadersWidthSizeMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the width of the row headers using the specified size mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeRowHeadersWidth_System_Int32_System_Windows_Forms_DataGridViewRowHeadersWidthSizeMode_\" data-linktype=\"self-bookmark\">AutoResizeRowHeadersWidth(Int32,DataGridViewRowHeadersWidthSizeMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the width of the row headers based on changes to the contents of the header in the specified row and using the specified size mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeRowHeadersWidth_System_Windows_Forms_DataGridViewRowHeadersWidthSizeMode_System_Boolean_System_Boolean_\" data-linktype=\"self-bookmark\">AutoResizeRowHeadersWidth(DataGridViewRowHeadersWidthSizeMode,Boolean,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the width of the row headers using the specified size mode, optionally calculating the width with the expectation that the row and/or column header widths will subsequently be adjusted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeRowHeadersWidth_System_Int32_System_Windows_Forms_DataGridViewRowHeadersWidthSizeMode_System_Boolean_System_Boolean_\" data-linktype=\"self-bookmark\">AutoResizeRowHeadersWidth(Int32,DataGridViewRowHeadersWidthSizeMode,Boolean,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the width of the row headers based on changes to the contents of the header in the specified row and using the specified size mode, optionally calculating the width with the expectation that the row and/or column header widths will subsequently be adjusted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeRows\" data-linktype=\"self-bookmark\">AutoResizeRows()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the heights of all rows to fit the contents of all their cells, including the header cells.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeRows_System_Windows_Forms_DataGridViewAutoSizeRowsMode_\" data-linktype=\"self-bookmark\">AutoResizeRows(DataGridViewAutoSizeRowsMode)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the heights of the rows using the specified size mode value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeRows_System_Windows_Forms_DataGridViewAutoSizeRowsMode_System_Boolean_\" data-linktype=\"self-bookmark\">AutoResizeRows(DataGridViewAutoSizeRowsMode,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the heights of all rows using the specified size mode, optionally calculating the heights with the expectation that column widths will subsequently be adjusted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoResizeRows_System_Int32_System_Int32_System_Windows_Forms_DataGridViewAutoSizeRowMode_System_Boolean_\" data-linktype=\"self-bookmark\">AutoResizeRows(Int32,Int32,DataGridViewAutoSizeRowMode,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adjusts the heights of the specified rows using the specified size mode, optionally calculating the heights with the expectation that column widths will subsequently be adjusted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_BeginEdit_System_Boolean_\" data-linktype=\"self-bookmark\">BeginEdit(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Puts the current cell in edit mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CancelEdit\" data-linktype=\"self-bookmark\">CancelEdit()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Cancels edit mode for the currently selected cell and discards any changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ClearSelection\" data-linktype=\"self-bookmark\">ClearSelection()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Clears the current selection by unselecting all selected cells.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ClearSelection_System_Int32_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">ClearSelection(Int32,Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Cancels the selection of all currently selected cells except the one indicated, optionally ensuring that the indicated cell is selected.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CommitEdit_System_Windows_Forms_DataGridViewDataErrorContexts_\" data-linktype=\"self-bookmark\">CommitEdit(DataGridViewDataErrorContexts)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Commits changes in the current cell to the data cache without ending edit mode.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CreateAccessibilityInstance\" data-linktype=\"self-bookmark\">CreateAccessibilityInstance()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new accessible object for the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CreateColumnsInstance\" data-linktype=\"self-bookmark\">CreateColumnsInstance()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and returns a new <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumncollection\" data-linktype=\"relative-path\">DataGridViewColumnCollection</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CreateControlsInstance\" data-linktype=\"self-bookmark\">CreateControlsInstance()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and returns a new <a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control+ControlCollection</a> that can be cast to type <a class=\"xref\" href=\"system.windows.forms.datagridview.datagridviewcontrolcollection\" data-linktype=\"relative-path\">DataGridView+DataGridViewControlCollection</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CreateRowsInstance\" data-linktype=\"self-bookmark\">CreateRowsInstance()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates and returns a new <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection\" data-linktype=\"relative-path\">DataGridViewRowCollection</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_DisplayedColumnCount_System_Boolean_\" data-linktype=\"self-bookmark\">DisplayedColumnCount(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the number of columns displayed to the user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_DisplayedRowCount_System_Boolean_\" data-linktype=\"self-bookmark\">DisplayedRowCount(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the number of rows displayed to the user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and its child controls and optionally releases the managed resources.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_EndEdit\" data-linktype=\"self-bookmark\">EndEdit()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Commits and ends the edit operation on the current cell using the default error context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_EndEdit_System_Windows_Forms_DataGridViewDataErrorContexts_\" data-linktype=\"self-bookmark\">EndEdit(DataGridViewDataErrorContexts)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Commits and ends the edit operation on the current cell using the specified error context.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_GetAccessibilityObjectById_System_Int32_\" data-linktype=\"self-bookmark\">GetAccessibilityObjectById(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the specified <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_GetCellCount_System_Windows_Forms_DataGridViewElementStates_\" data-linktype=\"self-bookmark\">GetCellCount(DataGridViewElementStates)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of cells that satisfy the provided filter.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_GetCellDisplayRectangle_System_Int32_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">GetCellDisplayRectangle(Int32,Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the rectangle that represents the display area for a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_GetClipboardContent\" data-linktype=\"self-bookmark\">GetClipboardContent()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the formatted values that represent the contents of the selected cells for copying to the <a class=\"xref\" href=\"system.windows.forms.clipboard\" data-linktype=\"relative-path\">Clipboard</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_GetColumnDisplayRectangle_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">GetColumnDisplayRectangle(Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the rectangle that represents the display area for a column, as determined by the column index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_GetRowDisplayRectangle_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">GetRowDisplayRectangle(Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the rectangle that represents the display area for a row, as determined by the row index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_HitTest_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">HitTest(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns location information, such as row and column indices, given x- and y-coordinates.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_InvalidateCell_System_Windows_Forms_DataGridViewCell_\" data-linktype=\"self-bookmark\">InvalidateCell(DataGridViewCell)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Invalidates the specified cell of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>, forcing it to be repainted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_InvalidateCell_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">InvalidateCell(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Invalidates the cell with the specified row and column indexes, forcing it to be repainted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_InvalidateColumn_System_Int32_\" data-linktype=\"self-bookmark\">InvalidateColumn(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Invalidates the specified column of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>, forcing it to be repainted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_InvalidateRow_System_Int32_\" data-linktype=\"self-bookmark\">InvalidateRow(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Invalidates the specified row of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>, forcing it to be repainted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_IsInputChar_System_Char_\" data-linktype=\"self-bookmark\">IsInputChar(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether a character is an input character that the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> recognizes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_IsInputKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">IsInputKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_NotifyCurrentCellDirty_System_Boolean_\" data-linktype=\"self-bookmark\">NotifyCurrentCellDirty(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Notifies the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that the current cell has uncommitted changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnAllowUserToAddRowsChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnAllowUserToAddRowsChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToAddRowsChanged\" data-linktype=\"relative-path\">AllowUserToAddRowsChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnAllowUserToDeleteRowsChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnAllowUserToDeleteRowsChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToDeleteRowsChanged\" data-linktype=\"relative-path\">AllowUserToDeleteRowsChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnAllowUserToOrderColumnsChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnAllowUserToOrderColumnsChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToOrderColumnsChanged\" data-linktype=\"relative-path\">AllowUserToOrderColumnsChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnAllowUserToResizeColumnsChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnAllowUserToResizeColumnsChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToResizeColumnsChanged\" data-linktype=\"relative-path\">AllowUserToResizeColumnsChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnAllowUserToResizeRowsChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnAllowUserToResizeRowsChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToResizeRowsChanged\" data-linktype=\"relative-path\">AllowUserToResizeRowsChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnAlternatingRowsDefaultCellStyleChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnAlternatingRowsDefaultCellStyleChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AlternatingRowsDefaultCellStyleChanged\" data-linktype=\"relative-path\">AlternatingRowsDefaultCellStyleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnAutoGenerateColumnsChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnAutoGenerateColumnsChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoGenerateColumnsChanged\" data-linktype=\"relative-path\">AutoGenerateColumnsChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnAutoSizeColumnModeChanged_System_Windows_Forms_DataGridViewAutoSizeColumnModeEventArgs_\" data-linktype=\"self-bookmark\">OnAutoSizeColumnModeChanged(DataGridViewAutoSizeColumnModeEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeColumnModeChanged\" data-linktype=\"relative-path\">AutoSizeColumnModeChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnAutoSizeColumnsModeChanged_System_Windows_Forms_DataGridViewAutoSizeColumnsModeEventArgs_\" data-linktype=\"self-bookmark\">OnAutoSizeColumnsModeChanged(DataGridViewAutoSizeColumnsModeEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeColumnsModeChanged\" data-linktype=\"relative-path\">AutoSizeColumnsModeChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnAutoSizeRowsModeChanged_System_Windows_Forms_DataGridViewAutoSizeModeEventArgs_\" data-linktype=\"self-bookmark\">OnAutoSizeRowsModeChanged(DataGridViewAutoSizeModeEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeRowsModeChanged\" data-linktype=\"relative-path\">AutoSizeRowsModeChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnBackgroundColorChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnBackgroundColorChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_BackgroundColorChanged\" data-linktype=\"relative-path\">BackgroundColorChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnBindingContextChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnBindingContextChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BindingContextChanged\" data-linktype=\"relative-path\">BindingContextChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnBorderStyleChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnBorderStyleChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_BorderStyleChanged\" data-linktype=\"relative-path\">BorderStyleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCancelRowEdit_System_Windows_Forms_QuestionEventArgs_\" data-linktype=\"self-bookmark\">OnCancelRowEdit(QuestionEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CancelRowEdit\" data-linktype=\"relative-path\">CancelRowEdit</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellBeginEdit_System_Windows_Forms_DataGridViewCellCancelEventArgs_\" data-linktype=\"self-bookmark\">OnCellBeginEdit(DataGridViewCellCancelEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBeginEdit\" data-linktype=\"relative-path\">CellBeginEdit</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellBorderStyleChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnCellBorderStyleChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBorderStyleChanged\" data-linktype=\"relative-path\">CellBorderStyleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnCellClick(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellClick\" data-linktype=\"relative-path\">CellClick</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellContentClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnCellContentClick(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContentClick\" data-linktype=\"relative-path\">CellContentClick</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellContentDoubleClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnCellContentDoubleClick(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContentDoubleClick\" data-linktype=\"relative-path\">CellContentDoubleClick</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellContextMenuStripChanged_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnCellContextMenuStripChanged(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContextMenuStripChanged\" data-linktype=\"relative-path\">CellContextMenuStripChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellContextMenuStripNeeded_System_Windows_Forms_DataGridViewCellContextMenuStripNeededEventArgs_\" data-linktype=\"self-bookmark\">OnCellContextMenuStripNeeded(DataGridViewCellContextMenuStripNeededEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContextMenuStripNeeded\" data-linktype=\"relative-path\">CellContextMenuStripNeeded</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellDoubleClick_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnCellDoubleClick(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellDoubleClick\" data-linktype=\"relative-path\">CellDoubleClick</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellEndEdit_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnCellEndEdit(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellEndEdit\" data-linktype=\"relative-path\">CellEndEdit</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellEnter_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnCellEnter(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellEnter\" data-linktype=\"relative-path\">CellEnter</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellErrorTextChanged_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnCellErrorTextChanged(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextChanged\" data-linktype=\"relative-path\">CellErrorTextChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellErrorTextNeeded_System_Windows_Forms_DataGridViewCellErrorTextNeededEventArgs_\" data-linktype=\"self-bookmark\">OnCellErrorTextNeeded(DataGridViewCellErrorTextNeededEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellFormatting_System_Windows_Forms_DataGridViewCellFormattingEventArgs_\" data-linktype=\"self-bookmark\">OnCellFormatting(DataGridViewCellFormattingEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellFormatting\" data-linktype=\"relative-path\">CellFormatting</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellLeave_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnCellLeave(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellLeave\" data-linktype=\"relative-path\">CellLeave</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellMouseClick_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">OnCellMouseClick(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseClick\" data-linktype=\"relative-path\">CellMouseClick</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellMouseDoubleClick_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">OnCellMouseDoubleClick(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseDoubleClick\" data-linktype=\"relative-path\">CellMouseDoubleClick</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellMouseDown_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">OnCellMouseDown(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseDown\" data-linktype=\"relative-path\">CellMouseDown</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellMouseEnter_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnCellMouseEnter(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseEnter\" data-linktype=\"relative-path\">CellMouseEnter</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellMouseLeave_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnCellMouseLeave(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseLeave\" data-linktype=\"relative-path\">CellMouseLeave</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellMouseMove_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">OnCellMouseMove(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseMove\" data-linktype=\"relative-path\">CellMouseMove</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellMouseUp_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">OnCellMouseUp(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseUp\" data-linktype=\"relative-path\">CellMouseUp</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellPainting_System_Windows_Forms_DataGridViewCellPaintingEventArgs_\" data-linktype=\"self-bookmark\">OnCellPainting(DataGridViewCellPaintingEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"relative-path\">CellPainting</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellParsing_System_Windows_Forms_DataGridViewCellParsingEventArgs_\" data-linktype=\"self-bookmark\">OnCellParsing(DataGridViewCellParsingEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellParsing\" data-linktype=\"relative-path\">CellParsing</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellStateChanged_System_Windows_Forms_DataGridViewCellStateChangedEventArgs_\" data-linktype=\"self-bookmark\">OnCellStateChanged(DataGridViewCellStateChangedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellStateChanged\" data-linktype=\"relative-path\">CellStateChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellStyleChanged_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnCellStyleChanged(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellStyleChanged\" data-linktype=\"relative-path\">CellStyleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellStyleContentChanged_System_Windows_Forms_DataGridViewCellStyleContentChangedEventArgs_\" data-linktype=\"self-bookmark\">OnCellStyleContentChanged(DataGridViewCellStyleContentChangedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellStyleContentChanged\" data-linktype=\"relative-path\">CellStyleContentChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellToolTipTextChanged_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnCellToolTipTextChanged(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellToolTipTextChanged\" data-linktype=\"relative-path\">CellToolTipTextChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellToolTipTextNeeded_System_Windows_Forms_DataGridViewCellToolTipTextNeededEventArgs_\" data-linktype=\"self-bookmark\">OnCellToolTipTextNeeded(DataGridViewCellToolTipTextNeededEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellToolTipTextNeeded\" data-linktype=\"relative-path\">CellToolTipTextNeeded</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellValidated_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnCellValidated(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValidated\" data-linktype=\"relative-path\">CellValidated</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellValidating_System_Windows_Forms_DataGridViewCellValidatingEventArgs_\" data-linktype=\"self-bookmark\">OnCellValidating(DataGridViewCellValidatingEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValidating\" data-linktype=\"relative-path\">CellValidating</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellValueChanged_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnCellValueChanged(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueChanged\" data-linktype=\"relative-path\">CellValueChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellValueNeeded_System_Windows_Forms_DataGridViewCellValueEventArgs_\" data-linktype=\"self-bookmark\">OnCellValueNeeded(DataGridViewCellValueEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueNeeded\" data-linktype=\"relative-path\">CellValueNeeded</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCellValuePushed_System_Windows_Forms_DataGridViewCellValueEventArgs_\" data-linktype=\"self-bookmark\">OnCellValuePushed(DataGridViewCellValueEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValuePushed\" data-linktype=\"relative-path\">CellValuePushed</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnAdded_System_Windows_Forms_DataGridViewColumnEventArgs_\" data-linktype=\"self-bookmark\">OnColumnAdded(DataGridViewColumnEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnAdded\" data-linktype=\"relative-path\">ColumnAdded</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnContextMenuStripChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\" data-linktype=\"self-bookmark\">OnColumnContextMenuStripChanged(DataGridViewColumnEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnContextMenuStripChanged\" data-linktype=\"relative-path\">ColumnContextMenuStripChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnDataPropertyNameChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\" data-linktype=\"self-bookmark\">OnColumnDataPropertyNameChanged(DataGridViewColumnEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnDataPropertyNameChanged\" data-linktype=\"relative-path\">ColumnDataPropertyNameChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnDefaultCellStyleChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\" data-linktype=\"self-bookmark\">OnColumnDefaultCellStyleChanged(DataGridViewColumnEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnDefaultCellStyleChanged\" data-linktype=\"relative-path\">ColumnDefaultCellStyleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnDisplayIndexChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\" data-linktype=\"self-bookmark\">OnColumnDisplayIndexChanged(DataGridViewColumnEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnDisplayIndexChanged\" data-linktype=\"relative-path\">ColumnDisplayIndexChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnDividerDoubleClick_System_Windows_Forms_DataGridViewColumnDividerDoubleClickEventArgs_\" data-linktype=\"self-bookmark\">OnColumnDividerDoubleClick(DataGridViewColumnDividerDoubleClickEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnDividerDoubleClick\" data-linktype=\"relative-path\">ColumnDividerDoubleClick</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnDividerWidthChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\" data-linktype=\"self-bookmark\">OnColumnDividerWidthChanged(DataGridViewColumnEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnDividerWidthChanged\" data-linktype=\"relative-path\">ColumnDividerWidthChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnHeaderCellChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\" data-linktype=\"self-bookmark\">OnColumnHeaderCellChanged(DataGridViewColumnEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeaderCellChanged\" data-linktype=\"relative-path\">ColumnHeaderCellChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnHeaderMouseClick_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">OnColumnHeaderMouseClick(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeaderMouseClick\" data-linktype=\"relative-path\">ColumnHeaderMouseClick</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnHeaderMouseDoubleClick_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">OnColumnHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeaderMouseDoubleClick\" data-linktype=\"relative-path\">ColumnHeaderMouseDoubleClick</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnHeadersBorderStyleChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnColumnHeadersBorderStyleChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersBorderStyleChanged\" data-linktype=\"relative-path\">ColumnHeadersBorderStyleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnHeadersDefaultCellStyleChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnColumnHeadersDefaultCellStyleChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyleChanged\" data-linktype=\"relative-path\">ColumnHeadersDefaultCellStyleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnHeadersHeightChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnColumnHeadersHeightChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersHeightChanged\" data-linktype=\"relative-path\">ColumnHeadersHeightChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnHeadersHeightSizeModeChanged_System_Windows_Forms_DataGridViewAutoSizeModeEventArgs_\" data-linktype=\"self-bookmark\">OnColumnHeadersHeightSizeModeChanged(DataGridViewAutoSizeModeEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersHeightSizeModeChanged\" data-linktype=\"relative-path\">ColumnHeadersHeightSizeModeChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnMinimumWidthChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\" data-linktype=\"self-bookmark\">OnColumnMinimumWidthChanged(DataGridViewColumnEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnMinimumWidthChanged\" data-linktype=\"relative-path\">ColumnMinimumWidthChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnNameChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\" data-linktype=\"self-bookmark\">OnColumnNameChanged(DataGridViewColumnEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnNameChanged\" data-linktype=\"relative-path\">ColumnNameChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnRemoved_System_Windows_Forms_DataGridViewColumnEventArgs_\" data-linktype=\"self-bookmark\">OnColumnRemoved(DataGridViewColumnEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnRemoved\" data-linktype=\"relative-path\">ColumnRemoved</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnSortModeChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\" data-linktype=\"self-bookmark\">OnColumnSortModeChanged(DataGridViewColumnEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnSortModeChanged\" data-linktype=\"relative-path\">ColumnSortModeChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnStateChanged_System_Windows_Forms_DataGridViewColumnStateChangedEventArgs_\" data-linktype=\"self-bookmark\">OnColumnStateChanged(DataGridViewColumnStateChangedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnStateChanged\" data-linktype=\"relative-path\">ColumnStateChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnToolTipTextChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\" data-linktype=\"self-bookmark\">OnColumnToolTipTextChanged(DataGridViewColumnEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnToolTipTextChanged\" data-linktype=\"relative-path\">ColumnToolTipTextChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnColumnWidthChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\" data-linktype=\"self-bookmark\">OnColumnWidthChanged(DataGridViewColumnEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnWidthChanged\" data-linktype=\"relative-path\">ColumnWidthChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCurrentCellChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnCurrentCellChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCellChanged\" data-linktype=\"relative-path\">CurrentCellChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCurrentCellDirtyStateChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnCurrentCellDirtyStateChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCellDirtyStateChanged\" data-linktype=\"relative-path\">CurrentCellDirtyStateChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnCursorChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnCursorChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CursorChanged\" data-linktype=\"relative-path\">CursorChanged</a> event and updates the <span class=\"xref\">stem.Windows.Forms.DataGridView.UserSetCursor*</span> property if the cursor was changed in user code.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnDataBindingComplete_System_Windows_Forms_DataGridViewBindingCompleteEventArgs_\" data-linktype=\"self-bookmark\">OnDataBindingComplete(DataGridViewBindingCompleteEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataBindingComplete\" data-linktype=\"relative-path\">DataBindingComplete</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnDataError_System_Boolean_System_Windows_Forms_DataGridViewDataErrorEventArgs_\" data-linktype=\"self-bookmark\">OnDataError(Boolean,DataGridViewDataErrorEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnDataMemberChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnDataMemberChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataMemberChanged\" data-linktype=\"relative-path\">DataMemberChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnDataSourceChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnDataSourceChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSourceChanged\" data-linktype=\"relative-path\">DataSourceChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnDefaultCellStyleChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnDefaultCellStyleChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyleChanged\" data-linktype=\"relative-path\">DefaultCellStyleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnDefaultValuesNeeded_System_Windows_Forms_DataGridViewRowEventArgs_\" data-linktype=\"self-bookmark\">OnDefaultValuesNeeded(DataGridViewRowEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultValuesNeeded\" data-linktype=\"relative-path\">DefaultValuesNeeded</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnDoubleClick_System_EventArgs_\" data-linktype=\"self-bookmark\">OnDoubleClick(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnEditingControlShowing_System_Windows_Forms_DataGridViewEditingControlShowingEventArgs_\" data-linktype=\"self-bookmark\">OnEditingControlShowing(DataGridViewEditingControlShowingEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EditingControlShowing\" data-linktype=\"relative-path\">EditingControlShowing</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnEditModeChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnEditModeChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EditModeChanged\" data-linktype=\"relative-path\">EditModeChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnEnabledChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnEnabledChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EnabledChanged\" data-linktype=\"relative-path\">EnabledChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnEnter_System_EventArgs_\" data-linktype=\"self-bookmark\">OnEnter(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnFontChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnFontChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_FontChanged\" data-linktype=\"relative-path\">FontChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnForeColorChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnForeColorChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ForeColorChanged\" data-linktype=\"relative-path\">ForeColorChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnGotFocus_System_EventArgs_\" data-linktype=\"self-bookmark\">OnGotFocus(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnGridColorChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnGridColorChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GridColorChanged\" data-linktype=\"relative-path\">GridColorChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnHandleCreated_System_EventArgs_\" data-linktype=\"self-bookmark\">OnHandleCreated(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleCreated\" data-linktype=\"relative-path\">HandleCreated</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnHandleDestroyed_System_EventArgs_\" data-linktype=\"self-bookmark\">OnHandleDestroyed(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleDestroyed\" data-linktype=\"relative-path\">HandleDestroyed</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnKeyDown_System_Windows_Forms_KeyEventArgs_\" data-linktype=\"self-bookmark\">OnKeyDown(KeyEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnKeyPress_System_Windows_Forms_KeyPressEventArgs_\" data-linktype=\"self-bookmark\">OnKeyPress(KeyPressEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnKeyUp_System_Windows_Forms_KeyEventArgs_\" data-linktype=\"self-bookmark\">OnKeyUp(KeyEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnLayout_System_Windows_Forms_LayoutEventArgs_\" data-linktype=\"self-bookmark\">OnLayout(LayoutEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnLeave_System_EventArgs_\" data-linktype=\"self-bookmark\">OnLeave(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnLostFocus_System_EventArgs_\" data-linktype=\"self-bookmark\">OnLostFocus(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnMouseClick_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"self-bookmark\">OnMouseClick(MouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseClick\" data-linktype=\"relative-path\">MouseClick</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnMouseDoubleClick_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"self-bookmark\">OnMouseDoubleClick(MouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDoubleClick\" data-linktype=\"relative-path\">MouseDoubleClick</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnMouseDown_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"self-bookmark\">OnMouseDown(MouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnMouseEnter_System_EventArgs_\" data-linktype=\"self-bookmark\">OnMouseEnter(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <span class=\"xref\">stem.Windows.Forms.Control.OnMouseEnter*</span> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnMouseLeave_System_EventArgs_\" data-linktype=\"self-bookmark\">OnMouseLeave(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnMouseMove_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"self-bookmark\">OnMouseMove(MouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnMouseUp_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"self-bookmark\">OnMouseUp(MouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnMouseWheel_System_Windows_Forms_MouseEventArgs_\" data-linktype=\"self-bookmark\">OnMouseWheel(MouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseWheel\" data-linktype=\"relative-path\">MouseWheel</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnMultiSelectChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnMultiSelectChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_MultiSelectChanged\" data-linktype=\"relative-path\">MultiSelectChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnNewRowNeeded_System_Windows_Forms_DataGridViewRowEventArgs_\" data-linktype=\"self-bookmark\">OnNewRowNeeded(DataGridViewRowEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_NewRowNeeded\" data-linktype=\"relative-path\">NewRowNeeded</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnPaint_System_Windows_Forms_PaintEventArgs_\" data-linktype=\"self-bookmark\">OnPaint(PaintEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnReadOnlyChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnReadOnlyChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ReadOnlyChanged\" data-linktype=\"relative-path\">ReadOnlyChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnResize_System_EventArgs_\" data-linktype=\"self-bookmark\">OnResize(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRightToLeftChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnRightToLeftChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeftChanged\" data-linktype=\"relative-path\">RightToLeftChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowContextMenuStripChanged_System_Windows_Forms_DataGridViewRowEventArgs_\" data-linktype=\"self-bookmark\">OnRowContextMenuStripChanged(DataGridViewRowEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowContextMenuStripChanged\" data-linktype=\"relative-path\">RowContextMenuStripChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowContextMenuStripNeeded_System_Windows_Forms_DataGridViewRowContextMenuStripNeededEventArgs_\" data-linktype=\"self-bookmark\">OnRowContextMenuStripNeeded(DataGridViewRowContextMenuStripNeededEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowContextMenuStripNeeded\" data-linktype=\"relative-path\">RowContextMenuStripNeeded</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowDefaultCellStyleChanged_System_Windows_Forms_DataGridViewRowEventArgs_\" data-linktype=\"self-bookmark\">OnRowDefaultCellStyleChanged(DataGridViewRowEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowDefaultCellStyleChanged\" data-linktype=\"relative-path\">RowDefaultCellStyleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowDirtyStateNeeded_System_Windows_Forms_QuestionEventArgs_\" data-linktype=\"self-bookmark\">OnRowDirtyStateNeeded(QuestionEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowDirtyStateNeeded\" data-linktype=\"relative-path\">RowDirtyStateNeeded</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowDividerDoubleClick_System_Windows_Forms_DataGridViewRowDividerDoubleClickEventArgs_\" data-linktype=\"self-bookmark\">OnRowDividerDoubleClick(DataGridViewRowDividerDoubleClickEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowDividerDoubleClick\" data-linktype=\"relative-path\">RowDividerDoubleClick</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowDividerHeightChanged_System_Windows_Forms_DataGridViewRowEventArgs_\" data-linktype=\"self-bookmark\">OnRowDividerHeightChanged(DataGridViewRowEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowDividerHeightChanged\" data-linktype=\"relative-path\">RowDividerHeightChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowEnter_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnRowEnter(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowEnter\" data-linktype=\"relative-path\">RowEnter</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowErrorTextChanged_System_Windows_Forms_DataGridViewRowEventArgs_\" data-linktype=\"self-bookmark\">OnRowErrorTextChanged(DataGridViewRowEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowErrorTextChanged\" data-linktype=\"relative-path\">RowErrorTextChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowErrorTextNeeded_System_Windows_Forms_DataGridViewRowErrorTextNeededEventArgs_\" data-linktype=\"self-bookmark\">OnRowErrorTextNeeded(DataGridViewRowErrorTextNeededEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowErrorTextNeeded\" data-linktype=\"relative-path\">RowErrorTextNeeded</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowHeaderCellChanged_System_Windows_Forms_DataGridViewRowEventArgs_\" data-linktype=\"self-bookmark\">OnRowHeaderCellChanged(DataGridViewRowEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeaderCellChanged\" data-linktype=\"relative-path\">RowHeaderCellChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowHeaderMouseClick_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">OnRowHeaderMouseClick(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeaderMouseClick\" data-linktype=\"relative-path\">RowHeaderMouseClick</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowHeaderMouseDoubleClick_System_Windows_Forms_DataGridViewCellMouseEventArgs_\" data-linktype=\"self-bookmark\">OnRowHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeaderMouseDoubleClick\" data-linktype=\"relative-path\">RowHeaderMouseDoubleClick</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowHeadersBorderStyleChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnRowHeadersBorderStyleChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersBorderStyleChanged\" data-linktype=\"relative-path\">RowHeadersBorderStyleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowHeadersDefaultCellStyleChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnRowHeadersDefaultCellStyleChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersDefaultCellStyleChanged\" data-linktype=\"relative-path\">RowHeadersDefaultCellStyleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowHeadersWidthChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnRowHeadersWidthChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersWidthChanged\" data-linktype=\"relative-path\">RowHeadersWidthChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowHeadersWidthSizeModeChanged_System_Windows_Forms_DataGridViewAutoSizeModeEventArgs_\" data-linktype=\"self-bookmark\">OnRowHeadersWidthSizeModeChanged(DataGridViewAutoSizeModeEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersWidthSizeModeChanged\" data-linktype=\"relative-path\">RowHeadersWidthSizeModeChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowHeightChanged_System_Windows_Forms_DataGridViewRowEventArgs_\" data-linktype=\"self-bookmark\">OnRowHeightChanged(DataGridViewRowEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeightChanged\" data-linktype=\"relative-path\">RowHeightChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowHeightInfoNeeded_System_Windows_Forms_DataGridViewRowHeightInfoNeededEventArgs_\" data-linktype=\"self-bookmark\">OnRowHeightInfoNeeded(DataGridViewRowHeightInfoNeededEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeightInfoNeeded\" data-linktype=\"relative-path\">RowHeightInfoNeeded</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowHeightInfoPushed_System_Windows_Forms_DataGridViewRowHeightInfoPushedEventArgs_\" data-linktype=\"self-bookmark\">OnRowHeightInfoPushed(DataGridViewRowHeightInfoPushedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeightInfoPushed\" data-linktype=\"relative-path\">RowHeightInfoPushed</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowLeave_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnRowLeave(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowLeave\" data-linktype=\"relative-path\">RowLeave</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowMinimumHeightChanged_System_Windows_Forms_DataGridViewRowEventArgs_\" data-linktype=\"self-bookmark\">OnRowMinimumHeightChanged(DataGridViewRowEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowMinimumHeightChanged\" data-linktype=\"relative-path\">RowMinimumHeightChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowPostPaint_System_Windows_Forms_DataGridViewRowPostPaintEventArgs_\" data-linktype=\"self-bookmark\">OnRowPostPaint(DataGridViewRowPostPaintEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">RowPostPaint</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowPrePaint_System_Windows_Forms_DataGridViewRowPrePaintEventArgs_\" data-linktype=\"self-bookmark\">OnRowPrePaint(DataGridViewRowPrePaintEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPrePaint\" data-linktype=\"relative-path\">RowPrePaint</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowsAdded_System_Windows_Forms_DataGridViewRowsAddedEventArgs_\" data-linktype=\"self-bookmark\">OnRowsAdded(DataGridViewRowsAddedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowsAdded\" data-linktype=\"relative-path\">RowsAdded</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowsDefaultCellStyleChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnRowsDefaultCellStyleChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowsDefaultCellStyleChanged\" data-linktype=\"relative-path\">RowsDefaultCellStyleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowsRemoved_System_Windows_Forms_DataGridViewRowsRemovedEventArgs_\" data-linktype=\"self-bookmark\">OnRowsRemoved(DataGridViewRowsRemovedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowsRemoved\" data-linktype=\"relative-path\">RowsRemoved</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowStateChanged_System_Int32_System_Windows_Forms_DataGridViewRowStateChangedEventArgs_\" data-linktype=\"self-bookmark\">OnRowStateChanged(Int32,DataGridViewRowStateChangedEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowStateChanged\" data-linktype=\"relative-path\">RowStateChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowUnshared_System_Windows_Forms_DataGridViewRowEventArgs_\" data-linktype=\"self-bookmark\">OnRowUnshared(DataGridViewRowEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowUnshared\" data-linktype=\"relative-path\">RowUnshared</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowValidated_System_Windows_Forms_DataGridViewCellEventArgs_\" data-linktype=\"self-bookmark\">OnRowValidated(DataGridViewCellEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowValidated\" data-linktype=\"relative-path\">RowValidated</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnRowValidating_System_Windows_Forms_DataGridViewCellCancelEventArgs_\" data-linktype=\"self-bookmark\">OnRowValidating(DataGridViewCellCancelEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowValidating\" data-linktype=\"relative-path\">RowValidating</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnScroll_System_Windows_Forms_ScrollEventArgs_\" data-linktype=\"self-bookmark\">OnScroll(ScrollEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Scroll\" data-linktype=\"relative-path\">Scroll</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnSelectionChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnSelectionChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"relative-path\">SelectionChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnSortCompare_System_Windows_Forms_DataGridViewSortCompareEventArgs_\" data-linktype=\"self-bookmark\">OnSortCompare(DataGridViewSortCompareEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SortCompare\" data-linktype=\"relative-path\">SortCompare</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnSorted_System_EventArgs_\" data-linktype=\"self-bookmark\">OnSorted(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Sorted\" data-linktype=\"relative-path\">Sorted</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnUserAddedRow_System_Windows_Forms_DataGridViewRowEventArgs_\" data-linktype=\"self-bookmark\">OnUserAddedRow(DataGridViewRowEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_UserAddedRow\" data-linktype=\"relative-path\">UserAddedRow</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnUserDeletedRow_System_Windows_Forms_DataGridViewRowEventArgs_\" data-linktype=\"self-bookmark\">OnUserDeletedRow(DataGridViewRowEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_UserDeletedRow\" data-linktype=\"relative-path\">UserDeletedRow</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnUserDeletingRow_System_Windows_Forms_DataGridViewRowCancelEventArgs_\" data-linktype=\"self-bookmark\">OnUserDeletingRow(DataGridViewRowCancelEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_UserDeletingRow\" data-linktype=\"relative-path\">UserDeletingRow</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnValidating_System_ComponentModel_CancelEventArgs_\" data-linktype=\"self-bookmark\">OnValidating(CancelEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_OnVisibleChanged_System_EventArgs_\" data-linktype=\"self-bookmark\">OnVisibleChanged(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_VisibleChanged\" data-linktype=\"relative-path\">VisibleChanged</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_PaintBackground_System_Drawing_Graphics_System_Drawing_Rectangle_System_Drawing_Rectangle_\" data-linktype=\"self-bookmark\">PaintBackground(Graphics,Rectangle,Rectangle)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Paints the background of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessAKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessAKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the A key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessDataGridViewKey_System_Windows_Forms_KeyEventArgs_\" data-linktype=\"self-bookmark\">ProcessDataGridViewKey(KeyEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes keys used for navigating in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessDeleteKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessDeleteKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the DELETE key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessDialogKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessDialogKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes keys, such as the TAB, ESCAPE, ENTER, and ARROW keys, used to control dialog boxes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessDownKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessDownKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the DOWN ARROW key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessEndKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessEndKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the END key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessEnterKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessEnterKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the ENTER key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessEscapeKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessEscapeKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the ESC key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessF2Key_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessF2Key(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the F2 key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessHomeKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessHomeKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the HOME key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessInsertKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessInsertKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the INSERT key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessKeyEventArgs_System_Windows_Forms_Message__\" data-linktype=\"self-bookmark\">ProcessKeyEventArgs(Message)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes a key message and generates the appropriate control events.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessKeyPreview_System_Windows_Forms_Message__\" data-linktype=\"self-bookmark\">ProcessKeyPreview(Message)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Previews a keyboard message.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessLeftKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessLeftKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the LEFT ARROW key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessNextKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessNextKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the PAGE DOWN key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessPriorKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessPriorKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the PAGE UP key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessRightKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessRightKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the RIGHT ARROW key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessSpaceKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessSpaceKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the SPACEBAR.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessTabKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessTabKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the TAB key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessUpKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessUpKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the UP ARROW key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ProcessZeroKey_System_Windows_Forms_Keys_\" data-linktype=\"self-bookmark\">ProcessZeroKey(Keys)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the 0 key.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RefreshEdit\" data-linktype=\"self-bookmark\">RefreshEdit()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Refreshes the value of the current cell with the underlying cell value when the cell is in edit mode, discarding any previous value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ResetText\" data-linktype=\"self-bookmark\">ResetText()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridView.Text*</span> property to its default value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_SelectAll\" data-linktype=\"self-bookmark\">SelectAll()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Selects all the cells in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_SetBoundsCore_System_Int32_System_Int32_System_Int32_System_Int32_System_Windows_Forms_BoundsSpecified_\" data-linktype=\"self-bookmark\">SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>This member overrides <span class=\"xref\">stem.Windows.Forms.Control.SetBoundsCore*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_SetCurrentCellAddressCore_System_Int32_System_Int32_System_Boolean_System_Boolean_System_Boolean_\" data-linktype=\"self-bookmark\">SetCurrentCellAddressCore(Int32,Int32,Boolean,Boolean,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the currently active cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_SetSelectedCellCore_System_Int32_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">SetSelectedCellCore(Int32,Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Changes the selection state of the cell with the specified row and column indexes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_SetSelectedColumnCore_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">SetSelectedColumnCore(Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Changes the selection state of the column with the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_SetSelectedRowCore_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">SetSelectedRowCore(Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Changes the selection state of the row with the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_Sort_System_Collections_IComparer_\" data-linktype=\"self-bookmark\">Sort(IComparer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sorts the contents of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control using an implementation of the <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">IComparer</a> interface.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_Sort_System_Windows_Forms_DataGridViewColumn_System_ComponentModel_ListSortDirection_\" data-linktype=\"self-bookmark\">Sort(DataGridViewColumn,ListSortDirection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sorts the contents of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control in ascending or descending order based on the contents of the specified column.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_UpdateCellErrorText_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">UpdateCellErrorText(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Forces the cell at the specified location to update its error text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_UpdateCellValue_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">UpdateCellValue(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Forces the control to update its display of the cell at the specified location based on its new value, applying any automatic sizing modes currently in effect.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_UpdateRowErrorText_System_Int32_\" data-linktype=\"self-bookmark\">UpdateRowErrorText(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Forces the row at the given row index to update its error text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_UpdateRowErrorText_System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">UpdateRowErrorText(Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Forces the rows in the given range to update their error text.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_UpdateRowHeightInfo_System_Int32_System_Boolean_\" data-linktype=\"self-bookmark\">UpdateRowHeightInfo(Int32,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Forces the specified row or rows to update their height information.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_WndProc_System_Windows_Forms_Message__\" data-linktype=\"self-bookmark\">WndProc(Message)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes window messages.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AllowUserToAddRowsChanged\" data-linktype=\"self-bookmark\">AllowUserToAddRowsChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.AllowUserToAddRows*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AllowUserToDeleteRowsChanged\" data-linktype=\"self-bookmark\">AllowUserToDeleteRowsChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the AllowUserToDeleteRowsChanged property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AllowUserToOrderColumnsChanged\" data-linktype=\"self-bookmark\">AllowUserToOrderColumnsChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.AllowUserToOrderColumns*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AllowUserToResizeColumnsChanged\" data-linktype=\"self-bookmark\">AllowUserToResizeColumnsChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.AllowUserToResizeColumns*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AllowUserToResizeRowsChanged\" data-linktype=\"self-bookmark\">AllowUserToResizeRowsChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.AllowUserToResizeRows*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AlternatingRowsDefaultCellStyleChanged\" data-linktype=\"self-bookmark\">AlternatingRowsDefaultCellStyleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoGenerateColumnsChanged\" data-linktype=\"self-bookmark\">AutoGenerateColumnsChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the AutoGenerateColumnsChanged property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoSizeColumnModeChanged\" data-linktype=\"self-bookmark\">AutoSizeColumnModeChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.AutoSizeMode*</span> property of a column changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoSizeColumnsModeChanged\" data-linktype=\"self-bookmark\">AutoSizeColumnsModeChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.AutoSizeColumnsMode*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_AutoSizeRowsModeChanged\" data-linktype=\"self-bookmark\">AutoSizeRowsModeChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_BackColorChanged\" data-linktype=\"self-bookmark\">BackColorChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.BackColor*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_BackgroundColorChanged\" data-linktype=\"self-bookmark\">BackgroundColorChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.BackgroundColor*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_BackgroundImageChanged\" data-linktype=\"self-bookmark\">BackgroundImageChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.BackgroundImage*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_BackgroundImageLayoutChanged\" data-linktype=\"self-bookmark\">BackgroundImageLayoutChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.BackgroundImageLayout*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_BorderStyleChanged\" data-linktype=\"self-bookmark\">BorderStyleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.BorderStyle*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CancelRowEdit\" data-linktype=\"self-bookmark\">CancelRowEdit</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.VirtualMode*</span> property of a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control is <code>true</code> and the cancels edits in a row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellBeginEdit\" data-linktype=\"self-bookmark\">CellBeginEdit</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when edit mode starts for the selected cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellBorderStyleChanged\" data-linktype=\"self-bookmark\">CellBorderStyleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the border style of a cell changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellClick\" data-linktype=\"self-bookmark\">CellClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when any part of a cell is clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellContentClick\" data-linktype=\"self-bookmark\">CellContentClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the content within a cell is clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellContentDoubleClick\" data-linktype=\"self-bookmark\">CellContentDoubleClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user double-clicks a cell&#39;s contents.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellContextMenuStripChanged\" data-linktype=\"self-bookmark\">CellContextMenuStripChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ContextMenuStrip*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellContextMenuStripNeeded\" data-linktype=\"self-bookmark\">CellContextMenuStripNeeded</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a cell&#39;s shortcut menu is needed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellDoubleClick\" data-linktype=\"self-bookmark\">CellDoubleClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user double-clicks anywhere in a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellEndEdit\" data-linktype=\"self-bookmark\">CellEndEdit</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when edit mode stops for the currently selected cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellEnter\" data-linktype=\"self-bookmark\">CellEnter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the current cell changes in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control or when the control receives input focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellErrorTextChanged\" data-linktype=\"self-bookmark\">CellErrorTextChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ErrorText*</span> property of a cell changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"self-bookmark\">CellErrorTextNeeded</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a cell&#39;s error text is needed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellFormatting\" data-linktype=\"self-bookmark\">CellFormatting</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the contents of a cell need to be formatted for display.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellLeave\" data-linktype=\"self-bookmark\">CellLeave</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a cell loses input focus and is no longer the current cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellMouseClick\" data-linktype=\"self-bookmark\">CellMouseClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs whenever the user clicks anywhere on a cell with the mouse.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellMouseDoubleClick\" data-linktype=\"self-bookmark\">CellMouseDoubleClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a cell within the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is double-clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellMouseDown\" data-linktype=\"self-bookmark\">CellMouseDown</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user presses a mouse button while the mouse pointer is within the boundaries of a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellMouseEnter\" data-linktype=\"self-bookmark\">CellMouseEnter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the mouse pointer enters a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellMouseLeave\" data-linktype=\"self-bookmark\">CellMouseLeave</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the mouse pointer leaves a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellMouseMove\" data-linktype=\"self-bookmark\">CellMouseMove</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the mouse pointer moves over the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellMouseUp\" data-linktype=\"self-bookmark\">CellMouseUp</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user releases a mouse button while over a cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"self-bookmark\">CellPainting</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a cell needs to be drawn.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellParsing\" data-linktype=\"self-bookmark\">CellParsing</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a cell leaves edit mode if the cell value has been modified.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellStateChanged\" data-linktype=\"self-bookmark\">CellStateChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a cell state changes, such as when the cell loses or gains focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellStyleChanged\" data-linktype=\"self-bookmark\">CellStyleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.Style*</span> property of a <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellStyleContentChanged\" data-linktype=\"self-bookmark\">CellStyleContentChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when one of the values of a cell style changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellToolTipTextChanged\" data-linktype=\"self-bookmark\">CellToolTipTextChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ToolTipText*</span> property value changes for a cell in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellToolTipTextNeeded\" data-linktype=\"self-bookmark\">CellToolTipTextNeeded</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a cell&#39;s ToolTip text is needed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellValidated\" data-linktype=\"self-bookmark\">CellValidated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs after the cell has finished validating.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellValidating\" data-linktype=\"self-bookmark\">CellValidating</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a cell loses input focus, enabling content validation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellValueChanged\" data-linktype=\"self-bookmark\">CellValueChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of a cell changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellValueNeeded\" data-linktype=\"self-bookmark\">CellValueNeeded</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.VirtualMode*</span> property of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control is <code>true</code> and the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> requires a value for a cell in order to format and display the cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CellValuePushed\" data-linktype=\"self-bookmark\">CellValuePushed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.VirtualMode*</span> property of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control is <code>true</code> and a cell value has changed and requires storage in the underlying data source.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnAdded\" data-linktype=\"self-bookmark\">ColumnAdded</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a column is added to the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnContextMenuStripChanged\" data-linktype=\"self-bookmark\">ColumnContextMenuStripChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.ContextMenuStrip*</span> property of a column changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnDataPropertyNameChanged\" data-linktype=\"self-bookmark\">ColumnDataPropertyNameChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.DataPropertyName*</span> property for a column changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnDefaultCellStyleChanged\" data-linktype=\"self-bookmark\">ColumnDefaultCellStyleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewBand.DefaultCellStyle*</span> property for a column changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnDisplayIndexChanged\" data-linktype=\"self-bookmark\">ColumnDisplayIndexChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.DisplayIndex*</span> property for a column changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnDividerDoubleClick\" data-linktype=\"self-bookmark\">ColumnDividerDoubleClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user double-clicks a divider between two columns.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnDividerWidthChanged\" data-linktype=\"self-bookmark\">ColumnDividerWidthChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.DividerWidth*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnHeaderCellChanged\" data-linktype=\"self-bookmark\">ColumnHeaderCellChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the contents of a column header cell change.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnHeaderMouseClick\" data-linktype=\"self-bookmark\">ColumnHeaderMouseClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user clicks a column header.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnHeaderMouseDoubleClick\" data-linktype=\"self-bookmark\">ColumnHeaderMouseDoubleClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a column header is double-clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnHeadersBorderStyleChanged\" data-linktype=\"self-bookmark\">ColumnHeadersBorderStyleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.ColumnHeadersBorderStyle*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyleChanged\" data-linktype=\"self-bookmark\">ColumnHeadersDefaultCellStyleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnHeadersHeightChanged\" data-linktype=\"self-bookmark\">ColumnHeadersHeightChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.ColumnHeadersHeight*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnHeadersHeightSizeModeChanged\" data-linktype=\"self-bookmark\">ColumnHeadersHeightSizeModeChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnMinimumWidthChanged\" data-linktype=\"self-bookmark\">ColumnMinimumWidthChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.MinimumWidth*</span> property for a column changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnNameChanged\" data-linktype=\"self-bookmark\">ColumnNameChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.Name*</span> property for a column changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnRemoved\" data-linktype=\"self-bookmark\">ColumnRemoved</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a column is removed from the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnSortModeChanged\" data-linktype=\"self-bookmark\">ColumnSortModeChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.SortMode*</span> property for a column changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnStateChanged\" data-linktype=\"self-bookmark\">ColumnStateChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a column changes state, such as gaining or losing focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnToolTipTextChanged\" data-linktype=\"self-bookmark\">ColumnToolTipTextChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.ToolTipText*</span> property value changes for a column in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ColumnWidthChanged\" data-linktype=\"self-bookmark\">ColumnWidthChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.Width*</span> property for a column changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CurrentCellChanged\" data-linktype=\"self-bookmark\">CurrentCellChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.CurrentCell*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_CurrentCellDirtyStateChanged\" data-linktype=\"self-bookmark\">CurrentCellDirtyStateChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the state of a cell changes in relation to a change in its contents.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_DataBindingComplete\" data-linktype=\"self-bookmark\">DataBindingComplete</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs after a data-binding operation has finished.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"self-bookmark\">DataError</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when an external data-parsing or validation operation throws an exception, or when an attempt to commit data to a data source fails.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_DataMemberChanged\" data-linktype=\"self-bookmark\">DataMemberChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.DataMember*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_DataSourceChanged\" data-linktype=\"self-bookmark\">DataSourceChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.DataSource*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_DefaultCellStyleChanged\" data-linktype=\"self-bookmark\">DefaultCellStyleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.DefaultCellStyle*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_DefaultValuesNeeded\" data-linktype=\"self-bookmark\">DefaultValuesNeeded</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user enters the row for new records so that it can be populated with default values.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_EditingControlShowing\" data-linktype=\"self-bookmark\">EditingControlShowing</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a control for editing a cell is showing.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_EditModeChanged\" data-linktype=\"self-bookmark\">EditModeChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.EditMode*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_FontChanged\" data-linktype=\"self-bookmark\">FontChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.Font*</span> property value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ForeColorChanged\" data-linktype=\"self-bookmark\">ForeColorChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.ForeColor*</span> property value changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_GridColorChanged\" data-linktype=\"self-bookmark\">GridColorChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.GridColor*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_MultiSelectChanged\" data-linktype=\"self-bookmark\">MultiSelectChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.MultiSelect*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_NewRowNeeded\" data-linktype=\"self-bookmark\">NewRowNeeded</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.VirtualMode*</span> property of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is <code>true</code> and the user navigates to the new row at the bottom of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_PaddingChanged\" data-linktype=\"self-bookmark\">PaddingChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.Padding*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_ReadOnlyChanged\" data-linktype=\"self-bookmark\">ReadOnlyChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.ReadOnly*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowContextMenuStripChanged\" data-linktype=\"self-bookmark\">RowContextMenuStripChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.ContextMenuStrip*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowContextMenuStripNeeded\" data-linktype=\"self-bookmark\">RowContextMenuStripNeeded</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row&#39;s shortcut menu is needed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowDefaultCellStyleChanged\" data-linktype=\"self-bookmark\">RowDefaultCellStyleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewBand.DefaultCellStyle*</span> property for a row changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowDirtyStateNeeded\" data-linktype=\"self-bookmark\">RowDirtyStateNeeded</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.VirtualMode*</span> property of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control is <code>true</code> and the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> needs to determine whether the current row has uncommitted changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowDividerDoubleClick\" data-linktype=\"self-bookmark\">RowDividerDoubleClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user double-clicks the divider between two rows.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowDividerHeightChanged\" data-linktype=\"self-bookmark\">RowDividerHeightChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.DividerHeight*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowEnter\" data-linktype=\"self-bookmark\">RowEnter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row receives input focus but before it becomes the current row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowErrorTextChanged\" data-linktype=\"self-bookmark\">RowErrorTextChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.ErrorText*</span> property of a row changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowErrorTextNeeded\" data-linktype=\"self-bookmark\">RowErrorTextNeeded</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row&#39;s error text is needed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowHeaderCellChanged\" data-linktype=\"self-bookmark\">RowHeaderCellChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user changes the contents of a row header cell.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowHeaderMouseClick\" data-linktype=\"self-bookmark\">RowHeaderMouseClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user clicks within the boundaries of a row header.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowHeaderMouseDoubleClick\" data-linktype=\"self-bookmark\">RowHeaderMouseDoubleClick</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row header is double-clicked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowHeadersBorderStyleChanged\" data-linktype=\"self-bookmark\">RowHeadersBorderStyleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.RowHeadersBorderStyle*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowHeadersDefaultCellStyleChanged\" data-linktype=\"self-bookmark\">RowHeadersDefaultCellStyleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowHeadersWidthChanged\" data-linktype=\"self-bookmark\">RowHeadersWidthChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.RowHeadersWidth*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowHeadersWidthSizeModeChanged\" data-linktype=\"self-bookmark\">RowHeadersWidthSizeModeChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.RowHeadersWidthSizeMode*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowHeightChanged\" data-linktype=\"self-bookmark\">RowHeightChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.Height*</span> property for a row changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowHeightInfoNeeded\" data-linktype=\"self-bookmark\">RowHeightInfoNeeded</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when information about row height is requested.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowHeightInfoPushed\" data-linktype=\"self-bookmark\">RowHeightInfoPushed</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user changes the height of a row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowLeave\" data-linktype=\"self-bookmark\">RowLeave</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row loses input focus and is no longer the current row.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowMinimumHeightChanged\" data-linktype=\"self-bookmark\">RowMinimumHeightChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.MinimumHeight*</span> property for a row changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"self-bookmark\">RowPostPaint</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs after a <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> is painted.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowPrePaint\" data-linktype=\"self-bookmark\">RowPrePaint</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs before a <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> is painted</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowsAdded\" data-linktype=\"self-bookmark\">RowsAdded</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs after a new row is added to the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowsDefaultCellStyleChanged\" data-linktype=\"self-bookmark\">RowsDefaultCellStyleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.RowsDefaultCellStyle*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowsRemoved\" data-linktype=\"self-bookmark\">RowsRemoved</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row or rows are deleted from the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowStateChanged\" data-linktype=\"self-bookmark\">RowStateChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row changes state, such as losing or gaining input focus.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowUnshared\" data-linktype=\"self-bookmark\">RowUnshared</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row&#39;s state changes from shared to unshared.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowValidated\" data-linktype=\"self-bookmark\">RowValidated</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs after a row has finished validating.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_RowValidating\" data-linktype=\"self-bookmark\">RowValidating</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when a row is validating.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_Scroll\" data-linktype=\"self-bookmark\">Scroll</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user scrolls through the control contents.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"self-bookmark\">SelectionChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the current selection changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_SortCompare\" data-linktype=\"self-bookmark\">SortCompare</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> compares two cell values to perform a sort operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_Sorted\" data-linktype=\"self-bookmark\">Sorted</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control completes a sorting operation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_StyleChanged\" data-linktype=\"self-bookmark\">StyleChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the control style changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_TextChanged\" data-linktype=\"self-bookmark\">TextChanged</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.Text*</span> property changes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_UserAddedRow\" data-linktype=\"self-bookmark\">UserAddedRow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user has finished adding a row to the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_UserDeletedRow\" data-linktype=\"self-bookmark\">UserDeletedRow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user has finished deleting a row from the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_UserDeletingRow\" data-linktype=\"self-bookmark\">UserDeletingRow</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user deletes a row from the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_System_ComponentModel_ISupportInitialize_BeginInit\" data-linktype=\"self-bookmark\">ISupportInitialize.BeginInit()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.ComponentModel.ISupportInitialize.BeginInit*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_DataGridView_System_ComponentModel_ISupportInitialize_EndInit\" data-linktype=\"self-bookmark\">ISupportInitialize.EndInit()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>For a description of this member, see <span class=\"xref\">stem.ComponentModel.ISupportInitialize.EndInit*</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView__ctor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataGridView()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public DataGridView ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table shows initial property values for an instance of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> class.  </p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Initial Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToAddRows_\" data-linktype=\"relative-path\">AllowUserToAddRows</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToDeleteRows_\" data-linktype=\"relative-path\">AllowUserToDeleteRows</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToOrderColumns_\" data-linktype=\"relative-path\">AllowUserToOrderColumns</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToResizeColumns_\" data-linktype=\"relative-path\">AllowUserToResizeColumns</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToResizeRows_\" data-linktype=\"relative-path\">AllowUserToResizeRows</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoGenerateColumns_\" data-linktype=\"relative-path\">AutoGenerateColumns</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeColumnsMode_\" data-linktype=\"relative-path\">AutoSizeColumnsMode</a></td>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeRowsMode_\" data-linktype=\"relative-path\">AutoSizeRowsMode</a></td>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ClipboardCopyMode_\" data-linktype=\"relative-path\">ClipboardCopyMode</a></td>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewclipboardcopymode\" data-linktype=\"relative-path\">DataGridViewClipboardCopyMode</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersHeightSizeMode_\" data-linktype=\"relative-path\">ColumnHeadersHeightSizeMode</a></td>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnheadersheightsizemode\" data-linktype=\"relative-path\">DataGridViewColumnHeadersHeightSizeMode</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersVisible_\" data-linktype=\"relative-path\">ColumnHeadersVisible</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EditMode_\" data-linktype=\"relative-path\">EditMode</a></td>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridvieweditmode\" data-linktype=\"relative-path\">DataGridViewEditMode</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_MultiSelect_\" data-linktype=\"relative-path\">MultiSelect</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a></td>\n<td><code>false</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersVisible_\" data-linktype=\"relative-path\">RowHeadersVisible</a></td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersWidthSizeMode_\" data-linktype=\"relative-path\">RowHeadersWidthSizeMode</a></td>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a></td>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">DataGridViewSelectionMode</a></td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AdjustedTopLeftHeaderBorderStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AdjustedTopLeftHeaderBorderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AdjustedTopLeftHeaderBorderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the border style for the upper-left cell in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustedTopLeftHeaderBorderStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> that represents the style of the border of the upper-left cell in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The upper-left cell is the cell that is shared by the column header row and the row header column. The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> gets the value of this property while painting the upper-left cell.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to override the AdjustedTopLeftHeaderBorderStyle property to customize the borders of the upper-left cell. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewAdvancedBorderStyle#12\">        public override DataGridViewAdvancedBorderStyle AdjustedTopLeftHeaderBorderStyle\n        {\n            get\n            {\n                DataGridViewAdvancedBorderStyle newStyle =\n                    new DataGridViewAdvancedBorderStyle();\n                newStyle.Top = DataGridViewAdvancedCellBorderStyle.None;\n                newStyle.Left = DataGridViewAdvancedCellBorderStyle.None;\n                newStyle.Bottom = DataGridViewAdvancedCellBorderStyle.Outset;\n                newStyle.Right = DataGridViewAdvancedCellBorderStyle.OutsetDouble;\n                return newStyle;\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewAdvancedBorderStyle#12\">        Public Overrides ReadOnly Property AdjustedTopLeftHeaderBorderStyle() _\n            As DataGridViewAdvancedBorderStyle\n            Get\n                Dim newStyle As New DataGridViewAdvancedBorderStyle()\n                With newStyle\n                    .Top = DataGridViewAdvancedCellBorderStyle.None\n                    .Left = DataGridViewAdvancedCellBorderStyle.None\n                    .Bottom = DataGridViewAdvancedCellBorderStyle.Outset\n                    .Right = DataGridViewAdvancedCellBorderStyle.OutsetDouble\n                End With\n                Return newStyle\n            End Get\n        End Property\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AdvancedCellBorderStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AdvancedCellBorderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AdvancedCellBorderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the border style of the cells in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedCellBorderStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> that represents the border style of the cells in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the AdvancedCellBorderStyle property to customize the appearance of cells&#39; borders. To change the style of the borders using the built-in styles, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBorderStyle_\" data-linktype=\"relative-path\">CellBorderStyle</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AdvancedColumnHeadersBorderStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AdvancedColumnHeadersBorderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AdvancedColumnHeadersBorderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the border style of the column header cells in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedColumnHeadersBorderStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> that represents the border style of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnheadercell\" data-linktype=\"relative-path\">DataGridViewColumnHeaderCell</a> objects in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the AdvancedColumnHeadersBorderStyle property to customize the appearance of column header cells&#39; borders. To change the style of the borders using the built-in styles, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersBorderStyle_\" data-linktype=\"relative-path\">ColumnHeadersBorderStyle</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AdvancedRowHeadersBorderStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AdvancedRowHeadersBorderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AdvancedRowHeadersBorderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the border style of the row header cells in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewAdvancedBorderStyle AdvancedRowHeadersBorderStyle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> that represents the border style of the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheadercell\" data-linktype=\"relative-path\">DataGridViewRowHeaderCell</a> objects in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the AdvancedRowHeadersBorderStyle property to customize the appearance of row header cells&#39; borders in a derived <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. To change the style of the borders using the built-in styles, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersBorderStyle_\" data-linktype=\"relative-path\">RowHeadersBorderStyle</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AllowUserToAddRows\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AllowUserToAddRows_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowUserToAddRows</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the option to add rows is displayed to the user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowUserToAddRows { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the add-row option is displayed to the user; otherwise <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is bound to data, the user is allowed to add rows if both this property and the data source&#39;s <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_AllowNew_\" data-linktype=\"relative-path\">AllowNew</a> property are set to <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this property in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> class overview.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    &#39; Configures the appearance and behavior of a DataGridView control.\n    Private Sub InitializeDataGridView()\n\n        &#39; Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill\n        dataGridView1.BackgroundColor = Color.LightGray\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D\n\n        &#39; Set property values appropriate for read-only display and \n        &#39; limited interactivity. \n        dataGridView1.AllowUserToAddRows = False\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.AllowUserToOrderColumns = True\n        dataGridView1.ReadOnly = True\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect\n        dataGridView1.MultiSelect = False\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None\n        dataGridView1.AllowUserToResizeColumns = False\n        dataGridView1.ColumnHeadersHeightSizeMode = _\n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing\n        dataGridView1.AllowUserToResizeRows = False\n        dataGridView1.RowHeadersWidthSizeMode = _\n            DataGridViewRowHeadersWidthSizeMode.DisableResizing\n\n        &#39; Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black\n\n        &#39; Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        &#39; value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty\n\n        &#39; Set the background color for all rows and for alternating rows. \n        &#39; The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray\n\n        &#39; Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black\n\n        &#39; Set the Format property on the &quot;Last Prepared&quot; column to cause\n        &#39; the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns(&quot;Last Prepared&quot;).DefaultCellStyle.Format = &quot;y&quot;\n\n        &#39; Specify a larger font for the &quot;Ratings&quot; column. \n        Dim font As New Font( _\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold)\n        Try\n            dataGridView1.Columns(&quot;Rating&quot;).DefaultCellStyle.Font = font\n        Finally\n            font.Dispose()\n        End Try\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    // Configures the appearance and behavior of a DataGridView control.\n    private void InitializeDataGridView()\n    {\n        // Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill;\n        dataGridView1.BackgroundColor = Color.LightGray;\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n\n        // Set property values appropriate for read-only display and \n        // limited interactivity. \n        dataGridView1.AllowUserToAddRows = false;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.AllowUserToOrderColumns = true;\n        dataGridView1.ReadOnly = true;\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None;\n        dataGridView1.AllowUserToResizeColumns = false;\n        dataGridView1.ColumnHeadersHeightSizeMode = \n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing;\n        dataGridView1.AllowUserToResizeRows = false;\n        dataGridView1.RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode.DisableResizing;\n\n        // Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White;\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black;\n\n        // Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        // value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty;\n\n        // Set the background color for all rows and for alternating rows. \n        // The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray;\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray;\n\n        // Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White;\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black;\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black;\n\n        // Set the Format property on the &quot;Last Prepared&quot; column to cause\n        // the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns[&quot;Last Prepared&quot;].DefaultCellStyle.Format = &quot;y&quot;;\n\n        // Specify a larger font for the &quot;Ratings&quot; column. \n        using (Font font = new Font(\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold))\n        {\n            dataGridView1.Columns[&quot;Rating&quot;].DefaultCellStyle.Font = font;\n        }\n\n        // Attach a handler to the CellFormatting event.\n        dataGridView1.CellFormatting += new\n            DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AllowUserToDeleteRows\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AllowUserToDeleteRows_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowUserToDeleteRows</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the user is allowed to delete rows from the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowUserToDeleteRows { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the user can delete rows; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is bound to data, the user is allowed to delete rows if both this property and the <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_AllowRemove_\" data-linktype=\"relative-path\">AllowRemove</a> property are set to <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this property in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> class overview.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    &#39; Configures the appearance and behavior of a DataGridView control.\n    Private Sub InitializeDataGridView()\n\n        &#39; Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill\n        dataGridView1.BackgroundColor = Color.LightGray\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D\n\n        &#39; Set property values appropriate for read-only display and \n        &#39; limited interactivity. \n        dataGridView1.AllowUserToAddRows = False\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.AllowUserToOrderColumns = True\n        dataGridView1.ReadOnly = True\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect\n        dataGridView1.MultiSelect = False\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None\n        dataGridView1.AllowUserToResizeColumns = False\n        dataGridView1.ColumnHeadersHeightSizeMode = _\n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing\n        dataGridView1.AllowUserToResizeRows = False\n        dataGridView1.RowHeadersWidthSizeMode = _\n            DataGridViewRowHeadersWidthSizeMode.DisableResizing\n\n        &#39; Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black\n\n        &#39; Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        &#39; value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty\n\n        &#39; Set the background color for all rows and for alternating rows. \n        &#39; The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray\n\n        &#39; Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black\n\n        &#39; Set the Format property on the &quot;Last Prepared&quot; column to cause\n        &#39; the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns(&quot;Last Prepared&quot;).DefaultCellStyle.Format = &quot;y&quot;\n\n        &#39; Specify a larger font for the &quot;Ratings&quot; column. \n        Dim font As New Font( _\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold)\n        Try\n            dataGridView1.Columns(&quot;Rating&quot;).DefaultCellStyle.Font = font\n        Finally\n            font.Dispose()\n        End Try\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    // Configures the appearance and behavior of a DataGridView control.\n    private void InitializeDataGridView()\n    {\n        // Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill;\n        dataGridView1.BackgroundColor = Color.LightGray;\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n\n        // Set property values appropriate for read-only display and \n        // limited interactivity. \n        dataGridView1.AllowUserToAddRows = false;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.AllowUserToOrderColumns = true;\n        dataGridView1.ReadOnly = true;\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None;\n        dataGridView1.AllowUserToResizeColumns = false;\n        dataGridView1.ColumnHeadersHeightSizeMode = \n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing;\n        dataGridView1.AllowUserToResizeRows = false;\n        dataGridView1.RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode.DisableResizing;\n\n        // Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White;\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black;\n\n        // Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        // value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty;\n\n        // Set the background color for all rows and for alternating rows. \n        // The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray;\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray;\n\n        // Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White;\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black;\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black;\n\n        // Set the Format property on the &quot;Last Prepared&quot; column to cause\n        // the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns[&quot;Last Prepared&quot;].DefaultCellStyle.Format = &quot;y&quot;;\n\n        // Specify a larger font for the &quot;Ratings&quot; column. \n        using (Font font = new Font(\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold))\n        {\n            dataGridView1.Columns[&quot;Rating&quot;].DefaultCellStyle.Font = font;\n        }\n\n        // Attach a handler to the CellFormatting event.\n        dataGridView1.CellFormatting += new\n            DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AllowUserToOrderColumns\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AllowUserToOrderColumns_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowUserToOrderColumns</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether manual column repositioning is enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowUserToOrderColumns { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the user can change the column order; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When column repositioning is enabled, users can drag a column header to a new position. Note that frozen and unfrozen columns form two separate groups; users can reposition columns within a group, but cannot move a column from one group to the other.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control does not support double buffering. If <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleBuffered_\" data-linktype=\"relative-path\">DoubleBuffered</a> is set to <code>true</code> in a derived <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this property in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> class overview.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    &#39; Configures the appearance and behavior of a DataGridView control.\n    Private Sub InitializeDataGridView()\n\n        &#39; Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill\n        dataGridView1.BackgroundColor = Color.LightGray\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D\n\n        &#39; Set property values appropriate for read-only display and \n        &#39; limited interactivity. \n        dataGridView1.AllowUserToAddRows = False\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.AllowUserToOrderColumns = True\n        dataGridView1.ReadOnly = True\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect\n        dataGridView1.MultiSelect = False\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None\n        dataGridView1.AllowUserToResizeColumns = False\n        dataGridView1.ColumnHeadersHeightSizeMode = _\n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing\n        dataGridView1.AllowUserToResizeRows = False\n        dataGridView1.RowHeadersWidthSizeMode = _\n            DataGridViewRowHeadersWidthSizeMode.DisableResizing\n\n        &#39; Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black\n\n        &#39; Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        &#39; value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty\n\n        &#39; Set the background color for all rows and for alternating rows. \n        &#39; The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray\n\n        &#39; Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black\n\n        &#39; Set the Format property on the &quot;Last Prepared&quot; column to cause\n        &#39; the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns(&quot;Last Prepared&quot;).DefaultCellStyle.Format = &quot;y&quot;\n\n        &#39; Specify a larger font for the &quot;Ratings&quot; column. \n        Dim font As New Font( _\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold)\n        Try\n            dataGridView1.Columns(&quot;Rating&quot;).DefaultCellStyle.Font = font\n        Finally\n            font.Dispose()\n        End Try\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    // Configures the appearance and behavior of a DataGridView control.\n    private void InitializeDataGridView()\n    {\n        // Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill;\n        dataGridView1.BackgroundColor = Color.LightGray;\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n\n        // Set property values appropriate for read-only display and \n        // limited interactivity. \n        dataGridView1.AllowUserToAddRows = false;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.AllowUserToOrderColumns = true;\n        dataGridView1.ReadOnly = true;\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None;\n        dataGridView1.AllowUserToResizeColumns = false;\n        dataGridView1.ColumnHeadersHeightSizeMode = \n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing;\n        dataGridView1.AllowUserToResizeRows = false;\n        dataGridView1.RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode.DisableResizing;\n\n        // Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White;\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black;\n\n        // Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        // value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty;\n\n        // Set the background color for all rows and for alternating rows. \n        // The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray;\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray;\n\n        // Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White;\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black;\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black;\n\n        // Set the Format property on the &quot;Last Prepared&quot; column to cause\n        // the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns[&quot;Last Prepared&quot;].DefaultCellStyle.Format = &quot;y&quot;;\n\n        // Specify a larger font for the &quot;Ratings&quot; column. \n        using (Font font = new Font(\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold))\n        {\n            dataGridView1.Columns[&quot;Rating&quot;].DefaultCellStyle.Font = font;\n        }\n\n        // Attach a handler to the CellFormatting event.\n        dataGridView1.CellFormatting += new\n            DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AllowUserToResizeColumns\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AllowUserToResizeColumns_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowUserToResizeColumns</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether users can resize columns.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowUserToResizeColumns { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if users can resize columns; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to prevent users from manually changing column widths. This is useful, for example, with display-only columns where data is loaded once and columns are resized at that time.  </p>\n<p> For more information about user resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control does not support double buffering. If <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleBuffered_\" data-linktype=\"relative-path\">DoubleBuffered</a> is set to <code>true</code> in a derived <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use this property in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> class overview.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    &#39; Configures the appearance and behavior of a DataGridView control.\n    Private Sub InitializeDataGridView()\n\n        &#39; Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill\n        dataGridView1.BackgroundColor = Color.LightGray\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D\n\n        &#39; Set property values appropriate for read-only display and \n        &#39; limited interactivity. \n        dataGridView1.AllowUserToAddRows = False\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.AllowUserToOrderColumns = True\n        dataGridView1.ReadOnly = True\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect\n        dataGridView1.MultiSelect = False\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None\n        dataGridView1.AllowUserToResizeColumns = False\n        dataGridView1.ColumnHeadersHeightSizeMode = _\n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing\n        dataGridView1.AllowUserToResizeRows = False\n        dataGridView1.RowHeadersWidthSizeMode = _\n            DataGridViewRowHeadersWidthSizeMode.DisableResizing\n\n        &#39; Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black\n\n        &#39; Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        &#39; value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty\n\n        &#39; Set the background color for all rows and for alternating rows. \n        &#39; The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray\n\n        &#39; Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black\n\n        &#39; Set the Format property on the &quot;Last Prepared&quot; column to cause\n        &#39; the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns(&quot;Last Prepared&quot;).DefaultCellStyle.Format = &quot;y&quot;\n\n        &#39; Specify a larger font for the &quot;Ratings&quot; column. \n        Dim font As New Font( _\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold)\n        Try\n            dataGridView1.Columns(&quot;Rating&quot;).DefaultCellStyle.Font = font\n        Finally\n            font.Dispose()\n        End Try\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    // Configures the appearance and behavior of a DataGridView control.\n    private void InitializeDataGridView()\n    {\n        // Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill;\n        dataGridView1.BackgroundColor = Color.LightGray;\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n\n        // Set property values appropriate for read-only display and \n        // limited interactivity. \n        dataGridView1.AllowUserToAddRows = false;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.AllowUserToOrderColumns = true;\n        dataGridView1.ReadOnly = true;\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None;\n        dataGridView1.AllowUserToResizeColumns = false;\n        dataGridView1.ColumnHeadersHeightSizeMode = \n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing;\n        dataGridView1.AllowUserToResizeRows = false;\n        dataGridView1.RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode.DisableResizing;\n\n        // Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White;\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black;\n\n        // Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        // value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty;\n\n        // Set the background color for all rows and for alternating rows. \n        // The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray;\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray;\n\n        // Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White;\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black;\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black;\n\n        // Set the Format property on the &quot;Last Prepared&quot; column to cause\n        // the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns[&quot;Last Prepared&quot;].DefaultCellStyle.Format = &quot;y&quot;;\n\n        // Specify a larger font for the &quot;Ratings&quot; column. \n        using (Font font = new Font(\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold))\n        {\n            dataGridView1.Columns[&quot;Rating&quot;].DefaultCellStyle.Font = font;\n        }\n\n        // Attach a handler to the CellFormatting event.\n        dataGridView1.CellFormatting += new\n            DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AllowUserToResizeRows\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AllowUserToResizeRows_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowUserToResizeRows</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether users can resize rows.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AllowUserToResizeRows { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if all the rows are resizable; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to prevent users from manually changing row heights. This is useful, for example, with display-only controls where data is loaded once and rows are resized at that time.  </p>\n<p> For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>.  </p>\n<p> For more information about user resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control does not support double buffering. If <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleBuffered_\" data-linktype=\"relative-path\">DoubleBuffered</a> is set to <code>true</code> in a derived <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use this property in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> class overview.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    &#39; Configures the appearance and behavior of a DataGridView control.\n    Private Sub InitializeDataGridView()\n\n        &#39; Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill\n        dataGridView1.BackgroundColor = Color.LightGray\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D\n\n        &#39; Set property values appropriate for read-only display and \n        &#39; limited interactivity. \n        dataGridView1.AllowUserToAddRows = False\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.AllowUserToOrderColumns = True\n        dataGridView1.ReadOnly = True\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect\n        dataGridView1.MultiSelect = False\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None\n        dataGridView1.AllowUserToResizeColumns = False\n        dataGridView1.ColumnHeadersHeightSizeMode = _\n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing\n        dataGridView1.AllowUserToResizeRows = False\n        dataGridView1.RowHeadersWidthSizeMode = _\n            DataGridViewRowHeadersWidthSizeMode.DisableResizing\n\n        &#39; Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black\n\n        &#39; Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        &#39; value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty\n\n        &#39; Set the background color for all rows and for alternating rows. \n        &#39; The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray\n\n        &#39; Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black\n\n        &#39; Set the Format property on the &quot;Last Prepared&quot; column to cause\n        &#39; the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns(&quot;Last Prepared&quot;).DefaultCellStyle.Format = &quot;y&quot;\n\n        &#39; Specify a larger font for the &quot;Ratings&quot; column. \n        Dim font As New Font( _\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold)\n        Try\n            dataGridView1.Columns(&quot;Rating&quot;).DefaultCellStyle.Font = font\n        Finally\n            font.Dispose()\n        End Try\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    // Configures the appearance and behavior of a DataGridView control.\n    private void InitializeDataGridView()\n    {\n        // Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill;\n        dataGridView1.BackgroundColor = Color.LightGray;\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n\n        // Set property values appropriate for read-only display and \n        // limited interactivity. \n        dataGridView1.AllowUserToAddRows = false;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.AllowUserToOrderColumns = true;\n        dataGridView1.ReadOnly = true;\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None;\n        dataGridView1.AllowUserToResizeColumns = false;\n        dataGridView1.ColumnHeadersHeightSizeMode = \n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing;\n        dataGridView1.AllowUserToResizeRows = false;\n        dataGridView1.RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode.DisableResizing;\n\n        // Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White;\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black;\n\n        // Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        // value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty;\n\n        // Set the background color for all rows and for alternating rows. \n        // The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray;\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray;\n\n        // Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White;\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black;\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black;\n\n        // Set the Format property on the &quot;Last Prepared&quot; column to cause\n        // the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns[&quot;Last Prepared&quot;].DefaultCellStyle.Format = &quot;y&quot;;\n\n        // Specify a larger font for the &quot;Ratings&quot; column. \n        using (Font font = new Font(\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold))\n        {\n            dataGridView1.Columns[&quot;Rating&quot;].DefaultCellStyle.Font = font;\n        }\n\n        // Attach a handler to the CellFormatting event.\n        dataGridView1.CellFormatting += new\n            DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AlternatingRowsDefaultCellStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AlternatingRowsDefaultCellStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AlternatingRowsDefaultCellStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the default cell style applied to odd-numbered rows of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewCellStyle AlternatingRowsDefaultCellStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> to apply to the odd-numbered rows.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control displays its cells using the styles indicated by the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_InheritedStyle_\" data-linktype=\"relative-path\">InheritedStyle</a> property, which inherits styles from other properties of type <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a>. For cells in rows with odd index numbers, the styles specified through the AlternatingRowsDefaultCellStyle property override the styles specified through the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowsDefaultCellStyle_\" data-linktype=\"relative-path\">RowsDefaultCellStyle</a>, and are overridden by the styles specified through the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Style_\" data-linktype=\"relative-path\">Style</a> properties.  </p>\n<p> For more information, see <a href=\"../Topic/Cell%20Styles%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Cell Styles in the Windows Forms DataGridView Control</a>.  </p>\n<p> When getting this property, a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> with default values will be created if the property has not already been accessed. This can cause a performance impact when getting this property for many rows. Whenever possible, use a single <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> to set this property for multiple rows. For more information, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use this property to create a ledger effect in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> class overview.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    &#39; Configures the appearance and behavior of a DataGridView control.\n    Private Sub InitializeDataGridView()\n\n        &#39; Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill\n        dataGridView1.BackgroundColor = Color.LightGray\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D\n\n        &#39; Set property values appropriate for read-only display and \n        &#39; limited interactivity. \n        dataGridView1.AllowUserToAddRows = False\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.AllowUserToOrderColumns = True\n        dataGridView1.ReadOnly = True\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect\n        dataGridView1.MultiSelect = False\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None\n        dataGridView1.AllowUserToResizeColumns = False\n        dataGridView1.ColumnHeadersHeightSizeMode = _\n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing\n        dataGridView1.AllowUserToResizeRows = False\n        dataGridView1.RowHeadersWidthSizeMode = _\n            DataGridViewRowHeadersWidthSizeMode.DisableResizing\n\n        &#39; Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black\n\n        &#39; Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        &#39; value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty\n\n        &#39; Set the background color for all rows and for alternating rows. \n        &#39; The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray\n\n        &#39; Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black\n\n        &#39; Set the Format property on the &quot;Last Prepared&quot; column to cause\n        &#39; the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns(&quot;Last Prepared&quot;).DefaultCellStyle.Format = &quot;y&quot;\n\n        &#39; Specify a larger font for the &quot;Ratings&quot; column. \n        Dim font As New Font( _\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold)\n        Try\n            dataGridView1.Columns(&quot;Rating&quot;).DefaultCellStyle.Font = font\n        Finally\n            font.Dispose()\n        End Try\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    // Configures the appearance and behavior of a DataGridView control.\n    private void InitializeDataGridView()\n    {\n        // Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill;\n        dataGridView1.BackgroundColor = Color.LightGray;\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n\n        // Set property values appropriate for read-only display and \n        // limited interactivity. \n        dataGridView1.AllowUserToAddRows = false;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.AllowUserToOrderColumns = true;\n        dataGridView1.ReadOnly = true;\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None;\n        dataGridView1.AllowUserToResizeColumns = false;\n        dataGridView1.ColumnHeadersHeightSizeMode = \n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing;\n        dataGridView1.AllowUserToResizeRows = false;\n        dataGridView1.RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode.DisableResizing;\n\n        // Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White;\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black;\n\n        // Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        // value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty;\n\n        // Set the background color for all rows and for alternating rows. \n        // The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray;\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray;\n\n        // Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White;\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black;\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black;\n\n        // Set the Format property on the &quot;Last Prepared&quot; column to cause\n        // the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns[&quot;Last Prepared&quot;].DefaultCellStyle.Format = &quot;y&quot;;\n\n        // Specify a larger font for the &quot;Ratings&quot; column. \n        using (Font font = new Font(\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold))\n        {\n            dataGridView1.Columns[&quot;Rating&quot;].DefaultCellStyle.Font = font;\n        }\n\n        // Attach a handler to the CellFormatting event.\n        dataGridView1.CellFormatting += new\n            DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoGenerateColumns\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoGenerateColumns_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoGenerateColumns</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether columns are created automatically when the <span class=\"xref\">stem.Windows.Forms.DataGridView.DataSource*</span> or <span class=\"xref\">stem.Windows.Forms.DataGridView.DataMember*</span> properties are set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AutoGenerateColumns { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the columns should be created automatically; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Columns are automatically generated when this property is set to <code>true</code> and the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> or <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataMember_\" data-linktype=\"relative-path\">DataMember</a> properties are set or changed. Columns can also be automatically generated when the AutoGenerateColumns property is changed from <code>false</code> to <code>true</code>. If this property is <code>true</code> and the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> changes so there are columns that do not match the columns of the previous <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> value, data in the unmatched columns is discarded. This property is ignored if the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> or <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataMember_\" data-linktype=\"relative-path\">DataMember</a> properties are not set.  </p>\n<p> When AutoGenerateColumns is set to <code>true</code>, the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control generates one column for each public property of the objects in the data source. If the bound objects implement the <a class=\"xref\" href=\"system.componentmodel.icustomtypedescriptor\" data-linktype=\"relative-path\">ICustomTypeDescriptor</a> interface, the control generates one column for each property returned by the <a class=\"xref\" href=\"system.componentmodel.icustomtypedescriptor#System_ComponentModel_ICustomTypeDescriptor_GetProperties_\" data-linktype=\"relative-path\">GetProperties</a> method. Each column header will contain the value of the property name the column represents.  </p>\n<p> If you set the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property but set AutoGenerateColumns to <code>false</code>, you must add columns manually. You can bind each added column to the data source by setting the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DataPropertyName_\" data-linktype=\"relative-path\">DataPropertyName</a> property to the name of a property exposed by the bound objects.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Setting the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> in the Windows Forms Designer automatically sets the AutoGenerateColumns property to <code>false</code> and generates code to add and bind a column for each property in the data source. The code that is generated at design-time is equivalent to the manually added code shown in the following example. It is not the same as the auto-generation of columns at run-time that occurs when the AutoGenerateColumns property is set to <code>true</code>.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to add columns manually and bind them to a data source when you set AutoGenerateColumns to <code>false</code>. In this example, a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control is bound to a list of <code>Task</code> business objects. Then, columns are added and are bound to <code>Task</code> properties through the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DataPropertyName_\" data-linktype=\"relative-path\">DataPropertyName</a> property. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Access%20Objects%20in%20a%20Windows%20Forms%20DataGridViewComboBoxCell%20Drop-Down%20List.md\" data-linktype=\"relative-path\">How to: Access Objects in a Windows Forms DataGridViewComboBoxCell Drop-Down List</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewComboBoxObjectBinding#100\">public class Form1 : Form\n{\n    private List&lt;Employee&gt; employees = new List&lt;Employee&gt;();\n    private List&lt;Task&gt; tasks = new List&lt;Task&gt;();\n    private Button reportButton = new Button();\n    private DataGridView dataGridView1 = new DataGridView();\n\n    [STAThread]\n    public static void Main()\n    {\n        Application.Run(new Form1());\n    }\n\n    public Form1()\n    {\n        dataGridView1.Dock = DockStyle.Fill;\n        dataGridView1.AutoSizeColumnsMode = \n            DataGridViewAutoSizeColumnsMode.AllCells;\n        reportButton.Text = &quot;Generate Report&quot;;\n        reportButton.Dock = DockStyle.Top;\n        reportButton.Click += new EventHandler(reportButton_Click);\n\n        Controls.Add(dataGridView1);\n        Controls.Add(reportButton);\n        Load += new EventHandler(Form1_Load);\n        Text = &quot;DataGridViewComboBoxColumn Demo&quot;;\n    }\n\n    // Initializes the data source and populates the DataGridView control.\n    private void Form1_Load(object sender, EventArgs e)\n    {\n        PopulateLists();\n        dataGridView1.AutoGenerateColumns = false;\n        dataGridView1.DataSource = tasks;\n        AddColumns();\n    }\n\n    // Populates the employees and tasks lists. \n    private void PopulateLists()\n    {\n        employees.Add(new Employee(&quot;Harry&quot;));\n        employees.Add(new Employee(&quot;Sally&quot;));\n        employees.Add(new Employee(&quot;Roy&quot;));\n        employees.Add(new Employee(&quot;Pris&quot;));\n        tasks.Add(new Task(1, employees[1]));\n        tasks.Add(new Task(2));\n        tasks.Add(new Task(3, employees[2]));\n        tasks.Add(new Task(4));\n    }\n\n    // Configures columns for the DataGridView control.\n    private void AddColumns()\n    {\n        DataGridViewTextBoxColumn idColumn = \n            new DataGridViewTextBoxColumn();\n        idColumn.Name = &quot;Task&quot;;\n        idColumn.DataPropertyName = &quot;Id&quot;;\n        idColumn.ReadOnly = true;\n\n        DataGridViewComboBoxColumn assignedToColumn = \n            new DataGridViewComboBoxColumn();\n\n        // Populate the combo box drop-down list with Employee objects. \n        foreach (Employee e in employees) assignedToColumn.Items.Add(e);\n\n        // Add &quot;unassigned&quot; to the drop-down list and display it for \n        // empty AssignedTo values or when the user presses CTRL+0. \n        assignedToColumn.Items.Add(&quot;unassigned&quot;);\n        assignedToColumn.DefaultCellStyle.NullValue = &quot;unassigned&quot;;\n\n        assignedToColumn.Name = &quot;Assigned To&quot;;\n        assignedToColumn.DataPropertyName = &quot;AssignedTo&quot;;\n        assignedToColumn.AutoComplete = true;\n        assignedToColumn.DisplayMember = &quot;Name&quot;;\n        assignedToColumn.ValueMember = &quot;Self&quot;;\n\n        // Add a button column. \n        DataGridViewButtonColumn buttonColumn = \n            new DataGridViewButtonColumn();\n        buttonColumn.HeaderText = &quot;&quot;;\n        buttonColumn.Name = &quot;Status Request&quot;;\n        buttonColumn.Text = &quot;Request Status&quot;;\n        buttonColumn.UseColumnTextForButtonValue = true;\n\n        dataGridView1.Columns.Add(idColumn);\n        dataGridView1.Columns.Add(assignedToColumn);\n        dataGridView1.Columns.Add(buttonColumn);\n\n        // Add a CellClick handler to handle clicks in the button column.\n        dataGridView1.CellClick +=\n            new DataGridViewCellEventHandler(dataGridView1_CellClick);\n    }\n\n    // Reports on task assignments. \n    private void reportButton_Click(object sender, EventArgs e)\n    {\n        StringBuilder report = new StringBuilder();\n        foreach (Task t in tasks)\n        {\n            String assignment = \n                t.AssignedTo == null ? \n                &quot;unassigned&quot; : &quot;assigned to &quot; + t.AssignedTo.Name;\n            report.AppendFormat(&quot;Task {0} is {1}.&quot;, t.Id, assignment);\n            report.Append(Environment.NewLine);\n        }\n        MessageBox.Show(report.ToString(), &quot;Task Assignments&quot;);\n    }\n\n    // Calls the Employee.RequestStatus method.\n    void dataGridView1_CellClick(object sender, DataGridViewCellEventArgs e)\n    {\n        // Ignore clicks that are not on button cells. \n        if (e.RowIndex &lt; 0 || e.ColumnIndex !=\n            dataGridView1.Columns[&quot;Status Request&quot;].Index) return;\n\n        // Retrieve the task ID.\n        Int32 taskID = (Int32)dataGridView1[0, e.RowIndex].Value;\n\n        // Retrieve the Employee object from the &quot;Assigned To&quot; cell.\n        Employee assignedTo = dataGridView1.Rows[e.RowIndex]\n            .Cells[&quot;Assigned To&quot;].Value as Employee;\n\n        // Request status through the Employee object if present. \n        if (assignedTo != null)\n        {\n            assignedTo.RequestStatus(taskID);\n        }\n        else\n        {\n            MessageBox.Show(String.Format(\n                &quot;Task {0} is unassigned.&quot;, taskID), &quot;Status Request&quot;);\n        }\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewComboBoxObjectBinding#100\">Public Class Form1\n    Inherits Form\n\n    Private employees As New List(Of Employee)\n    Private tasks As New List(Of Task)\n    Private WithEvents reportButton As New Button\n    Private WithEvents dataGridView1 As New DataGridView\n\n    &lt;STAThread()&gt; _\n    Public Sub Main()\n        Application.Run(New Form1)\n    End Sub\n\n    Sub New()\n        dataGridView1.Dock = DockStyle.Fill\n        dataGridView1.AutoSizeColumnsMode = _\n            DataGridViewAutoSizeColumnsMode.AllCells\n        reportButton.Text = &quot;Generate Report&quot;\n        reportButton.Dock = DockStyle.Top\n\n        Controls.Add(dataGridView1)\n        Controls.Add(reportButton)\n        Text = &quot;DataGridViewComboBoxColumn Demo&quot;\n    End Sub\n\n    &#39; Initializes the data source and populates the DataGridView control.\n    Private Sub Form1_Load(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles Me.Load\n\n        PopulateLists()\n        dataGridView1.AutoGenerateColumns = False\n        dataGridView1.DataSource = tasks\n        AddColumns()\n\n    End Sub\n\n    &#39; Populates the employees and tasks lists. \n    Private Sub PopulateLists()\n        employees.Add(New Employee(&quot;Harry&quot;))\n        employees.Add(New Employee(&quot;Sally&quot;))\n        employees.Add(New Employee(&quot;Roy&quot;))\n        employees.Add(New Employee(&quot;Pris&quot;))\n        tasks.Add(New Task(1, employees(1)))\n        tasks.Add(New Task(2))\n        tasks.Add(New Task(3, employees(2)))\n        tasks.Add(New Task(4))\n    End Sub\n\n    &#39; Configures columns for the DataGridView control.\n    Private Sub AddColumns()\n\n        Dim idColumn As New DataGridViewTextBoxColumn()\n        idColumn.Name = &quot;Task&quot;\n        idColumn.DataPropertyName = &quot;Id&quot;\n        idColumn.ReadOnly = True\n\n        Dim assignedToColumn As New DataGridViewComboBoxColumn()\n\n        &#39; Populate the combo box drop-down list with Employee objects. \n        For Each e As Employee In employees\n            assignedToColumn.Items.Add(e)\n        Next\n\n        &#39; Add &quot;unassigned&quot; to the drop-down list and display it for \n        &#39; empty AssignedTo values or when the user presses CTRL+0. \n        assignedToColumn.Items.Add(&quot;unassigned&quot;)\n        assignedToColumn.DefaultCellStyle.NullValue = &quot;unassigned&quot;\n\n        assignedToColumn.Name = &quot;Assigned To&quot;\n        assignedToColumn.DataPropertyName = &quot;AssignedTo&quot;\n        assignedToColumn.AutoComplete = True\n        assignedToColumn.DisplayMember = &quot;Name&quot;\n        assignedToColumn.ValueMember = &quot;Self&quot;\n\n        &#39; Add a button column. \n        Dim buttonColumn As New DataGridViewButtonColumn()\n        buttonColumn.HeaderText = &quot;&quot;\n        buttonColumn.Name = &quot;Status Request&quot;\n        buttonColumn.Text = &quot;Request Status&quot;\n        buttonColumn.UseColumnTextForButtonValue = True\n\n        dataGridView1.Columns.Add(idColumn)\n        dataGridView1.Columns.Add(assignedToColumn)\n        dataGridView1.Columns.Add(buttonColumn)\n\n    End Sub\n\n    &#39; Reports on task assignments. \n    Private Sub reportButton_Click(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles reportButton.Click\n\n        Dim report As New StringBuilder()\n        For Each t As Task In tasks\n            Dim assignment As String\n            If t.AssignedTo Is Nothing Then\n                assignment = &quot;unassigned&quot;\n            Else\n                assignment = &quot;assigned to &quot; + t.AssignedTo.Name\n            End If\n            report.AppendFormat(&quot;Task {0} is {1}.&quot;, t.Id, assignment)\n            report.Append(Environment.NewLine)\n        Next\n        MessageBox.Show(report.ToString(), &quot;Task Assignments&quot;)\n\n    End Sub\n\n    &#39; Calls the Employee.RequestStatus method.\n    Private Sub dataGridView1_CellClick(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellClick\n\n        &#39; Ignore clicks that are not on button cells. \n        If e.RowIndex &lt; 0 OrElse Not e.ColumnIndex = _\n            dataGridView1.Columns(&quot;Status Request&quot;).Index Then Return\n\n        &#39; Retrieve the task ID.\n        Dim taskID As Int32 = CInt(dataGridView1(0, e.RowIndex).Value)\n\n        &#39; Retrieve the Employee object from the &quot;Assigned To&quot; cell.\n        Dim assignedTo As Employee = TryCast(dataGridView1.Rows(e.RowIndex) _\n            .Cells(&quot;Assigned To&quot;).Value, Employee)\n\n        &#39; Request status through the Employee object if present. \n        If assignedTo IsNot Nothing Then\n            assignedTo.RequestStatus(taskID)\n        Else\n            MessageBox.Show(String.Format( _\n                &quot;Task {0} is unassigned.&quot;, taskID), &quot;Status Request&quot;)\n        End If\n\n    End Sub\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoSize\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoSize</div>        \r\n          </div>\r\n    \r\n            <p>This property is not relevant for this class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool AutoSize { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if enabled; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoSizeColumnsMode\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoSizeColumnsMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoSizeColumnsMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating how column widths are determined.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewAutoSizeColumnsMode AutoSizeColumnsMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a> value. The default is <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a>, column headers are hidden, and at least one visible column has an <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.AutoSizeMode*</span> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a>.  </p>\n<p> -or-  </p>\n<p> The specified value when setting this property is <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a> and at least one visible column with an <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.AutoSizeMode*</span> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a> is frozen.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property lets you configure the control so that column widths are automatically adjusted either to fill the control or to fit cell contents. Size adjustments occur in fill mode whenever the width of the control changes. In content-based sizing modes, size adjustments occur whenever cell contents change or, if <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a> is enabled, whenever row heights change. Some content-based sizing modes let you limit the size adjustment to the currently displayed rows in order to increase performance.  </p>\n<p> To change the sizing mode for an individual column, set its <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_AutoSizeMode_\" data-linktype=\"relative-path\">AutoSizeMode</a> property. The default value of this property is <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a>, indicating that the column inherits its behavior and its <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_InheritedAutoSizeMode_\" data-linktype=\"relative-path\">InheritedAutoSizeMode</a> property value from the control.  </p>\n<p> Columns in fill mode divide the available control width in proportions indicated by their <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_FillWeight_\" data-linktype=\"relative-path\">FillWeight</a> property values. The width available for fill mode is determined by subtracting the widths of all other columns from the width of the client area of the control. If this width is smaller than the combined <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_MinimumWidth_\" data-linktype=\"relative-path\">MinimumWidth</a> values of all fill-mode columns, the horizontal scroll bar is displayed, all fill-mode columns are shown with their minimum widths, and user column-resizing is disabled. For more information about column fill mode, see <a href=\"../Topic/Column%20Fill%20Mode%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Column Fill Mode in the Windows Forms DataGridView Control</a>.  </p>\n<p> Only columns with a <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Visible_\" data-linktype=\"relative-path\">Visible</a> property value of <code>true</code> are resized automatically, and changing the visibility of a column does not cause resizing to occur. Additionally, when columns are set to automatically resize, the user cannot adjust the column widths with the mouse.  </p>\n<p> To adjust column widths programmatically, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumn_\" data-linktype=\"relative-path\">AutoResizeColumn</a> or <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumns_\" data-linktype=\"relative-path\">AutoResizeColumns</a> methods or set the column <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Width_\" data-linktype=\"relative-path\">Width</a> property.  </p>\n<p> For more information about content-based automatic sizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use this property in a master/detail scenario where two <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> controls display data from two tables in a parent/child relationship. In this example, the column sizing mode for the master control is <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a>, and the column widths are programmatically initialized to fit the loaded values. The details control is set to an automatic column sizing mode so that columns will adjust automatically whenever the values change (for example, when the user changes the current row in the parent table). This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Create%20a%20Master-Detail%20Form%20Using%20Two%20Windows%20Forms%20DataGridView%20Controls.md\" data-linktype=\"relative-path\">How to: Create a Master/Detail Form Using Two Windows Forms DataGridView Controls</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMasterDetails#10\">    Private Sub Form1_Load(ByVal sender As Object, ByVal e As System.EventArgs) _\n        Handles Me.Load\n\n        &#39; Bind the DataGridView controls to the BindingSource\n        &#39; components and load the data from the database.\n        masterDataGridView.DataSource = masterBindingSource\n        detailsDataGridView.DataSource = detailsBindingSource\n        GetData()\n\n        &#39; Resize the master DataGridView columns to fit the newly loaded data.\n        masterDataGridView.AutoResizeColumns()\n\n        &#39; Configure the details DataGridView so that its columns automatically\n        &#39; adjust their widths when the data changes.\n        detailsDataGridView.AutoSizeColumnsMode = _\n            DataGridViewAutoSizeColumnsMode.AllCells\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMasterDetails#10\">    private void Form1_Load(object sender, System.EventArgs e)\n    {\n        // Bind the DataGridView controls to the BindingSource\n        // components and load the data from the database.\n        masterDataGridView.DataSource = masterBindingSource;\n        detailsDataGridView.DataSource = detailsBindingSource;\n        GetData();\n\n        // Resize the master DataGridView columns to fit the newly loaded data.\n        masterDataGridView.AutoResizeColumns();\n\n        // Configure the details DataGridView so that its columns automatically\n        // adjust their widths when the data changes.\n        detailsDataGridView.AutoSizeColumnsMode = \n            DataGridViewAutoSizeColumnsMode.AllCells;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoSizeRowsMode\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoSizeRowsMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoSizeRowsMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating how row heights are determined.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewAutoSizeRowsMode AutoSizeRowsMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a> value indicating the sizing mode. The default is <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a> and row headers are hidden.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property lets you configure the control so that row heights are automatically adjusted to fit their contents whenever the contents change. If <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a> is enabled, row heights are also adjusted whenever column widths change. Some sizing modes let you limit the size adjustment to the currently displayed rows in order to increase performance.  </p>\n<p> Only rows with a <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_Visible_\" data-linktype=\"relative-path\">Visible</a> property value of <code>true</code> are resized automatically, and changing the visibility of a row does not cause resizing to occur. Additionally, when rows are set to automatically resize, the user cannot adjust the row heights with the mouse.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_Height_\" data-linktype=\"relative-path\">Height</a> value of an automatically sized row is recalculated during layout to account for the size of the font that is used. To get the correct <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_Height_\" data-linktype=\"relative-path\">Height</a>, you should retrieve the value in the form&#39;s <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> event instead of in the form&#39;s constructor.  </p>\n<p> To adjust row heights programmatically, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRow_\" data-linktype=\"relative-path\">AutoResizeRow</a> or <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRows_\" data-linktype=\"relative-path\">AutoResizeRows</a> methods, or set the row <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_Height_\" data-linktype=\"relative-path\">Height</a> property.  </p>\n<p> For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>.  </p>\n<p> For more information about content-based automatic sizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to set the row to automatically resize based on the contents of the row headers and all of the columns. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Automatically%20Resize%20Cells%20When%20Content%20Changes%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Automatically Resize Cells When Content Changes in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.AutoSizing#9\">    private void AutoSizeRowsMode(Object sender, EventArgs es)\n    {\n        dataGridView1.AutoSizeRowsMode =\n            DataGridViewAutoSizeRowsMode.AllCells;\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.AutoSizing#9\">   void AutoSizeRowsMode( Object^ /*sender*/, EventArgs^ /*es*/ )\n   {\n      dataGridView1-&gt;AutoSizeRowsMode = DataGridViewAutoSizeRowsMode::AllCells;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.AutoSizing#9\">    Private Sub AutoSizeRowsMode(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button7.Click\n\n        DataGridView1.AutoSizeRowsMode = _\n            DataGridViewAutoSizeRowsMode.AllCells\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_BackColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_BackColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the background color for the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Drawing.Color BackColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the background color of the control. The default is the value of the <span class=\"xref\">stem.Windows.Forms.Control.DefaultBackColor*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is not relevant to this control. To set the background color of the portion of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control not occupied by cells, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_BackgroundColor_\" data-linktype=\"relative-path\">BackgroundColor</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_BackgroundColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_BackgroundColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackgroundColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the background color of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color BackgroundColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the background color of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. The default is <span class=\"xref\">stem.Drawing.SystemColors.AppWorkspace*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is <a class=\"xref\" href=\"system.drawing.color#System_Drawing_Color_Empty\" data-linktype=\"relative-path\">Empty</a>.  </p>\n<p> -or-  </p>\n<p> The specified value when setting this property has a <span class=\"xref\">stem.Drawing.Color.A*</span> property value that is less that 255.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BackgroundColor property determines the color of the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that is not filled with cells.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to set the BackgroundColor property. In addition, the code example demonstrates how to set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Name_\" data-linktype=\"relative-path\">Name</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> properties. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code>, and then call the <code>SetUpDataGridView</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler. Ensure all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewUnbound#5\">    Private Sub SetUpDataGridView()\n\n        Me.Controls.Add(dataGridView1)\n        dataGridView1.ColumnCount = 5\n\n        With dataGridView1.ColumnHeadersDefaultCellStyle\n            .BackColor = Color.Navy\n            .ForeColor = Color.White\n            .Font = New Font(dataGridView1.Font, FontStyle.Bold)\n        End With\n\n        With dataGridView1\n            .EditMode = DataGridViewEditMode.EditOnEnter\n            .Name = &quot;dataGridView1&quot;\n            .Location = New Point(8, 8)\n            .Size = New Size(500, 300)\n            .AutoSizeRowsMode = _\n                DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders\n            .ColumnHeadersBorderStyle = _\n                DataGridViewHeaderBorderStyle.Raised\n            .CellBorderStyle = _\n                DataGridViewCellBorderStyle.Single\n            .GridColor = SystemColors.ActiveBorder\n            .RowHeadersVisible = False\n\n            .Columns(0).Name = &quot;Release Date&quot;\n            .Columns(1).Name = &quot;Track&quot;\n            .Columns(1).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter\n            .Columns(2).Name = &quot;Title&quot;\n            .Columns(3).Name = &quot;Artist&quot;\n            .Columns(4).Name = &quot;Album&quot;\n\n            &#39; Make the font italic for row four.\n            .Columns(4).DefaultCellStyle.Font = _\n                New Font(Control.DefaultFont, _\n                    FontStyle.Italic)\n\n            .SelectionMode = _\n                DataGridViewSelectionMode.FullRowSelect\n            .MultiSelect = False\n\n            .BackgroundColor = Color.Honeydew\n\n            .Dock = DockStyle.Fill\n        End With\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewUnbound#5\">   void SetUpDataGridView()\n   {\n      this-&gt;Controls-&gt;Add( dataGridView1 );\n      dataGridView1-&gt;ColumnCount = 5;\n      DataGridViewCellStyle^ style = dataGridView1-&gt;ColumnHeadersDefaultCellStyle;\n      style-&gt;BackColor = Color::Navy;\n      style-&gt;ForeColor = Color::White;\n      style-&gt;Font = gcnew System::Drawing::Font( dataGridView1-&gt;Font,FontStyle::Bold );\n      dataGridView1-&gt;EditMode = DataGridViewEditMode::EditOnEnter;\n      dataGridView1-&gt;Name = &quot;dataGridView1&quot;;\n      dataGridView1-&gt;Location = Point(8,8);\n      dataGridView1-&gt;Size = System::Drawing::Size( 500, 300 );\n      dataGridView1-&gt;AutoSizeRowsMode = DataGridViewAutoSizeRowsMode::DisplayedCellsExceptHeaders;\n      dataGridView1-&gt;ColumnHeadersBorderStyle = DataGridViewHeaderBorderStyle::Raised;\n      dataGridView1-&gt;CellBorderStyle = DataGridViewCellBorderStyle::Single;\n      dataGridView1-&gt;GridColor = SystemColors::ActiveBorder;\n      dataGridView1-&gt;RowHeadersVisible = false;\n      dataGridView1-&gt;Columns[ 0 ]-&gt;Name = &quot;Release Date&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;Name = &quot;Track&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;DefaultCellStyle-&gt;Alignment = DataGridViewContentAlignment::MiddleCenter;\n      dataGridView1-&gt;Columns[ 2 ]-&gt;Name = &quot;Title&quot;;\n      dataGridView1-&gt;Columns[ 3 ]-&gt;Name = &quot;Artist&quot;;\n      dataGridView1-&gt;Columns[ 4 ]-&gt;Name = &quot;Album&quot;;\n\n      // Make the font italic for row four.\n      dataGridView1-&gt;Columns[ 4 ]-&gt;DefaultCellStyle-&gt;Font = gcnew System::Drawing::Font( DataGridView::DefaultFont,FontStyle::Italic );\n      dataGridView1-&gt;SelectionMode = DataGridViewSelectionMode::FullRowSelect;\n      dataGridView1-&gt;MultiSelect = false;\n      dataGridView1-&gt;BackgroundColor = Color::Honeydew;\n      dataGridView1-&gt;Dock = DockStyle::Fill;\n      dataGridView1-&gt;CellFormatting += gcnew DataGridViewCellFormattingEventHandler( this, &amp;Form1::dataGridView1_CellFormatting );\n      dataGridView1-&gt;CellParsing += gcnew DataGridViewCellParsingEventHandler( this, &amp;Form1::dataGridView1_CellParsing );\n      addNewRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::addNewRowButton_Click );\n      deleteRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::deleteRowButton_Click );\n      ledgerStyleButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::ledgerStyleButton_Click );\n      dataGridView1-&gt;CellValidating += gcnew DataGridViewCellValidatingEventHandler( this, &amp;Form1::dataGridView1_CellValidating );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewUnbound#5\">    private void SetUpDataGridView()\n    {\n        this.Controls.Add(dataGridView1);\n        dataGridView1.ColumnCount = 5;\n        DataGridViewCellStyle style = \n            dataGridView1.ColumnHeadersDefaultCellStyle;\n        style.BackColor = Color.Navy;\n        style.ForeColor = Color.White;\n        style.Font = new Font(dataGridView1.Font, FontStyle.Bold);\n\n        dataGridView1.EditMode = DataGridViewEditMode.EditOnEnter;\n        dataGridView1.Name = &quot;dataGridView1&quot;;\n        dataGridView1.Location = new Point(8, 8);\n        dataGridView1.Size = new Size(500, 300);\n        dataGridView1.AutoSizeRowsMode = \n            DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders;\n        dataGridView1.ColumnHeadersBorderStyle = \n            DataGridViewHeaderBorderStyle.Raised;\n        dataGridView1.CellBorderStyle = DataGridViewCellBorderStyle.Single;\n        dataGridView1.GridColor = SystemColors.ActiveBorder;\n        dataGridView1.RowHeadersVisible = false;\n\n        dataGridView1.Columns[0].Name = &quot;Release Date&quot;;\n        dataGridView1.Columns[1].Name = &quot;Track&quot;;\n        dataGridView1.Columns[1].DefaultCellStyle.Alignment = \n            DataGridViewContentAlignment.MiddleCenter;\n        dataGridView1.Columns[2].Name = &quot;Title&quot;;\n        dataGridView1.Columns[3].Name = &quot;Artist&quot;;\n        dataGridView1.Columns[4].Name = &quot;Album&quot;;\n\n        // Make the font italic for row four.\n        dataGridView1.Columns[4].DefaultCellStyle.Font = new Font(DataGridView.DefaultFont, FontStyle.Italic);\n\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n\n        dataGridView1.BackgroundColor = Color.Honeydew;\n\n        dataGridView1.Dock = DockStyle.Fill;\n\n        dataGridView1.CellFormatting += new DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n        dataGridView1.CellParsing += new DataGridViewCellParsingEventHandler(dataGridView1_CellParsing);\n        addNewRowButton.Click += new EventHandler(addNewRowButton_Click);\n        deleteRowButton.Click += new EventHandler(deleteRowButton_Click);\n        ledgerStyleButton.Click += new EventHandler(ledgerStyleButton_Click);\n        dataGridView1.CellValidating += new DataGridViewCellValidatingEventHandler(dataGridView1_CellValidating);\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_BackgroundImage\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_BackgroundImage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackgroundImage</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the background image displayed in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Drawing.Image BackgroundImage { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.drawing.image\" data-linktype=\"relative-path\">Image</a> that represents the image to display in the background of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is not relevant for this control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_BackgroundImageLayout\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_BackgroundImageLayout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackgroundImageLayout</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the background image layout as defined in the <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a> enumeration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a> value indicating the background image layout. The default is <a class=\"xref\" href=\"system.windows.forms.imagelayout\" data-linktype=\"relative-path\">ImageLayout</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is not relevant for this control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_BorderStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_BorderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BorderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the border style for the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.BorderStyle BorderStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.borderstyle\" data-linktype=\"relative-path\">BorderStyle</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.borderstyle\" data-linktype=\"relative-path\">BorderStyle</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.borderstyle\" data-linktype=\"relative-path\">BorderStyle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is not a valid <a class=\"xref\" href=\"system.windows.forms.borderstyle\" data-linktype=\"relative-path\">BorderStyle</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property affects the outer border of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. To set the style of the cell borders, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBorderStyle_\" data-linktype=\"relative-path\">CellBorderStyle</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to initialize a simple data-bound <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. It also demonstrates how to set the BorderStyle property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewSimpleBound#1\">using System;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Windows.Forms;\nusing System.Drawing;\n\npublic class Form1 : System.Windows.Forms.Form\n{\n    private DataGridView dataGridView1 = new DataGridView();\n    private BindingSource bindingSource1 = new BindingSource();\n\n    public Form1()\n    {\n        dataGridView1.Dock = DockStyle.Fill;\n        this.Controls.Add(dataGridView1);\n        InitializeDataGridView();\n    }\n\n    private void InitializeDataGridView()\n    {\n        try\n        {\n            // Set up the DataGridView.\n            dataGridView1.Dock = DockStyle.Fill;\n\n            // Automatically generate the DataGridView columns.\n            dataGridView1.AutoGenerateColumns = true;\n\n            // Set up the data source.\n            bindingSource1.DataSource = GetData(&quot;Select * From Products&quot;);\n            dataGridView1.DataSource = bindingSource1;\n\n            // Automatically resize the visible rows.\n            dataGridView1.AutoSizeRowsMode =\n                DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders;\n\n            // Set the DataGridView control&#39;s border.\n            dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n\n            // Put the cells in edit mode when user enters them.\n            dataGridView1.EditMode = DataGridViewEditMode.EditOnEnter;\n        }\n        catch (SqlException)\n        {\n            MessageBox.Show(&quot;To run this sample replace connection.ConnectionString&quot; +\n                &quot; with a valid connection string to a Northwind&quot; +\n                &quot; database accessible to your system.&quot;, &quot;ERROR&quot;,\n                MessageBoxButtons.OK, MessageBoxIcon.Exclamation);\n            System.Threading.Thread.CurrentThread.Abort();\n        }\n    }\n\n    private static DataTable GetData(string sqlCommand)\n    {\n        string connectionString = &quot;Integrated Security=SSPI;&quot; +\n            &quot;Persist Security Info=False;&quot; +\n            &quot;Initial Catalog=Northwind;Data Source=localhost&quot;;\n\n        SqlConnection northwindConnection = new SqlConnection(connectionString);\n\n        SqlCommand command = new SqlCommand(sqlCommand, northwindConnection);\n        SqlDataAdapter adapter = new SqlDataAdapter();\n        adapter.SelectCommand = command;\n\n        DataTable table = new DataTable();\n        table.Locale = System.Globalization.CultureInfo.InvariantCulture;\n        adapter.Fill(table);\n\n        return table;\n    }\n\n    [STAThreadAttribute()]\n    public static void Main()\n    {\n        Application.Run(new Form1());\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewSimpleBound#1\">Imports System.Data\nImports System.Data.SqlClient\nImports System.Windows.Forms\nImports System.Drawing\nImports System\n\nPublic Class Form1\n    Inherits System.Windows.Forms.Form\n\n    Private WithEvents dataGridView1 As New DataGridView()\n    Private bindingSource1 As New BindingSource()\n\n    Public Sub New()\n\n        Me.dataGridView1.Dock = DockStyle.Fill\n        Me.Controls.Add(Me.dataGridView1)\n        InitializeDataGridView()\n\n    End Sub\n\n    Private Sub InitializeDataGridView()\n        Try\n            &#39; Set up the DataGridView.\n            With Me.dataGridView1\n                &#39; Automatically generate the DataGridView columns.\n                .AutoGenerateColumns = True\n\n                &#39; Set up the data source.\n                bindingSource1.DataSource = GetData(&quot;Select * From Products&quot;)\n                .DataSource = bindingSource1\n\n                &#39; Automatically resize the visible rows.\n                .AutoSizeRowsMode = _\n                    DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders\n\n                &#39; Set the DataGridView control&#39;s border.\n                .BorderStyle = BorderStyle.Fixed3D\n\n                &#39; Put the cells in edit mode when user enters them.\n                .EditMode = DataGridViewEditMode.EditOnEnter\n            End With\n        Catch ex As SqlException\n            MessageBox.Show(&quot;To run this sample replace &quot; _\n                &amp; &quot;connection.ConnectionString with a valid connection string&quot; _\n                &amp; &quot;  to a Northwind database accessible to your system.&quot;, _\n                &quot;ERROR&quot;, MessageBoxButtons.OK, MessageBoxIcon.Exclamation)\n            System.Threading.Thread.CurrentThread.Abort()\n        End Try\n    End Sub\n\n    Private Shared Function GetData(ByVal sqlCommand As String) _\n        As DataTable\n\n        Dim connectionString As String = _\n            &quot;Integrated Security=SSPI;Persist Security Info=False;&quot; _\n            &amp; &quot;Initial Catalog=Northwind;Data Source=localhost&quot;\n\n        Dim northwindConnection As SqlConnection = _\n            New SqlConnection(connectionString)\n\n        Dim command As New SqlCommand(sqlCommand, northwindConnection)\n        Dim adapter As SqlDataAdapter = New SqlDataAdapter()\n        adapter.SelectCommand = command\n\n        Dim table As New DataTable\n        table.Locale = System.Globalization.CultureInfo.InvariantCulture\n        adapter.Fill(table)\n\n        Return table\n\n    End Function\n\n    &lt;STAThreadAttribute()&gt; _\n    Public Shared Sub Main()\n        Application.Run(New Form1)\n    End Sub\n\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewSimpleBound#1\">#using &lt;System.Transactions.dll&gt;\n#using &lt;System.EnterpriseServices.dll&gt;\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Data.dll&gt;\n\nusing namespace System;\nusing namespace System::Data;\nusing namespace System::Data::SqlClient;\nusing namespace System::Windows::Forms;\nusing namespace System::Drawing;\npublic ref class Form1: public System::Windows::Forms::Form\n{\npublic:\n   Form1()\n      : Form()\n   {\n      \n      //This call is required by the Windows Form Designer.\n      InitializeComponent();\n      InitializeDataGridView();\n      \n      //Add any initialization after the InitializeComponent() call\n   }\n\n\nprotected:\n\n   ~Form1()\n   {\n      if ( components != nullptr )\n      {\n         delete components;\n      }\n   }\n\nprivate:\n   System::Windows::Forms::DataGridView ^ dataGridView1;\n   System::Windows::Forms::BindingSource ^ bindingSource1;\n\n   //Required by the Windows Form Designer\n   System::ComponentModel::IContainer^ components;\n\n   //NOTE: The following procedure is required by the Windows Form Designer\n   //It can be modified using the Windows Form Designer.  \n   //Do not modify it using the code editor.\n\n   [System::Diagnostics::DebuggerNonUserCode]\n   void InitializeComponent()\n   {\n      this-&gt;dataGridView1 = gcnew System::Windows::Forms::DataGridView;\n      this-&gt;bindingSource1 = gcnew System::Windows::Forms::BindingSource;\n      this-&gt;SuspendLayout();\n\n      //\n      //DataGridView1\n      //\n      this-&gt;dataGridView1-&gt;Location = System::Drawing::Point( 96, 71 );\n      this-&gt;dataGridView1-&gt;Name = &quot;DataGridView1&quot;;\n      this-&gt;dataGridView1-&gt;Size = System::Drawing::Size( 321, 286 );\n      this-&gt;dataGridView1-&gt;TabIndex = 0;\n\n      //\n      //Form1\n      //\n      this-&gt;ClientSize = System::Drawing::Size( 518, 413 );\n      this-&gt;Controls-&gt;Add( this-&gt;dataGridView1 );\n      this-&gt;Name = &quot;Form1&quot;;\n      this-&gt;Text = &quot;Form1&quot;;\n      this-&gt;ResumeLayout( false );\n   }\n\ninternal:\n\n   static property Form1^ GetInstance \n   {\n      Form1^ get()\n      {\n         if ( m_DefaultInstance == nullptr || m_DefaultInstance-&gt;IsDisposed )\n         {\n            System::Threading::Monitor::Enter( m_SyncObject );\n            try\n            {\n               if ( m_DefaultInstance == nullptr || m_DefaultInstance-&gt;IsDisposed )\n               {\n                  m_DefaultInstance = gcnew Form1;\n               }\n            }\n            finally\n            {\n               System::Threading::Monitor::Exit( m_SyncObject );\n            }\n         }\n\n         return m_DefaultInstance;\n      }\n   }\n\nprivate:\n   static Form1^ m_DefaultInstance;\n   static Object^ m_SyncObject = gcnew Object;\n\n   void InitializeDataGridView()\n   {\n      try\n      {\n         // Set up the DataGridView.\n         dataGridView1-&gt;Dock = DockStyle::Fill;\n\n         // Automatically generate the DataGridView columns.\n         dataGridView1-&gt;AutoGenerateColumns = true;\n\n         // Set up the data source.\n         bindingSource1-&gt;DataSource = GetData( &quot;Select * From Products&quot; );\n         dataGridView1-&gt;DataSource = bindingSource1;\n\n         // Automatically resize the visible rows.\n         dataGridView1-&gt;AutoSizeRowsMode = DataGridViewAutoSizeRowsMode::DisplayedCellsExceptHeaders;\n\n         // Set the DataGridView control&#39;s border.\n         dataGridView1-&gt;BorderStyle = BorderStyle::Fixed3D;\n\n         // Put the cells in edit mode when user enters them.\n         dataGridView1-&gt;EditMode = DataGridViewEditMode::EditOnEnter;\n      }\n      catch ( SqlException^ ) \n      {\n         MessageBox::Show( &quot;To run this sample replace connection.ConnectionString&quot;\n         &quot; with a valid connection string to a Northwind&quot;\n         &quot; database accessible to your system.&quot;, &quot;ERROR&quot;, MessageBoxButtons::OK, MessageBoxIcon::Exclamation );\n         System::Threading::Thread::CurrentThread-&gt;Abort();\n      }\n      catch ( System::Exception^ ex ) \n      {\n         MessageBox::Show( ex-&gt;ToString() );\n      }\n   }\n\n\n   DataTable^ GetData( String^ sqlCommand )\n   {\n      String^ connectionString = &quot;Integrated Security=SSPI;Persist Security Info=False;&quot;\n      &quot;Initial Catalog=Northwind;Data Source= localhost&quot;;\n      SqlConnection^ northwindConnection = gcnew SqlConnection( connectionString );\n      SqlCommand^ command = gcnew SqlCommand( sqlCommand,northwindConnection );\n      SqlDataAdapter^ adapter = gcnew SqlDataAdapter;\n      adapter-&gt;SelectCommand = command;\n      DataTable^ table = gcnew DataTable;\n      adapter-&gt;Fill( table );\n      return table;\n   }\n};\n\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CanEnableIme\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_CanEnableIme_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanEnableIme</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the <span class=\"xref\">stem.Windows.Forms.Control.ImeMode*</span> property can be set to an active value, to enable IME support.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool CanEnableIme { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if there is an editable cell selected; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellBorderStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_CellBorderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellBorderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the cell border style for the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewCellBorderStyle CellBorderStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellborderstyle\" data-linktype=\"relative-path\">DataGridViewCellBorderStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellborderstyle\" data-linktype=\"relative-path\">DataGridViewCellBorderStyle</a> that represents the border style of the cells contained in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewcellborderstyle\" data-linktype=\"relative-path\">DataGridViewCellBorderStyle</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is <a class=\"xref\" href=\"system.windows.forms.datagridviewcellborderstyle\" data-linktype=\"relative-path\">DataGridViewCellBorderStyle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the CellBorderStyle property is set to anything other than <a class=\"xref\" href=\"system.windows.forms.datagridviewcellborderstyle\" data-linktype=\"relative-path\">DataGridViewCellBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewcellborderstyle\" data-linktype=\"relative-path\">DataGridViewCellBorderStyle</a>, or <a class=\"xref\" href=\"system.windows.forms.datagridviewcellborderstyle\" data-linktype=\"relative-path\">DataGridViewCellBorderStyle</a>, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GridColor_\" data-linktype=\"relative-path\">GridColor</a> property must be a system color.  </p>\n<p> You cannot set this property to the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellborderstyle\" data-linktype=\"relative-path\">DataGridViewCellBorderStyle</a> value, which is a read-only value indicating that the cell border style has been customized through the use of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AdvancedCellBorderStyle_\" data-linktype=\"relative-path\">AdvancedCellBorderStyle</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the CellBorderStyle property. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code>, and then call the <code>SetUpDataGridView</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler. Ensure all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewUnbound#5\">    Private Sub SetUpDataGridView()\n\n        Me.Controls.Add(dataGridView1)\n        dataGridView1.ColumnCount = 5\n\n        With dataGridView1.ColumnHeadersDefaultCellStyle\n            .BackColor = Color.Navy\n            .ForeColor = Color.White\n            .Font = New Font(dataGridView1.Font, FontStyle.Bold)\n        End With\n\n        With dataGridView1\n            .EditMode = DataGridViewEditMode.EditOnEnter\n            .Name = &quot;dataGridView1&quot;\n            .Location = New Point(8, 8)\n            .Size = New Size(500, 300)\n            .AutoSizeRowsMode = _\n                DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders\n            .ColumnHeadersBorderStyle = _\n                DataGridViewHeaderBorderStyle.Raised\n            .CellBorderStyle = _\n                DataGridViewCellBorderStyle.Single\n            .GridColor = SystemColors.ActiveBorder\n            .RowHeadersVisible = False\n\n            .Columns(0).Name = &quot;Release Date&quot;\n            .Columns(1).Name = &quot;Track&quot;\n            .Columns(1).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter\n            .Columns(2).Name = &quot;Title&quot;\n            .Columns(3).Name = &quot;Artist&quot;\n            .Columns(4).Name = &quot;Album&quot;\n\n            &#39; Make the font italic for row four.\n            .Columns(4).DefaultCellStyle.Font = _\n                New Font(Control.DefaultFont, _\n                    FontStyle.Italic)\n\n            .SelectionMode = _\n                DataGridViewSelectionMode.FullRowSelect\n            .MultiSelect = False\n\n            .BackgroundColor = Color.Honeydew\n\n            .Dock = DockStyle.Fill\n        End With\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewUnbound#5\">   void SetUpDataGridView()\n   {\n      this-&gt;Controls-&gt;Add( dataGridView1 );\n      dataGridView1-&gt;ColumnCount = 5;\n      DataGridViewCellStyle^ style = dataGridView1-&gt;ColumnHeadersDefaultCellStyle;\n      style-&gt;BackColor = Color::Navy;\n      style-&gt;ForeColor = Color::White;\n      style-&gt;Font = gcnew System::Drawing::Font( dataGridView1-&gt;Font,FontStyle::Bold );\n      dataGridView1-&gt;EditMode = DataGridViewEditMode::EditOnEnter;\n      dataGridView1-&gt;Name = &quot;dataGridView1&quot;;\n      dataGridView1-&gt;Location = Point(8,8);\n      dataGridView1-&gt;Size = System::Drawing::Size( 500, 300 );\n      dataGridView1-&gt;AutoSizeRowsMode = DataGridViewAutoSizeRowsMode::DisplayedCellsExceptHeaders;\n      dataGridView1-&gt;ColumnHeadersBorderStyle = DataGridViewHeaderBorderStyle::Raised;\n      dataGridView1-&gt;CellBorderStyle = DataGridViewCellBorderStyle::Single;\n      dataGridView1-&gt;GridColor = SystemColors::ActiveBorder;\n      dataGridView1-&gt;RowHeadersVisible = false;\n      dataGridView1-&gt;Columns[ 0 ]-&gt;Name = &quot;Release Date&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;Name = &quot;Track&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;DefaultCellStyle-&gt;Alignment = DataGridViewContentAlignment::MiddleCenter;\n      dataGridView1-&gt;Columns[ 2 ]-&gt;Name = &quot;Title&quot;;\n      dataGridView1-&gt;Columns[ 3 ]-&gt;Name = &quot;Artist&quot;;\n      dataGridView1-&gt;Columns[ 4 ]-&gt;Name = &quot;Album&quot;;\n\n      // Make the font italic for row four.\n      dataGridView1-&gt;Columns[ 4 ]-&gt;DefaultCellStyle-&gt;Font = gcnew System::Drawing::Font( DataGridView::DefaultFont,FontStyle::Italic );\n      dataGridView1-&gt;SelectionMode = DataGridViewSelectionMode::FullRowSelect;\n      dataGridView1-&gt;MultiSelect = false;\n      dataGridView1-&gt;BackgroundColor = Color::Honeydew;\n      dataGridView1-&gt;Dock = DockStyle::Fill;\n      dataGridView1-&gt;CellFormatting += gcnew DataGridViewCellFormattingEventHandler( this, &amp;Form1::dataGridView1_CellFormatting );\n      dataGridView1-&gt;CellParsing += gcnew DataGridViewCellParsingEventHandler( this, &amp;Form1::dataGridView1_CellParsing );\n      addNewRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::addNewRowButton_Click );\n      deleteRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::deleteRowButton_Click );\n      ledgerStyleButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::ledgerStyleButton_Click );\n      dataGridView1-&gt;CellValidating += gcnew DataGridViewCellValidatingEventHandler( this, &amp;Form1::dataGridView1_CellValidating );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewUnbound#5\">    private void SetUpDataGridView()\n    {\n        this.Controls.Add(dataGridView1);\n        dataGridView1.ColumnCount = 5;\n        DataGridViewCellStyle style = \n            dataGridView1.ColumnHeadersDefaultCellStyle;\n        style.BackColor = Color.Navy;\n        style.ForeColor = Color.White;\n        style.Font = new Font(dataGridView1.Font, FontStyle.Bold);\n\n        dataGridView1.EditMode = DataGridViewEditMode.EditOnEnter;\n        dataGridView1.Name = &quot;dataGridView1&quot;;\n        dataGridView1.Location = new Point(8, 8);\n        dataGridView1.Size = new Size(500, 300);\n        dataGridView1.AutoSizeRowsMode = \n            DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders;\n        dataGridView1.ColumnHeadersBorderStyle = \n            DataGridViewHeaderBorderStyle.Raised;\n        dataGridView1.CellBorderStyle = DataGridViewCellBorderStyle.Single;\n        dataGridView1.GridColor = SystemColors.ActiveBorder;\n        dataGridView1.RowHeadersVisible = false;\n\n        dataGridView1.Columns[0].Name = &quot;Release Date&quot;;\n        dataGridView1.Columns[1].Name = &quot;Track&quot;;\n        dataGridView1.Columns[1].DefaultCellStyle.Alignment = \n            DataGridViewContentAlignment.MiddleCenter;\n        dataGridView1.Columns[2].Name = &quot;Title&quot;;\n        dataGridView1.Columns[3].Name = &quot;Artist&quot;;\n        dataGridView1.Columns[4].Name = &quot;Album&quot;;\n\n        // Make the font italic for row four.\n        dataGridView1.Columns[4].DefaultCellStyle.Font = new Font(DataGridView.DefaultFont, FontStyle.Italic);\n\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n\n        dataGridView1.BackgroundColor = Color.Honeydew;\n\n        dataGridView1.Dock = DockStyle.Fill;\n\n        dataGridView1.CellFormatting += new DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n        dataGridView1.CellParsing += new DataGridViewCellParsingEventHandler(dataGridView1_CellParsing);\n        addNewRowButton.Click += new EventHandler(addNewRowButton_Click);\n        deleteRowButton.Click += new EventHandler(deleteRowButton_Click);\n        ledgerStyleButton.Click += new EventHandler(ledgerStyleButton_Click);\n        dataGridView1.CellValidating += new DataGridViewCellValidatingEventHandler(dataGridView1_CellValidating);\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ClipboardCopyMode\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ClipboardCopyMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClipboardCopyMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value that indicates whether users can copy cell text values to the <a class=\"xref\" href=\"system.windows.forms.clipboard\" data-linktype=\"relative-path\">Clipboard</a> and whether row and column header text is included.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewClipboardCopyMode ClipboardCopyMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewclipboardcopymode\" data-linktype=\"relative-path\">DataGridViewClipboardCopyMode</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewclipboardcopymode\" data-linktype=\"relative-path\">DataGridViewClipboardCopyMode</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.datagridviewclipboardcopymode\" data-linktype=\"relative-path\">DataGridViewClipboardCopyMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewclipboardcopymode\" data-linktype=\"relative-path\">DataGridViewClipboardCopyMode</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control copies the text representation of each selected cell to the Clipboard. This value is the cell value converted to a string or, for image cells, the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewimagecell#System_Windows_Forms_DataGridViewImageCell_Description_\" data-linktype=\"relative-path\">Description</a> property.  </p>\n<p> Values are copied to the Clipboard in <a class=\"xref\" href=\"system.windows.forms.dataformats#System_Windows_Forms_DataFormats_Text\" data-linktype=\"relative-path\">Text</a>, <a class=\"xref\" href=\"system.windows.forms.dataformats#System_Windows_Forms_DataFormats_UnicodeText\" data-linktype=\"relative-path\">UnicodeText</a>, <a class=\"xref\" href=\"system.windows.forms.dataformats#System_Windows_Forms_DataFormats_Html\" data-linktype=\"relative-path\">Html</a>, and <a class=\"xref\" href=\"system.windows.forms.dataformats#System_Windows_Forms_DataFormats_CommaSeparatedValue\" data-linktype=\"relative-path\">CommaSeparatedValue</a> formats. These formats are useful for pasting content into applications such as Notepad, <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/ofprexcel-md.md&quot; -->Microsoft Excel<!--END INCLUDE -->, and <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/ofprword-md.md&quot; -->Microsoft Word<!--END INCLUDE -->.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control copies the cells contained in the smallest rectangle that includes all selected cells. Rows and columns that do not contain any selected cells are not represented in the copied data. Any unselected cells in the remaining rows and columns are represented by blank placeholders. Depending on the copy mode and the selection mode, header values for the copied rows and columns may be copied, as well.  </p>\n<p> When users copy content, the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control adds a <a class=\"xref\" href=\"system.windows.forms.dataobject\" data-linktype=\"relative-path\">DataObject</a> to the Clipboard. This data object is retrieved from the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GetClipboardContent_\" data-linktype=\"relative-path\">GetClipboardContent</a> method. You can call this method when you want to programmatically add the data object to the Clipboard.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GetClipboardContent_\" data-linktype=\"relative-path\">GetClipboardContent</a>method retrieves values for individual cells by calling the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_GetClipboardContent_\" data-linktype=\"relative-path\">GetClipboardContent</a> method. You can override either or both of these methods in derived classes to customize the layout of copied cells or to support additional data formats.  </p>\n<p> For more information about Clipboard operations and data formats, see the <a class=\"xref\" href=\"system.windows.forms.clipboard\" data-linktype=\"relative-path\">Clipboard</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to enable copying in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Enable%20Users%20to%20Copy%20Multiple%20Cells%20to%20the%20Clipboard%20from%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Enable Users to Copy Multiple Cells to the Clipboard from the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewClipboardDemo#10\">    private void Form1_Load(object sender, System.EventArgs e)\n    {\n        // Initialize the DataGridView control.\n        this.DataGridView1.ColumnCount = 5;\n        this.DataGridView1.Rows.Add(new string[] { &quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot; });\n        this.DataGridView1.Rows.Add(new string[] { &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot; });\n        this.DataGridView1.Rows.Add(new string[] { &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot; });\n        this.DataGridView1.Rows.Add(new string[] { &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot; });\n        this.DataGridView1.Rows.Add(new string[] { &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Y&quot; });\n        this.DataGridView1.AutoResizeColumns();\n        this.DataGridView1.ClipboardCopyMode = \n            DataGridViewClipboardCopyMode.EnableWithoutHeaderText;\n    }\n\n    private void CopyPasteButton_Click(object sender, System.EventArgs e)\n    {\n        if (this.DataGridView1\n            .GetCellCount(DataGridViewElementStates.Selected) &gt; 0)\n        {\n            try\n            {\n                // Add the selection to the clipboard.\n                Clipboard.SetDataObject(\n                    this.DataGridView1.GetClipboardContent());\n                \n                // Replace the text box contents with the clipboard text.\n                this.TextBox1.Text = Clipboard.GetText();\n            }\n            catch (System.Runtime.InteropServices.ExternalException)\n            {\n                this.TextBox1.Text = \n                    &quot;The Clipboard could not be accessed. Please try again.&quot;;\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewClipboardDemo#10\">    Private Sub Form1_Load(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Me.Load\n\n        &#39; Initialize the DataGridView control.\n        Me.DataGridView1.ColumnCount = 5\n        Me.DataGridView1.Rows.Add(New String() {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;})\n        Me.DataGridView1.Rows.Add(New String() {&quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;})\n        Me.DataGridView1.Rows.Add(New String() {&quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;})\n        Me.DataGridView1.Rows.Add(New String() {&quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;})\n        Me.DataGridView1.Rows.Add(New String() {&quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Y&quot;})\n        Me.DataGridView1.AutoResizeColumns()\n        Me.DataGridView1.ClipboardCopyMode = _\n            DataGridViewClipboardCopyMode.EnableWithoutHeaderText\n\n    End Sub\n\n    Private Sub CopyPasteButton_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles CopyPasteButton.Click\n\n        If Me.DataGridView1.GetCellCount( _\n            DataGridViewElementStates.Selected) &gt; 0 Then\n\n            Try\n\n                &#39; Add the selection to the clipboard.\n                Clipboard.SetDataObject( _\n                    Me.DataGridView1.GetClipboardContent())\n\n                &#39; Replace the text box contents with the clipboard text.\n                Me.TextBox1.Text = Clipboard.GetText()\n\n            Catch ex As System.Runtime.InteropServices.ExternalException\n                Me.TextBox1.Text = _\n                    &quot;The Clipboard could not be accessed. Please try again.&quot;\n            End Try\n\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnCount\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ColumnCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the number of columns displayed in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ColumnCount { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of columns displayed in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is less than 0.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>When setting this property, the <span class=\"xref\">stem.Windows.Forms.DataGridView.DataSource*</span> property has been set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Setting the ColumnCount property to 0 will remove all columns from the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.  </p>\n<p> If ColumnCount is reset to a value less than the current value, columns will be removed from the end of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Columns_\" data-linktype=\"relative-path\">Columns</a> collection. If ColumnCount is set to a value greater than the current value, columns will be added to the end of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Columns_\" data-linktype=\"relative-path\">Columns</a> collection.  </p>\n<p> This property can be used with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowCount_\" data-linktype=\"relative-path\">RowCount</a> property to create a simple <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> for displaying and editing text.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to set the<a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">ColumnHeadersDefaultCellStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeRowsMode_\" data-linktype=\"relative-path\">AutoSizeRowsMode</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersBorderStyle_\" data-linktype=\"relative-path\">ColumnHeadersBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBorderStyle_\" data-linktype=\"relative-path\">CellBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GridColor_\" data-linktype=\"relative-path\">GridColor</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_BackgroundColor_\" data-linktype=\"relative-path\">BackgroundColor</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersVisible_\" data-linktype=\"relative-path\">RowHeadersVisible</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a>, ColumnCount, and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_MultiSelect_\" data-linktype=\"relative-path\">MultiSelect</a> properties. In addition, the code example demonstrates how to set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Name_\" data-linktype=\"relative-path\">Name</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> properties. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code>, and then call the <code>SetUpDataGridView</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler. Ensure all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewUnbound#5\">    Private Sub SetUpDataGridView()\n\n        Me.Controls.Add(dataGridView1)\n        dataGridView1.ColumnCount = 5\n\n        With dataGridView1.ColumnHeadersDefaultCellStyle\n            .BackColor = Color.Navy\n            .ForeColor = Color.White\n            .Font = New Font(dataGridView1.Font, FontStyle.Bold)\n        End With\n\n        With dataGridView1\n            .EditMode = DataGridViewEditMode.EditOnEnter\n            .Name = &quot;dataGridView1&quot;\n            .Location = New Point(8, 8)\n            .Size = New Size(500, 300)\n            .AutoSizeRowsMode = _\n                DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders\n            .ColumnHeadersBorderStyle = _\n                DataGridViewHeaderBorderStyle.Raised\n            .CellBorderStyle = _\n                DataGridViewCellBorderStyle.Single\n            .GridColor = SystemColors.ActiveBorder\n            .RowHeadersVisible = False\n\n            .Columns(0).Name = &quot;Release Date&quot;\n            .Columns(1).Name = &quot;Track&quot;\n            .Columns(1).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter\n            .Columns(2).Name = &quot;Title&quot;\n            .Columns(3).Name = &quot;Artist&quot;\n            .Columns(4).Name = &quot;Album&quot;\n\n            &#39; Make the font italic for row four.\n            .Columns(4).DefaultCellStyle.Font = _\n                New Font(Control.DefaultFont, _\n                    FontStyle.Italic)\n\n            .SelectionMode = _\n                DataGridViewSelectionMode.FullRowSelect\n            .MultiSelect = False\n\n            .BackgroundColor = Color.Honeydew\n\n            .Dock = DockStyle.Fill\n        End With\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewUnbound#5\">   void SetUpDataGridView()\n   {\n      this-&gt;Controls-&gt;Add( dataGridView1 );\n      dataGridView1-&gt;ColumnCount = 5;\n      DataGridViewCellStyle^ style = dataGridView1-&gt;ColumnHeadersDefaultCellStyle;\n      style-&gt;BackColor = Color::Navy;\n      style-&gt;ForeColor = Color::White;\n      style-&gt;Font = gcnew System::Drawing::Font( dataGridView1-&gt;Font,FontStyle::Bold );\n      dataGridView1-&gt;EditMode = DataGridViewEditMode::EditOnEnter;\n      dataGridView1-&gt;Name = &quot;dataGridView1&quot;;\n      dataGridView1-&gt;Location = Point(8,8);\n      dataGridView1-&gt;Size = System::Drawing::Size( 500, 300 );\n      dataGridView1-&gt;AutoSizeRowsMode = DataGridViewAutoSizeRowsMode::DisplayedCellsExceptHeaders;\n      dataGridView1-&gt;ColumnHeadersBorderStyle = DataGridViewHeaderBorderStyle::Raised;\n      dataGridView1-&gt;CellBorderStyle = DataGridViewCellBorderStyle::Single;\n      dataGridView1-&gt;GridColor = SystemColors::ActiveBorder;\n      dataGridView1-&gt;RowHeadersVisible = false;\n      dataGridView1-&gt;Columns[ 0 ]-&gt;Name = &quot;Release Date&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;Name = &quot;Track&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;DefaultCellStyle-&gt;Alignment = DataGridViewContentAlignment::MiddleCenter;\n      dataGridView1-&gt;Columns[ 2 ]-&gt;Name = &quot;Title&quot;;\n      dataGridView1-&gt;Columns[ 3 ]-&gt;Name = &quot;Artist&quot;;\n      dataGridView1-&gt;Columns[ 4 ]-&gt;Name = &quot;Album&quot;;\n\n      // Make the font italic for row four.\n      dataGridView1-&gt;Columns[ 4 ]-&gt;DefaultCellStyle-&gt;Font = gcnew System::Drawing::Font( DataGridView::DefaultFont,FontStyle::Italic );\n      dataGridView1-&gt;SelectionMode = DataGridViewSelectionMode::FullRowSelect;\n      dataGridView1-&gt;MultiSelect = false;\n      dataGridView1-&gt;BackgroundColor = Color::Honeydew;\n      dataGridView1-&gt;Dock = DockStyle::Fill;\n      dataGridView1-&gt;CellFormatting += gcnew DataGridViewCellFormattingEventHandler( this, &amp;Form1::dataGridView1_CellFormatting );\n      dataGridView1-&gt;CellParsing += gcnew DataGridViewCellParsingEventHandler( this, &amp;Form1::dataGridView1_CellParsing );\n      addNewRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::addNewRowButton_Click );\n      deleteRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::deleteRowButton_Click );\n      ledgerStyleButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::ledgerStyleButton_Click );\n      dataGridView1-&gt;CellValidating += gcnew DataGridViewCellValidatingEventHandler( this, &amp;Form1::dataGridView1_CellValidating );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewUnbound#5\">    private void SetUpDataGridView()\n    {\n        this.Controls.Add(dataGridView1);\n        dataGridView1.ColumnCount = 5;\n        DataGridViewCellStyle style = \n            dataGridView1.ColumnHeadersDefaultCellStyle;\n        style.BackColor = Color.Navy;\n        style.ForeColor = Color.White;\n        style.Font = new Font(dataGridView1.Font, FontStyle.Bold);\n\n        dataGridView1.EditMode = DataGridViewEditMode.EditOnEnter;\n        dataGridView1.Name = &quot;dataGridView1&quot;;\n        dataGridView1.Location = new Point(8, 8);\n        dataGridView1.Size = new Size(500, 300);\n        dataGridView1.AutoSizeRowsMode = \n            DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders;\n        dataGridView1.ColumnHeadersBorderStyle = \n            DataGridViewHeaderBorderStyle.Raised;\n        dataGridView1.CellBorderStyle = DataGridViewCellBorderStyle.Single;\n        dataGridView1.GridColor = SystemColors.ActiveBorder;\n        dataGridView1.RowHeadersVisible = false;\n\n        dataGridView1.Columns[0].Name = &quot;Release Date&quot;;\n        dataGridView1.Columns[1].Name = &quot;Track&quot;;\n        dataGridView1.Columns[1].DefaultCellStyle.Alignment = \n            DataGridViewContentAlignment.MiddleCenter;\n        dataGridView1.Columns[2].Name = &quot;Title&quot;;\n        dataGridView1.Columns[3].Name = &quot;Artist&quot;;\n        dataGridView1.Columns[4].Name = &quot;Album&quot;;\n\n        // Make the font italic for row four.\n        dataGridView1.Columns[4].DefaultCellStyle.Font = new Font(DataGridView.DefaultFont, FontStyle.Italic);\n\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n\n        dataGridView1.BackgroundColor = Color.Honeydew;\n\n        dataGridView1.Dock = DockStyle.Fill;\n\n        dataGridView1.CellFormatting += new DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n        dataGridView1.CellParsing += new DataGridViewCellParsingEventHandler(dataGridView1_CellParsing);\n        addNewRowButton.Click += new EventHandler(addNewRowButton_Click);\n        deleteRowButton.Click += new EventHandler(deleteRowButton_Click);\n        ledgerStyleButton.Click += new EventHandler(ledgerStyleButton_Click);\n        dataGridView1.CellValidating += new DataGridViewCellValidatingEventHandler(dataGridView1_CellValidating);\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnHeadersBorderStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ColumnHeadersBorderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnHeadersBorderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the border style applied to the column headers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewHeaderBorderStyle ColumnHeadersBorderStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewheaderborderstyle\" data-linktype=\"relative-path\">DataGridViewHeaderBorderStyle</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewheaderborderstyle\" data-linktype=\"relative-path\">DataGridViewHeaderBorderStyle</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewheaderborderstyle\" data-linktype=\"relative-path\">DataGridViewHeaderBorderStyle</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is <a class=\"xref\" href=\"system.windows.forms.datagridviewheaderborderstyle\" data-linktype=\"relative-path\">DataGridViewHeaderBorderStyle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the ColumnHeadersBorderStyle property is set to anything other than <a class=\"xref\" href=\"system.windows.forms.datagridviewheaderborderstyle\" data-linktype=\"relative-path\">DataGridViewHeaderBorderStyle</a>, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GridColor_\" data-linktype=\"relative-path\">GridColor</a> property must be a system color.  </p>\n<p> You cannot set this property to the <a class=\"xref\" href=\"system.windows.forms.datagridviewheaderborderstyle\" data-linktype=\"relative-path\">DataGridViewHeaderBorderStyle</a> value, which is a read-only value indicating that the border style has been customized through the use of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AdvancedColumnHeadersBorderStyle_\" data-linktype=\"relative-path\">AdvancedColumnHeadersBorderStyle</a> property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If visual styles are enabled for the application through the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_EnableVisualStyles_\" data-linktype=\"relative-path\">EnableVisualStyles</a> method and the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EnableHeadersVisualStyles_\" data-linktype=\"relative-path\">EnableHeadersVisualStyles</a> property is <code>true</code>, the column headers are painted using the current theme. In this case, the value of the ColumnHeadersBorderStyle property is ignored for all column headers except the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_TopLeftHeaderCell_\" data-linktype=\"relative-path\">TopLeftHeaderCell</a>, to which the theme is not applied.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to set the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">ColumnHeadersDefaultCellStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeRowsMode_\" data-linktype=\"relative-path\">AutoSizeRowsMode</a>, ColumnHeadersBorderStyle, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBorderStyle_\" data-linktype=\"relative-path\">CellBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GridColor_\" data-linktype=\"relative-path\">GridColor</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_BackgroundColor_\" data-linktype=\"relative-path\">BackgroundColor</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersVisible_\" data-linktype=\"relative-path\">RowHeadersVisible</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnCount_\" data-linktype=\"relative-path\">ColumnCount</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_MultiSelect_\" data-linktype=\"relative-path\">MultiSelect</a> properties. In addition, the code example demonstrates how to set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Name_\" data-linktype=\"relative-path\">Name</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> properties. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named<code>dataGridView1</code>, and then call the <code>SetUpDataGridView</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler. Ensure all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewUnbound#5\">    Private Sub SetUpDataGridView()\n\n        Me.Controls.Add(dataGridView1)\n        dataGridView1.ColumnCount = 5\n\n        With dataGridView1.ColumnHeadersDefaultCellStyle\n            .BackColor = Color.Navy\n            .ForeColor = Color.White\n            .Font = New Font(dataGridView1.Font, FontStyle.Bold)\n        End With\n\n        With dataGridView1\n            .EditMode = DataGridViewEditMode.EditOnEnter\n            .Name = &quot;dataGridView1&quot;\n            .Location = New Point(8, 8)\n            .Size = New Size(500, 300)\n            .AutoSizeRowsMode = _\n                DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders\n            .ColumnHeadersBorderStyle = _\n                DataGridViewHeaderBorderStyle.Raised\n            .CellBorderStyle = _\n                DataGridViewCellBorderStyle.Single\n            .GridColor = SystemColors.ActiveBorder\n            .RowHeadersVisible = False\n\n            .Columns(0).Name = &quot;Release Date&quot;\n            .Columns(1).Name = &quot;Track&quot;\n            .Columns(1).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter\n            .Columns(2).Name = &quot;Title&quot;\n            .Columns(3).Name = &quot;Artist&quot;\n            .Columns(4).Name = &quot;Album&quot;\n\n            &#39; Make the font italic for row four.\n            .Columns(4).DefaultCellStyle.Font = _\n                New Font(Control.DefaultFont, _\n                    FontStyle.Italic)\n\n            .SelectionMode = _\n                DataGridViewSelectionMode.FullRowSelect\n            .MultiSelect = False\n\n            .BackgroundColor = Color.Honeydew\n\n            .Dock = DockStyle.Fill\n        End With\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewUnbound#5\">   void SetUpDataGridView()\n   {\n      this-&gt;Controls-&gt;Add( dataGridView1 );\n      dataGridView1-&gt;ColumnCount = 5;\n      DataGridViewCellStyle^ style = dataGridView1-&gt;ColumnHeadersDefaultCellStyle;\n      style-&gt;BackColor = Color::Navy;\n      style-&gt;ForeColor = Color::White;\n      style-&gt;Font = gcnew System::Drawing::Font( dataGridView1-&gt;Font,FontStyle::Bold );\n      dataGridView1-&gt;EditMode = DataGridViewEditMode::EditOnEnter;\n      dataGridView1-&gt;Name = &quot;dataGridView1&quot;;\n      dataGridView1-&gt;Location = Point(8,8);\n      dataGridView1-&gt;Size = System::Drawing::Size( 500, 300 );\n      dataGridView1-&gt;AutoSizeRowsMode = DataGridViewAutoSizeRowsMode::DisplayedCellsExceptHeaders;\n      dataGridView1-&gt;ColumnHeadersBorderStyle = DataGridViewHeaderBorderStyle::Raised;\n      dataGridView1-&gt;CellBorderStyle = DataGridViewCellBorderStyle::Single;\n      dataGridView1-&gt;GridColor = SystemColors::ActiveBorder;\n      dataGridView1-&gt;RowHeadersVisible = false;\n      dataGridView1-&gt;Columns[ 0 ]-&gt;Name = &quot;Release Date&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;Name = &quot;Track&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;DefaultCellStyle-&gt;Alignment = DataGridViewContentAlignment::MiddleCenter;\n      dataGridView1-&gt;Columns[ 2 ]-&gt;Name = &quot;Title&quot;;\n      dataGridView1-&gt;Columns[ 3 ]-&gt;Name = &quot;Artist&quot;;\n      dataGridView1-&gt;Columns[ 4 ]-&gt;Name = &quot;Album&quot;;\n\n      // Make the font italic for row four.\n      dataGridView1-&gt;Columns[ 4 ]-&gt;DefaultCellStyle-&gt;Font = gcnew System::Drawing::Font( DataGridView::DefaultFont,FontStyle::Italic );\n      dataGridView1-&gt;SelectionMode = DataGridViewSelectionMode::FullRowSelect;\n      dataGridView1-&gt;MultiSelect = false;\n      dataGridView1-&gt;BackgroundColor = Color::Honeydew;\n      dataGridView1-&gt;Dock = DockStyle::Fill;\n      dataGridView1-&gt;CellFormatting += gcnew DataGridViewCellFormattingEventHandler( this, &amp;Form1::dataGridView1_CellFormatting );\n      dataGridView1-&gt;CellParsing += gcnew DataGridViewCellParsingEventHandler( this, &amp;Form1::dataGridView1_CellParsing );\n      addNewRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::addNewRowButton_Click );\n      deleteRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::deleteRowButton_Click );\n      ledgerStyleButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::ledgerStyleButton_Click );\n      dataGridView1-&gt;CellValidating += gcnew DataGridViewCellValidatingEventHandler( this, &amp;Form1::dataGridView1_CellValidating );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewUnbound#5\">    private void SetUpDataGridView()\n    {\n        this.Controls.Add(dataGridView1);\n        dataGridView1.ColumnCount = 5;\n        DataGridViewCellStyle style = \n            dataGridView1.ColumnHeadersDefaultCellStyle;\n        style.BackColor = Color.Navy;\n        style.ForeColor = Color.White;\n        style.Font = new Font(dataGridView1.Font, FontStyle.Bold);\n\n        dataGridView1.EditMode = DataGridViewEditMode.EditOnEnter;\n        dataGridView1.Name = &quot;dataGridView1&quot;;\n        dataGridView1.Location = new Point(8, 8);\n        dataGridView1.Size = new Size(500, 300);\n        dataGridView1.AutoSizeRowsMode = \n            DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders;\n        dataGridView1.ColumnHeadersBorderStyle = \n            DataGridViewHeaderBorderStyle.Raised;\n        dataGridView1.CellBorderStyle = DataGridViewCellBorderStyle.Single;\n        dataGridView1.GridColor = SystemColors.ActiveBorder;\n        dataGridView1.RowHeadersVisible = false;\n\n        dataGridView1.Columns[0].Name = &quot;Release Date&quot;;\n        dataGridView1.Columns[1].Name = &quot;Track&quot;;\n        dataGridView1.Columns[1].DefaultCellStyle.Alignment = \n            DataGridViewContentAlignment.MiddleCenter;\n        dataGridView1.Columns[2].Name = &quot;Title&quot;;\n        dataGridView1.Columns[3].Name = &quot;Artist&quot;;\n        dataGridView1.Columns[4].Name = &quot;Album&quot;;\n\n        // Make the font italic for row four.\n        dataGridView1.Columns[4].DefaultCellStyle.Font = new Font(DataGridView.DefaultFont, FontStyle.Italic);\n\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n\n        dataGridView1.BackgroundColor = Color.Honeydew;\n\n        dataGridView1.Dock = DockStyle.Fill;\n\n        dataGridView1.CellFormatting += new DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n        dataGridView1.CellParsing += new DataGridViewCellParsingEventHandler(dataGridView1_CellParsing);\n        addNewRowButton.Click += new EventHandler(addNewRowButton_Click);\n        deleteRowButton.Click += new EventHandler(deleteRowButton_Click);\n        ledgerStyleButton.Click += new EventHandler(ledgerStyleButton_Click);\n        dataGridView1.CellValidating += new DataGridViewCellValidatingEventHandler(dataGridView1_CellValidating);\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnHeadersDefaultCellStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the default column header style.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewCellStyle ColumnHeadersDefaultCellStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> that represents the default column header style.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> returned by this property has the following initial property values:  </p>\n<table>\n<thead>\n<tr>\n<th><code>DataGridViewCellStyle</code> property</th>\n<th>Default value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_BackColor_\" data-linktype=\"relative-path\">BackColor</a></td>\n<td>The value of the <a class=\"xref\" href=\"system.drawing.systembrushes#System_Drawing_SystemBrushes_Control_\" data-linktype=\"relative-path\">Control</a> property.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a></td>\n<td>The value of the <a class=\"xref\" href=\"system.drawing.systembrushes#System_Drawing_SystemBrushes_WindowText_\" data-linktype=\"relative-path\">WindowText</a> property.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_SelectionBackColor_\" data-linktype=\"relative-path\">SelectionBackColor</a></td>\n<td>The value of the <a class=\"xref\" href=\"system.drawing.systembrushes#System_Drawing_SystemBrushes_Highlight_\" data-linktype=\"relative-path\">Highlight</a> property.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_SelectionForeColor_\" data-linktype=\"relative-path\">SelectionForeColor</a></td>\n<td>The value of the <a class=\"xref\" href=\"system.drawing.systembrushes#System_Drawing_SystemBrushes_HighlightText_\" data-linktype=\"relative-path\">HighlightText</a> property.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_Font_\" data-linktype=\"relative-path\">Font</a></td>\n<td>The value of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Font_\" data-linktype=\"relative-path\">Font</a> property.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_Alignment_\" data-linktype=\"relative-path\">Alignment</a></td>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcontentalignment\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewContentAlignment</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a></td>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewTriState</a></td>\n</tr>\n</tbody>\n</table>\n<p> These values automatically override the values set through the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property. To force column headers to inherit the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> values, you must set the values in the ColumnHeadersDefaultCellStyle object to the default values indicated for the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> class.  </p>\n<p> For more information about cell style inheritance, see <a href=\"../Topic/Cell%20Styles%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Cell Styles in the Windows Forms DataGridView Control</a>.  </p>\n<p> If visual styles are enabled and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EnableHeadersVisualStyles_\" data-linktype=\"relative-path\">EnableHeadersVisualStyles</a> is set to <code>true</code>, all header cells except the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_TopLeftHeaderCell_\" data-linktype=\"relative-path\">TopLeftHeaderCell</a> are painted using the current theme and the ColumnHeadersDefaultCellStyle values are ignored.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to set the ColumnHeadersDefaultCellStyle, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeRowsMode_\" data-linktype=\"relative-path\">AutoSizeRowsMode</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersBorderStyle_\" data-linktype=\"relative-path\">ColumnHeadersBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBorderStyle_\" data-linktype=\"relative-path\">CellBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GridColor_\" data-linktype=\"relative-path\">GridColor</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_BackgroundColor_\" data-linktype=\"relative-path\">BackgroundColor</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersVisible_\" data-linktype=\"relative-path\">RowHeadersVisible</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnCount_\" data-linktype=\"relative-path\">ColumnCount</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_MultiSelect_\" data-linktype=\"relative-path\">MultiSelect</a> properties. In addition, the code example demonstrates how to set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Name_\" data-linktype=\"relative-path\">Name</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> properties. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code>, and then call the <code>SetUpDataGridView</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler. Ensure all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewUnbound#5\">    Private Sub SetUpDataGridView()\n\n        Me.Controls.Add(dataGridView1)\n        dataGridView1.ColumnCount = 5\n\n        With dataGridView1.ColumnHeadersDefaultCellStyle\n            .BackColor = Color.Navy\n            .ForeColor = Color.White\n            .Font = New Font(dataGridView1.Font, FontStyle.Bold)\n        End With\n\n        With dataGridView1\n            .EditMode = DataGridViewEditMode.EditOnEnter\n            .Name = &quot;dataGridView1&quot;\n            .Location = New Point(8, 8)\n            .Size = New Size(500, 300)\n            .AutoSizeRowsMode = _\n                DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders\n            .ColumnHeadersBorderStyle = _\n                DataGridViewHeaderBorderStyle.Raised\n            .CellBorderStyle = _\n                DataGridViewCellBorderStyle.Single\n            .GridColor = SystemColors.ActiveBorder\n            .RowHeadersVisible = False\n\n            .Columns(0).Name = &quot;Release Date&quot;\n            .Columns(1).Name = &quot;Track&quot;\n            .Columns(1).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter\n            .Columns(2).Name = &quot;Title&quot;\n            .Columns(3).Name = &quot;Artist&quot;\n            .Columns(4).Name = &quot;Album&quot;\n\n            &#39; Make the font italic for row four.\n            .Columns(4).DefaultCellStyle.Font = _\n                New Font(Control.DefaultFont, _\n                    FontStyle.Italic)\n\n            .SelectionMode = _\n                DataGridViewSelectionMode.FullRowSelect\n            .MultiSelect = False\n\n            .BackgroundColor = Color.Honeydew\n\n            .Dock = DockStyle.Fill\n        End With\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewUnbound#5\">   void SetUpDataGridView()\n   {\n      this-&gt;Controls-&gt;Add( dataGridView1 );\n      dataGridView1-&gt;ColumnCount = 5;\n      DataGridViewCellStyle^ style = dataGridView1-&gt;ColumnHeadersDefaultCellStyle;\n      style-&gt;BackColor = Color::Navy;\n      style-&gt;ForeColor = Color::White;\n      style-&gt;Font = gcnew System::Drawing::Font( dataGridView1-&gt;Font,FontStyle::Bold );\n      dataGridView1-&gt;EditMode = DataGridViewEditMode::EditOnEnter;\n      dataGridView1-&gt;Name = &quot;dataGridView1&quot;;\n      dataGridView1-&gt;Location = Point(8,8);\n      dataGridView1-&gt;Size = System::Drawing::Size( 500, 300 );\n      dataGridView1-&gt;AutoSizeRowsMode = DataGridViewAutoSizeRowsMode::DisplayedCellsExceptHeaders;\n      dataGridView1-&gt;ColumnHeadersBorderStyle = DataGridViewHeaderBorderStyle::Raised;\n      dataGridView1-&gt;CellBorderStyle = DataGridViewCellBorderStyle::Single;\n      dataGridView1-&gt;GridColor = SystemColors::ActiveBorder;\n      dataGridView1-&gt;RowHeadersVisible = false;\n      dataGridView1-&gt;Columns[ 0 ]-&gt;Name = &quot;Release Date&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;Name = &quot;Track&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;DefaultCellStyle-&gt;Alignment = DataGridViewContentAlignment::MiddleCenter;\n      dataGridView1-&gt;Columns[ 2 ]-&gt;Name = &quot;Title&quot;;\n      dataGridView1-&gt;Columns[ 3 ]-&gt;Name = &quot;Artist&quot;;\n      dataGridView1-&gt;Columns[ 4 ]-&gt;Name = &quot;Album&quot;;\n\n      // Make the font italic for row four.\n      dataGridView1-&gt;Columns[ 4 ]-&gt;DefaultCellStyle-&gt;Font = gcnew System::Drawing::Font( DataGridView::DefaultFont,FontStyle::Italic );\n      dataGridView1-&gt;SelectionMode = DataGridViewSelectionMode::FullRowSelect;\n      dataGridView1-&gt;MultiSelect = false;\n      dataGridView1-&gt;BackgroundColor = Color::Honeydew;\n      dataGridView1-&gt;Dock = DockStyle::Fill;\n      dataGridView1-&gt;CellFormatting += gcnew DataGridViewCellFormattingEventHandler( this, &amp;Form1::dataGridView1_CellFormatting );\n      dataGridView1-&gt;CellParsing += gcnew DataGridViewCellParsingEventHandler( this, &amp;Form1::dataGridView1_CellParsing );\n      addNewRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::addNewRowButton_Click );\n      deleteRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::deleteRowButton_Click );\n      ledgerStyleButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::ledgerStyleButton_Click );\n      dataGridView1-&gt;CellValidating += gcnew DataGridViewCellValidatingEventHandler( this, &amp;Form1::dataGridView1_CellValidating );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewUnbound#5\">    private void SetUpDataGridView()\n    {\n        this.Controls.Add(dataGridView1);\n        dataGridView1.ColumnCount = 5;\n        DataGridViewCellStyle style = \n            dataGridView1.ColumnHeadersDefaultCellStyle;\n        style.BackColor = Color.Navy;\n        style.ForeColor = Color.White;\n        style.Font = new Font(dataGridView1.Font, FontStyle.Bold);\n\n        dataGridView1.EditMode = DataGridViewEditMode.EditOnEnter;\n        dataGridView1.Name = &quot;dataGridView1&quot;;\n        dataGridView1.Location = new Point(8, 8);\n        dataGridView1.Size = new Size(500, 300);\n        dataGridView1.AutoSizeRowsMode = \n            DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders;\n        dataGridView1.ColumnHeadersBorderStyle = \n            DataGridViewHeaderBorderStyle.Raised;\n        dataGridView1.CellBorderStyle = DataGridViewCellBorderStyle.Single;\n        dataGridView1.GridColor = SystemColors.ActiveBorder;\n        dataGridView1.RowHeadersVisible = false;\n\n        dataGridView1.Columns[0].Name = &quot;Release Date&quot;;\n        dataGridView1.Columns[1].Name = &quot;Track&quot;;\n        dataGridView1.Columns[1].DefaultCellStyle.Alignment = \n            DataGridViewContentAlignment.MiddleCenter;\n        dataGridView1.Columns[2].Name = &quot;Title&quot;;\n        dataGridView1.Columns[3].Name = &quot;Artist&quot;;\n        dataGridView1.Columns[4].Name = &quot;Album&quot;;\n\n        // Make the font italic for row four.\n        dataGridView1.Columns[4].DefaultCellStyle.Font = new Font(DataGridView.DefaultFont, FontStyle.Italic);\n\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n\n        dataGridView1.BackgroundColor = Color.Honeydew;\n\n        dataGridView1.Dock = DockStyle.Fill;\n\n        dataGridView1.CellFormatting += new DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n        dataGridView1.CellParsing += new DataGridViewCellParsingEventHandler(dataGridView1_CellParsing);\n        addNewRowButton.Click += new EventHandler(addNewRowButton_Click);\n        deleteRowButton.Click += new EventHandler(deleteRowButton_Click);\n        ledgerStyleButton.Click += new EventHandler(ledgerStyleButton_Click);\n        dataGridView1.CellValidating += new DataGridViewCellValidatingEventHandler(dataGridView1_CellValidating);\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnHeadersHeight\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ColumnHeadersHeight_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnHeadersHeight</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the height, in pixels, of the column headers row</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int ColumnHeadersHeight { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The height, in pixels, of the row that contains the column headers. The default is 23.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is less than the minimum height of 4 pixels or is greater than the maximum height of 32768 pixels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnHeadersHeightSizeMode\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ColumnHeadersHeightSizeMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnHeadersHeightSizeMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the height of the column headers is adjustable and whether it can be adjusted by the user or is automatically adjusted to fit the contents of the headers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode ColumnHeadersHeightSizeMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnheadersheightsizemode\" data-linktype=\"relative-path\">DataGridViewColumnHeadersHeightSizeMode</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnheadersheightsizemode\" data-linktype=\"relative-path\">DataGridViewColumnHeadersHeightSizeMode</a> value indicating the mode by which the height of the column headers row can be adjusted. The default is <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnheadersheightsizemode\" data-linktype=\"relative-path\">DataGridViewColumnHeadersHeightSizeMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnheadersheightsizemode\" data-linktype=\"relative-path\">DataGridViewColumnHeadersHeightSizeMode</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this property is set to <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnheadersheightsizemode\" data-linktype=\"relative-path\">DataGridViewColumnHeadersHeightSizeMode</a>, the height of the column headers cannot be adjusted by the user.  </p>\n<p> To adjust the height of the column headers programmatically, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight_\" data-linktype=\"relative-path\">AutoResizeColumnHeadersHeight</a> method or set the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersHeight_\" data-linktype=\"relative-path\">ColumnHeadersHeight</a> property.  </p>\n<p> To set the sizing mode for the row headers, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersWidthSizeMode_\" data-linktype=\"relative-path\">RowHeadersWidthSizeMode</a> property.  </p>\n<p> For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>.  </p>\n<p> For more information about header sizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control does not support double buffering. If <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleBuffered_\" data-linktype=\"relative-path\">DoubleBuffered</a> is set to <code>true</code> in a derived <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use this property in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> class overview.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    &#39; Configures the appearance and behavior of a DataGridView control.\n    Private Sub InitializeDataGridView()\n\n        &#39; Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill\n        dataGridView1.BackgroundColor = Color.LightGray\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D\n\n        &#39; Set property values appropriate for read-only display and \n        &#39; limited interactivity. \n        dataGridView1.AllowUserToAddRows = False\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.AllowUserToOrderColumns = True\n        dataGridView1.ReadOnly = True\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect\n        dataGridView1.MultiSelect = False\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None\n        dataGridView1.AllowUserToResizeColumns = False\n        dataGridView1.ColumnHeadersHeightSizeMode = _\n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing\n        dataGridView1.AllowUserToResizeRows = False\n        dataGridView1.RowHeadersWidthSizeMode = _\n            DataGridViewRowHeadersWidthSizeMode.DisableResizing\n\n        &#39; Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black\n\n        &#39; Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        &#39; value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty\n\n        &#39; Set the background color for all rows and for alternating rows. \n        &#39; The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray\n\n        &#39; Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black\n\n        &#39; Set the Format property on the &quot;Last Prepared&quot; column to cause\n        &#39; the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns(&quot;Last Prepared&quot;).DefaultCellStyle.Format = &quot;y&quot;\n\n        &#39; Specify a larger font for the &quot;Ratings&quot; column. \n        Dim font As New Font( _\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold)\n        Try\n            dataGridView1.Columns(&quot;Rating&quot;).DefaultCellStyle.Font = font\n        Finally\n            font.Dispose()\n        End Try\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    // Configures the appearance and behavior of a DataGridView control.\n    private void InitializeDataGridView()\n    {\n        // Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill;\n        dataGridView1.BackgroundColor = Color.LightGray;\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n\n        // Set property values appropriate for read-only display and \n        // limited interactivity. \n        dataGridView1.AllowUserToAddRows = false;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.AllowUserToOrderColumns = true;\n        dataGridView1.ReadOnly = true;\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None;\n        dataGridView1.AllowUserToResizeColumns = false;\n        dataGridView1.ColumnHeadersHeightSizeMode = \n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing;\n        dataGridView1.AllowUserToResizeRows = false;\n        dataGridView1.RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode.DisableResizing;\n\n        // Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White;\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black;\n\n        // Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        // value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty;\n\n        // Set the background color for all rows and for alternating rows. \n        // The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray;\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray;\n\n        // Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White;\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black;\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black;\n\n        // Set the Format property on the &quot;Last Prepared&quot; column to cause\n        // the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns[&quot;Last Prepared&quot;].DefaultCellStyle.Format = &quot;y&quot;;\n\n        // Specify a larger font for the &quot;Ratings&quot; column. \n        using (Font font = new Font(\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold))\n        {\n            dataGridView1.Columns[&quot;Rating&quot;].DefaultCellStyle.Font = font;\n        }\n\n        // Attach a handler to the CellFormatting event.\n        dataGridView1.CellFormatting += new\n            DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnHeadersVisible\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ColumnHeadersVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnHeadersVisible</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the column header row is displayed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ColumnHeadersVisible { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the column headers are displayed; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is <code>false</code> and one or more columns have an <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode*</span> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the ColumnHeadersVisible property is <code>false</code>, a column whose <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Resizable_\" data-linktype=\"relative-path\">Resizable</a> property is set to <code>true</code> can still be resized in the user interface (UI) by clicking with the mouse cursor anywhere along the right border of the column to be resized.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example populates an unbound <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control and sets the ColumnHeadersVisible property to <code>true</code> to ensure that column headers are displayed.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewAutoSize#2\">   void InitializeDataGridView()\n   {\n      this-&gt;Size = System::Drawing::Size( 600, 600 );\n      dataGridView1-&gt;Size = System::Drawing::Size( 450, 400 );\n\n      // Create an unbound DataGridView by declaring a column count.\n      dataGridView1-&gt;ColumnCount = 4;\n      dataGridView1-&gt;ColumnHeadersVisible = true;\n\n      // Set the column header style.\n      DataGridViewCellStyle ^ columnHeaderStyle = gcnew DataGridViewCellStyle;\n      columnHeaderStyle-&gt;BackColor = Color::Aqua;\n      columnHeaderStyle-&gt;Font = gcnew System::Drawing::Font( &quot;Verdana&quot;,10,FontStyle::Bold );\n      dataGridView1-&gt;ColumnHeadersDefaultCellStyle = columnHeaderStyle;\n\n      // Set the column header names.\n      dataGridView1-&gt;Columns[ 0 ]-&gt;Name = &quot;Recipe&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;Name = &quot;Category&quot;;\n      dataGridView1-&gt;Columns[ 2 ]-&gt;Name = &quot;Main Ingredients&quot;;\n      dataGridView1-&gt;Columns[ 3 ]-&gt;Name = &quot;Rating&quot;;\n\n      // Populate the rows.\n      array&lt;String^&gt;^row1 = gcnew array&lt;String^&gt;{\n         &quot;Meatloaf&quot;,&quot;Main Dish&quot;,&quot;ground beef&quot;,&quot;**&quot;\n      };\n      array&lt;String^&gt;^row2 = gcnew array&lt;String^&gt;{\n         &quot;Key Lime Pie&quot;,&quot;Dessert&quot;,&quot;lime juice, evaporated milk&quot;,&quot;****&quot;\n      };\n      array&lt;String^&gt;^row3 = gcnew array&lt;String^&gt;{\n         &quot;Orange-Salsa Pork Chops&quot;,&quot;Main Dish&quot;,&quot;pork chops, salsa, orange juice&quot;,&quot;****&quot;\n      };\n      array&lt;String^&gt;^row4 = gcnew array&lt;String^&gt;{\n         &quot;Black Bean and Rice Salad&quot;,&quot;Salad&quot;,&quot;black beans, brown rice&quot;,&quot;****&quot;\n      };\n      array&lt;String^&gt;^row5 = gcnew array&lt;String^&gt;{\n         &quot;Chocolate Cheesecake&quot;,&quot;Dessert&quot;,&quot;cream cheese&quot;,&quot;***&quot;\n      };\n      array&lt;String^&gt;^row6 = gcnew array&lt;String^&gt;{\n         &quot;Black Bean Dip&quot;,&quot;Appetizer&quot;,&quot;black beans, sour cream&quot;,&quot;***&quot;\n      };\n      array&lt;Object^&gt;^rows = {row1,row2,row3,row4,row5,row6};\n      System::Collections::IEnumerator^ myEnum = rows-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         array&lt;String^&gt;^rowArray = safe_cast&lt;array&lt;String^&gt;^&gt;(myEnum-&gt;Current);\n         dataGridView1-&gt;Rows-&gt;Add( rowArray );\n      }\n   }\n\n   void Button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Resize the height of the column headers. \n      dataGridView1-&gt;AutoResizeColumnHeadersHeight();\n\n      // Resize all the row heights to fit the contents of all non-header cells.\n      dataGridView1-&gt;AutoResizeRows(\n            DataGridViewAutoSizeRowsMode::AllCellsExceptHeaders);\n   }\n\n   void InitializeContextMenu()\n   {\n      // Create the menu item.\n      MenuItem^ getRecipe = gcnew MenuItem( &quot;Search for recipe&quot;,gcnew System::EventHandler( this, &amp;Form1::OnMenuClick ) );\n\n      // Add the menu item to the shortcut menu.\n      System::Windows::Forms::ContextMenuStrip^ recipeMenu = gcnew System::Windows::Forms::ContextMenuStrip();\n\n      // Set the shortcut menu for the first column.\n      dataGridView1-&gt;Columns[ 0 ]-&gt;ContextMenuStrip = recipeMenu;\n   }\n\n   void OnMenuClick( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      if ( dataGridView1-&gt;CurrentCell != nullptr )\n      {\n         //Retrieve the recipe name.\n         String^ recipeName = dynamic_cast&lt;String^&gt;(dataGridView1-&gt;CurrentCell-&gt;Value);\n\n         //Search for the recipe.\n         System::Diagnostics::Process::Start( String::Format( &quot;http://search.msn.com/results.aspx?q={0}&quot;, recipeName ), nullptr );\n      }\n   }\n\nprivate:\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewAutoSize#2\">    private void InitializeDataGridView()\n    {\n        // Create an unbound DataGridView by declaring a column count.\n        dataGridView1.ColumnCount = 4;\n        dataGridView1.ColumnHeadersVisible = true;\n\n        // Set the column header style.\n        DataGridViewCellStyle columnHeaderStyle = new DataGridViewCellStyle();\n\n        columnHeaderStyle.BackColor = Color.Beige;\n        columnHeaderStyle.Font = new Font(&quot;Verdana&quot;, 10, FontStyle.Bold);\n        dataGridView1.ColumnHeadersDefaultCellStyle = columnHeaderStyle;\n\n        // Set the column header names.\n        dataGridView1.Columns[0].Name = &quot;Recipe&quot;;\n        dataGridView1.Columns[1].Name = &quot;Category&quot;;\n        dataGridView1.Columns[2].Name = &quot;Main Ingredients&quot;;\n        dataGridView1.Columns[3].Name = &quot;Rating&quot;;\n\n        // Populate the rows.\n        string[] row1 = new string[] { &quot;Meatloaf&quot;, &quot;Main Dish&quot;, &quot;ground beef&quot;,\n            &quot;**&quot; };\n        string[] row2 = new string[] { &quot;Key Lime Pie&quot;, &quot;Dessert&quot;, \n            &quot;lime juice, evaporated milk&quot;, &quot;****&quot; };\n        string[] row3 = new string[] { &quot;Orange-Salsa Pork Chops&quot;, &quot;Main Dish&quot;, \n            &quot;pork chops, salsa, orange juice&quot;, &quot;****&quot; };\n        string[] row4 = new string[] { &quot;Black Bean and Rice Salad&quot;, &quot;Salad&quot;, \n            &quot;black beans, brown rice&quot;, &quot;****&quot; };\n        string[] row5 = new string[] { &quot;Chocolate Cheesecake&quot;, &quot;Dessert&quot;, \n            &quot;cream cheese&quot;, &quot;***&quot; };\n        string[] row6 = new string[] { &quot;Black Bean Dip&quot;, &quot;Appetizer&quot;, \n            &quot;black beans, sour cream&quot;, &quot;***&quot; };\n        object[] rows = new object[] { row1, row2, row3, row4, row5, row6 };\n\n        foreach (string[] rowArray in rows)\n        {\n            dataGridView1.Rows.Add(rowArray);\n        }\n    }\n\n    private void button1_Click(object sender, System.EventArgs e)\n    {\n        // Resize the height of the column headers. \n        dataGridView1.AutoResizeColumnHeadersHeight();\n\n        // Resize all the row heights to fit the contents of all non-header cells.\n        dataGridView1.AutoResizeRows(\n            DataGridViewAutoSizeRowsMode.AllCellsExceptHeaders);\n    }\n\n    private void InitializeContextMenu()\n    {\n        // Create the menu item.\n        ToolStripMenuItem getRecipe = new ToolStripMenuItem(&quot;Search for recipe&quot;, null,\n            new System.EventHandler(ShortcutMenuClick));\n\n        // Add the menu item to the shortcut menu.\n        ContextMenuStrip recipeMenu = new ContextMenuStrip();\n        recipeMenu.Items.Add(getRecipe); \n\n        // Set the shortcut menu for the first column.\n        dataGridView1.Columns[0].ContextMenuStrip = recipeMenu;\n        dataGridView1.MouseDown += new MouseEventHandler(dataGridView1_MouseDown);\n    }\n\n    private DataGridViewCell clickedCell;\n\n    private void dataGridView1_MouseDown(object sender, MouseEventArgs e)\n    {\n\t// If the user right-clicks a cell, store it for use by the shortcut menu.\n        if (e.Button == MouseButtons.Right)\n        {\n            DataGridView.HitTestInfo hit = dataGridView1.HitTest(e.X, e.Y);\n            if (hit.Type == DataGridViewHitTestType.Cell)\n            {\n                clickedCell =\n                    dataGridView1.Rows[hit.RowIndex].Cells[hit.ColumnIndex];\n            }\n        }\n    }\n\n    private void ShortcutMenuClick(object sender, System.EventArgs e)\n    {\n        if (clickedCell != null)\n        {\n            //Retrieve the recipe name.\n            string recipeName = (string)clickedCell.Value;\n\n            //Search for the recipe.\n            System.Diagnostics.Process.Start(\n                &quot;http://search.msn.com/results.aspx?q=&quot; + recipeName);\n                //null);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewAutoSize#2\">    Private Sub InitializeDataGridView()\n\n        &#39; Create an unbound DataGridView by declaring a column count.\n        dataGridView1.ColumnCount = 4\n        dataGridView1.ColumnHeadersVisible = True\n\n        &#39; Set the column header style.\n        Dim columnHeaderStyle As New DataGridViewCellStyle()\n\n        columnHeaderStyle.BackColor = Color.Beige\n        columnHeaderStyle.Font = New Font(&quot;Verdana&quot;, 10, FontStyle.Bold)\n        dataGridView1.ColumnHeadersDefaultCellStyle = columnHeaderStyle\n\n        &#39; Set the column header names.\n        dataGridView1.Columns(0).Name = &quot;Recipe&quot;\n        dataGridView1.Columns(1).Name = &quot;Category&quot;\n        dataGridView1.Columns(2).Name = &quot;Main Ingredients&quot;\n        dataGridView1.Columns(3).Name = &quot;Rating&quot;\n\n        &#39; Populate the rows.\n        Dim row1() As String = {&quot;Meatloaf&quot;, &quot;Main Dish&quot;, &quot;ground beef&quot;, &quot;**&quot;}\n        Dim row2() As String = _\n            {&quot;Key Lime Pie&quot;, &quot;Dessert&quot;, &quot;lime juice, evaporated milk&quot;, &quot;****&quot;}\n        Dim row3() As String = {&quot;Orange-Salsa Pork Chops&quot;, &quot;Main Dish&quot;, _\n            &quot;pork chops, salsa, orange juice&quot;, &quot;****&quot;}\n        Dim row4() As String = {&quot;Black Bean and Rice Salad&quot;, &quot;Salad&quot;, _\n            &quot;black beans, brown rice&quot;, &quot;****&quot;}\n        Dim row5() As String = _\n            {&quot;Chocolate Cheesecake&quot;, &quot;Dessert&quot;, &quot;cream cheese&quot;, &quot;***&quot;}\n        Dim row6() As String = _\n            {&quot;Black Bean Dip&quot;, &quot;Appetizer&quot;, &quot;black beans, sour cream&quot;, &quot;***&quot;}\n        Dim rows() As Object = {row1, row2, row3, row4, row5, row6}\n\n        Dim rowArray As String()\n        For Each rowArray In rows\n            dataGridView1.Rows.Add(rowArray)\n        Next rowArray\n\n    End Sub\n\n    Private Sub button1_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles button1.Click\n\n        &#39; Resize the height of the column headers. \n        dataGridView1.AutoResizeColumnHeadersHeight()\n\n        &#39; Resize all the row heights to fit the contents of all \n        &#39; non-header cells.\n        dataGridView1.AutoResizeRows( _\n            DataGridViewAutoSizeRowsMode.AllCellsExceptHeaders)\n\n    End Sub\n\n    Private Sub InitializeContextMenu()\n\n        &#39; Create the menu item.\n        Dim getRecipe As New ToolStripMenuItem( _\n            &quot;Search for recipe&quot;, Nothing, AddressOf ShortcutMenuClick)\n\n        &#39; Add the menu item to the shortcut menu.\n        Dim recipeMenu As New ContextMenuStrip()\n        recipeMenu.Items.Add(getRecipe)\n\n        &#39; Set the shortcut menu for the first column.\n        dataGridView1.Columns(0).ContextMenuStrip = recipeMenu\n\n    End Sub\n\n    Private clickedCell As DataGridViewCell\n\n    Private Sub dataGridView1_MouseDown(ByVal sender As Object, _\n        ByVal e As MouseEventArgs) Handles dataGridView1.MouseDown\n\n        &#39; If the user right-clicks a cell, store it for use by the \n        &#39; shortcut menu.\n        If e.Button = MouseButtons.Right Then\n            Dim hit As DataGridView.HitTestInfo = _\n                dataGridView1.HitTest(e.X, e.Y)\n            If hit.Type = DataGridViewHitTestType.Cell Then\n                clickedCell = _\n                    dataGridView1.Rows(hit.RowIndex).Cells(hit.ColumnIndex)\n            End If\n        End If\n\n    End Sub\n\n    Private Sub ShortcutMenuClick(ByVal sender As Object, _\n        ByVal e As System.EventArgs)\n\n        If (clickedCell IsNot Nothing) Then\n            &#39;Retrieve the recipe name.\n            Dim recipeName As String = CStr(clickedCell.Value)\n\n            &#39;Search for the recipe.\n            System.Diagnostics.Process.Start( _\n                &quot;http://search.msn.com/results.aspx?q=&quot; + recipeName)\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_Columns\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_Columns_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Columns</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection that contains all the columns in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewColumnCollection Columns { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumncollection\" data-linktype=\"relative-path\">DataGridViewColumnCollection</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumncollection\" data-linktype=\"relative-path\">DataGridViewColumnCollection</a> that contains all the columns in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By using the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumncollection\" data-linktype=\"relative-path\">DataGridViewColumnCollection</a> returned by this property, you can add columns, remove columns, and obtain a count of the columns contained in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. For more information, see <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumncollection\" data-linktype=\"relative-path\">DataGridViewColumnCollection</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to create an unbound <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>; set the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersVisible_\" data-linktype=\"relative-path\">ColumnHeadersVisible</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">ColumnHeadersDefaultCellStyle</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnCount_\" data-linktype=\"relative-path\">ColumnCount</a> properties; and use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Rows_\" data-linktype=\"relative-path\">Rows</a> and Columns properties. It also demonstrates how to use a version of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight_\" data-linktype=\"relative-path\">AutoResizeColumnHeadersHeight</a> and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRows_\" data-linktype=\"relative-path\">AutoResizeRows</a> methods to properly size the column headers and the rows. To run this example, paste the following code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code> and a button named <code>Button1</code>, and then call the <code>InitializeDataGridView</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler. Ensure all events are connected with their event handlers.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewAutoSize#2\">   void InitializeDataGridView()\n   {\n      this-&gt;Size = System::Drawing::Size( 600, 600 );\n      dataGridView1-&gt;Size = System::Drawing::Size( 450, 400 );\n\n      // Create an unbound DataGridView by declaring a column count.\n      dataGridView1-&gt;ColumnCount = 4;\n      dataGridView1-&gt;ColumnHeadersVisible = true;\n\n      // Set the column header style.\n      DataGridViewCellStyle ^ columnHeaderStyle = gcnew DataGridViewCellStyle;\n      columnHeaderStyle-&gt;BackColor = Color::Aqua;\n      columnHeaderStyle-&gt;Font = gcnew System::Drawing::Font( &quot;Verdana&quot;,10,FontStyle::Bold );\n      dataGridView1-&gt;ColumnHeadersDefaultCellStyle = columnHeaderStyle;\n\n      // Set the column header names.\n      dataGridView1-&gt;Columns[ 0 ]-&gt;Name = &quot;Recipe&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;Name = &quot;Category&quot;;\n      dataGridView1-&gt;Columns[ 2 ]-&gt;Name = &quot;Main Ingredients&quot;;\n      dataGridView1-&gt;Columns[ 3 ]-&gt;Name = &quot;Rating&quot;;\n\n      // Populate the rows.\n      array&lt;String^&gt;^row1 = gcnew array&lt;String^&gt;{\n         &quot;Meatloaf&quot;,&quot;Main Dish&quot;,&quot;ground beef&quot;,&quot;**&quot;\n      };\n      array&lt;String^&gt;^row2 = gcnew array&lt;String^&gt;{\n         &quot;Key Lime Pie&quot;,&quot;Dessert&quot;,&quot;lime juice, evaporated milk&quot;,&quot;****&quot;\n      };\n      array&lt;String^&gt;^row3 = gcnew array&lt;String^&gt;{\n         &quot;Orange-Salsa Pork Chops&quot;,&quot;Main Dish&quot;,&quot;pork chops, salsa, orange juice&quot;,&quot;****&quot;\n      };\n      array&lt;String^&gt;^row4 = gcnew array&lt;String^&gt;{\n         &quot;Black Bean and Rice Salad&quot;,&quot;Salad&quot;,&quot;black beans, brown rice&quot;,&quot;****&quot;\n      };\n      array&lt;String^&gt;^row5 = gcnew array&lt;String^&gt;{\n         &quot;Chocolate Cheesecake&quot;,&quot;Dessert&quot;,&quot;cream cheese&quot;,&quot;***&quot;\n      };\n      array&lt;String^&gt;^row6 = gcnew array&lt;String^&gt;{\n         &quot;Black Bean Dip&quot;,&quot;Appetizer&quot;,&quot;black beans, sour cream&quot;,&quot;***&quot;\n      };\n      array&lt;Object^&gt;^rows = {row1,row2,row3,row4,row5,row6};\n      System::Collections::IEnumerator^ myEnum = rows-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         array&lt;String^&gt;^rowArray = safe_cast&lt;array&lt;String^&gt;^&gt;(myEnum-&gt;Current);\n         dataGridView1-&gt;Rows-&gt;Add( rowArray );\n      }\n   }\n\n   void Button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Resize the height of the column headers. \n      dataGridView1-&gt;AutoResizeColumnHeadersHeight();\n\n      // Resize all the row heights to fit the contents of all non-header cells.\n      dataGridView1-&gt;AutoResizeRows(\n            DataGridViewAutoSizeRowsMode::AllCellsExceptHeaders);\n   }\n\n   void InitializeContextMenu()\n   {\n      // Create the menu item.\n      MenuItem^ getRecipe = gcnew MenuItem( &quot;Search for recipe&quot;,gcnew System::EventHandler( this, &amp;Form1::OnMenuClick ) );\n\n      // Add the menu item to the shortcut menu.\n      System::Windows::Forms::ContextMenuStrip^ recipeMenu = gcnew System::Windows::Forms::ContextMenuStrip();\n\n      // Set the shortcut menu for the first column.\n      dataGridView1-&gt;Columns[ 0 ]-&gt;ContextMenuStrip = recipeMenu;\n   }\n\n   void OnMenuClick( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      if ( dataGridView1-&gt;CurrentCell != nullptr )\n      {\n         //Retrieve the recipe name.\n         String^ recipeName = dynamic_cast&lt;String^&gt;(dataGridView1-&gt;CurrentCell-&gt;Value);\n\n         //Search for the recipe.\n         System::Diagnostics::Process::Start( String::Format( &quot;http://search.msn.com/results.aspx?q={0}&quot;, recipeName ), nullptr );\n      }\n   }\n\nprivate:\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewAutoSize#2\">    private void InitializeDataGridView()\n    {\n        // Create an unbound DataGridView by declaring a column count.\n        dataGridView1.ColumnCount = 4;\n        dataGridView1.ColumnHeadersVisible = true;\n\n        // Set the column header style.\n        DataGridViewCellStyle columnHeaderStyle = new DataGridViewCellStyle();\n\n        columnHeaderStyle.BackColor = Color.Beige;\n        columnHeaderStyle.Font = new Font(&quot;Verdana&quot;, 10, FontStyle.Bold);\n        dataGridView1.ColumnHeadersDefaultCellStyle = columnHeaderStyle;\n\n        // Set the column header names.\n        dataGridView1.Columns[0].Name = &quot;Recipe&quot;;\n        dataGridView1.Columns[1].Name = &quot;Category&quot;;\n        dataGridView1.Columns[2].Name = &quot;Main Ingredients&quot;;\n        dataGridView1.Columns[3].Name = &quot;Rating&quot;;\n\n        // Populate the rows.\n        string[] row1 = new string[] { &quot;Meatloaf&quot;, &quot;Main Dish&quot;, &quot;ground beef&quot;,\n            &quot;**&quot; };\n        string[] row2 = new string[] { &quot;Key Lime Pie&quot;, &quot;Dessert&quot;, \n            &quot;lime juice, evaporated milk&quot;, &quot;****&quot; };\n        string[] row3 = new string[] { &quot;Orange-Salsa Pork Chops&quot;, &quot;Main Dish&quot;, \n            &quot;pork chops, salsa, orange juice&quot;, &quot;****&quot; };\n        string[] row4 = new string[] { &quot;Black Bean and Rice Salad&quot;, &quot;Salad&quot;, \n            &quot;black beans, brown rice&quot;, &quot;****&quot; };\n        string[] row5 = new string[] { &quot;Chocolate Cheesecake&quot;, &quot;Dessert&quot;, \n            &quot;cream cheese&quot;, &quot;***&quot; };\n        string[] row6 = new string[] { &quot;Black Bean Dip&quot;, &quot;Appetizer&quot;, \n            &quot;black beans, sour cream&quot;, &quot;***&quot; };\n        object[] rows = new object[] { row1, row2, row3, row4, row5, row6 };\n\n        foreach (string[] rowArray in rows)\n        {\n            dataGridView1.Rows.Add(rowArray);\n        }\n    }\n\n    private void button1_Click(object sender, System.EventArgs e)\n    {\n        // Resize the height of the column headers. \n        dataGridView1.AutoResizeColumnHeadersHeight();\n\n        // Resize all the row heights to fit the contents of all non-header cells.\n        dataGridView1.AutoResizeRows(\n            DataGridViewAutoSizeRowsMode.AllCellsExceptHeaders);\n    }\n\n    private void InitializeContextMenu()\n    {\n        // Create the menu item.\n        ToolStripMenuItem getRecipe = new ToolStripMenuItem(&quot;Search for recipe&quot;, null,\n            new System.EventHandler(ShortcutMenuClick));\n\n        // Add the menu item to the shortcut menu.\n        ContextMenuStrip recipeMenu = new ContextMenuStrip();\n        recipeMenu.Items.Add(getRecipe); \n\n        // Set the shortcut menu for the first column.\n        dataGridView1.Columns[0].ContextMenuStrip = recipeMenu;\n        dataGridView1.MouseDown += new MouseEventHandler(dataGridView1_MouseDown);\n    }\n\n    private DataGridViewCell clickedCell;\n\n    private void dataGridView1_MouseDown(object sender, MouseEventArgs e)\n    {\n\t// If the user right-clicks a cell, store it for use by the shortcut menu.\n        if (e.Button == MouseButtons.Right)\n        {\n            DataGridView.HitTestInfo hit = dataGridView1.HitTest(e.X, e.Y);\n            if (hit.Type == DataGridViewHitTestType.Cell)\n            {\n                clickedCell =\n                    dataGridView1.Rows[hit.RowIndex].Cells[hit.ColumnIndex];\n            }\n        }\n    }\n\n    private void ShortcutMenuClick(object sender, System.EventArgs e)\n    {\n        if (clickedCell != null)\n        {\n            //Retrieve the recipe name.\n            string recipeName = (string)clickedCell.Value;\n\n            //Search for the recipe.\n            System.Diagnostics.Process.Start(\n                &quot;http://search.msn.com/results.aspx?q=&quot; + recipeName);\n                //null);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewAutoSize#2\">    Private Sub InitializeDataGridView()\n\n        &#39; Create an unbound DataGridView by declaring a column count.\n        dataGridView1.ColumnCount = 4\n        dataGridView1.ColumnHeadersVisible = True\n\n        &#39; Set the column header style.\n        Dim columnHeaderStyle As New DataGridViewCellStyle()\n\n        columnHeaderStyle.BackColor = Color.Beige\n        columnHeaderStyle.Font = New Font(&quot;Verdana&quot;, 10, FontStyle.Bold)\n        dataGridView1.ColumnHeadersDefaultCellStyle = columnHeaderStyle\n\n        &#39; Set the column header names.\n        dataGridView1.Columns(0).Name = &quot;Recipe&quot;\n        dataGridView1.Columns(1).Name = &quot;Category&quot;\n        dataGridView1.Columns(2).Name = &quot;Main Ingredients&quot;\n        dataGridView1.Columns(3).Name = &quot;Rating&quot;\n\n        &#39; Populate the rows.\n        Dim row1() As String = {&quot;Meatloaf&quot;, &quot;Main Dish&quot;, &quot;ground beef&quot;, &quot;**&quot;}\n        Dim row2() As String = _\n            {&quot;Key Lime Pie&quot;, &quot;Dessert&quot;, &quot;lime juice, evaporated milk&quot;, &quot;****&quot;}\n        Dim row3() As String = {&quot;Orange-Salsa Pork Chops&quot;, &quot;Main Dish&quot;, _\n            &quot;pork chops, salsa, orange juice&quot;, &quot;****&quot;}\n        Dim row4() As String = {&quot;Black Bean and Rice Salad&quot;, &quot;Salad&quot;, _\n            &quot;black beans, brown rice&quot;, &quot;****&quot;}\n        Dim row5() As String = _\n            {&quot;Chocolate Cheesecake&quot;, &quot;Dessert&quot;, &quot;cream cheese&quot;, &quot;***&quot;}\n        Dim row6() As String = _\n            {&quot;Black Bean Dip&quot;, &quot;Appetizer&quot;, &quot;black beans, sour cream&quot;, &quot;***&quot;}\n        Dim rows() As Object = {row1, row2, row3, row4, row5, row6}\n\n        Dim rowArray As String()\n        For Each rowArray In rows\n            dataGridView1.Rows.Add(rowArray)\n        Next rowArray\n\n    End Sub\n\n    Private Sub button1_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles button1.Click\n\n        &#39; Resize the height of the column headers. \n        dataGridView1.AutoResizeColumnHeadersHeight()\n\n        &#39; Resize all the row heights to fit the contents of all \n        &#39; non-header cells.\n        dataGridView1.AutoResizeRows( _\n            DataGridViewAutoSizeRowsMode.AllCellsExceptHeaders)\n\n    End Sub\n\n    Private Sub InitializeContextMenu()\n\n        &#39; Create the menu item.\n        Dim getRecipe As New ToolStripMenuItem( _\n            &quot;Search for recipe&quot;, Nothing, AddressOf ShortcutMenuClick)\n\n        &#39; Add the menu item to the shortcut menu.\n        Dim recipeMenu As New ContextMenuStrip()\n        recipeMenu.Items.Add(getRecipe)\n\n        &#39; Set the shortcut menu for the first column.\n        dataGridView1.Columns(0).ContextMenuStrip = recipeMenu\n\n    End Sub\n\n    Private clickedCell As DataGridViewCell\n\n    Private Sub dataGridView1_MouseDown(ByVal sender As Object, _\n        ByVal e As MouseEventArgs) Handles dataGridView1.MouseDown\n\n        &#39; If the user right-clicks a cell, store it for use by the \n        &#39; shortcut menu.\n        If e.Button = MouseButtons.Right Then\n            Dim hit As DataGridView.HitTestInfo = _\n                dataGridView1.HitTest(e.X, e.Y)\n            If hit.Type = DataGridViewHitTestType.Cell Then\n                clickedCell = _\n                    dataGridView1.Rows(hit.RowIndex).Cells(hit.ColumnIndex)\n            End If\n        End If\n\n    End Sub\n\n    Private Sub ShortcutMenuClick(ByVal sender As Object, _\n        ByVal e As System.EventArgs)\n\n        If (clickedCell IsNot Nothing) Then\n            &#39;Retrieve the recipe name.\n            Dim recipeName As String = CStr(clickedCell.Value)\n\n            &#39;Search for the recipe.\n            System.Diagnostics.Process.Start( _\n                &quot;http://search.msn.com/results.aspx?q=&quot; + recipeName)\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CurrentCell\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_CurrentCell_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentCell</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the currently active cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewCell CurrentCell { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> that represents the current cell, or <code>null</code> if there is no current cell. The default is the first cell in the first column or <code>null</code> if there are no cells in the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The value of this property cannot be set because changes to the current cell cannot be committed or canceled.  </p>\n<p> -or-  </p>\n<p> The specified cell when setting this property is in a hidden row or column.  </p>\n<p> Re-entrant calling is only allowed when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is bound to a <span class=\"xref\">stem.Windows.Forms.DataGridView.DataSource*</span>. Re-entrant calling results from a change to the underlying data.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified cell when setting this property is not in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you set a cell as the current cell, it will scroll into view if it is not currently displayed. The current cell cannot be a header cell, a disabled cell, or a cell in a hidden row or column.  </p>\n<p> You can set this property to <code>null</code> to temporarily remove the focus rectangle, but when the control receives focus and the value of this property is <code>null</code>, it is automatically set to the value of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_FirstDisplayedCell_\" data-linktype=\"relative-path\">FirstDisplayedCell</a>property.  </p>\n<p> When you change the value of this property, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"relative-path\">SelectionChanged</a> event occurs before the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCellChanged\" data-linktype=\"relative-path\">CurrentCellChanged</a> event. Any <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"relative-path\">SelectionChanged</a> event handler accessing the CurrentCell property at this time will get its previous value.  </p>\n<p> When you bind the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> to an external data source, this property is reset to its default value.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to ensure that the current cell is visible after sorting by setting the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_FirstDisplayedCell_\" data-linktype=\"relative-path\">FirstDisplayedCell</a> property to the cell retrieved through the CurrentCell property. This code works only with an unbound <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. With a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control bound to an external data source, the current cell is not automatically persisted when sorting.  </p>\n<p> To run this example, paste the following code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code>. In C#, you must also connect the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Sorted\" data-linktype=\"relative-path\">Sorted</a> event to the event handler.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#150\">    private void dataGridView1_Sorted(object sender, EventArgs e)\n    {\n        this.dataGridView1.FirstDisplayedCell = this.dataGridView1.CurrentCell;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#150\">    Private Sub dataGridView1_Sorted(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles dataGridView1.Sorted\n\n        Me.dataGridView1.FirstDisplayedCell = Me.dataGridView1.CurrentCell\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CurrentCellAddress\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_CurrentCellAddress_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentCellAddress</div>        \r\n          </div>\r\n    \r\n            <p>Gets the row and column indexes of the currently active cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Point CurrentCellAddress { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> that represents the row and column indexes of the currently active cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this property to determine the row and column of the current cell without accessing the cell directly. This is useful to avoid unsharing shared rows. For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use the CurrentCellAddress property in a row-painting scenario. In the example, this property is used to store the row index of the current cell. When the user changes the current cell to a different row, the row is forced to repaint itself.  </p>\n<p> This code is part of a larger example available in <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRowPainting#19\">    &#39; Forces the row to repaint itself when the user changes the \n    &#39; current cell. This is necessary to refresh the focus rectangle.\n    Sub dataGridView1_CurrentCellChanged(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles dataGridView1.CurrentCellChanged\n\n        If oldRowIndex &lt;&gt; -1 Then\n            Me.dataGridView1.InvalidateRow(oldRowIndex)\n        End If\n        oldRowIndex = Me.dataGridView1.CurrentCellAddress.Y\n\n    End Sub &#39;dataGridView1_CurrentCellChanged\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRowPainting#19\">    // Forces the row to repaint itself when the user changes the \n    // current cell. This is necessary to refresh the focus rectangle.\n    void dataGridView1_CurrentCellChanged(object sender, EventArgs e)\n    {\n        if (oldRowIndex != -1)\n        {\n            this.dataGridView1.InvalidateRow(oldRowIndex);\n        }\n        oldRowIndex = this.dataGridView1.CurrentCellAddress.Y;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CurrentRow\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_CurrentRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentRow</div>        \r\n          </div>\r\n    \r\n            <p>Gets the row containing the current cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewRow CurrentRow { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> that represents the row containing the current cell, or <code>null</code> if there is no current cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To change the current row, you must set the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCell_\" data-linktype=\"relative-path\">CurrentCell</a> property to a cell in the desired row.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_DataMember\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_DataMember_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataMember</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the name of the list or table in the data source for which the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is displaying data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DataMember { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the table or list in the <span class=\"xref\">stem.Windows.Forms.DataGridView.DataSource*</span> for which the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is displaying data. The default is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred in the data source and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>. The exception object can typically be cast to type <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is useful when binding to a data source that contains multiple lists or tables. You do not need to set this property when binding to a data source that contains a single list or table. For example, you can bind a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control to a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> that contains a single table without setting this property. If the <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains multiple tables, however, you must set this property to the name of one of the tables.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates a common use for this property. In the example, a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control named <code>customersDataGridView</code> is bound to a <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> named <code>customersDataSet</code>. This <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> contains a table named &quot;Customers&quot;. The DataMember property is set to the name of the table.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#020\">    private void BindData()\n    {\n        customersDataGridView.AutoGenerateColumns = true;\n        customersDataGridView.DataSource = customersDataSet;\n        customersDataGridView.DataMember = &quot;Customers&quot;;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#020\">    Private Sub BindData()\n\n        With customersDataGridView\n            .AutoGenerateColumns = True\n            .DataSource = customersDataSet\n            .DataMember = &quot;Customers&quot;\n        End With\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_DataSource\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_DataSource_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataSource</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the data source that the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is displaying data for.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object DataSource { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </div>\r\n                  <p>The object that contains data for the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> to display.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>An error occurred in the data source and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>. The exception object can typically be cast to type <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> class supports the standard Windows Forms data-binding model. This means the data source can be of any type that implements one of the following interfaces:  </p>\n<ul>\n<li><p>The <a class=\"xref\" href=\"system.collections.ilist\" data-linktype=\"relative-path\">IList</a> interface, including one-dimensional arrays.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.componentmodel.ilistsource\" data-linktype=\"relative-path\">IListSource</a> interface, such as the <a class=\"xref\" href=\"system.data.datatable\" data-linktype=\"relative-path\">DataTable</a> and <a class=\"xref\" href=\"system.data.dataset\" data-linktype=\"relative-path\">DataSet</a> classes.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.componentmodel.ibindinglist\" data-linktype=\"relative-path\">IBindingList</a> interface, such as the <a class=\"xref\" href=\"system.componentmodel.bindinglist-1\" data-linktype=\"relative-path\">BindingList&lt;T&gt;</a> class.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.componentmodel.ibindinglistview\" data-linktype=\"relative-path\">IBindingListView</a> interface, such as the <a class=\"xref\" href=\"system.windows.forms.bindingsource\" data-linktype=\"relative-path\">BindingSource</a> class.  </p>\n<p>For specific examples, see the Example section and the task table at the end of this section.  </p>\n<p>Typically, you will bind to a <a class=\"xref\" href=\"system.windows.forms.bindingsource\" data-linktype=\"relative-path\">BindingSource</a> component and bind the <a class=\"xref\" href=\"system.windows.forms.bindingsource\" data-linktype=\"relative-path\">BindingSource</a> component to another data source or populate it with business objects. The <a class=\"xref\" href=\"system.windows.forms.bindingsource\" data-linktype=\"relative-path\">BindingSource</a> component is the preferred data source because it can bind to a wide variety of data sources and can resolve many data binding issues automatically.  </p>\n<p>When binding to a data source that contains multiple lists or tables, you must set the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataMember_\" data-linktype=\"relative-path\">DataMember</a> property to a string that specifies the list or table to bind to. When binding to a <a class=\"xref\" href=\"system.windows.forms.bindingsource\" data-linktype=\"relative-path\">BindingSource</a> component that contains multiple lists or tables, however, you can set the <a class=\"xref\" href=\"system.windows.forms.bindingsource#System_Windows_Forms_BindingSource_DataMember_\" data-linktype=\"relative-path\">DataMember</a> property of the <a class=\"xref\" href=\"system.windows.forms.bindingsource\" data-linktype=\"relative-path\">BindingSource</a> component instead.  </p>\n<p>When binding to an object collection rather than to database data, you will typically set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_DataSourceNullValue_\" data-linktype=\"relative-path\">DataSourceNullValue</a> property of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property to <code>null</code> rather than using the default value of <a class=\"xref\" href=\"system.dbnull#System_DBNull_Value\" data-linktype=\"relative-path\">System.DBNull.Value</a>, which is appropriate for database data.  </p>\n<p>For more information, see <a href=\"../Topic/Displaying%20Data%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Displaying Data in the Windows Forms DataGridView Control</a>. The following table provides direct links to common tasks related to the DataSource property.  </p>\n<p>See <a href=\"../Topic/Walkthrough:%20Creating%20a%20Master-Detail%20Form%20Using%20Two%20Windows%20Forms%20DataGridView%20Controls.md\" data-linktype=\"relative-path\">Walkthrough: Creating a Master/Detail Form Using Two Windows Forms DataGridView Controls</a>and <a href=\"../Topic/How%20to:%20Bind%20Objects%20to%20Windows%20Forms%20DataGridView%20Controls.md\" data-linktype=\"relative-path\">How to: Bind Objects to Windows Forms DataGridView Controls</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to initialize a simple data-bound <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. It also demonstrates how to set the DataSource property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewSimpleBound#1\">using System;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Windows.Forms;\nusing System.Drawing;\n\npublic class Form1 : System.Windows.Forms.Form\n{\n    private DataGridView dataGridView1 = new DataGridView();\n    private BindingSource bindingSource1 = new BindingSource();\n\n    public Form1()\n    {\n        dataGridView1.Dock = DockStyle.Fill;\n        this.Controls.Add(dataGridView1);\n        InitializeDataGridView();\n    }\n\n    private void InitializeDataGridView()\n    {\n        try\n        {\n            // Set up the DataGridView.\n            dataGridView1.Dock = DockStyle.Fill;\n\n            // Automatically generate the DataGridView columns.\n            dataGridView1.AutoGenerateColumns = true;\n\n            // Set up the data source.\n            bindingSource1.DataSource = GetData(&quot;Select * From Products&quot;);\n            dataGridView1.DataSource = bindingSource1;\n\n            // Automatically resize the visible rows.\n            dataGridView1.AutoSizeRowsMode =\n                DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders;\n\n            // Set the DataGridView control&#39;s border.\n            dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n\n            // Put the cells in edit mode when user enters them.\n            dataGridView1.EditMode = DataGridViewEditMode.EditOnEnter;\n        }\n        catch (SqlException)\n        {\n            MessageBox.Show(&quot;To run this sample replace connection.ConnectionString&quot; +\n                &quot; with a valid connection string to a Northwind&quot; +\n                &quot; database accessible to your system.&quot;, &quot;ERROR&quot;,\n                MessageBoxButtons.OK, MessageBoxIcon.Exclamation);\n            System.Threading.Thread.CurrentThread.Abort();\n        }\n    }\n\n    private static DataTable GetData(string sqlCommand)\n    {\n        string connectionString = &quot;Integrated Security=SSPI;&quot; +\n            &quot;Persist Security Info=False;&quot; +\n            &quot;Initial Catalog=Northwind;Data Source=localhost&quot;;\n\n        SqlConnection northwindConnection = new SqlConnection(connectionString);\n\n        SqlCommand command = new SqlCommand(sqlCommand, northwindConnection);\n        SqlDataAdapter adapter = new SqlDataAdapter();\n        adapter.SelectCommand = command;\n\n        DataTable table = new DataTable();\n        table.Locale = System.Globalization.CultureInfo.InvariantCulture;\n        adapter.Fill(table);\n\n        return table;\n    }\n\n    [STAThreadAttribute()]\n    public static void Main()\n    {\n        Application.Run(new Form1());\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewSimpleBound#1\">Imports System.Data\nImports System.Data.SqlClient\nImports System.Windows.Forms\nImports System.Drawing\nImports System\n\nPublic Class Form1\n    Inherits System.Windows.Forms.Form\n\n    Private WithEvents dataGridView1 As New DataGridView()\n    Private bindingSource1 As New BindingSource()\n\n    Public Sub New()\n\n        Me.dataGridView1.Dock = DockStyle.Fill\n        Me.Controls.Add(Me.dataGridView1)\n        InitializeDataGridView()\n\n    End Sub\n\n    Private Sub InitializeDataGridView()\n        Try\n            &#39; Set up the DataGridView.\n            With Me.dataGridView1\n                &#39; Automatically generate the DataGridView columns.\n                .AutoGenerateColumns = True\n\n                &#39; Set up the data source.\n                bindingSource1.DataSource = GetData(&quot;Select * From Products&quot;)\n                .DataSource = bindingSource1\n\n                &#39; Automatically resize the visible rows.\n                .AutoSizeRowsMode = _\n                    DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders\n\n                &#39; Set the DataGridView control&#39;s border.\n                .BorderStyle = BorderStyle.Fixed3D\n\n                &#39; Put the cells in edit mode when user enters them.\n                .EditMode = DataGridViewEditMode.EditOnEnter\n            End With\n        Catch ex As SqlException\n            MessageBox.Show(&quot;To run this sample replace &quot; _\n                &amp; &quot;connection.ConnectionString with a valid connection string&quot; _\n                &amp; &quot;  to a Northwind database accessible to your system.&quot;, _\n                &quot;ERROR&quot;, MessageBoxButtons.OK, MessageBoxIcon.Exclamation)\n            System.Threading.Thread.CurrentThread.Abort()\n        End Try\n    End Sub\n\n    Private Shared Function GetData(ByVal sqlCommand As String) _\n        As DataTable\n\n        Dim connectionString As String = _\n            &quot;Integrated Security=SSPI;Persist Security Info=False;&quot; _\n            &amp; &quot;Initial Catalog=Northwind;Data Source=localhost&quot;\n\n        Dim northwindConnection As SqlConnection = _\n            New SqlConnection(connectionString)\n\n        Dim command As New SqlCommand(sqlCommand, northwindConnection)\n        Dim adapter As SqlDataAdapter = New SqlDataAdapter()\n        adapter.SelectCommand = command\n\n        Dim table As New DataTable\n        table.Locale = System.Globalization.CultureInfo.InvariantCulture\n        adapter.Fill(table)\n\n        Return table\n\n    End Function\n\n    &lt;STAThreadAttribute()&gt; _\n    Public Shared Sub Main()\n        Application.Run(New Form1)\n    End Sub\n\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewSimpleBound#1\">#using &lt;System.Transactions.dll&gt;\n#using &lt;System.EnterpriseServices.dll&gt;\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Data.dll&gt;\n\nusing namespace System;\nusing namespace System::Data;\nusing namespace System::Data::SqlClient;\nusing namespace System::Windows::Forms;\nusing namespace System::Drawing;\npublic ref class Form1: public System::Windows::Forms::Form\n{\npublic:\n   Form1()\n      : Form()\n   {\n      \n      //This call is required by the Windows Form Designer.\n      InitializeComponent();\n      InitializeDataGridView();\n      \n      //Add any initialization after the InitializeComponent() call\n   }\n\n\nprotected:\n\n   ~Form1()\n   {\n      if ( components != nullptr )\n      {\n         delete components;\n      }\n   }\n\nprivate:\n   System::Windows::Forms::DataGridView ^ dataGridView1;\n   System::Windows::Forms::BindingSource ^ bindingSource1;\n\n   //Required by the Windows Form Designer\n   System::ComponentModel::IContainer^ components;\n\n   //NOTE: The following procedure is required by the Windows Form Designer\n   //It can be modified using the Windows Form Designer.  \n   //Do not modify it using the code editor.\n\n   [System::Diagnostics::DebuggerNonUserCode]\n   void InitializeComponent()\n   {\n      this-&gt;dataGridView1 = gcnew System::Windows::Forms::DataGridView;\n      this-&gt;bindingSource1 = gcnew System::Windows::Forms::BindingSource;\n      this-&gt;SuspendLayout();\n\n      //\n      //DataGridView1\n      //\n      this-&gt;dataGridView1-&gt;Location = System::Drawing::Point( 96, 71 );\n      this-&gt;dataGridView1-&gt;Name = &quot;DataGridView1&quot;;\n      this-&gt;dataGridView1-&gt;Size = System::Drawing::Size( 321, 286 );\n      this-&gt;dataGridView1-&gt;TabIndex = 0;\n\n      //\n      //Form1\n      //\n      this-&gt;ClientSize = System::Drawing::Size( 518, 413 );\n      this-&gt;Controls-&gt;Add( this-&gt;dataGridView1 );\n      this-&gt;Name = &quot;Form1&quot;;\n      this-&gt;Text = &quot;Form1&quot;;\n      this-&gt;ResumeLayout( false );\n   }\n\ninternal:\n\n   static property Form1^ GetInstance \n   {\n      Form1^ get()\n      {\n         if ( m_DefaultInstance == nullptr || m_DefaultInstance-&gt;IsDisposed )\n         {\n            System::Threading::Monitor::Enter( m_SyncObject );\n            try\n            {\n               if ( m_DefaultInstance == nullptr || m_DefaultInstance-&gt;IsDisposed )\n               {\n                  m_DefaultInstance = gcnew Form1;\n               }\n            }\n            finally\n            {\n               System::Threading::Monitor::Exit( m_SyncObject );\n            }\n         }\n\n         return m_DefaultInstance;\n      }\n   }\n\nprivate:\n   static Form1^ m_DefaultInstance;\n   static Object^ m_SyncObject = gcnew Object;\n\n   void InitializeDataGridView()\n   {\n      try\n      {\n         // Set up the DataGridView.\n         dataGridView1-&gt;Dock = DockStyle::Fill;\n\n         // Automatically generate the DataGridView columns.\n         dataGridView1-&gt;AutoGenerateColumns = true;\n\n         // Set up the data source.\n         bindingSource1-&gt;DataSource = GetData( &quot;Select * From Products&quot; );\n         dataGridView1-&gt;DataSource = bindingSource1;\n\n         // Automatically resize the visible rows.\n         dataGridView1-&gt;AutoSizeRowsMode = DataGridViewAutoSizeRowsMode::DisplayedCellsExceptHeaders;\n\n         // Set the DataGridView control&#39;s border.\n         dataGridView1-&gt;BorderStyle = BorderStyle::Fixed3D;\n\n         // Put the cells in edit mode when user enters them.\n         dataGridView1-&gt;EditMode = DataGridViewEditMode::EditOnEnter;\n      }\n      catch ( SqlException^ ) \n      {\n         MessageBox::Show( &quot;To run this sample replace connection.ConnectionString&quot;\n         &quot; with a valid connection string to a Northwind&quot;\n         &quot; database accessible to your system.&quot;, &quot;ERROR&quot;, MessageBoxButtons::OK, MessageBoxIcon::Exclamation );\n         System::Threading::Thread::CurrentThread-&gt;Abort();\n      }\n      catch ( System::Exception^ ex ) \n      {\n         MessageBox::Show( ex-&gt;ToString() );\n      }\n   }\n\n\n   DataTable^ GetData( String^ sqlCommand )\n   {\n      String^ connectionString = &quot;Integrated Security=SSPI;Persist Security Info=False;&quot;\n      &quot;Initial Catalog=Northwind;Data Source= localhost&quot;;\n      SqlConnection^ northwindConnection = gcnew SqlConnection( connectionString );\n      SqlCommand^ command = gcnew SqlCommand( sqlCommand,northwindConnection );\n      SqlDataAdapter^ adapter = gcnew SqlDataAdapter;\n      adapter-&gt;SelectCommand = command;\n      DataTable^ table = gcnew DataTable;\n      adapter-&gt;Fill( table );\n      return table;\n   }\n};\n\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_DefaultCellStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_DefaultCellStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultCellStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the default cell style to be applied to the cells in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> if no other cell style properties are set.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewCellStyle DefaultCellStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> to be applied as the default style.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control displays its cells using the styles indicated by the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_InheritedStyle_\" data-linktype=\"relative-path\">InheritedStyle</a> property, which inherits styles from other properties of type <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a>. The styles specified through the DefaultCellStyle property affect all cells except when overridden by the styles specified through the following properties:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowsDefaultCellStyle_\" data-linktype=\"relative-path\">RowsDefaultCellStyle</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AlternatingRowsDefaultCellStyle_\" data-linktype=\"relative-path\">AlternatingRowsDefaultCellStyle</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Style_\" data-linktype=\"relative-path\">Style</a>  \n\n<p>For more information, see <a href=\"../Topic/Cell%20Styles%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Cell Styles in the Windows Forms DataGridView Control</a>.  </p>\n<p>When getting this property, a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> with default values will be created if the property has not already been accessed. This can cause a performance impact when getting this property for many rows. Whenever possible, use a single <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> to set this property for multiple rows. For more information, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this property in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> class overview.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    &#39; Configures the appearance and behavior of a DataGridView control.\n    Private Sub InitializeDataGridView()\n\n        &#39; Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill\n        dataGridView1.BackgroundColor = Color.LightGray\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D\n\n        &#39; Set property values appropriate for read-only display and \n        &#39; limited interactivity. \n        dataGridView1.AllowUserToAddRows = False\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.AllowUserToOrderColumns = True\n        dataGridView1.ReadOnly = True\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect\n        dataGridView1.MultiSelect = False\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None\n        dataGridView1.AllowUserToResizeColumns = False\n        dataGridView1.ColumnHeadersHeightSizeMode = _\n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing\n        dataGridView1.AllowUserToResizeRows = False\n        dataGridView1.RowHeadersWidthSizeMode = _\n            DataGridViewRowHeadersWidthSizeMode.DisableResizing\n\n        &#39; Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black\n\n        &#39; Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        &#39; value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty\n\n        &#39; Set the background color for all rows and for alternating rows. \n        &#39; The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray\n\n        &#39; Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black\n\n        &#39; Set the Format property on the &quot;Last Prepared&quot; column to cause\n        &#39; the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns(&quot;Last Prepared&quot;).DefaultCellStyle.Format = &quot;y&quot;\n\n        &#39; Specify a larger font for the &quot;Ratings&quot; column. \n        Dim font As New Font( _\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold)\n        Try\n            dataGridView1.Columns(&quot;Rating&quot;).DefaultCellStyle.Font = font\n        Finally\n            font.Dispose()\n        End Try\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    // Configures the appearance and behavior of a DataGridView control.\n    private void InitializeDataGridView()\n    {\n        // Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill;\n        dataGridView1.BackgroundColor = Color.LightGray;\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n\n        // Set property values appropriate for read-only display and \n        // limited interactivity. \n        dataGridView1.AllowUserToAddRows = false;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.AllowUserToOrderColumns = true;\n        dataGridView1.ReadOnly = true;\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None;\n        dataGridView1.AllowUserToResizeColumns = false;\n        dataGridView1.ColumnHeadersHeightSizeMode = \n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing;\n        dataGridView1.AllowUserToResizeRows = false;\n        dataGridView1.RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode.DisableResizing;\n\n        // Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White;\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black;\n\n        // Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        // value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty;\n\n        // Set the background color for all rows and for alternating rows. \n        // The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray;\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray;\n\n        // Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White;\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black;\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black;\n\n        // Set the Format property on the &quot;Last Prepared&quot; column to cause\n        // the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns[&quot;Last Prepared&quot;].DefaultCellStyle.Format = &quot;y&quot;;\n\n        // Specify a larger font for the &quot;Ratings&quot; column. \n        using (Font font = new Font(\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold))\n        {\n            dataGridView1.Columns[&quot;Rating&quot;].DefaultCellStyle.Font = font;\n        }\n\n        // Attach a handler to the CellFormatting event.\n        dataGridView1.CellFormatting += new\n            DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_DefaultSize\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_DefaultSize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultSize</div>        \r\n          </div>\r\n    \r\n            <p>Gets the default initial size of the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Drawing.Size DefaultSize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.size\" data-linktype=\"relative-path\">Size</a> representing the initial size of the control, which is 240 pixels wide by 150 pixels high.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_DisplayRectangle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_DisplayRectangle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DisplayRectangle</div>        \r\n          </div>\r\n    \r\n            <p>Gets the rectangle that represents the display area of the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Drawing.Rectangle DisplayRectangle { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the display area of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DisplayRectangle property returns the client rectangle of the display area of the control, not including the area occupied by any scroll bars that are showing.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_EditingControl\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_EditingControl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EditingControl</div>        \r\n          </div>\r\n    \r\n            <p>Gets the control hosted by the current cell, if a cell with an editing control is in edit mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.Control EditingControl { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">System.Windows.Forms.Control</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> hosted by the current cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the cell is not in edit mode or the cell type does not accommodate an editing control, this property returns <code>null</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use this property in an overridden method of a custom cell type. In the example, a reference to the editing control is retrieved, cast to a custom editing control type, and then populated with the current value of the cell.  </p>\n<p> This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Host%20Controls%20in%20Windows%20Forms%20DataGridView%20Cells.md\" data-linktype=\"relative-path\">How to: Host Controls in Windows Forms DataGridView Cells</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#210\">    public override void InitializeEditingControl(int rowIndex, object \n        initialFormattedValue, DataGridViewCellStyle dataGridViewCellStyle)\n    {\n        // Set the value of the editing control to the current cell value.\n        base.InitializeEditingControl(rowIndex, initialFormattedValue, \n            dataGridViewCellStyle);\n        CalendarEditingControl ctl = \n            DataGridView.EditingControl as CalendarEditingControl;\n        // Use the default row value when Value property is null.\n        if (this.Value == null)\n        {\n            ctl.Value = (DateTime)this.DefaultNewRowValue;\n        }\n        else\n        {\n            ctl.Value = (DateTime)this.Value;\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#210\">    Public Overrides Sub InitializeEditingControl(ByVal rowIndex As Integer, _\n        ByVal initialFormattedValue As Object, _\n        ByVal dataGridViewCellStyle As DataGridViewCellStyle)\n\n        &#39; Set the value of the editing control to the current cell value.\n        MyBase.InitializeEditingControl(rowIndex, initialFormattedValue, _\n            dataGridViewCellStyle)\n\n        Dim ctl As CalendarEditingControl = _\n            CType(DataGridView.EditingControl, CalendarEditingControl)\n\n        &#39; Use the default row value when Value property is null.\n        If (Me.Value Is Nothing) Then\n            ctl.Value = CType(Me.DefaultNewRowValue, DateTime)\n        Else\n            ctl.Value = CType(Me.Value, DateTime)\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_EditingPanel\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_EditingPanel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EditingPanel</div>        \r\n          </div>\r\n    \r\n            <p>Gets the panel that contains the <span class=\"xref\">stem.Windows.Forms.DataGridView.EditingControl*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.Panel EditingPanel { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.panel\" data-linktype=\"relative-path\">Panel</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.panel\" data-linktype=\"relative-path\">Panel</a> that contains the <span class=\"xref\">stem.Windows.Forms.DataGridView.EditingControl*</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Unlike the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EditingControl_\" data-linktype=\"relative-path\">EditingControl</a> property, which is <code>null</code> when the current cell is not in edit mode, the EditingPanel property is always available.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use the EditingPanel property in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control to visually differentiate a cell when it is in edit mode. In this example, the <a class=\"xref\" href=\"system.windows.forms.panel#System_Windows_Forms_Panel_BorderStyle_\" data-linktype=\"relative-path\">BorderStyle</a> of the cell&#39;s editing panel is set to <a class=\"xref\" href=\"system.windows.forms.borderstyle\" data-linktype=\"relative-path\">BorderStyle</a>. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#069\">        this.dataGridView1.EditingPanel.BorderStyle = BorderStyle.Fixed3D;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#069\">        Me.dataGridView1.EditingPanel.BorderStyle = BorderStyle.Fixed3D\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_EditMode\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_EditMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EditMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating how to begin editing a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewEditMode EditMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridvieweditmode\" data-linktype=\"relative-path\">DataGridViewEditMode</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridvieweditmode\" data-linktype=\"relative-path\">DataGridViewEditMode</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.datagridvieweditmode\" data-linktype=\"relative-path\">DataGridViewEditMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridvieweditmode\" data-linktype=\"relative-path\">DataGridViewEditMode</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property would cause the control to enter edit mode, but initialization of the editing cell value failed and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>. The exception object can typically be cast to type <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>All <a class=\"xref\" href=\"system.windows.forms.datagridvieweditmode\" data-linktype=\"relative-path\">DataGridViewEditMode</a> values except for <a class=\"xref\" href=\"system.windows.forms.datagridvieweditmode\" data-linktype=\"relative-path\">DataGridViewEditMode</a> also allow a user to double-click a cell to begin editing it.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to initialize a simple data-bound <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. It also demonstrates how to set the EditMode property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewSimpleBound#1\">using System;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Windows.Forms;\nusing System.Drawing;\n\npublic class Form1 : System.Windows.Forms.Form\n{\n    private DataGridView dataGridView1 = new DataGridView();\n    private BindingSource bindingSource1 = new BindingSource();\n\n    public Form1()\n    {\n        dataGridView1.Dock = DockStyle.Fill;\n        this.Controls.Add(dataGridView1);\n        InitializeDataGridView();\n    }\n\n    private void InitializeDataGridView()\n    {\n        try\n        {\n            // Set up the DataGridView.\n            dataGridView1.Dock = DockStyle.Fill;\n\n            // Automatically generate the DataGridView columns.\n            dataGridView1.AutoGenerateColumns = true;\n\n            // Set up the data source.\n            bindingSource1.DataSource = GetData(&quot;Select * From Products&quot;);\n            dataGridView1.DataSource = bindingSource1;\n\n            // Automatically resize the visible rows.\n            dataGridView1.AutoSizeRowsMode =\n                DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders;\n\n            // Set the DataGridView control&#39;s border.\n            dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n\n            // Put the cells in edit mode when user enters them.\n            dataGridView1.EditMode = DataGridViewEditMode.EditOnEnter;\n        }\n        catch (SqlException)\n        {\n            MessageBox.Show(&quot;To run this sample replace connection.ConnectionString&quot; +\n                &quot; with a valid connection string to a Northwind&quot; +\n                &quot; database accessible to your system.&quot;, &quot;ERROR&quot;,\n                MessageBoxButtons.OK, MessageBoxIcon.Exclamation);\n            System.Threading.Thread.CurrentThread.Abort();\n        }\n    }\n\n    private static DataTable GetData(string sqlCommand)\n    {\n        string connectionString = &quot;Integrated Security=SSPI;&quot; +\n            &quot;Persist Security Info=False;&quot; +\n            &quot;Initial Catalog=Northwind;Data Source=localhost&quot;;\n\n        SqlConnection northwindConnection = new SqlConnection(connectionString);\n\n        SqlCommand command = new SqlCommand(sqlCommand, northwindConnection);\n        SqlDataAdapter adapter = new SqlDataAdapter();\n        adapter.SelectCommand = command;\n\n        DataTable table = new DataTable();\n        table.Locale = System.Globalization.CultureInfo.InvariantCulture;\n        adapter.Fill(table);\n\n        return table;\n    }\n\n    [STAThreadAttribute()]\n    public static void Main()\n    {\n        Application.Run(new Form1());\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewSimpleBound#1\">Imports System.Data\nImports System.Data.SqlClient\nImports System.Windows.Forms\nImports System.Drawing\nImports System\n\nPublic Class Form1\n    Inherits System.Windows.Forms.Form\n\n    Private WithEvents dataGridView1 As New DataGridView()\n    Private bindingSource1 As New BindingSource()\n\n    Public Sub New()\n\n        Me.dataGridView1.Dock = DockStyle.Fill\n        Me.Controls.Add(Me.dataGridView1)\n        InitializeDataGridView()\n\n    End Sub\n\n    Private Sub InitializeDataGridView()\n        Try\n            &#39; Set up the DataGridView.\n            With Me.dataGridView1\n                &#39; Automatically generate the DataGridView columns.\n                .AutoGenerateColumns = True\n\n                &#39; Set up the data source.\n                bindingSource1.DataSource = GetData(&quot;Select * From Products&quot;)\n                .DataSource = bindingSource1\n\n                &#39; Automatically resize the visible rows.\n                .AutoSizeRowsMode = _\n                    DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders\n\n                &#39; Set the DataGridView control&#39;s border.\n                .BorderStyle = BorderStyle.Fixed3D\n\n                &#39; Put the cells in edit mode when user enters them.\n                .EditMode = DataGridViewEditMode.EditOnEnter\n            End With\n        Catch ex As SqlException\n            MessageBox.Show(&quot;To run this sample replace &quot; _\n                &amp; &quot;connection.ConnectionString with a valid connection string&quot; _\n                &amp; &quot;  to a Northwind database accessible to your system.&quot;, _\n                &quot;ERROR&quot;, MessageBoxButtons.OK, MessageBoxIcon.Exclamation)\n            System.Threading.Thread.CurrentThread.Abort()\n        End Try\n    End Sub\n\n    Private Shared Function GetData(ByVal sqlCommand As String) _\n        As DataTable\n\n        Dim connectionString As String = _\n            &quot;Integrated Security=SSPI;Persist Security Info=False;&quot; _\n            &amp; &quot;Initial Catalog=Northwind;Data Source=localhost&quot;\n\n        Dim northwindConnection As SqlConnection = _\n            New SqlConnection(connectionString)\n\n        Dim command As New SqlCommand(sqlCommand, northwindConnection)\n        Dim adapter As SqlDataAdapter = New SqlDataAdapter()\n        adapter.SelectCommand = command\n\n        Dim table As New DataTable\n        table.Locale = System.Globalization.CultureInfo.InvariantCulture\n        adapter.Fill(table)\n\n        Return table\n\n    End Function\n\n    &lt;STAThreadAttribute()&gt; _\n    Public Shared Sub Main()\n        Application.Run(New Form1)\n    End Sub\n\nEnd Class\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewSimpleBound#1\">#using &lt;System.Transactions.dll&gt;\n#using &lt;System.EnterpriseServices.dll&gt;\n#using &lt;System.Xml.dll&gt;\n#using &lt;System.Drawing.dll&gt;\n#using &lt;System.dll&gt;\n#using &lt;System.Windows.Forms.dll&gt;\n#using &lt;System.Data.dll&gt;\n\nusing namespace System;\nusing namespace System::Data;\nusing namespace System::Data::SqlClient;\nusing namespace System::Windows::Forms;\nusing namespace System::Drawing;\npublic ref class Form1: public System::Windows::Forms::Form\n{\npublic:\n   Form1()\n      : Form()\n   {\n      \n      //This call is required by the Windows Form Designer.\n      InitializeComponent();\n      InitializeDataGridView();\n      \n      //Add any initialization after the InitializeComponent() call\n   }\n\n\nprotected:\n\n   ~Form1()\n   {\n      if ( components != nullptr )\n      {\n         delete components;\n      }\n   }\n\nprivate:\n   System::Windows::Forms::DataGridView ^ dataGridView1;\n   System::Windows::Forms::BindingSource ^ bindingSource1;\n\n   //Required by the Windows Form Designer\n   System::ComponentModel::IContainer^ components;\n\n   //NOTE: The following procedure is required by the Windows Form Designer\n   //It can be modified using the Windows Form Designer.  \n   //Do not modify it using the code editor.\n\n   [System::Diagnostics::DebuggerNonUserCode]\n   void InitializeComponent()\n   {\n      this-&gt;dataGridView1 = gcnew System::Windows::Forms::DataGridView;\n      this-&gt;bindingSource1 = gcnew System::Windows::Forms::BindingSource;\n      this-&gt;SuspendLayout();\n\n      //\n      //DataGridView1\n      //\n      this-&gt;dataGridView1-&gt;Location = System::Drawing::Point( 96, 71 );\n      this-&gt;dataGridView1-&gt;Name = &quot;DataGridView1&quot;;\n      this-&gt;dataGridView1-&gt;Size = System::Drawing::Size( 321, 286 );\n      this-&gt;dataGridView1-&gt;TabIndex = 0;\n\n      //\n      //Form1\n      //\n      this-&gt;ClientSize = System::Drawing::Size( 518, 413 );\n      this-&gt;Controls-&gt;Add( this-&gt;dataGridView1 );\n      this-&gt;Name = &quot;Form1&quot;;\n      this-&gt;Text = &quot;Form1&quot;;\n      this-&gt;ResumeLayout( false );\n   }\n\ninternal:\n\n   static property Form1^ GetInstance \n   {\n      Form1^ get()\n      {\n         if ( m_DefaultInstance == nullptr || m_DefaultInstance-&gt;IsDisposed )\n         {\n            System::Threading::Monitor::Enter( m_SyncObject );\n            try\n            {\n               if ( m_DefaultInstance == nullptr || m_DefaultInstance-&gt;IsDisposed )\n               {\n                  m_DefaultInstance = gcnew Form1;\n               }\n            }\n            finally\n            {\n               System::Threading::Monitor::Exit( m_SyncObject );\n            }\n         }\n\n         return m_DefaultInstance;\n      }\n   }\n\nprivate:\n   static Form1^ m_DefaultInstance;\n   static Object^ m_SyncObject = gcnew Object;\n\n   void InitializeDataGridView()\n   {\n      try\n      {\n         // Set up the DataGridView.\n         dataGridView1-&gt;Dock = DockStyle::Fill;\n\n         // Automatically generate the DataGridView columns.\n         dataGridView1-&gt;AutoGenerateColumns = true;\n\n         // Set up the data source.\n         bindingSource1-&gt;DataSource = GetData( &quot;Select * From Products&quot; );\n         dataGridView1-&gt;DataSource = bindingSource1;\n\n         // Automatically resize the visible rows.\n         dataGridView1-&gt;AutoSizeRowsMode = DataGridViewAutoSizeRowsMode::DisplayedCellsExceptHeaders;\n\n         // Set the DataGridView control&#39;s border.\n         dataGridView1-&gt;BorderStyle = BorderStyle::Fixed3D;\n\n         // Put the cells in edit mode when user enters them.\n         dataGridView1-&gt;EditMode = DataGridViewEditMode::EditOnEnter;\n      }\n      catch ( SqlException^ ) \n      {\n         MessageBox::Show( &quot;To run this sample replace connection.ConnectionString&quot;\n         &quot; with a valid connection string to a Northwind&quot;\n         &quot; database accessible to your system.&quot;, &quot;ERROR&quot;, MessageBoxButtons::OK, MessageBoxIcon::Exclamation );\n         System::Threading::Thread::CurrentThread-&gt;Abort();\n      }\n      catch ( System::Exception^ ex ) \n      {\n         MessageBox::Show( ex-&gt;ToString() );\n      }\n   }\n\n\n   DataTable^ GetData( String^ sqlCommand )\n   {\n      String^ connectionString = &quot;Integrated Security=SSPI;Persist Security Info=False;&quot;\n      &quot;Initial Catalog=Northwind;Data Source= localhost&quot;;\n      SqlConnection^ northwindConnection = gcnew SqlConnection( connectionString );\n      SqlCommand^ command = gcnew SqlCommand( sqlCommand,northwindConnection );\n      SqlDataAdapter^ adapter = gcnew SqlDataAdapter;\n      adapter-&gt;SelectCommand = command;\n      DataTable^ table = gcnew DataTable;\n      adapter-&gt;Fill( table );\n      return table;\n   }\n};\n\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_EnableHeadersVisualStyles\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_EnableHeadersVisualStyles_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnableHeadersVisualStyles</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether row and column headers use the visual styles of the user&#39;s current theme if visual styles are enabled for the application.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool EnableHeadersVisualStyles { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if visual styles are enabled for the headers; otherwise, <code>false</code>. The default value is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can enable visual styles for your application by calling the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_EnableVisualStyles_\" data-linktype=\"relative-path\">EnableVisualStyles</a> method before calling the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_Run_\" data-linktype=\"relative-path\">Run</a> method. If EnableHeadersVisualStyles is set to <code>true</code>, all header cells except the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_TopLeftHeaderCell_\" data-linktype=\"relative-path\">TopLeftHeaderCell</a> are painted using the current theme.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to disable visual styles for the row and column headers in an application that has visual styles enabled. In this example, visual styles have been enabled for the application by calling the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_EnableVisualStyles_\" data-linktype=\"relative-path\">EnableVisualStyles</a> method in <code>Main</code>. However, visual styles will not be applied to the row and column headers because EnableHeadersVisualStyles is set to <code>false</code>. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewAdvancedBorderStyle#10\">        public CustomDataGridView()\n        {\n            this.RowTemplate = new DataGridViewCustomRow();\n            this.Columns.Add(new DataGridViewCustomColumn());\n            this.Columns.Add(new DataGridViewCustomColumn());\n            this.Columns.Add(new DataGridViewCustomColumn());\n            this.RowCount = 4;\n            this.EnableHeadersVisualStyles = false;\n            this.AutoSize = true;\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewAdvancedBorderStyle#10\">        Public Sub New()\n            With Me\n                .RowTemplate = New DataGridViewCustomRow()\n                .Columns.Add(New DataGridViewCustomColumn())\n                .Columns.Add(New DataGridViewCustomColumn())\n                .Columns.Add(New DataGridViewCustomColumn())\n                .RowCount = 4\n                .EnableHeadersVisualStyles = False\n                .AutoSize = True\n            End With\n        End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_FirstDisplayedCell\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_FirstDisplayedCell_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FirstDisplayedCell</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the first cell currently displayed in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>; typically, this cell is in the upper left corner.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewCell FirstDisplayedCell { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a></div>\r\n                  </div>\r\n                  <p>The first <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> currently displayed in the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified cell when setting this property is not in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified cell when setting this property has a <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.RowIndex*</span> or <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ColumnIndex*</span> property value of -1, indicating that it is a header cell or a shared cell.  </p>\n<p> -or-  </p>\n<p> The specified cell when setting this property has a <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.Visible*</span> property value of <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this property to determine which cell is in the first row and column currently displayed in the control. Typically, this is in the upper left corner, but for right-to-left languages, it is in the upper right corner. You can also set this property to scroll the control to the indicated cell.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to ensure that the current cell is visible after sorting. This code works only with an unbound <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. With a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control bound to an external data source, the current cell is not automatically persisted when sorting.  </p>\n<p> To run this example, paste the following code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code>. In C#, you must also connect the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Sorted\" data-linktype=\"relative-path\">Sorted</a>event to the event handler.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#150\">    private void dataGridView1_Sorted(object sender, EventArgs e)\n    {\n        this.dataGridView1.FirstDisplayedCell = this.dataGridView1.CurrentCell;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#150\">    Private Sub dataGridView1_Sorted(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles dataGridView1.Sorted\n\n        Me.dataGridView1.FirstDisplayedCell = Me.dataGridView1.CurrentCell\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_FirstDisplayedScrollingColumnHiddenWidth\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_FirstDisplayedScrollingColumnHiddenWidth_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FirstDisplayedScrollingColumnHiddenWidth</div>        \r\n          </div>\r\n    \r\n            <p>Gets the width of the portion of the column that is currently scrolled out of view..</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int FirstDisplayedScrollingColumnHiddenWidth { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The width of the portion of the column that is scrolled out of view.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_FirstDisplayedScrollingColumnIndex\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_FirstDisplayedScrollingColumnIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FirstDisplayedScrollingColumnIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the index of the column that is the first column displayed on the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int FirstDisplayedScrollingColumnIndex { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of the column that is the first column displayed on the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is less than 0 or greater than the number of columns in the control minus 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property indicates a column with a <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.Visible*</span> property value of <code>false</code>.  </p>\n<p> -or-  </p>\n<p> The specified value when setting this property indicates a column with a <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.Frozen*</span> property value of <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_FirstDisplayedScrollingRowIndex\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_FirstDisplayedScrollingRowIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FirstDisplayedScrollingRowIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the index of the row that is the first row displayed on the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int FirstDisplayedScrollingRowIndex { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of the row that is the first row displayed on the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is less than 0 or greater than the number of rows in the control minus 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property indicates a row with a <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.Visible*</span> property value of <code>false</code>.  </p>\n<p> -or-  </p>\n<p> The specified value when setting this property indicates a column with a <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.Frozen*</span> property value of <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Setting this property raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Scroll\" data-linktype=\"relative-path\">Scroll</a> event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_Font\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_Font_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Font</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the font of the text displayed by the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Drawing.Font Font { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> to apply to the text displayed by the control. The default is the value of the <span class=\"xref\">stem.Windows.Forms.Control.DefaultFont*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Font_\" data-linktype=\"relative-path\">Font</a> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> will have the same <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColor_\" data-linktype=\"relative-path\">BackColor</a> as its parent <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> by default. For more information about ambient properties, see the <a class=\"xref\" href=\"system.windows.forms.ambientproperties\" data-linktype=\"relative-path\">AmbientProperties</a> class or the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class overview.  </p>\n<p> Because the <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Font_\" data-linktype=\"relative-path\">Font</a> property a new <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> object. However, you can base the new font on the existing font.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control uses the value of the Font property as the default value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_Font_\" data-linktype=\"relative-path\">Font</a> properties of <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> objects returned by the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">ColumnHeadersDefaultCellStyle</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">RowHeadersDefaultCellStyle</a> properties. Changing the Font value automatically updates the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">ColumnHeadersDefaultCellStyle</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">RowHeadersDefaultCellStyle</a> properties, changing the font for any cell that inherits the value. Header cells override the value by default, and you can override the value for specific rows, columns, and cells. For more information about cell style inheritance, see <a href=\"../Topic/Cell%20Styles%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Cell Styles in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this property. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Create%20an%20Unbound%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Create an Unbound Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewSimpleUnbound#30\">    private void SetupDataGridView()\n    {\n        this.Controls.Add(songsDataGridView);\n\n        songsDataGridView.ColumnCount = 5;\n\n        songsDataGridView.ColumnHeadersDefaultCellStyle.BackColor = Color.Navy;\n        songsDataGridView.ColumnHeadersDefaultCellStyle.ForeColor = Color.White;\n        songsDataGridView.ColumnHeadersDefaultCellStyle.Font =\n            new Font(songsDataGridView.Font, FontStyle.Bold);\n\n        songsDataGridView.Name = &quot;songsDataGridView&quot;;\n        songsDataGridView.Location = new Point(8, 8);\n        songsDataGridView.Size = new Size(500, 250);\n        songsDataGridView.AutoSizeRowsMode =\n            DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders;\n        songsDataGridView.ColumnHeadersBorderStyle =\n            DataGridViewHeaderBorderStyle.Single;\n        songsDataGridView.CellBorderStyle = DataGridViewCellBorderStyle.Single;\n        songsDataGridView.GridColor = Color.Black;\n        songsDataGridView.RowHeadersVisible = false;\n\n        songsDataGridView.Columns[0].Name = &quot;Release Date&quot;;\n        songsDataGridView.Columns[1].Name = &quot;Track&quot;;\n        songsDataGridView.Columns[2].Name = &quot;Title&quot;;\n        songsDataGridView.Columns[3].Name = &quot;Artist&quot;;\n        songsDataGridView.Columns[4].Name = &quot;Album&quot;;\n        songsDataGridView.Columns[4].DefaultCellStyle.Font =\n            new Font(songsDataGridView.DefaultCellStyle.Font, FontStyle.Italic);\n\n        songsDataGridView.SelectionMode =\n            DataGridViewSelectionMode.FullRowSelect;\n        songsDataGridView.MultiSelect = false;\n        songsDataGridView.Dock = DockStyle.Fill;\n\n        songsDataGridView.CellFormatting += new\n            DataGridViewCellFormattingEventHandler(\n            songsDataGridView_CellFormatting);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewSimpleUnbound#30\">    Private Sub SetupDataGridView()\n\n        Me.Controls.Add(songsDataGridView)\n\n        songsDataGridView.ColumnCount = 5\n        With songsDataGridView.ColumnHeadersDefaultCellStyle\n            .BackColor = Color.Navy\n            .ForeColor = Color.White\n            .Font = New Font(songsDataGridView.Font, FontStyle.Bold)\n        End With\n\n        With songsDataGridView\n            .Name = &quot;songsDataGridView&quot;\n            .Location = New Point(8, 8)\n            .Size = New Size(500, 250)\n            .AutoSizeRowsMode = _\n                DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders\n            .ColumnHeadersBorderStyle = DataGridViewHeaderBorderStyle.Single\n            .CellBorderStyle = DataGridViewCellBorderStyle.Single\n            .GridColor = Color.Black\n            .RowHeadersVisible = False\n\n            .Columns(0).Name = &quot;Release Date&quot;\n            .Columns(1).Name = &quot;Track&quot;\n            .Columns(2).Name = &quot;Title&quot;\n            .Columns(3).Name = &quot;Artist&quot;\n            .Columns(4).Name = &quot;Album&quot;\n            .Columns(4).DefaultCellStyle.Font = _\n                New Font(Me.songsDataGridView.DefaultCellStyle.Font, FontStyle.Italic)\n\n            .SelectionMode = DataGridViewSelectionMode.FullRowSelect\n            .MultiSelect = False\n            .Dock = DockStyle.Fill\n        End With\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ForeColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ForeColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ForeColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the foreground color of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Drawing.Color ForeColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> that represents the foreground color of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. The default is the value of the <span class=\"xref\">stem.Windows.Forms.Control.DefaultForeColor*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> property is an ambient property. An ambient property is a control property that, if not set, is retrieved from the parent control. For example, a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> will have the same <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BackColor_\" data-linktype=\"relative-path\">BackColor</a> as its parent <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> by default. For more information about ambient properties, see the <a class=\"xref\" href=\"system.windows.forms.ambientproperties\" data-linktype=\"relative-path\">AmbientProperties</a> class or the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> class overview.  </p>\n<p> Because the <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Font_\" data-linktype=\"relative-path\">Font</a> property a new <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a> object. However, you can base the new font on the existing font.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control uses the value of the ForeColor property as the default value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> property of <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> returned by the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property. Changing the ForeColor value automatically updates the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property, changing the foreground text color for any cell that inherits the value. Header cells override the value by default, and you can override the value for specific rows, columns, and cells. For more information about cell style inheritance, see <a href=\"../Topic/Cell%20Styles%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Cell Styles in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_GridColor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_GridColor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GridColor</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the color of the grid lines separating the cells of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Color GridColor { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.color\" data-linktype=\"relative-path\">Color</a> or <a class=\"xref\" href=\"system.drawing.systemcolors\" data-linktype=\"relative-path\">SystemColors</a> that represents the color of the grid lines. The default is <a class=\"xref\" href=\"system.drawing.knowncolor\" data-linktype=\"relative-path\">KnownColor</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is <a class=\"xref\" href=\"system.drawing.color#System_Drawing_Color_Empty\" data-linktype=\"relative-path\">Empty</a>.  </p>\n<p> -or-  </p>\n<p> The specified value when setting this property has a <span class=\"xref\">stem.Drawing.Color.A*</span> property value that is less that 255.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can set the GridColor property to any color when you use a single border; with other types of borders, the colors are specified by the operating system. If visual styles are enabled for the application through the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_EnableVisualStyles_\" data-linktype=\"relative-path\">EnableVisualStyles</a> method, the GridColor property is ignored, and the current theme&#39;s colors are used.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to set the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">ColumnHeadersDefaultCellStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeRowsMode_\" data-linktype=\"relative-path\">AutoSizeRowsMode</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersBorderStyle_\" data-linktype=\"relative-path\">ColumnHeadersBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBorderStyle_\" data-linktype=\"relative-path\">CellBorderStyle</a>, GridColor, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_BackgroundColor_\" data-linktype=\"relative-path\">BackgroundColor</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersVisible_\" data-linktype=\"relative-path\">RowHeadersVisible</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnCount_\" data-linktype=\"relative-path\">ColumnCount</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_MultiSelect_\" data-linktype=\"relative-path\">MultiSelect</a> properties. In addition, the code example demonstrates how to set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Name_\" data-linktype=\"relative-path\">Name</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> properties. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code>, and then call the <code>SetUpDataGridView</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler. Ensure all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewUnbound#5\">    Private Sub SetUpDataGridView()\n\n        Me.Controls.Add(dataGridView1)\n        dataGridView1.ColumnCount = 5\n\n        With dataGridView1.ColumnHeadersDefaultCellStyle\n            .BackColor = Color.Navy\n            .ForeColor = Color.White\n            .Font = New Font(dataGridView1.Font, FontStyle.Bold)\n        End With\n\n        With dataGridView1\n            .EditMode = DataGridViewEditMode.EditOnEnter\n            .Name = &quot;dataGridView1&quot;\n            .Location = New Point(8, 8)\n            .Size = New Size(500, 300)\n            .AutoSizeRowsMode = _\n                DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders\n            .ColumnHeadersBorderStyle = _\n                DataGridViewHeaderBorderStyle.Raised\n            .CellBorderStyle = _\n                DataGridViewCellBorderStyle.Single\n            .GridColor = SystemColors.ActiveBorder\n            .RowHeadersVisible = False\n\n            .Columns(0).Name = &quot;Release Date&quot;\n            .Columns(1).Name = &quot;Track&quot;\n            .Columns(1).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter\n            .Columns(2).Name = &quot;Title&quot;\n            .Columns(3).Name = &quot;Artist&quot;\n            .Columns(4).Name = &quot;Album&quot;\n\n            &#39; Make the font italic for row four.\n            .Columns(4).DefaultCellStyle.Font = _\n                New Font(Control.DefaultFont, _\n                    FontStyle.Italic)\n\n            .SelectionMode = _\n                DataGridViewSelectionMode.FullRowSelect\n            .MultiSelect = False\n\n            .BackgroundColor = Color.Honeydew\n\n            .Dock = DockStyle.Fill\n        End With\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewUnbound#5\">   void SetUpDataGridView()\n   {\n      this-&gt;Controls-&gt;Add( dataGridView1 );\n      dataGridView1-&gt;ColumnCount = 5;\n      DataGridViewCellStyle^ style = dataGridView1-&gt;ColumnHeadersDefaultCellStyle;\n      style-&gt;BackColor = Color::Navy;\n      style-&gt;ForeColor = Color::White;\n      style-&gt;Font = gcnew System::Drawing::Font( dataGridView1-&gt;Font,FontStyle::Bold );\n      dataGridView1-&gt;EditMode = DataGridViewEditMode::EditOnEnter;\n      dataGridView1-&gt;Name = &quot;dataGridView1&quot;;\n      dataGridView1-&gt;Location = Point(8,8);\n      dataGridView1-&gt;Size = System::Drawing::Size( 500, 300 );\n      dataGridView1-&gt;AutoSizeRowsMode = DataGridViewAutoSizeRowsMode::DisplayedCellsExceptHeaders;\n      dataGridView1-&gt;ColumnHeadersBorderStyle = DataGridViewHeaderBorderStyle::Raised;\n      dataGridView1-&gt;CellBorderStyle = DataGridViewCellBorderStyle::Single;\n      dataGridView1-&gt;GridColor = SystemColors::ActiveBorder;\n      dataGridView1-&gt;RowHeadersVisible = false;\n      dataGridView1-&gt;Columns[ 0 ]-&gt;Name = &quot;Release Date&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;Name = &quot;Track&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;DefaultCellStyle-&gt;Alignment = DataGridViewContentAlignment::MiddleCenter;\n      dataGridView1-&gt;Columns[ 2 ]-&gt;Name = &quot;Title&quot;;\n      dataGridView1-&gt;Columns[ 3 ]-&gt;Name = &quot;Artist&quot;;\n      dataGridView1-&gt;Columns[ 4 ]-&gt;Name = &quot;Album&quot;;\n\n      // Make the font italic for row four.\n      dataGridView1-&gt;Columns[ 4 ]-&gt;DefaultCellStyle-&gt;Font = gcnew System::Drawing::Font( DataGridView::DefaultFont,FontStyle::Italic );\n      dataGridView1-&gt;SelectionMode = DataGridViewSelectionMode::FullRowSelect;\n      dataGridView1-&gt;MultiSelect = false;\n      dataGridView1-&gt;BackgroundColor = Color::Honeydew;\n      dataGridView1-&gt;Dock = DockStyle::Fill;\n      dataGridView1-&gt;CellFormatting += gcnew DataGridViewCellFormattingEventHandler( this, &amp;Form1::dataGridView1_CellFormatting );\n      dataGridView1-&gt;CellParsing += gcnew DataGridViewCellParsingEventHandler( this, &amp;Form1::dataGridView1_CellParsing );\n      addNewRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::addNewRowButton_Click );\n      deleteRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::deleteRowButton_Click );\n      ledgerStyleButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::ledgerStyleButton_Click );\n      dataGridView1-&gt;CellValidating += gcnew DataGridViewCellValidatingEventHandler( this, &amp;Form1::dataGridView1_CellValidating );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewUnbound#5\">    private void SetUpDataGridView()\n    {\n        this.Controls.Add(dataGridView1);\n        dataGridView1.ColumnCount = 5;\n        DataGridViewCellStyle style = \n            dataGridView1.ColumnHeadersDefaultCellStyle;\n        style.BackColor = Color.Navy;\n        style.ForeColor = Color.White;\n        style.Font = new Font(dataGridView1.Font, FontStyle.Bold);\n\n        dataGridView1.EditMode = DataGridViewEditMode.EditOnEnter;\n        dataGridView1.Name = &quot;dataGridView1&quot;;\n        dataGridView1.Location = new Point(8, 8);\n        dataGridView1.Size = new Size(500, 300);\n        dataGridView1.AutoSizeRowsMode = \n            DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders;\n        dataGridView1.ColumnHeadersBorderStyle = \n            DataGridViewHeaderBorderStyle.Raised;\n        dataGridView1.CellBorderStyle = DataGridViewCellBorderStyle.Single;\n        dataGridView1.GridColor = SystemColors.ActiveBorder;\n        dataGridView1.RowHeadersVisible = false;\n\n        dataGridView1.Columns[0].Name = &quot;Release Date&quot;;\n        dataGridView1.Columns[1].Name = &quot;Track&quot;;\n        dataGridView1.Columns[1].DefaultCellStyle.Alignment = \n            DataGridViewContentAlignment.MiddleCenter;\n        dataGridView1.Columns[2].Name = &quot;Title&quot;;\n        dataGridView1.Columns[3].Name = &quot;Artist&quot;;\n        dataGridView1.Columns[4].Name = &quot;Album&quot;;\n\n        // Make the font italic for row four.\n        dataGridView1.Columns[4].DefaultCellStyle.Font = new Font(DataGridView.DefaultFont, FontStyle.Italic);\n\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n\n        dataGridView1.BackgroundColor = Color.Honeydew;\n\n        dataGridView1.Dock = DockStyle.Fill;\n\n        dataGridView1.CellFormatting += new DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n        dataGridView1.CellParsing += new DataGridViewCellParsingEventHandler(dataGridView1_CellParsing);\n        addNewRowButton.Click += new EventHandler(addNewRowButton_Click);\n        deleteRowButton.Click += new EventHandler(deleteRowButton_Click);\n        ledgerStyleButton.Click += new EventHandler(ledgerStyleButton_Click);\n        dataGridView1.CellValidating += new DataGridViewCellValidatingEventHandler(dataGridView1_CellValidating);\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_HorizontalScrollBar\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_HorizontalScrollBar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HorizontalScrollBar</div>        \r\n          </div>\r\n    \r\n            <p>Gets the horizontal scroll bar of the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Windows.Forms.ScrollBar HorizontalScrollBar { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.scrollbar\" data-linktype=\"relative-path\">ScrollBar</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.scrollbar\" data-linktype=\"relative-path\">ScrollBar</a> representing the horizontal scroll bar.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_HorizontalScrollingOffset\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_HorizontalScrollingOffset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HorizontalScrollingOffset</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the number of pixels by which the control is scrolled horizontally.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int HorizontalScrollingOffset { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of pixels by which the control is scrolled horizontally.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is less than 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this property. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRowPainting#20\">    &#39; Paints the custom selection background for selected rows.\n    Sub dataGridView1_RowPrePaint(ByVal sender As Object, _\n        ByVal e As DataGridViewRowPrePaintEventArgs) _\n        Handles dataGridView1.RowPrePaint\n\n        &#39; Do not automatically paint the focus rectangle.\n        e.PaintParts = e.PaintParts And Not DataGridViewPaintParts.Focus\n\n        &#39; Determine whether the cell should be painted with the \n        &#39; custom selection background.\n        If (e.State And DataGridViewElementStates.Selected) = _\n            DataGridViewElementStates.Selected Then\n\n            &#39; Calculate the bounds of the row.\n            Dim rowBounds As New Rectangle( _\n                Me.dataGridView1.RowHeadersWidth, e.RowBounds.Top, _\n                Me.dataGridView1.Columns.GetColumnsWidth( _\n                DataGridViewElementStates.Visible) - _\n                Me.dataGridView1.HorizontalScrollingOffset + 1, _\n                e.RowBounds.Height)\n\n            &#39; Paint the custom selection background.\n            Dim backbrush As New _\n                System.Drawing.Drawing2D.LinearGradientBrush(rowBounds, _\n                Me.dataGridView1.DefaultCellStyle.SelectionBackColor, _\n                e.InheritedRowStyle.ForeColor, _\n                System.Drawing.Drawing2D.LinearGradientMode.Horizontal)\n            Try\n                e.Graphics.FillRectangle(backbrush, rowBounds)\n            Finally\n                backbrush.Dispose()\n            End Try\n        End If\n\n    End Sub &#39;dataGridView1_RowPrePaint\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRowPainting#20\">    // Paints the custom selection background for selected rows.\n    void dataGridView1_RowPrePaint(object sender,\n            DataGridViewRowPrePaintEventArgs e)\n    {\n        // Do not automatically paint the focus rectangle.\n        e.PaintParts &amp;= ~DataGridViewPaintParts.Focus;\n\n        // Determine whether the cell should be painted\n        // with the custom selection background.\n        if ((e.State &amp; DataGridViewElementStates.Selected) ==\n                    DataGridViewElementStates.Selected)\n        {\n            // Calculate the bounds of the row.\n            Rectangle rowBounds = new Rectangle(\n                this.dataGridView1.RowHeadersWidth, e.RowBounds.Top,\n                this.dataGridView1.Columns.GetColumnsWidth(\n                    DataGridViewElementStates.Visible) -\n                this.dataGridView1.HorizontalScrollingOffset + 1,\n                e.RowBounds.Height);\n\n            // Paint the custom selection background.\n            using (Brush backbrush =\n                new System.Drawing.Drawing2D.LinearGradientBrush(rowBounds,\n                    this.dataGridView1.DefaultCellStyle.SelectionBackColor,\n                    e.InheritedRowStyle.ForeColor,\n                    System.Drawing.Drawing2D.LinearGradientMode.Horizontal))\n            {\n                e.Graphics.FillRectangle(backbrush, rowBounds);\n            }\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_IsCurrentCellDirty\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_IsCurrentCellDirty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsCurrentCellDirty</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the current cell has uncommitted changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsCurrentCellDirty { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current cell has uncommitted changes; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is not bound to data, the cell edit is considered committed when the user moves to another cell.  </p>\n<p> If row headers are visible, a pencil glyph is present in the header for the row that contains a cell with uncommitted changes.  </p>\n<p> If IsCurrentCellDirty is <code>true</code> and the current cell hosts an editing control, you can retrieve it through the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EditingControl_\" data-linktype=\"relative-path\">EditingControl</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the IsCurrentCellDirty property to determine whether to commit a cell value and raise the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueChanged\" data-linktype=\"relative-path\">CellValueChanged</a> event from a handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCellDirtyStateChanged\" data-linktype=\"relative-path\">CurrentCellDirtyStateChanged</a> event. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Disable%20Buttons%20in%20a%20Button%20Column%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Disable Buttons in a Button Column in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.DisabledButtons#5\">    &#39; This event handler manually raises the CellValueChanged event\n    &#39; by calling the CommitEdit method.\n    Sub dataGridView1_CurrentCellDirtyStateChanged( _\n        ByVal sender As Object, ByVal e As EventArgs) _\n        Handles dataGridView1.CurrentCellDirtyStateChanged\n\n        If dataGridView1.IsCurrentCellDirty Then\n            dataGridView1.CommitEdit(DataGridViewDataErrorContexts.Commit)\n        End If\n    End Sub\n\n    &#39; If a check box cell is clicked, this event handler disables  \n    &#39; or enables the button in the same row as the clicked cell.\n    Public Sub dataGridView1_CellValueChanged(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellValueChanged\n\n        If dataGridView1.Columns(e.ColumnIndex).Name = &quot;CheckBoxes&quot; Then\n            Dim buttonCell As DataGridViewDisableButtonCell = _\n                CType(dataGridView1.Rows(e.RowIndex).Cells(&quot;Buttons&quot;), _\n                DataGridViewDisableButtonCell)\n\n            Dim checkCell As DataGridViewCheckBoxCell = _\n                CType(dataGridView1.Rows(e.RowIndex).Cells(&quot;CheckBoxes&quot;), _\n                DataGridViewCheckBoxCell)\n            buttonCell.Enabled = Not CType(checkCell.Value, [Boolean])\n\n            dataGridView1.Invalidate()\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.DisabledButtons#5\">    // This event handler manually raises the CellValueChanged event\n    // by calling the CommitEdit method.\n    void dataGridView1_CurrentCellDirtyStateChanged(object sender,\n        EventArgs e)\n    {\n        if (dataGridView1.IsCurrentCellDirty)\n        {\n            dataGridView1.CommitEdit(DataGridViewDataErrorContexts.Commit);\n        }\n    }\n\n    // If a check box cell is clicked, this event handler disables  \n    // or enables the button in the same row as the clicked cell.\n    public void dataGridView1_CellValueChanged(object sender,\n        DataGridViewCellEventArgs e)\n    {\n        if (dataGridView1.Columns[e.ColumnIndex].Name == &quot;CheckBoxes&quot;)\n        {\n            DataGridViewDisableButtonCell buttonCell =\n                (DataGridViewDisableButtonCell)dataGridView1.\n                Rows[e.RowIndex].Cells[&quot;Buttons&quot;];\n\n            DataGridViewCheckBoxCell checkCell =\n                (DataGridViewCheckBoxCell)dataGridView1.\n                Rows[e.RowIndex].Cells[&quot;CheckBoxes&quot;];\n            buttonCell.Enabled = !(Boolean)checkCell.Value;\n\n            dataGridView1.Invalidate();\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_IsCurrentCellInEditMode\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_IsCurrentCellInEditMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsCurrentCellInEditMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the currently active cell is being edited.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsCurrentCellInEditMode { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current cell is being edited; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell\" data-linktype=\"relative-path\">DataGridViewCheckBoxCell</a> that has focus is always in edit mode. If the current cell hosts an editing control and IsCurrentCellInEditMode is <code>true</code>, you can retrieve the editing control through the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EditingControl_\" data-linktype=\"relative-path\">EditingControl</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this property. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView._Virtual#10\">    #region &quot;data store maintance&quot;\n    const int initialValue = -1;\n\n    private void dataGridView1_CellValueNeeded(object sender,\n        DataGridViewCellValueEventArgs e)\n    {\n        if (store.ContainsKey(e.RowIndex))\n        {\n            // Use the store if the e value has been modified \n            // and stored.            \n            e.Value = store[e.RowIndex];\n        }\n        else if (newRowNeeded &amp;&amp; e.RowIndex == numberOfRows)\n        {\n            if (dataGridView1.IsCurrentCellInEditMode)\n            {\n                e.Value = initialValue;\n            }\n            else\n            {\n                // Show a blank value if the cursor is just resting\n                // on the last row.\n                e.Value = String.Empty;\n            }\n        }\n        else\n        {\n            e.Value = e.RowIndex;\n        }\n    }\n\n    private void dataGridView1_CellValuePushed(object sender,\n        DataGridViewCellValueEventArgs e)\n    {\n        store.Add(e.RowIndex, int.Parse(e.Value.ToString()));\n    }\n    #endregion\n\n    private Dictionary&lt;int, int&gt; store = new Dictionary&lt;int, int&gt;();\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView._Virtual#10\">#pragma region Data store maintance\n\n    void VirtualConnector::dataGridView1_CellValueNeeded\n        (Object^ sender, DataGridViewCellValueEventArgs^ e)\n    {\n        if (store-&gt;ContainsKey(e-&gt;RowIndex))\n        {\n            // Use the store if the e value has been modified \n            // and stored.            \n            e-&gt;Value = gcnew Int32(store-&gt;default[e-&gt;RowIndex]); \n        }\n        else if (newRowNeeded &amp;&amp; e-&gt;RowIndex == numberOfRows)\n        {\n            if (dataGridView1-&gt;IsCurrentCellInEditMode)\n            {\n                e-&gt;Value = initialValue;\n            }\n            else\n            {\n                // Show a blank e if the cursor is just loitering\n                // over(the) last row.\n                e-&gt;Value = String::Empty;\n            }\n        }\n        else\n        {\n            e-&gt;Value = e-&gt;RowIndex;\n        }\n    }\n\n    void VirtualConnector::dataGridView1_CellValuePushed\n        (Object^ sender, DataGridViewCellValueEventArgs^ e)\n    {\n        String^ value = e-&gt;Value-&gt;ToString();\n        store[e-&gt;RowIndex] = Int32::Parse(value, \n            CultureInfo::CurrentCulture);\n    }\n#pragma endregion\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView._Virtual#10\">#Region &quot;data store maintance&quot;\n    Const initialValue As Integer = -1\n\n    Private Sub dataGridView1_CellValueNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValueNeeded\n\n        If store.ContainsKey(e.RowIndex) Then\n            &#39; Use the store if the e value has been modified \n            &#39; and stored.\n            e.Value = store(e.RowIndex)\n        ElseIf newRowNeeded AndAlso e.RowIndex = numberOfRows Then\n            If dataGridView1.IsCurrentCellInEditMode Then\n                e.Value = initialValue\n            Else\n                &#39; Show a blank value if the cursor is just resting\n                &#39; on the last row.\n                e.Value = String.Empty\n            End If\n        Else\n            e.Value = e.RowIndex\n        End If\n    End Sub\n\n    Private Sub dataGridView1_CellValuePushed(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValuePushed\n\n        store.Add(e.RowIndex, CInt(e.Value))\n\n    End Sub\n#End Region\n\n    Dim store As System.Collections.Generic.Dictionary(Of Integer, Integer) = _\n        New Dictionary(Of Integer, Integer)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_IsCurrentRowDirty\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_IsCurrentRowDirty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsCurrentRowDirty</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the current row has uncommitted changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsCurrentRowDirty { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current row has uncommitted changes; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property returns <code>true</code> when the pencil glyph is displayed in the row. By default, the IsCurrentRowDirty property will always equal the value of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_IsCurrentCellDirty_\" data-linktype=\"relative-path\">IsCurrentCellDirty</a> property, unless the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is bound to a data source that supports editing, or virtual mode has been implemented to use row-level commit scope. In these cases, the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> will evaluate this property at the row level.  </p>\n<p> When the user navigates away from the row, the control commits all row changes. The user can also press CTRL+ENTER to commit row changes without leaving the row. To commit row changes programmatically, call the form&#39;s <a class=\"xref\" href=\"system.windows.forms.containercontrol#System_Windows_Forms_ContainerControl_Validate_\" data-linktype=\"relative-path\">Validate</a> method. If your data source is a <a class=\"xref\" href=\"system.windows.forms.bindingsource\" data-linktype=\"relative-path\">BindingSource</a>, you can also call<a class=\"xref\" href=\"system.windows.forms.bindingsource#System_Windows_Forms_BindingSource_EndEdit_\" data-linktype=\"relative-path\">EndEdit</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_Item_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Provides an indexer to get or set the cell located at the intersection of the column and row with the specified indexes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewCell this[int columnIndex, int rowIndex] { get; set; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the column containing the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row containing the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> at the specified location.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndex</code> is less than 0 or greater than the number of columns in the control minus 1.  </p>\n<p> -or-  </p>\n<p> <code>rowIndex</code> is less than 0 or greater than the number of rows in the control minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This indexer is an alternative to accessing cells through the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_Cells_\" data-linktype=\"relative-path\">Cells</a> collection of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Rows_\" data-linktype=\"relative-path\">Rows</a> collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this indexer.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#230\">        // Retrieve the cell value for the cell at column 3, row 7.\n        String testValue1 = (String)dataGridView1[3, 7].Value;\n        \n        // Retrieve the cell value for the cell in the Name column at row 4.\n        String testValue2 = (String)dataGridView1[&quot;Name&quot;, 4].Value;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#230\">        &#39; Retrieve the cell value for the cell at column 3, row 7.\n        Dim testValue1 As String = CStr(dataGridView1(3, 7).Value)\n\n        &#39; Retrieve the cell value for the cell in the Name column at row 4.\n        Dim testValue2 As String = CStr(dataGridView1(&quot;Name&quot;, 4).Value)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_Item_System_String_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(String,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Provides an indexer to get or set the cell located at the intersection of the row with the specified index and the column with the specified name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewCell this[string columnName, int rowIndex] { get; set; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the column containing the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row containing the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> at the specified location.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This indexer is an alternative to accessing cells through the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_Cells_\" data-linktype=\"relative-path\">Cells</a> collection of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Rows_\" data-linktype=\"relative-path\">Rows</a> collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this indexer.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#230\">        // Retrieve the cell value for the cell at column 3, row 7.\n        String testValue1 = (String)dataGridView1[3, 7].Value;\n        \n        // Retrieve the cell value for the cell in the Name column at row 4.\n        String testValue2 = (String)dataGridView1[&quot;Name&quot;, 4].Value;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#230\">        &#39; Retrieve the cell value for the cell at column 3, row 7.\n        Dim testValue1 As String = CStr(dataGridView1(3, 7).Value)\n\n        &#39; Retrieve the cell value for the cell in the Name column at row 4.\n        Dim testValue2 As String = CStr(dataGridView1(&quot;Name&quot;, 4).Value)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_MultiSelect\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_MultiSelect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MultiSelect</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the user is allowed to select more than one cell, row, or column of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> at a time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool MultiSelect { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the user can select more than one cell, row, or column at a time; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the MultiSelect property is set to <code>true</code>, multiple elements (cells, rows, or columns) can be selected in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. To select multiple elements, the user can hold down the CTRL key while clicking the elements to select. Consecutive elements can be selected by clicking the first element to select and then, while holding down the SHIFT key, clicking the last element to select. The selection scope is based on the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a> property. For example, if <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a> is set to <a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewSelectionMode</a>, the user can select multiple columns.  </p>\n<p> You can use the MultiSelect property to allow a user to select multiple elements in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control and perform an operation on all the selected elements. For example, the user could select multiple cells and then right-click a selected cell to display a shortcut menu that displays a set of tasks to perform on the selected cells.  </p>\n<p> To determine which cells, rows, or columns are selected in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control, you can access the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectedCells_\" data-linktype=\"relative-path\">SelectedCells</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectedRows_\" data-linktype=\"relative-path\">SelectedRows</a>, or <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectedColumns_\" data-linktype=\"relative-path\">SelectedColumns</a> property. To determine the number of selected cells, call the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GetCellCount_\" data-linktype=\"relative-path\">GetCellCount</a> method with an argument value of <a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewElementStates</a>. Use the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection#System_Windows_Forms_DataGridViewRowCollection_GetRowCount_\" data-linktype=\"relative-path\">GetRowCount</a> method to retrieve the number of selected rows and the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumncollection#System_Windows_Forms_DataGridViewColumnCollection_GetColumnCount_\" data-linktype=\"relative-path\">GetColumnCount</a> method to retrieve the number of columns. These methods are more efficient than accessing the collections directly when working with large amounts of data. For more information, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the MultiSelect property. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code>, and then call the <code>SetUpDataGridView</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler. Ensure all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewUnbound#5\">    Private Sub SetUpDataGridView()\n\n        Me.Controls.Add(dataGridView1)\n        dataGridView1.ColumnCount = 5\n\n        With dataGridView1.ColumnHeadersDefaultCellStyle\n            .BackColor = Color.Navy\n            .ForeColor = Color.White\n            .Font = New Font(dataGridView1.Font, FontStyle.Bold)\n        End With\n\n        With dataGridView1\n            .EditMode = DataGridViewEditMode.EditOnEnter\n            .Name = &quot;dataGridView1&quot;\n            .Location = New Point(8, 8)\n            .Size = New Size(500, 300)\n            .AutoSizeRowsMode = _\n                DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders\n            .ColumnHeadersBorderStyle = _\n                DataGridViewHeaderBorderStyle.Raised\n            .CellBorderStyle = _\n                DataGridViewCellBorderStyle.Single\n            .GridColor = SystemColors.ActiveBorder\n            .RowHeadersVisible = False\n\n            .Columns(0).Name = &quot;Release Date&quot;\n            .Columns(1).Name = &quot;Track&quot;\n            .Columns(1).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter\n            .Columns(2).Name = &quot;Title&quot;\n            .Columns(3).Name = &quot;Artist&quot;\n            .Columns(4).Name = &quot;Album&quot;\n\n            &#39; Make the font italic for row four.\n            .Columns(4).DefaultCellStyle.Font = _\n                New Font(Control.DefaultFont, _\n                    FontStyle.Italic)\n\n            .SelectionMode = _\n                DataGridViewSelectionMode.FullRowSelect\n            .MultiSelect = False\n\n            .BackgroundColor = Color.Honeydew\n\n            .Dock = DockStyle.Fill\n        End With\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewUnbound#5\">   void SetUpDataGridView()\n   {\n      this-&gt;Controls-&gt;Add( dataGridView1 );\n      dataGridView1-&gt;ColumnCount = 5;\n      DataGridViewCellStyle^ style = dataGridView1-&gt;ColumnHeadersDefaultCellStyle;\n      style-&gt;BackColor = Color::Navy;\n      style-&gt;ForeColor = Color::White;\n      style-&gt;Font = gcnew System::Drawing::Font( dataGridView1-&gt;Font,FontStyle::Bold );\n      dataGridView1-&gt;EditMode = DataGridViewEditMode::EditOnEnter;\n      dataGridView1-&gt;Name = &quot;dataGridView1&quot;;\n      dataGridView1-&gt;Location = Point(8,8);\n      dataGridView1-&gt;Size = System::Drawing::Size( 500, 300 );\n      dataGridView1-&gt;AutoSizeRowsMode = DataGridViewAutoSizeRowsMode::DisplayedCellsExceptHeaders;\n      dataGridView1-&gt;ColumnHeadersBorderStyle = DataGridViewHeaderBorderStyle::Raised;\n      dataGridView1-&gt;CellBorderStyle = DataGridViewCellBorderStyle::Single;\n      dataGridView1-&gt;GridColor = SystemColors::ActiveBorder;\n      dataGridView1-&gt;RowHeadersVisible = false;\n      dataGridView1-&gt;Columns[ 0 ]-&gt;Name = &quot;Release Date&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;Name = &quot;Track&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;DefaultCellStyle-&gt;Alignment = DataGridViewContentAlignment::MiddleCenter;\n      dataGridView1-&gt;Columns[ 2 ]-&gt;Name = &quot;Title&quot;;\n      dataGridView1-&gt;Columns[ 3 ]-&gt;Name = &quot;Artist&quot;;\n      dataGridView1-&gt;Columns[ 4 ]-&gt;Name = &quot;Album&quot;;\n\n      // Make the font italic for row four.\n      dataGridView1-&gt;Columns[ 4 ]-&gt;DefaultCellStyle-&gt;Font = gcnew System::Drawing::Font( DataGridView::DefaultFont,FontStyle::Italic );\n      dataGridView1-&gt;SelectionMode = DataGridViewSelectionMode::FullRowSelect;\n      dataGridView1-&gt;MultiSelect = false;\n      dataGridView1-&gt;BackgroundColor = Color::Honeydew;\n      dataGridView1-&gt;Dock = DockStyle::Fill;\n      dataGridView1-&gt;CellFormatting += gcnew DataGridViewCellFormattingEventHandler( this, &amp;Form1::dataGridView1_CellFormatting );\n      dataGridView1-&gt;CellParsing += gcnew DataGridViewCellParsingEventHandler( this, &amp;Form1::dataGridView1_CellParsing );\n      addNewRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::addNewRowButton_Click );\n      deleteRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::deleteRowButton_Click );\n      ledgerStyleButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::ledgerStyleButton_Click );\n      dataGridView1-&gt;CellValidating += gcnew DataGridViewCellValidatingEventHandler( this, &amp;Form1::dataGridView1_CellValidating );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewUnbound#5\">    private void SetUpDataGridView()\n    {\n        this.Controls.Add(dataGridView1);\n        dataGridView1.ColumnCount = 5;\n        DataGridViewCellStyle style = \n            dataGridView1.ColumnHeadersDefaultCellStyle;\n        style.BackColor = Color.Navy;\n        style.ForeColor = Color.White;\n        style.Font = new Font(dataGridView1.Font, FontStyle.Bold);\n\n        dataGridView1.EditMode = DataGridViewEditMode.EditOnEnter;\n        dataGridView1.Name = &quot;dataGridView1&quot;;\n        dataGridView1.Location = new Point(8, 8);\n        dataGridView1.Size = new Size(500, 300);\n        dataGridView1.AutoSizeRowsMode = \n            DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders;\n        dataGridView1.ColumnHeadersBorderStyle = \n            DataGridViewHeaderBorderStyle.Raised;\n        dataGridView1.CellBorderStyle = DataGridViewCellBorderStyle.Single;\n        dataGridView1.GridColor = SystemColors.ActiveBorder;\n        dataGridView1.RowHeadersVisible = false;\n\n        dataGridView1.Columns[0].Name = &quot;Release Date&quot;;\n        dataGridView1.Columns[1].Name = &quot;Track&quot;;\n        dataGridView1.Columns[1].DefaultCellStyle.Alignment = \n            DataGridViewContentAlignment.MiddleCenter;\n        dataGridView1.Columns[2].Name = &quot;Title&quot;;\n        dataGridView1.Columns[3].Name = &quot;Artist&quot;;\n        dataGridView1.Columns[4].Name = &quot;Album&quot;;\n\n        // Make the font italic for row four.\n        dataGridView1.Columns[4].DefaultCellStyle.Font = new Font(DataGridView.DefaultFont, FontStyle.Italic);\n\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n\n        dataGridView1.BackgroundColor = Color.Honeydew;\n\n        dataGridView1.Dock = DockStyle.Fill;\n\n        dataGridView1.CellFormatting += new DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n        dataGridView1.CellParsing += new DataGridViewCellParsingEventHandler(dataGridView1_CellParsing);\n        addNewRowButton.Click += new EventHandler(addNewRowButton_Click);\n        deleteRowButton.Click += new EventHandler(deleteRowButton_Click);\n        ledgerStyleButton.Click += new EventHandler(ledgerStyleButton_Click);\n        dataGridView1.CellValidating += new DataGridViewCellValidatingEventHandler(dataGridView1_CellValidating);\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_NewRowIndex\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_NewRowIndex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NewRowIndex</div>        \r\n          </div>\r\n    \r\n            <p>Gets the index of the row for new records.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int NewRowIndex { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The index of the row for new records, or -1 if <span class=\"xref\">stem.Windows.Forms.DataGridView.AllowUserToAddRows*</span> is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Unless <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToAddRows_\" data-linktype=\"relative-path\">AllowUserToAddRows</a> is <code>false</code>, the value of this property is equal to the number of rows in the control minus 1.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_Padding\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_Padding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Padding</div>        \r\n          </div>\r\n    \r\n            <p>This property is not relevant for this control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.Padding Padding { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.padding\" data-linktype=\"relative-path\">Padding</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.padding\" data-linktype=\"relative-path\">Padding</a> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is not relevant for this control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ReadOnly\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ReadOnly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadOnly</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the user can edit the cells of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ReadOnly { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the user cannot edit the cells of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is <code>true</code>, the current cell is in edit mode, and the current cell contains changes that cannot be committed.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property would cause the control to enter edit mode, but initialization of the editing cell value failed and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>. The exception object can typically be cast to type <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A cell is read-only if the value of the ReadOnly property is <code>true</code> for the cell, the cell&#39;s row, the cell&#39;s column, or the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this property in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> class overview.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    &#39; Configures the appearance and behavior of a DataGridView control.\n    Private Sub InitializeDataGridView()\n\n        &#39; Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill\n        dataGridView1.BackgroundColor = Color.LightGray\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D\n\n        &#39; Set property values appropriate for read-only display and \n        &#39; limited interactivity. \n        dataGridView1.AllowUserToAddRows = False\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.AllowUserToOrderColumns = True\n        dataGridView1.ReadOnly = True\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect\n        dataGridView1.MultiSelect = False\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None\n        dataGridView1.AllowUserToResizeColumns = False\n        dataGridView1.ColumnHeadersHeightSizeMode = _\n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing\n        dataGridView1.AllowUserToResizeRows = False\n        dataGridView1.RowHeadersWidthSizeMode = _\n            DataGridViewRowHeadersWidthSizeMode.DisableResizing\n\n        &#39; Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black\n\n        &#39; Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        &#39; value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty\n\n        &#39; Set the background color for all rows and for alternating rows. \n        &#39; The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray\n\n        &#39; Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black\n\n        &#39; Set the Format property on the &quot;Last Prepared&quot; column to cause\n        &#39; the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns(&quot;Last Prepared&quot;).DefaultCellStyle.Format = &quot;y&quot;\n\n        &#39; Specify a larger font for the &quot;Ratings&quot; column. \n        Dim font As New Font( _\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold)\n        Try\n            dataGridView1.Columns(&quot;Rating&quot;).DefaultCellStyle.Font = font\n        Finally\n            font.Dispose()\n        End Try\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    // Configures the appearance and behavior of a DataGridView control.\n    private void InitializeDataGridView()\n    {\n        // Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill;\n        dataGridView1.BackgroundColor = Color.LightGray;\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n\n        // Set property values appropriate for read-only display and \n        // limited interactivity. \n        dataGridView1.AllowUserToAddRows = false;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.AllowUserToOrderColumns = true;\n        dataGridView1.ReadOnly = true;\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None;\n        dataGridView1.AllowUserToResizeColumns = false;\n        dataGridView1.ColumnHeadersHeightSizeMode = \n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing;\n        dataGridView1.AllowUserToResizeRows = false;\n        dataGridView1.RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode.DisableResizing;\n\n        // Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White;\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black;\n\n        // Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        // value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty;\n\n        // Set the background color for all rows and for alternating rows. \n        // The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray;\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray;\n\n        // Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White;\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black;\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black;\n\n        // Set the Format property on the &quot;Last Prepared&quot; column to cause\n        // the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns[&quot;Last Prepared&quot;].DefaultCellStyle.Format = &quot;y&quot;;\n\n        // Specify a larger font for the &quot;Ratings&quot; column. \n        using (Font font = new Font(\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold))\n        {\n            dataGridView1.Columns[&quot;Rating&quot;].DefaultCellStyle.Font = font;\n        }\n\n        // Attach a handler to the CellFormatting event.\n        dataGridView1.CellFormatting += new\n            DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowCount\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_RowCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowCount</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the number of rows displayed in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int RowCount { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of rows to display in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is less than 0.  </p>\n<p> -or-  </p>\n<p> The specified value is less than 1 and <span class=\"xref\">stem.Windows.Forms.DataGridView.AllowUserToAddRows*</span> is set to <code>true</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>When setting this property, the <span class=\"xref\">stem.Windows.Forms.DataGridView.DataSource*</span> property is set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If RowCount is set to a value less than the current value, rows will be removed from the end of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Rows_\" data-linktype=\"relative-path\">Rows</a> collection. If RowCount is set to a value greater than the current value, rows will be added to the end of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Rows_\" data-linktype=\"relative-path\">Rows</a> collection. The additional rows are based on the row specified in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowTemplate_\" data-linktype=\"relative-path\">RowTemplate</a> property.  </p>\n<p> If you set the RowCount property to 0, all rows will be removed from the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. This is equivalent to calling the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection#System_Windows_Forms_DataGridViewRowCollection_Clear_\" data-linktype=\"relative-path\">Clear</a> method.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToAddRows_\" data-linktype=\"relative-path\">AllowUserToAddRows</a> is <code>true</code>, you cannot set RowCount to 0. In this case, call the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection#System_Windows_Forms_DataGridViewRowCollection_Clear_\" data-linktype=\"relative-path\">Clear</a> method to remove all rows except the row for new records. Calling <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection#System_Windows_Forms_DataGridViewRowCollection_Clear_\" data-linktype=\"relative-path\">Clear</a> has the same result as setting RowCount to 1 in this case, but is much faster.  </p>\n</div>\n<p> The RowCount property can be used with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnCount_\" data-linktype=\"relative-path\">ColumnCount</a> property to create a simple <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> for displaying and editing text. If you set the RowCount property to a value greater than 0 for a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control without columns, a <a class=\"xref\" href=\"system.windows.forms.datagridviewtextboxcolumn\" data-linktype=\"relative-path\">DataGridViewTextBoxColumn</a> is added automatically.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the RowCount property. In this example, this property is used to track the number of entries in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"relative-path\">SelectionChanged</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewSelectionSum#10\">    private void UpdateLabelText()\n    {\n        int WithdrawalTotal = 0;\n        int DepositTotal = 0;\n        int SelectedCellTotal = 0;\n        int counter;\n\n        // Iterate through all the rows and sum up the appropriate columns.\n        for (counter = 0; counter &lt; (DataGridView1.Rows.Count);\n            counter++)\n        {\n            if (DataGridView1.Rows[counter].Cells[&quot;Withdrawals&quot;].Value\n                != null)\n            {\n                if (DataGridView1.Rows[counter].\n                    Cells[&quot;Withdrawals&quot;].Value.ToString().Length != 0)\n                {\n                    WithdrawalTotal += int.Parse(DataGridView1.Rows[counter].\n                        Cells[&quot;Withdrawals&quot;].Value.ToString());\n                }\n            }\n\n            if (DataGridView1.Rows[counter].Cells[&quot;Deposits&quot;].Value != null)\n            {\n                if (DataGridView1.Rows[counter]\n                    .Cells[&quot;Deposits&quot;].Value.ToString().Length != 0)\n                {\n                    DepositTotal += int.Parse(DataGridView1.Rows[counter]\n                        .Cells[&quot;Deposits&quot;].Value.ToString());\n                }\n            }\n        }\n\n        // Iterate through the SelectedCells collection and sum up the values.\n        for (counter = 0;\n            counter &lt; (DataGridView1.SelectedCells.Count); counter++)\n        {\n            if (DataGridView1.SelectedCells[counter].FormattedValueType ==\n                Type.GetType(&quot;System.String&quot;))\n            {\n                string value = null;\n\n                // If the cell contains a value that has not been commited,\n                // use the modified value.\n                if (DataGridView1.IsCurrentCellDirty == true)\n                {\n\n                    value = DataGridView1.SelectedCells[counter]\n                        .EditedFormattedValue.ToString();\n                }\n                else\n                {\n                    value = DataGridView1.SelectedCells[counter]\n                        .FormattedValue.ToString();\n                }\n                if (value != null)\n                {\n                    // Ignore cells in the Description column.\n                    if (DataGridView1.SelectedCells[counter].ColumnIndex !=\n                        DataGridView1.Columns[&quot;Description&quot;].Index)\n                    {\n                        if (value.Length != 0)\n                        {\n                            SelectedCellTotal += int.Parse(value);\n                        }\n                    }\n                }\n            }\n        }\n\n        // Set the labels to reflect the current state of the DataGridView.\n        Label1.Text = &quot;Withdrawals Total: &quot; + WithdrawalTotal.ToString();\n        Label2.Text = &quot;Deposits Total: &quot; + DepositTotal.ToString();\n        Label3.Text = &quot;Selected Cells Total: &quot; + SelectedCellTotal.ToString();\n        Label4.Text = &quot;Total entries: &quot; + DataGridView1.RowCount.ToString();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewSelectionSum#10\">    Private Sub UpdateLabelText()\n        Dim WithdrawalTotal As Integer = 0\n        Dim DepositTotal As Integer = 0\n        Dim SelectedCellTotal As Integer = 0\n        Dim counter As Integer\n\n        &#39; Iterate through all the rows and sum up the appropriate columns.\n        For counter = 0 To (DataGridView1.Rows.Count - 1)\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Withdrawals&quot;).Value Is Nothing Then\n\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Withdrawals&quot;).Value.ToString().Length = 0 Then\n\n                    WithdrawalTotal += _\n                        Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Withdrawals&quot;).Value.ToString())\n                End If\n            End If\n\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Deposits&quot;).Value Is Nothing Then\n\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Deposits&quot;).Value.ToString().Length = 0 Then\n\n                    DepositTotal += _\n                        Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Deposits&quot;).Value.ToString())\n                End If\n            End If\n        Next\n\n        &#39; Iterate through the SelectedCells collection and sum up the values.\n        For counter = 0 To (DataGridView1.SelectedCells.Count - 1)\n            If DataGridView1.SelectedCells(counter).FormattedValueType Is _\n            Type.GetType(&quot;System.String&quot;) Then\n\n                Dim value As String = Nothing\n\n                &#39; If the cell contains a value that has not been commited,\n                &#39; use the modified value.\n                If (DataGridView1.IsCurrentCellDirty = True) Then\n\n                    value = DataGridView1.SelectedCells(counter) _\n                        .EditedFormattedValue.ToString()\n                Else\n\n                    value = DataGridView1.SelectedCells(counter) _\n                        .FormattedValue.ToString()\n                End If\n\n                If value IsNot Nothing Then\n\n                    &#39; Ignore cells in the Description column.\n                    If Not DataGridView1.SelectedCells(counter).ColumnIndex = _\n                        DataGridView1.Columns(&quot;Description&quot;).Index Then\n\n                        If Not value.Length = 0 Then\n                            SelectedCellTotal += Integer.Parse(value)\n                        End If\n                    End If\n                End If\n            End If\n\n        Next\n\n        &#39; Set the labels to reflect the current state of the DataGridView.\n        Label1.Text = &quot;Withdrawals Total: &quot; &amp; WithdrawalTotal.ToString()\n        Label2.Text = &quot;Deposits Total: &quot; &amp; DepositTotal.ToString()\n        Label3.Text = &quot;Selected Cells Total: &quot; &amp; SelectedCellTotal.ToString()\n        Label4.Text = &quot;Total entries: &quot; &amp; DataGridView1.RowCount.ToString()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowHeadersBorderStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_RowHeadersBorderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeadersBorderStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the border style of the row header cells.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewHeaderBorderStyle RowHeadersBorderStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewheaderborderstyle\" data-linktype=\"relative-path\">DataGridViewHeaderBorderStyle</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewheaderborderstyle\" data-linktype=\"relative-path\">DataGridViewHeaderBorderStyle</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewheaderborderstyle\" data-linktype=\"relative-path\">DataGridViewHeaderBorderStyle</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is <a class=\"xref\" href=\"system.windows.forms.datagridviewheaderborderstyle\" data-linktype=\"relative-path\">DataGridViewHeaderBorderStyle</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the RowHeadersBorderStyle property is set to anything other than <a class=\"xref\" href=\"system.windows.forms.datagridviewheaderborderstyle\" data-linktype=\"relative-path\">DataGridViewHeaderBorderStyle</a>, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GridColor_\" data-linktype=\"relative-path\">GridColor</a> property must be a system color.  </p>\n<p> You cannot set this property to the <a class=\"xref\" href=\"system.windows.forms.datagridviewheaderborderstyle\" data-linktype=\"relative-path\">DataGridViewHeaderBorderStyle</a> value, which is a read-only value indicating that the border style has been customized through the use of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AdvancedRowHeadersBorderStyle_\" data-linktype=\"relative-path\">AdvancedRowHeadersBorderStyle</a> property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If visual styles are enabled for the application through the <a class=\"xref\" href=\"system.windows.forms.application#System_Windows_Forms_Application_EnableVisualStyles_\" data-linktype=\"relative-path\">EnableVisualStyles</a> method and the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EnableHeadersVisualStyles_\" data-linktype=\"relative-path\">EnableHeadersVisualStyles</a> property is <code>true</code>, the row headers are painted using the current theme. In this case, the value of the RowHeadersBorderStyle property is ignored for all row headers except the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_TopLeftHeaderCell_\" data-linktype=\"relative-path\">TopLeftHeaderCell</a>, to which the theme is not applied.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#030\">    private void SetBorderAndGridlineStyles()\n    {\n        this.dataGridView1.GridColor = Color.BlueViolet;\n        this.dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n        this.dataGridView1.CellBorderStyle =\n            DataGridViewCellBorderStyle.None;\n        this.dataGridView1.RowHeadersBorderStyle =\n            DataGridViewHeaderBorderStyle.Single;\n        this.dataGridView1.ColumnHeadersBorderStyle =\n            DataGridViewHeaderBorderStyle.Single;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#030\">    Private Sub SetBorderAndGridlineStyles()\n\n        With Me.dataGridView1\n            .GridColor = Color.BlueViolet\n            .BorderStyle = BorderStyle.Fixed3D\n            .CellBorderStyle = DataGridViewCellBorderStyle.None\n            .RowHeadersBorderStyle = _\n                DataGridViewHeaderBorderStyle.Single\n            .ColumnHeadersBorderStyle = _\n                DataGridViewHeaderBorderStyle.Single\n        End With\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowHeadersDefaultCellStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_RowHeadersDefaultCellStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeadersDefaultCellStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the default style applied to the row header cells.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewCellStyle RowHeadersDefaultCellStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> that represents the default style applied to the row header cells.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> returned by this property has the following initial property values.  </p>\n<table>\n<thead>\n<tr>\n<th>DataGridViewCellStyle property</th>\n<th>Default value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_BackColor_\" data-linktype=\"relative-path\">BackColor</a></td>\n<td>The value of the <a class=\"xref\" href=\"system.drawing.systembrushes#System_Drawing_SystemBrushes_Control_\" data-linktype=\"relative-path\">Control</a> property.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a></td>\n<td>The value of the <a class=\"xref\" href=\"system.drawing.systembrushes#System_Drawing_SystemBrushes_WindowText_\" data-linktype=\"relative-path\">WindowText</a> property.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_SelectionBackColor_\" data-linktype=\"relative-path\">SelectionBackColor</a></td>\n<td>The value of the <a class=\"xref\" href=\"system.drawing.systembrushes#System_Drawing_SystemBrushes_Highlight_\" data-linktype=\"relative-path\">Highlight</a> property.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_SelectionForeColor_\" data-linktype=\"relative-path\">SelectionForeColor</a></td>\n<td>The value of the <a class=\"xref\" href=\"system.drawing.systembrushes#System_Drawing_SystemBrushes_HighlightText_\" data-linktype=\"relative-path\">HighlightText</a> property.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_Font_\" data-linktype=\"relative-path\">Font</a></td>\n<td>The value of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Font_\" data-linktype=\"relative-path\">Font</a> property.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_Alignment_\" data-linktype=\"relative-path\">Alignment</a></td>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcontentalignment\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewContentAlignment</a></td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a></td>\n<td><a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewTriState</a></td>\n</tr>\n</tbody>\n</table>\n<p> These values automatically override the values set through the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property. To force row headers to inherit the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> values, you must set the values in the RowHeadersDefaultCellStyle object to the default values indicated for the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> class.  </p>\n<p> For more information about cell style inheritance, see <a href=\"../Topic/Cell%20Styles%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Cell Styles in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use this property in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> with custom colors. Note how the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_SelectionBackColor_\" data-linktype=\"relative-path\">SelectionBackColor</a> property is set to <a class=\"xref\" href=\"system.drawing.color#System_Drawing_Color_Empty\" data-linktype=\"relative-path\">System.Drawing.Color.Empty</a> so that the value is inherited from the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> object.  </p>\n<p> This example is part of a larger example provided in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> class overview.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    &#39; Configures the appearance and behavior of a DataGridView control.\n    Private Sub InitializeDataGridView()\n\n        &#39; Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill\n        dataGridView1.BackgroundColor = Color.LightGray\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D\n\n        &#39; Set property values appropriate for read-only display and \n        &#39; limited interactivity. \n        dataGridView1.AllowUserToAddRows = False\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.AllowUserToOrderColumns = True\n        dataGridView1.ReadOnly = True\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect\n        dataGridView1.MultiSelect = False\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None\n        dataGridView1.AllowUserToResizeColumns = False\n        dataGridView1.ColumnHeadersHeightSizeMode = _\n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing\n        dataGridView1.AllowUserToResizeRows = False\n        dataGridView1.RowHeadersWidthSizeMode = _\n            DataGridViewRowHeadersWidthSizeMode.DisableResizing\n\n        &#39; Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black\n\n        &#39; Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        &#39; value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty\n\n        &#39; Set the background color for all rows and for alternating rows. \n        &#39; The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray\n\n        &#39; Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black\n\n        &#39; Set the Format property on the &quot;Last Prepared&quot; column to cause\n        &#39; the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns(&quot;Last Prepared&quot;).DefaultCellStyle.Format = &quot;y&quot;\n\n        &#39; Specify a larger font for the &quot;Ratings&quot; column. \n        Dim font As New Font( _\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold)\n        Try\n            dataGridView1.Columns(&quot;Rating&quot;).DefaultCellStyle.Font = font\n        Finally\n            font.Dispose()\n        End Try\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    // Configures the appearance and behavior of a DataGridView control.\n    private void InitializeDataGridView()\n    {\n        // Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill;\n        dataGridView1.BackgroundColor = Color.LightGray;\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n\n        // Set property values appropriate for read-only display and \n        // limited interactivity. \n        dataGridView1.AllowUserToAddRows = false;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.AllowUserToOrderColumns = true;\n        dataGridView1.ReadOnly = true;\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None;\n        dataGridView1.AllowUserToResizeColumns = false;\n        dataGridView1.ColumnHeadersHeightSizeMode = \n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing;\n        dataGridView1.AllowUserToResizeRows = false;\n        dataGridView1.RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode.DisableResizing;\n\n        // Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White;\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black;\n\n        // Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        // value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty;\n\n        // Set the background color for all rows and for alternating rows. \n        // The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray;\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray;\n\n        // Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White;\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black;\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black;\n\n        // Set the Format property on the &quot;Last Prepared&quot; column to cause\n        // the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns[&quot;Last Prepared&quot;].DefaultCellStyle.Format = &quot;y&quot;;\n\n        // Specify a larger font for the &quot;Ratings&quot; column. \n        using (Font font = new Font(\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold))\n        {\n            dataGridView1.Columns[&quot;Rating&quot;].DefaultCellStyle.Font = font;\n        }\n\n        // Attach a handler to the CellFormatting event.\n        dataGridView1.CellFormatting += new\n            DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowHeadersVisible\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_RowHeadersVisible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeadersVisible</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the column that contains row headers is displayed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool RowHeadersVisible { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the column that contains row headers is displayed; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is <code>false</code> and the <span class=\"xref\">stem.Windows.Forms.DataGridView.AutoSizeRowsMode*</span> property is set to <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the RowHeadersVisible property is <code>false</code>, a row whose <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Resizable_\" data-linktype=\"relative-path\">Resizable</a> property is set to <code>true</code>can still be resized in the user interface (UI) by clicking the mouse cursor anywhere along the bottom border of the row to be resized.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to set the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">ColumnHeadersDefaultCellStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeRowsMode_\" data-linktype=\"relative-path\">AutoSizeRowsMode</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersBorderStyle_\" data-linktype=\"relative-path\">ColumnHeadersBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBorderStyle_\" data-linktype=\"relative-path\">CellBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GridColor_\" data-linktype=\"relative-path\">GridColor</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_BackgroundColor_\" data-linktype=\"relative-path\">BackgroundColor</a>, RowHeadersVisible, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnCount_\" data-linktype=\"relative-path\">ColumnCount</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_MultiSelect_\" data-linktype=\"relative-path\">MultiSelect</a> properties. In addition, the code example demonstrates how to set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Name_\" data-linktype=\"relative-path\">Name</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> properties. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code>, and then call the <code>SetUpDataGridView</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler. Ensure all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewUnbound#5\">    Private Sub SetUpDataGridView()\n\n        Me.Controls.Add(dataGridView1)\n        dataGridView1.ColumnCount = 5\n\n        With dataGridView1.ColumnHeadersDefaultCellStyle\n            .BackColor = Color.Navy\n            .ForeColor = Color.White\n            .Font = New Font(dataGridView1.Font, FontStyle.Bold)\n        End With\n\n        With dataGridView1\n            .EditMode = DataGridViewEditMode.EditOnEnter\n            .Name = &quot;dataGridView1&quot;\n            .Location = New Point(8, 8)\n            .Size = New Size(500, 300)\n            .AutoSizeRowsMode = _\n                DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders\n            .ColumnHeadersBorderStyle = _\n                DataGridViewHeaderBorderStyle.Raised\n            .CellBorderStyle = _\n                DataGridViewCellBorderStyle.Single\n            .GridColor = SystemColors.ActiveBorder\n            .RowHeadersVisible = False\n\n            .Columns(0).Name = &quot;Release Date&quot;\n            .Columns(1).Name = &quot;Track&quot;\n            .Columns(1).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter\n            .Columns(2).Name = &quot;Title&quot;\n            .Columns(3).Name = &quot;Artist&quot;\n            .Columns(4).Name = &quot;Album&quot;\n\n            &#39; Make the font italic for row four.\n            .Columns(4).DefaultCellStyle.Font = _\n                New Font(Control.DefaultFont, _\n                    FontStyle.Italic)\n\n            .SelectionMode = _\n                DataGridViewSelectionMode.FullRowSelect\n            .MultiSelect = False\n\n            .BackgroundColor = Color.Honeydew\n\n            .Dock = DockStyle.Fill\n        End With\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewUnbound#5\">   void SetUpDataGridView()\n   {\n      this-&gt;Controls-&gt;Add( dataGridView1 );\n      dataGridView1-&gt;ColumnCount = 5;\n      DataGridViewCellStyle^ style = dataGridView1-&gt;ColumnHeadersDefaultCellStyle;\n      style-&gt;BackColor = Color::Navy;\n      style-&gt;ForeColor = Color::White;\n      style-&gt;Font = gcnew System::Drawing::Font( dataGridView1-&gt;Font,FontStyle::Bold );\n      dataGridView1-&gt;EditMode = DataGridViewEditMode::EditOnEnter;\n      dataGridView1-&gt;Name = &quot;dataGridView1&quot;;\n      dataGridView1-&gt;Location = Point(8,8);\n      dataGridView1-&gt;Size = System::Drawing::Size( 500, 300 );\n      dataGridView1-&gt;AutoSizeRowsMode = DataGridViewAutoSizeRowsMode::DisplayedCellsExceptHeaders;\n      dataGridView1-&gt;ColumnHeadersBorderStyle = DataGridViewHeaderBorderStyle::Raised;\n      dataGridView1-&gt;CellBorderStyle = DataGridViewCellBorderStyle::Single;\n      dataGridView1-&gt;GridColor = SystemColors::ActiveBorder;\n      dataGridView1-&gt;RowHeadersVisible = false;\n      dataGridView1-&gt;Columns[ 0 ]-&gt;Name = &quot;Release Date&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;Name = &quot;Track&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;DefaultCellStyle-&gt;Alignment = DataGridViewContentAlignment::MiddleCenter;\n      dataGridView1-&gt;Columns[ 2 ]-&gt;Name = &quot;Title&quot;;\n      dataGridView1-&gt;Columns[ 3 ]-&gt;Name = &quot;Artist&quot;;\n      dataGridView1-&gt;Columns[ 4 ]-&gt;Name = &quot;Album&quot;;\n\n      // Make the font italic for row four.\n      dataGridView1-&gt;Columns[ 4 ]-&gt;DefaultCellStyle-&gt;Font = gcnew System::Drawing::Font( DataGridView::DefaultFont,FontStyle::Italic );\n      dataGridView1-&gt;SelectionMode = DataGridViewSelectionMode::FullRowSelect;\n      dataGridView1-&gt;MultiSelect = false;\n      dataGridView1-&gt;BackgroundColor = Color::Honeydew;\n      dataGridView1-&gt;Dock = DockStyle::Fill;\n      dataGridView1-&gt;CellFormatting += gcnew DataGridViewCellFormattingEventHandler( this, &amp;Form1::dataGridView1_CellFormatting );\n      dataGridView1-&gt;CellParsing += gcnew DataGridViewCellParsingEventHandler( this, &amp;Form1::dataGridView1_CellParsing );\n      addNewRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::addNewRowButton_Click );\n      deleteRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::deleteRowButton_Click );\n      ledgerStyleButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::ledgerStyleButton_Click );\n      dataGridView1-&gt;CellValidating += gcnew DataGridViewCellValidatingEventHandler( this, &amp;Form1::dataGridView1_CellValidating );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewUnbound#5\">    private void SetUpDataGridView()\n    {\n        this.Controls.Add(dataGridView1);\n        dataGridView1.ColumnCount = 5;\n        DataGridViewCellStyle style = \n            dataGridView1.ColumnHeadersDefaultCellStyle;\n        style.BackColor = Color.Navy;\n        style.ForeColor = Color.White;\n        style.Font = new Font(dataGridView1.Font, FontStyle.Bold);\n\n        dataGridView1.EditMode = DataGridViewEditMode.EditOnEnter;\n        dataGridView1.Name = &quot;dataGridView1&quot;;\n        dataGridView1.Location = new Point(8, 8);\n        dataGridView1.Size = new Size(500, 300);\n        dataGridView1.AutoSizeRowsMode = \n            DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders;\n        dataGridView1.ColumnHeadersBorderStyle = \n            DataGridViewHeaderBorderStyle.Raised;\n        dataGridView1.CellBorderStyle = DataGridViewCellBorderStyle.Single;\n        dataGridView1.GridColor = SystemColors.ActiveBorder;\n        dataGridView1.RowHeadersVisible = false;\n\n        dataGridView1.Columns[0].Name = &quot;Release Date&quot;;\n        dataGridView1.Columns[1].Name = &quot;Track&quot;;\n        dataGridView1.Columns[1].DefaultCellStyle.Alignment = \n            DataGridViewContentAlignment.MiddleCenter;\n        dataGridView1.Columns[2].Name = &quot;Title&quot;;\n        dataGridView1.Columns[3].Name = &quot;Artist&quot;;\n        dataGridView1.Columns[4].Name = &quot;Album&quot;;\n\n        // Make the font italic for row four.\n        dataGridView1.Columns[4].DefaultCellStyle.Font = new Font(DataGridView.DefaultFont, FontStyle.Italic);\n\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n\n        dataGridView1.BackgroundColor = Color.Honeydew;\n\n        dataGridView1.Dock = DockStyle.Fill;\n\n        dataGridView1.CellFormatting += new DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n        dataGridView1.CellParsing += new DataGridViewCellParsingEventHandler(dataGridView1_CellParsing);\n        addNewRowButton.Click += new EventHandler(addNewRowButton_Click);\n        deleteRowButton.Click += new EventHandler(deleteRowButton_Click);\n        ledgerStyleButton.Click += new EventHandler(ledgerStyleButton_Click);\n        dataGridView1.CellValidating += new DataGridViewCellValidatingEventHandler(dataGridView1_CellValidating);\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowHeadersWidth\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_RowHeadersWidth_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeadersWidth</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the width, in pixels, of the column that contains the row headers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int RowHeadersWidth { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The width, in pixels, of the column that contains row headers. The default is 43.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is less than the minimum width of 4 pixels or is greater than the maximum width of 32768 pixels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RowHeadersWidth property can be used to resize the row header column to a specified width. To adjust the width of this column to fit the contents of the row header cells, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRowHeadersWidth_\" data-linktype=\"relative-path\">AutoResizeRowHeadersWidth</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use the RowHeadersWidth property in a row-painting scenario. In the example, the value of this property is used to calculate the bounds within which a custom background is drawn.  </p>\n<p> This code is part of a larger example available in<a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRowPainting#20\">    &#39; Paints the custom selection background for selected rows.\n    Sub dataGridView1_RowPrePaint(ByVal sender As Object, _\n        ByVal e As DataGridViewRowPrePaintEventArgs) _\n        Handles dataGridView1.RowPrePaint\n\n        &#39; Do not automatically paint the focus rectangle.\n        e.PaintParts = e.PaintParts And Not DataGridViewPaintParts.Focus\n\n        &#39; Determine whether the cell should be painted with the \n        &#39; custom selection background.\n        If (e.State And DataGridViewElementStates.Selected) = _\n            DataGridViewElementStates.Selected Then\n\n            &#39; Calculate the bounds of the row.\n            Dim rowBounds As New Rectangle( _\n                Me.dataGridView1.RowHeadersWidth, e.RowBounds.Top, _\n                Me.dataGridView1.Columns.GetColumnsWidth( _\n                DataGridViewElementStates.Visible) - _\n                Me.dataGridView1.HorizontalScrollingOffset + 1, _\n                e.RowBounds.Height)\n\n            &#39; Paint the custom selection background.\n            Dim backbrush As New _\n                System.Drawing.Drawing2D.LinearGradientBrush(rowBounds, _\n                Me.dataGridView1.DefaultCellStyle.SelectionBackColor, _\n                e.InheritedRowStyle.ForeColor, _\n                System.Drawing.Drawing2D.LinearGradientMode.Horizontal)\n            Try\n                e.Graphics.FillRectangle(backbrush, rowBounds)\n            Finally\n                backbrush.Dispose()\n            End Try\n        End If\n\n    End Sub &#39;dataGridView1_RowPrePaint\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRowPainting#20\">    // Paints the custom selection background for selected rows.\n    void dataGridView1_RowPrePaint(object sender,\n            DataGridViewRowPrePaintEventArgs e)\n    {\n        // Do not automatically paint the focus rectangle.\n        e.PaintParts &amp;= ~DataGridViewPaintParts.Focus;\n\n        // Determine whether the cell should be painted\n        // with the custom selection background.\n        if ((e.State &amp; DataGridViewElementStates.Selected) ==\n                    DataGridViewElementStates.Selected)\n        {\n            // Calculate the bounds of the row.\n            Rectangle rowBounds = new Rectangle(\n                this.dataGridView1.RowHeadersWidth, e.RowBounds.Top,\n                this.dataGridView1.Columns.GetColumnsWidth(\n                    DataGridViewElementStates.Visible) -\n                this.dataGridView1.HorizontalScrollingOffset + 1,\n                e.RowBounds.Height);\n\n            // Paint the custom selection background.\n            using (Brush backbrush =\n                new System.Drawing.Drawing2D.LinearGradientBrush(rowBounds,\n                    this.dataGridView1.DefaultCellStyle.SelectionBackColor,\n                    e.InheritedRowStyle.ForeColor,\n                    System.Drawing.Drawing2D.LinearGradientMode.Horizontal))\n            {\n                e.Graphics.FillRectangle(backbrush, rowBounds);\n            }\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowHeadersWidthSizeMode\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_RowHeadersWidthSizeMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeadersWidthSizeMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the width of the row headers is adjustable and whether it can be adjusted by the user or is automatically adjusted to fit the contents of the headers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode RowHeadersWidthSizeMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a> value indicating the mode by which the width of the row headers can be adjusted. The default is <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this property is set to an automatic sizing mode, the width of the row headers cannot be adjusted by the user.  </p>\n<p> To adjust the height of the row headers programmatically, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRowHeadersWidth_\" data-linktype=\"relative-path\">AutoResizeRowHeadersWidth</a> method or set the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersWidth_\" data-linktype=\"relative-path\">RowHeadersWidth</a> property.  </p>\n<p> To set the sizing mode for the column headers, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersHeightSizeMode_\" data-linktype=\"relative-path\">ColumnHeadersHeightSizeMode</a> property.  </p>\n<p> For more information about header sizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control does not support double buffering. If <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleBuffered_\" data-linktype=\"relative-path\">DoubleBuffered</a> is set to <code>true</code> in a derived <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use this property in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control intended primarily for display. In this example, the visual appearance of the control is customized in several ways and the control is configured for limited interactivity. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> class overview.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    &#39; Configures the appearance and behavior of a DataGridView control.\n    Private Sub InitializeDataGridView()\n\n        &#39; Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill\n        dataGridView1.BackgroundColor = Color.LightGray\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D\n\n        &#39; Set property values appropriate for read-only display and \n        &#39; limited interactivity. \n        dataGridView1.AllowUserToAddRows = False\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.AllowUserToOrderColumns = True\n        dataGridView1.ReadOnly = True\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect\n        dataGridView1.MultiSelect = False\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None\n        dataGridView1.AllowUserToResizeColumns = False\n        dataGridView1.ColumnHeadersHeightSizeMode = _\n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing\n        dataGridView1.AllowUserToResizeRows = False\n        dataGridView1.RowHeadersWidthSizeMode = _\n            DataGridViewRowHeadersWidthSizeMode.DisableResizing\n\n        &#39; Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black\n\n        &#39; Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        &#39; value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty\n\n        &#39; Set the background color for all rows and for alternating rows. \n        &#39; The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray\n\n        &#39; Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black\n\n        &#39; Set the Format property on the &quot;Last Prepared&quot; column to cause\n        &#39; the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns(&quot;Last Prepared&quot;).DefaultCellStyle.Format = &quot;y&quot;\n\n        &#39; Specify a larger font for the &quot;Ratings&quot; column. \n        Dim font As New Font( _\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold)\n        Try\n            dataGridView1.Columns(&quot;Rating&quot;).DefaultCellStyle.Font = font\n        Finally\n            font.Dispose()\n        End Try\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    // Configures the appearance and behavior of a DataGridView control.\n    private void InitializeDataGridView()\n    {\n        // Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill;\n        dataGridView1.BackgroundColor = Color.LightGray;\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n\n        // Set property values appropriate for read-only display and \n        // limited interactivity. \n        dataGridView1.AllowUserToAddRows = false;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.AllowUserToOrderColumns = true;\n        dataGridView1.ReadOnly = true;\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None;\n        dataGridView1.AllowUserToResizeColumns = false;\n        dataGridView1.ColumnHeadersHeightSizeMode = \n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing;\n        dataGridView1.AllowUserToResizeRows = false;\n        dataGridView1.RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode.DisableResizing;\n\n        // Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White;\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black;\n\n        // Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        // value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty;\n\n        // Set the background color for all rows and for alternating rows. \n        // The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray;\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray;\n\n        // Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White;\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black;\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black;\n\n        // Set the Format property on the &quot;Last Prepared&quot; column to cause\n        // the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns[&quot;Last Prepared&quot;].DefaultCellStyle.Format = &quot;y&quot;;\n\n        // Specify a larger font for the &quot;Ratings&quot; column. \n        using (Font font = new Font(\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold))\n        {\n            dataGridView1.Columns[&quot;Rating&quot;].DefaultCellStyle.Font = font;\n        }\n\n        // Attach a handler to the CellFormatting event.\n        dataGridView1.CellFormatting += new\n            DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_Rows\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_Rows_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Rows</div>        \r\n          </div>\r\n    \r\n            <p>Gets a collection that contains all the rows in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewRowCollection Rows { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection\" data-linktype=\"relative-path\">DataGridViewRowCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection\" data-linktype=\"relative-path\">DataGridViewRowCollection</a> that contains all the rows in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the Rows collection to manually populate a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control instead of binding it to a data source. The following example shows you how to manually add and insert rows. This example assumes that you have added four <a class=\"xref\" href=\"system.windows.forms.datagridviewtextboxcolumn\" data-linktype=\"relative-path\">DataGridViewTextBoxColumn</a> instances to the control&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Columns_\" data-linktype=\"relative-path\">Columns</a> collection.  </p>\n<p> [Visual Basic]  </p>\n<pre><code>Me.dataGridView1.Rows.Add(&quot;five&quot;, &quot;six&quot;, &quot;seven&quot;, &quot;eight&quot;)  \nMe.dataGridView1.Rows.Insert(0, &quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;)\n</code></pre><p> [C#]  </p>\n<pre><code>this.dataGridView1.Rows.Add(&quot;five&quot;, &quot;six&quot;, &quot;seven&quot;, &quot;eight&quot;);this.dataGridView1.Rows.Insert(0, &quot;one&quot;, &quot;two&quot;, &quot;three&quot;, &quot;four&quot;);\n</code></pre><p> For a detailed example that programmatically populates an unbound <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control, see the Example section.  </p>\n<p> Rows include style information in addition to cell values. For this reason, you might want to add or insert rows based on existing rows that you have already styled. You can do this using the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection#System_Windows_Forms_DataGridViewRowCollection_AddCopy_\" data-linktype=\"relative-path\">AddCopy</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection#System_Windows_Forms_DataGridViewRowCollection_AddCopies_\" data-linktype=\"relative-path\">AddCopies</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection#System_Windows_Forms_DataGridViewRowCollection_InsertCopy_\" data-linktype=\"relative-path\">InsertCopy</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection#System_Windows_Forms_DataGridViewRowCollection_InsertCopies_\" data-linktype=\"relative-path\">InsertCopies</a> methods.  </p>\n<p> You can also use the Rows collection to modify the values in the control or to remove rows. You can modify values or remove rows regardless of whether the control is bound to an external data source. If there is a data source, the changes are made directly to the data source. You may still need to push the data source updates to a remote database, however. For more information, see <a href=\"../Topic/How%20to:%20Bind%20Data%20to%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Bind Data to the Windows Forms DataGridView Control</a>.  </p>\n<p> The following example shows you how to modify cell values programmatically.  </p>\n<p> [Visual Basic]  </p>\n<pre><code>&#39; Modify the value in the first cell of the second row.  \nMe.dataGridView1.Rows[1].Cells[0].Value = &quot;new value&quot;  \n\n&#39; The previous line is equivalent to the following line.  \nMe.dataGridView1[0, 1].Value = &quot;new value&quot;\n</code></pre><p> [C#]  </p>\n<pre><code>// Modify the value in the first cell of the second row.  \nthis.dataGridView1.Rows[1].Cells[0].Value = &quot;new value&quot;;  \n\n// The previous line is equivalent to the following line.  \nthis.dataGridView1[0, 1].Value = &quot;new value&quot;;\n</code></pre><p> In addition to the standard collection capabilities, you can use the Rows collection to retrieve information about rows. Use the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection#System_Windows_Forms_DataGridViewRowCollection_GetRowState_\" data-linktype=\"relative-path\">GetRowState</a> method to determine the state of a particular row. Use the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection#System_Windows_Forms_DataGridViewRowCollection_GetRowCount_\" data-linktype=\"relative-path\">GetRowCount</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection#System_Windows_Forms_DataGridViewRowCollection_GetRowsHeight_\" data-linktype=\"relative-path\">GetRowsHeight</a> methods to determine the number of rows or the combined height of rows in a particular state. To retrieve the index of a row with a particular state, use the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection#System_Windows_Forms_DataGridViewRowCollection_GetFirstRow_\" data-linktype=\"relative-path\">GetFirstRow</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection#System_Windows_Forms_DataGridViewRowCollection_GetLastRow_\" data-linktype=\"relative-path\">GetLastRow</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection#System_Windows_Forms_DataGridViewRowCollection_GetNextRow_\" data-linktype=\"relative-path\">GetNextRow</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection#System_Windows_Forms_DataGridViewRowCollection_GetPreviousRow_\" data-linktype=\"relative-path\">GetPreviousRow</a> methods.  </p>\n<p> The following example shows you how to retrieve the index of the first selected row, and then use it to programmatically delete the row.  </p>\n<p> [Visual Basic]  </p>\n<pre><code>Dim rowToDelete As Int32 = Me.dataGridView1.Rows.GetFirstRow( _  \n    DataGridViewElementStates.Selected)  \nIf rowToDelete &gt; -1 Then  \n    Me.dataGridView1.Rows.RemoveAt(rowToDelete)  \nEnd If\n</code></pre><p> [C#]  </p>\n<pre><code>Int32 rowToDelete = this.dataGridView1.Rows.GetFirstRow(  \n    DataGridViewElementStates.Selected);  \nif (rowToDelete &gt; -1)  \n{  \n    this.dataGridView1.Rows.RemoveAt(rowToDelete);  \n}\n</code></pre><p> To improve performance, the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection\" data-linktype=\"relative-path\">DataGridViewRowCollection</a> returned by the Rows property can include shared and unshared rows. Shared rows share memory to reduce the cost of a large record set. If your record set is very large, you should be careful to keep the rows shared as much as possible when accessing the Rows property.  </p>\n<p> For more information, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to create an unbound <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>; set the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersVisible_\" data-linktype=\"relative-path\">ColumnHeadersVisible</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">ColumnHeadersDefaultCellStyle</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnCount_\" data-linktype=\"relative-path\">ColumnCount</a> properties; and use the Rows and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Columns_\" data-linktype=\"relative-path\">Columns</a> properties. It also demonstrates how to use a version of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight_\" data-linktype=\"relative-path\">AutoResizeColumnHeadersHeight</a> and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRows_\" data-linktype=\"relative-path\">AutoResizeRows</a> methods to properly size the column headers and the rows. To run this example, paste the following code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code> and a button named <code>Button1</code>, and then call the <code>InitializeDataGridView</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler. Ensure all events are connected with their event handlers.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewAutoSize#2\">   void InitializeDataGridView()\n   {\n      this-&gt;Size = System::Drawing::Size( 600, 600 );\n      dataGridView1-&gt;Size = System::Drawing::Size( 450, 400 );\n\n      // Create an unbound DataGridView by declaring a column count.\n      dataGridView1-&gt;ColumnCount = 4;\n      dataGridView1-&gt;ColumnHeadersVisible = true;\n\n      // Set the column header style.\n      DataGridViewCellStyle ^ columnHeaderStyle = gcnew DataGridViewCellStyle;\n      columnHeaderStyle-&gt;BackColor = Color::Aqua;\n      columnHeaderStyle-&gt;Font = gcnew System::Drawing::Font( &quot;Verdana&quot;,10,FontStyle::Bold );\n      dataGridView1-&gt;ColumnHeadersDefaultCellStyle = columnHeaderStyle;\n\n      // Set the column header names.\n      dataGridView1-&gt;Columns[ 0 ]-&gt;Name = &quot;Recipe&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;Name = &quot;Category&quot;;\n      dataGridView1-&gt;Columns[ 2 ]-&gt;Name = &quot;Main Ingredients&quot;;\n      dataGridView1-&gt;Columns[ 3 ]-&gt;Name = &quot;Rating&quot;;\n\n      // Populate the rows.\n      array&lt;String^&gt;^row1 = gcnew array&lt;String^&gt;{\n         &quot;Meatloaf&quot;,&quot;Main Dish&quot;,&quot;ground beef&quot;,&quot;**&quot;\n      };\n      array&lt;String^&gt;^row2 = gcnew array&lt;String^&gt;{\n         &quot;Key Lime Pie&quot;,&quot;Dessert&quot;,&quot;lime juice, evaporated milk&quot;,&quot;****&quot;\n      };\n      array&lt;String^&gt;^row3 = gcnew array&lt;String^&gt;{\n         &quot;Orange-Salsa Pork Chops&quot;,&quot;Main Dish&quot;,&quot;pork chops, salsa, orange juice&quot;,&quot;****&quot;\n      };\n      array&lt;String^&gt;^row4 = gcnew array&lt;String^&gt;{\n         &quot;Black Bean and Rice Salad&quot;,&quot;Salad&quot;,&quot;black beans, brown rice&quot;,&quot;****&quot;\n      };\n      array&lt;String^&gt;^row5 = gcnew array&lt;String^&gt;{\n         &quot;Chocolate Cheesecake&quot;,&quot;Dessert&quot;,&quot;cream cheese&quot;,&quot;***&quot;\n      };\n      array&lt;String^&gt;^row6 = gcnew array&lt;String^&gt;{\n         &quot;Black Bean Dip&quot;,&quot;Appetizer&quot;,&quot;black beans, sour cream&quot;,&quot;***&quot;\n      };\n      array&lt;Object^&gt;^rows = {row1,row2,row3,row4,row5,row6};\n      System::Collections::IEnumerator^ myEnum = rows-&gt;GetEnumerator();\n      while ( myEnum-&gt;MoveNext() )\n      {\n         array&lt;String^&gt;^rowArray = safe_cast&lt;array&lt;String^&gt;^&gt;(myEnum-&gt;Current);\n         dataGridView1-&gt;Rows-&gt;Add( rowArray );\n      }\n   }\n\n   void Button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Resize the height of the column headers. \n      dataGridView1-&gt;AutoResizeColumnHeadersHeight();\n\n      // Resize all the row heights to fit the contents of all non-header cells.\n      dataGridView1-&gt;AutoResizeRows(\n            DataGridViewAutoSizeRowsMode::AllCellsExceptHeaders);\n   }\n\n   void InitializeContextMenu()\n   {\n      // Create the menu item.\n      MenuItem^ getRecipe = gcnew MenuItem( &quot;Search for recipe&quot;,gcnew System::EventHandler( this, &amp;Form1::OnMenuClick ) );\n\n      // Add the menu item to the shortcut menu.\n      System::Windows::Forms::ContextMenuStrip^ recipeMenu = gcnew System::Windows::Forms::ContextMenuStrip();\n\n      // Set the shortcut menu for the first column.\n      dataGridView1-&gt;Columns[ 0 ]-&gt;ContextMenuStrip = recipeMenu;\n   }\n\n   void OnMenuClick( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      if ( dataGridView1-&gt;CurrentCell != nullptr )\n      {\n         //Retrieve the recipe name.\n         String^ recipeName = dynamic_cast&lt;String^&gt;(dataGridView1-&gt;CurrentCell-&gt;Value);\n\n         //Search for the recipe.\n         System::Diagnostics::Process::Start( String::Format( &quot;http://search.msn.com/results.aspx?q={0}&quot;, recipeName ), nullptr );\n      }\n   }\n\nprivate:\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewAutoSize#2\">    private void InitializeDataGridView()\n    {\n        // Create an unbound DataGridView by declaring a column count.\n        dataGridView1.ColumnCount = 4;\n        dataGridView1.ColumnHeadersVisible = true;\n\n        // Set the column header style.\n        DataGridViewCellStyle columnHeaderStyle = new DataGridViewCellStyle();\n\n        columnHeaderStyle.BackColor = Color.Beige;\n        columnHeaderStyle.Font = new Font(&quot;Verdana&quot;, 10, FontStyle.Bold);\n        dataGridView1.ColumnHeadersDefaultCellStyle = columnHeaderStyle;\n\n        // Set the column header names.\n        dataGridView1.Columns[0].Name = &quot;Recipe&quot;;\n        dataGridView1.Columns[1].Name = &quot;Category&quot;;\n        dataGridView1.Columns[2].Name = &quot;Main Ingredients&quot;;\n        dataGridView1.Columns[3].Name = &quot;Rating&quot;;\n\n        // Populate the rows.\n        string[] row1 = new string[] { &quot;Meatloaf&quot;, &quot;Main Dish&quot;, &quot;ground beef&quot;,\n            &quot;**&quot; };\n        string[] row2 = new string[] { &quot;Key Lime Pie&quot;, &quot;Dessert&quot;, \n            &quot;lime juice, evaporated milk&quot;, &quot;****&quot; };\n        string[] row3 = new string[] { &quot;Orange-Salsa Pork Chops&quot;, &quot;Main Dish&quot;, \n            &quot;pork chops, salsa, orange juice&quot;, &quot;****&quot; };\n        string[] row4 = new string[] { &quot;Black Bean and Rice Salad&quot;, &quot;Salad&quot;, \n            &quot;black beans, brown rice&quot;, &quot;****&quot; };\n        string[] row5 = new string[] { &quot;Chocolate Cheesecake&quot;, &quot;Dessert&quot;, \n            &quot;cream cheese&quot;, &quot;***&quot; };\n        string[] row6 = new string[] { &quot;Black Bean Dip&quot;, &quot;Appetizer&quot;, \n            &quot;black beans, sour cream&quot;, &quot;***&quot; };\n        object[] rows = new object[] { row1, row2, row3, row4, row5, row6 };\n\n        foreach (string[] rowArray in rows)\n        {\n            dataGridView1.Rows.Add(rowArray);\n        }\n    }\n\n    private void button1_Click(object sender, System.EventArgs e)\n    {\n        // Resize the height of the column headers. \n        dataGridView1.AutoResizeColumnHeadersHeight();\n\n        // Resize all the row heights to fit the contents of all non-header cells.\n        dataGridView1.AutoResizeRows(\n            DataGridViewAutoSizeRowsMode.AllCellsExceptHeaders);\n    }\n\n    private void InitializeContextMenu()\n    {\n        // Create the menu item.\n        ToolStripMenuItem getRecipe = new ToolStripMenuItem(&quot;Search for recipe&quot;, null,\n            new System.EventHandler(ShortcutMenuClick));\n\n        // Add the menu item to the shortcut menu.\n        ContextMenuStrip recipeMenu = new ContextMenuStrip();\n        recipeMenu.Items.Add(getRecipe); \n\n        // Set the shortcut menu for the first column.\n        dataGridView1.Columns[0].ContextMenuStrip = recipeMenu;\n        dataGridView1.MouseDown += new MouseEventHandler(dataGridView1_MouseDown);\n    }\n\n    private DataGridViewCell clickedCell;\n\n    private void dataGridView1_MouseDown(object sender, MouseEventArgs e)\n    {\n\t// If the user right-clicks a cell, store it for use by the shortcut menu.\n        if (e.Button == MouseButtons.Right)\n        {\n            DataGridView.HitTestInfo hit = dataGridView1.HitTest(e.X, e.Y);\n            if (hit.Type == DataGridViewHitTestType.Cell)\n            {\n                clickedCell =\n                    dataGridView1.Rows[hit.RowIndex].Cells[hit.ColumnIndex];\n            }\n        }\n    }\n\n    private void ShortcutMenuClick(object sender, System.EventArgs e)\n    {\n        if (clickedCell != null)\n        {\n            //Retrieve the recipe name.\n            string recipeName = (string)clickedCell.Value;\n\n            //Search for the recipe.\n            System.Diagnostics.Process.Start(\n                &quot;http://search.msn.com/results.aspx?q=&quot; + recipeName);\n                //null);\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewAutoSize#2\">    Private Sub InitializeDataGridView()\n\n        &#39; Create an unbound DataGridView by declaring a column count.\n        dataGridView1.ColumnCount = 4\n        dataGridView1.ColumnHeadersVisible = True\n\n        &#39; Set the column header style.\n        Dim columnHeaderStyle As New DataGridViewCellStyle()\n\n        columnHeaderStyle.BackColor = Color.Beige\n        columnHeaderStyle.Font = New Font(&quot;Verdana&quot;, 10, FontStyle.Bold)\n        dataGridView1.ColumnHeadersDefaultCellStyle = columnHeaderStyle\n\n        &#39; Set the column header names.\n        dataGridView1.Columns(0).Name = &quot;Recipe&quot;\n        dataGridView1.Columns(1).Name = &quot;Category&quot;\n        dataGridView1.Columns(2).Name = &quot;Main Ingredients&quot;\n        dataGridView1.Columns(3).Name = &quot;Rating&quot;\n\n        &#39; Populate the rows.\n        Dim row1() As String = {&quot;Meatloaf&quot;, &quot;Main Dish&quot;, &quot;ground beef&quot;, &quot;**&quot;}\n        Dim row2() As String = _\n            {&quot;Key Lime Pie&quot;, &quot;Dessert&quot;, &quot;lime juice, evaporated milk&quot;, &quot;****&quot;}\n        Dim row3() As String = {&quot;Orange-Salsa Pork Chops&quot;, &quot;Main Dish&quot;, _\n            &quot;pork chops, salsa, orange juice&quot;, &quot;****&quot;}\n        Dim row4() As String = {&quot;Black Bean and Rice Salad&quot;, &quot;Salad&quot;, _\n            &quot;black beans, brown rice&quot;, &quot;****&quot;}\n        Dim row5() As String = _\n            {&quot;Chocolate Cheesecake&quot;, &quot;Dessert&quot;, &quot;cream cheese&quot;, &quot;***&quot;}\n        Dim row6() As String = _\n            {&quot;Black Bean Dip&quot;, &quot;Appetizer&quot;, &quot;black beans, sour cream&quot;, &quot;***&quot;}\n        Dim rows() As Object = {row1, row2, row3, row4, row5, row6}\n\n        Dim rowArray As String()\n        For Each rowArray In rows\n            dataGridView1.Rows.Add(rowArray)\n        Next rowArray\n\n    End Sub\n\n    Private Sub button1_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles button1.Click\n\n        &#39; Resize the height of the column headers. \n        dataGridView1.AutoResizeColumnHeadersHeight()\n\n        &#39; Resize all the row heights to fit the contents of all \n        &#39; non-header cells.\n        dataGridView1.AutoResizeRows( _\n            DataGridViewAutoSizeRowsMode.AllCellsExceptHeaders)\n\n    End Sub\n\n    Private Sub InitializeContextMenu()\n\n        &#39; Create the menu item.\n        Dim getRecipe As New ToolStripMenuItem( _\n            &quot;Search for recipe&quot;, Nothing, AddressOf ShortcutMenuClick)\n\n        &#39; Add the menu item to the shortcut menu.\n        Dim recipeMenu As New ContextMenuStrip()\n        recipeMenu.Items.Add(getRecipe)\n\n        &#39; Set the shortcut menu for the first column.\n        dataGridView1.Columns(0).ContextMenuStrip = recipeMenu\n\n    End Sub\n\n    Private clickedCell As DataGridViewCell\n\n    Private Sub dataGridView1_MouseDown(ByVal sender As Object, _\n        ByVal e As MouseEventArgs) Handles dataGridView1.MouseDown\n\n        &#39; If the user right-clicks a cell, store it for use by the \n        &#39; shortcut menu.\n        If e.Button = MouseButtons.Right Then\n            Dim hit As DataGridView.HitTestInfo = _\n                dataGridView1.HitTest(e.X, e.Y)\n            If hit.Type = DataGridViewHitTestType.Cell Then\n                clickedCell = _\n                    dataGridView1.Rows(hit.RowIndex).Cells(hit.ColumnIndex)\n            End If\n        End If\n\n    End Sub\n\n    Private Sub ShortcutMenuClick(ByVal sender As Object, _\n        ByVal e As System.EventArgs)\n\n        If (clickedCell IsNot Nothing) Then\n            &#39;Retrieve the recipe name.\n            Dim recipeName As String = CStr(clickedCell.Value)\n\n            &#39;Search for the recipe.\n            System.Diagnostics.Process.Start( _\n                &quot;http://search.msn.com/results.aspx?q=&quot; + recipeName)\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowsDefaultCellStyle\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_RowsDefaultCellStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowsDefaultCellStyle</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the default style applied to the row cells of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewCellStyle RowsDefaultCellStyle { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> to apply to the row cells of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control displays its cells using the styles indicated by the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_InheritedStyle_\" data-linktype=\"relative-path\">InheritedStyle</a> property, which inherits styles from other properties of type <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a>. For cells in all rows, excluding header cells, the styles specified through the RowsDefaultCellStyle property override the styles specified through the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> properties, and are overridden by the styles specified through the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AlternatingRowsDefaultCellStyle_\" data-linktype=\"relative-path\">AlternatingRowsDefaultCellStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Style_\" data-linktype=\"relative-path\">Style</a> properties.  </p>\n<p> For more information, see <a href=\"../Topic/Cell%20Styles%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Cell Styles in the Windows Forms DataGridView Control</a>.  </p>\n<p> When getting this property, a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> with default values will be created if the property has not already been accessed. This can cause a performance impact when getting this property for many rows. Whenever possible, use a single <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> to set this property for multiple rows. For more information, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use this property to create a ledger effect in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> class overview.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    &#39; Configures the appearance and behavior of a DataGridView control.\n    Private Sub InitializeDataGridView()\n\n        &#39; Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill\n        dataGridView1.BackgroundColor = Color.LightGray\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D\n\n        &#39; Set property values appropriate for read-only display and \n        &#39; limited interactivity. \n        dataGridView1.AllowUserToAddRows = False\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.AllowUserToOrderColumns = True\n        dataGridView1.ReadOnly = True\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect\n        dataGridView1.MultiSelect = False\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None\n        dataGridView1.AllowUserToResizeColumns = False\n        dataGridView1.ColumnHeadersHeightSizeMode = _\n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing\n        dataGridView1.AllowUserToResizeRows = False\n        dataGridView1.RowHeadersWidthSizeMode = _\n            DataGridViewRowHeadersWidthSizeMode.DisableResizing\n\n        &#39; Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black\n\n        &#39; Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        &#39; value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty\n\n        &#39; Set the background color for all rows and for alternating rows. \n        &#39; The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray\n\n        &#39; Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black\n\n        &#39; Set the Format property on the &quot;Last Prepared&quot; column to cause\n        &#39; the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns(&quot;Last Prepared&quot;).DefaultCellStyle.Format = &quot;y&quot;\n\n        &#39; Specify a larger font for the &quot;Ratings&quot; column. \n        Dim font As New Font( _\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold)\n        Try\n            dataGridView1.Columns(&quot;Rating&quot;).DefaultCellStyle.Font = font\n        Finally\n            font.Dispose()\n        End Try\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewStyleDemo#20\">    // Configures the appearance and behavior of a DataGridView control.\n    private void InitializeDataGridView()\n    {\n        // Initialize basic DataGridView properties.\n        dataGridView1.Dock = DockStyle.Fill;\n        dataGridView1.BackgroundColor = Color.LightGray;\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n\n        // Set property values appropriate for read-only display and \n        // limited interactivity. \n        dataGridView1.AllowUserToAddRows = false;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.AllowUserToOrderColumns = true;\n        dataGridView1.ReadOnly = true;\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n        dataGridView1.AutoSizeRowsMode = DataGridViewAutoSizeRowsMode.None;\n        dataGridView1.AllowUserToResizeColumns = false;\n        dataGridView1.ColumnHeadersHeightSizeMode = \n            DataGridViewColumnHeadersHeightSizeMode.DisableResizing;\n        dataGridView1.AllowUserToResizeRows = false;\n        dataGridView1.RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode.DisableResizing;\n\n        // Set the selection background color for all the cells.\n        dataGridView1.DefaultCellStyle.SelectionBackColor = Color.White;\n        dataGridView1.DefaultCellStyle.SelectionForeColor = Color.Black;\n\n        // Set RowHeadersDefaultCellStyle.SelectionBackColor so that its default\n        // value won&#39;t override DataGridView.DefaultCellStyle.SelectionBackColor.\n        dataGridView1.RowHeadersDefaultCellStyle.SelectionBackColor = Color.Empty;\n\n        // Set the background color for all rows and for alternating rows. \n        // The value for alternating rows overrides the value for all rows. \n        dataGridView1.RowsDefaultCellStyle.BackColor = Color.LightGray;\n        dataGridView1.AlternatingRowsDefaultCellStyle.BackColor = Color.DarkGray;\n\n        // Set the row and column header styles.\n        dataGridView1.ColumnHeadersDefaultCellStyle.ForeColor = Color.White;\n        dataGridView1.ColumnHeadersDefaultCellStyle.BackColor = Color.Black;\n        dataGridView1.RowHeadersDefaultCellStyle.BackColor = Color.Black;\n\n        // Set the Format property on the &quot;Last Prepared&quot; column to cause\n        // the DateTime to be formatted as &quot;Month, Year&quot;.\n        dataGridView1.Columns[&quot;Last Prepared&quot;].DefaultCellStyle.Format = &quot;y&quot;;\n\n        // Specify a larger font for the &quot;Ratings&quot; column. \n        using (Font font = new Font(\n            dataGridView1.DefaultCellStyle.Font.FontFamily, 25, FontStyle.Bold))\n        {\n            dataGridView1.Columns[&quot;Rating&quot;].DefaultCellStyle.Font = font;\n        }\n\n        // Attach a handler to the CellFormatting event.\n        dataGridView1.CellFormatting += new\n            DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowTemplate\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_RowTemplate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowTemplate</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the row that represents the template for all the rows in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewRow RowTemplate { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> representing the row template.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified row when setting this property has its <span class=\"xref\">stem.Windows.Forms.DataGridViewElement.DataGridView*</span> property set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Sometimes you want greater control over the appearance of <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> rows than what is provided by the various <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> cell style properties. The RowTemplate property lets you create and initialize a <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> for use as a template by all rows, including the row for new records if <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToAddRows_\" data-linktype=\"relative-path\">AllowUserToAddRows</a> is <code>true</code>.  </p>\n<p> This is useful when you are setting default values for properties such as row height. For example, you may want to increase the default row height in order to provide extra room beneath ordinary cell content for displaying content that spans multiple columns.  </p>\n<p> Setting the row template is necessary when external data is displayed using custom types derived from the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> class. With unbound <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> controls, you can programmatically populate the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Rows_\" data-linktype=\"relative-path\">Rows</a> collection with instances of your custom row type. When displaying external data, however, the rows are generated automatically, but they are based on the row template, which you can set to an instance of your custom row type.  </p>\n<p> If this property has not been set the first time you retrieve its value, a new <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> is created and returned.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use the row template to specify an initial row height and a minimum row height.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.RowTemplate#1\">      DataGridViewRow^ row = this-&gt;dataGridView1-&gt;RowTemplate;\n      row-&gt;DefaultCellStyle-&gt;BackColor = Color::Bisque;\n      row-&gt;Height = 35;\n      row-&gt;MinimumHeight = 20;\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.RowTemplate#1\">        DataGridViewRow row = this.dataGridView1.RowTemplate;\n        row.DefaultCellStyle.BackColor = Color.Bisque;\n        row.Height = 35;\n        row.MinimumHeight = 20;\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.RowTemplate#1\">        With Me.dataGridView1.RowTemplate\n            .DefaultCellStyle.BackColor = Color.Bisque\n            .Height = 35\n            .MinimumHeight = 20\n        End With\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ScrollBars\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ScrollBars_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ScrollBars</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the type of scroll bars to display for the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.ScrollBars ScrollBars { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.scrollbars\" data-linktype=\"relative-path\">ScrollBars</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.scrollbars\" data-linktype=\"relative-path\">ScrollBars</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.scrollbars\" data-linktype=\"relative-path\">ScrollBars</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is not a valid <a class=\"xref\" href=\"system.windows.forms.scrollbars\" data-linktype=\"relative-path\">ScrollBars</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The value of this property cannot be set because the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is unable to scroll due to a cell change that cannot be committed or canceled.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Regardless of the value of this property, scroll bars are shown only when they are needed. Use this property to prevent scroll bars from appearing. This is useful, for example, when you want to provide an alternative user interface (UI) for scrolling.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_SelectedCells\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_SelectedCells_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedCells</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of cells selected by the user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewSelectedCellCollection SelectedCells { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewselectedcellcollection\" data-linktype=\"relative-path\">DataGridViewSelectedCellCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewselectedcellcollection\" data-linktype=\"relative-path\">DataGridViewSelectedCellCollection</a> that represents the cells selected by the user.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The SelectedCells property is always populated regardless of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a> property value.  </p>\n<p> This property contains a read-only snapshot of the selection at the time it is referenced. If you hold onto a copy of this collection, it may differ from the actual, subsequent <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> state in which the user may have changed the selection. Therefore, you should not operate on a copy of the collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the SelectedCells collection to find the sum of the values in the selection. In the example, this collection is iterated through and the valid values are added to the sum, which is displayed in a label. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"relative-path\">SelectionChanged</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewSelectionSum#10\">    private void UpdateLabelText()\n    {\n        int WithdrawalTotal = 0;\n        int DepositTotal = 0;\n        int SelectedCellTotal = 0;\n        int counter;\n\n        // Iterate through all the rows and sum up the appropriate columns.\n        for (counter = 0; counter &lt; (DataGridView1.Rows.Count);\n            counter++)\n        {\n            if (DataGridView1.Rows[counter].Cells[&quot;Withdrawals&quot;].Value\n                != null)\n            {\n                if (DataGridView1.Rows[counter].\n                    Cells[&quot;Withdrawals&quot;].Value.ToString().Length != 0)\n                {\n                    WithdrawalTotal += int.Parse(DataGridView1.Rows[counter].\n                        Cells[&quot;Withdrawals&quot;].Value.ToString());\n                }\n            }\n\n            if (DataGridView1.Rows[counter].Cells[&quot;Deposits&quot;].Value != null)\n            {\n                if (DataGridView1.Rows[counter]\n                    .Cells[&quot;Deposits&quot;].Value.ToString().Length != 0)\n                {\n                    DepositTotal += int.Parse(DataGridView1.Rows[counter]\n                        .Cells[&quot;Deposits&quot;].Value.ToString());\n                }\n            }\n        }\n\n        // Iterate through the SelectedCells collection and sum up the values.\n        for (counter = 0;\n            counter &lt; (DataGridView1.SelectedCells.Count); counter++)\n        {\n            if (DataGridView1.SelectedCells[counter].FormattedValueType ==\n                Type.GetType(&quot;System.String&quot;))\n            {\n                string value = null;\n\n                // If the cell contains a value that has not been commited,\n                // use the modified value.\n                if (DataGridView1.IsCurrentCellDirty == true)\n                {\n\n                    value = DataGridView1.SelectedCells[counter]\n                        .EditedFormattedValue.ToString();\n                }\n                else\n                {\n                    value = DataGridView1.SelectedCells[counter]\n                        .FormattedValue.ToString();\n                }\n                if (value != null)\n                {\n                    // Ignore cells in the Description column.\n                    if (DataGridView1.SelectedCells[counter].ColumnIndex !=\n                        DataGridView1.Columns[&quot;Description&quot;].Index)\n                    {\n                        if (value.Length != 0)\n                        {\n                            SelectedCellTotal += int.Parse(value);\n                        }\n                    }\n                }\n            }\n        }\n\n        // Set the labels to reflect the current state of the DataGridView.\n        Label1.Text = &quot;Withdrawals Total: &quot; + WithdrawalTotal.ToString();\n        Label2.Text = &quot;Deposits Total: &quot; + DepositTotal.ToString();\n        Label3.Text = &quot;Selected Cells Total: &quot; + SelectedCellTotal.ToString();\n        Label4.Text = &quot;Total entries: &quot; + DataGridView1.RowCount.ToString();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewSelectionSum#10\">    Private Sub UpdateLabelText()\n        Dim WithdrawalTotal As Integer = 0\n        Dim DepositTotal As Integer = 0\n        Dim SelectedCellTotal As Integer = 0\n        Dim counter As Integer\n\n        &#39; Iterate through all the rows and sum up the appropriate columns.\n        For counter = 0 To (DataGridView1.Rows.Count - 1)\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Withdrawals&quot;).Value Is Nothing Then\n\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Withdrawals&quot;).Value.ToString().Length = 0 Then\n\n                    WithdrawalTotal += _\n                        Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Withdrawals&quot;).Value.ToString())\n                End If\n            End If\n\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Deposits&quot;).Value Is Nothing Then\n\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Deposits&quot;).Value.ToString().Length = 0 Then\n\n                    DepositTotal += _\n                        Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Deposits&quot;).Value.ToString())\n                End If\n            End If\n        Next\n\n        &#39; Iterate through the SelectedCells collection and sum up the values.\n        For counter = 0 To (DataGridView1.SelectedCells.Count - 1)\n            If DataGridView1.SelectedCells(counter).FormattedValueType Is _\n            Type.GetType(&quot;System.String&quot;) Then\n\n                Dim value As String = Nothing\n\n                &#39; If the cell contains a value that has not been commited,\n                &#39; use the modified value.\n                If (DataGridView1.IsCurrentCellDirty = True) Then\n\n                    value = DataGridView1.SelectedCells(counter) _\n                        .EditedFormattedValue.ToString()\n                Else\n\n                    value = DataGridView1.SelectedCells(counter) _\n                        .FormattedValue.ToString()\n                End If\n\n                If value IsNot Nothing Then\n\n                    &#39; Ignore cells in the Description column.\n                    If Not DataGridView1.SelectedCells(counter).ColumnIndex = _\n                        DataGridView1.Columns(&quot;Description&quot;).Index Then\n\n                        If Not value.Length = 0 Then\n                            SelectedCellTotal += Integer.Parse(value)\n                        End If\n                    End If\n                End If\n            End If\n\n        Next\n\n        &#39; Set the labels to reflect the current state of the DataGridView.\n        Label1.Text = &quot;Withdrawals Total: &quot; &amp; WithdrawalTotal.ToString()\n        Label2.Text = &quot;Deposits Total: &quot; &amp; DepositTotal.ToString()\n        Label3.Text = &quot;Selected Cells Total: &quot; &amp; SelectedCellTotal.ToString()\n        Label4.Text = &quot;Total entries: &quot; &amp; DataGridView1.RowCount.ToString()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_SelectedColumns\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_SelectedColumns_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedColumns</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of columns selected by the user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewSelectedColumnCollection SelectedColumns { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewselectedcolumncollection\" data-linktype=\"relative-path\">DataGridViewSelectedColumnCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewselectedcolumncollection\" data-linktype=\"relative-path\">DataGridViewSelectedColumnCollection</a> that represents the columns selected by the user.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a> property must be set to <a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewSelectionMode</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewSelectionMode</a> for the SelectedColumns property to be populated with selected columns.  </p>\n<p> This property contains a read-only snapshot of the selection at the time it is referenced. If you hold onto a copy of this collection, it may differ from the actual, subsequent <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> state in which the user may have changed the selection. Therefore, you should not operate on a copy of the collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the SelectedColumns property to get the selected column in a programmatic sort. In this example, this property is used in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Sort_\" data-linktype=\"relative-path\">Sort</a> method to determine the direction of the sort.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DatagridViewProgrammaticSort#10\">    private void sortButton_Click(object sender, System.EventArgs e)\n    {\n        // Check which column is selected, otherwise set NewColumn to null.\n        DataGridViewColumn newColumn =\n            dataGridView1.Columns.GetColumnCount(\n            DataGridViewElementStates.Selected) == 1 ?\n            dataGridView1.SelectedColumns[0] : null;\n\n        DataGridViewColumn oldColumn = dataGridView1.SortedColumn;\n        ListSortDirection direction;\n\n        // If oldColumn is null, then the DataGridView is not currently sorted.\n        if (oldColumn != null)\n        {\n            // Sort the same column again, reversing the SortOrder.\n            if (oldColumn == newColumn &amp;&amp;\n                dataGridView1.SortOrder == SortOrder.Ascending)\n            {\n                direction = ListSortDirection.Descending;\n            }\n            else\n            {\n                // Sort a new column and remove the old SortGlyph.\n                direction = ListSortDirection.Ascending;\n                oldColumn.HeaderCell.SortGlyphDirection = SortOrder.None;\n            }\n        }\n        else\n        {\n            direction = ListSortDirection.Ascending;\n        }\n\n        // If no column has been selected, display an error dialog  box.\n        if (newColumn == null)\n        {\n            MessageBox.Show(&quot;Select a single column and try again.&quot;,\n                &quot;Error: Invalid Selection&quot;, MessageBoxButtons.OK,\n                MessageBoxIcon.Error);\n        }\n        else\n        {\n            dataGridView1.Sort(newColumn, direction);\n            newColumn.HeaderCell.SortGlyphDirection =\n                direction == ListSortDirection.Ascending ?\n                SortOrder.Ascending : SortOrder.Descending;\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DatagridViewProgrammaticSort#10\">    Private Sub SortButton_Click(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles sortButton.Click\n\n        &#39; Check which column is selected, otherwise set NewColumn to Nothing.\n        Dim newColumn As DataGridViewColumn\n        If dataGridView1.Columns.GetColumnCount(DataGridViewElementStates _\n            .Selected) = 1 Then\n            newColumn = dataGridView1.SelectedColumns(0)\n        Else\n            newColumn = Nothing\n        End If\n\n        Dim oldColumn As DataGridViewColumn = dataGridView1.SortedColumn\n        Dim direction As ListSortDirection\n\n        &#39; If oldColumn is null, then the DataGridView is not currently sorted.\n        If oldColumn IsNot Nothing Then\n\n            &#39; Sort the same column again, reversing the SortOrder.\n            If oldColumn Is newColumn AndAlso dataGridView1.SortOrder = _\n                SortOrder.Ascending Then\n                direction = ListSortDirection.Descending\n            Else\n\n                &#39; Sort a new column and remove the old SortGlyph.\n                direction = ListSortDirection.Ascending\n                oldColumn.HeaderCell.SortGlyphDirection = SortOrder.None\n            End If\n        Else\n            direction = ListSortDirection.Ascending\n        End If\n\n\n        &#39; If no column has been selected, display an error dialog  box.\n        If newColumn Is Nothing Then\n            MessageBox.Show(&quot;Select a single column and try again.&quot;, _\n                &quot;Error: Invalid Selection&quot;, MessageBoxButtons.OK, _\n                MessageBoxIcon.Error)\n        Else\n            dataGridView1.Sort(newColumn, direction)\n            If direction = ListSortDirection.Ascending Then\n                newColumn.HeaderCell.SortGlyphDirection = SortOrder.Ascending\n            Else\n                newColumn.HeaderCell.SortGlyphDirection = SortOrder.Descending\n            End If\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_SelectedRows\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_SelectedRows_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectedRows</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of rows selected by the user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewSelectedRowCollection SelectedRows { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewselectedrowcollection\" data-linktype=\"relative-path\">DataGridViewSelectedRowCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewselectedrowcollection\" data-linktype=\"relative-path\">DataGridViewSelectedRowCollection</a> that contains the rows selected by the user.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a> property must be set to <a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">DataGridViewSelectionMode</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">DataGridViewSelectionMode</a> for the SelectedRows property to be populated with selected rows.  </p>\n<p> This property contains a read-only snapshot of the selection at the time it is referenced. If you hold onto a copy of this collection, it may differ from the actual, subsequent <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> state in which the user may have changed the selection. You should therefore not operate on a copy of the collection.  </p>\n<p> To programmatically select a row, set its <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_Selected_\" data-linktype=\"relative-path\">Selected</a>property to <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the SelectedRows property in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_UserDeletingRow\" data-linktype=\"relative-path\">UserDeletingRow</a> event. In this example, if the first row is contained in the SelectedRows collection, then the deletion is canceled. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"relative-path\">SelectionChanged</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewSelectionSum#20\">    private void DataGridView1_UserDeletingRow(object sender,\n        DataGridViewRowCancelEventArgs e)\n    {\n        DataGridViewRow startingBalanceRow = DataGridView1.Rows[0];\n\n        // Check if the Starting Balance row is included in the selected rows\n        if (DataGridView1.SelectedRows.Contains(startingBalanceRow))\n        {\n            // Do not allow the user to delete the Starting Balance row.\n            MessageBox.Show(&quot;Cannot delete Starting Balance row!&quot;);\n\n            // Cancel the deletion if the Starting Balance row is included.\n            e.Cancel = true;\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewSelectionSum#20\">    Private Sub UserDeletingRow(ByVal sender As Object, _\n        ByVal e As DataGridViewRowCancelEventArgs) _\n        Handles DataGridView1.UserDeletingRow\n\n        Dim startingBalanceRow As DataGridViewRow = DataGridView1.Rows(0)\n\n        &#39; Check if the starting balance row is included in the selected rows\n        If DataGridView1.SelectedRows.Contains(startingBalanceRow) Then\n            &#39; Do not allow the user to delete the Starting Balance row.\n            MessageBox.Show(&quot;Cannot delete Starting Balance row!&quot;)\n\n            &#39; Cancel the deletion if the Starting Balance row is included.\n            e.Cancel = True\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_SelectionMode\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_SelectionMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectionMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating how the cells of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> can be selected.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewSelectionMode SelectionMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">DataGridViewSelectionMode</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">DataGridViewSelectionMode</a> values. The default is <a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">DataGridViewSelectionMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">DataGridViewSelectionMode</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified value when setting this property is <a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">DataGridViewSelectionMode</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">DataGridViewSelectionMode</a> and the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.SortMode*</span> property of one or more columns is set to <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnsortmode\" data-linktype=\"relative-path\">DataGridViewColumnSortMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Changing the value of the SelectionMode property clears the current selection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to set the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">ColumnHeadersDefaultCellStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeRowsMode_\" data-linktype=\"relative-path\">AutoSizeRowsMode</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersBorderStyle_\" data-linktype=\"relative-path\">ColumnHeadersBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBorderStyle_\" data-linktype=\"relative-path\">CellBorderStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GridColor_\" data-linktype=\"relative-path\">GridColor</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_BackgroundColor_\" data-linktype=\"relative-path\">BackgroundColor</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersVisible_\" data-linktype=\"relative-path\">RowHeadersVisible</a>, SelectionMode, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnCount_\" data-linktype=\"relative-path\">ColumnCount</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_MultiSelect_\" data-linktype=\"relative-path\">MultiSelect</a> properties. In addition, the code example demonstrates how to set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Name_\" data-linktype=\"relative-path\">Name</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> properties. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code>, and then call the <code>SetUpDataGridView</code> method from the form&#39;s constructor or <a class=\"xref\" href=\"system.windows.forms.form#System_Windows_Forms_Form_Load\" data-linktype=\"relative-path\">Load</a> event handler. Ensure all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewUnbound#5\">    Private Sub SetUpDataGridView()\n\n        Me.Controls.Add(dataGridView1)\n        dataGridView1.ColumnCount = 5\n\n        With dataGridView1.ColumnHeadersDefaultCellStyle\n            .BackColor = Color.Navy\n            .ForeColor = Color.White\n            .Font = New Font(dataGridView1.Font, FontStyle.Bold)\n        End With\n\n        With dataGridView1\n            .EditMode = DataGridViewEditMode.EditOnEnter\n            .Name = &quot;dataGridView1&quot;\n            .Location = New Point(8, 8)\n            .Size = New Size(500, 300)\n            .AutoSizeRowsMode = _\n                DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders\n            .ColumnHeadersBorderStyle = _\n                DataGridViewHeaderBorderStyle.Raised\n            .CellBorderStyle = _\n                DataGridViewCellBorderStyle.Single\n            .GridColor = SystemColors.ActiveBorder\n            .RowHeadersVisible = False\n\n            .Columns(0).Name = &quot;Release Date&quot;\n            .Columns(1).Name = &quot;Track&quot;\n            .Columns(1).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter\n            .Columns(2).Name = &quot;Title&quot;\n            .Columns(3).Name = &quot;Artist&quot;\n            .Columns(4).Name = &quot;Album&quot;\n\n            &#39; Make the font italic for row four.\n            .Columns(4).DefaultCellStyle.Font = _\n                New Font(Control.DefaultFont, _\n                    FontStyle.Italic)\n\n            .SelectionMode = _\n                DataGridViewSelectionMode.FullRowSelect\n            .MultiSelect = False\n\n            .BackgroundColor = Color.Honeydew\n\n            .Dock = DockStyle.Fill\n        End With\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewUnbound#5\">   void SetUpDataGridView()\n   {\n      this-&gt;Controls-&gt;Add( dataGridView1 );\n      dataGridView1-&gt;ColumnCount = 5;\n      DataGridViewCellStyle^ style = dataGridView1-&gt;ColumnHeadersDefaultCellStyle;\n      style-&gt;BackColor = Color::Navy;\n      style-&gt;ForeColor = Color::White;\n      style-&gt;Font = gcnew System::Drawing::Font( dataGridView1-&gt;Font,FontStyle::Bold );\n      dataGridView1-&gt;EditMode = DataGridViewEditMode::EditOnEnter;\n      dataGridView1-&gt;Name = &quot;dataGridView1&quot;;\n      dataGridView1-&gt;Location = Point(8,8);\n      dataGridView1-&gt;Size = System::Drawing::Size( 500, 300 );\n      dataGridView1-&gt;AutoSizeRowsMode = DataGridViewAutoSizeRowsMode::DisplayedCellsExceptHeaders;\n      dataGridView1-&gt;ColumnHeadersBorderStyle = DataGridViewHeaderBorderStyle::Raised;\n      dataGridView1-&gt;CellBorderStyle = DataGridViewCellBorderStyle::Single;\n      dataGridView1-&gt;GridColor = SystemColors::ActiveBorder;\n      dataGridView1-&gt;RowHeadersVisible = false;\n      dataGridView1-&gt;Columns[ 0 ]-&gt;Name = &quot;Release Date&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;Name = &quot;Track&quot;;\n      dataGridView1-&gt;Columns[ 1 ]-&gt;DefaultCellStyle-&gt;Alignment = DataGridViewContentAlignment::MiddleCenter;\n      dataGridView1-&gt;Columns[ 2 ]-&gt;Name = &quot;Title&quot;;\n      dataGridView1-&gt;Columns[ 3 ]-&gt;Name = &quot;Artist&quot;;\n      dataGridView1-&gt;Columns[ 4 ]-&gt;Name = &quot;Album&quot;;\n\n      // Make the font italic for row four.\n      dataGridView1-&gt;Columns[ 4 ]-&gt;DefaultCellStyle-&gt;Font = gcnew System::Drawing::Font( DataGridView::DefaultFont,FontStyle::Italic );\n      dataGridView1-&gt;SelectionMode = DataGridViewSelectionMode::FullRowSelect;\n      dataGridView1-&gt;MultiSelect = false;\n      dataGridView1-&gt;BackgroundColor = Color::Honeydew;\n      dataGridView1-&gt;Dock = DockStyle::Fill;\n      dataGridView1-&gt;CellFormatting += gcnew DataGridViewCellFormattingEventHandler( this, &amp;Form1::dataGridView1_CellFormatting );\n      dataGridView1-&gt;CellParsing += gcnew DataGridViewCellParsingEventHandler( this, &amp;Form1::dataGridView1_CellParsing );\n      addNewRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::addNewRowButton_Click );\n      deleteRowButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::deleteRowButton_Click );\n      ledgerStyleButton-&gt;Click += gcnew EventHandler( this, &amp;Form1::ledgerStyleButton_Click );\n      dataGridView1-&gt;CellValidating += gcnew DataGridViewCellValidatingEventHandler( this, &amp;Form1::dataGridView1_CellValidating );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewUnbound#5\">    private void SetUpDataGridView()\n    {\n        this.Controls.Add(dataGridView1);\n        dataGridView1.ColumnCount = 5;\n        DataGridViewCellStyle style = \n            dataGridView1.ColumnHeadersDefaultCellStyle;\n        style.BackColor = Color.Navy;\n        style.ForeColor = Color.White;\n        style.Font = new Font(dataGridView1.Font, FontStyle.Bold);\n\n        dataGridView1.EditMode = DataGridViewEditMode.EditOnEnter;\n        dataGridView1.Name = &quot;dataGridView1&quot;;\n        dataGridView1.Location = new Point(8, 8);\n        dataGridView1.Size = new Size(500, 300);\n        dataGridView1.AutoSizeRowsMode = \n            DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders;\n        dataGridView1.ColumnHeadersBorderStyle = \n            DataGridViewHeaderBorderStyle.Raised;\n        dataGridView1.CellBorderStyle = DataGridViewCellBorderStyle.Single;\n        dataGridView1.GridColor = SystemColors.ActiveBorder;\n        dataGridView1.RowHeadersVisible = false;\n\n        dataGridView1.Columns[0].Name = &quot;Release Date&quot;;\n        dataGridView1.Columns[1].Name = &quot;Track&quot;;\n        dataGridView1.Columns[1].DefaultCellStyle.Alignment = \n            DataGridViewContentAlignment.MiddleCenter;\n        dataGridView1.Columns[2].Name = &quot;Title&quot;;\n        dataGridView1.Columns[3].Name = &quot;Artist&quot;;\n        dataGridView1.Columns[4].Name = &quot;Album&quot;;\n\n        // Make the font italic for row four.\n        dataGridView1.Columns[4].DefaultCellStyle.Font = new Font(DataGridView.DefaultFont, FontStyle.Italic);\n\n        dataGridView1.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\n        dataGridView1.MultiSelect = false;\n\n        dataGridView1.BackgroundColor = Color.Honeydew;\n\n        dataGridView1.Dock = DockStyle.Fill;\n\n        dataGridView1.CellFormatting += new DataGridViewCellFormattingEventHandler(dataGridView1_CellFormatting);\n        dataGridView1.CellParsing += new DataGridViewCellParsingEventHandler(dataGridView1_CellParsing);\n        addNewRowButton.Click += new EventHandler(addNewRowButton_Click);\n        deleteRowButton.Click += new EventHandler(deleteRowButton_Click);\n        ledgerStyleButton.Click += new EventHandler(ledgerStyleButton_Click);\n        dataGridView1.CellValidating += new DataGridViewCellValidatingEventHandler(dataGridView1_CellValidating);\n\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ShowCellErrors\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ShowCellErrors_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowCellErrors</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether to show cell errors.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShowCellErrors { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a red glyph will appear in a cell that fails validation; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ShowCellToolTips\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ShowCellToolTips_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowCellToolTips</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether or not ToolTips will show when the mouse pointer pauses on a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShowCellToolTips { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if cell ToolTips are enabled; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the value of this property is <code>true</code> and the mouse pointer is over a cell, the cell displays a ToolTip when one of the following conditions is met:  </p>\n<ul>\n<li><p>The value of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property is not <code>null</code> or the value of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property is <code>true</code>, and a handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellToolTipTextNeeded\" data-linktype=\"relative-path\">CellToolTipTextNeeded</a> event sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcelltooltiptextneededeventargs#System_Windows_Forms_DataGridViewCellToolTipTextNeededEventArgs_ToolTipText_\" data-linktype=\"relative-path\">ToolTipText</a> property to a value other than <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a>.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ToolTipText_\" data-linktype=\"relative-path\">ToolTipText</a> property of the cell has a value other than <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a>. Setting this property has no effect when there is a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellToolTipTextNeeded\" data-linktype=\"relative-path\">CellToolTipTextNeeded</a> event handler because getting the value of the property automatically raises the event and returns the ToolTip text specified in the event handler.  </p>\n</li>\n<li><p>The cell value is truncated in the cell display. When the value of the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ToolTipText_\" data-linktype=\"relative-path\">ToolTipText</a> property value is <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">System.String.Empty</a>, the full value of the truncated cell value is displayed in the ToolTip.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ShowEditingIcon\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ShowEditingIcon_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowEditingIcon</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether or not the editing glyph is visible in the row header of the cell being edited.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShowEditingIcon { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the editing glyph is visible; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The row header will display an editing glyph that looks like a pencil when the current cell is in edit mode and the user has made changes to the cell. The editing glyph is colored by using the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> property of the row header cell. The glyph is not rendered if there is not enough space to display it completely. For example, if the row header cell has its <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Value_\" data-linktype=\"relative-path\">Value</a> property set, the glyph is removed if there is not enough room for both the text and glyph.  </p>\n<p> The display of the editing glyph is controlled by the value of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_IsCurrentRowDirty_\" data-linktype=\"relative-path\">IsCurrentRowDirty</a> property in virtual mode. Otherwise, it is controlled by the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_IsCurrentCellDirty_\" data-linktype=\"relative-path\">IsCurrentCellDirty</a> property.  </p>\n<p> The standard glyph is not publicly exposed. To customize the glyph, you can create a custom <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheadercell\" data-linktype=\"relative-path\">DataGridViewRowHeaderCell</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ShowRowErrors\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ShowRowErrors_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowRowErrors</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether row headers will display error glyphs for each row that contains a data entry error.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShowRowErrors { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> indicates there is an error; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property indicates if there is an error in one of the cells in a row. If <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> is set to a value other than <a class=\"xref\" href=\"system.string#System_String_Empty\" data-linktype=\"relative-path\">Empty</a>, then an error glyph (<img src=\"add/media/vberrorprovidericon.gif\" alt=\"ErrorProvider icon\" title=\"ErrorProvider icon\" data-linktype=\"relative-path\">) is shown in the row header.  </p>\n<p> The default width of the row header includes enough room to display the error glyph, whether or not the glyph is displayed. If the row header size is adjusted so that there is not enough space to display the glyph completely, the glyph is not rendered.  </p>\n<p> Because row headers can display both text and glyphs, header content is displayed by priority, as follows:  </p>\n<ol>\n<li><p>Text displayed in the row header cell.  </p>\n</li>\n<li><p>The editing glyph.  </p>\n</li>\n<li><p>The error glyph.  </p>\n<p>For example, if the row width is decreased, the error glyph disappears first, then the standard glyph, then text.  </p>\n<p>Advanced users can customize the error glyph by developing a custom <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheadercell\" data-linktype=\"relative-path\">DataGridViewRowHeaderCell</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> class.</p>\n</li>\n</ol>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_SortedColumn\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_SortedColumn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SortedColumn</div>        \r\n          </div>\r\n    \r\n            <p>Gets the column by which the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> contents are currently sorted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewColumn SortedColumn { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a> by which the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> contents are currently sorted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is not sorted, this property will return <code>null</code>.  </p>\n<p> When the column indicated by this property has a <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_SortMode_\" data-linktype=\"relative-path\">SortMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnsortmode\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewColumnSortMode</a>, it will display a sorting glyph based on the value of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SortOrder_\" data-linktype=\"relative-path\">SortOrder</a> property.  </p>\n<p> When the column has a <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_SortMode_\" data-linktype=\"relative-path\">SortMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnsortmode\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewColumnSortMode</a>, you must display the sorting glyph yourself through the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnheadercell#System_Windows_Forms_DataGridViewColumnHeaderCell_SortGlyphDirection_\" data-linktype=\"relative-path\">SortGlyphDirection</a> property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The value of this property is not meaningful when you sort the control using custom sorting. For more information about custom sorting, see the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Sort_System_Collections_IComparer_\" data-linktype=\"relative-path\">Sort(IComparer)</a> method and the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SortCompare\" data-linktype=\"relative-path\">SortCompare</a> event.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the SortedColumn property in a programmatic sort.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewProgrammaticSort#10\">    private void sortButton_Click(object sender, System.EventArgs e)\n    {\n        // Check which column is selected, otherwise set NewColumn to null.\n        DataGridViewColumn newColumn =\n            dataGridView1.Columns.GetColumnCount(\n            DataGridViewElementStates.Selected) == 1 ?\n            dataGridView1.SelectedColumns[0] : null;\n\n        DataGridViewColumn oldColumn = dataGridView1.SortedColumn;\n        ListSortDirection direction;\n\n        // If oldColumn is null, then the DataGridView is not currently sorted.\n        if (oldColumn != null)\n        {\n            // Sort the same column again, reversing the SortOrder.\n            if (oldColumn == newColumn &amp;&amp;\n                dataGridView1.SortOrder == SortOrder.Ascending)\n            {\n                direction = ListSortDirection.Descending;\n            }\n            else\n            {\n                // Sort a new column and remove the old SortGlyph.\n                direction = ListSortDirection.Ascending;\n                oldColumn.HeaderCell.SortGlyphDirection = SortOrder.None;\n            }\n        }\n        else\n        {\n            direction = ListSortDirection.Ascending;\n        }\n\n        // If no column has been selected, display an error dialog  box.\n        if (newColumn == null)\n        {\n            MessageBox.Show(&quot;Select a single column and try again.&quot;,\n                &quot;Error: Invalid Selection&quot;, MessageBoxButtons.OK,\n                MessageBoxIcon.Error);\n        }\n        else\n        {\n            dataGridView1.Sort(newColumn, direction);\n            newColumn.HeaderCell.SortGlyphDirection =\n                direction == ListSortDirection.Ascending ?\n                SortOrder.Ascending : SortOrder.Descending;\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewProgrammaticSort#10\">    Private Sub SortButton_Click(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles sortButton.Click\n\n        &#39; Check which column is selected, otherwise set NewColumn to Nothing.\n        Dim newColumn As DataGridViewColumn\n        If dataGridView1.Columns.GetColumnCount(DataGridViewElementStates _\n            .Selected) = 1 Then\n            newColumn = dataGridView1.SelectedColumns(0)\n        Else\n            newColumn = Nothing\n        End If\n\n        Dim oldColumn As DataGridViewColumn = dataGridView1.SortedColumn\n        Dim direction As ListSortDirection\n\n        &#39; If oldColumn is null, then the DataGridView is not currently sorted.\n        If oldColumn IsNot Nothing Then\n\n            &#39; Sort the same column again, reversing the SortOrder.\n            If oldColumn Is newColumn AndAlso dataGridView1.SortOrder = _\n                SortOrder.Ascending Then\n                direction = ListSortDirection.Descending\n            Else\n\n                &#39; Sort a new column and remove the old SortGlyph.\n                direction = ListSortDirection.Ascending\n                oldColumn.HeaderCell.SortGlyphDirection = SortOrder.None\n            End If\n        Else\n            direction = ListSortDirection.Ascending\n        End If\n\n\n        &#39; If no column has been selected, display an error dialog  box.\n        If newColumn Is Nothing Then\n            MessageBox.Show(&quot;Select a single column and try again.&quot;, _\n                &quot;Error: Invalid Selection&quot;, MessageBoxButtons.OK, _\n                MessageBoxIcon.Error)\n        Else\n            dataGridView1.Sort(newColumn, direction)\n            If direction = ListSortDirection.Ascending Then\n                newColumn.HeaderCell.SortGlyphDirection = SortOrder.Ascending\n            Else\n                newColumn.HeaderCell.SortGlyphDirection = SortOrder.Descending\n            End If\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_SortOrder\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_SortOrder_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SortOrder</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the items in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control are sorted in ascending or descending order, or are not sorted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.SortOrder SortOrder { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.sortorder\" data-linktype=\"relative-path\">SortOrder</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.sortorder\" data-linktype=\"relative-path\">SortOrder</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is used to determine which sorting glyph appears when the column specified by the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SortedColumn_\" data-linktype=\"relative-path\">SortedColumn</a> property has a <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_SortMode_\" data-linktype=\"relative-path\">SortMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnsortmode\" data-linktype=\"relative-path\">DataGridViewColumnSortMode</a>. When the column has a <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_SortMode_\" data-linktype=\"relative-path\">SortMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnsortmode\" data-linktype=\"relative-path\">DataGridViewColumnSortMode</a>, you must display and hide the sorting glyph yourself through the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnheadercell#System_Windows_Forms_DataGridViewColumnHeaderCell_SortGlyphDirection_\" data-linktype=\"relative-path\">SortGlyphDirection</a> property. When the column has a <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_SortMode_\" data-linktype=\"relative-path\">SortMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnsortmode\" data-linktype=\"relative-path\">DataGridViewColumnSortMode</a>, you can display the sorting glyph, but space is not reserved for it if the column is automatically resized.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The value of this property is not meaningful when you sort the control using custom sorting. For more information about custom sorting, see the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Sort_\" data-linktype=\"relative-path\">Sort</a> method and the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SortCompare\" data-linktype=\"relative-path\">SortCompare</a> event.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the SortOrder property in a programmatic sort.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewProgrammaticSort#10\">    private void sortButton_Click(object sender, System.EventArgs e)\n    {\n        // Check which column is selected, otherwise set NewColumn to null.\n        DataGridViewColumn newColumn =\n            dataGridView1.Columns.GetColumnCount(\n            DataGridViewElementStates.Selected) == 1 ?\n            dataGridView1.SelectedColumns[0] : null;\n\n        DataGridViewColumn oldColumn = dataGridView1.SortedColumn;\n        ListSortDirection direction;\n\n        // If oldColumn is null, then the DataGridView is not currently sorted.\n        if (oldColumn != null)\n        {\n            // Sort the same column again, reversing the SortOrder.\n            if (oldColumn == newColumn &amp;&amp;\n                dataGridView1.SortOrder == SortOrder.Ascending)\n            {\n                direction = ListSortDirection.Descending;\n            }\n            else\n            {\n                // Sort a new column and remove the old SortGlyph.\n                direction = ListSortDirection.Ascending;\n                oldColumn.HeaderCell.SortGlyphDirection = SortOrder.None;\n            }\n        }\n        else\n        {\n            direction = ListSortDirection.Ascending;\n        }\n\n        // If no column has been selected, display an error dialog  box.\n        if (newColumn == null)\n        {\n            MessageBox.Show(&quot;Select a single column and try again.&quot;,\n                &quot;Error: Invalid Selection&quot;, MessageBoxButtons.OK,\n                MessageBoxIcon.Error);\n        }\n        else\n        {\n            dataGridView1.Sort(newColumn, direction);\n            newColumn.HeaderCell.SortGlyphDirection =\n                direction == ListSortDirection.Ascending ?\n                SortOrder.Ascending : SortOrder.Descending;\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewProgrammaticSort#10\">    Private Sub SortButton_Click(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles sortButton.Click\n\n        &#39; Check which column is selected, otherwise set NewColumn to Nothing.\n        Dim newColumn As DataGridViewColumn\n        If dataGridView1.Columns.GetColumnCount(DataGridViewElementStates _\n            .Selected) = 1 Then\n            newColumn = dataGridView1.SelectedColumns(0)\n        Else\n            newColumn = Nothing\n        End If\n\n        Dim oldColumn As DataGridViewColumn = dataGridView1.SortedColumn\n        Dim direction As ListSortDirection\n\n        &#39; If oldColumn is null, then the DataGridView is not currently sorted.\n        If oldColumn IsNot Nothing Then\n\n            &#39; Sort the same column again, reversing the SortOrder.\n            If oldColumn Is newColumn AndAlso dataGridView1.SortOrder = _\n                SortOrder.Ascending Then\n                direction = ListSortDirection.Descending\n            Else\n\n                &#39; Sort a new column and remove the old SortGlyph.\n                direction = ListSortDirection.Ascending\n                oldColumn.HeaderCell.SortGlyphDirection = SortOrder.None\n            End If\n        Else\n            direction = ListSortDirection.Ascending\n        End If\n\n\n        &#39; If no column has been selected, display an error dialog  box.\n        If newColumn Is Nothing Then\n            MessageBox.Show(&quot;Select a single column and try again.&quot;, _\n                &quot;Error: Invalid Selection&quot;, MessageBoxButtons.OK, _\n                MessageBoxIcon.Error)\n        Else\n            dataGridView1.Sort(newColumn, direction)\n            If direction = ListSortDirection.Ascending Then\n                newColumn.HeaderCell.SortGlyphDirection = SortOrder.Ascending\n            Else\n                newColumn.HeaderCell.SortGlyphDirection = SortOrder.Descending\n            End If\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_StandardTab\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_StandardTab_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StandardTab</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the TAB key moves the focus to the next control in the tab order rather than moving focus to the next cell in the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool StandardTab { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the TAB key moves the focus to the next control in the tab order; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Setting this property to <code>false</code> allows the TAB key to move the focus through the grid of cells. The following table describes how the cell focus changes when the given TAB key combinations are pressed.  </p>\n<table>\n<thead>\n<tr>\n<th>Key combination</th>\n<th>Result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>TAB</td>\n<td>If the StandardTab property is <code>false</code>, the focus moves to the next cell in the row. If the focus is in the last cell in the row, the focus moves to the first cell in the next row. If the focus is in the last cell in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>, the focus moves to the next control in the tab order.</td>\n</tr>\n<tr>\n<td>SHIFT+TAB</td>\n<td>If StandardTab is <code>false</code>, the focus moves to the previous cell in the row. If the focus is in the first cell in the row, the focus moves to the last cell in the previous row. If the focus is in the first cell in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>, the focus moves to the previous control in the tab order.</td>\n</tr>\n<tr>\n<td>CTRL+TAB</td>\n<td>The focus moves to the next control in the tab order.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_Text\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_Text_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Text</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the text associated with the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Text { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text associated with the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is not meaningful for this control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_TopLeftHeaderCell\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_TopLeftHeaderCell_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TopLeftHeaderCell</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the header cell located in the upper left corner of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridViewHeaderCell TopLeftHeaderCell { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewheadercell\" data-linktype=\"relative-path\">DataGridViewHeaderCell</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewheadercell\" data-linktype=\"relative-path\">DataGridViewHeaderCell</a> located at the upper left corner of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Setting this property allows you to set a value for the cell, associate a shortcut menu with it, or perform any other operations you can perform on a <a class=\"xref\" href=\"system.windows.forms.datagridviewheadercell\" data-linktype=\"relative-path\">DataGridViewHeaderCell</a>.  </p>\n<p> In applications designed for use with right-to-left languages, the cell represented by this property is typically in the upper-right corner.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses this property to display a value in the upper-left corner of a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. This value labels a child table in a master/detail scenario. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn\" data-linktype=\"relative-path\">DataGridViewComboBoxColumn</a> class overview topic.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80\">private:\n    void SetUpDataGridView2()\n    {\n        DataGridView2-&gt;Dock = DockStyle::Bottom;\n        DataGridView2-&gt;TopLeftHeaderCell-&gt;Value = &quot;Sales Details&quot;;\n        DataGridView2-&gt;RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode::AutoSizeToAllHeaders;\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80\">    private void SetUpDataGridView2()\n    {\n        DataGridView2.Dock = DockStyle.Bottom;\n        DataGridView2.TopLeftHeaderCell.Value = &quot;Sales Details&quot;;\n        DataGridView2.RowHeadersWidthSizeMode = \n            DataGridViewRowHeadersWidthSizeMode.AutoSizeToAllHeaders;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#80\">    Private Sub SetUpDataGridView2()\n        DataGridView2.Dock = DockStyle.Bottom\n        DataGridView2.TopLeftHeaderCell.Value = &quot;Sales Details&quot;\n        DataGridView2.RowHeadersWidthSizeMode = _\n        DataGridViewRowHeadersWidthSizeMode.AutoSizeToAllHeaders\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_UserSetCursor\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_UserSetCursor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserSetCursor</div>        \r\n          </div>\r\n    \r\n            <p>Gets the default or user-specified value of the <span class=\"xref\">stem.Windows.Forms.Control.Cursor*</span> property.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.Cursor UserSetCursor { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.cursor\" data-linktype=\"relative-path\">Cursor</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.cursor\" data-linktype=\"relative-path\">Cursor</a> representing the normal value of the <span class=\"xref\">stem.Windows.Forms.Control.Cursor*</span> property.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Although you can set the value of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Cursor_\" data-linktype=\"relative-path\">Cursor</a> property, its value can change depending on the location of the mouse pointer. Use this property to retrieve the value of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Cursor_\" data-linktype=\"relative-path\">Cursor</a> property in its normal state, which is either its default value, or a value specified in code.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_VerticalScrollBar\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_VerticalScrollBar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerticalScrollBar</div>        \r\n          </div>\r\n    \r\n            <p>Gets the vertical scroll bar of the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected System.Windows.Forms.ScrollBar VerticalScrollBar { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.scrollbar\" data-linktype=\"relative-path\">ScrollBar</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.scrollbar\" data-linktype=\"relative-path\">ScrollBar</a> representing the vertical scroll bar.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_VerticalScrollingOffset\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_VerticalScrollingOffset_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VerticalScrollingOffset</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of pixels by which the control is scrolled vertically.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int VerticalScrollingOffset { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of pixels by which the control is scrolled vertically.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_VirtualMode\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_VirtualMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VirtualMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether you have provided your own data-management operations for the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool VirtualMode { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> uses data-management operations that you provide; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Virtual mode is designed for use with very large stores of data. When the VirtualMode property is <code>true</code>, you create a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> with a set number of rows and columns and then handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueNeeded\" data-linktype=\"relative-path\">CellValueNeeded</a> event to populate the cells. Virtual mode requires implementation of an underlying data cache to handle the population, editing, and deletion of <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> cells based on actions of the user. For more information about implementing virtual mode, see <a href=\"../Topic/How%20to:%20Implement%20Virtual%20Mode%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Implement Virtual Mode in the Windows Forms DataGridView Control</a>.  </p>\n<p> You must use virtual mode to maintain the values of unbound columns when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control is in bound mode. Sorting by unbound columns in bound mode is not supported.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example code uses virtual mode to create a table of positive integers.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView._Virtual#0\">using System.IO;\nusing System.Collections.Generic;\nusing System.Windows.Forms;\nusing System.Drawing;\nusing System;\n\npublic class VirtualModeDemo : Form\n{\n    DataGridView dataGridView1 = new DataGridView();\n\n    public VirtualModeDemo()\n        : base()\n    {\n        Text = &quot;DataGridView virtual-mode demo (cell-level commit scope)&quot;;\n        dataGridView1.NewRowNeeded +=\n            new DataGridViewRowEventHandler(dataGridView1_NewRowNeeded);\n        dataGridView1.RowsAdded +=\n            new DataGridViewRowsAddedEventHandler(dataGridView1_RowsAdded);\n        dataGridView1.CellValidating +=\n            new DataGridViewCellValidatingEventHandler(dataGridView1_CellValidating);\n        dataGridView1.CellValueNeeded +=\n            new DataGridViewCellValueEventHandler(dataGridView1_CellValueNeeded);\n        dataGridView1.CellValuePushed +=\n            new DataGridViewCellValueEventHandler(dataGridView1_CellValuePushed);\n\n        Controls.Add(dataGridView1);\n        dataGridView1.VirtualMode = true;\n        dataGridView1.AllowUserToDeleteRows = false;\n        dataGridView1.Columns.Add(&quot;Numbers&quot;, &quot;Positive Numbers&quot;);\n        dataGridView1.Rows.AddCopies(0, initialSize);\n    }\n\n    bool newRowNeeded;\n    private void dataGridView1_NewRowNeeded(object sender,\n        DataGridViewRowEventArgs e)\n    {\n        newRowNeeded = true;\n    }\n\n    const int initialSize = 5000000;\n    int numberOfRows = initialSize;\n\n    private void dataGridView1_RowsAdded(object sender,\n         DataGridViewRowsAddedEventArgs e)\n    {\n        if (newRowNeeded)\n        {\n            newRowNeeded = false;\n            numberOfRows = numberOfRows + 1;\n        }\n    }\n\n    #region &quot;data store maintance&quot;\n    const int initialValue = -1;\n\n    private void dataGridView1_CellValueNeeded(object sender,\n        DataGridViewCellValueEventArgs e)\n    {\n        if (store.ContainsKey(e.RowIndex))\n        {\n            // Use the store if the e value has been modified \n            // and stored.            \n            e.Value = store[e.RowIndex];\n        }\n        else if (newRowNeeded &amp;&amp; e.RowIndex == numberOfRows)\n        {\n            if (dataGridView1.IsCurrentCellInEditMode)\n            {\n                e.Value = initialValue;\n            }\n            else\n            {\n                // Show a blank value if the cursor is just resting\n                // on the last row.\n                e.Value = String.Empty;\n            }\n        }\n        else\n        {\n            e.Value = e.RowIndex;\n        }\n    }\n\n    private void dataGridView1_CellValuePushed(object sender,\n        DataGridViewCellValueEventArgs e)\n    {\n        store.Add(e.RowIndex, int.Parse(e.Value.ToString()));\n    }\n    #endregion\n\n    private Dictionary&lt;int, int&gt; store = new Dictionary&lt;int, int&gt;();\n\n    private void dataGridView1_CellValidating(object sender,\n        DataGridViewCellValidatingEventArgs e)\n    {\n        dataGridView1.Rows[e.RowIndex].ErrorText = &quot;&quot;;\n        int newInteger;\n\n        // Don&#39;t try to validate the &#39;new row&#39; until finished \n        // editing since there\n        // is not any point in validating its initial value.\n        if (dataGridView1.Rows[e.RowIndex].IsNewRow) { return; }\n        if (!int.TryParse(e.FormattedValue.ToString(),\n            out newInteger) || newInteger &lt; 0)\n        {\n            e.Cancel = true;\n            dataGridView1.Rows[e.RowIndex].ErrorText = &quot;the value must be a non-negative integer&quot;;\n        }\n    }\n\n    [STAThreadAttribute()]\n    public static void Main()\n    {\n        Application.Run(new VirtualModeDemo());\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView._Virtual#0\">Imports System.IO\nImports System.Collections.Generic\nImports System.Windows.Forms\n\nPublic Class VirtualModeDemo\n    Inherits System.Windows.Forms.Form\n\n    Dim WithEvents dataGridView1 As New DataGridView\n\n    Public Sub New()\n\n        MyBase.New()\n\n        Text = &quot;DataGridView virtual-mode demo (cell-level commit scope)&quot;\n\n        Controls.Add(dataGridView1)\n        dataGridView1.VirtualMode = True\n        dataGridView1.AllowUserToDeleteRows = False\n        dataGridView1.Columns.Add(&quot;Numbers&quot;, &quot;Positive Numbers&quot;)\n        dataGridView1.Rows.AddCopies(0, initialSize)\n\n    End Sub\n\n    Dim newRowNeeded As Boolean\n\n    Private Sub dataGridView1_NewRowNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewRowEventArgs) _\n        Handles dataGridView1.NewRowNeeded\n\n        newRowNeeded = True\n    End Sub\n\n    Const initialSize As Integer = 5000000\n    Dim numberOfRows As Integer = initialSize\n\n    Private Sub dataGridView1_RowsAdded(ByVal sender As Object, _\n        ByVal e As DataGridViewRowsAddedEventArgs) _\n        Handles dataGridView1.RowsAdded\n\n        If newRowNeeded Then\n            newRowNeeded = False\n            numberOfRows = numberOfRows + 1\n        End If\n    End Sub\n\n#Region &quot;data store maintance&quot;\n    Const initialValue As Integer = -1\n\n    Private Sub dataGridView1_CellValueNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValueNeeded\n\n        If store.ContainsKey(e.RowIndex) Then\n            &#39; Use the store if the e value has been modified \n            &#39; and stored.\n            e.Value = store(e.RowIndex)\n        ElseIf newRowNeeded AndAlso e.RowIndex = numberOfRows Then\n            If dataGridView1.IsCurrentCellInEditMode Then\n                e.Value = initialValue\n            Else\n                &#39; Show a blank value if the cursor is just resting\n                &#39; on the last row.\n                e.Value = String.Empty\n            End If\n        Else\n            e.Value = e.RowIndex\n        End If\n    End Sub\n\n    Private Sub dataGridView1_CellValuePushed(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValuePushed\n\n        store.Add(e.RowIndex, CInt(e.Value))\n\n    End Sub\n#End Region\n\n    Dim store As System.Collections.Generic.Dictionary(Of Integer, Integer) = _\n        New Dictionary(Of Integer, Integer)\n\n    Private Sub dataGridView1_CellValidating(ByVal sender As Object, _\n        ByVal e _\n        As DataGridViewCellValidatingEventArgs) _\n        Handles dataGridView1.CellValidating\n\n        Me.dataGridView1.Rows(e.RowIndex).ErrorText = &quot;&quot;\n        Dim newInteger As Integer\n\n        &#39; Don&#39;t try to validate the &#39;new row&#39; until finished \n        &#39; editing since there\n        &#39; is not any point in validating its initial value.\n        If dataGridView1.Rows(e.RowIndex).IsNewRow Then Return\n        If Not Integer.TryParse(e.FormattedValue.ToString(), newInteger) _\n            OrElse newInteger &lt; 0 Then\n\n            e.Cancel = True\n            Me.dataGridView1.Rows(e.RowIndex).ErrorText = &quot;the value must be a non-negative integer&quot;\n\n        End If\n    End Sub\n\n    &lt;STAThreadAttribute()&gt; _\n    Public Shared Sub Main()\n        Application.Run(New VirtualModeDemo())\n    End Sub\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AccessibilityNotifyCurrentCellChanged_System_Drawing_Point_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AccessibilityNotifyCurrentCellChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AccessibilityNotifyCurrentCellChanged(Point)</div>        \r\n          </div>\r\n    \r\n            <p>Notifies the accessible client applications when a new cell becomes the current cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void AccessibilityNotifyCurrentCellChanged (System.Drawing.Point cellAddress);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>cellAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.point\" data-linktype=\"relative-path\">Point</a> indicating the row and column indexes of the new current cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Drawing.Point.X*</span> property of <code>cellAddress</code> is less than 0 or greater than the number of columns in the control minus 1.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Drawing.Point.Y*</span> property of <code>cellAddress</code> is less than 0 or greater than the number of rows in the control minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method converts the specified row and column indexes into <code>objectID</code> and <code>childID</code> parameters and calls the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_AccessibilityNotifyClients_System_Windows_Forms_AccessibleEvents_System_Int32_System_Int32_\" data-linktype=\"relative-path\">AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)</a> method overload twice using the <a class=\"xref\" href=\"system.windows.forms.accessibleevents\" data-linktype=\"relative-path\">AccessibleEvents</a> and <a class=\"xref\" href=\"system.windows.forms.accessibleevents\" data-linktype=\"relative-path\">AccessibleEvents</a> values of the <a class=\"xref\" href=\"system.windows.forms.accessibleevents\" data-linktype=\"relative-path\">AccessibleEvents</a> enumeration. The <code>objectID</code> and <code>childID</code> are determined by numbering only the visible rows and columns in their display order, counting the row or column headers if they are visible, and starting with 1. For example, if column headers are visible, the <code>objectID</code> for the first visible nonheader row is 2.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AdjustColumnHeaderBorderStyle_System_Windows_Forms_DataGridViewAdvancedBorderStyle_System_Windows_Forms_DataGridViewAdvancedBorderStyle_System_Boolean_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AdjustColumnHeaderBorderStyle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AdjustColumnHeaderBorderStyle(DataGridViewAdvancedBorderStyle,DataGridViewAdvancedBorderStyle,Boolean,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> for a column header cell of a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that is currently being painted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.DataGridViewAdvancedBorderStyle AdjustColumnHeaderBorderStyle (System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput, System.Windows.Forms.DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceholder, bool isFirstDisplayedColumn, bool isLastVisibleColumn);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataGridViewAdvancedBorderStyleInput</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> that that represents the column header border style to modify.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataGridViewAdvancedBorderStylePlaceholder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> that is used to store intermediate changes to the column header border style.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isFirstDisplayedColumn</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to indicate that the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> that is currently being painted is in the first column displayed on the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>isLastVisibleColumn</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to indicate that the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> that is currently being painted is in the last column in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that has the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.Visible*</span> property set to <code>true</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> that represents the border style for the current column header.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control internally calls the AdjustColumnHeaderBorderStyle method to determine the appearance of the borders for the column header cells. The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control typically uses the value of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AdvancedColumnHeadersBorderStyle_\" data-linktype=\"relative-path\">AdvancedColumnHeadersBorderStyle</a> property for the <code>dataGridViewAdvancedBorderStyleInput</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to override the AdjustColumnHeaderBorderStyle method to customize the borders of the column header cells. This code example is part of a larger example provided for the <a class=\"xref\" href=\"system.windows.forms.datagridviewadvancedborderstyle\" data-linktype=\"relative-path\">DataGridViewAdvancedBorderStyle</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewAdvancedBorderStyle#15\">        public override DataGridViewAdvancedBorderStyle AdjustColumnHeaderBorderStyle(\n            DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStyleInput,\n            DataGridViewAdvancedBorderStyle dataGridViewAdvancedBorderStylePlaceHolder,\n            bool firstDisplayedColumn,\n            bool lastVisibleColumn)\n        {\n            // Customize the left border of the first column header and the\n            // bottom border of all the column headers. Use the input style for \n            // all other borders.\n            dataGridViewAdvancedBorderStylePlaceHolder.Left = firstDisplayedColumn ?\n                DataGridViewAdvancedCellBorderStyle.OutsetDouble :\n                DataGridViewAdvancedCellBorderStyle.None;\n            dataGridViewAdvancedBorderStylePlaceHolder.Bottom =\n                DataGridViewAdvancedCellBorderStyle.Single;\n\n            dataGridViewAdvancedBorderStylePlaceHolder.Right =\n                dataGridViewAdvancedBorderStyleInput.Right;\n            dataGridViewAdvancedBorderStylePlaceHolder.Top =\n                dataGridViewAdvancedBorderStyleInput.Top;\n\n            return dataGridViewAdvancedBorderStylePlaceHolder;\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewAdvancedBorderStyle#15\">        Public Overrides Function AdjustColumnHeaderBorderStyle( _\n            ByVal dataGridViewAdvancedBorderStyleInput As DataGridViewAdvancedBorderStyle, _\n            ByVal dataGridViewAdvancedBorderStylePlaceHolder As DataGridViewAdvancedBorderStyle, _\n            ByVal firstDisplayedColumn As Boolean, ByVal lastVisibleColumn As Boolean) _\n            As DataGridViewAdvancedBorderStyle\n\n            &#39; Customize the left border of the first column header and the\n            &#39; bottom border of all the column headers. Use the input style for \n            &#39; all other borders.\n            If firstDisplayedColumn Then\n                dataGridViewAdvancedBorderStylePlaceHolder.Left = _\n                    DataGridViewAdvancedCellBorderStyle.OutsetDouble\n            Else\n                dataGridViewAdvancedBorderStylePlaceHolder.Left = _\n                    DataGridViewAdvancedCellBorderStyle.None\n            End If\n\n            With dataGridViewAdvancedBorderStylePlaceHolder\n                .Bottom = DataGridViewAdvancedCellBorderStyle.Single\n                .Right = dataGridViewAdvancedBorderStyleInput.Right\n                .Top = dataGridViewAdvancedBorderStyleInput.Top\n            End With\n\n            Return dataGridViewAdvancedBorderStylePlaceHolder\n        End Function\n    End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AreAllCellsSelected_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AreAllCellsSelected_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AreAllCellsSelected(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a value indicating whether all the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> cells are currently selected.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool AreAllCellsSelected (bool includeInvisibleCells);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>includeInvisibleCells</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to include the rows and columns with <span class=\"xref\">stem.Windows.Forms.DataGridViewBand.Visible*</span> property values of <code>false</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if all cells (or all visible cells) are selected or if there are no cells (or no visible cells); otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectedCells_\" data-linktype=\"relative-path\">SelectedCells</a> collection does not perform efficiently with large selections. To determine whether all the cells in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> have been selected before you access the contents of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectedCells_\" data-linktype=\"relative-path\">SelectedCells</a> collection, check the return value of the AreAllCellsSelected method. However, this method can cause rows to become unshared. For more information about <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> performance, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use this method to avoid calculations involving the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectedCells_\" data-linktype=\"relative-path\">SelectedCells</a> collection.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewSelectedCollections#10\">    private void selectedCellsButton_Click(object sender, System.EventArgs e)\n    {\n        Int32 selectedCellCount =\n            dataGridView1.GetCellCount(DataGridViewElementStates.Selected);\n        if (selectedCellCount &gt; 0)\n        {\n            if (dataGridView1.AreAllCellsSelected(true))\n            {\n                MessageBox.Show(&quot;All cells are selected&quot;, &quot;Selected Cells&quot;);\n            }\n            else\n            {\n                System.Text.StringBuilder sb =\n                    new System.Text.StringBuilder();\n\n                for (int i = 0;\n                    i &lt; selectedCellCount; i++)\n                {\n                    sb.Append(&quot;Row: &quot;);\n                    sb.Append(dataGridView1.SelectedCells[i].RowIndex\n                        .ToString());\n                    sb.Append(&quot;, Column: &quot;);\n                    sb.Append(dataGridView1.SelectedCells[i].ColumnIndex\n                        .ToString());\n                    sb.Append(Environment.NewLine);\n                }\n\n                sb.Append(&quot;Total: &quot; + selectedCellCount.ToString());\n                MessageBox.Show(sb.ToString(), &quot;Selected Cells&quot;);\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewSelectedCollections#10\">    Private Sub selectedCellsButton_Click( _\n        ByVal sender As Object, ByVal e As System.EventArgs) _\n        Handles selectedCellsButton.Click\n\n        Dim selectedCellCount As Integer = _\n            dataGridView1.GetCellCount(DataGridViewElementStates.Selected)\n\n        If selectedCellCount &gt; 0 Then\n\n            If dataGridView1.AreAllCellsSelected(True) Then\n\n                MessageBox.Show(&quot;All cells are selected&quot;, &quot;Selected Cells&quot;)\n\n            Else\n\n                Dim sb As New System.Text.StringBuilder()\n\n                Dim i As Integer\n                For i = 0 To selectedCellCount - 1\n\n                    sb.Append(&quot;Row: &quot;)\n                    sb.Append(dataGridView1.SelectedCells(i).RowIndex _\n                        .ToString())\n                    sb.Append(&quot;, Column: &quot;)\n                    sb.Append(dataGridView1.SelectedCells(i).ColumnIndex _\n                        .ToString())\n                    sb.Append(Environment.NewLine)\n\n                Next i\n\n                sb.Append(&quot;Total: &quot; + selectedCellCount.ToString())\n                MessageBox.Show(sb.ToString(), &quot;Selected Cells&quot;)\n\n            End If\n\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeColumn_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeColumn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeColumn(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the width of the specified column to fit the contents of all its cells, including the header cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AutoResizeColumn (int columnIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the column to resize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndex</code> is not in the valid range of 0 to the number of columns minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when a column resizes. The column width is adjusted only once per method call; if the contents of the column later change, the column will not automatically adjust. To resize all columns, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumns_\" data-linktype=\"relative-path\">AutoResizeColumns</a> method. To set the column to automatically resize whenever its contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeColumnsMode_\" data-linktype=\"relative-path\">AutoSizeColumnsMode</a> property or the column <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_AutoSizeMode_\" data-linktype=\"relative-path\">AutoSizeMode</a> property.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses this method to make the column width large enough to accommodate a new cell value. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Manipulate%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Manipulate Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#211\">   // Give cheescake excellent rating.\n   void Button8_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      UpdateStars( dataGridView-&gt;Rows[ 4 ], L&quot;******************&quot; );\n   }\n\n   int ratingColumn;\n   void UpdateStars( DataGridViewRow^ row, String^ stars )\n   {\n      row-&gt;Cells[ ratingColumn ]-&gt;Value = stars;\n      \n      // Resize the column width to account for the new value.\n      row-&gt;DataGridView-&gt;AutoResizeColumn( ratingColumn, DataGridViewAutoSizeColumnMode::DisplayedCells );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#211\">    // Give cheescake excellent rating.\n    private void Button8_Click(object sender,\n        System.EventArgs e)\n    {\n        UpdateStars(dataGridView.Rows[4], &quot;******************&quot;);\n    }\n\n    int ratingColumn = 3;\n\n    private void UpdateStars(DataGridViewRow row, string stars)\n    {\n\n        row.Cells[ratingColumn].Value = stars;\n\n        // Resize the column width to account for the new value.\n        row.DataGridView.AutoResizeColumn(ratingColumn, \n            DataGridViewAutoSizeColumnMode.DisplayedCells);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#211\">    &#39; Give cheescake excellent rating.\n    Private Sub Button8_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button8.Click\n\n        UpdateStars(dataGridView.Rows(4), &quot;******************&quot;)\n    End Sub\n\n    Private ratingColumn As Integer = 3\n\n    Private Sub UpdateStars(ByVal row As DataGridViewRow, _\n        ByVal stars As String)\n\n        row.Cells(ratingColumn).Value = stars\n\n        &#39; Resize the column width to account for the new value.\n        row.DataGridView.AutoResizeColumn(ratingColumn, _\n            DataGridViewAutoSizeColumnMode.DisplayedCells)\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeColumn_System_Int32_System_Windows_Forms_DataGridViewAutoSizeColumnMode_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeColumn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeColumn(Int32,DataGridViewAutoSizeColumnMode)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the width of the specified column using the specified size mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AutoResizeColumn (int columnIndex, System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the column to resize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>autoSizeColumnMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeColumnMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a> and <span class=\"xref\">stem.Windows.Forms.DataGridView.ColumnHeadersVisible*</span> is <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeColumnMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a>, or <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndex</code> is not in the valid range of 0 to the number of columns minus 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeColumnMode</code> is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when a column resizes. The column width is adjusted only once per method call; if the contents of the column later change, the column will not automatically adjust. To resize all columns, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumns_\" data-linktype=\"relative-path\">AutoResizeColumns</a> method. To set the column to automatically resize whenever its contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeColumnsMode_\" data-linktype=\"relative-path\">AutoSizeColumnsMode</a> property or the column <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_AutoSizeMode_\" data-linktype=\"relative-path\">AutoSizeMode</a> property.  </p>\n<p> This overload lets you specify a sizing mode that calculates the new width based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses this method to make the column width large enough to accommodate a new cell value. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Manipulate%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Manipulate Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#211\">   // Give cheescake excellent rating.\n   void Button8_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      UpdateStars( dataGridView-&gt;Rows[ 4 ], L&quot;******************&quot; );\n   }\n\n   int ratingColumn;\n   void UpdateStars( DataGridViewRow^ row, String^ stars )\n   {\n      row-&gt;Cells[ ratingColumn ]-&gt;Value = stars;\n      \n      // Resize the column width to account for the new value.\n      row-&gt;DataGridView-&gt;AutoResizeColumn( ratingColumn, DataGridViewAutoSizeColumnMode::DisplayedCells );\n   }\n\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#211\">    // Give cheescake excellent rating.\n    private void Button8_Click(object sender,\n        System.EventArgs e)\n    {\n        UpdateStars(dataGridView.Rows[4], &quot;******************&quot;);\n    }\n\n    int ratingColumn = 3;\n\n    private void UpdateStars(DataGridViewRow row, string stars)\n    {\n\n        row.Cells[ratingColumn].Value = stars;\n\n        // Resize the column width to account for the new value.\n        row.DataGridView.AutoResizeColumn(ratingColumn, \n            DataGridViewAutoSizeColumnMode.DisplayedCells);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#211\">    &#39; Give cheescake excellent rating.\n    Private Sub Button8_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button8.Click\n\n        UpdateStars(dataGridView.Rows(4), &quot;******************&quot;)\n    End Sub\n\n    Private ratingColumn As Integer = 3\n\n    Private Sub UpdateStars(ByVal row As DataGridViewRow, _\n        ByVal stars As String)\n\n        row.Cells(ratingColumn).Value = stars\n\n        &#39; Resize the column width to account for the new value.\n        row.DataGridView.AutoResizeColumn(ratingColumn, _\n            DataGridViewAutoSizeColumnMode.DisplayedCells)\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeColumn_System_Int32_System_Windows_Forms_DataGridViewAutoSizeColumnMode_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeColumn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeColumn(Int32,DataGridViewAutoSizeColumnMode,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the width of the specified column using the specified size mode, optionally calculating the width with the expectation that row heights will subsequently be adjusted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void AutoResizeColumn (int columnIndex, System.Windows.Forms.DataGridViewAutoSizeColumnMode autoSizeColumnMode, bool fixedHeight);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the column to resize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>autoSizeColumnMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fixedHeight</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to calculate the new width based on the current row heights; <code>false</code> to calculate the width with the expectation that the row heights will also be adjusted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeColumnMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a> and <span class=\"xref\">stem.Windows.Forms.DataGridView.ColumnHeadersVisible*</span> is <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeColumnMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a>, or <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndex</code> is not in the valid range of 0 to the number of columns minus 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeColumnMode</code> is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnMode</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when a column resizes. The column width is adjusted only once per method call; if the contents of the column later change, the column will not automatically adjust. To resize all columns, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumns_\" data-linktype=\"relative-path\">AutoResizeColumns</a> method. To set the column to automatically resize whenever its contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeColumnsMode_\" data-linktype=\"relative-path\">AutoSizeColumnsMode</a> property or the column <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_AutoSizeMode_\" data-linktype=\"relative-path\">AutoSizeMode</a> property.  </p>\n<p> This overload lets you specify a sizing mode that calculates the new width based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.  </p>\n<p> This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> class. If <code>fixedHeight</code> is <code>false</code>, the column width will be calculated with the expectation that you will call the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRow_\" data-linktype=\"relative-path\">AutoResizeRow</a> or <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRows_\" data-linktype=\"relative-path\">AutoResizeRows</a> method next.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeColumnHeadersHeight()</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the height of the column headers to fit the contents of the largest column header.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AutoResizeColumnHeadersHeight ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when the column headers resize. The height of the column headers is adjusted only once per method call; if the contents of the column headers later change, the column headers will not automatically adjust. To set the column headers to automatically resize when their contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersHeightSizeMode_\" data-linktype=\"relative-path\">ColumnHeadersHeightSizeMode</a> property.  </p>\n<p> For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to resize column headers and rows as a result of a button click.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewAutoSize#3\">   void Button1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Resize the height of the column headers. \n      dataGridView1-&gt;AutoResizeColumnHeadersHeight();\n\n      // Resize all the row heights to fit the contents of all non-header cells.\n      dataGridView1-&gt;AutoResizeRows(\n            DataGridViewAutoSizeRowsMode::AllCellsExceptHeaders);\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewAutoSize#3\">    private void button1_Click(object sender, System.EventArgs e)\n    {\n        // Resize the height of the column headers. \n        dataGridView1.AutoResizeColumnHeadersHeight();\n\n        // Resize all the row heights to fit the contents of all non-header cells.\n        dataGridView1.AutoResizeRows(\n            DataGridViewAutoSizeRowsMode.AllCellsExceptHeaders);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewAutoSize#3\">    Private Sub button1_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles button1.Click\n\n        &#39; Resize the height of the column headers. \n        dataGridView1.AutoResizeColumnHeadersHeight()\n\n        &#39; Resize all the row heights to fit the contents of all \n        &#39; non-header cells.\n        dataGridView1.AutoResizeRows( _\n            DataGridViewAutoSizeRowsMode.AllCellsExceptHeaders)\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeColumnHeadersHeight(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the height of the column headers based on changes to the contents of the header in the specified column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AutoResizeColumnHeadersHeight (int columnIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the column containing the header with the changed content.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndex</code> is not in the valid range of 0 to the number of columns minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when the column headers resize if only the contents of the header in the specified column have changed as a result of user edits or changes to a bound data source. The height of the column headers is adjusted only once per method call if the content change requires it; if the contents of the column headers later change, the column headers will not automatically adjust. To set the column headers to automatically resize when their contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersHeightSizeMode_\" data-linktype=\"relative-path\">ColumnHeadersHeightSizeMode</a> property.  </p>\n<p> For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight_System_Boolean_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeColumnHeadersHeight(Boolean,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the height of the column headers to fit their contents, optionally calculating the height with the expectation that the column and/or row header widths will subsequently be adjusted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void AutoResizeColumnHeadersHeight (bool fixedRowHeadersWidth, bool fixedColumnsWidth);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>fixedRowHeadersWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to calculate the new height based on the current width of the row headers; <code>false</code> to calculate the height with the expectation that the row headers width will also be adjusted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fixedColumnsWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to calculate the new height based on the current column widths; <code>false</code> to calculate the height with the expectation that the column widths will also be adjusted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when the column headers resize. The height of the column headers is adjusted only once per method call; if the contents of the column headers later change, the column headers will not automatically adjust. To set the column headers to automatically resize when their contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersHeightSizeMode_\" data-linktype=\"relative-path\">ColumnHeadersHeightSizeMode</a> property.  </p>\n<p> For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>.  </p>\n<p> This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> class. If the <code>fixedColumnsWidth</code> or <code>fixedRowHeadersWidth</code> parameters are <code>false</code>, the height of the column headers will be calculated with the expectation that you will call the methods such as <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumns_\" data-linktype=\"relative-path\">AutoResizeColumns</a> and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRowHeadersWidth_\" data-linktype=\"relative-path\">AutoResizeRowHeadersWidth</a> next.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight_System_Int32_System_Boolean_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeColumnHeadersHeight(Int32,Boolean,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the height of the column headers based on changes to the contents of the header in the specified column, optionally calculating the height with the expectation that the column and/or row header widths will subsequently be adjusted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void AutoResizeColumnHeadersHeight (int columnIndex, bool fixedRowHeadersWidth, bool fixedColumnWidth);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the column header whose contents should be used to determine new height.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fixedRowHeadersWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to calculate the new height based on the current width of the row headers; <code>false</code> to calculate the height with the expectation that the row headers width will also be adjusted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fixedColumnWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to calculate the new height based on the current width of the specified column; <code>false</code> to calculate the height with the expectation that the column width will also be adjusted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndex</code> is not in the valid range of 0 to the number of columns minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when the column headers resize if only the contents of the header in the specified column have changed as a result of user edits or changes to a bound data source. The height of the column headers is adjusted only once per method call if the content change requires it; if the contents of the column headers later change, the column headers will not automatically adjust. To set the column headers to automatically resize when their contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersHeightSizeMode_\" data-linktype=\"relative-path\">ColumnHeadersHeightSizeMode</a> property.  </p>\n<p> For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>.  </p>\n<p> This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> class. If the <code>fixedColumnWidth</code> or <code>fixedRowHeadersWidth</code> parameters are <code>false</code>, the height of the column headers will be calculated with the expectation that you will call the methods such as <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumns_\" data-linktype=\"relative-path\">AutoResizeColumns</a> and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRowHeadersWidth_\" data-linktype=\"relative-path\">AutoResizeRowHeadersWidth</a> next.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeColumns\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeColumns_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeColumns()</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the width of all columns to fit the contents of all their cells, including the header cells.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AutoResizeColumns ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when columns resize. The column widths are adjusted only once per method call; if the contents of the columns later change, the columns will not automatically adjust. To resize a specific column, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumn_\" data-linktype=\"relative-path\">AutoResizeColumn</a> method. To set the columns to automatically resize whenever their contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeColumnsMode_\" data-linktype=\"relative-path\">AutoSizeColumnsMode</a> property or the column <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_AutoSizeMode_\" data-linktype=\"relative-path\">AutoSizeMode</a> property.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example resizes all columns to fit the contents of the columns and the column headers. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Programmatically%20Resize%20Cells%20to%20Fit%20Content%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#3\">    private void SizeAllColumns(Object sender, EventArgs e)\n    {\n        dataGridView1.AutoResizeColumns(\n            DataGridViewAutoSizeColumnsMode.AllCells);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#3\">    Private Sub SizeAllColumns(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button6.Click\n\n        DataGridView1.AutoResizeColumns(DataGridViewAutoSizeColumnsMode.AllCells)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#3\">   void SizeAllColumns( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      dataGridView1-&gt;AutoResizeColumns( DataGridViewAutoSizeColumnsMode::AllCells );\n   }\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeColumns_System_Windows_Forms_DataGridViewAutoSizeColumnsMode_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeColumns_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeColumns(DataGridViewAutoSizeColumnsMode)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the width of all columns using the specified size mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AutoResizeColumns (System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>autoSizeColumnsMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeColumnsMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a> and <span class=\"xref\">stem.Windows.Forms.DataGridView.ColumnHeadersVisible*</span> is <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeColumnsMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeColumnsMode</code> is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when columns resize. The column widths are adjusted only once per method call; if the contents of the columns later change, the columns will not automatically adjust. To resize a specific column, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumn_\" data-linktype=\"relative-path\">AutoResizeColumn</a> method. To set the columns to automatically resize whenever their contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeColumnsMode_\" data-linktype=\"relative-path\">AutoSizeColumnsMode</a> property or the column <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_AutoSizeMode_\" data-linktype=\"relative-path\">AutoSizeMode</a> property.  </p>\n<p> This overload lets you specify a sizing mode that calculates the new widths based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example resizes all columns to fit the contents of the columns and the column headers. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Programmatically%20Resize%20Cells%20to%20Fit%20Content%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#3\">    private void SizeAllColumns(Object sender, EventArgs e)\n    {\n        dataGridView1.AutoResizeColumns(\n            DataGridViewAutoSizeColumnsMode.AllCells);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#3\">    Private Sub SizeAllColumns(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button6.Click\n\n        DataGridView1.AutoResizeColumns(DataGridViewAutoSizeColumnsMode.AllCells)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#3\">   void SizeAllColumns( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      dataGridView1-&gt;AutoResizeColumns( DataGridViewAutoSizeColumnsMode::AllCells );\n   }\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeColumns_System_Windows_Forms_DataGridViewAutoSizeColumnsMode_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeColumns_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeColumns(DataGridViewAutoSizeColumnsMode,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the width of all columns using the specified size mode, optionally calculating the widths with the expectation that row heights will subsequently be adjusted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void AutoResizeColumns (System.Windows.Forms.DataGridViewAutoSizeColumnsMode autoSizeColumnsMode, bool fixedHeight);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>autoSizeColumnsMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fixedHeight</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to calculate the new widths based on the current row heights; <code>false</code> to calculate the widths with the expectation that the row heights will also be adjusted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeColumnsMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a> and <span class=\"xref\">stem.Windows.Forms.DataGridView.ColumnHeadersVisible*</span> is <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeColumnsMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeColumnsMode</code> is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsMode</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when columns resize. The column widths are adjusted only once per method call; if the contents of the columns later change, the columns will not automatically adjust. To resize a specific column, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumn_\" data-linktype=\"relative-path\">AutoResizeColumn</a> method. To set the columns to automatically resize whenever their contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeColumnsMode_\" data-linktype=\"relative-path\">AutoSizeColumnsMode</a> property or the column <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_AutoSizeMode_\" data-linktype=\"relative-path\">AutoSizeMode</a> property.  </p>\n<p> This overload lets you specify a sizing mode that calculates the new widths based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.  </p>\n<p> This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> class. If <code>fixedHeight</code> is <code>false</code>, the column widths will be calculated with the expectation that you will call the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRow_\" data-linktype=\"relative-path\">AutoResizeRow</a> or <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRows_\" data-linktype=\"relative-path\">AutoResizeRows</a> method next.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeRow_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeRow(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the height of the specified row to fit the contents of all its cells including the header cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AutoResizeRow (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row to resize.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>rowIndex</code> is not in the valid range of 0 to the number of rows minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when a row resizes. The row height is adjusted only once per method call; if the contents of the row later change, the row will not automatically adjust. To resize all rows, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRows_\" data-linktype=\"relative-path\">AutoResizeRows</a> method. To set the row to automatically resize whenever its contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeRowsMode_\" data-linktype=\"relative-path\">AutoSizeRowsMode</a> property.  </p>\n<p> For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example resizes the third row in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> to fit the column contents. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Programmatically%20Resize%20Cells%20to%20Fit%20Content%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#4\">    private void SizeThirdRow(Object sender, EventArgs e)\n    {\n        dataGridView1.AutoResizeRow(\n            2, DataGridViewAutoSizeRowMode.AllCellsExceptHeader);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#4\">    Private Sub SizeThirdRow(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button7.Click\n\n        Dim thirdRow As Integer = 2\n        DataGridView1.AutoResizeRow( _\n            2, DataGridViewAutoSizeRowMode.AllCellsExceptHeader)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#4\">   void SizeThirdRow( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      dataGridView1-&gt;AutoResizeRow(2, DataGridViewAutoSizeRowMode::AllCellsExceptHeader);\n   }\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeRow_System_Int32_System_Windows_Forms_DataGridViewAutoSizeRowMode_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeRow(Int32,DataGridViewAutoSizeRowMode)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the height of the specified row using the specified size mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AutoResizeRow (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row to resize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>autoSizeRowMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowMode</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeRowMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowMode</a> and <span class=\"xref\">stem.Windows.Forms.DataGridView.RowHeadersVisible*</span> is <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeRowMode</code> is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowMode</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>rowIndex</code> is not in the valid range of 0 to the number of rows minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when a row resizes. The row height is adjusted only once per method call; if the contents of the row later change, the row will not automatically adjust. To resize all rows, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRows_\" data-linktype=\"relative-path\">AutoResizeRows</a> method. To set the row to automatically resize whenever its contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeRowsMode_\" data-linktype=\"relative-path\">AutoSizeRowsMode</a> property.  </p>\n<p> For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>.  </p>\n<p> This overload lets you specify a sizing mode that calculates the new height based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example resizes the third row in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> to fit the column contents. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Programmatically%20Resize%20Cells%20to%20Fit%20Content%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#4\">    private void SizeThirdRow(Object sender, EventArgs e)\n    {\n        dataGridView1.AutoResizeRow(\n            2, DataGridViewAutoSizeRowMode.AllCellsExceptHeader);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#4\">    Private Sub SizeThirdRow(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button7.Click\n\n        Dim thirdRow As Integer = 2\n        DataGridView1.AutoResizeRow( _\n            2, DataGridViewAutoSizeRowMode.AllCellsExceptHeader)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#4\">   void SizeThirdRow( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      dataGridView1-&gt;AutoResizeRow(2, DataGridViewAutoSizeRowMode::AllCellsExceptHeader);\n   }\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeRow_System_Int32_System_Windows_Forms_DataGridViewAutoSizeRowMode_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeRow(Int32,DataGridViewAutoSizeRowMode,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the height of the specified row using the specified size mode, optionally calculating the height with the expectation that column widths will subsequently be adjusted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void AutoResizeRow (int rowIndex, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row to resize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>autoSizeRowMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowMode</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fixedWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to calculate the new height based on the current width of the columns; <code>false</code> to calculate the height with the expectation that the column widths will also be adjusted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeRowMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowMode</a> and <span class=\"xref\">stem.Windows.Forms.DataGridView.RowHeadersVisible*</span> is <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeRowMode</code> is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowMode</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>rowIndex</code> is not in the valid range of 0 to the number of rows minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when a row resizes. The row height is adjusted only once per method call; if the contents of the row later change, the row will not automatically adjust. To resize all rows, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRows_\" data-linktype=\"relative-path\">AutoResizeRows</a> method. To set the row to automatically resize whenever its contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeRowsMode_\" data-linktype=\"relative-path\">AutoSizeRowsMode</a> property.  </p>\n<p> For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>.  </p>\n<p> This overload lets you specify a sizing mode that calculates the new height based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.  </p>\n<p> This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> class. If <code>fixedWidth</code> is <code>false</code>, the row height will be calculated with the expectation that you will call the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumn_\" data-linktype=\"relative-path\">AutoResizeColumn</a> or <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumns_\" data-linktype=\"relative-path\">AutoResizeColumns</a> method next.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeRowHeadersWidth_System_Windows_Forms_DataGridViewRowHeadersWidthSizeMode_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeRowHeadersWidth_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeRowHeadersWidth(DataGridViewRowHeadersWidthSizeMode)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the width of the row headers using the specified size mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AutoResizeRowHeadersWidth (System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowHeadersWidthSizeMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>rowHeadersWidthSizeMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>rowHeadersWidthSizeMode</code> is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when the row headers resize. The width of the row headers is adjusted only once per method call; if the contents of the row headers later change, the row headers will not automatically adjust. To set the row headers to automatically resize when their contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersWidthSizeMode_\" data-linktype=\"relative-path\">RowHeadersWidthSizeMode</a> property.  </p>\n<p> This method lets you specify a sizing mode that calculates the new width based on values in a limited set of headers, such as those in displayed rows only. This improves performance when the control contains a large number of rows.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeRowHeadersWidth_System_Int32_System_Windows_Forms_DataGridViewRowHeadersWidthSizeMode_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeRowHeadersWidth_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeRowHeadersWidth(Int32,DataGridViewRowHeadersWidthSizeMode)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the width of the row headers based on changes to the contents of the header in the specified row and using the specified size mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AutoResizeRowHeadersWidth (int rowIndex, System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row header with the changed content.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowHeadersWidthSizeMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>rowIndex</code> is not in the valid range of 0 to the number of rows minus 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>rowHeadersWidthSizeMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a></p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>rowHeadersWidthSizeMode</code> is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when the row headers resize if only the contents of the header in the specified row have changed as a result of user edits or changes to a bound data source. The width of the row headers is adjusted only once per method call if the content change requires it; if the contents of the row headers later change, the row headers will not automatically adjust. To set the row headers to automatically resize when their contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersWidthSizeMode_\" data-linktype=\"relative-path\">RowHeadersWidthSizeMode</a> property.  </p>\n<p> This method lets you specify a sizing mode that calculates the new width based on values in a limited set of headers, such as those in displayed rows only. This improves performance when the control contains a large number of rows.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to resize the row header widths based on changes to the contents of the first row header. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Programmatically%20Resize%20Cells%20to%20Fit%20Content%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#5\">    private void SizeFirstRowHeaderToAllHeaders(Object sender, EventArgs e)\n    {\n        dataGridView1.AutoResizeRowHeadersWidth(\n            0, DataGridViewRowHeadersWidthSizeMode.AutoSizeToAllHeaders);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#5\">    Private Sub SizeFirstRowHeaderToAllHeaders(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button8.Click\n\n        DataGridView1.AutoResizeRowHeadersWidth( _\n            DataGridViewRowHeadersWidthSizeMode.AutoSizeToAllHeaders)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#5\">   void SizeFirstRowHeaderToAllHeaders( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      dataGridView1-&gt;AutoResizeRowHeadersWidth(0, DataGridViewRowHeadersWidthSizeMode::AutoSizeToAllHeaders);\n   }\n\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeRowHeadersWidth_System_Windows_Forms_DataGridViewRowHeadersWidthSizeMode_System_Boolean_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeRowHeadersWidth_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeRowHeadersWidth(DataGridViewRowHeadersWidthSizeMode,Boolean,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the width of the row headers using the specified size mode, optionally calculating the width with the expectation that the row and/or column header widths will subsequently be adjusted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void AutoResizeRowHeadersWidth (System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowsHeight);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowHeadersWidthSizeMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fixedColumnHeadersHeight</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to calculate the new width based on the current height of the column headers; <code>false</code> to calculate the width with the expectation that the height of the column headers will also be adjusted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fixedRowsHeight</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to calculate the new width based on the current row heights; <code>false</code> to calculate the width with the expectation that the row heights will also be adjusted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>rowHeadersWidthSizeMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>rowHeadersWidthSizeMode</code> is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when the row headers resize. The width of the row headers is adjusted only once per method call; if the contents of the row headers later change, the row headers will not automatically adjust. To set the row headers to automatically resize when their contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersWidthSizeMode_\" data-linktype=\"relative-path\">RowHeadersWidthSizeMode</a> property.  </p>\n<p> This method lets you specify a sizing mode that calculates the new width based on values in a limited set of headers, such as those in displayed rows only. This improves performance when the control contains a large number of rows.  </p>\n<p> This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> class. If the <code>fixedColumnHeadersHeight</code> or <code>fixedRowsHeight</code> parameters are <code>false</code>, the width of the row headers will be calculated with the expectation that you will call methods such as <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRows_\" data-linktype=\"relative-path\">AutoResizeRows</a> and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight_\" data-linktype=\"relative-path\">AutoResizeColumnHeadersHeight</a> next.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeRowHeadersWidth_System_Int32_System_Windows_Forms_DataGridViewRowHeadersWidthSizeMode_System_Boolean_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeRowHeadersWidth_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeRowHeadersWidth(Int32,DataGridViewRowHeadersWidthSizeMode,Boolean,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the width of the row headers based on changes to the contents of the header in the specified row and using the specified size mode, optionally calculating the width with the expectation that the row and/or column header widths will subsequently be adjusted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void AutoResizeRowHeadersWidth (int rowIndex, System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode rowHeadersWidthSizeMode, bool fixedColumnHeadersHeight, bool fixedRowHeight);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row containing the header with the changed content.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowHeadersWidthSizeMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fixedColumnHeadersHeight</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to calculate the new width based on the current height of the column headers; <code>false</code> to calculate the width with the expectation that the height of the column headers will also be adjusted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fixedRowHeight</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to calculate the new width based on the current height of the specified row; <code>false</code> to calculate the width with the expectation that the row height will also be adjusted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>rowIndex</code> is not in the valid range of 0 to the number of rows minus 1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>rowHeadersWidthSizeMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>rowHeadersWidthSizeMode</code> is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheaderswidthsizemode\" data-linktype=\"relative-path\">DataGridViewRowHeadersWidthSizeMode</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when the row headers resize if only the contents of the header in the specified row have changed as a result of user edits or changes to a bound data source. The width of the row headers is adjusted only once per method call if the content change requires it; if the contents of the row headers later change, the row headers will not automatically adjust. To set the row headers to automatically resize when their contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersWidthSizeMode_\" data-linktype=\"relative-path\">RowHeadersWidthSizeMode</a> property.  </p>\n<p> This method lets you specify a sizing mode that calculates the new width based on values in a limited set of headers, such as those in displayed rows only. This improves performance when the control contains a large number of rows.  </p>\n<p> This overload is protected, and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> class. If the <code>fixedColumnHeadersHeight</code> or <code>fixedRowHeight</code> parameters are <code>false</code>, the width of the row headers will be calculated with the expectation that you will call methods such as <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRows_\" data-linktype=\"relative-path\">AutoResizeRows</a> and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumnHeadersHeight_\" data-linktype=\"relative-path\">AutoResizeColumnHeadersHeight</a> next.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeRows\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeRows_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeRows()</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the heights of all rows to fit the contents of all their cells, including the header cells.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AutoResizeRows ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when rows resize. The row heights are adjusted only once per method call; if the contents of the rows later change, the rows will not automatically adjust. To resize a specific row, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRow_\" data-linktype=\"relative-path\">AutoResizeRow</a> method. To resize a subset of rows, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRows_System_Int32_System_Int32_System_Windows_Forms_DataGridViewAutoSizeRowMode_System_Boolean_\" data-linktype=\"relative-path\">AutoResizeRows(Int32,Int32,DataGridViewAutoSizeRowMode,Boolean)</a> overload. To set the rows to automatically resize whenever their contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeRowsMode_\" data-linktype=\"relative-path\">AutoSizeRowsMode</a> property.  </p>\n<p> For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to resize all rows based on non-header cell content. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Programmatically%20Resize%20Cells%20to%20Fit%20Content%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#7\">    private void SizeAllRows(Object sender,\n        EventArgs e)\n    {\n        dataGridView1.AutoResizeRows(\n            DataGridViewAutoSizeRowsMode.AllCellsExceptHeaders);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#7\">    Private Sub SizeAllRows(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button11.Click\n\n        DataGridView1.AutoResizeRows(DataGridViewAutoSizeRowsMode.AllCellsExceptHeaders)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#7\">   void SizeAllRows( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      dataGridView1-&gt;AutoResizeRows(DataGridViewAutoSizeRowsMode::AllCellsExceptHeaders);\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeRows_System_Windows_Forms_DataGridViewAutoSizeRowsMode_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeRows_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeRows(DataGridViewAutoSizeRowsMode)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the heights of the rows using the specified size mode value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AutoResizeRows (System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>autoSizeRowsMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeRowsMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a>, and <span class=\"xref\">stem.Windows.Forms.DataGridView.RowHeadersVisible*</span> is <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeRowsMode</code> is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeRowsMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when rows resize. The row heights are adjusted only once per method call; if the contents of the rows later change, the rows will not automatically adjust. To resize a specific row, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRow_\" data-linktype=\"relative-path\">AutoResizeRow</a> method. To resize a subset of rows, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRows_System_Int32_System_Int32_System_Windows_Forms_DataGridViewAutoSizeRowMode_System_Boolean_\" data-linktype=\"relative-path\">AutoResizeRows(Int32,Int32,DataGridViewAutoSizeRowMode,Boolean)</a> overload. To set the rows to automatically resize whenever their contents change, use the<a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeRowsMode_\" data-linktype=\"relative-path\">AutoSizeRowsMode</a> property.  </p>\n<p> For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>.  </p>\n<p> This overload lets you specify a sizing mode that calculates the new heights based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to resize all rows based on non-header cell content. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Programmatically%20Resize%20Cells%20to%20Fit%20Content%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Programmatically Resize Cells to Fit Content in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#7\">    private void SizeAllRows(Object sender,\n        EventArgs e)\n    {\n        dataGridView1.AutoResizeRows(\n            DataGridViewAutoSizeRowsMode.AllCellsExceptHeaders);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#7\">    Private Sub SizeAllRows(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Button11.Click\n\n        DataGridView1.AutoResizeRows(DataGridViewAutoSizeRowsMode.AllCellsExceptHeaders)\n\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ProgrammaticResizing#7\">   void SizeAllRows( Object^ /*sender*/, EventArgs^ /*e*/ )\n   {\n      dataGridView1-&gt;AutoResizeRows(DataGridViewAutoSizeRowsMode::AllCellsExceptHeaders);\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeRows_System_Windows_Forms_DataGridViewAutoSizeRowsMode_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeRows_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeRows(DataGridViewAutoSizeRowsMode,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the heights of all rows using the specified size mode, optionally calculating the heights with the expectation that column widths will subsequently be adjusted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void AutoResizeRows (System.Windows.Forms.DataGridViewAutoSizeRowsMode autoSizeRowsMode, bool fixedWidth);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>autoSizeRowsMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fixedWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to calculate the new heights based on the current column widths; <code>false</code> to calculate the heights with the expectation that the column widths will also be adjusted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeRowsMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a>, and <span class=\"xref\">stem.Windows.Forms.DataGridView.RowHeadersVisible*</span> is <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeRowsMode</code> is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeRowsMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when rows resize. The row heights are adjusted only once per method call; if the contents of the rows later change, the rows will not automatically adjust. To resize a specific row, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRow_\" data-linktype=\"relative-path\">AutoResizeRow</a> method. To resize a subset of rows, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRows_System_Int32_System_Int32_System_Windows_Forms_DataGridViewAutoSizeRowMode_System_Boolean_\" data-linktype=\"relative-path\">AutoResizeRows(Int32,Int32,DataGridViewAutoSizeRowMode,Boolean)</a> overload. To set the rows to automatically resize whenever their contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeRowsMode_\" data-linktype=\"relative-path\">AutoSizeRowsMode</a> property.  </p>\n<p> For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>.  </p>\n<p> This overload lets you specify a sizing mode that calculates the new heights based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.  </p>\n<p> This overload is protected, and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> class. If the <code>fixedWidth</code> parameter is <code>false</code>, the row heights will be calculated with the expectation that you will call the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumn_\" data-linktype=\"relative-path\">AutoResizeColumn</a> or <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumns_\" data-linktype=\"relative-path\">AutoResizeColumns</a> method next.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoResizeRows_System_Int32_System_Int32_System_Windows_Forms_DataGridViewAutoSizeRowMode_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_AutoResizeRows_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoResizeRows(Int32,Int32,DataGridViewAutoSizeRowMode,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Adjusts the heights of the specified rows using the specified size mode, optionally calculating the heights with the expectation that column widths will subsequently be adjusted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void AutoResizeRows (int rowIndexStart, int rowsCount, System.Windows.Forms.DataGridViewAutoSizeRowMode autoSizeRowMode, bool fixedWidth);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndexStart</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the first row to resize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowsCount</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of rows to resize.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>autoSizeRowMode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowMode</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowMode</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>fixedWidth</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to calculate the new heights based on the current column widths; <code>false</code> to calculate the heights with the expectation that the column widths will also be adjusted.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeRowsMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a>, and <span class=\"xref\">stem.Windows.Forms.DataGridView.RowHeadersVisible*</span> is <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeRowsMode</code> is not a valid <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a> value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>autoSizeRowsMode</code> has the value <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>rowIndexStart</code> is less than 0.  </p>\n<p> -or-  </p>\n<p> <code>rowsCount</code> is less than 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful if you want to control when rows resize, but you want to resize only a specific subset of rows, such as those within a range of bound records that have been updated. The row heights for the specified rows are adjusted only once per method call; if the contents of the rows later change, the rows will not automatically adjust. To resize a specific row, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRow_\" data-linktype=\"relative-path\">AutoResizeRow</a> method. To resize all rows, use a different overload of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeRows_\" data-linktype=\"relative-path\">AutoResizeRows</a> method. To set the rows to automatically resize whenever their contents change, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeRowsMode_\" data-linktype=\"relative-path\">AutoSizeRowsMode</a> property.  </p>\n<p> For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_WrapMode_\" data-linktype=\"relative-path\">WrapMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewtristate\" data-linktype=\"relative-path\">DataGridViewTriState</a>.  </p>\n<p> This overload lets you specify a sizing mode that calculates the new heights based on values in a limited set of cells, such as those in displayed rows only. This improves performance when the control contains a large number of rows.  </p>\n<p> This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> class. If the <code>fixedWidth</code> parameter is <code>false</code>, the row heights will be calculated with the expectation that you will call the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumn_\" data-linktype=\"relative-path\">AutoResizeColumn</a> or <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoResizeColumns_\" data-linktype=\"relative-path\">AutoResizeColumns</a> method next.  </p>\n<p> For more information about programmatic resizing, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_BeginEdit_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_BeginEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BeginEdit(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Puts the current cell in edit mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool BeginEdit (bool selectAll);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>selectAll</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to select all the cell&#39;s contents; <code>false</code> to not select any contents.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current cell is already in edit mode or successfully enters edit mode; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridView.CurrentCell*</span> is not set to a valid cell.  </p>\n<p> -or-  </p>\n<p> This method was called in a handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBeginEdit\" data-linktype=\"relative-path\">CellBeginEdit</a> event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The type indicated by the cell&#39;s <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property does not derive from the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> type.  </p>\n<p> -or-  </p>\n<p> The type indicated by the cell&#39;s <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property does not implement the <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a> interface.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>Initialization of the editing cell value failed and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>. The exception object can typically be cast to type <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns <code>false</code> if the cell fails to enter edit mode, which can happen for a number of reasons. This method returns <code>false</code> if the current cell is read-only. It also returns <code>false</code> if the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_EditType_\" data-linktype=\"relative-path\">EditType</a> property is <code>null</code> (meaning the cell cannot host an editing control) and the cell type does not implement the <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcell\" data-linktype=\"relative-path\">IDataGridViewEditingCell</a> interface.  </p>\n<p> If the cell supports editing, this method raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBeginEdit\" data-linktype=\"relative-path\">CellBeginEdit</a> event, which can be canceled, and returns <code>false</code> if an event handler cancels the edit. If the edit is not canceled and the cell can host an editing control, this method initializes the control and displays it. If the initialization fails, this method returns <code>false</code>.  </p>\n<p> If the cell successfully enters edit mode, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_IsCurrentCellInEditMode_\" data-linktype=\"relative-path\">IsCurrentCellInEditMode</a> property returns <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc2#10\">    // Override OnMouseClick in a class derived from DataGridViewCell to \n    // enter edit mode when the user clicks the cell. \n    protected override void OnMouseClick(DataGridViewCellMouseEventArgs e)\n    {\n        if (base.DataGridView != null)\n        {\n            Point point1 = base.DataGridView.CurrentCellAddress;\n            if (point1.X == e.ColumnIndex &amp;&amp;\n                point1.Y == e.RowIndex &amp;&amp;\n                e.Button == MouseButtons.Left &amp;&amp;\n                base.DataGridView.EditMode !=\n                DataGridViewEditMode.EditProgrammatically)\n            {\n                base.DataGridView.BeginEdit(true);\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc2#10\">    &#39; Override OnMouseClick in a class derived from DataGridViewCell to \n    &#39; enter edit mode when the user clicks the cell. \n    Protected Overrides Sub OnMouseClick( _\n        ByVal e As DataGridViewCellMouseEventArgs)\n\n        If MyBase.DataGridView IsNot Nothing Then\n\n            Dim point1 As Point = MyBase.DataGridView.CurrentCellAddress\n            If point1.X = e.ColumnIndex And _\n                point1.Y = e.RowIndex And _\n                e.Button = MouseButtons.Left And _\n                Not MyBase.DataGridView.EditMode = _\n                DataGridViewEditMode.EditProgrammatically Then\n\n                MyBase.DataGridView.BeginEdit(True)\n\n            End If\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CancelEdit\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_CancelEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CancelEdit()</div>        \r\n          </div>\r\n    \r\n            <p>Cancels edit mode for the currently selected cell and discards any changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CancelEdit ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the cancel was successful; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this method. This example is part of a larger example available in <a href=\"../Topic/Column%20Fill%20Mode%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Column Fill Mode in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewFillColumnsDemo#20\">    private void ResetDataGridView()\n    {\n        dataGridView1.CancelEdit();\n        dataGridView1.Columns.Clear();\n        dataGridView1.DataSource = null;\n        InitializeDataGridView();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewFillColumnsDemo#20\">    Private Sub ResetDataGridView()\n        dataGridView1.CancelEdit()\n        dataGridView1.Columns.Clear()\n        dataGridView1.DataSource = Nothing\n        InitializeDataGridView()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ClearSelection\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ClearSelection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearSelection()</div>        \r\n          </div>\r\n    \r\n            <p>Clears the current selection by unselecting all selected cells.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void ClearSelection ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this method is called, each column and row&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Selected_\" data-linktype=\"relative-path\">Selected</a> property is set to <code>false</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example clears the selection of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code> and a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> named <code>clearSelectionButton</code>, and ensure all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#170\">    private void clearSelectionButton_Click(object sender, EventArgs e)\n    {\n        dataGridView1.ClearSelection();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#170\">    Private Sub clearSelectionButton_Click(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles clearSelectionButton.Click\n\n        dataGridView1.ClearSelection()\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ClearSelection_System_Int32_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ClearSelection_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ClearSelection(Int32,Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Cancels the selection of all currently selected cells except the one indicated, optionally ensuring that the indicated cell is selected.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void ClearSelection (int columnIndexException, int rowIndexException, bool selectExceptionElement);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndexException</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The column index to exclude.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndexException</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The row index to exclude.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>selectExceptionElement</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to select the excluded cell, row, or column; <code>false</code> to retain its original state.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndexException</code> is greater than the highest column index.  </p>\n<p> -or-  </p>\n<p> <code>columnIndexException</code> is less than -1 when <span class=\"xref\">stem.Windows.Forms.DataGridView.SelectionMode*</span> is <a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">DataGridViewSelectionMode</a>; otherwise, <code>columnIndexException</code> is less than 0.  </p>\n<p> -or-  </p>\n<p> <code>rowIndexException</code> is greater than the highest row index.  </p>\n<p> -or-  </p>\n<p> <code>rowIndexException</code> is less than -1 when <span class=\"xref\">stem.Windows.Forms.DataGridView.SelectionMode*</span> is <a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">DataGridViewSelectionMode</a>; otherwise, <code>rowIndexException</code> is less than 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <code>rowIndexException</code> value of -1 represents a column header, and a <code>columnIndexException</code> value of -1 represents a row header.  </p>\n<p> This method is useful to clear the current selection without canceling the selection of the cell, row, or column indicated by the exception indexes.  </p>\n<p> If the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a> property value allows individual cell selection, this method sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Selected_\" data-linktype=\"relative-path\">Selected</a> property of each cell to <code>false</code>, excluding the cell in the row and column specified. If the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a> property value allows full row or column selection, this method also sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Selected_\" data-linktype=\"relative-path\">Selected</a> property of each row or column to <code>false</code>, excluding the row or column containing the specified cell.  </p>\n<p> The excluded cell, row, or column may or may not be in the selected state when this method is called. This method selects it if the <code>selectExceptionElement</code> parameter value is <code>true</code>. Depending on the selection mode, the entire row or column may also be selected as a result.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CommitEdit_System_Windows_Forms_DataGridViewDataErrorContexts_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_CommitEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CommitEdit(DataGridViewDataErrorContexts)</div>        \r\n          </div>\r\n    \r\n            <p>Commits changes in the current cell to the data cache without ending edit mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CommitEdit (System.Windows.Forms.DataGridViewDataErrorContexts context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a> values that specifies the context in which an error can occur.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the changes were committed; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The cell value could not be committed and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method attempts to convert the formatted, user-specified value to the underlying cell data type. To do this, it raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellParsing\" data-linktype=\"relative-path\">CellParsing</a> event, which you can handle to customize the type conversion. Otherwise, default type converters are used. Conversion errors may result in an exception if the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event is not handled to prevent it. If the value is successfully converted, it is committed to the data store, raising the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValuePushed\" data-linktype=\"relative-path\">CellValuePushed</a> event for non-data-bound cells when the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property value is <code>true</code>. If the value is successfully committed, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueChanged\" data-linktype=\"relative-path\">CellValueChanged</a> event occurs.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example calls the CommitEdit method within a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCellDirtyStateChanged\" data-linktype=\"relative-path\">CurrentCellDirtyStateChanged</a> event handler to raise the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueChanged\" data-linktype=\"relative-path\">CellValueChanged</a> event. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Disable%20Buttons%20in%20a%20Button%20Column%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Disable Buttons in a Button Column in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.DisabledButtons#5\">    &#39; This event handler manually raises the CellValueChanged event\n    &#39; by calling the CommitEdit method.\n    Sub dataGridView1_CurrentCellDirtyStateChanged( _\n        ByVal sender As Object, ByVal e As EventArgs) _\n        Handles dataGridView1.CurrentCellDirtyStateChanged\n\n        If dataGridView1.IsCurrentCellDirty Then\n            dataGridView1.CommitEdit(DataGridViewDataErrorContexts.Commit)\n        End If\n    End Sub\n\n    &#39; If a check box cell is clicked, this event handler disables  \n    &#39; or enables the button in the same row as the clicked cell.\n    Public Sub dataGridView1_CellValueChanged(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellValueChanged\n\n        If dataGridView1.Columns(e.ColumnIndex).Name = &quot;CheckBoxes&quot; Then\n            Dim buttonCell As DataGridViewDisableButtonCell = _\n                CType(dataGridView1.Rows(e.RowIndex).Cells(&quot;Buttons&quot;), _\n                DataGridViewDisableButtonCell)\n\n            Dim checkCell As DataGridViewCheckBoxCell = _\n                CType(dataGridView1.Rows(e.RowIndex).Cells(&quot;CheckBoxes&quot;), _\n                DataGridViewCheckBoxCell)\n            buttonCell.Enabled = Not CType(checkCell.Value, [Boolean])\n\n            dataGridView1.Invalidate()\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.DisabledButtons#5\">    // This event handler manually raises the CellValueChanged event\n    // by calling the CommitEdit method.\n    void dataGridView1_CurrentCellDirtyStateChanged(object sender,\n        EventArgs e)\n    {\n        if (dataGridView1.IsCurrentCellDirty)\n        {\n            dataGridView1.CommitEdit(DataGridViewDataErrorContexts.Commit);\n        }\n    }\n\n    // If a check box cell is clicked, this event handler disables  \n    // or enables the button in the same row as the clicked cell.\n    public void dataGridView1_CellValueChanged(object sender,\n        DataGridViewCellEventArgs e)\n    {\n        if (dataGridView1.Columns[e.ColumnIndex].Name == &quot;CheckBoxes&quot;)\n        {\n            DataGridViewDisableButtonCell buttonCell =\n                (DataGridViewDisableButtonCell)dataGridView1.\n                Rows[e.RowIndex].Cells[&quot;Buttons&quot;];\n\n            DataGridViewCheckBoxCell checkCell =\n                (DataGridViewCheckBoxCell)dataGridView1.\n                Rows[e.RowIndex].Cells[&quot;CheckBoxes&quot;];\n            buttonCell.Enabled = !(Boolean)checkCell.Value;\n\n            dataGridView1.Invalidate();\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CreateAccessibilityInstance\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_CreateAccessibilityInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateAccessibilityInstance()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new accessible object for the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a></div>\r\n                  </div>\r\n                  <p>A new <a class=\"xref\" href=\"system.windows.forms.datagridview.datagridviewaccessibleobject\" data-linktype=\"relative-path\">DataGridView+DataGridViewAccessibleObject</a> for the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CreateColumnsInstance\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_CreateColumnsInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateColumnsInstance()</div>        \r\n          </div>\r\n    \r\n            <p>Creates and returns a new <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumncollection\" data-linktype=\"relative-path\">DataGridViewColumnCollection</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Windows.Forms.DataGridViewColumnCollection CreateColumnsInstance ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumncollection\" data-linktype=\"relative-path\">DataGridViewColumnCollection</a></div>\r\n                  </div>\r\n                  <p>An empty <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumncollection\" data-linktype=\"relative-path\">DataGridViewColumnCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CreateControlsInstance\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_CreateControlsInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateControlsInstance()</div>        \r\n          </div>\r\n    \r\n            <p>Creates and returns a new <a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control+ControlCollection</a> that can be cast to type <a class=\"xref\" href=\"system.windows.forms.datagridview.datagridviewcontrolcollection\" data-linktype=\"relative-path\">DataGridView+DataGridViewControlCollection</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control+ControlCollection</a></div>\r\n                  </div>\r\n                  <p>An empty <a class=\"xref\" href=\"system.windows.forms.control.controlcollection\" data-linktype=\"relative-path\">Control+ControlCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called by the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Controls_\" data-linktype=\"relative-path\">Controls</a> property to initialize its value.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CreateRowsInstance\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_CreateRowsInstance_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CreateRowsInstance()</div>        \r\n          </div>\r\n    \r\n            <p>Creates and returns a new <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection\" data-linktype=\"relative-path\">DataGridViewRowCollection</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual System.Windows.Forms.DataGridViewRowCollection CreateRowsInstance ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection\" data-linktype=\"relative-path\">DataGridViewRowCollection</a></div>\r\n                  </div>\r\n                  <p>An empty <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcollection\" data-linktype=\"relative-path\">DataGridViewRowCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_DisplayedColumnCount_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_DisplayedColumnCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DisplayedColumnCount(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the number of columns displayed to the user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int DisplayedColumnCount (bool includePartialColumns);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>includePartialColumns</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to include partial columns in the displayed column count; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of columns displayed to the user.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_DisplayedRowCount_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_DisplayedRowCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DisplayedRowCount(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the number of rows displayed to the user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int DisplayedRowCount (bool includePartialRow);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>includePartialRow</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to include partial rows in the displayed row count; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of rows displayed to the user.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Releases the unmanaged resources used by the <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and its child controls and optionally releases the managed resources.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_EndEdit\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_EndEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndEdit()</div>        \r\n          </div>\r\n    \r\n            <p>Commits and ends the edit operation on the current cell using the default error context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool EndEdit ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the edit operation is committed and ended; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The cell value could not be committed and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method calls the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EndEdit_\" data-linktype=\"relative-path\">EndEdit</a> overload, passing in a bitwise combination of the <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a> values.  </p>\n<p> This method raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellEndEdit\" data-linktype=\"relative-path\">CellEndEdit</a> event.  </p>\n<p> This method may result in an exception if errors are not handled with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_EndEdit_System_Windows_Forms_DataGridViewDataErrorContexts_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_EndEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EndEdit(DataGridViewDataErrorContexts)</div>        \r\n          </div>\r\n    \r\n            <p>Commits and ends the edit operation on the current cell using the specified error context.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool EndEdit (System.Windows.Forms.DataGridViewDataErrorContexts context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a> values that specifies the context in which an error can occur.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the edit operation is committed and ended; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The cell value could not be committed and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellEndEdit\" data-linktype=\"relative-path\">CellEndEdit</a> event.  </p>\n<p> This method may result in an exception if errors are not handled with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_GetAccessibilityObjectById_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_GetAccessibilityObjectById_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetAccessibilityObjectById(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the specified <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override System.Windows.Forms.AccessibleObject GetAccessibilityObjectById (int objectId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>objectId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <code>Int32</code> that identifies the <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a> to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a></div>\r\n                  </div>\r\n                  <p>The specified <a class=\"xref\" href=\"system.windows.forms.accessibleobject\" data-linktype=\"relative-path\">AccessibleObject</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_GetCellCount_System_Windows_Forms_DataGridViewElementStates_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_GetCellCount_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCellCount(DataGridViewElementStates)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of cells that satisfy the provided filter.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int GetCellCount (System.Windows.Forms.DataGridViewElementStates includeFilter);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>includeFilter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the <a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a> values specifying the cells to count.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of cells that match the <code>includeFilter</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>includeFilter</code> includes the value <a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">DataGridViewElementStates</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful to determine the number of cells in a particular state. To retrieve the number of selected cells, for example, use this method with the <a class=\"xref\" href=\"system.windows.forms.datagridviewelementstates\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewElementStates</a> value. This is typically more efficient than using the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectedCells_\" data-linktype=\"relative-path\">SelectedCells</a> property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use this method to determine whether there are any cells selected in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. In this example, if any cells are selected, their values are retrieved through the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GetClipboardContent_\" data-linktype=\"relative-path\">GetClipboardContent</a> method and displayed in a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control.  </p>\n<p> This code is part of a larger example illustrating the use of the Clipboard features of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Enable%20Users%20to%20Copy%20Multiple%20Cells%20to%20the%20Clipboard%20from%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Enable Users to Copy Multiple Cells to the Clipboard from the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewClipboardDemo#16\">    private void CopyPasteButton_Click(object sender, System.EventArgs e)\n    {\n        if (this.DataGridView1\n            .GetCellCount(DataGridViewElementStates.Selected) &gt; 0)\n        {\n            try\n            {\n                // Add the selection to the clipboard.\n                Clipboard.SetDataObject(\n                    this.DataGridView1.GetClipboardContent());\n                \n                // Replace the text box contents with the clipboard text.\n                this.TextBox1.Text = Clipboard.GetText();\n            }\n            catch (System.Runtime.InteropServices.ExternalException)\n            {\n                this.TextBox1.Text = \n                    &quot;The Clipboard could not be accessed. Please try again.&quot;;\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewClipboardDemo#16\">    Private Sub CopyPasteButton_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles CopyPasteButton.Click\n\n        If Me.DataGridView1.GetCellCount( _\n            DataGridViewElementStates.Selected) &gt; 0 Then\n\n            Try\n\n                &#39; Add the selection to the clipboard.\n                Clipboard.SetDataObject( _\n                    Me.DataGridView1.GetClipboardContent())\n\n                &#39; Replace the text box contents with the clipboard text.\n                Me.TextBox1.Text = Clipboard.GetText()\n\n            Catch ex As System.Runtime.InteropServices.ExternalException\n                Me.TextBox1.Text = _\n                    &quot;The Clipboard could not be accessed. Please try again.&quot;\n            End Try\n\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_GetCellDisplayRectangle_System_Int32_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_GetCellDisplayRectangle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetCellDisplayRectangle(Int32,Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the rectangle that represents the display area for a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle GetCellDisplayRectangle (int columnIndex, int rowIndex, bool cutOverflow);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The column index for the desired cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The row index for the desired cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cutOverflow</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to return the displayed portion of the cell only; <code>false</code> to return the entire cell bounds.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the display rectangle of the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndex</code> is less than -1 or greater than the number of columns in the control minus 1.  </p>\n<p> -or-  </p>\n<p> <code>rowIndex</code> is less than -1 or greater than the number of rows in the control minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns the entire cell bounds or the displayed portion only. To get the bounds of the cell contents only, use the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ContentBounds_\" data-linktype=\"relative-path\">ContentBounds</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_GetClipboardContent\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_GetClipboardContent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetClipboardContent()</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the formatted values that represent the contents of the selected cells for copying to the <a class=\"xref\" href=\"system.windows.forms.clipboard\" data-linktype=\"relative-path\">Clipboard</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.DataObject GetClipboardContent ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.dataobject\" data-linktype=\"relative-path\">DataObject</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.dataobject\" data-linktype=\"relative-path\">DataObject</a> that represents the contents of the selected cells.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridView.ClipboardCopyMode*</span> is set to <a class=\"xref\" href=\"system.windows.forms.datagridviewclipboardcopymode\" data-linktype=\"relative-path\">DataGridViewClipboardCopyMode</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method retrieves data that represents the region defined by the selected cells. This region is the smallest rectangle that includes all of the selected cells. The value for each selected cell in this region is retrieved by calling the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_GetClipboardContent_\" data-linktype=\"relative-path\">GetClipboardContent</a> method. Blank placeholder values are used for unselected cells in this region. This method combines these values into a <a class=\"xref\" href=\"system.windows.forms.dataobject\" data-linktype=\"relative-path\">DataObject</a> containing several formats for copying to the clipboard. The supported clipboard formats include <a class=\"xref\" href=\"system.windows.forms.dataformats#System_Windows_Forms_DataFormats_Text\" data-linktype=\"relative-path\">System.Windows.Forms.DataFormats.Text</a>, <a class=\"xref\" href=\"system.windows.forms.dataformats#System_Windows_Forms_DataFormats_UnicodeText\" data-linktype=\"relative-path\">System.Windows.Forms.DataFormats.UnicodeText</a>, <a class=\"xref\" href=\"system.windows.forms.dataformats#System_Windows_Forms_DataFormats_Html\" data-linktype=\"relative-path\">System.Windows.Forms.DataFormats.Html</a>, and <a class=\"xref\" href=\"system.windows.forms.dataformats#System_Windows_Forms_DataFormats_CommaSeparatedValue\" data-linktype=\"relative-path\">System.Windows.Forms.DataFormats.CommaSeparatedValue</a>.  </p>\n<p> For more information, see the <a class=\"xref\" href=\"system.windows.forms.clipboard\" data-linktype=\"relative-path\">Clipboard</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to programmatically add selected <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> content to the Clipboard. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Enable%20Users%20to%20Copy%20Multiple%20Cells%20to%20the%20Clipboard%20from%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Enable Users to Copy Multiple Cells to the Clipboard from the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewClipboardDemo#10\">    private void Form1_Load(object sender, System.EventArgs e)\n    {\n        // Initialize the DataGridView control.\n        this.DataGridView1.ColumnCount = 5;\n        this.DataGridView1.Rows.Add(new string[] { &quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot; });\n        this.DataGridView1.Rows.Add(new string[] { &quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot; });\n        this.DataGridView1.Rows.Add(new string[] { &quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot; });\n        this.DataGridView1.Rows.Add(new string[] { &quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot; });\n        this.DataGridView1.Rows.Add(new string[] { &quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Y&quot; });\n        this.DataGridView1.AutoResizeColumns();\n        this.DataGridView1.ClipboardCopyMode = \n            DataGridViewClipboardCopyMode.EnableWithoutHeaderText;\n    }\n\n    private void CopyPasteButton_Click(object sender, System.EventArgs e)\n    {\n        if (this.DataGridView1\n            .GetCellCount(DataGridViewElementStates.Selected) &gt; 0)\n        {\n            try\n            {\n                // Add the selection to the clipboard.\n                Clipboard.SetDataObject(\n                    this.DataGridView1.GetClipboardContent());\n                \n                // Replace the text box contents with the clipboard text.\n                this.TextBox1.Text = Clipboard.GetText();\n            }\n            catch (System.Runtime.InteropServices.ExternalException)\n            {\n                this.TextBox1.Text = \n                    &quot;The Clipboard could not be accessed. Please try again.&quot;;\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewClipboardDemo#10\">    Private Sub Form1_Load(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles Me.Load\n\n        &#39; Initialize the DataGridView control.\n        Me.DataGridView1.ColumnCount = 5\n        Me.DataGridView1.Rows.Add(New String() {&quot;A&quot;, &quot;B&quot;, &quot;C&quot;, &quot;D&quot;, &quot;E&quot;})\n        Me.DataGridView1.Rows.Add(New String() {&quot;F&quot;, &quot;G&quot;, &quot;H&quot;, &quot;I&quot;, &quot;J&quot;})\n        Me.DataGridView1.Rows.Add(New String() {&quot;K&quot;, &quot;L&quot;, &quot;M&quot;, &quot;N&quot;, &quot;O&quot;})\n        Me.DataGridView1.Rows.Add(New String() {&quot;P&quot;, &quot;Q&quot;, &quot;R&quot;, &quot;S&quot;, &quot;T&quot;})\n        Me.DataGridView1.Rows.Add(New String() {&quot;U&quot;, &quot;V&quot;, &quot;W&quot;, &quot;X&quot;, &quot;Y&quot;})\n        Me.DataGridView1.AutoResizeColumns()\n        Me.DataGridView1.ClipboardCopyMode = _\n            DataGridViewClipboardCopyMode.EnableWithoutHeaderText\n\n    End Sub\n\n    Private Sub CopyPasteButton_Click(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles CopyPasteButton.Click\n\n        If Me.DataGridView1.GetCellCount( _\n            DataGridViewElementStates.Selected) &gt; 0 Then\n\n            Try\n\n                &#39; Add the selection to the clipboard.\n                Clipboard.SetDataObject( _\n                    Me.DataGridView1.GetClipboardContent())\n\n                &#39; Replace the text box contents with the clipboard text.\n                Me.TextBox1.Text = Clipboard.GetText()\n\n            Catch ex As System.Runtime.InteropServices.ExternalException\n                Me.TextBox1.Text = _\n                    &quot;The Clipboard could not be accessed. Please try again.&quot;\n            End Try\n\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_GetColumnDisplayRectangle_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_GetColumnDisplayRectangle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetColumnDisplayRectangle(Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the rectangle that represents the display area for a column, as determined by the column index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle GetColumnDisplayRectangle (int columnIndex, bool cutOverflow);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The column index for the desired cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cutOverflow</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to return the column rectangle visible in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> bounds; <code>false</code> to return the entire column rectangle.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the display rectangle of the column.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndex</code> is not in the valid range of 0 to the number of columns minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_GetRowDisplayRectangle_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_GetRowDisplayRectangle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetRowDisplayRectangle(Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the rectangle that represents the display area for a row, as determined by the row index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Drawing.Rectangle GetRowDisplayRectangle (int rowIndex, bool cutOverflow);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The row index for the desired cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>cutOverflow</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to return the row rectangle visible in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> bounds; <code>false</code> to return the entire row rectangle.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the display rectangle of the row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>rowIndex</code> is not in the valid range of 0 to the number of rows minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_HitTest_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_HitTest_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HitTest(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Returns location information, such as row and column indices, given x- and y-coordinates.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.DataGridView.HitTestInfo HitTest (int x, int y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The x-coordinate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The y-coordinate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridview.hittestinfo\" data-linktype=\"relative-path\">DataGridView+HitTestInfo</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridview.hittestinfo\" data-linktype=\"relative-path\">DataGridView+HitTestInfo</a> that contains the location information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this method to determine which part of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control is located at the specified coordinates. For example, you can call this methodâ€”specifying the coordinates of a mouse clickâ€”to determine the row and column indexes of the clicked cell or whether a header cell or scroll bar was clicked.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this method. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Columns_\" data-linktype=\"relative-path\">Columns</a> property reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewAutoSize#4\">    private DataGridViewCell clickedCell;\n\n    private void dataGridView1_MouseDown(object sender, MouseEventArgs e)\n    {\n\t// If the user right-clicks a cell, store it for use by the shortcut menu.\n        if (e.Button == MouseButtons.Right)\n        {\n            DataGridView.HitTestInfo hit = dataGridView1.HitTest(e.X, e.Y);\n            if (hit.Type == DataGridViewHitTestType.Cell)\n            {\n                clickedCell =\n                    dataGridView1.Rows[hit.RowIndex].Cells[hit.ColumnIndex];\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewAutoSize#4\">    Private clickedCell As DataGridViewCell\n\n    Private Sub dataGridView1_MouseDown(ByVal sender As Object, _\n        ByVal e As MouseEventArgs) Handles dataGridView1.MouseDown\n\n        &#39; If the user right-clicks a cell, store it for use by the \n        &#39; shortcut menu.\n        If e.Button = MouseButtons.Right Then\n            Dim hit As DataGridView.HitTestInfo = _\n                dataGridView1.HitTest(e.X, e.Y)\n            If hit.Type = DataGridViewHitTestType.Cell Then\n                clickedCell = _\n                    dataGridView1.Rows(hit.RowIndex).Cells(hit.ColumnIndex)\n            End If\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_InvalidateCell_System_Windows_Forms_DataGridViewCell_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_InvalidateCell_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvalidateCell(DataGridViewCell)</div>        \r\n          </div>\r\n    \r\n            <p>Invalidates the specified cell of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>, forcing it to be repainted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void InvalidateCell (System.Windows.Forms.DataGridViewCell dataGridViewCell);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataGridViewCell</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> to invalidate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>dataGridViewCell</code> does not belong to the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>dataGridViewCell</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful to force a cell repaint in conditions that would not normally cause a cell to be repainted. For example, you can use this method with a custom cell type that changes its appearance as a result of external events.  </p>\n<p> For more information about painting and invalidation, see <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use this method in a customized <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> that is painted with a custom border when the mouse pointer rests on it. In the example, the cell is invalidated when the mouse pointer enters or leaves it.  </p>\n<p> This code is part of a larger example available in <a href=\"../Topic/How%20to:%20Customize%20Cells%20and%20Columns%20in%20the%20Windows%20Forms%20DataGridView%20Control%20by%20Extending%20Their%20Behavior%20and%20Appearance.md\" data-linktype=\"relative-path\">How to: Customize Cells and Columns in the Windows Forms DataGridView Control by Extending Their Behavior and Appearance</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRolloverCell#220\">    // Force the cell to repaint itself when the mouse pointer enters it.\n    protected override void OnMouseEnter(int rowIndex)\n    {\n        this.DataGridView.InvalidateCell(this);\n    }\n\n    // Force the cell to repaint itself when the mouse pointer leaves it.\n    protected override void OnMouseLeave(int rowIndex)\n    {\n        this.DataGridView.InvalidateCell(this);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRolloverCell#220\">    &#39; Force the cell to repaint itself when the mouse pointer enters it.\n    Protected Overrides Sub OnMouseEnter(ByVal rowIndex As Integer)\n        Me.DataGridView.InvalidateCell(Me)\n    End Sub\n\n    &#39; Force the cell to repaint itself when the mouse pointer leaves it.\n    Protected Overrides Sub OnMouseLeave(ByVal rowIndex As Integer)\n        Me.DataGridView.InvalidateCell(Me)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_InvalidateCell_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_InvalidateCell_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvalidateCell(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Invalidates the cell with the specified row and column indexes, forcing it to be repainted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void InvalidateCell (int columnIndex, int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The column index of the cell to invalidate.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The row index of the cell to invalidate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndex</code> is less than -1 or greater than the number of columns in the control minus 1.  </p>\n<p> -or-  </p>\n<p> <code>rowIndex</code> is less than -1 or greater than the number of rows in the control minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful to force a cell repaint in conditions that would not normally cause a cell to be repainted. For example, you can use this method with a custom cell type that changes its appearance as a result of external events.  </p>\n<p> For more information about painting and invalidation, see <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use this method in a custom cell type that changes a cell&#39;s appearance when the user rests the mouse pointer over it. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Customize%20Cells%20and%20Columns%20in%20the%20Windows%20Forms%20DataGridView%20Control%20by%20Extending%20Their%20Behavior%20and%20Appearance.md\" data-linktype=\"relative-path\">How to: Customize Cells and Columns in the Windows Forms DataGridView Control by Extending Their Behavior and Appearance</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRolloverCell#220\">    // Force the cell to repaint itself when the mouse pointer enters it.\n    protected override void OnMouseEnter(int rowIndex)\n    {\n        this.DataGridView.InvalidateCell(this);\n    }\n\n    // Force the cell to repaint itself when the mouse pointer leaves it.\n    protected override void OnMouseLeave(int rowIndex)\n    {\n        this.DataGridView.InvalidateCell(this);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRolloverCell#220\">    &#39; Force the cell to repaint itself when the mouse pointer enters it.\n    Protected Overrides Sub OnMouseEnter(ByVal rowIndex As Integer)\n        Me.DataGridView.InvalidateCell(Me)\n    End Sub\n\n    &#39; Force the cell to repaint itself when the mouse pointer leaves it.\n    Protected Overrides Sub OnMouseLeave(ByVal rowIndex As Integer)\n        Me.DataGridView.InvalidateCell(Me)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_InvalidateColumn_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_InvalidateColumn_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvalidateColumn(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Invalidates the specified column of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>, forcing it to be repainted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void InvalidateColumn (int columnIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the column to invalidate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndex</code> is not in the valid range of 0 to the number of columns minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about painting and invalidation, see <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_InvalidateRow_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_InvalidateRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">InvalidateRow(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Invalidates the specified row of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>, forcing it to be repainted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void InvalidateRow (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row to invalidate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>rowIndex</code> is not in the valid range of 0 to the number of rows minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method to force a row to repaint itself. This method is useful in owner-drawing scenarios where you handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPrePaint\" data-linktype=\"relative-path\">RowPrePaint</a> or <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">RowPostPaint</a> events.  </p>\n<p> For more information about painting and invalidation, see <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Invalidate_\" data-linktype=\"relative-path\">Invalidate</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use the InvalidateRow method in a row-painting scenario. In the example, the row is invalidated when the current cell changes, forcing the row to repaint itself.  </p>\n<p> This code is part of a larger example available in <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRowPainting#19\">    &#39; Forces the row to repaint itself when the user changes the \n    &#39; current cell. This is necessary to refresh the focus rectangle.\n    Sub dataGridView1_CurrentCellChanged(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles dataGridView1.CurrentCellChanged\n\n        If oldRowIndex &lt;&gt; -1 Then\n            Me.dataGridView1.InvalidateRow(oldRowIndex)\n        End If\n        oldRowIndex = Me.dataGridView1.CurrentCellAddress.Y\n\n    End Sub &#39;dataGridView1_CurrentCellChanged\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRowPainting#19\">    // Forces the row to repaint itself when the user changes the \n    // current cell. This is necessary to refresh the focus rectangle.\n    void dataGridView1_CurrentCellChanged(object sender, EventArgs e)\n    {\n        if (oldRowIndex != -1)\n        {\n            this.dataGridView1.InvalidateRow(oldRowIndex);\n        }\n        oldRowIndex = this.dataGridView1.CurrentCellAddress.Y;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_IsInputChar_System_Char_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_IsInputChar_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsInputChar(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether a character is an input character that the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> recognizes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool IsInputChar (char charCode);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>charCode</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the character is recognized as an input character; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A character is recognized as an input character depending on whether the control is in edit mode and whether the current editing control can accept the character.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_IsInputKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_IsInputKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsInputKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool IsInputKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified key is a regular input key; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_NotifyCurrentCellDirty_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_NotifyCurrentCellDirty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NotifyCurrentCellDirty(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Notifies the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that the current cell has uncommitted changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void NotifyCurrentCellDirty (bool dirty);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dirty</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to indicate the cell has uncommitted changes; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method can be used to allow custom cell types to notify the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> when they have uncommitted changes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this method in a custom cell scenario. In the example, an <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a> implementation derived from the <a class=\"xref\" href=\"system.windows.forms.datetimepicker\" data-linktype=\"relative-path\">DateTimePicker</a> class overrides the <a class=\"xref\" href=\"system.windows.forms.datetimepicker#System_Windows_Forms_DateTimePicker_OnValueChanged_\" data-linktype=\"relative-path\">OnValueChanged</a> method and uses the NotifyCurrentCellDirty method to indicate a change to the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.  </p>\n<p> This example is part of a larger example shown in <a href=\"../Topic/How%20to:%20Host%20Controls%20in%20Windows%20Forms%20DataGridView%20Cells.md\" data-linktype=\"relative-path\">How to: Host Controls in Windows Forms DataGridView Cells</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#310\">    protected override void OnValueChanged(EventArgs eventargs)\n    {\n        // Notify the DataGridView that the contents of the cell\n        // have changed.\n        valueChanged = true;\n        this.EditingControlDataGridView.NotifyCurrentCellDirty(true);\n        base.OnValueChanged(eventargs);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCalendarColumn#310\">    Protected Overrides Sub OnValueChanged(ByVal eventargs As EventArgs)\n\n        &#39; Notify the DataGridView that the contents of the cell have changed.\n        valueIsChanged = True\n        Me.EditingControlDataGridView.NotifyCurrentCellDirty(True)\n        MyBase.OnValueChanged(eventargs)\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnAllowUserToAddRowsChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnAllowUserToAddRowsChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnAllowUserToAddRowsChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToAddRowsChanged\" data-linktype=\"relative-path\">AllowUserToAddRowsChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnAllowUserToAddRowsChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnAllowUserToAddRowsChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnAllowUserToDeleteRowsChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnAllowUserToDeleteRowsChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnAllowUserToDeleteRowsChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToDeleteRowsChanged\" data-linktype=\"relative-path\">AllowUserToDeleteRowsChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnAllowUserToDeleteRowsChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnAllowUserToDeleteRowsChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnAllowUserToOrderColumnsChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnAllowUserToOrderColumnsChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnAllowUserToOrderColumnsChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToOrderColumnsChanged\" data-linktype=\"relative-path\">AllowUserToOrderColumnsChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnAllowUserToOrderColumnsChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnAllowUserToOrderColumnsChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnAllowUserToResizeColumnsChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnAllowUserToResizeColumnsChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnAllowUserToResizeColumnsChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToResizeColumnsChanged\" data-linktype=\"relative-path\">AllowUserToResizeColumnsChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnAllowUserToResizeColumnsChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnAllowUserToResizeColumnsChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnAllowUserToResizeRowsChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnAllowUserToResizeRowsChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnAllowUserToResizeRowsChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AllowUserToResizeRowsChanged\" data-linktype=\"relative-path\">AllowUserToResizeRowsChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnAllowUserToResizeRowsChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnAllowUserToResizeRowsChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnAlternatingRowsDefaultCellStyleChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnAlternatingRowsDefaultCellStyleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnAlternatingRowsDefaultCellStyleChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AlternatingRowsDefaultCellStyleChanged\" data-linktype=\"relative-path\">AlternatingRowsDefaultCellStyleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnAlternatingRowsDefaultCellStyleChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnAlternatingRowsDefaultCellStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnAutoGenerateColumnsChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnAutoGenerateColumnsChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnAutoGenerateColumnsChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoGenerateColumnsChanged\" data-linktype=\"relative-path\">AutoGenerateColumnsChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnAutoGenerateColumnsChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnAutoGenerateColumnsChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnAutoSizeColumnModeChanged_System_Windows_Forms_DataGridViewAutoSizeColumnModeEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnAutoSizeColumnModeChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnAutoSizeColumnModeChanged(DataGridViewAutoSizeColumnModeEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeColumnModeChanged\" data-linktype=\"relative-path\">AutoSizeColumnModeChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnAutoSizeColumnModeChanged (System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmodeeventargs\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnModeEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnmodeeventargs\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnModeEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs.Column*</span> property of <code>e</code> is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnAutoSizeColumnModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnAutoSizeColumnsModeChanged_System_Windows_Forms_DataGridViewAutoSizeColumnsModeEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnAutoSizeColumnsModeChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnAutoSizeColumnsModeChanged(DataGridViewAutoSizeColumnsModeEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeColumnsModeChanged\" data-linktype=\"relative-path\">AutoSizeColumnsModeChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnAutoSizeColumnsModeChanged (System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmodeeventargs\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsModeEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizecolumnsmodeeventargs\" data-linktype=\"relative-path\">DataGridViewAutoSizeColumnsModeEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes*</span> property of <code>e</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The number of entries in the array returned by the <span class=\"xref\">stem.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes*</span> property of <code>e</code> is not equal to the number of columns in the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnAutoSizeColumnsModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnAutoSizeRowsModeChanged_System_Windows_Forms_DataGridViewAutoSizeModeEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnAutoSizeRowsModeChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnAutoSizeRowsModeChanged(DataGridViewAutoSizeModeEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AutoSizeRowsModeChanged\" data-linktype=\"relative-path\">AutoSizeRowsModeChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnAutoSizeRowsModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizemodeeventargs\" data-linktype=\"relative-path\">DataGridViewAutoSizeModeEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizemodeeventargs\" data-linktype=\"relative-path\">DataGridViewAutoSizeModeEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnAutoSizeRowsModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnBackgroundColorChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnBackgroundColorChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnBackgroundColorChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_BackgroundColorChanged\" data-linktype=\"relative-path\">BackgroundColorChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnBackgroundColorChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnBackgroundColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnBindingContextChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnBindingContextChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnBindingContextChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BindingContextChanged\" data-linktype=\"relative-path\">BindingContextChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnBindingContextChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnBindingContextChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnBorderStyleChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnBorderStyleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnBorderStyleChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_BorderStyleChanged\" data-linktype=\"relative-path\">BorderStyleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnBorderStyleChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnBorderStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCancelRowEdit_System_Windows_Forms_QuestionEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCancelRowEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCancelRowEdit(QuestionEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CancelRowEdit\" data-linktype=\"relative-path\">CancelRowEdit</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCancelRowEdit (System.Windows.Forms.QuestionEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.questioneventargs\" data-linktype=\"relative-path\">QuestionEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.questioneventargs\" data-linktype=\"relative-path\">QuestionEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCancelRowEdit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellBeginEdit_System_Windows_Forms_DataGridViewCellCancelEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellBeginEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellBeginEdit(DataGridViewCellCancelEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBeginEdit\" data-linktype=\"relative-path\">CellBeginEdit</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellBeginEdit (System.Windows.Forms.DataGridViewCellCancelEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellcanceleventargs\" data-linktype=\"relative-path\">DataGridViewCellCancelEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellcanceleventargs\" data-linktype=\"relative-path\">DataGridViewCellCancelEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see<a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellBeginEdit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellBorderStyleChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellBorderStyleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellBorderStyleChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellBorderStyleChanged\" data-linktype=\"relative-path\">CellBorderStyleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellBorderStyleChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellBorderStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellClick_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellClick(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellClick\" data-linktype=\"relative-path\">CellClick</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellClick (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see<a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellContentClick_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellContentClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellContentClick(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContentClick\" data-linktype=\"relative-path\">CellContentClick</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellContentClick (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains information regarding the cell whose content was clicked.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellContentClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellContentDoubleClick_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellContentDoubleClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellContentDoubleClick(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContentDoubleClick\" data-linktype=\"relative-path\">CellContentDoubleClick</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellContentDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellContentDoubleClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellContextMenuStripChanged_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellContextMenuStripChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellContextMenuStripChanged(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContextMenuStripChanged\" data-linktype=\"relative-path\">CellContextMenuStripChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellContextMenuStripChanged (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellContextMenuStripChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellContextMenuStripNeeded_System_Windows_Forms_DataGridViewCellContextMenuStripNeededEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellContextMenuStripNeeded_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellContextMenuStripNeeded(DataGridViewCellContextMenuStripNeededEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContextMenuStripNeeded\" data-linktype=\"relative-path\">CellContextMenuStripNeeded</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellContextMenuStripNeeded (System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellcontextmenustripneededeventargs\" data-linktype=\"relative-path\">DataGridViewCellContextMenuStripNeededEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellcontextmenustripneededeventargs\" data-linktype=\"relative-path\">DataGridViewCellContextMenuStripNeededEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellContextMenuStripNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellDoubleClick_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellDoubleClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellDoubleClick(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellDoubleClick\" data-linktype=\"relative-path\">CellDoubleClick</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellDoubleClick (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellDoubleClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellEndEdit_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellEndEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellEndEdit(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellEndEdit\" data-linktype=\"relative-path\">CellEndEdit</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellEndEdit (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellEndEdit method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellEnter_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellEnter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellEnter(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellEnter\" data-linktype=\"relative-path\">CellEnter</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellEnter (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellEnter method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellErrorTextChanged_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellErrorTextChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellErrorTextChanged(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextChanged\" data-linktype=\"relative-path\">CellErrorTextChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellErrorTextChanged (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is less than -1 or greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is less than -1 or greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellErrorTextChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellErrorTextNeeded_System_Windows_Forms_DataGridViewCellErrorTextNeededEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellErrorTextNeeded_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellErrorTextNeeded(DataGridViewCellErrorTextNeededEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellErrorTextNeeded (System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellerrortextneededeventargs\" data-linktype=\"relative-path\">DataGridViewCellErrorTextNeededEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellerrortextneededeventargs\" data-linktype=\"relative-path\">DataGridViewCellErrorTextNeededEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellErrorTextNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellFormatting_System_Windows_Forms_DataGridViewCellFormattingEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellFormatting_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellFormatting(DataGridViewCellFormattingEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellFormatting\" data-linktype=\"relative-path\">CellFormatting</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellFormatting (System.Windows.Forms.DataGridViewCellFormattingEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellformattingeventargs\" data-linktype=\"relative-path\">DataGridViewCellFormattingEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellformattingeventargs\" data-linktype=\"relative-path\">DataGridViewCellFormattingEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellFormatting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellLeave_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellLeave_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellLeave(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellLeave\" data-linktype=\"relative-path\">CellLeave</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellLeave (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see<a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellLeave method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellMouseClick_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellMouseClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellMouseClick(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseClick\" data-linktype=\"relative-path\">CellMouseClick</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellMouseClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellMouseDoubleClick_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellMouseDoubleClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellMouseDoubleClick(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseDoubleClick\" data-linktype=\"relative-path\">CellMouseDoubleClick</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Typically, double-clicking a cell puts the cell in edit mode.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellMouseDoubleClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellMouseDown_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellMouseDown_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellMouseDown(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseDown\" data-linktype=\"relative-path\">CellMouseDown</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellMouseDown (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellMouseDown method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellMouseEnter_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellMouseEnter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellMouseEnter(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseEnter\" data-linktype=\"relative-path\">CellMouseEnter</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellMouseEnter (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see<a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellMouseEnter method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellMouseLeave_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellMouseLeave_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellMouseLeave(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseLeave\" data-linktype=\"relative-path\">CellMouseLeave</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellMouseLeave (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellMouseLeave method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellMouseMove_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellMouseMove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellMouseMove(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseMove\" data-linktype=\"relative-path\">CellMouseMove</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellMouseMove (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellMouseMove method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellMouseUp_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellMouseUp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellMouseUp(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseUp\" data-linktype=\"relative-path\">CellMouseUp</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellMouseUp (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellMouseUp method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellPainting_System_Windows_Forms_DataGridViewCellPaintingEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellPainting_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellPainting(DataGridViewCellPaintingEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellPainting\" data-linktype=\"relative-path\">CellPainting</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellPainting (System.Windows.Forms.DataGridViewCellPaintingEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellpaintingeventargs\" data-linktype=\"relative-path\">DataGridViewCellPaintingEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellpaintingeventargs\" data-linktype=\"relative-path\">DataGridViewCellPaintingEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellPaintingEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellPaintingEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellPainting method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellParsing_System_Windows_Forms_DataGridViewCellParsingEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellParsing_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellParsing(DataGridViewCellParsingEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellParsing\" data-linktype=\"relative-path\">CellParsing</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellParsing (System.Windows.Forms.DataGridViewCellParsingEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellparsingeventargs\" data-linktype=\"relative-path\">DataGridViewCellParsingEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellparsingeventargs\" data-linktype=\"relative-path\">DataGridViewCellParsingEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellParsing method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellStateChanged_System_Windows_Forms_DataGridViewCellStateChangedEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellStateChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellStateChanged(DataGridViewCellStateChangedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellStateChanged\" data-linktype=\"relative-path\">CellStateChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellStateChanged (System.Windows.Forms.DataGridViewCellStateChangedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstatechangedeventargs\" data-linktype=\"relative-path\">DataGridViewCellStateChangedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstatechangedeventargs\" data-linktype=\"relative-path\">DataGridViewCellStateChangedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellStateChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellStyleChanged_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellStyleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellStyleChanged(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellStyleChanged\" data-linktype=\"relative-path\">CellStyleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellStyleChanged (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellStyleContentChanged_System_Windows_Forms_DataGridViewCellStyleContentChangedEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellStyleContentChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellStyleContentChanged(DataGridViewCellStyleContentChangedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellStyleContentChanged\" data-linktype=\"relative-path\">CellStyleContentChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellStyleContentChanged (System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellstylecontentchangedeventargs\" data-linktype=\"relative-path\">DataGridViewCellStyleContentChangedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstylecontentchangedeventargs\" data-linktype=\"relative-path\">DataGridViewCellStyleContentChangedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellStyleContentChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellToolTipTextChanged_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellToolTipTextChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellToolTipTextChanged(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellToolTipTextChanged\" data-linktype=\"relative-path\">CellToolTipTextChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellToolTipTextChanged (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains information about the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellToolTipTextChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellToolTipTextNeeded_System_Windows_Forms_DataGridViewCellToolTipTextNeededEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellToolTipTextNeeded_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellToolTipTextNeeded(DataGridViewCellToolTipTextNeededEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellToolTipTextNeeded\" data-linktype=\"relative-path\">CellToolTipTextNeeded</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellToolTipTextNeeded (System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelltooltiptextneededeventargs\" data-linktype=\"relative-path\">DataGridViewCellToolTipTextNeededEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelltooltiptextneededeventargs\" data-linktype=\"relative-path\">DataGridViewCellToolTipTextNeededEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellToolTipTextNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellValidated_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellValidated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellValidated(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValidated\" data-linktype=\"relative-path\">CellValidated</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellValidated (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellValidated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellValidating_System_Windows_Forms_DataGridViewCellValidatingEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellValidating_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellValidating(DataGridViewCellValidatingEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValidating\" data-linktype=\"relative-path\">CellValidating</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellValidating (System.Windows.Forms.DataGridViewCellValidatingEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellvalidatingeventargs\" data-linktype=\"relative-path\">DataGridViewCellValidatingEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellvalidatingeventargs\" data-linktype=\"relative-path\">DataGridViewCellValidatingEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellValidating method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellValueChanged_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellValueChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellValueChanged(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueChanged\" data-linktype=\"relative-path\">CellValueChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellValueChanged (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex*</span> property of <code>e</code> is greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellEventArgs.RowIndex*</span> property of <code>e</code> is greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellValueChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellValueNeeded_System_Windows_Forms_DataGridViewCellValueEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellValueNeeded_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellValueNeeded(DataGridViewCellValueEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueNeeded\" data-linktype=\"relative-path\">CellValueNeeded</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellValueNeeded (System.Windows.Forms.DataGridViewCellValueEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellvalueeventargs\" data-linktype=\"relative-path\">DataGridViewCellValueEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellvalueeventargs\" data-linktype=\"relative-path\">DataGridViewCellValueEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex*</span> property of <code>e</code> is less than zero or greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex*</span> property of <code>e</code> is less than zero or greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellValueNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCellValuePushed_System_Windows_Forms_DataGridViewCellValueEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCellValuePushed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCellValuePushed(DataGridViewCellValueEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValuePushed\" data-linktype=\"relative-path\">CellValuePushed</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCellValuePushed (System.Windows.Forms.DataGridViewCellValueEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellvalueeventargs\" data-linktype=\"relative-path\">DataGridViewCellValueEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellvalueeventargs\" data-linktype=\"relative-path\">DataGridViewCellValueEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex*</span> property of <code>e</code> is less than zero or greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex*</span> property of <code>e</code> is less than zero or greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCellValuePushed method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnAdded_System_Windows_Forms_DataGridViewColumnEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnAdded_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnAdded(DataGridViewColumnEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnAdded\" data-linktype=\"relative-path\">ColumnAdded</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnAdded (System.Windows.Forms.DataGridViewColumnEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The column indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumnEventArgs.Column*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnAdded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnContextMenuStripChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnContextMenuStripChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnContextMenuStripChanged(DataGridViewColumnEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnContextMenuStripChanged\" data-linktype=\"relative-path\">ColumnContextMenuStripChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnContextMenuStripChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The column indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumnEventArgs.Column*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnContextMenuStripChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnDataPropertyNameChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnDataPropertyNameChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnDataPropertyNameChanged(DataGridViewColumnEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnDataPropertyNameChanged\" data-linktype=\"relative-path\">ColumnDataPropertyNameChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnDataPropertyNameChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The column indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumnEventArgs.Column*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnDataPropertyNameChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnDefaultCellStyleChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnDefaultCellStyleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnDefaultCellStyleChanged(DataGridViewColumnEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnDefaultCellStyleChanged\" data-linktype=\"relative-path\">ColumnDefaultCellStyleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnDefaultCellStyleChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The column indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumnEventArgs.Column*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnDefaultCellStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnDisplayIndexChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnDisplayIndexChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnDisplayIndexChanged(DataGridViewColumnEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnDisplayIndexChanged\" data-linktype=\"relative-path\">ColumnDisplayIndexChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnDisplayIndexChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The column indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumnEventArgs.Column*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnDisplayIndexChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnDividerDoubleClick_System_Windows_Forms_DataGridViewColumnDividerDoubleClickEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnDividerDoubleClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnDividerDoubleClick(DataGridViewColumnDividerDoubleClickEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnDividerDoubleClick\" data-linktype=\"relative-path\">ColumnDividerDoubleClick</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnDividerDoubleClick (System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumndividerdoubleclickeventargs\" data-linktype=\"relative-path\">DataGridViewColumnDividerDoubleClickEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumndividerdoubleclickeventargs\" data-linktype=\"relative-path\">DataGridViewColumnDividerDoubleClickEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnDividerDoubleClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnDividerWidthChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnDividerWidthChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnDividerWidthChanged(DataGridViewColumnEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnDividerWidthChanged\" data-linktype=\"relative-path\">ColumnDividerWidthChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnDividerWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The column indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumnEventArgs.Column*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnDividerWidthChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnHeaderCellChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnHeaderCellChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnHeaderCellChanged(DataGridViewColumnEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeaderCellChanged\" data-linktype=\"relative-path\">ColumnHeaderCellChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnHeaderCellChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The column indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumnEventArgs.Column*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnHeaderCellChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnHeaderMouseClick_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnHeaderMouseClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnHeaderMouseClick(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeaderMouseClick\" data-linktype=\"relative-path\">ColumnHeaderMouseClick</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnHeaderMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex*</span> property of <code>e</code> is less than zero or greater than the number of columns in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnHeaderMouseClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnHeaderMouseDoubleClick_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnHeaderMouseDoubleClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeaderMouseDoubleClick\" data-linktype=\"relative-path\">ColumnHeaderMouseDoubleClick</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnHeaderMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains information about the cell and the position of the mouse pointer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnHeaderMouseDoubleClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnHeadersBorderStyleChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnHeadersBorderStyleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnHeadersBorderStyleChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersBorderStyleChanged\" data-linktype=\"relative-path\">ColumnHeadersBorderStyleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnHeadersBorderStyleChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnHeadersBorderStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnHeadersDefaultCellStyleChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnHeadersDefaultCellStyleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnHeadersDefaultCellStyleChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyleChanged\" data-linktype=\"relative-path\">ColumnHeadersDefaultCellStyleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnHeadersDefaultCellStyleChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnHeadersDefaultCellStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnHeadersHeightChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnHeadersHeightChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnHeadersHeightChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersHeightChanged\" data-linktype=\"relative-path\">ColumnHeadersHeightChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnHeadersHeightChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnHeadersHeightChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnHeadersHeightSizeModeChanged_System_Windows_Forms_DataGridViewAutoSizeModeEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnHeadersHeightSizeModeChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnHeadersHeightSizeModeChanged(DataGridViewAutoSizeModeEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersHeightSizeModeChanged\" data-linktype=\"relative-path\">ColumnHeadersHeightSizeModeChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnHeadersHeightSizeModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizemodeeventargs\" data-linktype=\"relative-path\">DataGridViewAutoSizeModeEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizemodeeventargs\" data-linktype=\"relative-path\">DataGridViewAutoSizeModeEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnHeadersHeightSizeModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnMinimumWidthChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnMinimumWidthChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnMinimumWidthChanged(DataGridViewColumnEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnMinimumWidthChanged\" data-linktype=\"relative-path\">ColumnMinimumWidthChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnMinimumWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The column indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumnEventArgs.Column*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnMinimumWidthChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnNameChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnNameChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnNameChanged(DataGridViewColumnEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnNameChanged\" data-linktype=\"relative-path\">ColumnNameChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnNameChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The column indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumnEventArgs.Column*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnNameChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnRemoved_System_Windows_Forms_DataGridViewColumnEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnRemoved_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnRemoved(DataGridViewColumnEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnRemoved\" data-linktype=\"relative-path\">ColumnRemoved</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnRemoved (System.Windows.Forms.DataGridViewColumnEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnRemoved method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnSortModeChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnSortModeChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnSortModeChanged(DataGridViewColumnEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnSortModeChanged\" data-linktype=\"relative-path\">ColumnSortModeChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnSortModeChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The column indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumnEventArgs.Column*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnSortModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnStateChanged_System_Windows_Forms_DataGridViewColumnStateChangedEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnStateChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnStateChanged(DataGridViewColumnStateChangedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnStateChanged\" data-linktype=\"relative-path\">ColumnStateChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnStateChanged (System.Windows.Forms.DataGridViewColumnStateChangedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnstatechangedeventargs\" data-linktype=\"relative-path\">DataGridViewColumnStateChangedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnstatechangedeventargs\" data-linktype=\"relative-path\">DataGridViewColumnStateChangedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The column changed from read-only to read/write, enabling the current cell to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnStateChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnToolTipTextChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnToolTipTextChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnToolTipTextChanged(DataGridViewColumnEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnToolTipTextChanged\" data-linktype=\"relative-path\">ColumnToolTipTextChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnToolTipTextChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a> that contains information about the column.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The column indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumnEventArgs.Column*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnToolTipTextChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnColumnWidthChanged_System_Windows_Forms_DataGridViewColumnEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnColumnWidthChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnColumnWidthChanged(DataGridViewColumnEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnWidthChanged\" data-linktype=\"relative-path\">ColumnWidthChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnColumnWidthChanged (System.Windows.Forms.DataGridViewColumnEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumneventargs\" data-linktype=\"relative-path\">DataGridViewColumnEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The column indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumnEventArgs.Column*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnColumnWidthChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCurrentCellChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCurrentCellChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCurrentCellChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCellChanged\" data-linktype=\"relative-path\">CurrentCellChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCurrentCellChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCurrentCellChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCurrentCellDirtyStateChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCurrentCellDirtyStateChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCurrentCellDirtyStateChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCellDirtyStateChanged\" data-linktype=\"relative-path\">CurrentCellDirtyStateChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnCurrentCellDirtyStateChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCurrentCellDirtyStateChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnCursorChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnCursorChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCursorChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CursorChanged\" data-linktype=\"relative-path\">CursorChanged</a> event and updates the <span class=\"xref\">stem.Windows.Forms.DataGridView.UserSetCursor*</span> property if the cursor was changed in user code.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnCursorChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control changes the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Cursor_\" data-linktype=\"relative-path\">Cursor</a> property value depending on the location of the mouse pointer. The <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_UserSetCursor_\" data-linktype=\"relative-path\">UserSetCursor</a> property stores the normal value of the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Cursor_\" data-linktype=\"relative-path\">Cursor</a> property and ignores the control&#39;s changes. This method is called when the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_CursorChanged\" data-linktype=\"relative-path\">CursorChanged</a> event occurs, and it updates the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_UserSetCursor_\" data-linktype=\"relative-path\">UserSetCursor</a> property, if necessary, in addition to invoking any event handlers.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnCursorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnDataBindingComplete_System_Windows_Forms_DataGridViewBindingCompleteEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnDataBindingComplete_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDataBindingComplete(DataGridViewBindingCompleteEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataBindingComplete\" data-linktype=\"relative-path\">DataBindingComplete</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDataBindingComplete (System.Windows.Forms.DataGridViewBindingCompleteEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewbindingcompleteeventargs\" data-linktype=\"relative-path\">DataGridViewBindingCompleteEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewbindingcompleteeventargs\" data-linktype=\"relative-path\">DataGridViewBindingCompleteEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Binding operations occur when the data changes while a <a class=\"xref\" href=\"system.windows.forms.currencymanager\" data-linktype=\"relative-path\">CurrencyManager</a> is in use. For example, if a <a class=\"xref\" href=\"system.windows.forms.currencymanager#System_Windows_Forms_CurrencyManager_ListChanged\" data-linktype=\"relative-path\">ListChanged</a> event occurs, the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> will update its view and raise the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataBindingComplete\" data-linktype=\"relative-path\">DataBindingComplete</a> event when it is finished.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnDataError_System_Boolean_System_Windows_Forms_DataGridViewDataErrorEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnDataError_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDataError(Boolean,DataGridViewDataErrorEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDataError (bool displayErrorDialogIfNoHandler, System.Windows.Forms.DataGridViewDataErrorEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>displayErrorDialogIfNoHandler</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to display an error dialog box if there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewdataerroreventargs\" data-linktype=\"relative-path\">DataGridViewDataErrorEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerroreventargs\" data-linktype=\"relative-path\">DataGridViewDataErrorEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnDataError method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnDataMemberChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnDataMemberChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDataMemberChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataMemberChanged\" data-linktype=\"relative-path\">DataMemberChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDataMemberChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnDataMemberChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnDataSourceChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnDataSourceChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDataSourceChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSourceChanged\" data-linktype=\"relative-path\">DataSourceChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDataSourceChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnDataSourceChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnDefaultCellStyleChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnDefaultCellStyleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDefaultCellStyleChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyleChanged\" data-linktype=\"relative-path\">DefaultCellStyleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDefaultCellStyleChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnDefaultCellStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnDefaultValuesNeeded_System_Windows_Forms_DataGridViewRowEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnDefaultValuesNeeded_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDefaultValuesNeeded(DataGridViewRowEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultValuesNeeded\" data-linktype=\"relative-path\">DefaultValuesNeeded</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDefaultValuesNeeded (System.Windows.Forms.DataGridViewRowEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnDefaultValuesNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnDoubleClick_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnDoubleClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDoubleClick(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_DoubleClick\" data-linktype=\"relative-path\">DoubleClick</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnDoubleClick (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnDoubleClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnEditingControlShowing_System_Windows_Forms_DataGridViewEditingControlShowingEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnEditingControlShowing_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnEditingControlShowing(DataGridViewEditingControlShowingEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EditingControlShowing\" data-linktype=\"relative-path\">EditingControlShowing</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnEditingControlShowing (System.Windows.Forms.DataGridViewEditingControlShowingEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridvieweditingcontrolshowingeventargs\" data-linktype=\"relative-path\">DataGridViewEditingControlShowingEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridvieweditingcontrolshowingeventargs\" data-linktype=\"relative-path\">DataGridViewEditingControlShowingEventArgs</a> that contains information about the editing control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnEditingControlShowing method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnEditModeChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnEditModeChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnEditModeChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EditModeChanged\" data-linktype=\"relative-path\">EditModeChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnEditModeChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>When entering edit mode, the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EditModeChanged\" data-linktype=\"relative-path\">EditModeChanged</a> event is raised whenever the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EditMode_\" data-linktype=\"relative-path\">EditMode</a> property changes.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnEditModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnEnabledChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnEnabledChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnEnabledChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_EnabledChanged\" data-linktype=\"relative-path\">EnabledChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnEnabledChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnEnter_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnEnter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnEnter(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Enter\" data-linktype=\"relative-path\">Enter</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnEnter (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The control is configured to enter edit mode when it receives focus, but upon entering focus, the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The control is configured to enter edit mode when it receives focus, but initialization of the editing cell value failed and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>. The exception object can typically be cast to type <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnEnter method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnFontChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnFontChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnFontChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_FontChanged\" data-linktype=\"relative-path\">FontChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnFontChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In addition to raising the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_FontChanged\" data-linktype=\"relative-path\">FontChanged</a> event, this method uses the new value of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Font_\" data-linktype=\"relative-path\">Font</a> property to update the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_Font_\" data-linktype=\"relative-path\">Font</a> properties of <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> objects returned by the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">ColumnHeadersDefaultCellStyle</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">RowHeadersDefaultCellStyle</a>properties.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnFontChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnForeColorChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnForeColorChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnForeColorChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ForeColorChanged\" data-linktype=\"relative-path\">ForeColorChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnForeColorChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In addition to raising the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_FontChanged\" data-linktype=\"relative-path\">FontChanged</a> event, this method uses the new value of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> property to update the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_ForeColor_\" data-linktype=\"relative-path\">ForeColor</a> property of <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> returned by the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnForeColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnGotFocus_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnGotFocus_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnGotFocus(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_GotFocus\" data-linktype=\"relative-path\">GotFocus</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnGotFocus (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnGridColorChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnGridColorChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnGridColorChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_GridColorChanged\" data-linktype=\"relative-path\">GridColorChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnGridColorChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnGridColorChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnHandleCreated_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnHandleCreated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnHandleCreated(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleCreated\" data-linktype=\"relative-path\">HandleCreated</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnHandleCreated (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnHandleCreated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnHandleDestroyed_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnHandleDestroyed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnHandleDestroyed(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_HandleDestroyed\" data-linktype=\"relative-path\">HandleDestroyed</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnHandleDestroyed (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnKeyDown_System_Windows_Forms_KeyEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnKeyDown_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnKeyDown(KeyEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyDown\" data-linktype=\"relative-path\">KeyDown</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would cause the control to enter edit mode but initialization of the editing cell value failed and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>. The exception object can typically be cast to type <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnKeyDown method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnKeyPress_System_Windows_Forms_KeyPressEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnKeyPress_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnKeyPress(KeyPressEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyPress\" data-linktype=\"relative-path\">KeyPress</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keypresseventargs\" data-linktype=\"relative-path\">KeyPressEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.keypresseventargs\" data-linktype=\"relative-path\">KeyPressEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnKeyPress method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnKeyUp_System_Windows_Forms_KeyEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnKeyUp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnKeyUp(KeyEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_KeyUp\" data-linktype=\"relative-path\">KeyUp</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnKeyUp method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnLayout_System_Windows_Forms_LayoutEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnLayout_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnLayout(LayoutEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Layout\" data-linktype=\"relative-path\">Layout</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnLayout (System.Windows.Forms.LayoutEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.layouteventargs\" data-linktype=\"relative-path\">LayoutEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.layouteventargs\" data-linktype=\"relative-path\">LayoutEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnLayout method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnLeave_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnLeave_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnLeave(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Leave\" data-linktype=\"relative-path\">Leave</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnLeave (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnLeave method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnLostFocus_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnLostFocus_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnLostFocus(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_LostFocus\" data-linktype=\"relative-path\">LostFocus</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnLostFocus (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnMouseClick_System_Windows_Forms_MouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnMouseClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseClick(MouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseClick\" data-linktype=\"relative-path\">MouseClick</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnMouseClick (System.Windows.Forms.MouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The control is configured to enter edit mode when it receives focus, but initialization of the editing cell value failed and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>. The exception object can typically be cast to type <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnMouseClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc2#10\">    // Override OnMouseClick in a class derived from DataGridViewCell to \n    // enter edit mode when the user clicks the cell. \n    protected override void OnMouseClick(DataGridViewCellMouseEventArgs e)\n    {\n        if (base.DataGridView != null)\n        {\n            Point point1 = base.DataGridView.CurrentCellAddress;\n            if (point1.X == e.ColumnIndex &amp;&amp;\n                point1.Y == e.RowIndex &amp;&amp;\n                e.Button == MouseButtons.Left &amp;&amp;\n                base.DataGridView.EditMode !=\n                DataGridViewEditMode.EditProgrammatically)\n            {\n                base.DataGridView.BeginEdit(true);\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc2#10\">    &#39; Override OnMouseClick in a class derived from DataGridViewCell to \n    &#39; enter edit mode when the user clicks the cell. \n    Protected Overrides Sub OnMouseClick( _\n        ByVal e As DataGridViewCellMouseEventArgs)\n\n        If MyBase.DataGridView IsNot Nothing Then\n\n            Dim point1 As Point = MyBase.DataGridView.CurrentCellAddress\n            If point1.X = e.ColumnIndex And _\n                point1.Y = e.RowIndex And _\n                e.Button = MouseButtons.Left And _\n                Not MyBase.DataGridView.EditMode = _\n                DataGridViewEditMode.EditProgrammatically Then\n\n                MyBase.DataGridView.BeginEdit(True)\n\n            End If\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnMouseDoubleClick_System_Windows_Forms_MouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnMouseDoubleClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseDoubleClick(MouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDoubleClick\" data-linktype=\"relative-path\">MouseDoubleClick</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnMouseDown_System_Windows_Forms_MouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnMouseDown_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseDown(MouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseDown\" data-linktype=\"relative-path\">MouseDown</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The control is configured to enter edit mode when it receives focus, but initialization of the editing cell value failed and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>. The exception object can typically be cast to type <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnMouseDown method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnMouseEnter_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnMouseEnter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseEnter(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <span class=\"xref\">stem.Windows.Forms.Control.OnMouseEnter*</span> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnMouseEnter (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnMouseLeave_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnMouseLeave_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseLeave(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnMouseLeave (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnMouseLeave method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this method. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Customize%20Cells%20and%20Columns%20in%20the%20Windows%20Forms%20DataGridView%20Control%20by%20Extending%20Their%20Behavior%20and%20Appearance.md\" data-linktype=\"relative-path\">How to: Customize Cells and Columns in the Windows Forms DataGridView Control by Extending Their Behavior and Appearance</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRolloverCell#220\">    // Force the cell to repaint itself when the mouse pointer enters it.\n    protected override void OnMouseEnter(int rowIndex)\n    {\n        this.DataGridView.InvalidateCell(this);\n    }\n\n    // Force the cell to repaint itself when the mouse pointer leaves it.\n    protected override void OnMouseLeave(int rowIndex)\n    {\n        this.DataGridView.InvalidateCell(this);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRolloverCell#220\">    &#39; Force the cell to repaint itself when the mouse pointer enters it.\n    Protected Overrides Sub OnMouseEnter(ByVal rowIndex As Integer)\n        Me.DataGridView.InvalidateCell(Me)\n    End Sub\n\n    &#39; Force the cell to repaint itself when the mouse pointer leaves it.\n    Protected Overrides Sub OnMouseLeave(ByVal rowIndex As Integer)\n        Me.DataGridView.InvalidateCell(Me)\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnMouseMove_System_Windows_Forms_MouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnMouseMove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseMove(MouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseMove\" data-linktype=\"relative-path\">MouseMove</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnMouseMove method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnMouseUp_System_Windows_Forms_MouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnMouseUp_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseUp(MouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseUp\" data-linktype=\"relative-path\">MouseUp</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnMouseUp method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnMouseWheel_System_Windows_Forms_MouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnMouseWheel_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMouseWheel(MouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_MouseWheel\" data-linktype=\"relative-path\">MouseWheel</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.mouseeventargs\" data-linktype=\"relative-path\">MouseEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnMultiSelectChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnMultiSelectChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMultiSelectChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_MultiSelectChanged\" data-linktype=\"relative-path\">MultiSelectChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMultiSelectChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnMultiSelectChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnNewRowNeeded_System_Windows_Forms_DataGridViewRowEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnNewRowNeeded_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnNewRowNeeded(DataGridViewRowEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_NewRowNeeded\" data-linktype=\"relative-path\">NewRowNeeded</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnNewRowNeeded (System.Windows.Forms.DataGridViewRowEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The row indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewRowEventArgs.Row*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnNewRowNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnPaint_System_Windows_Forms_PaintEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnPaint_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPaint(PaintEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Paint\" data-linktype=\"relative-path\">Paint</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.painteventargs\" data-linktype=\"relative-path\">PaintEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>Any exceptions that occur during this method are ignored unless they are one of the following:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.nullreferenceexception\" data-linktype=\"relative-path\">NullReferenceException</a>  \n</li>\n<li><a class=\"xref\" href=\"system.stackoverflowexception\" data-linktype=\"relative-path\">StackOverflowException</a>  \n</li>\n<li><a class=\"xref\" href=\"system.outofmemoryexception\" data-linktype=\"relative-path\">OutOfMemoryException</a>  \n</li>\n<li><a class=\"xref\" href=\"system.threading.threadabortexception\" data-linktype=\"relative-path\">ThreadAbortException</a>  \n</li>\n<li><a class=\"xref\" href=\"system.executionengineexception\" data-linktype=\"relative-path\">ExecutionEngineException</a>  \n</li>\n<li><a class=\"xref\" href=\"system.indexoutofrangeexception\" data-linktype=\"relative-path\">IndexOutOfRangeException</a>  \n</li>\n<li><a class=\"xref\" href=\"system.accessviolationexception\" data-linktype=\"relative-path\">AccessViolationException</a></li>\n</ul>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnPaint method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnReadOnlyChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnReadOnlyChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnReadOnlyChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ReadOnlyChanged\" data-linktype=\"relative-path\">ReadOnlyChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnReadOnlyChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The control changed from read-only to read/write, enabling the current cell to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnReadOnlyChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnResize_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnResize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnResize(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Resize\" data-linktype=\"relative-path\">Resize</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnResize (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnResize method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRightToLeftChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRightToLeftChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRightToLeftChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_RightToLeftChanged\" data-linktype=\"relative-path\">RightToLeftChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnRightToLeftChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowContextMenuStripChanged_System_Windows_Forms_DataGridViewRowEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowContextMenuStripChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowContextMenuStripChanged(DataGridViewRowEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowContextMenuStripChanged\" data-linktype=\"relative-path\">RowContextMenuStripChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowContextMenuStripChanged (System.Windows.Forms.DataGridViewRowEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The row indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewRowEventArgs.Row*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowContextMenuStripChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowContextMenuStripNeeded_System_Windows_Forms_DataGridViewRowContextMenuStripNeededEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowContextMenuStripNeeded_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowContextMenuStripNeeded(DataGridViewRowContextMenuStripNeededEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowContextMenuStripNeeded\" data-linktype=\"relative-path\">RowContextMenuStripNeeded</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowContextMenuStripNeeded (System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowcontextmenustripneededeventargs\" data-linktype=\"relative-path\">DataGridViewRowContextMenuStripNeededEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcontextmenustripneededeventargs\" data-linktype=\"relative-path\">DataGridViewRowContextMenuStripNeededEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.  </p>\n<p> The OnRowContextMenuStripNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowDefaultCellStyleChanged_System_Windows_Forms_DataGridViewRowEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowDefaultCellStyleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowDefaultCellStyleChanged(DataGridViewRowEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowDefaultCellStyleChanged\" data-linktype=\"relative-path\">RowDefaultCellStyleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowDefaultCellStyleChanged (System.Windows.Forms.DataGridViewRowEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The row indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewRowEventArgs.Row*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowDefaultCellStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowDirtyStateNeeded_System_Windows_Forms_QuestionEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowDirtyStateNeeded_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowDirtyStateNeeded(QuestionEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowDirtyStateNeeded\" data-linktype=\"relative-path\">RowDirtyStateNeeded</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowDirtyStateNeeded (System.Windows.Forms.QuestionEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.questioneventargs\" data-linktype=\"relative-path\">QuestionEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.questioneventargs\" data-linktype=\"relative-path\">QuestionEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowDirtyStateNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowDividerDoubleClick_System_Windows_Forms_DataGridViewRowDividerDoubleClickEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowDividerDoubleClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowDividerDoubleClick(DataGridViewRowDividerDoubleClickEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowDividerDoubleClick\" data-linktype=\"relative-path\">RowDividerDoubleClick</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowDividerDoubleClick (System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowdividerdoubleclickeventargs\" data-linktype=\"relative-path\">DataGridViewRowDividerDoubleClickEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewrowdividerdoubleclickeventargs\" data-linktype=\"relative-path\">DataGridViewRowDividerDoubleClickEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowDividerDoubleClick method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowDividerHeightChanged_System_Windows_Forms_DataGridViewRowEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowDividerHeightChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowDividerHeightChanged(DataGridViewRowEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowDividerHeightChanged\" data-linktype=\"relative-path\">RowDividerHeightChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowDividerHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The row indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewRowEventArgs.Row*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowDividerHeightChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowEnter_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowEnter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowEnter(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowEnter\" data-linktype=\"relative-path\">RowEnter</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowEnter (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.  </p>\n<p> The OnRowEnter method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowErrorTextChanged_System_Windows_Forms_DataGridViewRowEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowErrorTextChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowErrorTextChanged(DataGridViewRowEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowErrorTextChanged\" data-linktype=\"relative-path\">RowErrorTextChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowErrorTextChanged (System.Windows.Forms.DataGridViewRowEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The row indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewRowEventArgs.Row*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowErrorTextChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowErrorTextNeeded_System_Windows_Forms_DataGridViewRowErrorTextNeededEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowErrorTextNeeded_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowErrorTextNeeded(DataGridViewRowErrorTextNeededEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowErrorTextNeeded\" data-linktype=\"relative-path\">RowErrorTextNeeded</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowErrorTextNeeded (System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowerrortextneededeventargs\" data-linktype=\"relative-path\">DataGridViewRowErrorTextNeededEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewrowerrortextneededeventargs\" data-linktype=\"relative-path\">DataGridViewRowErrorTextNeededEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.  </p>\n<p> The OnRowErrorTextNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowHeaderCellChanged_System_Windows_Forms_DataGridViewRowEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowHeaderCellChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowHeaderCellChanged(DataGridViewRowEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeaderCellChanged\" data-linktype=\"relative-path\">RowHeaderCellChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowHeaderCellChanged (System.Windows.Forms.DataGridViewRowEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The row indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewRowEventArgs.Row*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowHeaderCellChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowHeaderMouseClick_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowHeaderMouseClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowHeaderMouseClick(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeaderMouseClick\" data-linktype=\"relative-path\">RowHeaderMouseClick</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowHeaderMouseClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains information about the mouse and the header cell that was clicked.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowHeaderMouseDoubleClick_System_Windows_Forms_DataGridViewCellMouseEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowHeaderMouseDoubleClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowHeaderMouseDoubleClick(DataGridViewCellMouseEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeaderMouseDoubleClick\" data-linktype=\"relative-path\">RowHeaderMouseDoubleClick</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowHeaderMouseDoubleClick (System.Windows.Forms.DataGridViewCellMouseEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellmouseeventargs\" data-linktype=\"relative-path\">DataGridViewCellMouseEventArgs</a> that contains information about the mouse and the header cell that was double-clicked.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowHeadersBorderStyleChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowHeadersBorderStyleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowHeadersBorderStyleChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersBorderStyleChanged\" data-linktype=\"relative-path\">RowHeadersBorderStyleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowHeadersBorderStyleChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowHeadersBorderStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowHeadersDefaultCellStyleChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowHeadersDefaultCellStyleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowHeadersDefaultCellStyleChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersDefaultCellStyleChanged\" data-linktype=\"relative-path\">RowHeadersDefaultCellStyleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowHeadersDefaultCellStyleChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowHeadersDefaultCellStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowHeadersWidthChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowHeadersWidthChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowHeadersWidthChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersWidthChanged\" data-linktype=\"relative-path\">RowHeadersWidthChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowHeadersWidthChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowHeadersWidthChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowHeadersWidthSizeModeChanged_System_Windows_Forms_DataGridViewAutoSizeModeEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowHeadersWidthSizeModeChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowHeadersWidthSizeModeChanged(DataGridViewAutoSizeModeEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersWidthSizeModeChanged\" data-linktype=\"relative-path\">RowHeadersWidthSizeModeChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowHeadersWidthSizeModeChanged (System.Windows.Forms.DataGridViewAutoSizeModeEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewautosizemodeeventargs\" data-linktype=\"relative-path\">DataGridViewAutoSizeModeEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizemodeeventargs\" data-linktype=\"relative-path\">DataGridViewAutoSizeModeEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowHeadersWidthSizeModeChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowHeightChanged_System_Windows_Forms_DataGridViewRowEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowHeightChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowHeightChanged(DataGridViewRowEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeightChanged\" data-linktype=\"relative-path\">RowHeightChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The row indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewRowEventArgs.Row*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowHeightChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowHeightInfoNeeded_System_Windows_Forms_DataGridViewRowHeightInfoNeededEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowHeightInfoNeeded_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowHeightInfoNeeded(DataGridViewRowHeightInfoNeededEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeightInfoNeeded\" data-linktype=\"relative-path\">RowHeightInfoNeeded</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowHeightInfoNeeded (System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowheightinfoneededeventargs\" data-linktype=\"relative-path\">DataGridViewRowHeightInfoNeededEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheightinfoneededeventargs\" data-linktype=\"relative-path\">DataGridViewRowHeightInfoNeededEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowHeightInfoNeeded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowHeightInfoPushed_System_Windows_Forms_DataGridViewRowHeightInfoPushedEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowHeightInfoPushed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowHeightInfoPushed(DataGridViewRowHeightInfoPushedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeightInfoPushed\" data-linktype=\"relative-path\">RowHeightInfoPushed</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowHeightInfoPushed (System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowheightinfopushedeventargs\" data-linktype=\"relative-path\">DataGridViewRowHeightInfoPushedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewrowheightinfopushedeventargs\" data-linktype=\"relative-path\">DataGridViewRowHeightInfoPushedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowHeightInfoPushed method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowLeave_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowLeave_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowLeave(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowLeave\" data-linktype=\"relative-path\">RowLeave</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowLeave (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowLeave method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowMinimumHeightChanged_System_Windows_Forms_DataGridViewRowEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowMinimumHeightChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowMinimumHeightChanged(DataGridViewRowEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowMinimumHeightChanged\" data-linktype=\"relative-path\">RowMinimumHeightChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowMinimumHeightChanged (System.Windows.Forms.DataGridViewRowEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The row indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewRowEventArgs.Row*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowMinimumHeightChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowPostPaint_System_Windows_Forms_DataGridViewRowPostPaintEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowPostPaint_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowPostPaint(DataGridViewRowPostPaintEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">RowPostPaint</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowPostPaint (System.Windows.Forms.DataGridViewRowPostPaintEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowpostpainteventargs\" data-linktype=\"relative-path\">DataGridViewRowPostPaintEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewrowpostpainteventargs\" data-linktype=\"relative-path\">DataGridViewRowPostPaintEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowPostPaint method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowPrePaint_System_Windows_Forms_DataGridViewRowPrePaintEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowPrePaint_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowPrePaint(DataGridViewRowPrePaintEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPrePaint\" data-linktype=\"relative-path\">RowPrePaint</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowPrePaint (System.Windows.Forms.DataGridViewRowPrePaintEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowprepainteventargs\" data-linktype=\"relative-path\">DataGridViewRowPrePaintEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewrowprepainteventargs\" data-linktype=\"relative-path\">DataGridViewRowPrePaintEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowPrePaint method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowsAdded_System_Windows_Forms_DataGridViewRowsAddedEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowsAdded_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowsAdded(DataGridViewRowsAddedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowsAdded\" data-linktype=\"relative-path\">RowsAdded</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowsAdded (System.Windows.Forms.DataGridViewRowsAddedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowsaddedeventargs\" data-linktype=\"relative-path\">DataGridViewRowsAddedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewrowsaddedeventargs\" data-linktype=\"relative-path\">DataGridViewRowsAddedEventArgs</a> that contains information about the added rows.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowsAdded method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowsDefaultCellStyleChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowsDefaultCellStyleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowsDefaultCellStyleChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowsDefaultCellStyleChanged\" data-linktype=\"relative-path\">RowsDefaultCellStyleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowsDefaultCellStyleChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowsDefaultCellStyleChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowsRemoved_System_Windows_Forms_DataGridViewRowsRemovedEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowsRemoved_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowsRemoved(DataGridViewRowsRemovedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowsRemoved\" data-linktype=\"relative-path\">RowsRemoved</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowsRemoved (System.Windows.Forms.DataGridViewRowsRemovedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowsremovedeventargs\" data-linktype=\"relative-path\">DataGridViewRowsRemovedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewrowsremovedeventargs\" data-linktype=\"relative-path\">DataGridViewRowsRemovedEventArgs</a> that contains information about the deleted rows.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowsRemoved method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowStateChanged_System_Int32_System_Windows_Forms_DataGridViewRowStateChangedEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowStateChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowStateChanged(Int32,DataGridViewRowStateChangedEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowStateChanged\" data-linktype=\"relative-path\">RowStateChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowStateChanged (int rowIndex, System.Windows.Forms.DataGridViewRowStateChangedEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row that is changing state.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowstatechangedeventargs\" data-linktype=\"relative-path\">DataGridViewRowStateChangedEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewrowstatechangedeventargs\" data-linktype=\"relative-path\">DataGridViewRowStateChangedEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The row changed from read-only to read/write, enabling the current cell to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowStateChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowUnshared_System_Windows_Forms_DataGridViewRowEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowUnshared_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowUnshared(DataGridViewRowEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowUnshared\" data-linktype=\"relative-path\">RowUnshared</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowUnshared (System.Windows.Forms.DataGridViewRowEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The row indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewRowEventArgs.Row*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowUnshared method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowValidated_System_Windows_Forms_DataGridViewCellEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowValidated_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowValidated(DataGridViewCellEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowValidated\" data-linktype=\"relative-path\">RowValidated</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowValidated (System.Windows.Forms.DataGridViewCellEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs\" data-linktype=\"relative-path\">DataGridViewCellEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowValidated method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnRowValidating_System_Windows_Forms_DataGridViewCellCancelEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnRowValidating_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRowValidating(DataGridViewCellCancelEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowValidating\" data-linktype=\"relative-path\">RowValidating</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnRowValidating (System.Windows.Forms.DataGridViewCellCancelEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcellcanceleventargs\" data-linktype=\"relative-path\">DataGridViewCellCancelEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewcellcanceleventargs\" data-linktype=\"relative-path\">DataGridViewCellCancelEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnRowValidating method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnScroll_System_Windows_Forms_ScrollEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnScroll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnScroll(ScrollEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Scroll\" data-linktype=\"relative-path\">Scroll</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnScroll (System.Windows.Forms.ScrollEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.scrolleventargs\" data-linktype=\"relative-path\">ScrollEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.scrolleventargs\" data-linktype=\"relative-path\">ScrollEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnScroll method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnSelectionChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnSelectionChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnSelectionChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"relative-path\">SelectionChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnSelectionChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains information about the event.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnSelectionChanged method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnSortCompare_System_Windows_Forms_DataGridViewSortCompareEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnSortCompare_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnSortCompare(DataGridViewSortCompareEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SortCompare\" data-linktype=\"relative-path\">SortCompare</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnSortCompare (System.Windows.Forms.DataGridViewSortCompareEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewsortcompareeventargs\" data-linktype=\"relative-path\">DataGridViewSortCompareEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewsortcompareeventargs\" data-linktype=\"relative-path\">DataGridViewSortCompareEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnSortCompare method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnSorted_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnSorted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnSorted(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Sorted\" data-linktype=\"relative-path\">Sorted</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnSorted (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnSorted method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnUserAddedRow_System_Windows_Forms_DataGridViewRowEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnUserAddedRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnUserAddedRow(DataGridViewRowEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_UserAddedRow\" data-linktype=\"relative-path\">UserAddedRow</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnUserAddedRow (System.Windows.Forms.DataGridViewRowEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The row indicated by the <span class=\"xref\">stem.Windows.Forms.DataGridViewRowEventArgs.Row*</span> property of <code>e</code> does not belong to this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnUserAddedRow method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnUserDeletedRow_System_Windows_Forms_DataGridViewRowEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnUserDeletedRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnUserDeletedRow(DataGridViewRowEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_UserDeletedRow\" data-linktype=\"relative-path\">UserDeletedRow</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnUserDeletedRow (System.Windows.Forms.DataGridViewRowEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs\" data-linktype=\"relative-path\">DataGridViewRowEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.  </p>\n<p> The OnUserDeletedRow method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnUserDeletingRow_System_Windows_Forms_DataGridViewRowCancelEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnUserDeletingRow_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnUserDeletingRow(DataGridViewRowCancelEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_UserDeletingRow\" data-linktype=\"relative-path\">UserDeletingRow</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnUserDeletingRow (System.Windows.Forms.DataGridViewRowCancelEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewrowcanceleventargs\" data-linktype=\"relative-path\">DataGridViewRowCancelEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcanceleventargs\" data-linktype=\"relative-path\">DataGridViewRowCancelEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnUserDeletingRow method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnValidating_System_ComponentModel_CancelEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnValidating_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnValidating(CancelEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnValidating (System.ComponentModel.CancelEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.componentmodel.canceleventargs\" data-linktype=\"relative-path\">CancelEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>Validation failed and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>. The exception object can typically be cast to type <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In addition to raising the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">Validating</a> event, this method ends the current cell edit and validates the cell and row values.  </p>\n<p> Raising an event invokes the event handler through a delegate. For more information, see <a href=\"http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2\" data-linktype=\"external\">NIB: Raising an Event</a>.  </p>\n<p> The OnValidating method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_OnVisibleChanged_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_OnVisibleChanged_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnVisibleChanged(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_VisibleChanged\" data-linktype=\"relative-path\">VisibleChanged</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnVisibleChanged (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> object that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_PaintBackground_System_Drawing_Graphics_System_Drawing_Rectangle_System_Drawing_Rectangle_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_PaintBackground_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaintBackground(Graphics,Rectangle,Rectangle)</div>        \r\n          </div>\r\n    \r\n            <p>Paints the background of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void PaintBackground (System.Drawing.Graphics graphics, System.Drawing.Rectangle clipBounds, System.Drawing.Rectangle gridBounds);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>graphics</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> used to paint the background.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>clipBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that needs to be painted.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>gridBounds</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> that represents the area in which cells are drawn.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>clipBounds</code> parameter represents the area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> that needs to be repainted. For example, if a user covers the entire <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> with another window and then uncovers it, then <code>clipBounds</code> represents the entire <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. If a user covers a small area of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> and then uncovers it, then <code>clipBounds</code> represents the small area that was covered.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessAKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessAKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessAKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the A key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessAKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key or keys to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns <code>true</code> when the user presses CTRL+A and the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_MultiSelect_\" data-linktype=\"relative-path\">MultiSelect</a> property is <code>true</code>. By default, this selects all cells in the control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessDataGridViewKey_System_Windows_Forms_KeyEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessDataGridViewKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessDataGridViewKey(KeyEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Processes keys used for navigating in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool ProcessDataGridViewKey (System.Windows.Forms.KeyEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keyeventargs\" data-linktype=\"relative-path\">KeyEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Contains information about the key that was pressed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The key pressed would cause the control to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.  </p>\n<p> -or-  </p>\n<p> The DELETE key would delete one or more rows, but an error in the data source prevents the deletion and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method calls the key-processing method appropriate to the key pressed (for example, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ProcessF2Key_\" data-linktype=\"relative-path\">ProcessF2Key</a> method when F2 is pressed) and returns the return value of that method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to change the behavior of the ENTER key in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> subclass by overriding the ProcessDataGridViewKey and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ProcessDialogKey_\" data-linktype=\"relative-path\">ProcessDialogKey</a> methods. In the example, the ENTER key has the same behavior as the RIGHT ARROW key, making it easier for a user to edit multiple cells in a single row of data.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc2#70\">public class CustomDataGridView : DataGridView\n{\n    [System.Security.Permissions.UIPermission(\n        System.Security.Permissions.SecurityAction.LinkDemand,\n        Window = System.Security.Permissions.UIPermissionWindow.AllWindows)]\n    protected override bool ProcessDialogKey(Keys keyData)\n    {\n        // Extract the key code from the key value. \n        Keys key = (keyData &amp; Keys.KeyCode);\n\n        // Handle the ENTER key as if it were a RIGHT ARROW key. \n        if (key == Keys.Enter)\n        {\n            return this.ProcessRightKey(keyData);\n        }\n        return base.ProcessDialogKey(keyData);\n    }\n\n    [System.Security.Permissions.SecurityPermission(\n        System.Security.Permissions.SecurityAction.LinkDemand, Flags = \n        System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)]\n    protected override bool ProcessDataGridViewKey(KeyEventArgs e)\n    {\n        // Handle the ENTER key as if it were a RIGHT ARROW key. \n        if (e.KeyCode == Keys.Enter)\n        {\n            return this.ProcessRightKey(e.KeyData);\n        }\n        return base.ProcessDataGridViewKey(e);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc2#70\">Public Class CustomDataGridView\n    Inherits DataGridView\n\n    &lt;System.Security.Permissions.UIPermission( _\n        System.Security.Permissions.SecurityAction.LinkDemand, _\n        Window:=System.Security.Permissions.UIPermissionWindow.AllWindows)&gt; _\n    Protected Overrides Function ProcessDialogKey( _\n        ByVal keyData As Keys) As Boolean\n\n        &#39; Extract the key code from the key value. \n        Dim key As Keys = keyData And Keys.KeyCode\n\n        &#39; Handle the ENTER key as if it were a RIGHT ARROW key. \n        If key = Keys.Enter Then\n            Return Me.ProcessRightKey(keyData)\n        End If\n\n        Return MyBase.ProcessDialogKey(keyData)\n\n    End Function\n\n    &lt;System.Security.Permissions.SecurityPermission( _\n        System.Security.Permissions.SecurityAction.LinkDemand, Flags:= _\n        System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)&gt; _\n    Protected Overrides Function ProcessDataGridViewKey( _\n        ByVal e As System.Windows.Forms.KeyEventArgs) As Boolean\n\n        &#39; Handle the ENTER key as if it were a RIGHT ARROW key. \n        If e.KeyCode = Keys.Enter Then\n            Return Me.ProcessRightKey(e.KeyData)\n        End If\n\n        Return MyBase.ProcessDataGridViewKey(e)\n\n    End Function\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessDeleteKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessDeleteKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessDeleteKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the DELETE key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessDeleteKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key or keys to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The DELETE key would delete one or more rows, but an error in the data source prevents the deletion and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method returns <code>true</code> when the user presses DELETE to delete rows in the control. The user can delete rows if the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a> property is set to <a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">DataGridViewSelectionMode</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">DataGridViewSelectionMode</a> and the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_MultiSelect_\" data-linktype=\"relative-path\">MultiSelect</a> property is set to <code>true</code>. If the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is bound to data, the <a class=\"xref\" href=\"system.componentmodel.ibindinglist#System_ComponentModel_IBindingList_AllowRemove_\" data-linktype=\"relative-path\">AllowRemove</a> property of the data source must also be set to <code>true</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessDialogKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessDialogKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessDialogKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes keys, such as the TAB, ESCAPE, ENTER, and ARROW keys, used to control dialog boxes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key or keys to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The key pressed would cause the control to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is called in edit mode to handle keyboard input that is not handled by the hosted editing control.  </p>\n<p> If a key press is determined to not be an input key, it will be sent to the base class for processing.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to change the behavior of the ENTER key in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> subclass by overriding the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ProcessDataGridViewKey_\" data-linktype=\"relative-path\">ProcessDataGridViewKey</a> and ProcessDialogKey methods. In the example, the ENTER key has the same behavior as the RIGHT ARROW key, making it easier for a user to edit multiple cells in a single row of data.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc2#70\">public class CustomDataGridView : DataGridView\n{\n    [System.Security.Permissions.UIPermission(\n        System.Security.Permissions.SecurityAction.LinkDemand,\n        Window = System.Security.Permissions.UIPermissionWindow.AllWindows)]\n    protected override bool ProcessDialogKey(Keys keyData)\n    {\n        // Extract the key code from the key value. \n        Keys key = (keyData &amp; Keys.KeyCode);\n\n        // Handle the ENTER key as if it were a RIGHT ARROW key. \n        if (key == Keys.Enter)\n        {\n            return this.ProcessRightKey(keyData);\n        }\n        return base.ProcessDialogKey(keyData);\n    }\n\n    [System.Security.Permissions.SecurityPermission(\n        System.Security.Permissions.SecurityAction.LinkDemand, Flags = \n        System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)]\n    protected override bool ProcessDataGridViewKey(KeyEventArgs e)\n    {\n        // Handle the ENTER key as if it were a RIGHT ARROW key. \n        if (e.KeyCode == Keys.Enter)\n        {\n            return this.ProcessRightKey(e.KeyData);\n        }\n        return base.ProcessDataGridViewKey(e);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc2#70\">Public Class CustomDataGridView\n    Inherits DataGridView\n\n    &lt;System.Security.Permissions.UIPermission( _\n        System.Security.Permissions.SecurityAction.LinkDemand, _\n        Window:=System.Security.Permissions.UIPermissionWindow.AllWindows)&gt; _\n    Protected Overrides Function ProcessDialogKey( _\n        ByVal keyData As Keys) As Boolean\n\n        &#39; Extract the key code from the key value. \n        Dim key As Keys = keyData And Keys.KeyCode\n\n        &#39; Handle the ENTER key as if it were a RIGHT ARROW key. \n        If key = Keys.Enter Then\n            Return Me.ProcessRightKey(keyData)\n        End If\n\n        Return MyBase.ProcessDialogKey(keyData)\n\n    End Function\n\n    &lt;System.Security.Permissions.SecurityPermission( _\n        System.Security.Permissions.SecurityAction.LinkDemand, Flags:= _\n        System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)&gt; _\n    Protected Overrides Function ProcessDataGridViewKey( _\n        ByVal e As System.Windows.Forms.KeyEventArgs) As Boolean\n\n        &#39; Handle the ENTER key as if it were a RIGHT ARROW key. \n        If e.KeyCode = Keys.Enter Then\n            Return Me.ProcessRightKey(e.KeyData)\n        End If\n\n        Return MyBase.ProcessDataGridViewKey(e)\n\n    End Function\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessDownKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessDownKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessDownKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the DOWN ARROW key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessDownKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key or keys to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The DOWN ARROW key would cause the control to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the new current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessEndKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessEndKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessEndKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the END key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessEndKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key or keys to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The END key would cause the control to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the new current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessEnterKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessEnterKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessEnterKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the ENTER key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessEnterKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key or keys to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The ENTER key would cause the control to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the new current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessEscapeKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessEscapeKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessEscapeKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the ESC key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessEscapeKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key or keys to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessF2Key_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessF2Key_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessF2Key(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the F2 key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessF2Key (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key or keys to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The F2 key would cause the control to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>The F2 key would cause the control to enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessHomeKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessHomeKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessHomeKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the HOME key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessHomeKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The key that was pressed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The HOME key would cause the control to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the new current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessInsertKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessInsertKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessInsertKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the INSERT key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessInsertKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessKeyEventArgs_System_Windows_Forms_Message__\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessKeyEventArgs_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessKeyEventArgs(Message)</div>        \r\n          </div>\r\n    \r\n            <p>Processes a key message and generates the appropriate control events.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>m</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a>, passed by reference, that represents the window message to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the message was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The key pressed would cause the control to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessKeyEventArgs_\" data-linktype=\"relative-path\">ProcessKeyEventArgs</a> method on the base class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessKeyPreview_System_Windows_Forms_Message__\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessKeyPreview_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessKeyPreview(Message)</div>        \r\n          </div>\r\n    \r\n            <p>Previews a keyboard message.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>m</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a>, passed by reference, that represents the window message to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the message was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The key pressed would cause the control to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_ProcessKeyPreview_\" data-linktype=\"relative-path\">ProcessKeyPreview</a> method on the base class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessLeftKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessLeftKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessLeftKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the LEFT ARROW key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessLeftKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key or keys to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The LEFT ARROW key would cause the control to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the new current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessNextKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessNextKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessNextKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the PAGE DOWN key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessNextKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key or keys to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The PAGE DOWN key would cause the control to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the new current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessPriorKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessPriorKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessPriorKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the PAGE UP key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessPriorKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key or keys to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The PAGE UP key would cause the control to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the new current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessRightKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessRightKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessRightKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the RIGHT ARROW key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessRightKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key or keys to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The RIGHT ARROW key would cause the control to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the new current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to change the behavior of the ENTER key in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> subclass by overriding the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ProcessDataGridViewKey_\" data-linktype=\"relative-path\">ProcessDataGridViewKey</a> and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ProcessDialogKey_\" data-linktype=\"relative-path\">ProcessDialogKey</a> methods. In the example, the ENTER key has the same behavior as the RIGHT ARROW key, making it easier for a user to edit multiple cells in a single row of data.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc2#70\">public class CustomDataGridView : DataGridView\n{\n    [System.Security.Permissions.UIPermission(\n        System.Security.Permissions.SecurityAction.LinkDemand,\n        Window = System.Security.Permissions.UIPermissionWindow.AllWindows)]\n    protected override bool ProcessDialogKey(Keys keyData)\n    {\n        // Extract the key code from the key value. \n        Keys key = (keyData &amp; Keys.KeyCode);\n\n        // Handle the ENTER key as if it were a RIGHT ARROW key. \n        if (key == Keys.Enter)\n        {\n            return this.ProcessRightKey(keyData);\n        }\n        return base.ProcessDialogKey(keyData);\n    }\n\n    [System.Security.Permissions.SecurityPermission(\n        System.Security.Permissions.SecurityAction.LinkDemand, Flags = \n        System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)]\n    protected override bool ProcessDataGridViewKey(KeyEventArgs e)\n    {\n        // Handle the ENTER key as if it were a RIGHT ARROW key. \n        if (e.KeyCode == Keys.Enter)\n        {\n            return this.ProcessRightKey(e.KeyData);\n        }\n        return base.ProcessDataGridViewKey(e);\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc2#70\">Public Class CustomDataGridView\n    Inherits DataGridView\n\n    &lt;System.Security.Permissions.UIPermission( _\n        System.Security.Permissions.SecurityAction.LinkDemand, _\n        Window:=System.Security.Permissions.UIPermissionWindow.AllWindows)&gt; _\n    Protected Overrides Function ProcessDialogKey( _\n        ByVal keyData As Keys) As Boolean\n\n        &#39; Extract the key code from the key value. \n        Dim key As Keys = keyData And Keys.KeyCode\n\n        &#39; Handle the ENTER key as if it were a RIGHT ARROW key. \n        If key = Keys.Enter Then\n            Return Me.ProcessRightKey(keyData)\n        End If\n\n        Return MyBase.ProcessDialogKey(keyData)\n\n    End Function\n\n    &lt;System.Security.Permissions.SecurityPermission( _\n        System.Security.Permissions.SecurityAction.LinkDemand, Flags:= _\n        System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode)&gt; _\n    Protected Overrides Function ProcessDataGridViewKey( _\n        ByVal e As System.Windows.Forms.KeyEventArgs) As Boolean\n\n        &#39; Handle the ENTER key as if it were a RIGHT ARROW key. \n        If e.KeyCode = Keys.Enter Then\n            Return Me.ProcessRightKey(e.KeyData)\n        End If\n\n        Return MyBase.ProcessDataGridViewKey(e)\n\n    End Function\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessSpaceKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessSpaceKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessSpaceKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the SPACEBAR.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessSpaceKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessTabKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessTabKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessTabKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the TAB key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessTabKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key or keys to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The TAB key would cause the control to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the new current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessUpKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessUpKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessUpKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the UP ARROW key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessUpKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key or keys to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The UP ARROW key would cause the control to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the new current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ProcessZeroKey_System_Windows_Forms_Keys_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ProcessZeroKey_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessZeroKey(Keys)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the 0 key.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected bool ProcessZeroKey (System.Windows.Forms.Keys keyData);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>keyData</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of <a class=\"xref\" href=\"system.windows.forms.keys\" data-linktype=\"relative-path\">Keys</a> values that represents the key or keys to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the key was processed; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The 0 key would cause the control to enter edit mode, but the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property of the current cell does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>This action would cause the control to enter edit mode, but an error in the data source prevents the action and either there is no handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event or the handler has set the <span class=\"xref\">stem.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException*</span> property to <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RefreshEdit\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_RefreshEdit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RefreshEdit()</div>        \r\n          </div>\r\n    \r\n            <p>Refreshes the value of the current cell with the underlying cell value when the cell is in edit mode, discarding any previous value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool RefreshEdit ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if successful; <code>false</code> if a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataError\" data-linktype=\"relative-path\">DataError</a> event occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call this method to force a cell to update its display value in edit mode. This is useful when an external process modifies the cell value and you want to notify the user of the change, even when a user-specified change is lost as a result.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ResetText\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_ResetText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ResetText()</div>        \r\n          </div>\r\n    \r\n            <p>Resets the <span class=\"xref\">stem.Windows.Forms.DataGridView.Text*</span> property to its default value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void ResetText ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Although this method behaves as described, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Text_\" data-linktype=\"relative-path\">Text</a> property is not relevant for this control.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_SelectAll\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_SelectAll_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectAll()</div>        \r\n          </div>\r\n    \r\n            <p>Selects all the cells in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void SelectAll ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is in column-selection mode and this method is called, each column&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Selected_\" data-linktype=\"relative-path\">Selected</a> property is set to <code>true</code>, and each row&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Selected_\" data-linktype=\"relative-path\">Selected</a> property is set to <code>false</code>.  </p>\n<p> Conversely, when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is in row-selection mode and this method is called, each row&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Selected_\" data-linktype=\"relative-path\">Selected</a> property is set to <code>true</code>, and each column&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Selected_\" data-linktype=\"relative-path\">Selected</a> property is set to <code>false</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the SelectAll method. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code> and a <a class=\"xref\" href=\"system.windows.forms.button\" data-linktype=\"relative-path\">Button</a> named <code>selectAllButton</code>, and ensure all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#180\">    private void selectAllButton_Click(object sender, EventArgs e)\n    {\n        dataGridView1.SelectAll();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#180\">    Private Sub selectAllButton_Click(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles clearSelectionButton.Click\n\n        dataGridView1.SelectAll()\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_SetBoundsCore_System_Int32_System_Int32_System_Int32_System_Int32_System_Windows_Forms_BoundsSpecified_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_SetBoundsCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)</div>        \r\n          </div>\r\n    \r\n            <p>This member overrides <span class=\"xref\">stem.Windows.Forms.Control.SetBoundsCore*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <span class=\"xref\">stem.Windows.Forms.Control.Left*</span> property value of the control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <span class=\"xref\">stem.Windows.Forms.Control.Top*</span> property value of the control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <span class=\"xref\">stem.Windows.Forms.Control.Width*</span> property value of the control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new <span class=\"xref\">stem.Windows.Forms.Control.Height*</span> property value of the control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>specified</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the <a class=\"xref\" href=\"system.windows.forms.boundsspecified\" data-linktype=\"relative-path\">BoundsSpecified</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>One or both of the width or height values exceeds the maximum value of 8,388,607.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_SetCurrentCellAddressCore_System_Int32_System_Int32_System_Boolean_System_Boolean_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_SetCurrentCellAddressCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetCurrentCellAddressCore(Int32,Int32,Boolean,Boolean,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the currently active cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool SetCurrentCellAddressCore (int columnIndex, int rowIndex, bool setAnchorCellAddress, bool validateCurrentCell, bool throughMouseClick);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the column containing the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row containing the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>setAnchorCellAddress</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to make the new current cell the anchor cell for a subsequent multicell selection using the SHIFT key; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>validateCurrentCell</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to validate the value in the old current cell and cancel the change if validation fails; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>throughMouseClick</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the current cell is being set as a result of a mouse click; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current cell was successfully set; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndex</code> is less than 0 or greater than the number of columns in the control minus 1, and <code>rowIndex</code> is not -1.  </p>\n<p> -or-  </p>\n<p> <code>rowIndex</code> is less than 0 or greater than the number of rows in the control minus 1, and <code>columnIndex</code> is not -1.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The specified cell has a <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.Visible*</span> property value of <code>false</code>.  </p>\n<p> -or-  </p>\n<p> This method was called for a reason other than the underlying data source being reset, and another thread is currently executing this method.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></div>\r\n                  </div>\r\n                  <p>The new current cell tried to enter edit mode, but its <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.EditType*</span> property does not indicate a class that derives from <a class=\"xref\" href=\"system.windows.forms.control\" data-linktype=\"relative-path\">Control</a> and implements <a class=\"xref\" href=\"system.windows.forms.idatagridvieweditingcontrol\" data-linktype=\"relative-path\">IDataGridViewEditingControl</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control uses this method whenever it changes the current cell. This method changes the current cell without changing the selection and optionally without validating the previous cell or changing the selection anchor cell. The anchor cell is the first cell of a block of multiple cells that the user can select by holding down the SHIFT key and clicking the last cell of the block.  </p>\n<p> If <code>rowIndex</code> and <code>columnIndex</code> are both -1, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCell_\" data-linktype=\"relative-path\">CurrentCell</a> property returns <code>null</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_SetSelectedCellCore_System_Int32_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_SetSelectedCellCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetSelectedCellCore(Int32,Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Changes the selection state of the cell with the specified row and column indexes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void SetSelectedCellCore (int columnIndex, int rowIndex, bool selected);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the column containing the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row containing the cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>selected</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to select the cell; <code>false</code> to cancel the selection of the cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndex</code> is less than 0 or greater than the number of columns in the control minus 1.  </p>\n<p> -or-  </p>\n<p> <code>rowIndex</code> is less than 0 or greater than the number of rows in the control minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control uses this method whenever it changes the selection state of a cell. The selection state changes without regard to the current <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a> property value, and without changing the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCell_\" data-linktype=\"relative-path\">CurrentCell</a> property value. This is useful when you want to implement your own selection modes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_SetSelectedColumnCore_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_SetSelectedColumnCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetSelectedColumnCore(Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Changes the selection state of the column with the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void SetSelectedColumnCore (int columnIndex, bool selected);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the column.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>selected</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to select the column; <code>false</code> to cancel the selection of the column.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndex</code> is less than 0 or greater than the number of columns in the control minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control uses this method whenever it changes the selection state of a column. The selection state changes without regard to the current <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a> property value, and without changing the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCell_\" data-linktype=\"relative-path\">CurrentCell</a> property value. This is useful when you want to implement your own selection modes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_SetSelectedRowCore_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_SetSelectedRowCore_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SetSelectedRowCore(Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Changes the selection state of the row with the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void SetSelectedRowCore (int rowIndex, bool selected);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the row.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>selected</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to select the row; <code>false</code> to cancel the selection of the row.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>rowIndex</code> is less than 0 or greater than the number of rows in the control minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control uses this method whenever it changes the selection state of a row. The selection state changes without regard to the current <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a> property value, and without changing the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCell_\" data-linktype=\"relative-path\">CurrentCell</a> property value. This is useful when you want to implement your own selection modes.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_Sort_System_Collections_IComparer_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_Sort_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Sort(IComparer)</div>        \r\n          </div>\r\n    \r\n            <p>Sorts the contents of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control using an implementation of the <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">IComparer</a> interface.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Sort (System.Collections.IComparer comparer);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>comparer</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">IComparer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An implementation of <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">IComparer</a> that performs the custom sorting operation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>comparer</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p><span class=\"xref\">stem.Windows.Forms.DataGridView.VirtualMode*</span> is set to <code>true</code>.  </p>\n<p> -or-  </p>\n<p> <span class=\"xref\">stem.Windows.Forms.DataGridView.DataSource*</span> is not <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method allows advanced customization of the sorting feature of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> class. In order to implement a highly customized sorting operation, you can write an event handler for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeaderMouseClick\" data-linktype=\"relative-path\">ColumnHeaderMouseClick</a> event and call this method with an instance of a class that implements the <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">System.Collections.IComparer</a> interface as a parameter. In this case, you will typically set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_SortMode_\" data-linktype=\"relative-path\">SortMode</a> property to <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnsortmode\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewColumnSortMode</a> to disable automatic sorting and to leave room for a sorting glyph. When sorting by columns set to programmatic sort mode, you must display the sorting glyph yourself by setting the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnheadercell#System_Windows_Forms_DataGridViewColumnHeaderCell_SortGlyphDirection_\" data-linktype=\"relative-path\">SortGlyphDirection</a> property.  </p>\n<p> This method works only when the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property is not set. When you bind the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control to an external data source, you must use the sorting operations provided by that data source. When you provide your own data source by implementing virtual mode, you must also handle the sorting operations yourself.  </p>\n<p> Calling this method automatically sets the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCell_\" data-linktype=\"relative-path\">CurrentCell</a> property to <code>null</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Sort method overload in a multiple column sort scenario. In this example, the <a class=\"xref\" href=\"system.collections.icomparer\" data-linktype=\"relative-path\">IComparer</a> interface is implemented in the <code>RowComparer</code> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewIComparerSort#10\">    Private Sub Button1_Click(ByVal sender As Object, ByVal e As EventArgs) _\n    Handles Button1.Click\n        If RadioButton1.Checked = True Then\n            DataGridView1.Sort(New RowComparer(SortOrder.Ascending))\n        ElseIf RadioButton2.Checked = True Then\n            DataGridView1.Sort(New RowComparer(SortOrder.Descending))\n        End If\n    End Sub\n\n    Private Class RowComparer\n        Implements System.Collections.IComparer\n\n        Private sortOrderModifier As Integer = 1\n\n        Public Sub New(ByVal sortOrder As SortOrder)\n            If sortOrder = sortOrder.Descending Then\n                sortOrderModifier = -1\n            ElseIf sortOrder = sortOrder.Ascending Then\n\n                sortOrderModifier = 1\n            End If\n        End Sub\n\n        Public Function Compare(ByVal x As Object, ByVal y As Object) As Integer _\n            Implements System.Collections.IComparer.Compare\n\n            Dim DataGridViewRow1 As DataGridViewRow = CType(x, DataGridViewRow)\n            Dim DataGridViewRow2 As DataGridViewRow = CType(y, DataGridViewRow)\n\n            &#39; Try to sort based on the Last Name column.\n            Dim CompareResult As Integer = System.String.Compare( _\n                DataGridViewRow1.Cells(1).Value.ToString(), _\n                DataGridViewRow2.Cells(1).Value.ToString())\n\n            &#39; If the Last Names are equal, sort based on the First Name.\n            If CompareResult = 0 Then\n                CompareResult = System.String.Compare( _\n                    DataGridViewRow1.Cells(0).Value.ToString(), _\n                    DataGridViewRow2.Cells(0).Value.ToString())\n            End If\n            Return CompareResult * sortOrderModifier\n        End Function\n    End Class\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewIComparerSort#10\">    private void Button1_Click( object sender, EventArgs e )\n    {\n        if ( RadioButton1.Checked == true )\n        {\n            DataGridView1.Sort( new RowComparer( SortOrder.Ascending ) );\n        }\n        else if ( RadioButton2.Checked == true )\n        {\n            DataGridView1.Sort( new RowComparer( SortOrder.Descending ) );\n        }\n    }\n\n    private class RowComparer : System.Collections.IComparer\n    {\n        private static int sortOrderModifier = 1;\n\n        public RowComparer(SortOrder sortOrder)\n        {\n            if (sortOrder == SortOrder.Descending)\n            {\n                sortOrderModifier = -1;\n            }\n            else if (sortOrder == SortOrder.Ascending)\n            {\n                sortOrderModifier = 1;\n            }\n        }\n\n        public int Compare(object x, object y)\n        {\n            DataGridViewRow DataGridViewRow1 = (DataGridViewRow)x;\n            DataGridViewRow DataGridViewRow2 = (DataGridViewRow)y;\n\n            // Try to sort based on the Last Name column.\n            int CompareResult = System.String.Compare(\n                DataGridViewRow1.Cells[1].Value.ToString(),\n                DataGridViewRow2.Cells[1].Value.ToString());\n\n            // If the Last Names are equal, sort based on the First Name.\n            if ( CompareResult == 0 )\n            {\n                CompareResult = System.String.Compare(\n                    DataGridViewRow1.Cells[0].Value.ToString(),\n                    DataGridViewRow2.Cells[0].Value.ToString());\n            }\n            return CompareResult * sortOrderModifier;\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_Sort_System_Windows_Forms_DataGridViewColumn_System_ComponentModel_ListSortDirection_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_Sort_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Sort(DataGridViewColumn,ListSortDirection)</div>        \r\n          </div>\r\n    \r\n            <p>Sorts the contents of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control in ascending or descending order based on the contents of the specified column.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void Sort (System.Windows.Forms.DataGridViewColumn dataGridViewColumn, System.ComponentModel.ListSortDirection direction);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>dataGridViewColumn</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The column by which to sort the contents of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>direction</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.listsortdirection\" data-linktype=\"relative-path\">ListSortDirection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.componentmodel.listsortdirection\" data-linktype=\"relative-path\">ListSortDirection</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified column is not part of this <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.  </p>\n<p> -or-  </p>\n<p> The <span class=\"xref\">stem.Windows.Forms.DataGridView.DataSource*</span> property has been set and the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.IsDataBound*</span> property of the specified column returns <code>false</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>dataGridViewColumn</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The <span class=\"xref\">stem.Windows.Forms.DataGridView.VirtualMode*</span> property is set to <code>true</code> and the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.IsDataBound*</span> property of the specified column returns <code>false</code>.  </p>\n<p> -or-  </p>\n<p> The object specified by the <span class=\"xref\">stem.Windows.Forms.DataGridView.DataSource*</span> property does not implement the <a class=\"xref\" href=\"system.componentmodel.ibindinglist\" data-linktype=\"relative-path\">IBindingList</a> interface.  </p>\n<p> -or-  </p>\n<p> The object specified by the <span class=\"xref\">stem.Windows.Forms.DataGridView.DataSource*</span> property has a <span class=\"xref\">stem.ComponentModel.IBindingList.SupportsSorting*</span> property value of <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method sorts the contents of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> by comparing values in the specified column. By default, the sort operation will use the <a class=\"xref\" href=\"system.collections.comparer#System_Collections_Comparer_Compare_\" data-linktype=\"relative-path\">Compare</a> method to compare pairs of cells in the column using the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Value_\" data-linktype=\"relative-path\">Value</a> property.  </p>\n<p> For columns with the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_SortMode_\" data-linktype=\"relative-path\">SortMode</a> property set to <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnsortmode\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewColumnSortMode</a>, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SortedColumn_\" data-linktype=\"relative-path\">SortedColumn</a> and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SortOrder_\" data-linktype=\"relative-path\">SortOrder</a> properties are set automatically and the appropriate sorting glyph is displayed. For columns with the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_SortMode_\" data-linktype=\"relative-path\">SortMode</a> property set to <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnsortmode\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridViewColumnSortMode</a>, you must display the sorting glyph yourself through the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnheadercell#System_Windows_Forms_DataGridViewColumnHeaderCell_SortGlyphDirection_\" data-linktype=\"relative-path\">SortGlyphDirection</a> property.  </p>\n<p> You can customize the sorting operation used by this method by handling the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SortCompare\" data-linktype=\"relative-path\">SortCompare</a> event. This event occurs only when the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property has not been set.  </p>\n<p> When the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property has been set, this method works for data-bound columns only. Data-bound columns have had their <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DataPropertyName_\" data-linktype=\"relative-path\">DataPropertyName</a> property set. This causes the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_IsDataBound_\" data-linktype=\"relative-path\">IsDataBound</a> property to return <code>true</code>.  </p>\n<p> If your <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control contains both bound and unbound columns, you must implement virtual mode to maintain the values of the unbound columns when the control is sorted by a bound column. You can do this by setting the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property to <code>true</code> and handling the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueNeeded\" data-linktype=\"relative-path\">CellValueNeeded</a> event. If the column is editable, you should also handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValuePushed\" data-linktype=\"relative-path\">CellValuePushed</a> event. For more information about virtual mode, see <a href=\"../Topic/How%20to:%20Implement%20Virtual%20Mode%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Implement Virtual Mode in the Windows Forms DataGridView Control</a>. Sorting by unbound columns when the control is data-bound is not supported.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Sort_\" data-linktype=\"relative-path\">Sort</a> in a programmatic sort.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewProgrammaticSort#10\">    private void sortButton_Click(object sender, System.EventArgs e)\n    {\n        // Check which column is selected, otherwise set NewColumn to null.\n        DataGridViewColumn newColumn =\n            dataGridView1.Columns.GetColumnCount(\n            DataGridViewElementStates.Selected) == 1 ?\n            dataGridView1.SelectedColumns[0] : null;\n\n        DataGridViewColumn oldColumn = dataGridView1.SortedColumn;\n        ListSortDirection direction;\n\n        // If oldColumn is null, then the DataGridView is not currently sorted.\n        if (oldColumn != null)\n        {\n            // Sort the same column again, reversing the SortOrder.\n            if (oldColumn == newColumn &amp;&amp;\n                dataGridView1.SortOrder == SortOrder.Ascending)\n            {\n                direction = ListSortDirection.Descending;\n            }\n            else\n            {\n                // Sort a new column and remove the old SortGlyph.\n                direction = ListSortDirection.Ascending;\n                oldColumn.HeaderCell.SortGlyphDirection = SortOrder.None;\n            }\n        }\n        else\n        {\n            direction = ListSortDirection.Ascending;\n        }\n\n        // If no column has been selected, display an error dialog  box.\n        if (newColumn == null)\n        {\n            MessageBox.Show(&quot;Select a single column and try again.&quot;,\n                &quot;Error: Invalid Selection&quot;, MessageBoxButtons.OK,\n                MessageBoxIcon.Error);\n        }\n        else\n        {\n            dataGridView1.Sort(newColumn, direction);\n            newColumn.HeaderCell.SortGlyphDirection =\n                direction == ListSortDirection.Ascending ?\n                SortOrder.Ascending : SortOrder.Descending;\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewProgrammaticSort#10\">    Private Sub SortButton_Click(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles sortButton.Click\n\n        &#39; Check which column is selected, otherwise set NewColumn to Nothing.\n        Dim newColumn As DataGridViewColumn\n        If dataGridView1.Columns.GetColumnCount(DataGridViewElementStates _\n            .Selected) = 1 Then\n            newColumn = dataGridView1.SelectedColumns(0)\n        Else\n            newColumn = Nothing\n        End If\n\n        Dim oldColumn As DataGridViewColumn = dataGridView1.SortedColumn\n        Dim direction As ListSortDirection\n\n        &#39; If oldColumn is null, then the DataGridView is not currently sorted.\n        If oldColumn IsNot Nothing Then\n\n            &#39; Sort the same column again, reversing the SortOrder.\n            If oldColumn Is newColumn AndAlso dataGridView1.SortOrder = _\n                SortOrder.Ascending Then\n                direction = ListSortDirection.Descending\n            Else\n\n                &#39; Sort a new column and remove the old SortGlyph.\n                direction = ListSortDirection.Ascending\n                oldColumn.HeaderCell.SortGlyphDirection = SortOrder.None\n            End If\n        Else\n            direction = ListSortDirection.Ascending\n        End If\n\n\n        &#39; If no column has been selected, display an error dialog  box.\n        If newColumn Is Nothing Then\n            MessageBox.Show(&quot;Select a single column and try again.&quot;, _\n                &quot;Error: Invalid Selection&quot;, MessageBoxButtons.OK, _\n                MessageBoxIcon.Error)\n        Else\n            dataGridView1.Sort(newColumn, direction)\n            If direction = ListSortDirection.Ascending Then\n                newColumn.HeaderCell.SortGlyphDirection = SortOrder.Ascending\n            Else\n                newColumn.HeaderCell.SortGlyphDirection = SortOrder.Descending\n            End If\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_UpdateCellErrorText_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_UpdateCellErrorText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateCellErrorText(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Forces the cell at the specified location to update its error text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UpdateCellErrorText (int columnIndex, int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The column index of the cell to update, or -1 to indicate a row header cell.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The row index of the cell to update, or -1 to indicate a column header cell.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndex</code> is less than -1 or greater than the number of columns in the control minus 1.  </p>\n<p> -or-  </p>\n<p> <code>rowIndex</code> is less than -1 or greater than the number of rows in the control minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method when you maintain cell error text yourself by handling the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> event. Call this method when you change the stored error text for the specified cell. This will invalidate the cell, forcing the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control to retrieve the updated error text through the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellErrorTextNeeded\" data-linktype=\"relative-path\">CellErrorTextNeeded</a> event handler.  </p>\n<p> Although you can use this method to update errors for header cells, column header cells do not display error glyphs.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_UpdateCellValue_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_UpdateCellValue_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateCellValue(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Forces the control to update its display of the cell at the specified location based on its new value, applying any automatic sizing modes currently in effect.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UpdateCellValue (int columnIndex, int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>columnIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based column index of the cell with the new value.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based row index of the cell with the new value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>columnIndex</code> is less than zero or greater than the number of columns in the control minus one.  </p>\n<p> -or-  </p>\n<p> <code>rowIndex</code> is less than zero or greater than the number of rows in the control minus one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method when you maintain cell values in virtual mode and you update a value in your custom data cache outside of a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValuePushed\" data-linktype=\"relative-path\">CellValuePushed</a> event handler.  </p>\n<p> This method invalidates the cell, forcing the control to retrieve the new value through the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueNeeded\" data-linktype=\"relative-path\">CellValueNeeded</a> event handler and apply any automatic sizing modes that are in effect.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_UpdateRowErrorText_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_UpdateRowErrorText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateRowErrorText(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Forces the row at the given row index to update its error text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UpdateRowErrorText (int rowIndex);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the row to update.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>rowIndex</code> is not in the valid range of 0 to the number of rows in the control minus 1.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful when you maintain row error text yourself by handling the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowErrorTextNeeded\" data-linktype=\"relative-path\">RowErrorTextNeeded</a> event. Call this method when you change the stored error text for the specified row. This will force the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control to retrieve the updated text through the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowErrorTextNeeded\" data-linktype=\"relative-path\">RowErrorTextNeeded</a> event handler.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_UpdateRowErrorText_System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_UpdateRowErrorText_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateRowErrorText(Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Forces the rows in the given range to update their error text.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UpdateRowErrorText (int rowIndexStart, int rowIndexEnd);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndexStart</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the first row in the set of rows to update.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndexEnd</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the last row in the set of rows to update.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>rowIndexStart</code> is not in the valid range of 0 to the number of rows in the control minus 1.  </p>\n<p> -or-  </p>\n<p> <code>rowIndexEnd</code> is not in the valid range of 0 to the number of rows in the control minus 1.  </p>\n<p> -or-  </p>\n<p> <code>rowIndexEnd</code> is less than <code>rowIndexStart</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful when you maintain row error text yourself by handling the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowErrorTextNeeded\" data-linktype=\"relative-path\">RowErrorTextNeeded</a> event. Call this method when you change the stored error text for the specified rows. This will force the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control to retrieve the updated text through the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowErrorTextNeeded\" data-linktype=\"relative-path\">RowErrorTextNeeded</a> event handler.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_UpdateRowHeightInfo_System_Int32_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_UpdateRowHeightInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UpdateRowHeightInfo(Int32,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Forces the specified row or rows to update their height information.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void UpdateRowHeightInfo (int rowIndex, bool updateToEnd);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rowIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the first row to update.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>updateToEnd</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to update the specified row and all subsequent rows.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>rowIndex</code> is less than 0 and <code>updateToEnd</code> is <code>true</code>.  </p>\n<p> -or-  </p>\n<p> <code>rowIndex</code> is less than -1 and <code>updateToEnd</code> is <code>false</code>.  </p>\n<p> -or-  </p>\n<p> <code>rowIndex</code> is greater than the highest row index in the <span class=\"xref\">stem.Windows.Forms.DataGridView.Rows*</span> collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is useful when you maintain row heights yourself using handlers for the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeightInfoNeeded\" data-linktype=\"relative-path\">RowHeightInfoNeeded</a> and <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeightInfoPushed\" data-linktype=\"relative-path\">RowHeightInfoPushed</a> events. Call this method whenever you change the stored row heights outside of a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeightInfoPushed\" data-linktype=\"relative-path\">RowHeightInfoPushed</a> event handler. This will force the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control to retrieve the updated height information through the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeightInfoNeeded\" data-linktype=\"relative-path\">RowHeightInfoNeeded</a> event handler.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_WndProc_System_Windows_Forms_Message__\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_WndProc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WndProc(Message)</div>        \r\n          </div>\r\n    \r\n            <p>Processes window messages.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void WndProc (ref System.Windows.Forms.Message m);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>m</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.message\" data-linktype=\"relative-path\">Message</a>, passed by reference, that represents the window message to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information, see the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_WndProc_\" data-linktype=\"relative-path\">WndProc</a> method on the base class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AllowUserToAddRowsChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowUserToAddRowsChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.AllowUserToAddRows*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler AllowUserToAddRowsChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AllowUserToAddRowsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the AllowUserToAddRowsChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#250\">private void DataGridView1_AllowUserToAddRowsChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.AllowUserToAddRowsChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#250\">Private Sub DataGridView1_AllowUserToAddRowsChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.AllowUserToAddRowsChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.AllowUserToAddRowsChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AllowUserToDeleteRowsChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowUserToDeleteRowsChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the AllowUserToDeleteRowsChanged property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler AllowUserToDeleteRowsChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AllowUserToDeleteRowsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the AllowUserToDeleteRowsChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#251\">private void DataGridView1_AllowUserToDeleteRowsChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.AllowUserToDeleteRowsChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#251\">Private Sub DataGridView1_AllowUserToDeleteRowsChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.AllowUserToDeleteRowsChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.AllowUserToDeleteRowsChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AllowUserToOrderColumnsChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowUserToOrderColumnsChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.AllowUserToOrderColumns*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler AllowUserToOrderColumnsChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AllowUserToOrderColumnsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the AllowUserToOrderColumnsChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#252\">private void DataGridView1_AllowUserToOrderColumnsChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.AllowUserToOrderColumnsChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#252\">Private Sub DataGridView1_AllowUserToOrderColumnsChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.AllowUserToOrderColumnsChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.AllowUserToOrderColumnsChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AllowUserToResizeColumnsChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowUserToResizeColumnsChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.AllowUserToResizeColumns*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler AllowUserToResizeColumnsChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AllowUserToResizeColumnsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the AllowUserToResizeColumnsChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#253\">private void DataGridView1_AllowUserToResizeColumnsChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.AllowUserToResizeColumnsChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#253\">Private Sub DataGridView1_AllowUserToResizeColumnsChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.AllowUserToResizeColumnsChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.AllowUserToResizeColumnsChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AllowUserToResizeRowsChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AllowUserToResizeRowsChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.AllowUserToResizeRows*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler AllowUserToResizeRowsChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AllowUserToResizeRowsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the AllowUserToResizeRowsChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#254\">private void DataGridView1_AllowUserToResizeRowsChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.AllowUserToResizeRowsChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#254\">Private Sub DataGridView1_AllowUserToResizeRowsChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.AllowUserToResizeRowsChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.AllowUserToResizeRowsChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AlternatingRowsDefaultCellStyleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AlternatingRowsDefaultCellStyleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler AlternatingRowsDefaultCellStyleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs when any property of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> returned by the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AlternatingRowsDefaultCellStyle_\" data-linktype=\"relative-path\">AlternatingRowsDefaultCellStyle</a> property is set to a new value or when the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AlternatingRowsDefaultCellStyle_\" data-linktype=\"relative-path\">AlternatingRowsDefaultCellStyle</a> property is set to a new <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> with at least one property value different than the previous cell style object.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AlternatingRowsDefaultCellStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the AlternatingRowsDefaultCellStyleChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#255\">private void DataGridView1_AlternatingRowsDefaultCellStyleChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.AlternatingRowsDefaultCellStyleChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#255\">Private Sub DataGridView1_AlternatingRowsDefaultCellStyleChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.AlternatingRowsDefaultCellStyleChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.AlternatingRowsDefaultCellStyleChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoGenerateColumnsChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoGenerateColumnsChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the AutoGenerateColumnsChanged property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler AutoGenerateColumnsChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AutoGenerateColumnsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the AutoGenerateColumnsChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#256\">private void DataGridView1_AutoGenerateColumnsChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.AutoGenerateColumnsChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#256\">Private Sub DataGridView1_AutoGenerateColumnsChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.AutoGenerateColumnsChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.AutoGenerateColumnsChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoSizeColumnModeChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoSizeColumnModeChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.AutoSizeMode*</span> property of a column changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewAutoSizeColumnModeEventHandler AutoSizeColumnModeChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this event. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Manipulate%20Columns%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Manipulate Columns in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#180\">   // Updated the criteria label.\n   void dataGridView_AutoSizeColumnModeChanged( Object^ /*sender*/, DataGridViewAutoSizeColumnModeEventArgs^ args )\n   {\n      args-&gt;Column-&gt;DataGridView-&gt;Parent-&gt;Controls[ L&quot;flowlayoutpanel&quot; ]-&gt;Controls[ criteriaLabel ]-&gt;Text = String::Concat( criteriaLabel, args-&gt;Column-&gt;AutoSizeMode );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#180\">    &#39; Updated the criteria label.\n    Private Sub dataGridView_AutoSizeColumnCriteriaChanged( _\n        ByVal sender As Object, _\n        ByVal args As DataGridViewAutoSizeColumnModeEventArgs) _\n        Handles DataGridView.AutoSizeColumnModeChanged\n\n        args.Column.DataGridView.Parent. _\n        Controls(&quot;flowlayoutpanel&quot;). _\n        Controls(criteriaLabel).Text = _\n            criteriaLabel &amp; args.Column.AutoSizeMode.ToString\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ButtonDemos#180\">    // Updated the criteria label.\n    private void dataGridView_AutoSizeColumnModeChanged(object sender,\n        DataGridViewAutoSizeColumnModeEventArgs args)\n    {\n        args.Column.DataGridView.Parent.\n            Controls[&quot;flowlayoutpanel&quot;].Controls[criteriaLabel].\n            Text = criteriaLabel\n            + args.Column.AutoSizeMode.ToString();\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoSizeColumnsModeChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoSizeColumnsModeChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.AutoSizeColumnsMode*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventHandler AutoSizeColumnsModeChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the AutoSizeColumnsModeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the AutoSizeColumnsModeChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#257\">private void DataGridView1_AutoSizeColumnsModeChanged(Object sender, DataGridViewAutoSizeColumnsModeEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;PreviousModes&quot;, e.PreviousModes );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;AutoSizeColumnsModeChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#257\">Private Sub DataGridView1_AutoSizeColumnsModeChanged(sender as Object, e as DataGridViewAutoSizeColumnsModeEventArgs) _ \n     Handles DataGridView1.AutoSizeColumnsModeChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;PreviousModes&quot;, e.PreviousModes)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;AutoSizeColumnsModeChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_AutoSizeRowsModeChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AutoSizeRowsModeChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewautosizerowsmode\" data-linktype=\"relative-path\">DataGridViewAutoSizeRowsMode</a> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler AutoSizeRowsModeChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this event. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Automatically%20Resize%20Cells%20When%20Content%20Changes%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Automatically Resize Cells When Content Changes in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.AutoSizing#10\">    private void WatchRowsModeChanges(object sender,\n        DataGridViewAutoSizeModeEventArgs modeEvent)\n    {\n        Label label =\n            (Label)flowLayoutPanel1.Controls[currentLayoutName];\n\n        if (modeEvent.PreviousModeAutoSized)\n        {\n            label.Text = &quot;changed to a different &quot; +\n                label.Name +\n                dataGridView1.AutoSizeRowsMode.ToString();\n        }\n        else\n        {\n            label.Text = label.Name +\n                dataGridView1.AutoSizeRowsMode.ToString();\n        }\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.AutoSizing#10\">   void WatchRowsModeChanges( Object^ /*sender*/, DataGridViewAutoSizeModeEventArgs^ modeEvent )\n   {\n      Label^ label = dynamic_cast&lt;Label^&gt;(flowLayoutPanel1-&gt;Controls[ currentLayoutName ]);\n      if ( modeEvent-&gt;PreviousModeAutoSized )\n      {\n         label-&gt;Text = String::Format( &quot;changed to a different {0}{1}&quot;, label-&gt;Name, dataGridView1-&gt;AutoSizeRowsMode );\n      }\n      else\n      {\n         label-&gt;Text = String::Concat( label-&gt;Name, dataGridView1-&gt;AutoSizeRowsMode );\n      }\n   }\n\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.AutoSizing#10\">    Private Sub WatchRowsModeChanges(ByVal sender As Object, _\n        ByVal modeEvent As DataGridViewAutoSizeModeEventArgs) _\n        Handles DataGridView1.AutoSizeRowsModeChanged\n\n        Dim label As Label = CType(FlowLayoutPanel1.Controls _\n            (currentLayoutName), Label)\n\n        If modeEvent.PreviousModeAutoSized Then\n            label.Text = &quot;changed to different &quot; &amp; label.Name &amp; _\n                DataGridView1.AutoSizeRowsMode.ToString()\n        Else\n            label.Text = label.Name &amp; _\n                DataGridView1.AutoSizeRowsMode.ToString()\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_BackColorChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackColorChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.BackColor*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler BackColorChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BackColorChanged event is raised if the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_BackColor_\" data-linktype=\"relative-path\">BackColor</a> property is changed programmatically or by user interaction.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_BackgroundColorChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackgroundColorChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.BackgroundColor*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler BackgroundColorChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the BackgroundColorChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the BackgroundColorChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#259\">private void DataGridView1_BackgroundColorChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.BackgroundColorChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#259\">Private Sub DataGridView1_BackgroundColorChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.BackgroundColorChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.BackgroundColorChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_BackgroundImageChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackgroundImageChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.BackgroundImage*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler BackgroundImageChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_BackgroundImageLayoutChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BackgroundImageLayoutChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.BackgroundImageLayout*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler BackgroundImageLayoutChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Although this event occurs as described, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_BackgroundImageLayout_\" data-linktype=\"relative-path\">BackgroundImageLayout</a> property is not relevant for this control.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_BorderStyleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BorderStyleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.BorderStyle*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler BorderStyleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the BorderStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the BorderStyleChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#260\">private void DataGridView1_BorderStyleChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.BorderStyleChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#260\">Private Sub DataGridView1_BorderStyleChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.BorderStyleChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.BorderStyleChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CancelRowEdit\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CancelRowEdit</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.VirtualMode*</span> property of a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control is <code>true</code> and the cancels edits in a row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.QuestionEventHandler CancelRowEdit;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is in virtual mode, changes are committed to the data cache at the cell level by default. The CancelRowEdit event can be used when implementing row-level transactions.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to handle this event for a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control in virtual mode. When the control is in edit mode, the <code>rowInEdit</code> variable holds the index of the row being edited, and the <code>customerInEdit</code> variable holds a reference to a Customer object corresponding to that row. When the user cancels out of edit mode, this object can be discarded. If the row the user was editing is the row for new records, however, the old Customer object is discarded and replaced with a new one so that the user can begin making edits again. This example is part of a larger example available in <a href=\"../Topic/Walkthrough:%20Implementing%20Virtual%20Mode%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Walkthrough: Implementing Virtual Mode in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.VirtualMode#170\">   void dataGridView1_CancelRowEdit( Object^ /*sender*/,\n       System::Windows::Forms::QuestionEventArgs^ /*e*/ )\n   {\n      if ( this-&gt;rowInEdit == this-&gt;dataGridView1-&gt;Rows-&gt;Count - 2 &amp;&amp;\n           this-&gt;rowInEdit == this-&gt;customers-&gt;Count )\n      {\n         \n         // If the user has canceled the edit of a newly created row, \n         // replace the corresponding Customer object with a new, empty one.\n         this-&gt;customerInEdit = gcnew Customer;\n      }\n      else\n      {\n         \n         // If the user has canceled the edit of an existing row, \n         // release the corresponding Customer object.\n         this-&gt;customerInEdit = nullptr;\n         this-&gt;rowInEdit = -1;\n      }\n   }\n\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.VirtualMode#170\">    Private Sub dataGridView1_CancelRowEdit(ByVal sender As Object, _\n        ByVal e As System.Windows.Forms.QuestionEventArgs) _\n        Handles dataGridView1.CancelRowEdit\n\n        If Me.rowInEdit = Me.dataGridView1.Rows.Count - 2 AndAlso _\n            Me.rowInEdit = Me.customers.Count Then\n\n            &#39; If the user has canceled the edit of a newly created row, \n            &#39; replace the corresponding Customer object with a new, empty one.\n            Me.customerInEdit = New Customer()\n\n        Else\n\n            &#39; If the user has canceled the edit of an existing row, \n            &#39; release the corresponding Customer object.\n            Me.customerInEdit = Nothing\n            Me.rowInEdit = -1\n\n        End If\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.VirtualMode#170\">    private void dataGridView1_CancelRowEdit(object sender,\n        System.Windows.Forms.QuestionEventArgs e)\n    {\n        if (this.rowInEdit == this.dataGridView1.Rows.Count - 2 &amp;&amp;\n            this.rowInEdit == this.customers.Count)\n        {\n            // If the user has canceled the edit of a newly created row, \n            // replace the corresponding Customer object with a new, empty one.\n            this.customerInEdit = new Customer();\n        }\n        else\n        {\n            // If the user has canceled the edit of an existing row, \n            // release the corresponding Customer object.\n            this.customerInEdit = null;\n            this.rowInEdit = -1;\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellBeginEdit\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellBeginEdit</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when edit mode starts for the selected cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellCancelEventHandler CellBeginEdit;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to handle this event to reflect that the current <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> is being edited. In this example, the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Text_\" data-linktype=\"relative-path\">Text</a> property of the containing <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> is set to reflect which cell is being edited. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code>, and ensure all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#220\">    private void dataGridView1_CellBeginEdit(object sender,\n        DataGridViewCellCancelEventArgs e)\n    {\n        string msg = String.Format(&quot;Editing Cell at ({0}, {1})&quot;,\n            e.ColumnIndex, e.RowIndex);\n        this.Text = msg;\n    }\n\n    private void dataGridView1_CellEndEdit(object sender,\n        DataGridViewCellEventArgs e)\n    {\n        string msg = String.Format(&quot;Finished Editing Cell at ({0}, {1})&quot;,\n            e.ColumnIndex, e.RowIndex);\n        this.Text = msg;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#220\">    Private Sub dataGridView1_CellBeginEdit(ByVal sender As Object, _\n        ByVal e As DataGridViewCellCancelEventArgs) _\n        Handles DataGridView1.CellBeginEdit\n\n        Dim msg As String = _\n            String.Format(&quot;Editing Cell at ({0}, {1})&quot;, _\n            e.ColumnIndex, e.RowIndex)\n        Me.Text = msg\n\n    End Sub\n\n    Private Sub dataGridView1_CellEndEdit(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles DataGridView1.CellEndEdit\n\n        Dim msg As String = _\n            String.Format(&quot;Finished Editing Cell at ({0}, {1})&quot;, _\n            e.ColumnIndex, e.RowIndex)\n        Me.Text = msg\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellBorderStyleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellBorderStyleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the border style of a cell changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler CellBorderStyleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellBorderStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the CellBorderStyleChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#261\">private void DataGridView1_CellBorderStyleChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.CellBorderStyleChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#261\">Private Sub DataGridView1_CellBorderStyleChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.CellBorderStyleChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.CellBorderStyleChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when any part of a cell is clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler CellClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs when any part of a cell is clicked, including borders and padding. It also occurs when the user presses and releases the SPACE key while a button cell or check box cell has focus, and will occur twice for these cell types if the cell is clicked while pressing the SPACE key.  </p>\n<p> To determine when the cell contents are clicked, handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContentClick\" data-linktype=\"relative-path\">CellContentClick</a> event.  </p>\n<p> This event does not receive information about the mouse position. If the event handler needs information about the mouse position, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseClick\" data-linktype=\"relative-path\">CellMouseClick</a> event.  </p>\n<p> For clicks in a <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell\" data-linktype=\"relative-path\">DataGridViewCheckBoxCell</a>, this event occurs before the check box changes value, so if you do not want to calculate the expected value based on the current value, you will typically handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueChanged\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellValueChanged</a> event instead. Because that event occurs only when the user-specified value is committed, which typically occurs when focus leaves the cell, you must also handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCellDirtyStateChanged\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged</a> event. In that handler, if the current cell is a check box cell, call the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CommitEdit_\" data-linktype=\"relative-path\">CommitEdit</a> method and pass in the <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a> value.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows a CellClick event handler in a Tic-Tac-Toe game implementation that uses image columns in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. Unless the game is over or the cell has already been clicked, the event handler sets the cell value to one of two <a class=\"xref\" href=\"system.drawing.bitmap\" data-linktype=\"relative-path\">Bitmap</a> objects represented by the variables <code>x</code> and <code>o</code>.  </p>\n<p> This code is part of a larger example shown in <a href=\"../Topic/How%20to:%20Work%20with%20Image%20Columns%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Work with Image Columns in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10\">    private void dataGridView1_CellClick(object sender,\n        DataGridViewCellEventArgs e)\n    {\n\n        if (turn.Text.Equals(gameOverString)) { return; }\n\n        DataGridViewImageCell cell = (DataGridViewImageCell)\n            dataGridView1.Rows[e.RowIndex].Cells[e.ColumnIndex];\n\n        if (cell.Value == blank)\n        {\n            if (IsOsTurn())\n            {\n                cell.Value = o;\n            }\n            else\n            {\n                cell.Value = x;\n            }\n            ToggleTurn();\n        }\n        if (IsAWin())\n        {\n            turn.Text = gameOverString;\n        }\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10\">   void dataGridView1_CellClick( Object^ sender, DataGridViewCellEventArgs^ e )\n   {\n      if ( turn-&gt;Equals( gameOverString ) )\n      {\n         return;\n      }\n\n      DataGridViewImageCell^ cell = dynamic_cast&lt;DataGridViewImageCell^&gt;(dataGridView1-&gt;Rows[ e-&gt;RowIndex ]-&gt;Cells[ e-&gt;ColumnIndex ]);\n      if ( cell-&gt;Value == blank )\n      {\n         if ( IsOsTurn() )\n         {\n            cell-&gt;Value = o;\n         }\n         else\n         {\n            cell-&gt;Value = x;\n         }\n\n         ToggleTurn();\n      }\n\n      if ( IsAWin( cell ) )\n      {\n         turn-&gt;Text = gameOverString;\n      }\n   }\n\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#10\">    Private Sub dataGridView1_CellClick(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellClick\n\n        If turn.Text.Equals(gameOverString) Then Return\n\n        Dim cell As DataGridViewImageCell = _\n            CType(dataGridView1.Rows(e.RowIndex). _\n                Cells(e.ColumnIndex), DataGridViewImageCell)\n        If (cell.Value Is blank) Then\n            If IsOsTurn() Then\n                cell.Value = o\n            Else\n                cell.Value = x\n            End If\n            ToggleTurn()\n            ToolTip(e)\n        End If\n        If IsAWin() Then\n            turn.Text = gameOverString\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellContentClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellContentClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the content within a cell is clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler CellContentClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs when the cell content is clicked. It also occurs when the user presses and releases the SPACEBAR while a button cell or check box cell has focus, and will occur twice for these cell types if the cell content is clicked while pressing the SPACEBAR.  </p>\n<p> Use this event to detect button clicks for a <a class=\"xref\" href=\"system.windows.forms.datagridviewbuttoncell\" data-linktype=\"relative-path\">DataGridViewButtonCell</a> or link clicks for a <a class=\"xref\" href=\"system.windows.forms.datagridviewlinkcell\" data-linktype=\"relative-path\">DataGridViewLinkCell</a>.  </p>\n<p> For clicks in a <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell\" data-linktype=\"relative-path\">DataGridViewCheckBoxCell</a>, this event occurs before the check box changes value, so if you do not want to calculate the expected value based on the current value, you will typically handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueChanged\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CellValueChanged</a> event instead. Because that event occurs only when the user-specified value is committed, which typically occurs when focus leaves the cell, you must also handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCellDirtyStateChanged\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged</a> event. In that handler, if the current cell is a check box cell, call the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CommitEdit_\" data-linktype=\"relative-path\">CommitEdit</a> method and pass in the <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a> value.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example provides a handler for this event that determines whether the clicked cell is a link cell or a button cell and performs the corresponding action as a result. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn\" data-linktype=\"relative-path\">DataGridViewComboBoxColumn</a> class overview topic.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60\">private:\n    void DataGridView1_CellContentClick(Object^ /*sender*/, DataGridViewCellEventArgs^ e)\n    {\n\n        if (IsANonHeaderLinkCell(e))\n        {\n            MoveToLinked(e);\n        }\n        else if (IsANonHeaderButtonCell(e))\n        {\n            PopulateSales(e);\n        }\n    }\n\nprivate:\n    void MoveToLinked(DataGridViewCellEventArgs^ e)\n    {\n        String^ employeeId;\n        Object^ value = DataGridView1-&gt;Rows[e-&gt;RowIndex]-&gt;Cells[e-&gt;ColumnIndex]-&gt;Value;\n        if (dynamic_cast&lt;DBNull^&gt;(value) != nullptr) { return; }\n\n        employeeId = value-&gt;ToString();\n        DataGridViewCell^ boss = RetrieveSuperiorsLastNameCell(employeeId);\n        if (boss != nullptr)\n        {\n            DataGridView1-&gt;CurrentCell = boss;\n        }\n    }\n\nprivate:\n    bool IsANonHeaderLinkCell(DataGridViewCellEventArgs^ cellEvent)\n    {\n        if (dynamic_cast&lt;DataGridViewLinkColumn^&gt;(DataGridView1-&gt;Columns[cellEvent-&gt;ColumnIndex]) != nullptr\n             &amp;&amp;\n            cellEvent-&gt;RowIndex != -1)\n        { return true; }\n        else { return false; }\n    }\n\nprivate:\n    bool IsANonHeaderButtonCell(DataGridViewCellEventArgs^ cellEvent)\n    {\n        if (dynamic_cast&lt;DataGridViewButtonColumn^&gt;(DataGridView1-&gt;Columns[cellEvent-&gt;ColumnIndex]) != nullptr\n             &amp;&amp;\n            cellEvent-&gt;RowIndex != -1)\n        { return true; }\n        else { return (false); }\n    }\n\nprivate:\n    DataGridViewCell^ RetrieveSuperiorsLastNameCell(String^ employeeId)\n    {\n\n        for each (DataGridViewRow^ row in DataGridView1-&gt;Rows)\n        {\n            if (row-&gt;IsNewRow) { return nullptr; }\n            if (row-&gt;Cells[ColumnName::EmployeeID.ToString()]-&gt;Value-&gt;ToString()-&gt;Equals(employeeId))\n            {\n                return row-&gt;Cells[ColumnName::LastName.ToString()];\n            }\n        }\n        return nullptr;\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60\">    private void DataGridView1_CellContentClick(object sender, DataGridViewCellEventArgs e)\n    {\n\n        if (IsANonHeaderLinkCell(e))\n        {\n            MoveToLinked(e);\n        }\n        else if (IsANonHeaderButtonCell(e))\n        {\n            PopulateSales(e);\n        }\n    }\n\n    private void MoveToLinked(DataGridViewCellEventArgs e)\n    {\n        string employeeId;\n        object value = DataGridView1.Rows[e.RowIndex].Cells[e.ColumnIndex].Value;\n        if (value is DBNull) { return; }\n\n        employeeId = value.ToString();\n        DataGridViewCell boss = RetrieveSuperiorsLastNameCell(employeeId);\n        if (boss != null)\n        {\n            DataGridView1.CurrentCell = boss;\n        }\n    }\n\n    private bool IsANonHeaderLinkCell(DataGridViewCellEventArgs cellEvent)\n    {\n        if (DataGridView1.Columns[cellEvent.ColumnIndex] is\n            DataGridViewLinkColumn &amp;&amp;\n            cellEvent.RowIndex != -1)\n        { return true; }\n        else { return false; }\n    }\n\n    private bool IsANonHeaderButtonCell(DataGridViewCellEventArgs cellEvent)\n    {\n        if (DataGridView1.Columns[cellEvent.ColumnIndex] is\n            DataGridViewButtonColumn &amp;&amp;\n            cellEvent.RowIndex != -1)\n        { return true; }\n        else { return (false); }\n    }\n\n    private DataGridViewCell RetrieveSuperiorsLastNameCell(string employeeId)\n    {\n\n        foreach (DataGridViewRow row in DataGridView1.Rows)\n        {\n            if (row.IsNewRow) { return null; }\n            if (row.Cells[ColumnName.EmployeeId.ToString()].Value.ToString().Equals(employeeId))\n            {\n                return row.Cells[ColumnName.LastName.ToString()];\n            }\n        }\n        return null;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#60\">    Private Sub DataGridView1_CellContentClick(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles DataGridView1.CellContentClick\n\n        If IsANonHeaderLinkCell(e) Then\n            MoveToLinked(e)\n        ElseIf IsANonHeaderButtonCell(e) Then\n            PopulateSales(e)\n        End If\n    End Sub\n\n    Private Sub MoveToLinked(ByVal e As DataGridViewCellEventArgs)\n        Dim employeeId As String\n        Dim value As Object = DataGridView1.Rows(e.RowIndex). _\n            Cells(e.ColumnIndex).Value\n        If value.GetType Is GetType(DBNull) Then Return\n\n        employeeId = CType(value, String)\n        Dim boss As DataGridViewCell = _\n            RetrieveSuperiorsLastNameCell(employeeId)\n        If boss IsNot Nothing Then\n            DataGridView1.CurrentCell = boss\n        End If\n    End Sub\n\n    Private Function IsANonHeaderLinkCell(ByVal cellEvent As _\n        DataGridViewCellEventArgs) As Boolean\n\n        If TypeOf DataGridView1.Columns(cellEvent.ColumnIndex) _\n            Is DataGridViewLinkColumn _\n            AndAlso Not cellEvent.RowIndex = -1 Then _\n            Return True Else Return False\n\n    End Function\n\n    Private Function IsANonHeaderButtonCell(ByVal cellEvent As _\n        DataGridViewCellEventArgs) As Boolean\n\n        If TypeOf DataGridView1.Columns(cellEvent.ColumnIndex) _\n            Is DataGridViewButtonColumn _\n            AndAlso Not cellEvent.RowIndex = -1 Then _\n            Return True Else Return (False)\n\n    End Function\n\n    Private Function RetrieveSuperiorsLastNameCell( _\n        ByVal employeeId As String) As DataGridViewCell\n\n        For Each row As DataGridViewRow In DataGridView1.Rows\n            If row.IsNewRow Then Return Nothing\n            If row.Cells(ColumnName.EmployeeId.ToString()). _\n                Value.ToString().Equals(employeeId) Then\n                Return row.Cells(ColumnName.LastName.ToString())\n            End If\n        Next\n        Return Nothing\n    End Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellContentDoubleClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellContentDoubleClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user double-clicks a cell&#39;s contents.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler CellContentDoubleClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellContentDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the CellContentDoubleClick event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#285\">private void DataGridView1_CellContentDoubleClick(Object sender, DataGridViewCellEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellContentDoubleClick Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#285\">Private Sub DataGridView1_CellContentDoubleClick(sender as Object, e as DataGridViewCellEventArgs) _ \n     Handles DataGridView1.CellContentDoubleClick\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellContentDoubleClick Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellContextMenuStripChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellContextMenuStripChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ContextMenuStrip*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler CellContextMenuStripChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellContextMenuStripChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the CellContextMenuStripChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#286\">private void DataGridView1_CellContextMenuStripChanged(Object sender, DataGridViewCellEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellContextMenuStripChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#286\">Private Sub DataGridView1_CellContextMenuStripChanged(sender as Object, e as DataGridViewCellEventArgs) _ \n     Handles DataGridView1.CellContextMenuStripChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellContextMenuStripChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellContextMenuStripNeeded\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellContextMenuStripNeeded</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a cell&#39;s shortcut menu is needed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventHandler CellContextMenuStripNeeded;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CellContextMenuStripNeeded event occurs only when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property is set or its <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property is <code>true</code>.  </p>\n<p> When you handle the CellContextMenuStripNeeded event, the shortcut menu that you specify in the handler is shown whenever the user right-clicks a cell. This is useful when you want to display a shortcut menu determined by the current state or value of a cell.  </p>\n<p> The CellContextMenuStripNeeded event also occurs whenever the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> property is retrieved, either programmatically or when the user right-clicks a cell.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs#System_Windows_Forms_DataGridViewCellEventArgs_ColumnIndex_\" data-linktype=\"relative-path\">ColumnIndex</a>and <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs#System_Windows_Forms_DataGridViewCellEventArgs_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a> properties to determine the state or value of a cell, and use this information to change or modify the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellcontextmenustripneededeventargs#System_Windows_Forms_DataGridViewCellContextMenuStripNeededEventArgs_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> property. This property is initialized with the value of the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> property, which the event value overrides.  </p>\n<p> Handle the CellContextMenuStripNeeded event when working with large amounts of data to avoid the performance penalties of setting the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> value for multiple cells. For more information, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.  </p>\n<p> You can also specify shortcut menus for individual rows rather than individual cells by setting the row <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> property or handling the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowContextMenuStripNeeded\" data-linktype=\"relative-path\">RowContextMenuStripNeeded</a> event. The cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> property setting overrides the row <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> property setting, and the CellContextMenuStripNeeded event overrides both the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowContextMenuStripNeeded\" data-linktype=\"relative-path\">RowContextMenuStripNeeded</a> event and the row <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> property setting. However, you can specify <code>null</code> for a cell shortcut menu to prevent a row shortcut menu from being overridden.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use aCellContextMenuStripNeeded event handler to display a custom shortcut menu used when the user right-clicks a cell.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView_SharedRowScenarios#20\">    private ToolStripMenuItem wholeTable = new ToolStripMenuItem();\n    private ToolStripMenuItem lookUp = new ToolStripMenuItem();\n    private ContextMenuStrip strip;\n    private string cellErrorText;\n\n    private void dataGridView1_CellContextMenuStripNeeded(object sender,\n        DataGridViewCellContextMenuStripNeededEventArgs e)\n    {\n        cellErrorText = String.Empty;\n\n        if (strip == null)\n        {\n            strip = new ContextMenuStrip();\n            lookUp.Text = &quot;Look Up&quot;;\n            wholeTable.Text = &quot;See Whole Table&quot;;\n            strip.Items.Add(lookUp);\n            strip.Items.Add(wholeTable);\n        }\n        e.ContextMenuStrip = strip;\n    }\n\n    private void wholeTable_Click(object sender, EventArgs e)\n    {\n        dataGridView1.DataSource = Populate(&quot;Select * from employees&quot;, true);\n    }\n\n    private DataGridViewCellEventArgs theCellImHoveringOver;\n\n    private void dataGridView1_CellMouseEnter(object sender, DataGridViewCellEventArgs e)\n    {\n        theCellImHoveringOver = e;\n    }\n\n    private DataGridViewCellEventArgs cellErrorLocation;\n\n    private void lookUp_Click(object sender, EventArgs e)\n    {\n        try\n        {\n            dataGridView1.DataSource = Populate(&quot;Select * from employees where &quot; +\n                dataGridView1.Columns[theCellImHoveringOver.ColumnIndex].Name + &quot; = &#39;&quot; +\n                dataGridView1.Rows[theCellImHoveringOver.RowIndex].\n                Cells[theCellImHoveringOver.ColumnIndex].Value + &quot;&#39;&quot;,\n                true);\n        }\n        catch (SqlException)\n        {\n            cellErrorText = &quot;Can&#39;t look this cell up&quot;;\n            cellErrorLocation = theCellImHoveringOver;\n        }\n    }\n\n    private void dataGridView1_CellErrorTextNeeded(object sender,\n        DataGridViewCellErrorTextNeededEventArgs e)\n    {\n        if (cellErrorLocation != null)\n        {\n            if (e.ColumnIndex == cellErrorLocation.ColumnIndex &amp;&amp;\n                e.RowIndex == cellErrorLocation.RowIndex)\n            {\n                e.ErrorText = cellErrorText;\n            }\n        }\n    }\n\n    private DataTable Populate(string query, bool resetUnsharedCounter)\n    {\n        if (resetUnsharedCounter)\n        {\n            ResetCounter();\n        }\n\n        // Alter the data source as necessary\n        SqlDataAdapter adapter = new SqlDataAdapter(query,\n            new SqlConnection(&quot;Integrated Security=SSPI;Persist Security Info=False;&quot; +\n            &quot;Initial Catalog=Northwind;Data Source=localhost&quot;));\n\n        DataTable table = new DataTable();\n        table.Locale = System.Globalization.CultureInfo.InvariantCulture;\n        adapter.Fill(table);\n        return table;\n    }\n\n    private Label count = new Label();\n    private int unsharedRowCounter;\n\n    private void ResetCounter()\n    {\n        unsharedRowCounter = 0;\n        count.Text = unsharedRowCounter.ToString();\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView_SharedRowScenarios#20\">    ToolStripMenuItem^ wholeTable;\n    ToolStripMenuItem^ lookUp;\n    System::Windows::Forms::ContextMenuStrip^ strip;\n    String^ cellErrorText;\n\n    void dataGridView1_CellContextMenuStripNeeded( Object^ /*sender*/,\n        DataGridViewCellContextMenuStripNeededEventArgs^ e )\n    {\n        cellErrorText = String::Empty;\n        if ( strip == nullptr )\n        {\n            strip = gcnew System::Windows::Forms::ContextMenuStrip;\n            lookUp-&gt;Text = L&quot;Look Up&quot;;\n            wholeTable-&gt;Text = L&quot;See Whole Table&quot;;\n            strip-&gt;Items-&gt;Add( lookUp );\n            strip-&gt;Items-&gt;Add( wholeTable );\n        }\n\n        e-&gt;ContextMenuStrip = strip;\n    }\n\n    void wholeTable_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n    {\n        dataGridView1-&gt;DataSource = Populate( L&quot;Select * from employees&quot;, true );\n    }\n\n    DataGridViewCellEventArgs^ theCellImHoveringOver;\n    void dataGridView1_CellMouseEnter( Object^ /*sender*/, DataGridViewCellEventArgs^ e )\n    {\n        theCellImHoveringOver = e;\n    }\n\n    DataGridViewCellEventArgs^ cellErrorLocation;\n    void lookUp_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n    {\n        try\n        {\n            dataGridView1-&gt;DataSource = Populate( String::Format( L&quot;Select * from employees where {0} = &#39;{1}&#39;&quot;, dataGridView1-&gt;Columns[ theCellImHoveringOver-&gt;ColumnIndex ]-&gt;Name, dataGridView1-&gt;Rows[ theCellImHoveringOver-&gt;RowIndex ]-&gt;Cells[ theCellImHoveringOver-&gt;ColumnIndex ]-&gt;Value ), true );\n        }\n        catch ( ... ) \n        {\n            cellErrorText = L&quot;Can&#39;t look this cell up&quot;;\n            cellErrorLocation = theCellImHoveringOver;\n        }\n\n    }\n\n    void dataGridView1_CellErrorTextNeeded( Object^ /*sender*/, DataGridViewCellErrorTextNeededEventArgs^ e )\n    {\n        if ( cellErrorLocation != nullptr )\n        {\n            if ( e-&gt;ColumnIndex == cellErrorLocation-&gt;ColumnIndex &amp;&amp; e-&gt;RowIndex == cellErrorLocation-&gt;RowIndex )\n            {\n                e-&gt;ErrorText = cellErrorText;\n            }\n        }\n    }\n\n    DataTable^ Populate( String^ query, bool resetUnsharedCounter )\n    {\n        if ( resetUnsharedCounter )\n        {\n            ResetCounter();\n        }\n\n\n        // Alter the data source as necessary\n        SqlDataAdapter^ adapter = gcnew SqlDataAdapter( query,\n            gcnew SqlConnection( L&quot;Integrated Security=SSPI;Persist Security Info=False;&quot;\n            L&quot;Initial Catalog=Northwind;Data Source= localhost&quot; ) );\n        DataTable^ table = gcnew DataTable;\n        adapter-&gt;Fill( table );\n        return table;\n    }\n\n    Label^ count;\n    int unsharedRowCounter;\n    void ResetCounter()\n    {\n        unsharedRowCounter = 0;\n        count-&gt;Text = unsharedRowCounter.ToString();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView_SharedRowScenarios#20\">    Private WithEvents wholeTable As New ToolStripMenuItem()\n    Private WithEvents lookUp As New ToolStripMenuItem()\n    Private strip As ContextMenuStrip\n    Private cellErrorText As String\n\n    Private Sub dataGridView1_CellContextMenuStripNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewCellContextMenuStripNeededEventArgs) _\n        Handles dataGridView1.CellContextMenuStripNeeded\n\n        cellErrorText = String.Empty\n\n        If strip Is Nothing Then\n            strip = New ContextMenuStrip()\n            lookUp.Text = &quot;Look Up&quot;\n            wholeTable.Text = &quot;See Whole Table&quot;\n            strip.Items.Add(lookUp)\n            strip.Items.Add(wholeTable)\n        End If\n        e.ContextMenuStrip = strip\n    End Sub\n\n    Private Sub wholeTable_Click(ByVal sender As Object, ByVal e As EventArgs) Handles wholeTable.Click\n        dataGridView1.DataSource = Populate(&quot;Select * from employees&quot;, True)\n    End Sub\n\n    Private theCellImHoveringOver As DataGridViewCellEventArgs\n\n    Private Sub dataGridView1_CellMouseEnter(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellMouseEnter\n\n        theCellImHoveringOver = e\n    End Sub\n\n    Private cellErrorLocation As DataGridViewCellEventArgs\n\n    Private Sub lookUp_Click(ByVal sender As Object, ByVal e As EventArgs) Handles lookUp.Click\n        Try\n            dataGridView1.DataSource = Populate(&quot;Select * from employees where &quot; &amp; _\n                dataGridView1.Columns(theCellImHoveringOver.ColumnIndex).Name &amp; &quot; = &#39;&quot; &amp; _\n                dataGridView1.Rows(theCellImHoveringOver.RowIndex).Cells(theCellImHoveringOver.ColumnIndex).Value.ToString() &amp; _\n                &quot;&#39;&quot;, True)\n        Catch ex As SqlException\n            cellErrorText = &quot;Can&#39;t look this cell up&quot;\n            cellErrorLocation = theCellImHoveringOver\n        End Try\n    End Sub\n\n    Private Sub dataGridView1_CellErrorTextNeeded(ByVal sender As Object, _\n                ByVal e As DataGridViewCellErrorTextNeededEventArgs) _\n                Handles dataGridView1.CellErrorTextNeeded\n        If (Not cellErrorLocation Is Nothing) Then\n            If e.ColumnIndex = cellErrorLocation.ColumnIndex AndAlso _\n                e.RowIndex = cellErrorLocation.RowIndex Then\n                e.ErrorText = cellErrorText\n            End If\n        End If\n    End Sub\n\n    Private Function Populate(ByVal query As String, ByVal resetUnsharedCounter As Boolean) As DataTable\n\n        If resetUnsharedCounter Then\n            ResetCounter()\n        End If\n\n        &#39; Alter the data source as necessary\n        Dim adapter As New SqlDataAdapter(query, _\n            New SqlConnection(&quot;Integrated Security=SSPI;Persist Security Info=False;&quot; &amp; _\n            &quot;Initial Catalog=Northwind;Data Source=localhost&quot;))\n\n        Dim table As New DataTable()\n        table.Locale = System.Globalization.CultureInfo.InvariantCulture\n        adapter.Fill(table)\n        Return table\n    End Function\n\n    Private count As New Label()\n    Private unsharedRowCounter As Integer\n\n    Private Sub ResetCounter()\n        unsharedRowCounter = 0\n        count.Text = unsharedRowCounter.ToString()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellDoubleClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellDoubleClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user double-clicks anywhere in a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler CellDoubleClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the CellDoubleClick event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#288\">private void DataGridView1_CellDoubleClick(Object sender, DataGridViewCellEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellDoubleClick Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#288\">Private Sub DataGridView1_CellDoubleClick(sender as Object, e as DataGridViewCellEventArgs) _ \n     Handles DataGridView1.CellDoubleClick\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellDoubleClick Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellEndEdit\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellEndEdit</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when edit mode stops for the currently selected cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler CellEndEdit;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to handle this event to clear the row <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property in case it was previously set by a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValidating\" data-linktype=\"relative-path\">CellValidating</a> event handler. The <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValidating\" data-linktype=\"relative-path\">CellValidating</a> event handler can clear the error text when the new cell value meets the validation criteria, but when the user reverts to the old cell value by pressing ESC, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValidating\" data-linktype=\"relative-path\">CellValidating</a> event does not occur. This example is part of a larger example available in <a href=\"../Topic/Walkthrough:%20Validating%20Data%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Walkthrough: Validating Data in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewDataValidation#20\">    Private Sub dataGridView1_CellValidating(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValidatingEventArgs) _\n        Handles dataGridView1.CellValidating\n\n        Dim headerText As String = _\n            dataGridView1.Columns(e.ColumnIndex).HeaderText\n\n        &#39; Abort validation if cell is not in the CompanyName column.\n        If Not headerText.Equals(&quot;CompanyName&quot;) Then Return\n\n        &#39; Confirm that the cell is not empty.\n        If (String.IsNullOrEmpty(e.FormattedValue.ToString())) Then\n            dataGridView1.Rows(e.RowIndex).ErrorText = _\n                &quot;Company Name must not be empty&quot;\n            e.Cancel = True\n        End If\n    End Sub\n\n    Private Sub dataGridView1_CellEndEdit(ByVal sender As Object, _\n        ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellEndEdit\n\n        &#39; Clear the row error in case the user presses ESC.   \n        dataGridView1.Rows(e.RowIndex).ErrorText = String.Empty\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewDataValidation#20\">    private void dataGridView1_CellValidating(object sender,\n        DataGridViewCellValidatingEventArgs e)\n    {\n        string headerText = \n            dataGridView1.Columns[e.ColumnIndex].HeaderText;\n\n        // Abort validation if cell is not in the CompanyName column.\n        if (!headerText.Equals(&quot;CompanyName&quot;)) return;\n\n        // Confirm that the cell is not empty.\n        if (string.IsNullOrEmpty(e.FormattedValue.ToString()))\n        {\n            dataGridView1.Rows[e.RowIndex].ErrorText =\n                &quot;Company Name must not be empty&quot;;\n            e.Cancel = true;\n        }\n    }\n\n    void dataGridView1_CellEndEdit(object sender, DataGridViewCellEventArgs e)\n    {\n        // Clear the row error in case the user presses ESC.   \n        dataGridView1.Rows[e.RowIndex].ErrorText = String.Empty;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellEnter\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellEnter</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the current cell changes in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control or when the control receives input focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler CellEnter;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event may occur twice for a single click if the control does not have input focus and the clicked cell was not previously the current cell.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to handle this event to change the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_SelectionBackColor_\" data-linktype=\"relative-path\">SelectionBackColor</a> property of the current cell. In this example the selection background color is set in the CellEnter event, then reset to <a class=\"xref\" href=\"system.drawing.color#System_Drawing_Color_Empty\" data-linktype=\"relative-path\">Empty</a> on the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellLeave\" data-linktype=\"relative-path\">CellLeave</a> event. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code> and ensure that all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#190\">    private void dataGridView1_CellEnter(object sender, \n        DataGridViewCellEventArgs e)\n    {\n        dataGridView1[e.ColumnIndex, e.RowIndex].Style\n            .SelectionBackColor = Color.Blue;\n    }\n\n    private void dataGridView1_CellLeave(object sender, \n        DataGridViewCellEventArgs e)\n    {\n        dataGridView1[e.ColumnIndex, e.RowIndex].Style\n            .SelectionBackColor = Color.Empty;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#190\">    Private Sub dataGridView1_CellEnter(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellEnter\n\n        dataGridView1(e.ColumnIndex, e.RowIndex).Style _\n            .SelectionBackColor = Color.Blue\n\n    End Sub\n\n    Private Sub dataGridView1_CellLeave(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellLeave\n\n        dataGridView1(e.ColumnIndex, e.RowIndex).Style _\n            .SelectionBackColor = Color.Empty\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellErrorTextChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellErrorTextChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ErrorText*</span> property of a cell changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler CellErrorTextChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellErrorTextChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the CellErrorTextChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#291\">private void DataGridView1_CellErrorTextChanged(Object sender, DataGridViewCellEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellErrorTextChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#291\">Private Sub DataGridView1_CellErrorTextChanged(sender as Object, e as DataGridViewCellEventArgs) _ \n     Handles DataGridView1.CellErrorTextChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellErrorTextChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellErrorTextNeeded\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellErrorTextNeeded</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a cell&#39;s error text is needed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellErrorTextNeededEventHandler CellErrorTextNeeded;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CellErrorTextNeeded event occurs only when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property is set or its <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property is <code>true</code>. Handling the CellErrorTextNeeded event is useful when you want to determine the error for a cell depending on its value or state.  </p>\n<p> When you handle the CellErrorTextNeeded event and specify error text in the handler, an error glyph appears in the cell unless the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ShowCellErrors_\" data-linktype=\"relative-path\">ShowCellErrors</a> property is set to <code>false</code> or the cell is in edit mode. When the user moves the mouse pointer over the error glyph, the error text appears in a ToolTip.  </p>\n<p> The CellErrorTextNeeded event also occurs whenever the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property is retrieved.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs#System_Windows_Forms_DataGridViewCellEventArgs_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs#System_Windows_Forms_DataGridViewCellEventArgs_ColumnIndex_\" data-linktype=\"relative-path\">ColumnIndex</a> property to determine the state or value of a cell, and use this information to change or modify the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellerrortextneededeventargs#System_Windows_Forms_DataGridViewCellErrorTextNeededEventArgs_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property. This property is initialized with the value of the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property, which the event value overrides.  </p>\n<p> Handle the CellErrorTextNeeded event when working with large amounts of data to avoid the performance penalties of setting the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> value for multiple cells. For more information, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to create error messages for cells without unsharing rows or causing the cell error to be duplicated over all the shared cells.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView_SharedRowScenarios#20\">    private ToolStripMenuItem wholeTable = new ToolStripMenuItem();\n    private ToolStripMenuItem lookUp = new ToolStripMenuItem();\n    private ContextMenuStrip strip;\n    private string cellErrorText;\n\n    private void dataGridView1_CellContextMenuStripNeeded(object sender,\n        DataGridViewCellContextMenuStripNeededEventArgs e)\n    {\n        cellErrorText = String.Empty;\n\n        if (strip == null)\n        {\n            strip = new ContextMenuStrip();\n            lookUp.Text = &quot;Look Up&quot;;\n            wholeTable.Text = &quot;See Whole Table&quot;;\n            strip.Items.Add(lookUp);\n            strip.Items.Add(wholeTable);\n        }\n        e.ContextMenuStrip = strip;\n    }\n\n    private void wholeTable_Click(object sender, EventArgs e)\n    {\n        dataGridView1.DataSource = Populate(&quot;Select * from employees&quot;, true);\n    }\n\n    private DataGridViewCellEventArgs theCellImHoveringOver;\n\n    private void dataGridView1_CellMouseEnter(object sender, DataGridViewCellEventArgs e)\n    {\n        theCellImHoveringOver = e;\n    }\n\n    private DataGridViewCellEventArgs cellErrorLocation;\n\n    private void lookUp_Click(object sender, EventArgs e)\n    {\n        try\n        {\n            dataGridView1.DataSource = Populate(&quot;Select * from employees where &quot; +\n                dataGridView1.Columns[theCellImHoveringOver.ColumnIndex].Name + &quot; = &#39;&quot; +\n                dataGridView1.Rows[theCellImHoveringOver.RowIndex].\n                Cells[theCellImHoveringOver.ColumnIndex].Value + &quot;&#39;&quot;,\n                true);\n        }\n        catch (SqlException)\n        {\n            cellErrorText = &quot;Can&#39;t look this cell up&quot;;\n            cellErrorLocation = theCellImHoveringOver;\n        }\n    }\n\n    private void dataGridView1_CellErrorTextNeeded(object sender,\n        DataGridViewCellErrorTextNeededEventArgs e)\n    {\n        if (cellErrorLocation != null)\n        {\n            if (e.ColumnIndex == cellErrorLocation.ColumnIndex &amp;&amp;\n                e.RowIndex == cellErrorLocation.RowIndex)\n            {\n                e.ErrorText = cellErrorText;\n            }\n        }\n    }\n\n    private DataTable Populate(string query, bool resetUnsharedCounter)\n    {\n        if (resetUnsharedCounter)\n        {\n            ResetCounter();\n        }\n\n        // Alter the data source as necessary\n        SqlDataAdapter adapter = new SqlDataAdapter(query,\n            new SqlConnection(&quot;Integrated Security=SSPI;Persist Security Info=False;&quot; +\n            &quot;Initial Catalog=Northwind;Data Source=localhost&quot;));\n\n        DataTable table = new DataTable();\n        table.Locale = System.Globalization.CultureInfo.InvariantCulture;\n        adapter.Fill(table);\n        return table;\n    }\n\n    private Label count = new Label();\n    private int unsharedRowCounter;\n\n    private void ResetCounter()\n    {\n        unsharedRowCounter = 0;\n        count.Text = unsharedRowCounter.ToString();\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView_SharedRowScenarios#20\">    ToolStripMenuItem^ wholeTable;\n    ToolStripMenuItem^ lookUp;\n    System::Windows::Forms::ContextMenuStrip^ strip;\n    String^ cellErrorText;\n\n    void dataGridView1_CellContextMenuStripNeeded( Object^ /*sender*/,\n        DataGridViewCellContextMenuStripNeededEventArgs^ e )\n    {\n        cellErrorText = String::Empty;\n        if ( strip == nullptr )\n        {\n            strip = gcnew System::Windows::Forms::ContextMenuStrip;\n            lookUp-&gt;Text = L&quot;Look Up&quot;;\n            wholeTable-&gt;Text = L&quot;See Whole Table&quot;;\n            strip-&gt;Items-&gt;Add( lookUp );\n            strip-&gt;Items-&gt;Add( wholeTable );\n        }\n\n        e-&gt;ContextMenuStrip = strip;\n    }\n\n    void wholeTable_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n    {\n        dataGridView1-&gt;DataSource = Populate( L&quot;Select * from employees&quot;, true );\n    }\n\n    DataGridViewCellEventArgs^ theCellImHoveringOver;\n    void dataGridView1_CellMouseEnter( Object^ /*sender*/, DataGridViewCellEventArgs^ e )\n    {\n        theCellImHoveringOver = e;\n    }\n\n    DataGridViewCellEventArgs^ cellErrorLocation;\n    void lookUp_Click( Object^ /*sender*/, EventArgs^ /*e*/ )\n    {\n        try\n        {\n            dataGridView1-&gt;DataSource = Populate( String::Format( L&quot;Select * from employees where {0} = &#39;{1}&#39;&quot;, dataGridView1-&gt;Columns[ theCellImHoveringOver-&gt;ColumnIndex ]-&gt;Name, dataGridView1-&gt;Rows[ theCellImHoveringOver-&gt;RowIndex ]-&gt;Cells[ theCellImHoveringOver-&gt;ColumnIndex ]-&gt;Value ), true );\n        }\n        catch ( ... ) \n        {\n            cellErrorText = L&quot;Can&#39;t look this cell up&quot;;\n            cellErrorLocation = theCellImHoveringOver;\n        }\n\n    }\n\n    void dataGridView1_CellErrorTextNeeded( Object^ /*sender*/, DataGridViewCellErrorTextNeededEventArgs^ e )\n    {\n        if ( cellErrorLocation != nullptr )\n        {\n            if ( e-&gt;ColumnIndex == cellErrorLocation-&gt;ColumnIndex &amp;&amp; e-&gt;RowIndex == cellErrorLocation-&gt;RowIndex )\n            {\n                e-&gt;ErrorText = cellErrorText;\n            }\n        }\n    }\n\n    DataTable^ Populate( String^ query, bool resetUnsharedCounter )\n    {\n        if ( resetUnsharedCounter )\n        {\n            ResetCounter();\n        }\n\n\n        // Alter the data source as necessary\n        SqlDataAdapter^ adapter = gcnew SqlDataAdapter( query,\n            gcnew SqlConnection( L&quot;Integrated Security=SSPI;Persist Security Info=False;&quot;\n            L&quot;Initial Catalog=Northwind;Data Source= localhost&quot; ) );\n        DataTable^ table = gcnew DataTable;\n        adapter-&gt;Fill( table );\n        return table;\n    }\n\n    Label^ count;\n    int unsharedRowCounter;\n    void ResetCounter()\n    {\n        unsharedRowCounter = 0;\n        count-&gt;Text = unsharedRowCounter.ToString();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView_SharedRowScenarios#20\">    Private WithEvents wholeTable As New ToolStripMenuItem()\n    Private WithEvents lookUp As New ToolStripMenuItem()\n    Private strip As ContextMenuStrip\n    Private cellErrorText As String\n\n    Private Sub dataGridView1_CellContextMenuStripNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewCellContextMenuStripNeededEventArgs) _\n        Handles dataGridView1.CellContextMenuStripNeeded\n\n        cellErrorText = String.Empty\n\n        If strip Is Nothing Then\n            strip = New ContextMenuStrip()\n            lookUp.Text = &quot;Look Up&quot;\n            wholeTable.Text = &quot;See Whole Table&quot;\n            strip.Items.Add(lookUp)\n            strip.Items.Add(wholeTable)\n        End If\n        e.ContextMenuStrip = strip\n    End Sub\n\n    Private Sub wholeTable_Click(ByVal sender As Object, ByVal e As EventArgs) Handles wholeTable.Click\n        dataGridView1.DataSource = Populate(&quot;Select * from employees&quot;, True)\n    End Sub\n\n    Private theCellImHoveringOver As DataGridViewCellEventArgs\n\n    Private Sub dataGridView1_CellMouseEnter(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellMouseEnter\n\n        theCellImHoveringOver = e\n    End Sub\n\n    Private cellErrorLocation As DataGridViewCellEventArgs\n\n    Private Sub lookUp_Click(ByVal sender As Object, ByVal e As EventArgs) Handles lookUp.Click\n        Try\n            dataGridView1.DataSource = Populate(&quot;Select * from employees where &quot; &amp; _\n                dataGridView1.Columns(theCellImHoveringOver.ColumnIndex).Name &amp; &quot; = &#39;&quot; &amp; _\n                dataGridView1.Rows(theCellImHoveringOver.RowIndex).Cells(theCellImHoveringOver.ColumnIndex).Value.ToString() &amp; _\n                &quot;&#39;&quot;, True)\n        Catch ex As SqlException\n            cellErrorText = &quot;Can&#39;t look this cell up&quot;\n            cellErrorLocation = theCellImHoveringOver\n        End Try\n    End Sub\n\n    Private Sub dataGridView1_CellErrorTextNeeded(ByVal sender As Object, _\n                ByVal e As DataGridViewCellErrorTextNeededEventArgs) _\n                Handles dataGridView1.CellErrorTextNeeded\n        If (Not cellErrorLocation Is Nothing) Then\n            If e.ColumnIndex = cellErrorLocation.ColumnIndex AndAlso _\n                e.RowIndex = cellErrorLocation.RowIndex Then\n                e.ErrorText = cellErrorText\n            End If\n        End If\n    End Sub\n\n    Private Function Populate(ByVal query As String, ByVal resetUnsharedCounter As Boolean) As DataTable\n\n        If resetUnsharedCounter Then\n            ResetCounter()\n        End If\n\n        &#39; Alter the data source as necessary\n        Dim adapter As New SqlDataAdapter(query, _\n            New SqlConnection(&quot;Integrated Security=SSPI;Persist Security Info=False;&quot; &amp; _\n            &quot;Initial Catalog=Northwind;Data Source=localhost&quot;))\n\n        Dim table As New DataTable()\n        table.Locale = System.Globalization.CultureInfo.InvariantCulture\n        adapter.Fill(table)\n        Return table\n    End Function\n\n    Private count As New Label()\n    Private unsharedRowCounter As Integer\n\n    Private Sub ResetCounter()\n        unsharedRowCounter = 0\n        count.Text = unsharedRowCounter.ToString()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellFormatting\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellFormatting</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the contents of a cell need to be formatted for display.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellFormattingEventHandler CellFormatting;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control will attempt to convert a cell&#39;s value into a format suitable for display. For example, it will convert a numerical value into a string for display in a text box cell. You can indicate the formatting convention to use by setting the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_Format_\" data-linktype=\"relative-path\">Format</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> returned by properties such as the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property.  </p>\n<p> If the standard formatting is insufficient, you can customize the formatting by handling the CellFormattingevent. This event lets you indicate the exact display value as well as the cell styles, such as background and foreground color, to use for the cell display. This means you can handle this event for any kind of cell formatting, regardless of whether the cell value itself needs formatting.  </p>\n<p> The CellFormatting event occurs every time each cell is painted, so you should avoid lengthy processing when handling this event. This event also occurs when the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_FormattedValue_\" data-linktype=\"relative-path\">FormattedValue</a> is retrieved or its <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_GetFormattedValue_\" data-linktype=\"relative-path\">GetFormattedValue</a> method is called.  </p>\n<p> When you handle the CellFormatting event, the <a class=\"xref\" href=\"system.windows.forms.converteventargs#System_Windows_Forms_ConvertEventArgs_Value_\" data-linktype=\"relative-path\">Value</a> property is initialized with the cell value. If you provide custom conversion from the cell value to the display value, set the <a class=\"xref\" href=\"system.windows.forms.converteventargs#System_Windows_Forms_ConvertEventArgs_Value_\" data-linktype=\"relative-path\">Value</a> property to the converted value, ensuring that the new value is of the type specified by the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_FormattedValueType_\" data-linktype=\"relative-path\">FormattedValueType</a> property. To indicate that no further value formatting is necessary, set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellformattingeventargs#System_Windows_Forms_DataGridViewCellFormattingEventArgs_FormattingApplied_\" data-linktype=\"relative-path\">FormattingApplied</a> property to <code>true</code>.  </p>\n<p> When the event handler completes, if the <a class=\"xref\" href=\"system.windows.forms.converteventargs#System_Windows_Forms_ConvertEventArgs_Value_\" data-linktype=\"relative-path\">Value</a> is <code>null</code> or is not of the correct type, or the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellformattingeventargs#System_Windows_Forms_DataGridViewCellFormattingEventArgs_FormattingApplied_\" data-linktype=\"relative-path\">FormattingApplied</a> property is <code>false</code>, the <a class=\"xref\" href=\"system.windows.forms.converteventargs#System_Windows_Forms_ConvertEventArgs_Value_\" data-linktype=\"relative-path\">Value</a> is formatted using the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_Format_\" data-linktype=\"relative-path\">Format</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_DataSourceNullValue_\" data-linktype=\"relative-path\">DataSourceNullValue</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_FormatProvider_\" data-linktype=\"relative-path\">FormatProvider</a> properties of the cell style returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellformattingeventargs#System_Windows_Forms_DataGridViewCellFormattingEventArgs_CellStyle_\" data-linktype=\"relative-path\">CellStyle</a> property, which is initialized using the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_InheritedStyle_\" data-linktype=\"relative-path\">InheritedStyle</a> property.  </p>\n<p> Regardless of the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellformattingeventargs#System_Windows_Forms_DataGridViewCellFormattingEventArgs_FormattingApplied_\" data-linktype=\"relative-path\">FormattingApplied</a> property, the display properties of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellformattingeventargs#System_Windows_Forms_DataGridViewCellFormattingEventArgs_CellStyle_\" data-linktype=\"relative-path\">CellStyle</a> property are used to render the cell.  </p>\n<p> For more information about custom formatting using the CellFormatting event, see <a href=\"../Topic/How%20to:%20Customize%20Data%20Formatting%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize Data Formatting in the Windows Forms DataGridView Control</a>.  </p>\n<p> To avoid performance penalties when handling this event, access the cell through the parameters of the event handler rather than accessing the cell directly.  </p>\n<p> To customize the conversion of a formatted, user-specified value into an actual cell value, handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellParsing\" data-linktype=\"relative-path\">CellParsing</a> event.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to handle the CellFormatting event.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewUnbound#1\">    Private Sub dataGridView1_CellFormatting(ByVal sender As Object, _\n        ByVal e As DataGridViewCellFormattingEventArgs) _\n        Handles dataGridView1.CellFormatting\n        &#39; If the column is the Artist column, check the\n        &#39; value.\n        If Me.dataGridView1.Columns(e.ColumnIndex).Name _\n            = &quot;Artist&quot; Then\n            If e.Value IsNot Nothing Then\n\n                &#39; Check for the string &quot;pink&quot; in the cell.\n                Dim stringValue As String = _\n                CType(e.Value, String)\n                stringValue = stringValue.ToLower()\n                If ((stringValue.IndexOf(&quot;pink&quot;) &gt; -1)) Then\n                    e.CellStyle.BackColor = Color.Pink\n                End If\n\n            End If\n        ElseIf Me.dataGridView1.Columns(e.ColumnIndex).Name _\n            = &quot;Release Date&quot; Then\n            ShortFormDateFormat(e)\n        End If\n    End Sub\n\n    &#39;Even though the date internaly stores the year as YYYY, using formatting, the\n    &#39;UI can have the format in YY.  \n    Private Shared Sub ShortFormDateFormat(ByVal formatting As DataGridViewCellFormattingEventArgs)\n        If formatting.Value IsNot Nothing Then\n            Try\n                Dim dateString As System.Text.StringBuilder = New System.Text.StringBuilder()\n                Dim theDate As Date = DateTime.Parse(formatting.Value.ToString())\n\n                dateString.Append(theDate.Month)\n                dateString.Append(&quot;/&quot;)\n                dateString.Append(theDate.Day)\n                dateString.Append(&quot;/&quot;)\n                dateString.Append(theDate.Year.ToString().Substring(2))\n                formatting.Value = dateString.ToString()\n                formatting.FormattingApplied = True\n            Catch notInDateFormat As FormatException\n                &#39; Set to false in case there are other handlers interested trying to\n                &#39; format this DataGridViewCellFormattingEventArgs instance.\n                formatting.FormattingApplied = False\n            End Try\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewUnbound#1\">   void dataGridView1_CellFormatting( Object^ /*sender*/, DataGridViewCellFormattingEventArgs^ e )\n   {\n      // If the column is the Artist column, check the\n      // value.\n      if ( this-&gt;dataGridView1-&gt;Columns[ e-&gt;ColumnIndex ]-&gt;Name-&gt;Equals( &quot;Artist&quot; ) )\n      {\n         if ( e-&gt;Value != nullptr )\n         {\n            // Check for the string &quot;pink&quot; in the cell.\n            String^ stringValue = dynamic_cast&lt;String^&gt;(e-&gt;Value);\n            stringValue = stringValue-&gt;ToLower();\n            if ( (stringValue-&gt;IndexOf( &quot;pink&quot; ) &gt; -1) )\n            {\n               DataGridViewCellStyle^ pinkStyle = gcnew DataGridViewCellStyle;\n\n               //Change the style of the cell.\n               pinkStyle-&gt;BackColor = Color::Pink;\n               pinkStyle-&gt;ForeColor = Color::Black;\n               pinkStyle-&gt;Font = gcnew System::Drawing::Font( &quot;Times New Roman&quot;,8,FontStyle::Bold );\n               e-&gt;CellStyle = pinkStyle;\n            }\n            \n         }\n      }\n      else\n      if ( this-&gt;dataGridView1-&gt;Columns[ e-&gt;ColumnIndex ]-&gt;Name-&gt;Equals( &quot;Release Date&quot; ) )\n      {\n         ShortFormDateFormat( e );\n      }\n   }\n\n\n   //Even though the date internaly stores the year as YYYY, using formatting, the\n   //UI can have the format in YY.  \n   void ShortFormDateFormat( DataGridViewCellFormattingEventArgs^ formatting )\n   {\n      if ( formatting-&gt;Value != nullptr )\n      {\n         try\n         {\n            System::Text::StringBuilder^ dateString = gcnew System::Text::StringBuilder;\n            DateTime theDate = DateTime::Parse( formatting-&gt;Value-&gt;ToString() );\n            dateString-&gt;Append( theDate.Month );\n            dateString-&gt;Append( &quot;/&quot; );\n            dateString-&gt;Append( theDate.Day );\n            dateString-&gt;Append( &quot;/&quot; );\n            dateString-&gt;Append( theDate.Year.ToString()-&gt;Substring( 2 ) );\n            formatting-&gt;Value = dateString-&gt;ToString();\n            formatting-&gt;FormattingApplied = true;\n         }\n         catch ( Exception^ /*notInDateFormat*/ ) \n         {\n            // Set to false in case there are other handlers interested trying to\n            // format this DataGridViewCellFormattingEventArgs instance.\n            formatting-&gt;FormattingApplied = false;\n         }\n\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewUnbound#1\">    private void dataGridView1_CellFormatting(object sender, DataGridViewCellFormattingEventArgs e)\n    {\n        // If the column is the Artist column, check the\n        // value.\n        if (this.dataGridView1.Columns[e.ColumnIndex].Name == &quot;Artist&quot;)\n        {\n            if (e.Value != null)\n            {\n                // Check for the string &quot;pink&quot; in the cell.\n                string stringValue = (string)e.Value;\n                stringValue = stringValue.ToLower();\n                if ((stringValue.IndexOf(&quot;pink&quot;) &gt; -1))\n                {\n                    e.CellStyle.BackColor = Color.Pink;\n                }\n\n            }\n        }\n        else if (this.dataGridView1.Columns[e.ColumnIndex].Name == &quot;Release Date&quot;)\n        {\n            ShortFormDateFormat(e);\n        }\n    }\n\n    //Even though the date internaly stores the year as YYYY, using formatting, the\n    //UI can have the format in YY.  \n    private static void ShortFormDateFormat(DataGridViewCellFormattingEventArgs formatting)\n    {\n        if (formatting.Value != null)\n        {\n            try\n            {\n                System.Text.StringBuilder dateString = new System.Text.StringBuilder();\n                DateTime theDate = DateTime.Parse(formatting.Value.ToString());\n\n                dateString.Append(theDate.Month);\n                dateString.Append(&quot;/&quot;);\n                dateString.Append(theDate.Day);\n                dateString.Append(&quot;/&quot;);\n                dateString.Append(theDate.Year.ToString().Substring(2));\n                formatting.Value = dateString.ToString();\n                formatting.FormattingApplied = true;\n            }\n            catch (FormatException)\n            {\n                // Set to false in case there are other handlers interested trying to\n                // format this DataGridViewCellFormattingEventArgs instance.\n                formatting.FormattingApplied = false;\n            }\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellLeave\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellLeave</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a cell loses input focus and is no longer the current cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler CellLeave;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to handle this event to change the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_SelectionBackColor_\" data-linktype=\"relative-path\">SelectionBackColor</a> property of the current cell. In this example the selection background color is set in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellEnter\" data-linktype=\"relative-path\">CellEnter</a> event, then reset to <a class=\"xref\" href=\"system.drawing.color#System_Drawing_Color_Empty\" data-linktype=\"relative-path\">Empty</a> on the CellLeave event. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code> and ensure that all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#190\">    private void dataGridView1_CellEnter(object sender, \n        DataGridViewCellEventArgs e)\n    {\n        dataGridView1[e.ColumnIndex, e.RowIndex].Style\n            .SelectionBackColor = Color.Blue;\n    }\n\n    private void dataGridView1_CellLeave(object sender, \n        DataGridViewCellEventArgs e)\n    {\n        dataGridView1[e.ColumnIndex, e.RowIndex].Style\n            .SelectionBackColor = Color.Empty;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#190\">    Private Sub dataGridView1_CellEnter(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellEnter\n\n        dataGridView1(e.ColumnIndex, e.RowIndex).Style _\n            .SelectionBackColor = Color.Blue\n\n    End Sub\n\n    Private Sub dataGridView1_CellLeave(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellLeave\n\n        dataGridView1(e.ColumnIndex, e.RowIndex).Style _\n            .SelectionBackColor = Color.Empty\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellMouseClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellMouseClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs whenever the user clicks anywhere on a cell with the mouse.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs when the user clicks using any of the mouse buttons. Use the <a class=\"xref\" href=\"system.windows.forms.mouseeventargs#System_Windows_Forms_MouseEventArgs_Button_\" data-linktype=\"relative-path\">Button</a> property to determine which button was clicked.  </p>\n<p> To detect clicks on the contents of a cell, such as a button or link within a cell, use the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContentClick\" data-linktype=\"relative-path\">CellContentClick</a> event.  </p>\n<p> The handler for this event receives the column index and row index of the mouse pointer position.  </p>\n<p> For clicks in a <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell\" data-linktype=\"relative-path\">DataGridViewCheckBoxCell</a>, this event occurs before the check box changes value, so if you do not want to calculate the expected value based on the current value, you will typically handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueChanged\" data-linktype=\"relative-path\">CellValueChanged</a> event instead. Because that event occurs only when the user-specified value is committed, which typically occurs when focus leaves the cell, you must also handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCellDirtyStateChanged\" data-linktype=\"relative-path\">CurrentCellDirtyStateChanged</a> event. In that handler, if the current cell is a check box cell, call the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CommitEdit_\" data-linktype=\"relative-path\">CommitEdit</a> method and pass in the <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a> value.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellMouseClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the CellMouseClick event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#295\">private void DataGridView1_CellMouseClick(Object sender, DataGridViewCellMouseEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellMouseClick Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#295\">Private Sub DataGridView1_CellMouseClick(sender as Object, e as DataGridViewCellMouseEventArgs) _ \n     Handles DataGridView1.CellMouseClick\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellMouseClick Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellMouseDoubleClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellMouseDoubleClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a cell within the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is double-clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDoubleClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs when the user double-clicks using any of the mouse buttons. Use the <a class=\"xref\" href=\"system.windows.forms.mouseeventargs#System_Windows_Forms_MouseEventArgs_Button_\" data-linktype=\"relative-path\">Button</a> property to determine which button was clicked.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellMouseDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the CellMouseDoubleClick event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#296\">private void DataGridView1_CellMouseDoubleClick(Object sender, DataGridViewCellMouseEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellMouseDoubleClick Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#296\">Private Sub DataGridView1_CellMouseDoubleClick(sender as Object, e as DataGridViewCellMouseEventArgs) _ \n     Handles DataGridView1.CellMouseDoubleClick\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellMouseDoubleClick Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellMouseDown\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellMouseDown</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user presses a mouse button while the mouse pointer is within the boundaries of a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseDown;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs when the user presses any of the mouse buttons. Use the <a class=\"xref\" href=\"system.windows.forms.mouseeventargs#System_Windows_Forms_MouseEventArgs_Button_\" data-linktype=\"relative-path\">Button</a> property to determine which button was clicked.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellMouseDown event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the CellMouseDown event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#297\">private void DataGridView1_CellMouseDown(Object sender, DataGridViewCellMouseEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellMouseDown Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#297\">Private Sub DataGridView1_CellMouseDown(sender as Object, e as DataGridViewCellMouseEventArgs) _ \n     Handles DataGridView1.CellMouseDown\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellMouseDown Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellMouseEnter\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellMouseEnter</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the mouse pointer enters a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler CellMouseEnter;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows a CellMouseEnter event handler in a Tic-Tac-Toe game implementation that uses image columns in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. The event handler uses the cell value to determine the cursor and ToolTip to display.  </p>\n<p> This code is part of a larger example shown in <a href=\"../Topic/How%20to:%20Work%20with%20Image%20Columns%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Work with Image Columns in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15\">    private void dataGridView1_CellMouseEnter(object sender,\n        DataGridViewCellEventArgs e)\n    {\n        Bitmap markingUnderMouse = (Bitmap)dataGridView1.\n               Rows[e.RowIndex].\n               Cells[e.ColumnIndex].Value;\n\n        if (markingUnderMouse == blank)\n        {\n            dataGridView1.Cursor = Cursors.Default;\n        }\n        else if (markingUnderMouse == o || markingUnderMouse == x)\n        {\n            dataGridView1.Cursor = Cursors.No;\n            ToolTip(e, true);\n        }\n    }\n\n    private void ToolTip(DataGridViewCellEventArgs e, bool showTip)\n    {\n        DataGridViewImageCell cell = (DataGridViewImageCell)\n            dataGridView1\n            .Rows[e.RowIndex].Cells[e.ColumnIndex];\n        DataGridViewImageColumn imageColumn =\n            (DataGridViewImageColumn)\n            dataGridView1.Columns[cell.ColumnIndex];\n\n        if (showTip) cell.ToolTipText = imageColumn.Description;\n        else { cell.ToolTipText = String.Empty; }\n    }\n\n    private void dataGridView1_CellMouseLeave(object sender,\n        DataGridViewCellEventArgs e)\n    {\n        ToolTip(e, false);\n        dataGridView1.Cursor = Cursors.Default;\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15\">   void dataGridView1_CellMouseEnter( Object^ sender, DataGridViewCellEventArgs^ e )\n   {\n      Bitmap^ markingUnderMouse = dynamic_cast&lt;Bitmap^&gt;(dataGridView1-&gt;Rows[ e-&gt;RowIndex ]-&gt;Cells[ e-&gt;ColumnIndex ]-&gt;Value);\n      if ( markingUnderMouse == blank )\n      {\n         dataGridView1-&gt;Cursor = Cursors::Default;\n      }\n      else\n      if ( markingUnderMouse == o || markingUnderMouse == x )\n      {\n         dataGridView1-&gt;Cursor = Cursors::No;\n         ToolTip(e,true);\n      }\n   }\n\n   void ToolTip( DataGridViewCellEventArgs^ e, bool showTip )\n   {\n      DataGridViewImageCell^ cell = dynamic_cast&lt;DataGridViewImageCell^&gt;(dataGridView1-&gt;Rows[ e-&gt;RowIndex ]-&gt;Cells[ e-&gt;ColumnIndex ]);\n      DataGridViewImageColumn^ imageColumn = dynamic_cast&lt;DataGridViewImageColumn^&gt;(dataGridView1-&gt;Columns[ cell-&gt;ColumnIndex ]);\n      if ( showTip )\n            cell-&gt;ToolTipText = imageColumn-&gt;Description;\n      else\n      {\n         cell-&gt;ToolTipText = String::Empty;\n      }\n   }\n\n   void dataGridView1_CellMouseLeave( Object^ sender, DataGridViewCellEventArgs^ e )\n   {\n      ToolTip( e, false );\n      dataGridView1-&gt;Cursor = Cursors::Default;\n   }\n\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15\">    Private Sub dataGridView1_CellMouseEnter(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellMouseEnter\n\n        Dim markingUnderMouse As Bitmap = _\n            CType(dataGridView1.Rows(e.RowIndex). _\n                Cells(e.ColumnIndex).Value, Bitmap)\n\n        If markingUnderMouse Is blank Then\n            dataGridView1.Cursor = Cursors.Default\n        ElseIf markingUnderMouse Is o OrElse markingUnderMouse Is x Then\n            dataGridView1.Cursor = Cursors.No\n            ToolTip(e)\n        End If\n    End Sub\n\n    Private Sub ToolTip( _\n        ByVal e As DataGridViewCellEventArgs)\n\n        Dim cell As DataGridViewImageCell = _\n            CType(dataGridView1.Rows(e.RowIndex). _\n            Cells(e.ColumnIndex), DataGridViewImageCell)\n        Dim imageColumn As DataGridViewImageColumn = _\n            CType(dataGridView1.Columns(cell.ColumnIndex), _\n            DataGridViewImageColumn)\n\n        cell.ToolTipText = imageColumn.Description\n    End Sub\n\n    Private Sub dataGridView1_CellMouseLeave(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellMouseLeave\n\n        dataGridView1.Cursor = Cursors.Default\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellMouseLeave\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellMouseLeave</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the mouse pointer leaves a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler CellMouseLeave;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows a CellMouseLeave event handler in a Tic-Tac-Toe game implementation that uses image columns in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. The event handler resets the cursor and ToolTip, which are set in a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellMouseEnter\" data-linktype=\"relative-path\">CellMouseEnter</a> event handler.  </p>\n<p> This code is part of a larger example shown in <a href=\"../Topic/How%20to:%20Work%20with%20Image%20Columns%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Work with Image Columns in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15\">    private void dataGridView1_CellMouseEnter(object sender,\n        DataGridViewCellEventArgs e)\n    {\n        Bitmap markingUnderMouse = (Bitmap)dataGridView1.\n               Rows[e.RowIndex].\n               Cells[e.ColumnIndex].Value;\n\n        if (markingUnderMouse == blank)\n        {\n            dataGridView1.Cursor = Cursors.Default;\n        }\n        else if (markingUnderMouse == o || markingUnderMouse == x)\n        {\n            dataGridView1.Cursor = Cursors.No;\n            ToolTip(e, true);\n        }\n    }\n\n    private void ToolTip(DataGridViewCellEventArgs e, bool showTip)\n    {\n        DataGridViewImageCell cell = (DataGridViewImageCell)\n            dataGridView1\n            .Rows[e.RowIndex].Cells[e.ColumnIndex];\n        DataGridViewImageColumn imageColumn =\n            (DataGridViewImageColumn)\n            dataGridView1.Columns[cell.ColumnIndex];\n\n        if (showTip) cell.ToolTipText = imageColumn.Description;\n        else { cell.ToolTipText = String.Empty; }\n    }\n\n    private void dataGridView1_CellMouseLeave(object sender,\n        DataGridViewCellEventArgs e)\n    {\n        ToolTip(e, false);\n        dataGridView1.Cursor = Cursors.Default;\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15\">   void dataGridView1_CellMouseEnter( Object^ sender, DataGridViewCellEventArgs^ e )\n   {\n      Bitmap^ markingUnderMouse = dynamic_cast&lt;Bitmap^&gt;(dataGridView1-&gt;Rows[ e-&gt;RowIndex ]-&gt;Cells[ e-&gt;ColumnIndex ]-&gt;Value);\n      if ( markingUnderMouse == blank )\n      {\n         dataGridView1-&gt;Cursor = Cursors::Default;\n      }\n      else\n      if ( markingUnderMouse == o || markingUnderMouse == x )\n      {\n         dataGridView1-&gt;Cursor = Cursors::No;\n         ToolTip(e,true);\n      }\n   }\n\n   void ToolTip( DataGridViewCellEventArgs^ e, bool showTip )\n   {\n      DataGridViewImageCell^ cell = dynamic_cast&lt;DataGridViewImageCell^&gt;(dataGridView1-&gt;Rows[ e-&gt;RowIndex ]-&gt;Cells[ e-&gt;ColumnIndex ]);\n      DataGridViewImageColumn^ imageColumn = dynamic_cast&lt;DataGridViewImageColumn^&gt;(dataGridView1-&gt;Columns[ cell-&gt;ColumnIndex ]);\n      if ( showTip )\n            cell-&gt;ToolTipText = imageColumn-&gt;Description;\n      else\n      {\n         cell-&gt;ToolTipText = String::Empty;\n      }\n   }\n\n   void dataGridView1_CellMouseLeave( Object^ sender, DataGridViewCellEventArgs^ e )\n   {\n      ToolTip( e, false );\n      dataGridView1-&gt;Cursor = Cursors::Default;\n   }\n\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.ImageColumn_TicTacToe#15\">    Private Sub dataGridView1_CellMouseEnter(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellMouseEnter\n\n        Dim markingUnderMouse As Bitmap = _\n            CType(dataGridView1.Rows(e.RowIndex). _\n                Cells(e.ColumnIndex).Value, Bitmap)\n\n        If markingUnderMouse Is blank Then\n            dataGridView1.Cursor = Cursors.Default\n        ElseIf markingUnderMouse Is o OrElse markingUnderMouse Is x Then\n            dataGridView1.Cursor = Cursors.No\n            ToolTip(e)\n        End If\n    End Sub\n\n    Private Sub ToolTip( _\n        ByVal e As DataGridViewCellEventArgs)\n\n        Dim cell As DataGridViewImageCell = _\n            CType(dataGridView1.Rows(e.RowIndex). _\n            Cells(e.ColumnIndex), DataGridViewImageCell)\n        Dim imageColumn As DataGridViewImageColumn = _\n            CType(dataGridView1.Columns(cell.ColumnIndex), _\n            DataGridViewImageColumn)\n\n        cell.ToolTipText = imageColumn.Description\n    End Sub\n\n    Private Sub dataGridView1_CellMouseLeave(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellMouseLeave\n\n        dataGridView1.Cursor = Cursors.Default\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellMouseMove\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellMouseMove</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the mouse pointer moves over the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseMove;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellMouseMove event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the CellMouseMove event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#300\">private void DataGridView1_CellMouseMove(Object sender, DataGridViewCellMouseEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellMouseMove Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#300\">Private Sub DataGridView1_CellMouseMove(sender as Object, e as DataGridViewCellMouseEventArgs) _ \n     Handles DataGridView1.CellMouseMove\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellMouseMove Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellMouseUp\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellMouseUp</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user releases a mouse button while over a cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellMouseEventHandler CellMouseUp;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs when the user releases any of the mouse buttons. Use the <a class=\"xref\" href=\"system.windows.forms.mouseeventargs#System_Windows_Forms_MouseEventArgs_Button_\" data-linktype=\"relative-path\">Button</a> property to determine which button was clicked.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellMouseUp event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the CellMouseUp event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#301\">private void DataGridView1_CellMouseUp(Object sender, DataGridViewCellMouseEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellMouseUp Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#301\">Private Sub DataGridView1_CellMouseUp(sender as Object, e as DataGridViewCellMouseEventArgs) _ \n     Handles DataGridView1.CellMouseUp\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellMouseUp Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellPainting\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellPainting</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a cell needs to be drawn.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellPaintingEventHandler CellPainting;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can handle this event to customize the appearance of cells in the control. You can paint entire cells yourself, or paint specific parts of cells and use the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellpaintingeventargs#System_Windows_Forms_DataGridViewCellPaintingEventArgs_PaintBackground_\" data-linktype=\"relative-path\">PaintBackground</a> or <a class=\"xref\" href=\"system.windows.forms.datagridviewcellpaintingeventargs#System_Windows_Forms_DataGridViewCellPaintingEventArgs_PaintContent_\" data-linktype=\"relative-path\">PaintContent</a> methods to paint other parts. You can also use the <a class=\"xref\" href=\"system.windows.forms.visualstyles.visualstylerenderer\" data-linktype=\"relative-path\">VisualStyleRenderer</a> class to paint standard controls using the current theme. For more information, see <a href=\"../Topic/Rendering%20Controls%20with%20Visual%20Styles.md\" data-linktype=\"relative-path\">Rendering Controls with Visual Styles</a>. If you are using <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/vsprvslong-md.md&quot; -->Visual Studio 2005<!--END INCLUDE -->, you also have access to a large library of standard images that you can use with the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.  </p>\n<p> When handling this event, you should access the cell through the parameters of the event handler, rather than access the cell directly.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to use this event to customize the appearance of all cells in a particular column.  </p>\n<p> This code is part of a larger example available in <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Cells%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Cells in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewCellPainting#10\">    private void dataGridView1_CellPainting(object sender,\n    System.Windows.Forms.DataGridViewCellPaintingEventArgs e)\n    {\n        if (this.dataGridView1.Columns[&quot;ContactName&quot;].Index ==\n            e.ColumnIndex &amp;&amp; e.RowIndex &gt;= 0)\n        {\n            Rectangle newRect = new Rectangle(e.CellBounds.X + 1,\n                e.CellBounds.Y + 1, e.CellBounds.Width - 4,\n                e.CellBounds.Height - 4);\n\n            using (\n                Brush gridBrush = new SolidBrush(this.dataGridView1.GridColor),\n                backColorBrush = new SolidBrush(e.CellStyle.BackColor))\n            {\n                using (Pen gridLinePen = new Pen(gridBrush))\n                {\n                    // Erase the cell.\n                    e.Graphics.FillRectangle(backColorBrush, e.CellBounds);\n\n                    // Draw the grid lines (only the right and bottom lines;\n                    // DataGridView takes care of the others).\n                    e.Graphics.DrawLine(gridLinePen, e.CellBounds.Left,\n                        e.CellBounds.Bottom - 1, e.CellBounds.Right - 1,\n                        e.CellBounds.Bottom - 1);\n                    e.Graphics.DrawLine(gridLinePen, e.CellBounds.Right - 1,\n                        e.CellBounds.Top, e.CellBounds.Right - 1,\n                        e.CellBounds.Bottom);\n\n                    // Draw the inset highlight box.\n                    e.Graphics.DrawRectangle(Pens.Blue, newRect);\n\n                    // Draw the text content of the cell, ignoring alignment.\n                    if (e.Value != null)\n                    {\n                        e.Graphics.DrawString((String)e.Value, e.CellStyle.Font,\n                            Brushes.Crimson, e.CellBounds.X + 2,\n                            e.CellBounds.Y + 2, StringFormat.GenericDefault);\n                    }\n                    e.Handled = true;\n                }\n            }\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewCellPainting#10\">    Private Sub dataGridView1_CellPainting(ByVal sender As Object, _\n        ByVal e As System.Windows.Forms.DataGridViewCellPaintingEventArgs) _\n        Handles dataGridView1.CellPainting\n\n        If Me.dataGridView1.Columns(&quot;ContactName&quot;).Index = _\n            e.ColumnIndex AndAlso e.RowIndex &gt;= 0 Then\n\n            Dim newRect As New Rectangle(e.CellBounds.X + 1, e.CellBounds.Y + 1, _\n                e.CellBounds.Width - 4, e.CellBounds.Height - 4)\n            Dim backColorBrush As New SolidBrush(e.CellStyle.BackColor)\n            Dim gridBrush As New SolidBrush(Me.dataGridView1.GridColor)\n            Dim gridLinePen As New Pen(gridBrush)\n\n            Try\n\n                &#39; Erase the cell.\n                e.Graphics.FillRectangle(backColorBrush, e.CellBounds)\n\n                &#39; Draw the grid lines (only the right and bottom lines;\n                &#39; DataGridView takes care of the others).\n                e.Graphics.DrawLine(gridLinePen, e.CellBounds.Left, _\n                    e.CellBounds.Bottom - 1, e.CellBounds.Right - 1, _\n                    e.CellBounds.Bottom - 1)\n                e.Graphics.DrawLine(gridLinePen, e.CellBounds.Right - 1, _\n                    e.CellBounds.Top, e.CellBounds.Right - 1, _\n                    e.CellBounds.Bottom)\n\n                &#39; Draw the inset highlight box.\n                e.Graphics.DrawRectangle(Pens.Blue, newRect)\n\n                &#39; Draw the text content of the cell, ignoring alignment.\n                If (e.Value IsNot Nothing) Then\n                    e.Graphics.DrawString(CStr(e.Value), e.CellStyle.Font, _\n                    Brushes.Crimson, e.CellBounds.X + 2, e.CellBounds.Y + 2, _\n                    StringFormat.GenericDefault)\n                End If\n                e.Handled = True\n\n            Finally\n                gridLinePen.Dispose()\n                gridBrush.Dispose()\n                backColorBrush.Dispose()\n            End Try\n\n        End If\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellParsing\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellParsing</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a cell leaves edit mode if the cell value has been modified.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellParsingEventHandler CellParsing;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control will attempt to convert a user-specified value displayed in a cell to an actual underlying cell value in the type specified by the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ValueType_\" data-linktype=\"relative-path\">ValueType</a> property. This conversion uses the formatting properties of the cell style returned by the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_InheritedStyle_\" data-linktype=\"relative-path\">InheritedStyle</a> property.  </p>\n<p> If the standard conversion does not meet your needs, handle the CellParsing event to provide custom value conversion to the required type.  </p>\n<p> Users can enter edit mode using the method specified by the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_EditMode_\" data-linktype=\"relative-path\">EditMode</a> property, and can leave edit mode, committing any changes to a cell, by moving to another cell or by pressing ENTER. Pressing ESC will revert any changes to the value before it is committed, and the CellParsing event will not occur. The CellParsing event occurs only if the cell value has actually been modified, even if the final value is the same as the original value. It also occurs when the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CommitEdit_\" data-linktype=\"relative-path\">CommitEdit</a> method is called.  </p>\n<p> When you handle the CellParsing event, you can convert the value yourself or you can customize the default conversion. For example, you can convert the value yourself using the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ParseFormattedValue_\" data-linktype=\"relative-path\">ParseFormattedValue</a> method with type converters of your choosing. Alternatively, you can let the default type converters parse the value, but modify the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_DataSourceNullValue_\" data-linktype=\"relative-path\">DataSourceNullValue</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_FormatProvider_\" data-linktype=\"relative-path\">FormatProvider</a> properties of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellparsingeventargs#System_Windows_Forms_DataGridViewCellParsingEventArgs_InheritedCellStyle_\" data-linktype=\"relative-path\">InheritedCellStyle</a> property, which is initialized using the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_InheritedStyle_\" data-linktype=\"relative-path\">InheritedStyle</a> property.  </p>\n<p> When you convert the value yourself, replace the initial, formatted value of the <a class=\"xref\" href=\"system.windows.forms.converteventargs#System_Windows_Forms_ConvertEventArgs_Value_\" data-linktype=\"relative-path\">Value</a> property with the converted value in the type specified by the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ValueType_\" data-linktype=\"relative-path\">ValueType</a> property. To indicate that no further parsing is necessary, set the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellparsingeventargs#System_Windows_Forms_DataGridViewCellParsingEventArgs_ParsingApplied_\" data-linktype=\"relative-path\">ParsingApplied</a> property to <code>true</code>.  </p>\n<p> When the event handler completes, if the <a class=\"xref\" href=\"system.windows.forms.converteventargs#System_Windows_Forms_ConvertEventArgs_Value_\" data-linktype=\"relative-path\">Value</a> is <code>null</code> or is not of the correct type, or the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellparsingeventargs#System_Windows_Forms_DataGridViewCellParsingEventArgs_ParsingApplied_\" data-linktype=\"relative-path\">ParsingApplied</a> property is <code>false</code>, the <a class=\"xref\" href=\"system.windows.forms.converteventargs#System_Windows_Forms_ConvertEventArgs_Value_\" data-linktype=\"relative-path\">Value</a> is parsed using the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ParseFormattedValue_\" data-linktype=\"relative-path\">ParseFormattedValue</a> method with default type converters. The default implementation of this method parses the value using the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a>, <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_DataSourceNullValue_\" data-linktype=\"relative-path\">DataSourceNullValue</a>, and <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_FormatProvider_\" data-linktype=\"relative-path\">FormatProvider</a> properties of the cell style passed in. If the value is not equal to <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_NullValue_\" data-linktype=\"relative-path\">NullValue</a>, the value is parsed using the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_FormatProvider_\" data-linktype=\"relative-path\">FormatProvider</a> property and the type converters passed in.  </p>\n<p> To customize the conversion of a cell value into a formatted value for display, handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellFormatting\" data-linktype=\"relative-path\">CellFormatting</a> event.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to handle the CellParsing event. It also shows how to use the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellparsingeventargs\" data-linktype=\"relative-path\">DataGridViewCellParsingEventArgs</a> class.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.GridViewUnbound#2\">    &#39; Handling CellParsing allows one to accept user input, then map it to a different\n    &#39; internal representation.\n    Private Sub dataGridView1_CellParsing(ByVal sender As Object, _\n        ByVal e As DataGridViewCellParsingEventArgs) _\n        Handles dataGridView1.CellParsing\n\n        If Me.dataGridView1.Columns(e.ColumnIndex).Name = _\n            &quot;Release Date&quot; Then\n            If e IsNot Nothing Then\n                If e.Value IsNot Nothing Then\n                    Try\n                        &#39; Map what the user typed into UTC.\n                        e.Value = _\n                        DateTime.Parse(e.Value.ToString()).ToUniversalTime()\n                        &#39; Set the ParsingApplied property to \n                        &#39; Show the event is handled.\n                        e.ParsingApplied = True\n\n                    Catch ex As FormatException\n                        &#39; Set to false in case another CellParsing handler\n                        &#39; wants to try to parse this DataGridViewCellParsingEventArgs instance.\n                        e.ParsingApplied = False\n                    End Try\n                End If\n            End If\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.GridViewUnbound#2\">   // Handling CellParsing allows one to accept user input, then map it to a different\n   // internal representation.\n   void dataGridView1_CellParsing( Object^ /*sender*/, DataGridViewCellParsingEventArgs^ e )\n   {\n      if ( this-&gt;dataGridView1-&gt;Columns[ e-&gt;ColumnIndex ]-&gt;Name-&gt;Equals( &quot;Release Date&quot; ) )\n      {\n         if ( e != nullptr )\n         {\n            if ( e-&gt;Value != nullptr )\n            {\n               try\n               {\n                  // Map what the user typed into UTC.\n                  e-&gt;Value = DateTime::Parse( e-&gt;Value-&gt;ToString() ).ToUniversalTime();\n\n                  // Set the ParsingApplied property to \n                  // Show the event is handled.\n                  e-&gt;ParsingApplied = true;\n               }\n               catch ( FormatException^ /*ex*/ ) \n               {\n                  // Set to false in case another CellParsing handler\n                  // wants to try to parse this DataGridViewCellParsingEventArgs instance.\n                  e-&gt;ParsingApplied = false;\n               }\n            }\n         }\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.GridViewUnbound#2\">    // Handling CellParsing allows one to accept user input, then map it to a different\n    // internal representation.\n    private void dataGridView1_CellParsing(object sender, DataGridViewCellParsingEventArgs e)\n    {\n        if (this.dataGridView1.Columns[e.ColumnIndex].Name == &quot;Release Date&quot;)\n        {\n            if (e != null)\n            {\n                if (e.Value != null)\n                {\n                    try\n                    {\n                        // Map what the user typed into UTC.\n                        e.Value = DateTime.Parse(e.Value.ToString()).ToUniversalTime();\n                        // Set the ParsingApplied property to \n                        // Show the event is handled.\n                        e.ParsingApplied = true;\n\n                    }\n                    catch (FormatException)\n                    {\n                        // Set to false in case another CellParsing handler\n                        // wants to try to parse this DataGridViewCellParsingEventArgs instance.\n                        e.ParsingApplied = false;\n                    }\n                }\n            }\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellStateChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellStateChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a cell state changes, such as when the cell loses or gains focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellStateChangedEventHandler CellStateChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#135\">    private void dataGridView1_CellStateChanged(object sender,\n        DataGridViewCellStateChangedEventArgs e)\n    {\n        DataGridViewElementStates state = e.StateChanged;\n        string msg = String.Format(&quot;Row {0}, Column {1}, {2}&quot;,\n            e.Cell.RowIndex, e.Cell.ColumnIndex, e.StateChanged);\n        MessageBox.Show(msg, &quot;Cell State Changed&quot;);\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#135\">    Private Sub dataGridView1_CellStateChanged(ByVal sender As Object, _\n        ByVal e As DataGridViewCellStateChangedEventArgs) _\n        Handles dataGridView1.CellStateChanged\n\n        Dim state As DataGridViewElementStates = e.StateChanged\n        Dim msg As String = String.Format( _\n            &quot;Row {0}, Column {1}, {2}&quot;, _\n            e.Cell.RowIndex, e.Cell.ColumnIndex, e.StateChanged)\n        MessageBox.Show(msg, &quot;Cell State Changed&quot;)\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellStyleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellStyleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.Style*</span> property of a <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler CellStyleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs when any property of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> returned by a <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Style_\" data-linktype=\"relative-path\">Style</a> property is set to a new value or when a <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Style_\" data-linktype=\"relative-path\">Style</a> property is set to a new <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> with at least one property value different than the previous cell style object.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the CellStyleChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#305\">private void DataGridView1_CellStyleChanged(Object sender, DataGridViewCellEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellStyleChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#305\">Private Sub DataGridView1_CellStyleChanged(sender as Object, e as DataGridViewCellEventArgs) _ \n     Handles DataGridView1.CellStyleChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellStyleChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellStyleContentChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellStyleContentChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when one of the values of a cell style changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellStyleContentChangedEventHandler CellStyleContentChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CellStyleContentChanged event occurs when a property value of a <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> object returned by one of the following properties changes:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_Style_\" data-linktype=\"relative-path\">Style</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">RowHeadersDefaultCellStyle</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowsDefaultCellStyle_\" data-linktype=\"relative-path\">RowsDefaultCellStyle</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">ColumnHeadersDefaultCellStyle</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_AlternatingRowsDefaultCellStyle_\" data-linktype=\"relative-path\">AlternatingRowsDefaultCellStyle</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a>  \n\n<p>If one of these properties is set to a different <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a>, however, the corresponding <em>PropertyName</em><code>Changed</code> event occurs, but the CellStyleContentChanged event does not occur.  </p>\n<p>For row, column, and cell properties, the name of the <em>PropertyName</em><code>Changed</code> event begins with &quot;<code>Row</code>&quot;, &quot;<code>Column</code>&quot;, or &quot;<code>Cell</code>&quot; (for example, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowDefaultCellStyleChanged\" data-linktype=\"relative-path\">RowDefaultCellStyleChanged</a>).  </p>\n<p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellStyleContentChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the CellStyleContentChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#306\">private void DataGridView1_CellStyleContentChanged(Object sender, DataGridViewCellStyleContentChangedEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellStyle&quot;, e.CellStyle );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellStyleScope&quot;, e.CellStyleScope );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellStyleContentChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#306\">Private Sub DataGridView1_CellStyleContentChanged(sender as Object, e as DataGridViewCellStyleContentChangedEventArgs) _ \n     Handles DataGridView1.CellStyleContentChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellStyle&quot;, e.CellStyle)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;CellStyleScope&quot;, e.CellStyleScope)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellStyleContentChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellToolTipTextChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellToolTipTextChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewCell.ToolTipText*</span> property value changes for a cell in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler CellToolTipTextChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the CellToolTipTextChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the CellToolTipTextChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#307\">private void DataGridView1_CellToolTipTextChanged(Object sender, DataGridViewCellEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;CellToolTipTextChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#307\">Private Sub DataGridView1_CellToolTipTextChanged(sender as Object, e as DataGridViewCellEventArgs) _ \n     Handles DataGridView1.CellToolTipTextChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;CellToolTipTextChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellToolTipTextNeeded\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellToolTipTextNeeded</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a cell&#39;s ToolTip text is needed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellToolTipTextNeededEventHandler CellToolTipTextNeeded;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CellToolTipTextNeeded event occurs only when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property is set or its <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property is <code>true</code>.  </p>\n<p> When you handle the CellToolTipTextNeeded event, the ToolTip text you specify in the handler is shown whenever the mouse pointer is over a cell and the control <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ShowCellToolTips_\" data-linktype=\"relative-path\">ShowCellToolTips</a> property value is <code>true</code>. The CellToolTipTextNeeded event is useful when you want to display ToolTips determined by the current state or value of a cell.  </p>\n<p> The CellToolTipTextNeeded event also occurs whenever the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ToolTipText_\" data-linktype=\"relative-path\">ToolTipText</a> property is retrieved, either programmatically or when the mouse pointer enters a cell.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs#System_Windows_Forms_DataGridViewCellEventArgs_ColumnIndex_\" data-linktype=\"relative-path\">ColumnIndex</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs#System_Windows_Forms_DataGridViewCellEventArgs_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a> properties to determine the state or value of a cell, and use this information to change or modify the <a class=\"xref\" href=\"system.windows.forms.datagridviewcelltooltiptextneededeventargs#System_Windows_Forms_DataGridViewCellToolTipTextNeededEventArgs_ToolTipText_\" data-linktype=\"relative-path\">ToolTipText</a> property. This property is initialized with the value of the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ToolTipText_\" data-linktype=\"relative-path\">ToolTipText</a> property, which the event value overrides.  </p>\n<p> Handle the CellToolTipTextNeeded event when working with large amounts of data to avoid the performance penalties of setting the cell <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_ToolTipText_\" data-linktype=\"relative-path\">ToolTipText</a> value for multiple cells. For more information, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use a CellToolTipTextNeeded event handler to display information from hidden columns in a data-bound <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView_NeededEvents#20\">    void dataGridView1_CellToolTipTextNeeded(object sender,\n        DataGridViewCellToolTipTextNeededEventArgs e)\n    {\n        string newLine = Environment.NewLine;\n        if (e.RowIndex &gt; -1)\n        {\n            DataGridViewRow dataGridViewRow1 = dataGridView1.Rows[e.RowIndex];\n\n            // Add the employee&#39;s ID to the ToolTipText.\n            e.ToolTipText = String.Format(&quot;EmployeeID {0}:{1}&quot;,\n                dataGridViewRow1.Cells[&quot;EmployeeID&quot;].Value, newLine);\n\n            // Add the employee&#39;s name to the ToolTipText.\n            e.ToolTipText += String.Format(&quot;{0} {1} {2}{3}&quot;,\n                dataGridViewRow1.Cells[&quot;TitleOfCourtesy&quot;].Value.ToString(),\n                dataGridViewRow1.Cells[&quot;FirstName&quot;].Value.ToString(),\n                dataGridViewRow1.Cells[&quot;LastName&quot;].Value.ToString(),\n                newLine);\n\n            // Add the employee&#39;s title to the ToolTipText.\n            e.ToolTipText += String.Format(&quot;{0}{1}{2}&quot;,\n                dataGridViewRow1.Cells[&quot;Title&quot;].Value.ToString(),\n                newLine, newLine);\n\n            // Add the employee&#39;s contact information to the ToolTipText.\n            e.ToolTipText += String.Format(&quot;{0}{1}{2}, &quot;,\n                dataGridViewRow1.Cells[&quot;Address&quot;].Value.ToString(), newLine,\n                dataGridViewRow1.Cells[&quot;City&quot;].Value.ToString());\n            if (!String.IsNullOrEmpty(\n                dataGridViewRow1.Cells[&quot;Region&quot;].Value.ToString()))\n            {\n                e.ToolTipText += String.Format(&quot;{0}, &quot;,\n                    dataGridViewRow1.Cells[&quot;Region&quot;].Value.ToString());\n            }\n            e.ToolTipText += String.Format(&quot;{0}, {1}{2}{3} EXT:{4}{5}{6}&quot;,\n                dataGridViewRow1.Cells[&quot;Country&quot;].Value.ToString(),\n                dataGridViewRow1.Cells[&quot;PostalCode&quot;].Value.ToString(),\n                newLine, dataGridViewRow1.Cells[&quot;HomePhone&quot;].Value.ToString(),\n                dataGridViewRow1.Cells[&quot;Extension&quot;].Value.ToString(),\n                newLine, newLine);\n\n            // Add employee information to the ToolTipText.\n            DateTime HireDate =\n                (DateTime)dataGridViewRow1.Cells[&quot;HireDate&quot;].Value;\n            e.ToolTipText +=\n                String.Format(&quot;Employee since: {0}/{1}/{2}{3}Manager: {4}&quot;,\n                HireDate.Month.ToString(), HireDate.Day.ToString(),\n                HireDate.Year.ToString(), newLine,\n                dataGridViewRow1.Cells[&quot;Manager&quot;].Value.ToString());\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView_NeededEvents#20\">    Public Sub dataGridView1_CellToolTipTextNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewCellToolTipTextNeededEventArgs) _\n        Handles dataGridView1.CellToolTipTextNeeded\n\n        Dim newLine As String = Environment.NewLine\n        If e.RowIndex &gt; -1 Then\n            Dim dataGridViewRow1 As DataGridViewRow = _\n            dataGridView1.Rows(e.RowIndex)\n\n            &#39; Add the employee&#39;s ID to the ToolTipText.\n            e.ToolTipText = String.Format(&quot;EmployeeID {0}: {1}&quot;, _\n                dataGridViewRow1.Cells(&quot;EmployeeID&quot;).Value.ToString(), _\n                newLine)\n\n            &#39; Add the employee&#39;s name to the ToolTipText.\n            e.ToolTipText += String.Format(&quot;{0} {1} {2} {3}&quot;, _\n                dataGridViewRow1.Cells(&quot;TitleOfCourtesy&quot;).Value.ToString(), _\n                dataGridViewRow1.Cells(&quot;FirstName&quot;).Value.ToString(), _\n                dataGridViewRow1.Cells(&quot;LastName&quot;).Value.ToString(), _\n                newLine)\n\n            &#39; Add the employee&#39;s title to the ToolTipText.\n            e.ToolTipText += String.Format(&quot;{0}{1}{2}&quot;, _\n                dataGridViewRow1.Cells(&quot;Title&quot;).Value.ToString(), _\n                newLine, newLine)\n\n            &#39; Add the employee&#39;s contact information to the ToolTipText.\n            e.ToolTipText += String.Format(&quot;{0}{1}{2}, &quot;, _\n                dataGridViewRow1.Cells(&quot;Address&quot;).Value.ToString(), newLine, _\n                dataGridViewRow1.Cells(&quot;City&quot;).Value.ToString())\n            If Not String.IsNullOrEmpty( _\n                dataGridViewRow1.Cells(&quot;Region&quot;).Value.ToString())\n\n                e.ToolTipText += String.Format(&quot;{0}, &quot;, _\n                   dataGridViewRow1.Cells(&quot;Region&quot;).Value.ToString())\n            End If\n            e.ToolTipText += String.Format(&quot;{0}, {1}{2}{3} EXT:{4}{5}{6}&quot;, _\n                dataGridViewRow1.Cells(&quot;Country&quot;).Value.ToString(), _\n                dataGridViewRow1.Cells(&quot;PostalCode&quot;).Value.ToString(), _\n                newLine, _\n                dataGridViewRow1.Cells(&quot;HomePhone&quot;).Value.ToString(), _\n                dataGridViewRow1.Cells(&quot;Extension&quot;).Value.ToString(), _\n                newLine, newLine)\n\n            &#39; Add employee information to the ToolTipText.\n            Dim HireDate As DateTime = _\n                CType(dataGridViewRow1.Cells(&quot;HireDate&quot;).Value, DateTime)\n            e.ToolTipText += _\n                String.Format(&quot;Employee since: {0}/{1}/{2}{3}Manager: {4}&quot;, _\n                    HireDate.Month.ToString(), HireDate.Day.ToString(), _\n                    HireDate.Year.ToString(), newLine, _\n                    dataGridViewRow1.Cells(&quot;Manager&quot;).Value.ToString())\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellValidated\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellValidated</div>        \r\n          </div>\r\n    \r\n            <p>Occurs after the cell has finished validating.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler CellValidated;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Handling this event is useful for post-validation processing of the cell value.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the CellValidated event to clear out the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property. In this example, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValidating\" data-linktype=\"relative-path\">CellValidating</a> event sets the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> if the user enters data that is not valid into a cell. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"relative-path\">SelectionChanged</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewSelectionSum#50\">    private void DataGridView1_CellValidated(object sender,\n        DataGridViewCellEventArgs e)\n    {\n        // Clear any error messages that may have been set in cell validation.\n        DataGridView1.Rows[e.RowIndex].ErrorText = null;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewSelectionSum#50\">    Private Sub CellValidated(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles DataGridView1.CellValidated\n\n        &#39; Clear any error messages that may have been set in cell validation.\n        DataGridView1.Rows(e.RowIndex).ErrorText = Nothing\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellValidating\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellValidating</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a cell loses input focus, enabling content validation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellValidatingEventHandler CellValidating;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Canceling this event cancels the changes to the current cell. When this event is canceled in data-bound mode, the new value is not pushed to the underlying data source. When this event is canceled in virtual mode, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValuePushed\" data-linktype=\"relative-path\">CellValuePushed</a> event will not be raised.  </p>\n<p> Handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValidated\" data-linktype=\"relative-path\">CellValidated</a> event to perform post-validation processing.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example handles the CellValidating event to ensure that only positive integers are entered by the user. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView._Virtual#40\">    private void dataGridView1_CellValidating(object sender,\n        DataGridViewCellValidatingEventArgs e)\n    {\n        dataGridView1.Rows[e.RowIndex].ErrorText = &quot;&quot;;\n        int newInteger;\n\n        // Don&#39;t try to validate the &#39;new row&#39; until finished \n        // editing since there\n        // is not any point in validating its initial value.\n        if (dataGridView1.Rows[e.RowIndex].IsNewRow) { return; }\n        if (!int.TryParse(e.FormattedValue.ToString(),\n            out newInteger) || newInteger &lt; 0)\n        {\n            e.Cancel = true;\n            dataGridView1.Rows[e.RowIndex].ErrorText = &quot;the value must be a non-negative integer&quot;;\n        }\n    }\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView._Virtual#40\">    void VirtualConnector::dataGridView1_CellValidating\n        (Object^ sender, DataGridViewCellValidatingEventArgs^ e)\n    {\n        int newInteger;\n\n        // Don&#39;t try to validate the &#39;new row&#39; until finished \n        // editing since there\n        // is not any point in validating its initial value.\n        if (dataGridView1-&gt;Rows[e-&gt;RowIndex]-&gt;IsNewRow) \n        {\n            return; \n        }\n        if (!Int32::TryParse(e-&gt;FormattedValue-&gt;ToString(), \n            newInteger) || (newInteger &lt; 0))\n        {\n            e-&gt;Cancel = true;\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView._Virtual#40\">    Private Sub dataGridView1_CellValidating(ByVal sender As Object, _\n        ByVal e _\n        As DataGridViewCellValidatingEventArgs) _\n        Handles dataGridView1.CellValidating\n\n        Me.dataGridView1.Rows(e.RowIndex).ErrorText = &quot;&quot;\n        Dim newInteger As Integer\n\n        &#39; Don&#39;t try to validate the &#39;new row&#39; until finished \n        &#39; editing since there\n        &#39; is not any point in validating its initial value.\n        If dataGridView1.Rows(e.RowIndex).IsNewRow Then Return\n        If Not Integer.TryParse(e.FormattedValue.ToString(), newInteger) _\n            OrElse newInteger &lt; 0 Then\n\n            e.Cancel = True\n            Me.dataGridView1.Rows(e.RowIndex).ErrorText = &quot;the value must be a non-negative integer&quot;\n\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellValueChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellValueChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of a cell changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler CellValueChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CellValueChanged event occurs when the user-specified value is committed, which typically occurs when focus leaves the cell.  </p>\n<p> In the case of check box cells, however, you will typically want to handle the change immediately. To commit the change when the cell is clicked, you must handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCellDirtyStateChanged\" data-linktype=\"relative-path\">System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged</a> event. In the handler, if the current cell is a check box cell, call the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CommitEdit_\" data-linktype=\"relative-path\">CommitEdit</a> method and pass in the <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerrorcontexts\" data-linktype=\"relative-path\">DataGridViewDataErrorContexts</a> value.  </p>\n<p> Rows in the control are not automatically sorted when a cell value is changed. To sort the control when the user modifies a cell, call the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Sort_\" data-linktype=\"relative-path\">Sort</a> method in a CellValueChanged event handler.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the CellValueChanged event to update the values in a balance column of a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"relative-path\">SelectionChanged</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewSelectionSum#30\">    private void DataGridView1_CellValueChanged(\n        object sender, DataGridViewCellEventArgs e)\n    {\n        // Update the balance column whenever the value of any cell changes.\n        UpdateBalance();\n    }\n\n    private void DataGridView1_RowsRemoved(\n        object sender, DataGridViewRowsRemovedEventArgs e)\n    {\n        // Update the balance column whenever rows are deleted.\n        UpdateBalance();\n    }\n\n    private void UpdateBalance()\n    {\n        int counter;\n        int balance;\n        int deposit;\n        int withdrawal;\n\n        // Iterate through the rows, skipping the Starting Balance row.\n        for (counter = 1; counter &lt; (DataGridView1.Rows.Count - 1);\n            counter++)\n        {\n            deposit = 0;\n            withdrawal = 0;\n            balance = int.Parse(DataGridView1.Rows[counter - 1]\n                .Cells[&quot;Balance&quot;].Value.ToString());\n\n            if (DataGridView1.Rows[counter].Cells[&quot;Deposits&quot;].Value != null)\n            {\n                // Verify that the cell value is not an empty string.\n                if (DataGridView1.Rows[counter]\n                    .Cells[&quot;Deposits&quot;].Value.ToString().Length != 0)\n                {\n                    deposit = int.Parse(DataGridView1.Rows[counter]\n                        .Cells[&quot;Deposits&quot;].Value.ToString());\n                }\n            }\n\n            if (DataGridView1.Rows[counter].Cells[&quot;Withdrawals&quot;].Value != null)\n            {\n                if (DataGridView1.Rows[counter]\n                    .Cells[&quot;Withdrawals&quot;].Value.ToString().Length != 0)\n                {\n                    withdrawal = int.Parse(DataGridView1.Rows[counter]\n                        .Cells[&quot;Withdrawals&quot;].Value.ToString());\n                }\n            }\n            DataGridView1.Rows[counter].Cells[&quot;Balance&quot;].Value =\n                (balance + deposit + withdrawal).ToString();\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewSelectionSum#30\">    Private Sub CellValueChanged(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles DataGridView1.CellValueChanged\n\n        &#39; Update the balance column whenever the values of any cell changes.\n        UpdateBalance()\n    End Sub\n\n    Private Sub RowsRemoved(ByVal sender As Object, _\n        ByVal e As DataGridViewRowsRemovedEventArgs) _\n        Handles DataGridView1.RowsRemoved\n\n        &#39; Update the balance column whenever rows are deleted.\n        UpdateBalance()\n    End Sub\n\n    Private Sub UpdateBalance()\n        Dim counter As Integer\n        Dim balance As Integer\n        Dim deposit As Integer\n        Dim withdrawal As Integer\n\n        &#39; Iterate through the rows, skipping the Starting Balance Row.\n        For counter = 1 To (DataGridView1.Rows.Count - 2)\n            deposit = 0\n            withdrawal = 0\n            balance = Integer.Parse(DataGridView1.Rows(counter - 1) _\n                .Cells(&quot;Balance&quot;).Value.ToString())\n\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Deposits&quot;).Value Is Nothing Then\n\n                &#39; Verify that the cell value is not an empty string.\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Deposits&quot;).Value.ToString().Length = 0 Then\n                    deposit = Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Deposits&quot;).Value.ToString())\n                End If\n            End If\n\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Withdrawals&quot;).Value Is Nothing Then\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Withdrawals&quot;).Value.ToString().Length = 0 Then\n                    withdrawal = Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Withdrawals&quot;).Value.ToString())\n                End If\n            End If\n\n            DataGridView1.Rows(counter).Cells(&quot;Balance&quot;).Value = _\n                (balance + deposit + withdrawal).ToString()\n        Next\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellValueNeeded\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellValueNeeded</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.VirtualMode*</span> property of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control is <code>true</code> and the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> requires a value for a cell in order to format and display the cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellValueEventHandler CellValueNeeded;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this event in virtual mode to populate cells with data from a custom data store without causing rows to become unshared. For more information about row sharing, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>. For more information about virtual mode, see <a href=\"../Topic/Virtual%20Mode%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Virtual Mode in the Windows Forms DataGridView Control</a>.  </p>\n<p> To add user-specified values to your custom data store, handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValuePushed\" data-linktype=\"relative-path\">CellValuePushed</a> event.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example handles the CellValueNeeded event to populate cells with positive integers. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView._Virtual#10\">    #region &quot;data store maintance&quot;\n    const int initialValue = -1;\n\n    private void dataGridView1_CellValueNeeded(object sender,\n        DataGridViewCellValueEventArgs e)\n    {\n        if (store.ContainsKey(e.RowIndex))\n        {\n            // Use the store if the e value has been modified \n            // and stored.            \n            e.Value = store[e.RowIndex];\n        }\n        else if (newRowNeeded &amp;&amp; e.RowIndex == numberOfRows)\n        {\n            if (dataGridView1.IsCurrentCellInEditMode)\n            {\n                e.Value = initialValue;\n            }\n            else\n            {\n                // Show a blank value if the cursor is just resting\n                // on the last row.\n                e.Value = String.Empty;\n            }\n        }\n        else\n        {\n            e.Value = e.RowIndex;\n        }\n    }\n\n    private void dataGridView1_CellValuePushed(object sender,\n        DataGridViewCellValueEventArgs e)\n    {\n        store.Add(e.RowIndex, int.Parse(e.Value.ToString()));\n    }\n    #endregion\n\n    private Dictionary&lt;int, int&gt; store = new Dictionary&lt;int, int&gt;();\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView._Virtual#10\">#pragma region Data store maintance\n\n    void VirtualConnector::dataGridView1_CellValueNeeded\n        (Object^ sender, DataGridViewCellValueEventArgs^ e)\n    {\n        if (store-&gt;ContainsKey(e-&gt;RowIndex))\n        {\n            // Use the store if the e value has been modified \n            // and stored.            \n            e-&gt;Value = gcnew Int32(store-&gt;default[e-&gt;RowIndex]); \n        }\n        else if (newRowNeeded &amp;&amp; e-&gt;RowIndex == numberOfRows)\n        {\n            if (dataGridView1-&gt;IsCurrentCellInEditMode)\n            {\n                e-&gt;Value = initialValue;\n            }\n            else\n            {\n                // Show a blank e if the cursor is just loitering\n                // over(the) last row.\n                e-&gt;Value = String::Empty;\n            }\n        }\n        else\n        {\n            e-&gt;Value = e-&gt;RowIndex;\n        }\n    }\n\n    void VirtualConnector::dataGridView1_CellValuePushed\n        (Object^ sender, DataGridViewCellValueEventArgs^ e)\n    {\n        String^ value = e-&gt;Value-&gt;ToString();\n        store[e-&gt;RowIndex] = Int32::Parse(value, \n            CultureInfo::CurrentCulture);\n    }\n#pragma endregion\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView._Virtual#10\">#Region &quot;data store maintance&quot;\n    Const initialValue As Integer = -1\n\n    Private Sub dataGridView1_CellValueNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValueNeeded\n\n        If store.ContainsKey(e.RowIndex) Then\n            &#39; Use the store if the e value has been modified \n            &#39; and stored.\n            e.Value = store(e.RowIndex)\n        ElseIf newRowNeeded AndAlso e.RowIndex = numberOfRows Then\n            If dataGridView1.IsCurrentCellInEditMode Then\n                e.Value = initialValue\n            Else\n                &#39; Show a blank value if the cursor is just resting\n                &#39; on the last row.\n                e.Value = String.Empty\n            End If\n        Else\n            e.Value = e.RowIndex\n        End If\n    End Sub\n\n    Private Sub dataGridView1_CellValuePushed(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValuePushed\n\n        store.Add(e.RowIndex, CInt(e.Value))\n\n    End Sub\n#End Region\n\n    Dim store As System.Collections.Generic.Dictionary(Of Integer, Integer) = _\n        New Dictionary(Of Integer, Integer)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CellValuePushed\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CellValuePushed</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.VirtualMode*</span> property of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control is <code>true</code> and a cell value has changed and requires storage in the underlying data source.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellValueEventHandler CellValuePushed;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this event in virtual mode to update a custom data store with user-specified data. Handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueNeeded\" data-linktype=\"relative-path\">CellValueNeeded</a> event to retrieve values from the data store for display in the control.  </p>\n<p> For more information about virtual mode, see <a href=\"../Topic/Virtual%20Mode%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Virtual Mode in the Windows Forms DataGridView Control</a>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example handles the CellValuePushed event to store updates and new entries in a data store object. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView._Virtual#10\">    #region &quot;data store maintance&quot;\n    const int initialValue = -1;\n\n    private void dataGridView1_CellValueNeeded(object sender,\n        DataGridViewCellValueEventArgs e)\n    {\n        if (store.ContainsKey(e.RowIndex))\n        {\n            // Use the store if the e value has been modified \n            // and stored.            \n            e.Value = store[e.RowIndex];\n        }\n        else if (newRowNeeded &amp;&amp; e.RowIndex == numberOfRows)\n        {\n            if (dataGridView1.IsCurrentCellInEditMode)\n            {\n                e.Value = initialValue;\n            }\n            else\n            {\n                // Show a blank value if the cursor is just resting\n                // on the last row.\n                e.Value = String.Empty;\n            }\n        }\n        else\n        {\n            e.Value = e.RowIndex;\n        }\n    }\n\n    private void dataGridView1_CellValuePushed(object sender,\n        DataGridViewCellValueEventArgs e)\n    {\n        store.Add(e.RowIndex, int.Parse(e.Value.ToString()));\n    }\n    #endregion\n\n    private Dictionary&lt;int, int&gt; store = new Dictionary&lt;int, int&gt;();\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView._Virtual#10\">#pragma region Data store maintance\n\n    void VirtualConnector::dataGridView1_CellValueNeeded\n        (Object^ sender, DataGridViewCellValueEventArgs^ e)\n    {\n        if (store-&gt;ContainsKey(e-&gt;RowIndex))\n        {\n            // Use the store if the e value has been modified \n            // and stored.            \n            e-&gt;Value = gcnew Int32(store-&gt;default[e-&gt;RowIndex]); \n        }\n        else if (newRowNeeded &amp;&amp; e-&gt;RowIndex == numberOfRows)\n        {\n            if (dataGridView1-&gt;IsCurrentCellInEditMode)\n            {\n                e-&gt;Value = initialValue;\n            }\n            else\n            {\n                // Show a blank e if the cursor is just loitering\n                // over(the) last row.\n                e-&gt;Value = String::Empty;\n            }\n        }\n        else\n        {\n            e-&gt;Value = e-&gt;RowIndex;\n        }\n    }\n\n    void VirtualConnector::dataGridView1_CellValuePushed\n        (Object^ sender, DataGridViewCellValueEventArgs^ e)\n    {\n        String^ value = e-&gt;Value-&gt;ToString();\n        store[e-&gt;RowIndex] = Int32::Parse(value, \n            CultureInfo::CurrentCulture);\n    }\n#pragma endregion\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView._Virtual#10\">#Region &quot;data store maintance&quot;\n    Const initialValue As Integer = -1\n\n    Private Sub dataGridView1_CellValueNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValueNeeded\n\n        If store.ContainsKey(e.RowIndex) Then\n            &#39; Use the store if the e value has been modified \n            &#39; and stored.\n            e.Value = store(e.RowIndex)\n        ElseIf newRowNeeded AndAlso e.RowIndex = numberOfRows Then\n            If dataGridView1.IsCurrentCellInEditMode Then\n                e.Value = initialValue\n            Else\n                &#39; Show a blank value if the cursor is just resting\n                &#39; on the last row.\n                e.Value = String.Empty\n            End If\n        Else\n            e.Value = e.RowIndex\n        End If\n    End Sub\n\n    Private Sub dataGridView1_CellValuePushed(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValuePushed\n\n        store.Add(e.RowIndex, CInt(e.Value))\n\n    End Sub\n#End Region\n\n    Dim store As System.Collections.Generic.Dictionary(Of Integer, Integer) = _\n        New Dictionary(Of Integer, Integer)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnAdded\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnAdded</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a column is added to the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnAdded;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnAdded event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnAdded event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#314\">private void DataGridView1_ColumnAdded(Object sender, DataGridViewColumnEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnAdded Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#314\">Private Sub DataGridView1_ColumnAdded(sender as Object, e as DataGridViewColumnEventArgs) _ \n     Handles DataGridView1.ColumnAdded\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnAdded Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnContextMenuStripChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnContextMenuStripChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.ContextMenuStrip*</span> property of a column changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnContextMenuStripChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of theColumnContextMenuStripChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnContextMenuStripChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#315\">private void DataGridView1_ColumnContextMenuStripChanged(Object sender, DataGridViewColumnEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnContextMenuStripChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#315\">Private Sub DataGridView1_ColumnContextMenuStripChanged(sender as Object, e as DataGridViewColumnEventArgs) _ \n     Handles DataGridView1.ColumnContextMenuStripChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnContextMenuStripChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnDataPropertyNameChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnDataPropertyNameChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.DataPropertyName*</span> property for a column changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDataPropertyNameChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnDataPropertyNameChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnDataPropertyNameChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#316\">private void DataGridView1_ColumnDataPropertyNameChanged(Object sender, DataGridViewColumnEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnDataPropertyNameChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#316\">Private Sub DataGridView1_ColumnDataPropertyNameChanged(sender as Object, e as DataGridViewColumnEventArgs) _ \n     Handles DataGridView1.ColumnDataPropertyNameChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnDataPropertyNameChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnDefaultCellStyleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnDefaultCellStyleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewBand.DefaultCellStyle*</span> property for a column changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDefaultCellStyleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs when any properties of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property for a column is set to a new value or when the <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property for a column is set to a new <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> with at least one property value different than the previous cell style object.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnDefaultCellStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnDefaultCellStyleChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#317\">private void DataGridView1_ColumnDefaultCellStyleChanged(Object sender, DataGridViewColumnEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnDefaultCellStyleChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#317\">Private Sub DataGridView1_ColumnDefaultCellStyleChanged(sender as Object, e as DataGridViewColumnEventArgs) _ \n     Handles DataGridView1.ColumnDefaultCellStyleChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnDefaultCellStyleChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnDisplayIndexChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnDisplayIndexChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.DisplayIndex*</span> property for a column changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDisplayIndexChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnDisplayIndexChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnDisplayIndexChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#318\">private void DataGridView1_ColumnDisplayIndexChanged(Object sender, DataGridViewColumnEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnDisplayIndexChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#318\">Private Sub DataGridView1_ColumnDisplayIndexChanged(sender as Object, e as DataGridViewColumnEventArgs) _ \n     Handles DataGridView1.ColumnDisplayIndexChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnDisplayIndexChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnDividerDoubleClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnDividerDoubleClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user double-clicks a divider between two columns.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventHandler ColumnDividerDoubleClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this event to customize the automatic sizing behavior that occurs when a user double-clicks a column divider. For example, you can handle this event to programmatically resize columns based only on the content in the rows that are currently visible, avoiding a performance impact with the default behavior when working with a large number of rows.  </p>\n<p> The column <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DividerWidth_\" data-linktype=\"relative-path\">DividerWidth</a> property does not extend the area in which a user can double-click. If the width of a divider has been increased through the use of this property, this event occurs when the user double-clicks the boundary between the divider and the adjacent column.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnDividerDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnDividerDoubleClick event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#319\">private void DataGridView1_ColumnDividerDoubleClick(Object sender, DataGridViewColumnDividerDoubleClickEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnDividerDoubleClick Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#319\">Private Sub DataGridView1_ColumnDividerDoubleClick(sender as Object, e as DataGridViewColumnDividerDoubleClickEventArgs) _ \n     Handles DataGridView1.ColumnDividerDoubleClick\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnDividerDoubleClick Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnDividerWidthChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnDividerWidthChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.DividerWidth*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnDividerWidthChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnDividerWidthChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnDividerWidthChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#320\">private void DataGridView1_ColumnDividerWidthChanged(Object sender, DataGridViewColumnEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnDividerWidthChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#320\">Private Sub DataGridView1_ColumnDividerWidthChanged(sender as Object, e as DataGridViewColumnEventArgs) _ \n     Handles DataGridView1.ColumnDividerWidthChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnDividerWidthChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnHeaderCellChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnHeaderCellChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the contents of a column header cell change.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnHeaderCellChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnHeaderCellChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnHeaderCellChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#323\">private void DataGridView1_ColumnHeaderCellChanged(Object sender, DataGridViewColumnEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnHeaderCellChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#323\">Private Sub DataGridView1_ColumnHeaderCellChanged(sender as Object, e as DataGridViewColumnEventArgs) _ \n     Handles DataGridView1.ColumnHeaderCellChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnHeaderCellChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnHeaderMouseClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnHeaderMouseClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user clicks a column header.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>When a column heading is clicked in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>, the default behavior is to order the grid rows based on the clicked column, or to reverse the sort order if the grid is already sorted by the clicked column. The following code example demonstrates how to use this event to perform a programmatic sort that emulates the default behavior of clicking a <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnheadercell\" data-linktype=\"relative-path\">DataGridViewColumnHeaderCell</a> when the default behavior has been disabled. In this example, the<a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionMode_\" data-linktype=\"relative-path\">SelectionMode</a> is set to <a class=\"xref\" href=\"system.windows.forms.datagridviewselectionmode\" data-linktype=\"relative-path\">DataGridViewSelectionMode</a>, so clicking the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnheadercell\" data-linktype=\"relative-path\">DataGridViewColumnHeaderCell</a> selects the contents of the column. For the example code to function as intended, the default column header click behavior needs to be changed each time the data is loaded into the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. Add a <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataBindingComplete\" data-linktype=\"relative-path\">DataBindingComplete</a> event handler to provide the code that changes the default behavior. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code> and ensure that all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#160\">    private void dataGridView1_ColumnHeaderMouseClick(\n        object sender, DataGridViewCellMouseEventArgs e)\n    {\n        DataGridViewColumn newColumn = dataGridView1.Columns[e.ColumnIndex];\n        DataGridViewColumn oldColumn = dataGridView1.SortedColumn;\n        ListSortDirection direction;\n\n        // If oldColumn is null, then the DataGridView is not sorted.\n        if (oldColumn != null)\n        {\n            // Sort the same column again, reversing the SortOrder.\n            if (oldColumn == newColumn &amp;&amp;\n                dataGridView1.SortOrder == SortOrder.Ascending)\n            {\n                direction = ListSortDirection.Descending;\n            }\n            else\n            {\n                // Sort a new column and remove the old SortGlyph.\n                direction = ListSortDirection.Ascending;\n                oldColumn.HeaderCell.SortGlyphDirection = SortOrder.None;\n            }\n        }\n        else\n        {\n            direction = ListSortDirection.Ascending;\n        }\n\n        // Sort the selected column.\n        dataGridView1.Sort(newColumn, direction);\n        newColumn.HeaderCell.SortGlyphDirection =\n            direction == ListSortDirection.Ascending ?\n            SortOrder.Ascending : SortOrder.Descending;\n    }\n\n    private void dataGridView1_DataBindingComplete(object sender,\n        DataGridViewBindingCompleteEventArgs e)\n    {\n        // Put each of the columns into programmatic sort mode.\n        foreach (DataGridViewColumn column in dataGridView1.Columns)\n        {\n            column.SortMode = DataGridViewColumnSortMode.Programmatic;\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#160\">    Private Sub dataGridView1_ColumnHeaderMouseClick(ByVal sender As Object, _\n        ByVal e As DataGridViewCellMouseEventArgs) _\n        Handles dataGridView1.ColumnHeaderMouseClick\n\n        Dim newColumn As DataGridViewColumn = _\n            dataGridView1.Columns(e.ColumnIndex)\n        Dim oldColumn As DataGridViewColumn = dataGridView1.SortedColumn\n        Dim direction As ListSortDirection\n\n        &#39; If oldColumn is null, then the DataGridView is not currently sorted.\n        If oldColumn IsNot Nothing Then\n\n            &#39; Sort the same column again, reversing the SortOrder.\n            If oldColumn Is newColumn AndAlso dataGridView1.SortOrder = _\n                SortOrder.Ascending Then\n                direction = ListSortDirection.Descending\n            Else\n\n                &#39; Sort a new column and remove the old SortGlyph.\n                direction = ListSortDirection.Ascending\n                oldColumn.HeaderCell.SortGlyphDirection = SortOrder.None\n            End If\n        Else\n            direction = ListSortDirection.Ascending\n        End If\n\n        &#39; Sort the selected column.\n        dataGridView1.Sort(newColumn, direction)\n        If direction = ListSortDirection.Ascending Then\n            newColumn.HeaderCell.SortGlyphDirection = SortOrder.Ascending\n        Else\n            newColumn.HeaderCell.SortGlyphDirection = SortOrder.Descending\n        End If\n\n    End Sub\n\n    Private Sub dataGridView1_DataBindingComplete(ByVal sender As Object, _\n        ByVal e As DataGridViewBindingCompleteEventArgs) _\n        Handles dataGridView1.DataBindingComplete\n\n        &#39; Put each of the columns into programmatic sort mode.\n        For Each column As DataGridViewColumn In dataGridView1.Columns\n            column.SortMode = DataGridViewColumnSortMode.Programmatic\n        Next\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnHeaderMouseDoubleClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnHeaderMouseDoubleClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a column header is double-clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellMouseEventHandler ColumnHeaderMouseDoubleClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnHeaderMouseDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnHeaderMouseDoubleClick event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#322\">private void DataGridView1_ColumnHeaderMouseDoubleClick(Object sender, DataGridViewCellMouseEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnHeaderMouseDoubleClick Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#322\">Private Sub DataGridView1_ColumnHeaderMouseDoubleClick(sender as Object, e as DataGridViewCellMouseEventArgs) _ \n     Handles DataGridView1.ColumnHeaderMouseDoubleClick\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnHeaderMouseDoubleClick Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnHeadersBorderStyleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnHeadersBorderStyleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.ColumnHeadersBorderStyle*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ColumnHeadersBorderStyleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnHeadersBorderStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnHeadersBorderStyleChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#262\">private void DataGridView1_ColumnHeadersBorderStyleChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.ColumnHeadersBorderStyleChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#262\">Private Sub DataGridView1_ColumnHeadersBorderStyleChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.ColumnHeadersBorderStyleChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.ColumnHeadersBorderStyleChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnHeadersDefaultCellStyleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ColumnHeadersDefaultCellStyleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs when any properties of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> returned by the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">ColumnHeadersDefaultCellStyle</a> property is set to a new value or when the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ColumnHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">ColumnHeadersDefaultCellStyle</a> property is set to a new <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> with at least one property value different than the previous cell style object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnHeadersDefaultCellStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnHeadersDefaultCellStyleChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#263\">private void DataGridView1_ColumnHeadersDefaultCellStyleChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.ColumnHeadersDefaultCellStyleChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#263\">Private Sub DataGridView1_ColumnHeadersDefaultCellStyleChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.ColumnHeadersDefaultCellStyleChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.ColumnHeadersDefaultCellStyleChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnHeadersHeightChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnHeadersHeightChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.ColumnHeadersHeight*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ColumnHeadersHeightChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnHeadersHeightChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnHeadersHeightChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#264\">private void DataGridView1_ColumnHeadersHeightChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.ColumnHeadersHeightChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#264\">Private Sub DataGridView1_ColumnHeadersHeightChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.ColumnHeadersHeightChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.ColumnHeadersHeightChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnHeadersHeightSizeModeChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnHeadersHeightSizeModeChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler ColumnHeadersHeightSizeModeChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnHeadersHeightSizeModeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnHeadersHeightSizeModeChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#265\">private void DataGridView1_ColumnHeadersHeightSizeModeChanged(Object sender, DataGridViewAutoSizeModeEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;PreviousModeAutoSized&quot;, e.PreviousModeAutoSized );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnHeadersHeightSizeModeChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#265\">Private Sub DataGridView1_ColumnHeadersHeightSizeModeChanged(sender as Object, e as DataGridViewAutoSizeModeEventArgs) _ \n     Handles DataGridView1.ColumnHeadersHeightSizeModeChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;PreviousModeAutoSized&quot;, e.PreviousModeAutoSized)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnHeadersHeightSizeModeChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnMinimumWidthChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnMinimumWidthChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.MinimumWidth*</span> property for a column changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnMinimumWidthChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnMinimumWidthChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnMinimumWidthChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#324\">private void DataGridView1_ColumnMinimumWidthChanged(Object sender, DataGridViewColumnEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnMinimumWidthChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#324\">Private Sub DataGridView1_ColumnMinimumWidthChanged(sender as Object, e as DataGridViewColumnEventArgs) _ \n     Handles DataGridView1.ColumnMinimumWidthChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnMinimumWidthChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnNameChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnNameChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.Name*</span> property for a column changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnNameChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnNameChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnNameChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#325\">private void DataGridView1_ColumnNameChanged(Object sender, DataGridViewColumnEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnNameChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#325\">Private Sub DataGridView1_ColumnNameChanged(sender as Object, e as DataGridViewColumnEventArgs) _ \n     Handles DataGridView1.ColumnNameChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnNameChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnRemoved\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnRemoved</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a column is removed from the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnRemoved;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnRemoved event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnRemoved event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#326\">private void DataGridView1_ColumnRemoved(Object sender, DataGridViewColumnEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnRemoved Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#326\">Private Sub DataGridView1_ColumnRemoved(sender as Object, e as DataGridViewColumnEventArgs) _ \n     Handles DataGridView1.ColumnRemoved\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnRemoved Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnSortModeChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnSortModeChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.SortMode*</span> property for a column changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnSortModeChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnSortModeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnSortModeChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#327\">private void DataGridView1_ColumnSortModeChanged(Object sender, DataGridViewColumnEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnSortModeChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#327\">Private Sub DataGridView1_ColumnSortModeChanged(sender as Object, e as DataGridViewColumnEventArgs) _ \n     Handles DataGridView1.ColumnSortModeChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnSortModeChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnStateChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnStateChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a column changes state, such as gaining or losing focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewColumnStateChangedEventHandler ColumnStateChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised when the value of one of the following column properties changes for a <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn\" data-linktype=\"relative-path\">DataGridViewColumn</a> in the control:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Displayed_\" data-linktype=\"relative-path\">Displayed</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Frozen_\" data-linktype=\"relative-path\">Frozen</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_ReadOnly_\" data-linktype=\"relative-path\">ReadOnly</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Resizable_\" data-linktype=\"relative-path\">Resizable</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_Selected_\" data-linktype=\"relative-path\">Selected</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_Visible_\" data-linktype=\"relative-path\">Visible</a>  \n\n<p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnStateChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnStateChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#328\">private void DataGridView1_ColumnStateChanged(Object sender, DataGridViewColumnStateChangedEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;StateChanged&quot;, e.StateChanged );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnStateChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#328\">Private Sub DataGridView1_ColumnStateChanged(sender as Object, e as DataGridViewColumnStateChangedEventArgs) _ \n     Handles DataGridView1.ColumnStateChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;StateChanged&quot;, e.StateChanged)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnStateChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnToolTipTextChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnToolTipTextChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.ToolTipText*</span> property value changes for a column in the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnToolTipTextChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ColumnToolTipTextChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ColumnToolTipTextChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#329\">private void DataGridView1_ColumnToolTipTextChanged(Object sender, DataGridViewColumnEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;ColumnToolTipTextChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#329\">Private Sub DataGridView1_ColumnToolTipTextChanged(sender as Object, e as DataGridViewColumnEventArgs) _ \n     Handles DataGridView1.ColumnToolTipTextChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Column&quot;, e.Column)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;ColumnToolTipTextChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ColumnWidthChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ColumnWidthChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewColumn.Width*</span> property for a column changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewColumnEventHandler ColumnWidthChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this event. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRowPainting#18\">    &#39; Forces the control to repaint itself when the user \n    &#39; manually changes the width of a column.\n    Sub dataGridView1_ColumnWidthChanged(ByVal sender As Object, _\n        ByVal e As DataGridViewColumnEventArgs) _\n        Handles dataGridView1.ColumnWidthChanged\n\n        Me.dataGridView1.Invalidate()\n\n    End Sub &#39;dataGridView1_ColumnWidthChanged\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRowPainting#18\">    // Forces the control to repaint itself when the user \n    // manually changes the width of a column.\n    void dataGridView1_ColumnWidthChanged(object sender,\n        DataGridViewColumnEventArgs e)\n    {\n        this.dataGridView1.Invalidate();\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CurrentCellChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentCellChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.CurrentCell*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler CurrentCellChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this event. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRowPainting#19\">    &#39; Forces the row to repaint itself when the user changes the \n    &#39; current cell. This is necessary to refresh the focus rectangle.\n    Sub dataGridView1_CurrentCellChanged(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles dataGridView1.CurrentCellChanged\n\n        If oldRowIndex &lt;&gt; -1 Then\n            Me.dataGridView1.InvalidateRow(oldRowIndex)\n        End If\n        oldRowIndex = Me.dataGridView1.CurrentCellAddress.Y\n\n    End Sub &#39;dataGridView1_CurrentCellChanged\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRowPainting#19\">    // Forces the row to repaint itself when the user changes the \n    // current cell. This is necessary to refresh the focus rectangle.\n    void dataGridView1_CurrentCellChanged(object sender, EventArgs e)\n    {\n        if (oldRowIndex != -1)\n        {\n            this.dataGridView1.InvalidateRow(oldRowIndex);\n        }\n        oldRowIndex = this.dataGridView1.CurrentCellAddress.Y;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_CurrentCellDirtyStateChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CurrentCellDirtyStateChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the state of a cell changes in relation to a change in its contents.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler CurrentCellDirtyStateChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A cell is marked as modified if its contents have changed but the change has not been saved.  </p>\n<p> This event typically occurs when a cell has been edited but the change has not been committed to the data cache, or when an edit operation is canceled.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to handle the CurrentCellDirtyStateChanged event. In this example, the event handler calls the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CommitEdit_\" data-linktype=\"relative-path\">CommitEdit</a> method to raise the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueChanged\" data-linktype=\"relative-path\">CellValueChanged</a> event and determine the current value of a <a class=\"xref\" href=\"system.windows.forms.datagridviewcheckboxcell\" data-linktype=\"relative-path\">DataGridViewCheckBoxCell</a>. This code example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Disable%20Buttons%20in%20a%20Button%20Column%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Disable Buttons in a Button Column in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.DisabledButtons#5\">    &#39; This event handler manually raises the CellValueChanged event\n    &#39; by calling the CommitEdit method.\n    Sub dataGridView1_CurrentCellDirtyStateChanged( _\n        ByVal sender As Object, ByVal e As EventArgs) _\n        Handles dataGridView1.CurrentCellDirtyStateChanged\n\n        If dataGridView1.IsCurrentCellDirty Then\n            dataGridView1.CommitEdit(DataGridViewDataErrorContexts.Commit)\n        End If\n    End Sub\n\n    &#39; If a check box cell is clicked, this event handler disables  \n    &#39; or enables the button in the same row as the clicked cell.\n    Public Sub dataGridView1_CellValueChanged(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.CellValueChanged\n\n        If dataGridView1.Columns(e.ColumnIndex).Name = &quot;CheckBoxes&quot; Then\n            Dim buttonCell As DataGridViewDisableButtonCell = _\n                CType(dataGridView1.Rows(e.RowIndex).Cells(&quot;Buttons&quot;), _\n                DataGridViewDisableButtonCell)\n\n            Dim checkCell As DataGridViewCheckBoxCell = _\n                CType(dataGridView1.Rows(e.RowIndex).Cells(&quot;CheckBoxes&quot;), _\n                DataGridViewCheckBoxCell)\n            buttonCell.Enabled = Not CType(checkCell.Value, [Boolean])\n\n            dataGridView1.Invalidate()\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.DisabledButtons#5\">    // This event handler manually raises the CellValueChanged event\n    // by calling the CommitEdit method.\n    void dataGridView1_CurrentCellDirtyStateChanged(object sender,\n        EventArgs e)\n    {\n        if (dataGridView1.IsCurrentCellDirty)\n        {\n            dataGridView1.CommitEdit(DataGridViewDataErrorContexts.Commit);\n        }\n    }\n\n    // If a check box cell is clicked, this event handler disables  \n    // or enables the button in the same row as the clicked cell.\n    public void dataGridView1_CellValueChanged(object sender,\n        DataGridViewCellEventArgs e)\n    {\n        if (dataGridView1.Columns[e.ColumnIndex].Name == &quot;CheckBoxes&quot;)\n        {\n            DataGridViewDisableButtonCell buttonCell =\n                (DataGridViewDisableButtonCell)dataGridView1.\n                Rows[e.RowIndex].Cells[&quot;Buttons&quot;];\n\n            DataGridViewCheckBoxCell checkCell =\n                (DataGridViewCheckBoxCell)dataGridView1.\n                Rows[e.RowIndex].Cells[&quot;CheckBoxes&quot;];\n            buttonCell.Enabled = !(Boolean)checkCell.Value;\n\n            dataGridView1.Invalidate();\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_DataBindingComplete\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataBindingComplete</div>        \r\n          </div>\r\n    \r\n            <p>Occurs after a data-binding operation has finished.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewBindingCompleteEventHandler DataBindingComplete;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised when the contents of the data source change or when the value of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a>, <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataMember_\" data-linktype=\"relative-path\">DataMember</a>, or <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_BindingContext_\" data-linktype=\"relative-path\">BindingContext</a> property changes.  </p>\n<p> Handling this event is useful, for example, to programmatically resize rows and columns based on content updates. For more information, see <a href=\"../Topic/Sizing%20Options%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Sizing Options in the Windows Forms DataGridView Control</a>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this event. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcontextmenustripneededeventargs\" data-linktype=\"relative-path\">DataGridViewRowContextMenuStripNeededEventArgs</a> class overview.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView_NeededEvents#05\">    private void dataGridView1_DataBindingComplete(object sender,\n        DataGridViewBindingCompleteEventArgs e)\n    {\n        // Hide some of the columns.\n        dataGridView1.Columns[&quot;EmployeeID&quot;].Visible = false;\n        dataGridView1.Columns[&quot;Address&quot;].Visible = false;\n        dataGridView1.Columns[&quot;TitleOfCourtesy&quot;].Visible = false;\n        dataGridView1.Columns[&quot;BirthDate&quot;].Visible = false;\n        dataGridView1.Columns[&quot;HireDate&quot;].Visible = false;\n        dataGridView1.Columns[&quot;PostalCode&quot;].Visible = false;\n        dataGridView1.Columns[&quot;Photo&quot;].Visible = false;\n        dataGridView1.Columns[&quot;Notes&quot;].Visible = false;\n        dataGridView1.Columns[&quot;ReportsTo&quot;].Visible = false;\n        dataGridView1.Columns[&quot;PhotoPath&quot;].Visible = false;\n\n        // Disable sorting for the DataGridView.\n        foreach (DataGridViewColumn i in\n            dataGridView1.Columns)\n        {\n            i.SortMode = DataGridViewColumnSortMode.NotSortable;\n        }\n\n        dataGridView1.AutoResizeColumns();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView_NeededEvents#05\">    Private Sub dataGridView1_DataBindingComplete(ByVal sender As Object, _\n    ByVal e As DataGridViewBindingCompleteEventArgs) _\n    Handles dataGridView1.DataBindingComplete\n\n        &#39; Hide some of the columns.\n        With dataGridView1\n            .Columns(&quot;EmployeeID&quot;).Visible = False\n            .Columns(&quot;Address&quot;).Visible = False\n            .Columns(&quot;TitleOfCourtesy&quot;).Visible = False\n            .Columns(&quot;BirthDate&quot;).Visible = False\n            .Columns(&quot;HireDate&quot;).Visible = False\n            .Columns(&quot;PostalCode&quot;).Visible = False\n            .Columns(&quot;Photo&quot;).Visible = False\n            .Columns(&quot;Notes&quot;).Visible = False\n            .Columns(&quot;ReportsTo&quot;).Visible = False\n            .Columns(&quot;PhotoPath&quot;).Visible = False\n        End With\n\n        &#39; Disable sorting for the DataGridView.\n        Dim i As DataGridViewColumn\n        For Each i In dataGridView1.Columns\n            i.SortMode = DataGridViewColumnSortMode.NotSortable\n        Next i\n\n        dataGridView1.AutoResizeColumns()\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_DataError\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataError</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when an external data-parsing or validation operation throws an exception, or when an attempt to commit data to a data source fails.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewDataErrorEventHandler DataError;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The DataError event enables you to handle exceptions thrown in code that is called by the control during data processing operations.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.datagridviewcellcanceleventargs#System_Windows_Forms_DataGridViewCellCancelEventArgs_ColumnIndex_\" data-linktype=\"relative-path\">ColumnIndex</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewcellcanceleventargs#System_Windows_Forms_DataGridViewCellCancelEventArgs_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a> properties of the <a class=\"xref\" href=\"system.windows.forms.datagridviewdataerroreventargs\" data-linktype=\"relative-path\">DataGridViewDataErrorEventArgs</a> object associated with this event normally indicate the cell in which the data error occurred. When the error occurs in an external data source, however, the data source may not provide the column in which the error occurred. In this case, the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellcanceleventargs#System_Windows_Forms_DataGridViewCellCancelEventArgs_ColumnIndex_\" data-linktype=\"relative-path\">ColumnIndex</a> property typically indicates the column of the current cell at the time of the error.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates a DataError event handler. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxcolumn\" data-linktype=\"relative-path\">DataGridViewComboBoxColumn</a> class overview topic.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50\">private:\n    void DataGridView1_DataError(Object^ sender, DataGridViewDataErrorEventArgs^ anError)\n    {\n\n        MessageBox::Show(&quot;Error happened &quot; + anError-&gt;Context.ToString());\n\n        if (anError-&gt;Context == DataGridViewDataErrorContexts::Commit)\n        {\n            MessageBox::Show(&quot;Commit error&quot;);\n        }\n        if (anError-&gt;Context == DataGridViewDataErrorContexts::CurrentCellChange)\n        {\n            MessageBox::Show(&quot;Cell change&quot;);\n        }\n        if (anError-&gt;Context == DataGridViewDataErrorContexts::Parsing)\n        {\n            MessageBox::Show(&quot;parsing error&quot;);\n        }\n        if (anError-&gt;Context == DataGridViewDataErrorContexts::LeaveControl)\n        {\n            MessageBox::Show(&quot;leave control error&quot;);\n        }\n\n        if (dynamic_cast&lt;ConstraintException^&gt;(anError-&gt;Exception) != nullptr)\n        {\n            DataGridView^ view = (DataGridView^)sender;\n            view-&gt;Rows[anError-&gt;RowIndex]-&gt;ErrorText = &quot;an error&quot;;\n            view-&gt;Rows[anError-&gt;RowIndex]-&gt;Cells[anError-&gt;ColumnIndex]-&gt;ErrorText = &quot;an error&quot;;\n\n            anError-&gt;ThrowException = false;\n        }\n    }\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50\">    private void DataGridView1_DataError(object sender, DataGridViewDataErrorEventArgs anError)\n    {\n\n        MessageBox.Show(&quot;Error happened &quot; + anError.Context.ToString());\n\n        if (anError.Context == DataGridViewDataErrorContexts.Commit)\n        {\n            MessageBox.Show(&quot;Commit error&quot;);\n        }\n        if (anError.Context == DataGridViewDataErrorContexts.CurrentCellChange)\n        {\n            MessageBox.Show(&quot;Cell change&quot;);\n        }\n        if (anError.Context == DataGridViewDataErrorContexts.Parsing)\n        {\n            MessageBox.Show(&quot;parsing error&quot;);\n        }\n        if (anError.Context == DataGridViewDataErrorContexts.LeaveControl)\n        {\n            MessageBox.Show(&quot;leave control error&quot;);\n        }\n\n        if ((anError.Exception) is ConstraintException)\n        {\n            DataGridView view = (DataGridView)sender;\n            view.Rows[anError.RowIndex].ErrorText = &quot;an error&quot;;\n            view.Rows[anError.RowIndex].Cells[anError.ColumnIndex].ErrorText = &quot;an error&quot;;\n\n            anError.ThrowException = false;\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50\">    Private Sub DataGridView1_DataError(ByVal sender As Object, _\n    ByVal e As DataGridViewDataErrorEventArgs) _\n    Handles DataGridView1.DataError\n\n        MessageBox.Show(&quot;Error happened &quot; _\n            &amp; e.Context.ToString())\n\n        If (e.Context = DataGridViewDataErrorContexts.Commit) _\n            Then\n            MessageBox.Show(&quot;Commit error&quot;)\n        End If\n        If (e.Context = DataGridViewDataErrorContexts _\n            .CurrentCellChange) Then\n            MessageBox.Show(&quot;Cell change&quot;)\n        End If\n        If (e.Context = DataGridViewDataErrorContexts.Parsing) _\n            Then\n            MessageBox.Show(&quot;parsing error&quot;)\n        End If\n        If (e.Context = _\n            DataGridViewDataErrorContexts.LeaveControl) Then\n            MessageBox.Show(&quot;leave control error&quot;)\n        End If\n\n        If (TypeOf (e.Exception) Is ConstraintException) Then\n            Dim view As DataGridView = CType(sender, DataGridView)\n            view.Rows(e.RowIndex).ErrorText = &quot;an error&quot;\n            view.Rows(e.RowIndex).Cells(e.ColumnIndex) _\n                .ErrorText = &quot;an error&quot;\n\n            e.ThrowException = False\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_DataMemberChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataMemberChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.DataMember*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler DataMemberChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DataMemberChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the DataMemberChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#266\">private void DataGridView1_DataMemberChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.DataMemberChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#266\">Private Sub DataGridView1_DataMemberChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.DataMemberChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.DataMemberChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_DataSourceChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DataSourceChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.DataSource*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler DataSourceChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DataSourceChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the DataSourceChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#267\">private void DataGridView1_DataSourceChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.DataSourceChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#267\">Private Sub DataGridView1_DataSourceChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.DataSourceChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.DataSourceChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_DefaultCellStyleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultCellStyleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.DefaultCellStyle*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler DefaultCellStyleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs when any properties of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> returned by the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property are set to new values or when the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property is set to a new <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> with at least one property value different than the previous cell style object.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the DefaultCellStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the DefaultCellStyleChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#268\">private void DataGridView1_DefaultCellStyleChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.DefaultCellStyleChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#268\">Private Sub DataGridView1_DefaultCellStyleChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.DefaultCellStyleChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.DefaultCellStyleChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_DefaultValuesNeeded\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultValuesNeeded</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user enters the row for new records so that it can be populated with default values.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowEventHandler DefaultValuesNeeded;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event lets you populate the row for new records when the user enters the row. Initial values for the row come from the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell#System_Windows_Forms_DataGridViewCell_DefaultNewRowValue_\" data-linktype=\"relative-path\">DefaultNewRowValue</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcell\" data-linktype=\"relative-path\">DataGridViewCell</a> returned by each column&#39;s <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_CellTemplate_\" data-linktype=\"relative-path\">CellTemplate</a> property.  </p>\n<p> In data bound mode, all cell values for data bound columns are stored in the external data source. When the user enters the row for new records, a new row is created in the data source before the DefaultValuesNeeded event occurs. When you populate the <a class=\"xref\" href=\"system.windows.forms.datagridviewroweventargs#System_Windows_Forms_DataGridViewRowEventArgs_Row_\" data-linktype=\"relative-path\">Row</a> property in your event handler, the values are added directly to the data source.  </p>\n<p> In virtual mode, after this event occurs, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValuePushed\" data-linktype=\"relative-path\">CellValuePushed</a> event occurs for each cell in the new row so that you can store the default values in your custom data store. Then, the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueNeeded\" data-linktype=\"relative-path\">CellValueNeeded</a> event occurs for each cell in the new row, retrieving the values that you stored in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValuePushed\" data-linktype=\"relative-path\">CellValuePushed</a> event, which are then displayed.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how this event can be handled. In the example, cells for the given columns are populated with default values. For the <code>CustomerID</code> column, the value is retrieved from a separate method (not implemented) that generates a unique customer ID.  </p>\n<p> To run this example, replace the column names with the names of the column objects from an actual <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control and provide appropriate default values. When specifying columns by name, you must use the name of the column object and not the column header text.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#120\">    private void dataGridView1_DefaultValuesNeeded(object sender,\n        System.Windows.Forms.DataGridViewRowEventArgs e)\n    {\n        e.Row.Cells[&quot;Region&quot;].Value = &quot;WA&quot;;\n        e.Row.Cells[&quot;City&quot;].Value = &quot;Redmond&quot;;\n        e.Row.Cells[&quot;PostalCode&quot;].Value = &quot;98052-6399&quot;;\n        e.Row.Cells[&quot;Country&quot;].Value = &quot;USA&quot;;\n        e.Row.Cells[&quot;CustomerID&quot;].Value = NewCustomerId();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#120\">    Private Sub dataGridView1_DefaultValuesNeeded(ByVal sender As Object, _\n        ByVal e As System.Windows.Forms.DataGridViewRowEventArgs) _\n        Handles dataGridView1.DefaultValuesNeeded\n\n        With e.Row\n            .Cells(&quot;Region&quot;).Value = &quot;WA&quot;\n            .Cells(&quot;City&quot;).Value = &quot;Redmond&quot;\n            .Cells(&quot;PostalCode&quot;).Value = &quot;98052-6399&quot;\n            .Cells(&quot;Country&quot;).Value = &quot;USA&quot;\n            .Cells(&quot;CustomerID&quot;).Value = NewCustomerId()\n        End With\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_EditingControlShowing\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EditingControlShowing</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a control for editing a cell is showing.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewEditingControlShowingEventHandler EditingControlShowing;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can handle this event to perform custom initialization of the editing control when a cell enters edit mode. To customize the display characteristics of the control, set the properties of the object returned by the <a class=\"xref\" href=\"system.windows.forms.datagridvieweditingcontrolshowingeventargs#System_Windows_Forms_DataGridViewEditingControlShowingEventArgs_CellStyle_\" data-linktype=\"relative-path\">CellStyle</a> property. To perform other initialization, cast the value of the <a class=\"xref\" href=\"system.windows.forms.datagridvieweditingcontrolshowingeventargs#System_Windows_Forms_DataGridViewEditingControlShowingEventArgs_Control_\" data-linktype=\"relative-path\">Control</a> property to the specific control type and access the members directly. For example, you can handle the EditingControlShowing event to attach event-handlers to the events of the editing control.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control hosts one editing control at a time, and reuses the editing control whenever the cell type does not change between edits. When attaching event-handlers to the editing control, you must therefore take precautions to avoid attaching the same handler multiple times. To avoid this problem, remove the handler from the event before you attach the handler to the event. This will prevent duplication if the handler is already attached to the event, but will have no effect otherwise. For more information, see the example code in the <a class=\"xref\" href=\"system.windows.forms.datagridviewcomboboxeditingcontrol\" data-linktype=\"relative-path\">DataGridViewComboBoxEditingControl</a> class overview.  </p>\n</div>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to handle this event to change the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_BackColor_\" data-linktype=\"relative-path\">BackColor</a> property of the current cell. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code> and ensure that the EditingControlShowing event is associated with the event handler.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#210\">    private void dataGridView1_EditingControlShowing(object sender, \n        DataGridViewEditingControlShowingEventArgs e)\n    {\n        e.CellStyle.BackColor = Color.Aquamarine;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#210\">    Private Sub dataGridView1_EditingControlShowing(ByVal sender As Object, _\n        ByVal e As DataGridViewEditingControlShowingEventArgs) _\n        Handles dataGridView1.EditingControlShowing\n\n        e.CellStyle.BackColor = Color.Aquamarine\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_EditModeChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EditModeChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.EditMode*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler EditModeChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the EditModeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type<a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the EditModeChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#269\">private void DataGridView1_EditModeChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.EditModeChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#269\">Private Sub DataGridView1_EditModeChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.EditModeChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.EditModeChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_FontChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FontChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.Font*</span> property value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler FontChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the FontChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the FontChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#271\">private void DataGridView1_FontChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.FontChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#271\">Private Sub DataGridView1_FontChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.FontChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.FontChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ForeColorChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ForeColorChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.ForeColor*</span> property value changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ForeColorChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ForeColorChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ForeColorChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#270\">private void DataGridView1_ForeColorChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.ForeColorChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#270\">Private Sub DataGridView1_ForeColorChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.ForeColorChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.ForeColorChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_GridColorChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GridColorChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.GridColor*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler GridColorChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the GridColorChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a>or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the GridColorChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#272\">private void DataGridView1_GridColorChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.GridColorChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#272\">Private Sub DataGridView1_GridColorChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.GridColorChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.GridColorChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_MultiSelectChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MultiSelectChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.MultiSelect*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler MultiSelectChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MultiSelectChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the MultiSelectChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#273\">private void DataGridView1_MultiSelectChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.MultiSelectChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#273\">Private Sub DataGridView1_MultiSelectChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.MultiSelectChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.MultiSelectChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_NewRowNeeded\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">NewRowNeeded</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.VirtualMode*</span> property of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is <code>true</code> and the user navigates to the new row at the bottom of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowEventHandler NewRowNeeded;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is in virtual mode, this event allows a new entry to be created in the data store for the new row, and it also allows for the row to be populated with default values.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the NewRowNeeded event to track when a new row is being added, so logic in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueNeeded\" data-linktype=\"relative-path\">CellValueNeeded</a> event handler can initialize a new row&#39;s cell to an initial value. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView._Virtual#20\">    bool newRowNeeded;\n    private void dataGridView1_NewRowNeeded(object sender,\n        DataGridViewRowEventArgs e)\n    {\n        newRowNeeded = true;\n    }\n\n    const int initialSize = 5000000;\n    int numberOfRows = initialSize;\n\n    private void dataGridView1_RowsAdded(object sender,\n         DataGridViewRowsAddedEventArgs e)\n    {\n        if (newRowNeeded)\n        {\n            newRowNeeded = false;\n            numberOfRows = numberOfRows + 1;\n        }\n    }\n\n    #region &quot;data store maintance&quot;\n    const int initialValue = -1;\n\n    private void dataGridView1_CellValueNeeded(object sender,\n        DataGridViewCellValueEventArgs e)\n    {\n        if (store.ContainsKey(e.RowIndex))\n        {\n            // Use the store if the e value has been modified \n            // and stored.            \n            e.Value = store[e.RowIndex];\n        }\n        else if (newRowNeeded &amp;&amp; e.RowIndex == numberOfRows)\n        {\n            if (dataGridView1.IsCurrentCellInEditMode)\n            {\n                e.Value = initialValue;\n            }\n            else\n            {\n                // Show a blank value if the cursor is just resting\n                // on the last row.\n                e.Value = String.Empty;\n            }\n        }\n        else\n        {\n            e.Value = e.RowIndex;\n        }\n    }\n\n    private void dataGridView1_CellValuePushed(object sender,\n        DataGridViewCellValueEventArgs e)\n    {\n        store.Add(e.RowIndex, int.Parse(e.Value.ToString()));\n    }\n    #endregion\n\n    private Dictionary&lt;int, int&gt; store = new Dictionary&lt;int, int&gt;();\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView._Virtual#20\">    void VirtualConnector::dataGridView1_NewRowNeeded\n        (Object^ sender, DataGridViewRowEventArgs^ e)\n    {\n        newRowNeeded = true;\n    }\n\n    void VirtualConnector::dataGridView1_RowsAdded\n        (Object^ sender, DataGridViewRowsAddedEventArgs^ e)\n    {\n        if (newRowNeeded)\n        {\n            newRowNeeded = false;\n            numberOfRows = numberOfRows + 1;\n        }\n    }\n\n#pragma region Data store maintance\n\n    void VirtualConnector::dataGridView1_CellValueNeeded\n        (Object^ sender, DataGridViewCellValueEventArgs^ e)\n    {\n        if (store-&gt;ContainsKey(e-&gt;RowIndex))\n        {\n            // Use the store if the e value has been modified \n            // and stored.            \n            e-&gt;Value = gcnew Int32(store-&gt;default[e-&gt;RowIndex]); \n        }\n        else if (newRowNeeded &amp;&amp; e-&gt;RowIndex == numberOfRows)\n        {\n            if (dataGridView1-&gt;IsCurrentCellInEditMode)\n            {\n                e-&gt;Value = initialValue;\n            }\n            else\n            {\n                // Show a blank e if the cursor is just loitering\n                // over(the) last row.\n                e-&gt;Value = String::Empty;\n            }\n        }\n        else\n        {\n            e-&gt;Value = e-&gt;RowIndex;\n        }\n    }\n\n    void VirtualConnector::dataGridView1_CellValuePushed\n        (Object^ sender, DataGridViewCellValueEventArgs^ e)\n    {\n        String^ value = e-&gt;Value-&gt;ToString();\n        store[e-&gt;RowIndex] = Int32::Parse(value, \n            CultureInfo::CurrentCulture);\n    }\n#pragma endregion\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView._Virtual#20\">    Dim newRowNeeded As Boolean\n\n    Private Sub dataGridView1_NewRowNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewRowEventArgs) _\n        Handles dataGridView1.NewRowNeeded\n\n        newRowNeeded = True\n    End Sub\n\n    Const initialSize As Integer = 5000000\n    Dim numberOfRows As Integer = initialSize\n\n    Private Sub dataGridView1_RowsAdded(ByVal sender As Object, _\n        ByVal e As DataGridViewRowsAddedEventArgs) _\n        Handles dataGridView1.RowsAdded\n\n        If newRowNeeded Then\n            newRowNeeded = False\n            numberOfRows = numberOfRows + 1\n        End If\n    End Sub\n\n#Region &quot;data store maintance&quot;\n    Const initialValue As Integer = -1\n\n    Private Sub dataGridView1_CellValueNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValueNeeded\n\n        If store.ContainsKey(e.RowIndex) Then\n            &#39; Use the store if the e value has been modified \n            &#39; and stored.\n            e.Value = store(e.RowIndex)\n        ElseIf newRowNeeded AndAlso e.RowIndex = numberOfRows Then\n            If dataGridView1.IsCurrentCellInEditMode Then\n                e.Value = initialValue\n            Else\n                &#39; Show a blank value if the cursor is just resting\n                &#39; on the last row.\n                e.Value = String.Empty\n            End If\n        Else\n            e.Value = e.RowIndex\n        End If\n    End Sub\n\n    Private Sub dataGridView1_CellValuePushed(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValuePushed\n\n        store.Add(e.RowIndex, CInt(e.Value))\n\n    End Sub\n#End Region\n\n    Dim store As System.Collections.Generic.Dictionary(Of Integer, Integer) = _\n        New Dictionary(Of Integer, Integer)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_PaddingChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PaddingChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.Padding*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler PaddingChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Padding_\" data-linktype=\"relative-path\">Padding</a> property is not relevant for this control, although you can change its value and respond to such changes by handling this event.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_ReadOnlyChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ReadOnlyChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.ReadOnly*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler ReadOnlyChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ReadOnlyChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type<a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the ReadOnlyChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#274\">private void DataGridView1_ReadOnlyChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.ReadOnlyChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#274\">Private Sub DataGridView1_ReadOnlyChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.ReadOnlyChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.ReadOnlyChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowContextMenuStripChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowContextMenuStripChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.ContextMenuStrip*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowEventHandler RowContextMenuStripChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of theRowContextMenuStripChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowContextMenuStripChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#338\">private void DataGridView1_RowContextMenuStripChanged(Object sender, DataGridViewRowEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowContextMenuStripChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#338\">Private Sub DataGridView1_RowContextMenuStripChanged(sender as Object, e as DataGridViewRowEventArgs) _ \n     Handles DataGridView1.RowContextMenuStripChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowContextMenuStripChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowContextMenuStripNeeded\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowContextMenuStripNeeded</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row&#39;s shortcut menu is needed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventHandler RowContextMenuStripNeeded;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RowContextMenuStripNeeded event occurs only when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property is set or its <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property is <code>true</code>. Handling the RowContextMenuStripNeeded event is useful when you want to display a shortcut menu determined by a row&#39;s current state or the values it contains.  </p>\n<p> When you handle the RowContextMenuStripNeeded event, the shortcut menu that you specify in the handler is shown whenever the user right-clicks a row unless the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellContextMenuStripNeeded\" data-linktype=\"relative-path\">CellContextMenuStripNeeded</a> overrides the shortcut menu for the specific cell that was clicked.  </p>\n<p> The RowContextMenuStripNeeded event also occurs whenever the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> property is retrieved, either programmatically or when the user right-clicks a row.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcontextmenustripneededeventargs#System_Windows_Forms_DataGridViewRowContextMenuStripNeededEventArgs_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a> property to determine the state of a row or the values it contains, and use this information to change or modify the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowcontextmenustripneededeventargs#System_Windows_Forms_DataGridViewRowContextMenuStripNeededEventArgs_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> property. This property is initialized with the value of the row <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> property, which the event value overrides.  </p>\n<p> Handle the RowContextMenuStripNeeded event when working with large amounts of data to avoid the performance penalties of setting the row <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ContextMenuStrip_\" data-linktype=\"relative-path\">ContextMenuStrip</a> value for multiple rows. For more information, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example handles the RowContextMenuStripNeeded event to provide a <a class=\"xref\" href=\"system.windows.forms.contextmenustrip\" data-linktype=\"relative-path\">ContextMenuStrip</a> based on the title of the employee. In this example, there are two shortcut menus, one for managers and one for all other employees.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView_NeededEvents#10\">    void dataGridView1_RowContextMenuStripNeeded(object sender,\n        DataGridViewRowContextMenuStripNeededEventArgs e)\n    {\n        DataGridViewRow dataGridViewRow1 = dataGridView1.Rows[e.RowIndex];\n\n        toolStripMenuItem1.Enabled = true;\n\n        // Show the appropriate ContextMenuStrip based on the employees title.\n        if ((dataGridViewRow1.Cells[&quot;Title&quot;].Value.ToString() ==\n            &quot;Sales Manager&quot;) ||\n            (dataGridViewRow1.Cells[&quot;Title&quot;].Value.ToString() ==\n            &quot;Vice President, Sales&quot;))\n        {\n            e.ContextMenuStrip = managerMenuStrip;\n        }\n        else\n        {\n            e.ContextMenuStrip = employeeMenuStrip;\n        }\n\n        contextMenuRowIndex = e.RowIndex;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView_NeededEvents#10\">    Public Sub dataGridView1_RowContextMenuStripNeeded( _\n        ByVal sender As Object, _\n        ByVal e As DataGridViewRowContextMenuStripNeededEventArgs) _\n        Handles dataGridView1.RowContextMenuStripNeeded\n\n        Dim dataGridViewRow1 As DataGridViewRow = _\n        dataGridView1.Rows(e.RowIndex)\n\n        toolStripMenuItem1.Enabled = True\n\n        &#39; Show the appropriate ContextMenuStrip based on the employees title.\n        If dataGridViewRow1.Cells(&quot;Title&quot;).Value.ToString() = _\n            &quot;Sales Manager&quot; OrElse _\n            dataGridViewRow1.Cells(&quot;Title&quot;).Value.ToString() = _\n            &quot;Vice President, Sales&quot; Then\n\n            e.ContextMenuStrip = managerMenuStrip\n        Else\n            e.ContextMenuStrip = employeeMenuStrip\n        End If\n\n        contextMenuRowIndex = e.RowIndex\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowDefaultCellStyleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowDefaultCellStyleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewBand.DefaultCellStyle*</span> property for a row changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowEventHandler RowDefaultCellStyleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs when any property of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> returned by the <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property for a row is set to a new value or when the <a class=\"xref\" href=\"system.windows.forms.datagridviewband#System_Windows_Forms_DataGridViewBand_DefaultCellStyle_\" data-linktype=\"relative-path\">DefaultCellStyle</a> property for a row is set to a new <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> with at least one property value different than the previous cell style object.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowDefaultCellStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowDefaultCellStyleChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#340\">private void DataGridView1_RowDefaultCellStyleChanged(Object sender, DataGridViewRowEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowDefaultCellStyleChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#340\">Private Sub DataGridView1_RowDefaultCellStyleChanged(sender as Object, e as DataGridViewRowEventArgs) _ \n     Handles DataGridView1.RowDefaultCellStyleChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowDefaultCellStyleChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowDirtyStateNeeded\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowDirtyStateNeeded</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.VirtualMode*</span> property of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control is <code>true</code> and the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> needs to determine whether the current row has uncommitted changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.QuestionEventHandler RowDirtyStateNeeded;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, this event sets the <a class=\"xref\" href=\"system.windows.forms.questioneventargs#System_Windows_Forms_QuestionEventArgs_Response_\" data-linktype=\"relative-path\">Response</a> property to <code>true</code> if any cells in the current row have been modified. This causes the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CancelRowEdit\" data-linktype=\"relative-path\">CancelRowEdit</a> event to occur when the user reverts edits to a row. Users can revert edits to a row by pressing ESC twice when a cell is in edit mode or once outside of edit mode. This event can be used for customizing commit scope in virtual mode by setting the <a class=\"xref\" href=\"system.windows.forms.questioneventargs#System_Windows_Forms_QuestionEventArgs_Response_\" data-linktype=\"relative-path\">Response</a> property to the correct value depending on the chosen commit scope.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to handle this event to provide cell-level commit scope, meaning that the user can revert changes to the current cell only. In cell-level commit scope, the row is treated as having uncommitted changes only when the current cell has uncommitted changes, rather than when any cell in the row has uncommitted changes. This example is part of a larger example available in <a href=\"../Topic/Walkthrough:%20Implementing%20Virtual%20Mode%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Walkthrough: Implementing Virtual Mode in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView.VirtualMode#160\">   void dataGridView1_RowDirtyStateNeeded( Object^ /*sender*/,\n       System::Windows::Forms::QuestionEventArgs^ e )\n   {\n      if (  !rowScopeCommit )\n      {\n         \n         // In cell-level commit scope, indicate whether the value\n         // of the current cell has been modified.\n         e-&gt;Response = this-&gt;dataGridView1-&gt;IsCurrentCellDirty;\n      }\n   }\n\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.VirtualMode#160\">    Private Sub dataGridView1_RowDirtyStateNeeded(ByVal sender As Object, _\n        ByVal e As System.Windows.Forms.QuestionEventArgs) _\n        Handles dataGridView1.RowDirtyStateNeeded\n\n        If Not rowScopeCommit Then\n\n            &#39; In cell-level commit scope, indicate whether the value\n            &#39; of the current cell has been modified.\n            e.Response = Me.dataGridView1.IsCurrentCellDirty\n\n        End If\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.VirtualMode#160\">    private void dataGridView1_RowDirtyStateNeeded(object sender,\n        System.Windows.Forms.QuestionEventArgs e)\n    {\n        if (!rowScopeCommit)\n        {\n            // In cell-level commit scope, indicate whether the value\n            // of the current cell has been modified.\n            e.Response = this.dataGridView1.IsCurrentCellDirty;\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowDividerDoubleClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowDividerDoubleClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user double-clicks the divider between two rows.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowDividerDoubleClickEventHandler RowDividerDoubleClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this event to customize the automatic sizing behavior that occurs when a user double-clicks a row divider.  </p>\n<p> The row <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_DividerWidth_\" data-linktype=\"relative-path\">DividerWidth</a> property does not extend the area in which a user can double-click. If the height of a divider has been increased through the use of this property, this event occurs when the user double-clicks the boundary between the divider and the adjacent column.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowDividerDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowDividerDoubleClick event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#342\">private void DataGridView1_RowDividerDoubleClick(Object sender, DataGridViewRowDividerDoubleClickEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowDividerDoubleClick Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#342\">Private Sub DataGridView1_RowDividerDoubleClick(sender as Object, e as DataGridViewRowDividerDoubleClickEventArgs) _ \n     Handles DataGridView1.RowDividerDoubleClick\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowDividerDoubleClick Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowDividerHeightChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowDividerHeightChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.DividerHeight*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowEventHandler RowDividerHeightChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The divider height is modified by setting the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_DividerHeight_\" data-linktype=\"relative-path\">DividerHeight</a> property.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowDividerHeightChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowDividerHeightChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#343\">private void DataGridView1_RowDividerHeightChanged(Object sender, DataGridViewRowEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowDividerHeightChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#343\">Private Sub DataGridView1_RowDividerHeightChanged(sender as Object, e as DataGridViewRowEventArgs) _ \n     Handles DataGridView1.RowDividerHeightChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowDividerHeightChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowEnter\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowEnter</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row receives input focus but before it becomes the current row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler RowEnter;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> is initially loaded, as well as when the user selects a row other than the current row.  </p>\n<p> This event occurs before the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentRow_\" data-linktype=\"relative-path\">CurrentRow</a> property is updated. To retrieve the index of the newly-entered row, use the <a class=\"xref\" href=\"system.windows.forms.datagridviewcelleventargs#System_Windows_Forms_DataGridViewCellEventArgs_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a> property within the event handler.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to handle this event to change the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_BackColor_\" data-linktype=\"relative-path\">BackColor</a> property of the cells in the current row. In this example, the background color is set in the RowEnter event, then reset to <a class=\"xref\" href=\"system.drawing.color#System_Drawing_Color_Empty\" data-linktype=\"relative-path\">Empty</a> on the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowLeave\" data-linktype=\"relative-path\">RowLeave</a> event. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code>, and ensure that all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#200\">    private void dataGridView1_RowEnter(object sender, \n        DataGridViewCellEventArgs e)\n    {\n        for (int i = 0; i &lt; dataGridView1.Rows[e.RowIndex].Cells.Count; i++)\n        {\n            dataGridView1[i, e.RowIndex].Style.BackColor = Color.Yellow;\n        }\n    }\n\n    private void dataGridView1_RowLeave(object sender, \n        DataGridViewCellEventArgs e)\n    {\n        for (int i = 0; i &lt; dataGridView1.Rows[e.RowIndex].Cells.Count; i++)\n        {\n            dataGridView1[i, e.RowIndex].Style.BackColor = Color.Empty;\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#200\">    Private Sub dataGridView1_RowEnter(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.RowEnter\n\n        Dim i As Integer\n        For i = 0 To dataGridView1.Rows(e.RowIndex).Cells.Count - 1\n            dataGridView1(i, e.RowIndex).Style _\n                .BackColor = Color.Yellow\n        Next i\n\n    End Sub\n\n    Private Sub dataGridView1_RowLeave(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.RowLeave\n\n        Dim i As Integer\n        For i = 0 To dataGridView1.Rows(e.RowIndex).Cells.Count - 1\n            dataGridView1(i, e.RowIndex).Style _\n                .BackColor = Color.Empty\n        Next i\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowErrorTextChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowErrorTextChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.ErrorText*</span> property of a row changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowEventHandler RowErrorTextChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowErrorTextChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowErrorTextChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#345\">private void DataGridView1_RowErrorTextChanged(Object sender, DataGridViewRowEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowErrorTextChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#345\">Private Sub DataGridView1_RowErrorTextChanged(sender as Object, e as DataGridViewRowEventArgs) _ \n     Handles DataGridView1.RowErrorTextChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowErrorTextChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowErrorTextNeeded\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowErrorTextNeeded</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row&#39;s error text is needed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowErrorTextNeededEventHandler RowErrorTextNeeded;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The RowErrorTextNeeded event occurs only when the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property of the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control is set or its <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property is <code>true</code>. Handling the RowErrorTextNeeded event is useful when you want to determine the error for a row depending on its state and the values it contains.  </p>\n<p> When you handle the RowErrorTextNeeded event and specify error text in the handler, an error glyph appears in the row header unless the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_ShowRowErrors_\" data-linktype=\"relative-path\">ShowRowErrors</a> property is set to <code>false</code>. When the user moves the mouse pointer over the error glyph, the error text appears in a ToolTip.  </p>\n<p> The RowErrorTextNeeded event also occurs whenever the value of the <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property is retrieved.  </p>\n<p> You can use the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowerrortextneededeventargs#System_Windows_Forms_DataGridViewRowErrorTextNeededEventArgs_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a> property to determine the state of a row or the values it contains, and use this information to change or modify the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowerrortextneededeventargs#System_Windows_Forms_DataGridViewRowErrorTextNeededEventArgs_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property. This property is initialized with the value of the row <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> property, which the event value overrides.  </p>\n<p> Handle the RowErrorTextNeeded event when working with large amounts of data to avoid the performance penalties of setting the row <a class=\"xref\" href=\"system.windows.forms.datagridviewrow#System_Windows_Forms_DataGridViewRow_ErrorText_\" data-linktype=\"relative-path\">ErrorText</a> value for multiple rows. For more information, see <a href=\"../Topic/Best%20Practices%20for%20Scaling%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">Best Practices for Scaling the Windows Forms DataGridView Control</a>.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowErrorTextNeeded event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowErrorTextNeeded event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#346\">private void DataGridView1_RowErrorTextNeeded(Object sender, DataGridViewRowErrorTextNeededEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowErrorTextNeeded Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#346\">Private Sub DataGridView1_RowErrorTextNeeded(sender as Object, e as DataGridViewRowErrorTextNeededEventArgs) _ \n     Handles DataGridView1.RowErrorTextNeeded\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ErrorText&quot;, e.ErrorText)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowErrorTextNeeded Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowHeaderCellChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeaderCellChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user changes the contents of a row header cell.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowEventHandler RowHeaderCellChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowHeaderCellChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowHeaderCellChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#349\">private void DataGridView1_RowHeaderCellChanged(Object sender, DataGridViewRowEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowHeaderCellChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#349\">Private Sub DataGridView1_RowHeaderCellChanged(sender as Object, e as DataGridViewRowEventArgs) _ \n     Handles DataGridView1.RowHeaderCellChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowHeaderCellChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowHeaderMouseClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeaderMouseClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user clicks within the boundaries of a row header.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewSelectedCollections#05\">    void dataGridView1_ColumnHeaderMouseClick(\n        object sender, DataGridViewCellMouseEventArgs e)\n    {\n        this.dataGridView1.SelectionMode =\n            DataGridViewSelectionMode.ColumnHeaderSelect;\n        this.dataGridView1.Columns[e.ColumnIndex].HeaderCell\n            .SortGlyphDirection = SortOrder.None;\n        this.dataGridView1.Columns[e.ColumnIndex].Selected = true;\n    }\n\n    void dataGridView1_RowHeaderMouseClick(\n        object sender, DataGridViewCellMouseEventArgs e)\n    {\n        this.dataGridView1.SelectionMode =\n            DataGridViewSelectionMode.RowHeaderSelect;\n        this.dataGridView1.Rows[e.RowIndex].Selected = true;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewSelectedCollections#05\">    Private Sub dataGridView1_ColumnHeaderMouseClick( _\n        ByVal sender As Object, ByVal e As DataGridViewCellMouseEventArgs) _\n        Handles dataGridView1.ColumnHeaderMouseClick\n\n        Me.dataGridView1.SelectionMode = _\n            DataGridViewSelectionMode.ColumnHeaderSelect\n        Me.dataGridView1.Columns(e.ColumnIndex).HeaderCell _\n            .SortGlyphDirection = SortOrder.None\n        Me.dataGridView1.Columns(e.ColumnIndex).Selected = True\n\n    End Sub\n\n    Private Sub dataGridView1_RowHeaderMouseClick( _\n        ByVal sender As Object, ByVal e As DataGridViewCellMouseEventArgs) _\n        Handles dataGridView1.RowHeaderMouseClick\n\n        Me.dataGridView1.SelectionMode = _\n            DataGridViewSelectionMode.RowHeaderSelect\n        Me.dataGridView1.Rows(e.RowIndex).Selected = True\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowHeaderMouseDoubleClick\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeaderMouseDoubleClick</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row header is double-clicked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellMouseEventHandler RowHeaderMouseDoubleClick;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowHeaderMouseDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowHeaderMouseDoubleClick event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#348\">private void DataGridView1_RowHeaderMouseDoubleClick(Object sender, DataGridViewCellMouseEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowHeaderMouseDoubleClick Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#348\">Private Sub DataGridView1_RowHeaderMouseDoubleClick(sender as Object, e as DataGridViewCellMouseEventArgs) _ \n     Handles DataGridView1.RowHeaderMouseDoubleClick\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ColumnIndex&quot;, e.ColumnIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Button&quot;, e.Button)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Clicks&quot;, e.Clicks)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;X&quot;, e.X)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Y&quot;, e.Y)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Delta&quot;, e.Delta)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Location&quot;, e.Location)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowHeaderMouseDoubleClick Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowHeadersBorderStyleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeadersBorderStyleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.DataGridView.RowHeadersBorderStyle*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler RowHeadersBorderStyleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowHeadersBorderStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowHeadersBorderStyleChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#275\">private void DataGridView1_RowHeadersBorderStyleChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.RowHeadersBorderStyleChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#275\">Private Sub DataGridView1_RowHeadersBorderStyleChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.RowHeadersBorderStyleChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.RowHeadersBorderStyleChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowHeadersDefaultCellStyleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeadersDefaultCellStyleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler RowHeadersDefaultCellStyleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs when a property of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> returned by the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">RowHeadersDefaultCellStyle</a> property is set to a new value or when the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeadersDefaultCellStyle_\" data-linktype=\"relative-path\">RowHeadersDefaultCellStyle</a> property is set to a new <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> with at least one property value different than the previous cell style object.  </p>\n<p> For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowHeadersDefaultCellStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowHeadersDefaultCellStyleChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#276\">private void DataGridView1_RowHeadersDefaultCellStyleChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.RowHeadersDefaultCellStyleChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#276\">Private Sub DataGridView1_RowHeadersDefaultCellStyleChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.RowHeadersDefaultCellStyleChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.RowHeadersDefaultCellStyleChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowHeadersWidthChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeadersWidthChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.RowHeadersWidth*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler RowHeadersWidthChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowHeadersWidthChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowHeadersWidthChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#277\">private void DataGridView1_RowHeadersWidthChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.RowHeadersWidthChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#277\">Private Sub DataGridView1_RowHeadersWidthChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.RowHeadersWidthChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.RowHeadersWidthChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowHeadersWidthSizeModeChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeadersWidthSizeModeChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.RowHeadersWidthSizeMode*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewAutoSizeModeEventHandler RowHeadersWidthSizeModeChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowHeadersWidthSizeModeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowHeadersWidthSizeModeChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#278\">private void DataGridView1_RowHeadersWidthSizeModeChanged(Object sender, DataGridViewAutoSizeModeEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;PreviousModeAutoSized&quot;, e.PreviousModeAutoSized );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowHeadersWidthSizeModeChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#278\">Private Sub DataGridView1_RowHeadersWidthSizeModeChanged(sender as Object, e as DataGridViewAutoSizeModeEventArgs) _ \n     Handles DataGridView1.RowHeadersWidthSizeModeChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;PreviousModeAutoSized&quot;, e.PreviousModeAutoSized)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowHeadersWidthSizeModeChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowHeightChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeightChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.Height*</span> property for a row changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowEventHandler RowHeightChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of this event. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRowPainting#40\">    &#39; Adjusts the padding when the user changes the row height so that \n    &#39; the normal cell content is fully displayed and any extra\n    &#39; height is used for the content that spans multiple columns.\n    Sub dataGridView1_RowHeightChanged(ByVal sender As Object, _\n        ByVal e As DataGridViewRowEventArgs) _\n        Handles dataGridView1.RowHeightChanged\n\n        &#39; Calculate the new height of the normal cell content.\n        Dim preferredNormalContentHeight As Int32 = _\n            e.Row.GetPreferredHeight(e.Row.Index, _\n            DataGridViewAutoSizeRowMode.AllCellsExceptHeader, True) - _\n            e.Row.DefaultCellStyle.Padding.Bottom()\n\n        &#39; Specify a new padding.\n        Dim newPadding As Padding = e.Row.DefaultCellStyle.Padding\n        newPadding.Bottom = e.Row.Height - preferredNormalContentHeight\n        e.Row.DefaultCellStyle.Padding = newPadding\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRowPainting#40\">    // Adjusts the padding when the user changes the row height so that \n    // the normal cell content is fully displayed and any extra\n    // height is used for the content that spans multiple columns.\n    void dataGridView1_RowHeightChanged(object sender,\n        DataGridViewRowEventArgs e)\n    {\n        // Calculate the new height of the normal cell content.\n        Int32 preferredNormalContentHeight =\n            e.Row.GetPreferredHeight(e.Row.Index, \n            DataGridViewAutoSizeRowMode.AllCellsExceptHeader, true) -\n            e.Row.DefaultCellStyle.Padding.Bottom;\n\n        // Specify a new padding.\n        Padding newPadding = e.Row.DefaultCellStyle.Padding;\n        newPadding.Bottom = e.Row.Height - preferredNormalContentHeight;\n        e.Row.DefaultCellStyle.Padding = newPadding;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowHeightInfoNeeded\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeightInfoNeeded</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when information about row height is requested.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowHeightInfoNeededEventHandler RowHeightInfoNeeded;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is useful for preserving custom row heights after a sorting operation. This is necessary because sorting operations are normally handled by the data source, which does not keep track of the correspondence between rows of data and rows in the control. This event occurs only when the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property has been set or when the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property is <code>true</code>. In the latter case, you provide your own data store and sorting operations. Handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeightInfoPushed\" data-linktype=\"relative-path\">RowHeightInfoPushed</a> event to store updated height information when the user changes a row height. Use RowHeightInfoNeeded to retrieve the stored height information when the control needs it.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowHeightInfoNeeded event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowHeightInfoNeeded event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#351\">private void DataGridView1_RowHeightInfoNeeded(Object sender, DataGridViewRowHeightInfoNeededEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Height&quot;, e.Height );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MinimumHeight&quot;, e.MinimumHeight );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowHeightInfoNeeded Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#351\">Private Sub DataGridView1_RowHeightInfoNeeded(sender as Object, e as DataGridViewRowHeightInfoNeededEventArgs) _ \n     Handles DataGridView1.RowHeightInfoNeeded\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Height&quot;, e.Height)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MinimumHeight&quot;, e.MinimumHeight)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowHeightInfoNeeded Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowHeightInfoPushed\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowHeightInfoPushed</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user changes the height of a row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowHeightInfoPushedEventHandler RowHeightInfoPushed;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is raised when the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property is set to <code>true</code> or the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property is set to a value other than <code>null</code>. This event is used to track and store row height information so that it can be restored after a sorting operation. To restore height information, handle the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowHeightInfoNeeded\" data-linktype=\"relative-path\">RowHeightInfoNeeded</a> event. Note that this event occurs only when the user changes the height of a row. If you change the height of a row programmatically, you must store the new height information at the same time.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowHeightInfoPushed event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowHeightInfoPushed event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#352\">private void DataGridView1_RowHeightInfoPushed(Object sender, DataGridViewRowHeightInfoPushedEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Height&quot;, e.Height );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;MinimumHeight&quot;, e.MinimumHeight );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowHeightInfoPushed Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#352\">Private Sub DataGridView1_RowHeightInfoPushed(sender as Object, e as DataGridViewRowHeightInfoPushedEventArgs) _ \n     Handles DataGridView1.RowHeightInfoPushed\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Height&quot;, e.Height)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;MinimumHeight&quot;, e.MinimumHeight)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;RowIndex&quot;, e.RowIndex)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Handled&quot;, e.Handled)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowHeightInfoPushed Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowLeave\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowLeave</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row loses input focus and is no longer the current row.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler RowLeave;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to handle this event to change the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle#System_Windows_Forms_DataGridViewCellStyle_BackColor_\" data-linktype=\"relative-path\">BackColor</a> property of the cells in the current row. In this example, the background color is set in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowEnter\" data-linktype=\"relative-path\">RowEnter</a> event, then reset to <a class=\"xref\" href=\"system.drawing.color#System_Drawing_Color_Empty\" data-linktype=\"relative-path\">Empty</a> on the RowLeave event. To run this example, paste the code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code> and ensure that all events are associated with their event handlers.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#200\">    private void dataGridView1_RowEnter(object sender, \n        DataGridViewCellEventArgs e)\n    {\n        for (int i = 0; i &lt; dataGridView1.Rows[e.RowIndex].Cells.Count; i++)\n        {\n            dataGridView1[i, e.RowIndex].Style.BackColor = Color.Yellow;\n        }\n    }\n\n    private void dataGridView1_RowLeave(object sender, \n        DataGridViewCellEventArgs e)\n    {\n        for (int i = 0; i &lt; dataGridView1.Rows[e.RowIndex].Cells.Count; i++)\n        {\n            dataGridView1[i, e.RowIndex].Style.BackColor = Color.Empty;\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#200\">    Private Sub dataGridView1_RowEnter(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.RowEnter\n\n        Dim i As Integer\n        For i = 0 To dataGridView1.Rows(e.RowIndex).Cells.Count - 1\n            dataGridView1(i, e.RowIndex).Style _\n                .BackColor = Color.Yellow\n        Next i\n\n    End Sub\n\n    Private Sub dataGridView1_RowLeave(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles dataGridView1.RowLeave\n\n        Dim i As Integer\n        For i = 0 To dataGridView1.Rows(e.RowIndex).Cells.Count - 1\n            dataGridView1(i, e.RowIndex).Style _\n                .BackColor = Color.Empty\n        Next i\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowMinimumHeightChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowMinimumHeightChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridViewRow.MinimumHeight*</span> property for a row changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowEventHandler RowMinimumHeightChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowMinimumHeightChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowMinimumHeightChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#354\">private void DataGridView1_RowMinimumHeightChanged(Object sender, DataGridViewRowEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowMinimumHeightChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#354\">Private Sub DataGridView1_RowMinimumHeightChanged(sender as Object, e as DataGridViewRowEventArgs) _ \n     Handles DataGridView1.RowMinimumHeightChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowMinimumHeightChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowPostPaint\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowPostPaint</div>        \r\n          </div>\r\n    \r\n            <p>Occurs after a <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> is painted.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowPostPaintEventHandler RowPostPaint;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can handle this event alone or in combination with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPrePaint\" data-linktype=\"relative-path\">RowPrePaint</a> event to customize the appearance of rows in the control. You can paint entire rows yourself, or paint specific parts of rows and use the following methods of the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowpostpainteventargs\" data-linktype=\"relative-path\">DataGridViewRowPostPaintEventArgs</a> class to paint other parts:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewrowpostpainteventargs#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_DrawFocus_\" data-linktype=\"relative-path\">DrawFocus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewrowpostpainteventargs#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintCells_\" data-linktype=\"relative-path\">PaintCells</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewrowpostpainteventargs#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintCellsBackground_\" data-linktype=\"relative-path\">PaintCellsBackground</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewrowpostpainteventargs#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintCellsContent_\" data-linktype=\"relative-path\">PaintCellsContent</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewrowpostpainteventargs#System_Windows_Forms_DataGridViewRowPostPaintEventArgs_PaintHeader_\" data-linktype=\"relative-path\">PaintHeader</a>  \n\n<p>You can also use the <a class=\"xref\" href=\"system.windows.forms.visualstyles.visualstylerenderer\" data-linktype=\"relative-path\">VisualStyleRenderer</a> class to paint standard controls using the current theme. For more information, see <a href=\"../Topic/Rendering%20Controls%20with%20Visual%20Styles.md\" data-linktype=\"relative-path\">Rendering Controls with Visual Styles</a>. If you are using <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/vsprvslong-md.md&quot; -->Visual Studio 2005<!--END INCLUDE -->, you also have access to a large library of standard images that you can use with the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.  </p>\n<p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use a handler for the RowPostPaint event to paint textual content that spans the entire row below the normal cell values. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRowPainting#30\">    &#39; Paints the content that spans multiple columns and the focus rectangle.\n    Sub dataGridView1_RowPostPaint(ByVal sender As Object, _\n        ByVal e As DataGridViewRowPostPaintEventArgs) _\n        Handles dataGridView1.RowPostPaint\n\n        &#39; Calculate the bounds of the row.\n        Dim rowBounds As New Rectangle(Me.dataGridView1.RowHeadersWidth, _\n            e.RowBounds.Top, Me.dataGridView1.Columns.GetColumnsWidth( _\n            DataGridViewElementStates.Visible) - _\n            Me.dataGridView1.HorizontalScrollingOffset + 1, e.RowBounds.Height)\n\n        Dim forebrush As SolidBrush = Nothing\n        Try\n            &#39; Determine the foreground color.\n            If (e.State And DataGridViewElementStates.Selected) = _\n                DataGridViewElementStates.Selected Then\n\n                forebrush = New SolidBrush(e.InheritedRowStyle.SelectionForeColor)\n            Else\n                forebrush = New SolidBrush(e.InheritedRowStyle.ForeColor)\n            End If\n\n            &#39; Get the content that spans multiple columns.\n            Dim recipe As Object = _\n                Me.dataGridView1.Rows.SharedRow(e.RowIndex).Cells(2).Value\n\n            If (recipe IsNot Nothing) Then\n                Dim text As String = recipe.ToString()\n\n                &#39; Calculate the bounds for the content that spans multiple \n                &#39; columns, adjusting for the horizontal scrolling position \n                &#39; and the current row height, and displaying only whole\n                &#39; lines of text.\n                Dim textArea As Rectangle = rowBounds\n                textArea.X -= Me.dataGridView1.HorizontalScrollingOffset\n                textArea.Width += Me.dataGridView1.HorizontalScrollingOffset\n                textArea.Y += rowBounds.Height - e.InheritedRowStyle.Padding.Bottom\n                textArea.Height -= rowBounds.Height - e.InheritedRowStyle.Padding.Bottom\n                textArea.Height = (textArea.Height \\ e.InheritedRowStyle.Font.Height) * _\n                    e.InheritedRowStyle.Font.Height\n\n                &#39; Calculate the portion of the text area that needs painting.\n                Dim clip As RectangleF = textArea\n                clip.Width -= Me.dataGridView1.RowHeadersWidth + 1 - clip.X\n                clip.X = Me.dataGridView1.RowHeadersWidth + 1\n                Dim oldClip As RectangleF = e.Graphics.ClipBounds\n                e.Graphics.SetClip(clip)\n\n                &#39; Draw the content that spans multiple columns.\n                e.Graphics.DrawString(text, e.InheritedRowStyle.Font, forebrush, _\n                    textArea)\n\n                e.Graphics.SetClip(oldClip)\n            End If\n        Finally\n            forebrush.Dispose()\n        End Try\n\n        If Me.dataGridView1.CurrentCellAddress.Y = e.RowIndex Then\n            &#39; Paint the focus rectangle.\n            e.DrawFocus(rowBounds, True)\n        End If\n\n    End Sub &#39;dataGridView1_RowPostPaint\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRowPainting#30\">    // Paints the content that spans multiple columns and the focus rectangle.\n    void dataGridView1_RowPostPaint(object sender,\n        DataGridViewRowPostPaintEventArgs e)\n    {\n        // Calculate the bounds of the row.\n        Rectangle rowBounds = new Rectangle(\n            this.dataGridView1.RowHeadersWidth, e.RowBounds.Top,\n            this.dataGridView1.Columns.GetColumnsWidth(\n                DataGridViewElementStates.Visible) -\n            this.dataGridView1.HorizontalScrollingOffset + 1,\n            e.RowBounds.Height);\n\n        SolidBrush forebrush = null;\n        try\n        {\n            // Determine the foreground color.\n            if ((e.State &amp; DataGridViewElementStates.Selected) ==\n                DataGridViewElementStates.Selected)\n            {\n                forebrush = new SolidBrush(e.InheritedRowStyle.SelectionForeColor);\n            }\n            else\n            {\n                forebrush = new SolidBrush(e.InheritedRowStyle.ForeColor);\n            }\n\n            // Get the content that spans multiple columns.\n            object recipe =\n                this.dataGridView1.Rows.SharedRow(e.RowIndex).Cells[2].Value;\n\n            if (recipe != null)\n            {\n                String text = recipe.ToString();\n\n                // Calculate the bounds for the content that spans multiple \n                // columns, adjusting for the horizontal scrolling position \n                // and the current row height, and displaying only whole\n                // lines of text.\n                Rectangle textArea = rowBounds;\n                textArea.X -= this.dataGridView1.HorizontalScrollingOffset;\n                textArea.Width += this.dataGridView1.HorizontalScrollingOffset;\n                textArea.Y += rowBounds.Height - e.InheritedRowStyle.Padding.Bottom;\n                textArea.Height -= rowBounds.Height -\n                    e.InheritedRowStyle.Padding.Bottom;\n                textArea.Height = (textArea.Height / e.InheritedRowStyle.Font.Height) *\n                    e.InheritedRowStyle.Font.Height;\n\n                // Calculate the portion of the text area that needs painting.\n                RectangleF clip = textArea;\n                clip.Width -= this.dataGridView1.RowHeadersWidth + 1 - clip.X;\n                clip.X = this.dataGridView1.RowHeadersWidth + 1;\n                RectangleF oldClip = e.Graphics.ClipBounds;\n                e.Graphics.SetClip(clip);\n\n                // Draw the content that spans multiple columns.\n                e.Graphics.DrawString(\n                    text, e.InheritedRowStyle.Font, forebrush, textArea);\n\n                e.Graphics.SetClip(oldClip);\n            }\n        }\n        finally\n        {\n            forebrush.Dispose();\n        }\n\n        if (this.dataGridView1.CurrentCellAddress.Y == e.RowIndex)\n        {\n            // Paint the focus rectangle.\n            e.DrawFocus(rowBounds, true);\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowPrePaint\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowPrePaint</div>        \r\n          </div>\r\n    \r\n            <p>Occurs before a <a class=\"xref\" href=\"system.windows.forms.datagridviewrow\" data-linktype=\"relative-path\">DataGridViewRow</a> is painted</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowPrePaintEventHandler RowPrePaint;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can handle this event alone or in combination with the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowPostPaint\" data-linktype=\"relative-path\">RowPostPaint</a> event to customize the appearance of rows in the control. You can paint entire rows yourself, or paint specific parts of rows and use the following methods of the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowprepainteventargs\" data-linktype=\"relative-path\">DataGridViewRowPrePaintEventArgs</a> class to paint other parts:  </p>\n<ul>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewrowprepainteventargs#System_Windows_Forms_DataGridViewRowPrePaintEventArgs_DrawFocus_\" data-linktype=\"relative-path\">DrawFocus</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewrowprepainteventargs#System_Windows_Forms_DataGridViewRowPrePaintEventArgs_PaintCells_\" data-linktype=\"relative-path\">PaintCells</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewrowprepainteventargs#System_Windows_Forms_DataGridViewRowPrePaintEventArgs_PaintCellsBackground_\" data-linktype=\"relative-path\">PaintCellsBackground</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewrowprepainteventargs#System_Windows_Forms_DataGridViewRowPrePaintEventArgs_PaintCellsContent_\" data-linktype=\"relative-path\">PaintCellsContent</a>  \n</li>\n<li><a class=\"xref\" href=\"system.windows.forms.datagridviewrowprepainteventargs#System_Windows_Forms_DataGridViewRowPrePaintEventArgs_PaintHeader_\" data-linktype=\"relative-path\">PaintHeader</a>  \n\n<p>You can also use the <a class=\"xref\" href=\"system.windows.forms.visualstyles.visualstylerenderer\" data-linktype=\"relative-path\">VisualStyleRenderer</a> class to paint standard controls using the current theme. For more information, see <a href=\"../Topic/Rendering%20Controls%20with%20Visual%20Styles.md\" data-linktype=\"relative-path\">Rendering Controls with Visual Styles</a>. If you are using <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/vsprvslong-md.md&quot; -->Visual Studio 2005<!--END INCLUDE -->, you also have access to a large library of standard images that you can use with the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.  </p>\n<p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use a handler for the RowPrePaint event to paint a gradient row background if the row is selected. This example is part of a larger example available in <a href=\"../Topic/How%20to:%20Customize%20the%20Appearance%20of%20Rows%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize the Appearance of Rows in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewRowPainting#20\">    &#39; Paints the custom selection background for selected rows.\n    Sub dataGridView1_RowPrePaint(ByVal sender As Object, _\n        ByVal e As DataGridViewRowPrePaintEventArgs) _\n        Handles dataGridView1.RowPrePaint\n\n        &#39; Do not automatically paint the focus rectangle.\n        e.PaintParts = e.PaintParts And Not DataGridViewPaintParts.Focus\n\n        &#39; Determine whether the cell should be painted with the \n        &#39; custom selection background.\n        If (e.State And DataGridViewElementStates.Selected) = _\n            DataGridViewElementStates.Selected Then\n\n            &#39; Calculate the bounds of the row.\n            Dim rowBounds As New Rectangle( _\n                Me.dataGridView1.RowHeadersWidth, e.RowBounds.Top, _\n                Me.dataGridView1.Columns.GetColumnsWidth( _\n                DataGridViewElementStates.Visible) - _\n                Me.dataGridView1.HorizontalScrollingOffset + 1, _\n                e.RowBounds.Height)\n\n            &#39; Paint the custom selection background.\n            Dim backbrush As New _\n                System.Drawing.Drawing2D.LinearGradientBrush(rowBounds, _\n                Me.dataGridView1.DefaultCellStyle.SelectionBackColor, _\n                e.InheritedRowStyle.ForeColor, _\n                System.Drawing.Drawing2D.LinearGradientMode.Horizontal)\n            Try\n                e.Graphics.FillRectangle(backbrush, rowBounds)\n            Finally\n                backbrush.Dispose()\n            End Try\n        End If\n\n    End Sub &#39;dataGridView1_RowPrePaint\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewRowPainting#20\">    // Paints the custom selection background for selected rows.\n    void dataGridView1_RowPrePaint(object sender,\n            DataGridViewRowPrePaintEventArgs e)\n    {\n        // Do not automatically paint the focus rectangle.\n        e.PaintParts &amp;= ~DataGridViewPaintParts.Focus;\n\n        // Determine whether the cell should be painted\n        // with the custom selection background.\n        if ((e.State &amp; DataGridViewElementStates.Selected) ==\n                    DataGridViewElementStates.Selected)\n        {\n            // Calculate the bounds of the row.\n            Rectangle rowBounds = new Rectangle(\n                this.dataGridView1.RowHeadersWidth, e.RowBounds.Top,\n                this.dataGridView1.Columns.GetColumnsWidth(\n                    DataGridViewElementStates.Visible) -\n                this.dataGridView1.HorizontalScrollingOffset + 1,\n                e.RowBounds.Height);\n\n            // Paint the custom selection background.\n            using (Brush backbrush =\n                new System.Drawing.Drawing2D.LinearGradientBrush(rowBounds,\n                    this.dataGridView1.DefaultCellStyle.SelectionBackColor,\n                    e.InheritedRowStyle.ForeColor,\n                    System.Drawing.Drawing2D.LinearGradientMode.Horizontal))\n            {\n                e.Graphics.FillRectangle(backbrush, rowBounds);\n            }\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowsAdded\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowsAdded</div>        \r\n          </div>\r\n    \r\n            <p>Occurs after a new row is added to the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowsAddedEventHandler RowsAdded;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Rows in the control are not automatically sorted when new rows are added. To sort new rows into their correct position, call the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Sort_\" data-linktype=\"relative-path\">Sort</a> method in a RowsAdded event handler.  </p>\n<p> When the user adds a new row using the row for new records, the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowsaddedeventargs#System_Windows_Forms_DataGridViewRowsAddedEventArgs_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a> value in the handler for this event is equal to the index of the new location of the row for new records, which is one greater than the row just added. When you add rows programmatically, however, the <a class=\"xref\" href=\"system.windows.forms.datagridviewrowsaddedeventargs#System_Windows_Forms_DataGridViewRowsAddedEventArgs_RowIndex_\" data-linktype=\"relative-path\">RowIndex</a> value is the index of the first row added.  </p>\n<p> In virtual mode, this event occurs before the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValuePushed\" data-linktype=\"relative-path\">CellValuePushed</a> event and can be used to create new records in your data store that you can then populate in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValuePushed\" data-linktype=\"relative-path\">CellValuePushed</a> event handler.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example handles the RowsAdded event to increment the number of rows in a virtual <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. The number of rows is used in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CellValueNeeded\" data-linktype=\"relative-path\">CellValueNeeded</a> handler so it knows when to show a blank cell versus an initialized cell for a new row. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> reference topic.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView._Virtual#20\">    bool newRowNeeded;\n    private void dataGridView1_NewRowNeeded(object sender,\n        DataGridViewRowEventArgs e)\n    {\n        newRowNeeded = true;\n    }\n\n    const int initialSize = 5000000;\n    int numberOfRows = initialSize;\n\n    private void dataGridView1_RowsAdded(object sender,\n         DataGridViewRowsAddedEventArgs e)\n    {\n        if (newRowNeeded)\n        {\n            newRowNeeded = false;\n            numberOfRows = numberOfRows + 1;\n        }\n    }\n\n    #region &quot;data store maintance&quot;\n    const int initialValue = -1;\n\n    private void dataGridView1_CellValueNeeded(object sender,\n        DataGridViewCellValueEventArgs e)\n    {\n        if (store.ContainsKey(e.RowIndex))\n        {\n            // Use the store if the e value has been modified \n            // and stored.            \n            e.Value = store[e.RowIndex];\n        }\n        else if (newRowNeeded &amp;&amp; e.RowIndex == numberOfRows)\n        {\n            if (dataGridView1.IsCurrentCellInEditMode)\n            {\n                e.Value = initialValue;\n            }\n            else\n            {\n                // Show a blank value if the cursor is just resting\n                // on the last row.\n                e.Value = String.Empty;\n            }\n        }\n        else\n        {\n            e.Value = e.RowIndex;\n        }\n    }\n\n    private void dataGridView1_CellValuePushed(object sender,\n        DataGridViewCellValueEventArgs e)\n    {\n        store.Add(e.RowIndex, int.Parse(e.Value.ToString()));\n    }\n    #endregion\n\n    private Dictionary&lt;int, int&gt; store = new Dictionary&lt;int, int&gt;();\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.DataGridView._Virtual#20\">    void VirtualConnector::dataGridView1_NewRowNeeded\n        (Object^ sender, DataGridViewRowEventArgs^ e)\n    {\n        newRowNeeded = true;\n    }\n\n    void VirtualConnector::dataGridView1_RowsAdded\n        (Object^ sender, DataGridViewRowsAddedEventArgs^ e)\n    {\n        if (newRowNeeded)\n        {\n            newRowNeeded = false;\n            numberOfRows = numberOfRows + 1;\n        }\n    }\n\n#pragma region Data store maintance\n\n    void VirtualConnector::dataGridView1_CellValueNeeded\n        (Object^ sender, DataGridViewCellValueEventArgs^ e)\n    {\n        if (store-&gt;ContainsKey(e-&gt;RowIndex))\n        {\n            // Use the store if the e value has been modified \n            // and stored.            \n            e-&gt;Value = gcnew Int32(store-&gt;default[e-&gt;RowIndex]); \n        }\n        else if (newRowNeeded &amp;&amp; e-&gt;RowIndex == numberOfRows)\n        {\n            if (dataGridView1-&gt;IsCurrentCellInEditMode)\n            {\n                e-&gt;Value = initialValue;\n            }\n            else\n            {\n                // Show a blank e if the cursor is just loitering\n                // over(the) last row.\n                e-&gt;Value = String::Empty;\n            }\n        }\n        else\n        {\n            e-&gt;Value = e-&gt;RowIndex;\n        }\n    }\n\n    void VirtualConnector::dataGridView1_CellValuePushed\n        (Object^ sender, DataGridViewCellValueEventArgs^ e)\n    {\n        String^ value = e-&gt;Value-&gt;ToString();\n        store[e-&gt;RowIndex] = Int32::Parse(value, \n            CultureInfo::CurrentCulture);\n    }\n#pragma endregion\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView._Virtual#20\">    Dim newRowNeeded As Boolean\n\n    Private Sub dataGridView1_NewRowNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewRowEventArgs) _\n        Handles dataGridView1.NewRowNeeded\n\n        newRowNeeded = True\n    End Sub\n\n    Const initialSize As Integer = 5000000\n    Dim numberOfRows As Integer = initialSize\n\n    Private Sub dataGridView1_RowsAdded(ByVal sender As Object, _\n        ByVal e As DataGridViewRowsAddedEventArgs) _\n        Handles dataGridView1.RowsAdded\n\n        If newRowNeeded Then\n            newRowNeeded = False\n            numberOfRows = numberOfRows + 1\n        End If\n    End Sub\n\n#Region &quot;data store maintance&quot;\n    Const initialValue As Integer = -1\n\n    Private Sub dataGridView1_CellValueNeeded(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValueNeeded\n\n        If store.ContainsKey(e.RowIndex) Then\n            &#39; Use the store if the e value has been modified \n            &#39; and stored.\n            e.Value = store(e.RowIndex)\n        ElseIf newRowNeeded AndAlso e.RowIndex = numberOfRows Then\n            If dataGridView1.IsCurrentCellInEditMode Then\n                e.Value = initialValue\n            Else\n                &#39; Show a blank value if the cursor is just resting\n                &#39; on the last row.\n                e.Value = String.Empty\n            End If\n        Else\n            e.Value = e.RowIndex\n        End If\n    End Sub\n\n    Private Sub dataGridView1_CellValuePushed(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValueEventArgs) _\n        Handles dataGridView1.CellValuePushed\n\n        store.Add(e.RowIndex, CInt(e.Value))\n\n    End Sub\n#End Region\n\n    Dim store As System.Collections.Generic.Dictionary(Of Integer, Integer) = _\n        New Dictionary(Of Integer, Integer)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowsDefaultCellStyleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowsDefaultCellStyleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.RowsDefaultCellStyle*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler RowsDefaultCellStyleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs when a property of the <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> returned by the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowsDefaultCellStyle_\" data-linktype=\"relative-path\">RowsDefaultCellStyle</a> property is set to a new value or when the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowsDefaultCellStyle_\" data-linktype=\"relative-path\">RowsDefaultCellStyle</a> property is set to a new <a class=\"xref\" href=\"system.windows.forms.datagridviewcellstyle\" data-linktype=\"relative-path\">DataGridViewCellStyle</a> with at least one property value different than the previous cell style object.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowsDefaultCellStyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowsDefaultCellStyleChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#279\">private void DataGridView1_RowsDefaultCellStyleChanged(Object sender, EventArgs e) {\n\n   MessageBox.Show(&quot;You are in the DataGridView.RowsDefaultCellStyleChanged event.&quot;);\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#279\">Private Sub DataGridView1_RowsDefaultCellStyleChanged(sender as Object, e as EventArgs) _ \n     Handles DataGridView1.RowsDefaultCellStyleChanged\n\n   MessageBox.Show(&quot;You are in the DataGridView.RowsDefaultCellStyleChanged event.&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowsRemoved\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowsRemoved</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row or rows are deleted from the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowsRemovedEventHandler RowsRemoved;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When rows are deleted from a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control, the index numbers of subsequent rows are lowered to compensate.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use this event to update the values in a balance column of a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"relative-path\">SelectionChanged</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewSelectionSum#30\">    private void DataGridView1_CellValueChanged(\n        object sender, DataGridViewCellEventArgs e)\n    {\n        // Update the balance column whenever the value of any cell changes.\n        UpdateBalance();\n    }\n\n    private void DataGridView1_RowsRemoved(\n        object sender, DataGridViewRowsRemovedEventArgs e)\n    {\n        // Update the balance column whenever rows are deleted.\n        UpdateBalance();\n    }\n\n    private void UpdateBalance()\n    {\n        int counter;\n        int balance;\n        int deposit;\n        int withdrawal;\n\n        // Iterate through the rows, skipping the Starting Balance row.\n        for (counter = 1; counter &lt; (DataGridView1.Rows.Count - 1);\n            counter++)\n        {\n            deposit = 0;\n            withdrawal = 0;\n            balance = int.Parse(DataGridView1.Rows[counter - 1]\n                .Cells[&quot;Balance&quot;].Value.ToString());\n\n            if (DataGridView1.Rows[counter].Cells[&quot;Deposits&quot;].Value != null)\n            {\n                // Verify that the cell value is not an empty string.\n                if (DataGridView1.Rows[counter]\n                    .Cells[&quot;Deposits&quot;].Value.ToString().Length != 0)\n                {\n                    deposit = int.Parse(DataGridView1.Rows[counter]\n                        .Cells[&quot;Deposits&quot;].Value.ToString());\n                }\n            }\n\n            if (DataGridView1.Rows[counter].Cells[&quot;Withdrawals&quot;].Value != null)\n            {\n                if (DataGridView1.Rows[counter]\n                    .Cells[&quot;Withdrawals&quot;].Value.ToString().Length != 0)\n                {\n                    withdrawal = int.Parse(DataGridView1.Rows[counter]\n                        .Cells[&quot;Withdrawals&quot;].Value.ToString());\n                }\n            }\n            DataGridView1.Rows[counter].Cells[&quot;Balance&quot;].Value =\n                (balance + deposit + withdrawal).ToString();\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewSelectionSum#30\">    Private Sub CellValueChanged(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles DataGridView1.CellValueChanged\n\n        &#39; Update the balance column whenever the values of any cell changes.\n        UpdateBalance()\n    End Sub\n\n    Private Sub RowsRemoved(ByVal sender As Object, _\n        ByVal e As DataGridViewRowsRemovedEventArgs) _\n        Handles DataGridView1.RowsRemoved\n\n        &#39; Update the balance column whenever rows are deleted.\n        UpdateBalance()\n    End Sub\n\n    Private Sub UpdateBalance()\n        Dim counter As Integer\n        Dim balance As Integer\n        Dim deposit As Integer\n        Dim withdrawal As Integer\n\n        &#39; Iterate through the rows, skipping the Starting Balance Row.\n        For counter = 1 To (DataGridView1.Rows.Count - 2)\n            deposit = 0\n            withdrawal = 0\n            balance = Integer.Parse(DataGridView1.Rows(counter - 1) _\n                .Cells(&quot;Balance&quot;).Value.ToString())\n\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Deposits&quot;).Value Is Nothing Then\n\n                &#39; Verify that the cell value is not an empty string.\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Deposits&quot;).Value.ToString().Length = 0 Then\n                    deposit = Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Deposits&quot;).Value.ToString())\n                End If\n            End If\n\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Withdrawals&quot;).Value Is Nothing Then\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Withdrawals&quot;).Value.ToString().Length = 0 Then\n                    withdrawal = Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Withdrawals&quot;).Value.ToString())\n                End If\n            End If\n\n            DataGridView1.Rows(counter).Cells(&quot;Balance&quot;).Value = _\n                (balance + deposit + withdrawal).ToString()\n        Next\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowStateChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowStateChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row changes state, such as losing or gaining input focus.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowStateChangedEventHandler RowStateChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowStateChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowStateChanged event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#359\">private void DataGridView1_RowStateChanged(Object sender, DataGridViewRowStateChangedEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;StateChanged&quot;, e.StateChanged );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowStateChanged Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#359\">Private Sub DataGridView1_RowStateChanged(sender as Object, e as DataGridViewRowStateChangedEventArgs) _ \n     Handles DataGridView1.RowStateChanged\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;StateChanged&quot;, e.StateChanged)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowStateChanged Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowUnshared\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowUnshared</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row&#39;s state changes from shared to unshared.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowEventHandler RowUnshared;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this event during development and testing to help identify code that causes rows to change from a shared to an unshared state. This is useful when scaling the control to display large amounts of data.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RowUnshared event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the RowUnshared event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#360\">private void DataGridView1_RowUnshared(Object sender, DataGridViewRowEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;RowUnshared Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#360\">Private Sub DataGridView1_RowUnshared(sender as Object, e as DataGridViewRowEventArgs) _ \n     Handles DataGridView1.RowUnshared\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;RowUnshared Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowValidated\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowValidated</div>        \r\n          </div>\r\n    \r\n            <p>Occurs after a row has finished validating.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellEventHandler RowValidated;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is analogous to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">Validated</a> event. Use this event to perform post-processing on a row of values.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code sample uses this event to clear up any error annotations that may have been left behind after validating the row.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.RowOperations#10\">    Private Sub RemoveAnnotations(ByVal sender As Object, _\n        ByVal args As DataGridViewCellEventArgs) _\n        Handles songsDataGridView.RowValidated\n\n        For Each cell As DataGridViewCell In _\n            songsDataGridView.Rows(args.RowIndex).Cells\n            cell.ErrorText = String.Empty\n        Next\n\n        For Each row As DataGridViewRow In songsDataGridView.Rows\n            row.ErrorText = String.Empty\n        Next\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.RowOperations#10\">    private void RemoveAnnotations(Object sender, \n        DataGridViewCellEventArgs args) \n    {\n        foreach (DataGridViewCell cell in \n            songsDataGridView.Rows[args.RowIndex].Cells)\n        {\n            cell.ErrorText = String.Empty;\n        }\n\n        foreach (DataGridViewRow row in songsDataGridView.Rows)\n        {\n            row.ErrorText = String.Empty;\n        }\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_RowValidating\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RowValidating</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when a row is validating.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewCellCancelEventHandler RowValidating;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is analogous to the <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">System.Windows.Forms.Control.Validating</a> event. Use this event to perform validation on all the values of a row. If the row does not pass validation, set the <a class=\"xref\" href=\"system.componentmodel.canceleventargs#System_ComponentModel_CancelEventArgs_Cancel_\" data-linktype=\"relative-path\">Cancel</a> property to <code>true</code>. Canceling this event prevents the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_RowValidated\" data-linktype=\"relative-path\">RowValidated</a>, <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validating\" data-linktype=\"relative-path\">System.Windows.Forms.Control.Validating</a>, and <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Validated\" data-linktype=\"relative-path\">System.Windows.Forms.Control.Validated</a> events from occurring, and also prevents the user from leaving the invalid row and prevents the row from being saved to an external data source in data bound mode.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses RowValidating to check if valid track and release dates are entered.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.RowOperations#5\">    Private Sub ValidateByRow(ByVal sender As Object, _\n        ByVal data As DataGridViewCellCancelEventArgs) _\n        Handles songsDataGridView.RowValidating\n\n        Dim row As DataGridViewRow = _\n            songsDataGridView.Rows(data.RowIndex)\n        Dim trackCell As DataGridViewCell = _\n            row.Cells(songsDataGridView.Columns(&quot;Track&quot;).Index)\n        Dim dateCell As DataGridViewCell = _\n            row.Cells(songsDataGridView.Columns(&quot;Release Date&quot;).Index)\n        data.Cancel = Not (IsTrackGood(trackCell) _\n            AndAlso IsDateGood(dateCell))\n    End Sub\n\n    Private Function IsTrackGood(ByRef cell As DataGridViewCell) As Boolean\n\n        If cell.Value.ToString().Length = 0 Then\n            cell.ErrorText = &quot;Please enter a track&quot;\n            songsDataGridView.Rows(cell.RowIndex).ErrorText = _\n                &quot;Please enter a track&quot;\n            Return False\n        ElseIf cell.Value.ToString().Equals(&quot;0&quot;) Then\n            cell.ErrorText = &quot;Zero is not a valid track&quot;\n            songsDataGridView.Rows(cell.RowIndex).ErrorText = _\n                &quot;Zero is not a valid track&quot;\n            Return False\n        ElseIf Not Integer.TryParse( _\n            cell.Value.ToString(), New Integer()) Then\n            cell.ErrorText = &quot;A Track must be a number&quot;\n            songsDataGridView.Rows(cell.RowIndex).ErrorText = _\n                &quot;A Track must be a number&quot;\n            Return False\n        End If\n        Return True\n    End Function\n\n    Private Function IsDateGood(ByRef cell As DataGridViewCell) As Boolean\n\n        If cell.Value Is Nothing Then\n            cell.ErrorText = &quot;Missing date&quot;\n            songsDataGridView.Rows(cell.RowIndex).ErrorText = _\n                &quot;Missing date&quot;\n            Return False\n        Else\n            Try\n                DateTime.Parse(cell.Value.ToString())\n            Catch ex As FormatException\n\n                cell.ErrorText = &quot;Invalid format&quot;\n                songsDataGridView.Rows(cell.RowIndex).ErrorText = _\n                    &quot;Invalid format&quot;\n\n                Return False\n            End Try\n        End If\n        Return True\n    End Function\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.RowOperations#5\">    private void ValidateByRow(Object sender, \n        DataGridViewCellCancelEventArgs data) \n    {\n        DataGridViewRow row = \n            songsDataGridView.Rows[data.RowIndex];\n        DataGridViewCell trackCell = \n            row.Cells[songsDataGridView.Columns[&quot;Track&quot;].Index];\n        DataGridViewCell dateCell = \n            row.Cells[songsDataGridView.Columns[&quot;Release Date&quot;].Index];\n        data.Cancel = !(IsTrackGood(trackCell) &amp;&amp; IsDateGood(dateCell));\n    }\n\n    private Boolean IsTrackGood(DataGridViewCell cell)\n    {\n        Int32 cellValueAsInt;\n        if (cell.Value.ToString().Length == 0)\n\t\t{\n            cell.ErrorText = &quot;Please enter a track&quot;;\n            songsDataGridView.Rows[cell.RowIndex].ErrorText = \n                &quot;Please enter a track&quot;;\n            return false;\n        }\n        else if (cell.Value.ToString().Equals(&quot;0&quot;))\n        {\n            cell.ErrorText = &quot;Zero is not a valid track&quot;;\n            songsDataGridView.Rows[cell.RowIndex].ErrorText =\n                &quot;Zero is not a valid track&quot;;\n            return false;\n        }\n        else if (!Int32.TryParse(cell.Value.ToString(), out cellValueAsInt))\n        {\n            cell.ErrorText = &quot;A Track must be a number&quot;;\n            songsDataGridView.Rows[cell.RowIndex].ErrorText =\n                &quot;A Track must be a number&quot;;\n            return false;\n        }\n        return true;\n    }\n\n    private Boolean IsDateGood(DataGridViewCell cell) \n    {\n        if (cell.Value == null)\n\t\t{\n            cell.ErrorText = &quot;Missing date&quot;;\n            songsDataGridView.Rows[cell.RowIndex].ErrorText = \n                &quot;Missing date&quot;;\n            return false;\n        }\n        else\n        {\n            try\n            {\n                DateTime.Parse(cell.Value.ToString());\n            }\n            catch (FormatException)\n            {\n                cell.ErrorText = &quot;Invalid format&quot;;\n                songsDataGridView.Rows[cell.RowIndex].ErrorText = \n                    &quot;Invalid format&quot;;\n\n                return false;\n            }\n        }\n        return true;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_Scroll\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Scroll</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user scrolls through the control contents.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.ScrollEventHandler Scroll;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Scroll event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the Scroll event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#363\">private void DataGridView1_Scroll(Object sender, ScrollEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ScrollOrientation&quot;, e.ScrollOrientation );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Type&quot;, e.Type );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;NewValue&quot;, e.NewValue );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;OldValue&quot;, e.OldValue );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;Scroll Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#363\">Private Sub DataGridView1_Scroll(sender as Object, e as ScrollEventArgs) _ \n     Handles DataGridView1.Scroll\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ScrollOrientation&quot;, e.ScrollOrientation)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Type&quot;, e.Type)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;NewValue&quot;, e.NewValue)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;OldValue&quot;, e.OldValue)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;Scroll Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_SelectionChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SelectionChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the current selection changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler SelectionChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs whenever cells are selected or the selection is canceled, whether programmatically or by user action. For example, this event is useful when you want display the sum of the currently selected cells.  </p>\n<p> When you change the value of the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCell_\" data-linktype=\"relative-path\">CurrentCell</a> property, the SelectionChanged event occurs before the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCellChanged\" data-linktype=\"relative-path\">CurrentCellChanged</a> event. Any SelectionChanged event handler accessing the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_CurrentCell_\" data-linktype=\"relative-path\">CurrentCell</a> property at this time will get its previous value.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this event. In the example, the form displays the sum of values in the selected cells, and updates the sum when the selection changes.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewSelectionSum#00\">using System;\nusing System.Drawing;\nusing System.Windows.Forms;\n\npublic class Form1 : Form\n{\n    private DataGridView DataGridView1 = new DataGridView();\n    private FlowLayoutPanel FlowLayoutPanel1 = new FlowLayoutPanel();\n    private Label Label1 = new Label();\n    private Label Label2 = new Label();\n    private Label Label3 = new Label();\n    private Label Label4 = new Label();\n\n    // Establish the main entry point for the application.\n    [STAThreadAttribute()]\n    public static void Main()\n    {\n        Application.Run(new Form1());\n    }\n\n    public Form1()\n    {\n        // Initialize the form.\n        // This code can be replaced with designer generated code.\n        AutoSize = true;\n\n        // Set the FlowLayoutPanel1 properties.\n        FlowLayoutPanel1.FlowDirection = FlowDirection.TopDown;\n        FlowLayoutPanel1.Location = new System.Drawing.Point(354, 0);\n        FlowLayoutPanel1.AutoSize = true;\n        FlowLayoutPanel1.Controls.Add(Label1);\n        FlowLayoutPanel1.Controls.Add(Label2);\n        FlowLayoutPanel1.Controls.Add(Label3);\n        FlowLayoutPanel1.Controls.Add(Label4);\n\n        Controls.Add(FlowLayoutPanel1);\n        Controls.Add(DataGridView1);\n\n        // Set the Label properties.\n        Label1.AutoSize = true;\n        Label2.AutoSize = true;\n        Label3.AutoSize = true;\n    }\n\n    protected override void OnLoad(EventArgs e)\n    {\n        PopulateDataGridView();\n        UpdateLabelText();\n        UpdateBalance();\n\n        DataGridView1.CellValidating += new\n            DataGridViewCellValidatingEventHandler(\n            DataGridView1_CellValidating);\n        DataGridView1.CellValidated += new DataGridViewCellEventHandler(\n            DataGridView1_CellValidated);\n        DataGridView1.CellValueChanged += new DataGridViewCellEventHandler(\n            DataGridView1_CellValueChanged);\n        DataGridView1.RowsRemoved += new DataGridViewRowsRemovedEventHandler(\n            DataGridView1_RowsRemoved);\n        DataGridView1.SelectionChanged += new EventHandler(\n            DataGridView1_SelectionChanged);\n        DataGridView1.UserAddedRow += new DataGridViewRowEventHandler(\n            DataGridView1_UserAddedRow);\n        DataGridView1.UserDeletingRow += new\n            DataGridViewRowCancelEventHandler(DataGridView1_UserDeletingRow);\n\n        base.OnLoad(e);\n    }\n\n    // Replace this with your own code to populate the DataGridView.\n    private void PopulateDataGridView()\n    {\n        DataGridView1.Size = new Size(350, 400);\n        DataGridView1.AllowUserToDeleteRows = true;\n\n        // Add columns to the DataGridView.\n        DataGridView1.ColumnCount = 4;\n        DataGridView1.SelectionMode =\n            DataGridViewSelectionMode.RowHeaderSelect;\n\n        // Set the properties of the DataGridView columns.\n        DataGridView1.Columns[0].Name = &quot;Description&quot;;\n        DataGridView1.Columns[1].Name = &quot;Withdrawals&quot;;\n        DataGridView1.Columns[2].Name = &quot;Deposits&quot;;\n        DataGridView1.Columns[3].Name = &quot;Balance&quot;;\n        DataGridView1.Columns[&quot;Description&quot;].HeaderText = &quot;Description&quot;;\n        DataGridView1.Columns[&quot;Withdrawals&quot;].HeaderText = &quot;W(-)&quot;;\n        DataGridView1.Columns[&quot;Deposits&quot;].HeaderText = &quot;D(+)&quot;;\n        DataGridView1.Columns[&quot;Balance&quot;].HeaderText = &quot;Balance&quot;;\n        DataGridView1.Columns[&quot;Balance&quot;].ReadOnly = true;\n        DataGridView1.Columns[&quot;Description&quot;].SortMode =\n            DataGridViewColumnSortMode.NotSortable;\n        DataGridView1.Columns[&quot;Withdrawals&quot;].SortMode =\n            DataGridViewColumnSortMode.NotSortable;\n        DataGridView1.Columns[&quot;Deposits&quot;].SortMode =\n            DataGridViewColumnSortMode.NotSortable;\n        DataGridView1.Columns[&quot;Balance&quot;].SortMode =\n            DataGridViewColumnSortMode.NotSortable;\n\n        // Add rows of data to the DataGridView.\n        DataGridView1.Rows.Add(new string[] {\n            &quot;Starting Balance&quot;, &quot;&quot;, &quot;&quot;, &quot;1000&quot; });\n        DataGridView1.Rows.Add(new string[] {\n            &quot;Paycheck Deposit&quot;, &quot;&quot;, &quot;850&quot;, &quot;&quot; });\n        DataGridView1.Rows.Add(new string[] { &quot;Rent&quot;, &quot;-500&quot;, &quot;&quot;, &quot;&quot; });\n        DataGridView1.Rows.Add(new string[] { &quot;Groceries&quot;, &quot;-25&quot;, &quot;&quot;, &quot;&quot; });\n        DataGridView1.Rows.Add(new string[] { &quot;Tax Return&quot;, &quot;&quot;, &quot;300&quot;, &quot;&quot; });\n\n\n        // Allow the user to edit the starting balance cell\n        DataGridView1.Rows[0].ReadOnly = true;\n        DataGridView1.Rows[0].Cells[&quot;Balance&quot;].ReadOnly = false;\n\n        // Autosize the columns.\n        DataGridView1.AutoResizeColumns();\n    }\n\n    private void DataGridView1_CellValueChanged(\n        object sender, DataGridViewCellEventArgs e)\n    {\n        // Update the balance column whenever the value of any cell changes.\n        UpdateBalance();\n    }\n\n    private void DataGridView1_RowsRemoved(\n        object sender, DataGridViewRowsRemovedEventArgs e)\n    {\n        // Update the balance column whenever rows are deleted.\n        UpdateBalance();\n    }\n\n    private void UpdateBalance()\n    {\n        int counter;\n        int balance;\n        int deposit;\n        int withdrawal;\n\n        // Iterate through the rows, skipping the Starting Balance row.\n        for (counter = 1; counter &lt; (DataGridView1.Rows.Count - 1);\n            counter++)\n        {\n            deposit = 0;\n            withdrawal = 0;\n            balance = int.Parse(DataGridView1.Rows[counter - 1]\n                .Cells[&quot;Balance&quot;].Value.ToString());\n\n            if (DataGridView1.Rows[counter].Cells[&quot;Deposits&quot;].Value != null)\n            {\n                // Verify that the cell value is not an empty string.\n                if (DataGridView1.Rows[counter]\n                    .Cells[&quot;Deposits&quot;].Value.ToString().Length != 0)\n                {\n                    deposit = int.Parse(DataGridView1.Rows[counter]\n                        .Cells[&quot;Deposits&quot;].Value.ToString());\n                }\n            }\n\n            if (DataGridView1.Rows[counter].Cells[&quot;Withdrawals&quot;].Value != null)\n            {\n                if (DataGridView1.Rows[counter]\n                    .Cells[&quot;Withdrawals&quot;].Value.ToString().Length != 0)\n                {\n                    withdrawal = int.Parse(DataGridView1.Rows[counter]\n                        .Cells[&quot;Withdrawals&quot;].Value.ToString());\n                }\n            }\n            DataGridView1.Rows[counter].Cells[&quot;Balance&quot;].Value =\n                (balance + deposit + withdrawal).ToString();\n        }\n    }\n\n    private void DataGridView1_SelectionChanged(object sender, EventArgs e)\n    {\n        // Update the labels to reflect changes to the selection.\n        UpdateLabelText();\n    }\n\n    private void DataGridView1_UserAddedRow(\n        object sender, DataGridViewRowEventArgs e)\n    {\n        // Update the labels to reflect changes to the number of entries.\n        UpdateLabelText();\n    }\n\n    private void UpdateLabelText()\n    {\n        int WithdrawalTotal = 0;\n        int DepositTotal = 0;\n        int SelectedCellTotal = 0;\n        int counter;\n\n        // Iterate through all the rows and sum up the appropriate columns.\n        for (counter = 0; counter &lt; (DataGridView1.Rows.Count);\n            counter++)\n        {\n            if (DataGridView1.Rows[counter].Cells[&quot;Withdrawals&quot;].Value\n                != null)\n            {\n                if (DataGridView1.Rows[counter].\n                    Cells[&quot;Withdrawals&quot;].Value.ToString().Length != 0)\n                {\n                    WithdrawalTotal += int.Parse(DataGridView1.Rows[counter].\n                        Cells[&quot;Withdrawals&quot;].Value.ToString());\n                }\n            }\n\n            if (DataGridView1.Rows[counter].Cells[&quot;Deposits&quot;].Value != null)\n            {\n                if (DataGridView1.Rows[counter]\n                    .Cells[&quot;Deposits&quot;].Value.ToString().Length != 0)\n                {\n                    DepositTotal += int.Parse(DataGridView1.Rows[counter]\n                        .Cells[&quot;Deposits&quot;].Value.ToString());\n                }\n            }\n        }\n\n        // Iterate through the SelectedCells collection and sum up the values.\n        for (counter = 0;\n            counter &lt; (DataGridView1.SelectedCells.Count); counter++)\n        {\n            if (DataGridView1.SelectedCells[counter].FormattedValueType ==\n                Type.GetType(&quot;System.String&quot;))\n            {\n                string value = null;\n\n                // If the cell contains a value that has not been commited,\n                // use the modified value.\n                if (DataGridView1.IsCurrentCellDirty == true)\n                {\n\n                    value = DataGridView1.SelectedCells[counter]\n                        .EditedFormattedValue.ToString();\n                }\n                else\n                {\n                    value = DataGridView1.SelectedCells[counter]\n                        .FormattedValue.ToString();\n                }\n                if (value != null)\n                {\n                    // Ignore cells in the Description column.\n                    if (DataGridView1.SelectedCells[counter].ColumnIndex !=\n                        DataGridView1.Columns[&quot;Description&quot;].Index)\n                    {\n                        if (value.Length != 0)\n                        {\n                            SelectedCellTotal += int.Parse(value);\n                        }\n                    }\n                }\n            }\n        }\n\n        // Set the labels to reflect the current state of the DataGridView.\n        Label1.Text = &quot;Withdrawals Total: &quot; + WithdrawalTotal.ToString();\n        Label2.Text = &quot;Deposits Total: &quot; + DepositTotal.ToString();\n        Label3.Text = &quot;Selected Cells Total: &quot; + SelectedCellTotal.ToString();\n        Label4.Text = &quot;Total entries: &quot; + DataGridView1.RowCount.ToString();\n    }\n\n    private void DataGridView1_CellValidating(object sender,\n        DataGridViewCellValidatingEventArgs e)\n    {\n        int testint;\n\n        if (e.ColumnIndex != 0)\n        {\n            if (e.FormattedValue.ToString().Length != 0)\n            {\n                // Try to convert the cell value to an int.\n                if (!int.TryParse(e.FormattedValue.ToString(), out testint))\n                {\n                    DataGridView1.Rows[e.RowIndex].ErrorText =\n                        &quot;Error: Invalid entry&quot;;\n                    e.Cancel = true;\n                }\n            }\n        }\n    }\n\n    private void DataGridView1_CellValidated(object sender,\n        DataGridViewCellEventArgs e)\n    {\n        // Clear any error messages that may have been set in cell validation.\n        DataGridView1.Rows[e.RowIndex].ErrorText = null;\n    }\n\n    private void DataGridView1_UserDeletingRow(object sender,\n        DataGridViewRowCancelEventArgs e)\n    {\n        DataGridViewRow startingBalanceRow = DataGridView1.Rows[0];\n\n        // Check if the Starting Balance row is included in the selected rows\n        if (DataGridView1.SelectedRows.Contains(startingBalanceRow))\n        {\n            // Do not allow the user to delete the Starting Balance row.\n            MessageBox.Show(&quot;Cannot delete Starting Balance row!&quot;);\n\n            // Cancel the deletion if the Starting Balance row is included.\n            e.Cancel = true;\n        }\n    }\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewSelectionSum#00\">Imports System\nImports System.Drawing\nImports System.Windows.Forms\n\nPublic Class Form1\n    Inherits Form\n\n    Private WithEvents DataGridView1 As New DataGridView()\n    Private FlowLayoutPanel1 As New FlowLayoutPanel()\n    Private Label1 As New Label()\n    Private Label2 As New Label()\n    Private Label3 As New Label()\n    Private Label4 As New Label()\n\n    &#39; Establish the main entry point for the application.\n    &lt;STAThreadAttribute()&gt; _\n    Public Shared Sub Main()\n        Application.Run(New Form1())\n    End Sub\n\n    Public Sub New()\n\n        &#39; Set the FlowLayoutPanel1 properties.\n        With Me\n            .AutoSize = True\n\n            With .FlowLayoutPanel1\n                .FlowDirection = FlowDirection.TopDown\n                .Location = New System.Drawing.Point(354, 0)\n                .AutoSize = True\n                .Controls.Add(Label1)\n                .Controls.Add(Label2)\n                .Controls.Add(Label3)\n                .Controls.Add(Label4)\n            End With\n\n            .Controls.Add(Me.FlowLayoutPanel1)\n            .Controls.Add(DataGridView1)\n\n\n            &#39; Set the Label properties.\n            .Label1.AutoSize = True\n            .Label2.AutoSize = True\n            .Label3.AutoSize = True\n\n            .PopulateDataGridView()\n            .UpdateLabelText()\n            .UpdateBalance()\n        End With\n    End Sub\n\n    &#39; Replace this with your own code to populate the DataGridView.\n    Private Sub PopulateDataGridView()\n        With Me.DataGridView1\n            .Size = New Size(350, 400)\n            .AllowUserToDeleteRows = True\n\n            &#39; Add columns to the DataGridView.\n            .ColumnCount = 4\n            .SelectionMode = DataGridViewSelectionMode.RowHeaderSelect\n\n            &#39; Set the properties of the DataGridView columns.\n            .Columns(0).Name = &quot;Description&quot;\n            .Columns(1).Name = &quot;Withdrawals&quot;\n            .Columns(2).Name = &quot;Deposits&quot;\n            .Columns(3).Name = &quot;Balance&quot;\n            .Columns(&quot;Description&quot;).HeaderText = &quot;Description&quot;\n            .Columns(&quot;Withdrawals&quot;).HeaderText = &quot;W(-)&quot;\n            .Columns(&quot;Deposits&quot;).HeaderText = &quot;D(+)&quot;\n            .Columns(&quot;Balance&quot;).HeaderText = &quot;Balance&quot;\n            .Columns(&quot;Balance&quot;).ReadOnly = True\n            .Columns(&quot;Description&quot;).SortMode = _\n                DataGridViewColumnSortMode.NotSortable\n            .Columns(&quot;Withdrawals&quot;).SortMode = _\n                DataGridViewColumnSortMode.NotSortable\n            .Columns(&quot;Deposits&quot;).SortMode = _\n                DataGridViewColumnSortMode.NotSortable\n            .Columns(&quot;Balance&quot;).SortMode = _\n                DataGridViewColumnSortMode.NotSortable\n        End With\n\n        &#39; Add rows of data to the DataGridView.\n        With Me.DataGridView1.Rows\n            .Add(New String() {&quot;Starting Balance&quot;, &quot;&quot;, &quot;&quot;, &quot;1000&quot;})\n            .Add(New String() {&quot;Paycheck Deposit&quot;, &quot;&quot;, &quot;850&quot;, &quot;&quot;})\n            .Add(New String() {&quot;Rent&quot;, &quot;-500&quot;, &quot;&quot;, &quot;&quot;})\n            .Add(New String() {&quot;Groceries&quot;, &quot;-25&quot;, &quot;&quot;, &quot;&quot;})\n            .Add(New String() {&quot;Tax Return&quot;, &quot;&quot;, &quot;300&quot;, &quot;&quot;})\n        End With\n\n        &#39; Allow the user to edit the starting balance cell\n        DataGridView1.Rows(0).ReadOnly = True\n        DataGridView1.Rows(0).Cells(&quot;Balance&quot;).ReadOnly = False\n\n        &#39; Autosize the columns.\n        Me.DataGridView1.AutoResizeColumns()\n\n    End Sub\n\n    Private Sub CellValueChanged(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles DataGridView1.CellValueChanged\n\n        &#39; Update the balance column whenever the values of any cell changes.\n        UpdateBalance()\n    End Sub\n\n    Private Sub RowsRemoved(ByVal sender As Object, _\n        ByVal e As DataGridViewRowsRemovedEventArgs) _\n        Handles DataGridView1.RowsRemoved\n\n        &#39; Update the balance column whenever rows are deleted.\n        UpdateBalance()\n    End Sub\n\n    Private Sub UpdateBalance()\n        Dim counter As Integer\n        Dim balance As Integer\n        Dim deposit As Integer\n        Dim withdrawal As Integer\n\n        &#39; Iterate through the rows, skipping the Starting Balance Row.\n        For counter = 1 To (DataGridView1.Rows.Count - 2)\n            deposit = 0\n            withdrawal = 0\n            balance = Integer.Parse(DataGridView1.Rows(counter - 1) _\n                .Cells(&quot;Balance&quot;).Value.ToString())\n\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Deposits&quot;).Value Is Nothing Then\n\n                &#39; Verify that the cell value is not an empty string.\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Deposits&quot;).Value.ToString().Length = 0 Then\n                    deposit = Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Deposits&quot;).Value.ToString())\n                End If\n            End If\n\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Withdrawals&quot;).Value Is Nothing Then\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Withdrawals&quot;).Value.ToString().Length = 0 Then\n                    withdrawal = Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Withdrawals&quot;).Value.ToString())\n                End If\n            End If\n\n            DataGridView1.Rows(counter).Cells(&quot;Balance&quot;).Value = _\n                (balance + deposit + withdrawal).ToString()\n        Next\n    End Sub\n\n    Private Sub SelectionChanged(ByVal sender As Object, _\n        ByVal e As EventArgs) Handles DataGridView1.SelectionChanged\n\n        &#39; Update the labels to reflect changes to the selection.\n        UpdateLabelText()\n    End Sub\n\n    Private Sub UserAddedRow(ByVal sender As Object, _\n        ByVal e As DataGridViewRowEventArgs) _\n        Handles DataGridView1.UserAddedRow\n\n        &#39; Update the labels to reflect changes to the number of entries.\n        UpdateLabelText()\n    End Sub\n\n    Private Sub UpdateLabelText()\n        Dim WithdrawalTotal As Integer = 0\n        Dim DepositTotal As Integer = 0\n        Dim SelectedCellTotal As Integer = 0\n        Dim counter As Integer\n\n        &#39; Iterate through all the rows and sum up the appropriate columns.\n        For counter = 0 To (DataGridView1.Rows.Count - 1)\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Withdrawals&quot;).Value Is Nothing Then\n\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Withdrawals&quot;).Value.ToString().Length = 0 Then\n\n                    WithdrawalTotal += _\n                        Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Withdrawals&quot;).Value.ToString())\n                End If\n            End If\n\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Deposits&quot;).Value Is Nothing Then\n\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Deposits&quot;).Value.ToString().Length = 0 Then\n\n                    DepositTotal += _\n                        Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Deposits&quot;).Value.ToString())\n                End If\n            End If\n        Next\n\n        &#39; Iterate through the SelectedCells collection and sum up the values.\n        For counter = 0 To (DataGridView1.SelectedCells.Count - 1)\n            If DataGridView1.SelectedCells(counter).FormattedValueType Is _\n            Type.GetType(&quot;System.String&quot;) Then\n\n                Dim value As String = Nothing\n\n                &#39; If the cell contains a value that has not been commited,\n                &#39; use the modified value.\n                If (DataGridView1.IsCurrentCellDirty = True) Then\n\n                    value = DataGridView1.SelectedCells(counter) _\n                        .EditedFormattedValue.ToString()\n                Else\n\n                    value = DataGridView1.SelectedCells(counter) _\n                        .FormattedValue.ToString()\n                End If\n\n                If value IsNot Nothing Then\n\n                    &#39; Ignore cells in the Description column.\n                    If Not DataGridView1.SelectedCells(counter).ColumnIndex = _\n                        DataGridView1.Columns(&quot;Description&quot;).Index Then\n\n                        If Not value.Length = 0 Then\n                            SelectedCellTotal += Integer.Parse(value)\n                        End If\n                    End If\n                End If\n            End If\n\n        Next\n\n        &#39; Set the labels to reflect the current state of the DataGridView.\n        Label1.Text = &quot;Withdrawals Total: &quot; &amp; WithdrawalTotal.ToString()\n        Label2.Text = &quot;Deposits Total: &quot; &amp; DepositTotal.ToString()\n        Label3.Text = &quot;Selected Cells Total: &quot; &amp; SelectedCellTotal.ToString()\n        Label4.Text = &quot;Total entries: &quot; &amp; DataGridView1.RowCount.ToString()\n    End Sub\n\n    Private Sub CellValidating(ByVal sender As Object, _\n        ByVal e As DataGridViewCellValidatingEventArgs) _\n        Handles DataGridView1.CellValidating\n\n        Dim testInteger As Integer\n\n        If Not e.ColumnIndex = 0 Then\n            If Not e.FormattedValue.ToString().Length = 0 Then\n\n                &#39; Try to convert the cell value to an Integer.\n                If Not Integer.TryParse(e.FormattedValue.ToString(), _\n                    testInteger) Then\n\n                    DataGridView1.Rows(e.RowIndex).ErrorText = _\n                        &quot;Error: Invalid entry&quot;\n\n                    e.Cancel = True\n                End If\n            End If\n        End If\n    End Sub\n\n    Private Sub CellValidated(ByVal sender As Object, _\n        ByVal e As DataGridViewCellEventArgs) _\n        Handles DataGridView1.CellValidated\n\n        &#39; Clear any error messages that may have been set in cell validation.\n        DataGridView1.Rows(e.RowIndex).ErrorText = Nothing\n    End Sub\n\n    Private Sub UserDeletingRow(ByVal sender As Object, _\n        ByVal e As DataGridViewRowCancelEventArgs) _\n        Handles DataGridView1.UserDeletingRow\n\n        Dim startingBalanceRow As DataGridViewRow = DataGridView1.Rows(0)\n\n        &#39; Check if the starting balance row is included in the selected rows\n        If DataGridView1.SelectedRows.Contains(startingBalanceRow) Then\n            &#39; Do not allow the user to delete the Starting Balance row.\n            MessageBox.Show(&quot;Cannot delete Starting Balance row!&quot;)\n\n            &#39; Cancel the deletion if the Starting Balance row is included.\n            e.Cancel = True\n        End If\n    End Sub\n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_SortCompare\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SortCompare</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> compares two cell values to perform a sort operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewSortCompareEventHandler SortCompare;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event occurs only when the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_DataSource_\" data-linktype=\"relative-path\">DataSource</a> property is not set and the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property value is <code>false</code>.  </p>\n<p> This event compares pairs of cells in the column being sorted. It occurs only when the user clicks the header of a column with a <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_SortMode_\" data-linktype=\"relative-path\">SortMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnsortmode\" data-linktype=\"relative-path\">DataGridViewColumnSortMode</a>, or when you call the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Sort_System_Windows_Forms_DataGridViewColumn_System_ComponentModel_ListSortDirection_\" data-linktype=\"relative-path\">Sort(DataGridViewColumn,ListSortDirection)</a> overload. When this event occurs for a column with a <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumn#System_Windows_Forms_DataGridViewColumn_SortMode_\" data-linktype=\"relative-path\">SortMode</a> property value of <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnsortmode\" data-linktype=\"relative-path\">DataGridViewColumnSortMode</a>, you must display the sorting glyph yourself through the <a class=\"xref\" href=\"system.windows.forms.datagridviewcolumnheadercell#System_Windows_Forms_DataGridViewColumnHeaderCell_SortGlyphDirection_\" data-linktype=\"relative-path\">SortGlyphDirection</a> property.  </p>\n<p> You can use this event to sort rows using the cell values in one column or in multiple columns. Use the <a class=\"xref\" href=\"system.windows.forms.datagridviewsortcompareeventargs#System_Windows_Forms_DataGridViewSortCompareEventArgs_CellValue1_\" data-linktype=\"relative-path\">CellValue1</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewsortcompareeventargs#System_Windows_Forms_DataGridViewSortCompareEventArgs_CellValue2_\" data-linktype=\"relative-path\">CellValue2</a> properties to compare cell values in the column specified in the <a class=\"xref\" href=\"system.windows.forms.datagridviewsortcompareeventargs#System_Windows_Forms_DataGridViewSortCompareEventArgs_Column_\" data-linktype=\"relative-path\">Column</a> property. Use the <a class=\"xref\" href=\"system.windows.forms.datagridviewsortcompareeventargs#System_Windows_Forms_DataGridViewSortCompareEventArgs_RowIndex1_\" data-linktype=\"relative-path\">RowIndex1</a> and <a class=\"xref\" href=\"system.windows.forms.datagridviewsortcompareeventargs#System_Windows_Forms_DataGridViewSortCompareEventArgs_RowIndex2_\" data-linktype=\"relative-path\">RowIndex2</a> properties to access values in other columns through the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Rows_\" data-linktype=\"relative-path\">Rows</a> collection.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the SortCompare in a multiple column sort. This example is part of a larger example provided in <a href=\"../Topic/How%20to:%20Customize%20Sorting%20in%20the%20Windows%20Forms%20DataGridView%20Control.md\" data-linktype=\"relative-path\">How to: Customize Sorting in the Windows Forms DataGridView Control</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridView.SortCompare#10\">    Private Sub DataGridView1_SortCompare( _\n        ByVal sender As Object, ByVal e As DataGridViewSortCompareEventArgs) _\n        Handles DataGridView1.SortCompare\n\n        &#39; Try to sort based on the contents of the cell in the current column.\n        e.SortResult = System.String.Compare(e.CellValue1.ToString(), _\n            e.CellValue2.ToString())\n\n        &#39; If the cells are equal, sort based on the ID column.\n        If (e.SortResult = 0) AndAlso Not (e.Column.Name = &quot;ID&quot;) Then\n            e.SortResult = System.String.Compare( _\n                DataGridView1.Rows(e.RowIndex1).Cells(&quot;ID&quot;).Value.ToString(), _\n                DataGridView1.Rows(e.RowIndex2).Cells(&quot;ID&quot;).Value.ToString())\n        End If\n\n        e.Handled = True\n\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridView.SortCompare#10\">    private void dataGridView1_SortCompare(object sender,\n        DataGridViewSortCompareEventArgs e)\n    {\n        // Try to sort based on the cells in the current column.\n        e.SortResult = System.String.Compare(\n            e.CellValue1.ToString(), e.CellValue2.ToString());\n\n        // If the cells are equal, sort based on the ID column.\n        if (e.SortResult == 0 &amp;&amp; e.Column.Name != &quot;ID&quot;)\n        {\n            e.SortResult = System.String.Compare(\n                dataGridView1.Rows[e.RowIndex1].Cells[&quot;ID&quot;].Value.ToString(),\n                dataGridView1.Rows[e.RowIndex2].Cells[&quot;ID&quot;].Value.ToString());\n        }\n        e.Handled = true;\n    }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_Sorted\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Sorted</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control completes a sorting operation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Sorted;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event does not occur when the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_VirtualMode_\" data-linktype=\"relative-path\">VirtualMode</a> property is set to <code>true</code> and the control is sorted by an unbound column.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates how to ensure that the current cell is visible after sorting. This code works only with an unbound <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control. With a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control bound to an external data source, the current cell is not automatically persisted when sorting.  </p>\n<p> To run this example, paste the following code into a form that contains a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>dataGridView1</code>. In C#, you must also connect the Sorted event to the event handler.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewMisc#150\">    private void dataGridView1_Sorted(object sender, EventArgs e)\n    {\n        this.dataGridView1.FirstDisplayedCell = this.dataGridView1.CurrentCell;\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewMisc#150\">    Private Sub dataGridView1_Sorted(ByVal sender As Object, _\n        ByVal e As System.EventArgs) Handles dataGridView1.Sorted\n\n        Me.dataGridView1.FirstDisplayedCell = Me.dataGridView1.CurrentCell\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_StyleChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StyleChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the control style changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler StyleChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is not relevant to this control.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_TextChanged\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TextChanged</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the value of the <span class=\"xref\">stem.Windows.Forms.DataGridView.Text*</span> property changes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler TextChanged;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Although the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_Text_\" data-linktype=\"relative-path\">Text</a> property is not meaningful for this control, its value can be changed, thereby causing this event to occur.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_UserAddedRow\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserAddedRow</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user has finished adding a row to the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowEventHandler UserAddedRow;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the UserAddedRow event to update a label displaying the total number of entries in a <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a>. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"relative-path\">SelectionChanged</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewSelectionSum#40\">    private void DataGridView1_UserAddedRow(\n        object sender, DataGridViewRowEventArgs e)\n    {\n        // Update the labels to reflect changes to the number of entries.\n        UpdateLabelText();\n    }\n\n    private void UpdateLabelText()\n    {\n        int WithdrawalTotal = 0;\n        int DepositTotal = 0;\n        int SelectedCellTotal = 0;\n        int counter;\n\n        // Iterate through all the rows and sum up the appropriate columns.\n        for (counter = 0; counter &lt; (DataGridView1.Rows.Count);\n            counter++)\n        {\n            if (DataGridView1.Rows[counter].Cells[&quot;Withdrawals&quot;].Value\n                != null)\n            {\n                if (DataGridView1.Rows[counter].\n                    Cells[&quot;Withdrawals&quot;].Value.ToString().Length != 0)\n                {\n                    WithdrawalTotal += int.Parse(DataGridView1.Rows[counter].\n                        Cells[&quot;Withdrawals&quot;].Value.ToString());\n                }\n            }\n\n            if (DataGridView1.Rows[counter].Cells[&quot;Deposits&quot;].Value != null)\n            {\n                if (DataGridView1.Rows[counter]\n                    .Cells[&quot;Deposits&quot;].Value.ToString().Length != 0)\n                {\n                    DepositTotal += int.Parse(DataGridView1.Rows[counter]\n                        .Cells[&quot;Deposits&quot;].Value.ToString());\n                }\n            }\n        }\n\n        // Iterate through the SelectedCells collection and sum up the values.\n        for (counter = 0;\n            counter &lt; (DataGridView1.SelectedCells.Count); counter++)\n        {\n            if (DataGridView1.SelectedCells[counter].FormattedValueType ==\n                Type.GetType(&quot;System.String&quot;))\n            {\n                string value = null;\n\n                // If the cell contains a value that has not been commited,\n                // use the modified value.\n                if (DataGridView1.IsCurrentCellDirty == true)\n                {\n\n                    value = DataGridView1.SelectedCells[counter]\n                        .EditedFormattedValue.ToString();\n                }\n                else\n                {\n                    value = DataGridView1.SelectedCells[counter]\n                        .FormattedValue.ToString();\n                }\n                if (value != null)\n                {\n                    // Ignore cells in the Description column.\n                    if (DataGridView1.SelectedCells[counter].ColumnIndex !=\n                        DataGridView1.Columns[&quot;Description&quot;].Index)\n                    {\n                        if (value.Length != 0)\n                        {\n                            SelectedCellTotal += int.Parse(value);\n                        }\n                    }\n                }\n            }\n        }\n\n        // Set the labels to reflect the current state of the DataGridView.\n        Label1.Text = &quot;Withdrawals Total: &quot; + WithdrawalTotal.ToString();\n        Label2.Text = &quot;Deposits Total: &quot; + DepositTotal.ToString();\n        Label3.Text = &quot;Selected Cells Total: &quot; + SelectedCellTotal.ToString();\n        Label4.Text = &quot;Total entries: &quot; + DataGridView1.RowCount.ToString();\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewSelectionSum#40\">    Private Sub UserAddedRow(ByVal sender As Object, _\n        ByVal e As DataGridViewRowEventArgs) _\n        Handles DataGridView1.UserAddedRow\n\n        &#39; Update the labels to reflect changes to the number of entries.\n        UpdateLabelText()\n    End Sub\n\n    Private Sub UpdateLabelText()\n        Dim WithdrawalTotal As Integer = 0\n        Dim DepositTotal As Integer = 0\n        Dim SelectedCellTotal As Integer = 0\n        Dim counter As Integer\n\n        &#39; Iterate through all the rows and sum up the appropriate columns.\n        For counter = 0 To (DataGridView1.Rows.Count - 1)\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Withdrawals&quot;).Value Is Nothing Then\n\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Withdrawals&quot;).Value.ToString().Length = 0 Then\n\n                    WithdrawalTotal += _\n                        Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Withdrawals&quot;).Value.ToString())\n                End If\n            End If\n\n            If Not DataGridView1.Rows(counter) _\n                .Cells(&quot;Deposits&quot;).Value Is Nothing Then\n\n                If Not DataGridView1.Rows(counter) _\n                    .Cells(&quot;Deposits&quot;).Value.ToString().Length = 0 Then\n\n                    DepositTotal += _\n                        Integer.Parse(DataGridView1.Rows(counter) _\n                        .Cells(&quot;Deposits&quot;).Value.ToString())\n                End If\n            End If\n        Next\n\n        &#39; Iterate through the SelectedCells collection and sum up the values.\n        For counter = 0 To (DataGridView1.SelectedCells.Count - 1)\n            If DataGridView1.SelectedCells(counter).FormattedValueType Is _\n            Type.GetType(&quot;System.String&quot;) Then\n\n                Dim value As String = Nothing\n\n                &#39; If the cell contains a value that has not been commited,\n                &#39; use the modified value.\n                If (DataGridView1.IsCurrentCellDirty = True) Then\n\n                    value = DataGridView1.SelectedCells(counter) _\n                        .EditedFormattedValue.ToString()\n                Else\n\n                    value = DataGridView1.SelectedCells(counter) _\n                        .FormattedValue.ToString()\n                End If\n\n                If value IsNot Nothing Then\n\n                    &#39; Ignore cells in the Description column.\n                    If Not DataGridView1.SelectedCells(counter).ColumnIndex = _\n                        DataGridView1.Columns(&quot;Description&quot;).Index Then\n\n                        If Not value.Length = 0 Then\n                            SelectedCellTotal += Integer.Parse(value)\n                        End If\n                    End If\n                End If\n            End If\n\n        Next\n\n        &#39; Set the labels to reflect the current state of the DataGridView.\n        Label1.Text = &quot;Withdrawals Total: &quot; &amp; WithdrawalTotal.ToString()\n        Label2.Text = &quot;Deposits Total: &quot; &amp; DepositTotal.ToString()\n        Label3.Text = &quot;Selected Cells Total: &quot; &amp; SelectedCellTotal.ToString()\n        Label4.Text = &quot;Total entries: &quot; &amp; DataGridView1.RowCount.ToString()\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_UserDeletedRow\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserDeletedRow</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user has finished deleting a row from the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowEventHandler UserDeletedRow;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the UserDeletedRow event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <a class=\"xref\" href=\"system.windows.forms.messagebox#System_Windows_Forms_MessageBox_Show_\" data-linktype=\"relative-path\">Show</a> with <a class=\"xref\" href=\"system.console#System_Console_WriteLine_\" data-linktype=\"relative-path\">WriteLine</a> or appending the message to a multiline <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a>.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> named <code>DataGridView1</code>. Then ensure that the event handler is associated with the UserDeletedRow event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#368\">private void DataGridView1_UserDeletedRow(Object sender, DataGridViewRowEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;UserDeletedRow Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#368\">Private Sub DataGridView1_UserDeletedRow(sender as Object, e as DataGridViewRowEventArgs) _ \n     Handles DataGridView1.UserDeletedRow\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Row&quot;, e.Row)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;UserDeletedRow Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_UserDeletingRow\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserDeletingRow</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user deletes a row from the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DataGridViewRowCancelEventHandler UserDeletingRow;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event can be canceled to prevent a row deletion from being completed.  </p>\n<p> For more information about handling events, see <a href=\"http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67\" data-linktype=\"external\">NIB: Consuming Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the UserDeletingRow event to cancel the deletion of rows from the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> if the starting balance row is included in the selection. This example is part of a larger example available in the <a class=\"xref\" href=\"system.windows.forms.datagridview#System_Windows_Forms_DataGridView_SelectionChanged\" data-linktype=\"relative-path\">SelectionChanged</a> event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.DataGridViewSelectionSum#20\">    private void DataGridView1_UserDeletingRow(object sender,\n        DataGridViewRowCancelEventArgs e)\n    {\n        DataGridViewRow startingBalanceRow = DataGridView1.Rows[0];\n\n        // Check if the Starting Balance row is included in the selected rows\n        if (DataGridView1.SelectedRows.Contains(startingBalanceRow))\n        {\n            // Do not allow the user to delete the Starting Balance row.\n            MessageBox.Show(&quot;Cannot delete Starting Balance row!&quot;);\n\n            // Cancel the deletion if the Starting Balance row is included.\n            e.Cancel = true;\n        }\n    }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.DataGridViewSelectionSum#20\">    Private Sub UserDeletingRow(ByVal sender As Object, _\n        ByVal e As DataGridViewRowCancelEventArgs) _\n        Handles DataGridView1.UserDeletingRow\n\n        Dim startingBalanceRow As DataGridViewRow = DataGridView1.Rows(0)\n\n        &#39; Check if the starting balance row is included in the selected rows\n        If DataGridView1.SelectedRows.Contains(startingBalanceRow) Then\n            &#39; Do not allow the user to delete the Starting Balance row.\n            MessageBox.Show(&quot;Cannot delete Starting Balance row!&quot;)\n\n            &#39; Cancel the deletion if the Starting Balance row is included.\n            e.Cancel = True\n        End If\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_System_ComponentModel_ISupportInitialize_BeginInit\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_System_ComponentModel_ISupportInitialize_BeginInit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ISupportInitialize.BeginInit()</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.ComponentModel.ISupportInitialize.BeginInit*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ISupportInitialize.BeginInit ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This method has already been called for this control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> instance is cast to an <a class=\"xref\" href=\"system.componentmodel.isupportinitialize\" data-linktype=\"relative-path\">ISupportInitialize</a> instance.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_DataGridView_System_ComponentModel_ISupportInitialize_EndInit\">\r\n    \r\n            <a id=\"System_Windows_Forms_DataGridView_System_ComponentModel_ISupportInitialize_EndInit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ISupportInitialize.EndInit()</div>        \r\n          </div>\r\n    \r\n            <p>For a description of this member, see <span class=\"xref\">stem.ComponentModel.ISupportInitialize.EndInit*</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ISupportInitialize.EndInit ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.forms.datagridview\" data-linktype=\"relative-path\">DataGridView</a> instance is cast to an <a class=\"xref\" href=\"system.componentmodel.isupportinitialize\" data-linktype=\"relative-path\">ISupportInitialize</a> instance.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.DataGridView.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.DataGridView.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AdvancedCellBorderStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AllowUserToAddRows\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_AllowUserToAddRowsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_AllowUserToAddRowsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AllowUserToDeleteRows\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_AllowUserToDeleteRowsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_AllowUserToDeleteRowsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AllowUserToOrderColumns\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_AllowUserToOrderColumnsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_AllowUserToOrderColumnsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AllowUserToResizeColumns\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_AllowUserToResizeColumnsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_AllowUserToResizeColumnsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AllowUserToResizeRows\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_AllowUserToResizeRowsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_AllowUserToResizeRowsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_AlternatingRowsDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_AlternatingRowsDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AreAllCellsSelected\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AutoGenerateColumns\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_AutoGenerateColumnsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_AutoGenerateColumnsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AutoResizeColumn\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AutoResizeColumns\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AutoResizeRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AutoResizeRows\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AutoSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_AutoSizeColumnModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_AutoSizeColumnModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AutoSizeColumnsMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_AutoSizeColumnsModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_AutoSizeColumnsModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AutoSizeRowsMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_AutoSizeRowsModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_AutoSizeRowsModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.BackColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.BackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_BackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_BackColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.BackgroundColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.BackgroundColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_BackgroundColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_BackgroundColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.BackgroundImage\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.BackgroundImageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_BackgroundImageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_BackgroundImageChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.BackgroundImageLayout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.BackgroundImageLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_BackgroundImageLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_BackgroundImageLayoutChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.BeginEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.BorderStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.BorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_BorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_BorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CancelEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CancelRowEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CancelRowEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CancelRowEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CanEnableIme\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellBeginEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellBeginEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellBeginEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellBorderStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellBorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellBorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellBorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellContentClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellContentClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellContentClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellContentDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellContentDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellContentDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellContextMenuStripChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellContextMenuStripChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellContextMenuStripChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellContextMenuStripNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellContextMenuStripNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellContextMenuStripNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellEndEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellEndEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellEndEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellErrorTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellErrorTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellErrorTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellErrorTextNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellErrorTextNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellErrorTextNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellFormatting\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellFormatting\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellFormatting\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellMouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellMouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellMouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellMouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellMouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellMouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellMouseDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellMouseDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellMouseDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellMouseEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellMouseEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellMouseEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellMouseLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellMouseLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellMouseLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellMouseMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellMouseMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellMouseMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellMouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellMouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellMouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellPainting\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellPainting\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellPainting\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellParsing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellParsing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellParsing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellStateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellStateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellStateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellStyleContentChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellStyleContentChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellStyleContentChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellToolTipTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellToolTipTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellToolTipTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellToolTipTextNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellToolTipTextNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellToolTipTextNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellValidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellValidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellValidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellValidating\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellValidating\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellValidating\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellValueChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellValueChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellValueChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellValueNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellValueNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellValueNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CellValuePushed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CellValuePushed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CellValuePushed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ClearSelection\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ClipboardCopyMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnAdded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnAdded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnAdded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnContextMenuStripChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnContextMenuStripChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnCount\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnDataPropertyNameChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnDataPropertyNameChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnDisplayIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnDisplayIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnDividerDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnDividerDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnDividerDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnDividerWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnDividerWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnDividerWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnHeaderCellChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnHeaderCellChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnHeaderCellChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnHeaderMouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnHeaderMouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnHeaderMouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnHeaderMouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnHeaderMouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnHeadersBorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnHeadersBorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnHeadersDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnHeadersDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnHeadersHeight\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnHeadersHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnHeadersHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnHeadersHeightSizeModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnHeadersHeightSizeModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnHeadersVisible\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnMinimumWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnMinimumWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnNameChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnNameChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnNameChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnRemoved\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnRemoved\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnRemoved\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.Columns\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnSortModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnSortModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnSortModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnStateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnStateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnStateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnToolTipTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnToolTipTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnToolTipTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ColumnWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ColumnWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ColumnWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CommitEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CreateAccessibilityInstance\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CreateColumnsInstance\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CreateControlsInstance\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CreateRowsInstance\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CurrentCell\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CurrentCellAddress\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CurrentCellChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CurrentCellChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CurrentCellChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_CurrentCellDirtyStateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_CurrentCellDirtyStateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.CurrentRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.DataBindingComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_DataBindingComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_DataBindingComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.DataError\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_DataError\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_DataError\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.DataMember\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.DataMemberChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_DataMemberChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_DataMemberChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.DataSource\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.DataSourceChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_DataSourceChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_DataSourceChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.DefaultCellStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.DefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_DefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_DefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.DefaultSize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.DefaultValuesNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_DefaultValuesNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_DefaultValuesNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.DisplayedColumnCount\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.DisplayedRowCount\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.DisplayRectangle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.EditingControl\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.EditingControlShowing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_EditingControlShowing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_EditingControlShowing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.EditingPanel\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.EditMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.EditModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_EditModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_EditModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.EnableHeadersVisualStyles\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.EndEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.FirstDisplayedCell\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.Font\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.FontChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_FontChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_FontChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ForeColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.GetAccessibilityObjectById\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.GetCellCount\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.GetCellDisplayRectangle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.GetClipboardContent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.GetColumnDisplayRectangle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.GetRowDisplayRectangle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.GridColor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.GridColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_GridColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_GridColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.HitTest\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.HorizontalScrollBar\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.HorizontalScrollingOffset\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.InvalidateCell\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.InvalidateColumn\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.InvalidateRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.IsCurrentCellDirty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.IsCurrentCellInEditMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.IsCurrentRowDirty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.IsInputChar\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.IsInputKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.Item\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.MultiSelect\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.MultiSelectChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_MultiSelectChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_MultiSelectChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.NewRowIndex\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.NewRowNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_NewRowNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_NewRowNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.NotifyCurrentCellDirty\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnBackgroundColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnBindingContextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnBorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCancelRowEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellBeginEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellBorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellContentClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellContentDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellEndEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellErrorTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellErrorTextNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellFormatting\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellMouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellMouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellMouseDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellMouseEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellMouseLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellMouseMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellMouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellPainting\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellParsing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellStateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellStyleContentChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellToolTipTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellValidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellValidating\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellValueChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellValueNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCellValuePushed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnAdded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnNameChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnRemoved\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnSortModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnStateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnColumnWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCurrentCellChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnCursorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnDataBindingComplete\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnDataError\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnDataMemberChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnDataSourceChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnDefaultValuesNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnEditingControlShowing\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnEditModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnEnabledChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnFontChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnForeColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnGotFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnGridColorChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnHandleCreated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnHandleDestroyed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnKeyDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnKeyPress\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnKeyUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnLayout\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnLostFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnMouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnMouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnMouseDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnMouseEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnMouseLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnMouseMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnMouseUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnMouseWheel\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnMultiSelectChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnNewRowNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnPaint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnReadOnlyChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnResize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRightToLeftChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowDividerDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowDividerHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowErrorTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowErrorTextNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowHeaderCellChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowHeaderMouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowHeightInfoPushed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowPostPaint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowPrePaint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowsAdded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowsRemoved\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowStateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowUnshared\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowValidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnRowValidating\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnScroll\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnSelectionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnSortCompare\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnSorted\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnUserAddedRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnUserDeletedRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnUserDeletingRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnValidating\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.OnVisibleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.Padding\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.PaddingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_PaddingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_PaddingChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.PaintBackground\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessAKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessDataGridViewKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessDeleteKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessDialogKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessDownKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessEndKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessEnterKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessEscapeKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessF2Key\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessHomeKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessInsertKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessKeyEventArgs\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessKeyPreview\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessLeftKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessNextKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessPriorKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessRightKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessSpaceKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessTabKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessUpKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ProcessZeroKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ReadOnly\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ReadOnlyChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_ReadOnlyChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_ReadOnlyChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RefreshEdit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ResetText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowContextMenuStripChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowContextMenuStripChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowContextMenuStripChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowContextMenuStripNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowContextMenuStripNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowContextMenuStripNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowCount\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowDirtyStateNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowDirtyStateNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowDirtyStateNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowDividerDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowDividerDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowDividerDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowDividerHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowDividerHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowDividerHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowEnter\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowErrorTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowErrorTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowErrorTextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowErrorTextNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowErrorTextNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowErrorTextNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowHeaderCellChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowHeaderCellChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowHeaderCellChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowHeaderMouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowHeaderMouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowHeaderMouseClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowHeaderMouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowHeaderMouseDoubleClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowHeadersBorderStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowHeadersBorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowHeadersBorderStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowHeadersDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowHeadersDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowHeadersVisible\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowHeadersWidth\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowHeadersWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowHeadersWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowHeadersWidthChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowHeadersWidthSizeModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowHeadersWidthSizeModeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowHeightInfoNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowHeightInfoNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowHeightInfoNeeded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowHeightInfoPushed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowHeightInfoPushed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowHeightInfoPushed\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowLeave\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowMinimumHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowMinimumHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowMinimumHeightChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowPostPaint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowPostPaint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowPostPaint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowPrePaint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowPrePaint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowPrePaint\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.Rows\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowsAdded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowsAdded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowsAdded\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowsDefaultCellStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowsDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowsDefaultCellStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowsRemoved\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowsRemoved\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowsRemoved\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowStateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowStateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowStateChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowTemplate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowUnshared\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowUnshared\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowUnshared\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowValidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowValidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowValidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.RowValidating\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_RowValidating\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_RowValidating\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.Scroll\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_Scroll\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_Scroll\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ScrollBars\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.SelectAll\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.SelectedCells\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.SelectedColumns\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.SelectedRows\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.SelectionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_SelectionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_SelectionChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.SelectionMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.SetBoundsCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.SetCurrentCellAddressCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.SetSelectedCellCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.SetSelectedColumnCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.SetSelectedRowCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ShowCellErrors\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ShowCellToolTips\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ShowEditingIcon\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ShowRowErrors\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.Sort\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.SortCompare\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_SortCompare\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_SortCompare\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.Sorted\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_Sorted\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_Sorted\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.SortedColumn\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.SortOrder\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.StandardTab\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.StyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_StyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_StyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ISupportInitialize.BeginInit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.ISupportInitialize.EndInit\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.Text\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.TextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_TextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_TextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.TopLeftHeaderCell\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.UpdateCellErrorText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.UpdateCellValue\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.UpdateRowErrorText\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.UpdateRowHeightInfo\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.UserAddedRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_UserAddedRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_UserAddedRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.UserDeletedRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_UserDeletedRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_UserDeletedRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.UserDeletingRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.add_UserDeletingRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.remove_UserDeletingRow\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.UserSetCursor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.VerticalScrollBar\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.VerticalScrollingOffset\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.VirtualMode\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.DataGridView.WndProc\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"7819b745-1702-980d-8722-b5488808c09e\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\DataGridView.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Displays data in a customizable grid.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.DataGridView\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.DataGridView.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.DataGridView.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.DataGridView","System.Windows.Forms.DataGridView..ctor","System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged","System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle","System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle","System.Windows.Forms.DataGridView.AdvancedCellBorderStyle","System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle","System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle","System.Windows.Forms.DataGridView.AllowUserToAddRows","System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged","System.Windows.Forms.DataGridView.add_AllowUserToAddRowsChanged","System.Windows.Forms.DataGridView.remove_AllowUserToAddRowsChanged","System.Windows.Forms.DataGridView.AllowUserToDeleteRows","System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged","System.Windows.Forms.DataGridView.add_AllowUserToDeleteRowsChanged","System.Windows.Forms.DataGridView.remove_AllowUserToDeleteRowsChanged","System.Windows.Forms.DataGridView.AllowUserToOrderColumns","System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged","System.Windows.Forms.DataGridView.add_AllowUserToOrderColumnsChanged","System.Windows.Forms.DataGridView.remove_AllowUserToOrderColumnsChanged","System.Windows.Forms.DataGridView.AllowUserToResizeColumns","System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged","System.Windows.Forms.DataGridView.add_AllowUserToResizeColumnsChanged","System.Windows.Forms.DataGridView.remove_AllowUserToResizeColumnsChanged","System.Windows.Forms.DataGridView.AllowUserToResizeRows","System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged","System.Windows.Forms.DataGridView.add_AllowUserToResizeRowsChanged","System.Windows.Forms.DataGridView.remove_AllowUserToResizeRowsChanged","System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle","System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged","System.Windows.Forms.DataGridView.add_AlternatingRowsDefaultCellStyleChanged","System.Windows.Forms.DataGridView.remove_AlternatingRowsDefaultCellStyleChanged","System.Windows.Forms.DataGridView.AreAllCellsSelected","System.Windows.Forms.DataGridView.AutoGenerateColumns","System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged","System.Windows.Forms.DataGridView.add_AutoGenerateColumnsChanged","System.Windows.Forms.DataGridView.remove_AutoGenerateColumnsChanged","System.Windows.Forms.DataGridView.AutoResizeColumn","System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight","System.Windows.Forms.DataGridView.AutoResizeColumns","System.Windows.Forms.DataGridView.AutoResizeRow","System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth","System.Windows.Forms.DataGridView.AutoResizeRows","System.Windows.Forms.DataGridView.AutoSize","System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged","System.Windows.Forms.DataGridView.add_AutoSizeColumnModeChanged","System.Windows.Forms.DataGridView.remove_AutoSizeColumnModeChanged","System.Windows.Forms.DataGridView.AutoSizeColumnsMode","System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged","System.Windows.Forms.DataGridView.add_AutoSizeColumnsModeChanged","System.Windows.Forms.DataGridView.remove_AutoSizeColumnsModeChanged","System.Windows.Forms.DataGridView.AutoSizeRowsMode","System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged","System.Windows.Forms.DataGridView.add_AutoSizeRowsModeChanged","System.Windows.Forms.DataGridView.remove_AutoSizeRowsModeChanged","System.Windows.Forms.DataGridView.BackColor","System.Windows.Forms.DataGridView.BackColorChanged","System.Windows.Forms.DataGridView.add_BackColorChanged","System.Windows.Forms.DataGridView.remove_BackColorChanged","System.Windows.Forms.DataGridView.BackgroundColor","System.Windows.Forms.DataGridView.BackgroundColorChanged","System.Windows.Forms.DataGridView.add_BackgroundColorChanged","System.Windows.Forms.DataGridView.remove_BackgroundColorChanged","System.Windows.Forms.DataGridView.BackgroundImage","System.Windows.Forms.DataGridView.BackgroundImageChanged","System.Windows.Forms.DataGridView.add_BackgroundImageChanged","System.Windows.Forms.DataGridView.remove_BackgroundImageChanged","System.Windows.Forms.DataGridView.BackgroundImageLayout","System.Windows.Forms.DataGridView.BackgroundImageLayoutChanged","System.Windows.Forms.DataGridView.add_BackgroundImageLayoutChanged","System.Windows.Forms.DataGridView.remove_BackgroundImageLayoutChanged","System.Windows.Forms.DataGridView.BeginEdit","System.Windows.Forms.DataGridView.BorderStyle","System.Windows.Forms.DataGridView.BorderStyleChanged","System.Windows.Forms.DataGridView.add_BorderStyleChanged","System.Windows.Forms.DataGridView.remove_BorderStyleChanged","System.Windows.Forms.DataGridView.CancelEdit","System.Windows.Forms.DataGridView.CancelRowEdit","System.Windows.Forms.DataGridView.add_CancelRowEdit","System.Windows.Forms.DataGridView.remove_CancelRowEdit","System.Windows.Forms.DataGridView.CanEnableIme","System.Windows.Forms.DataGridView.CellBeginEdit","System.Windows.Forms.DataGridView.add_CellBeginEdit","System.Windows.Forms.DataGridView.remove_CellBeginEdit","System.Windows.Forms.DataGridView.CellBorderStyle","System.Windows.Forms.DataGridView.CellBorderStyleChanged","System.Windows.Forms.DataGridView.add_CellBorderStyleChanged","System.Windows.Forms.DataGridView.remove_CellBorderStyleChanged","System.Windows.Forms.DataGridView.CellClick","System.Windows.Forms.DataGridView.add_CellClick","System.Windows.Forms.DataGridView.remove_CellClick","System.Windows.Forms.DataGridView.CellContentClick","System.Windows.Forms.DataGridView.add_CellContentClick","System.Windows.Forms.DataGridView.remove_CellContentClick","System.Windows.Forms.DataGridView.CellContentDoubleClick","System.Windows.Forms.DataGridView.add_CellContentDoubleClick","System.Windows.Forms.DataGridView.remove_CellContentDoubleClick","System.Windows.Forms.DataGridView.CellContextMenuStripChanged","System.Windows.Forms.DataGridView.add_CellContextMenuStripChanged","System.Windows.Forms.DataGridView.remove_CellContextMenuStripChanged","System.Windows.Forms.DataGridView.CellContextMenuStripNeeded","System.Windows.Forms.DataGridView.add_CellContextMenuStripNeeded","System.Windows.Forms.DataGridView.remove_CellContextMenuStripNeeded","System.Windows.Forms.DataGridView.CellDoubleClick","System.Windows.Forms.DataGridView.add_CellDoubleClick","System.Windows.Forms.DataGridView.remove_CellDoubleClick","System.Windows.Forms.DataGridView.CellEndEdit","System.Windows.Forms.DataGridView.add_CellEndEdit","System.Windows.Forms.DataGridView.remove_CellEndEdit","System.Windows.Forms.DataGridView.CellEnter","System.Windows.Forms.DataGridView.add_CellEnter","System.Windows.Forms.DataGridView.remove_CellEnter","System.Windows.Forms.DataGridView.CellErrorTextChanged","System.Windows.Forms.DataGridView.add_CellErrorTextChanged","System.Windows.Forms.DataGridView.remove_CellErrorTextChanged","System.Windows.Forms.DataGridView.CellErrorTextNeeded","System.Windows.Forms.DataGridView.add_CellErrorTextNeeded","System.Windows.Forms.DataGridView.remove_CellErrorTextNeeded","System.Windows.Forms.DataGridView.CellFormatting","System.Windows.Forms.DataGridView.add_CellFormatting","System.Windows.Forms.DataGridView.remove_CellFormatting","System.Windows.Forms.DataGridView.CellLeave","System.Windows.Forms.DataGridView.add_CellLeave","System.Windows.Forms.DataGridView.remove_CellLeave","System.Windows.Forms.DataGridView.CellMouseClick","System.Windows.Forms.DataGridView.add_CellMouseClick","System.Windows.Forms.DataGridView.remove_CellMouseClick","System.Windows.Forms.DataGridView.CellMouseDoubleClick","System.Windows.Forms.DataGridView.add_CellMouseDoubleClick","System.Windows.Forms.DataGridView.remove_CellMouseDoubleClick","System.Windows.Forms.DataGridView.CellMouseDown","System.Windows.Forms.DataGridView.add_CellMouseDown","System.Windows.Forms.DataGridView.remove_CellMouseDown","System.Windows.Forms.DataGridView.CellMouseEnter","System.Windows.Forms.DataGridView.add_CellMouseEnter","System.Windows.Forms.DataGridView.remove_CellMouseEnter","System.Windows.Forms.DataGridView.CellMouseLeave","System.Windows.Forms.DataGridView.add_CellMouseLeave","System.Windows.Forms.DataGridView.remove_CellMouseLeave","System.Windows.Forms.DataGridView.CellMouseMove","System.Windows.Forms.DataGridView.add_CellMouseMove","System.Windows.Forms.DataGridView.remove_CellMouseMove","System.Windows.Forms.DataGridView.CellMouseUp","System.Windows.Forms.DataGridView.add_CellMouseUp","System.Windows.Forms.DataGridView.remove_CellMouseUp","System.Windows.Forms.DataGridView.CellPainting","System.Windows.Forms.DataGridView.add_CellPainting","System.Windows.Forms.DataGridView.remove_CellPainting","System.Windows.Forms.DataGridView.CellParsing","System.Windows.Forms.DataGridView.add_CellParsing","System.Windows.Forms.DataGridView.remove_CellParsing","System.Windows.Forms.DataGridView.CellStateChanged","System.Windows.Forms.DataGridView.add_CellStateChanged","System.Windows.Forms.DataGridView.remove_CellStateChanged","System.Windows.Forms.DataGridView.CellStyleChanged","System.Windows.Forms.DataGridView.add_CellStyleChanged","System.Windows.Forms.DataGridView.remove_CellStyleChanged","System.Windows.Forms.DataGridView.CellStyleContentChanged","System.Windows.Forms.DataGridView.add_CellStyleContentChanged","System.Windows.Forms.DataGridView.remove_CellStyleContentChanged","System.Windows.Forms.DataGridView.CellToolTipTextChanged","System.Windows.Forms.DataGridView.add_CellToolTipTextChanged","System.Windows.Forms.DataGridView.remove_CellToolTipTextChanged","System.Windows.Forms.DataGridView.CellToolTipTextNeeded","System.Windows.Forms.DataGridView.add_CellToolTipTextNeeded","System.Windows.Forms.DataGridView.remove_CellToolTipTextNeeded","System.Windows.Forms.DataGridView.CellValidated","System.Windows.Forms.DataGridView.add_CellValidated","System.Windows.Forms.DataGridView.remove_CellValidated","System.Windows.Forms.DataGridView.CellValidating","System.Windows.Forms.DataGridView.add_CellValidating","System.Windows.Forms.DataGridView.remove_CellValidating","System.Windows.Forms.DataGridView.CellValueChanged","System.Windows.Forms.DataGridView.add_CellValueChanged","System.Windows.Forms.DataGridView.remove_CellValueChanged","System.Windows.Forms.DataGridView.CellValueNeeded","System.Windows.Forms.DataGridView.add_CellValueNeeded","System.Windows.Forms.DataGridView.remove_CellValueNeeded","System.Windows.Forms.DataGridView.CellValuePushed","System.Windows.Forms.DataGridView.add_CellValuePushed","System.Windows.Forms.DataGridView.remove_CellValuePushed","System.Windows.Forms.DataGridView.ClearSelection","System.Windows.Forms.DataGridView.ClipboardCopyMode","System.Windows.Forms.DataGridView.ColumnAdded","System.Windows.Forms.DataGridView.add_ColumnAdded","System.Windows.Forms.DataGridView.remove_ColumnAdded","System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged","System.Windows.Forms.DataGridView.add_ColumnContextMenuStripChanged","System.Windows.Forms.DataGridView.remove_ColumnContextMenuStripChanged","System.Windows.Forms.DataGridView.ColumnCount","System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged","System.Windows.Forms.DataGridView.add_ColumnDataPropertyNameChanged","System.Windows.Forms.DataGridView.remove_ColumnDataPropertyNameChanged","System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged","System.Windows.Forms.DataGridView.add_ColumnDefaultCellStyleChanged","System.Windows.Forms.DataGridView.remove_ColumnDefaultCellStyleChanged","System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged","System.Windows.Forms.DataGridView.add_ColumnDisplayIndexChanged","System.Windows.Forms.DataGridView.remove_ColumnDisplayIndexChanged","System.Windows.Forms.DataGridView.ColumnDividerDoubleClick","System.Windows.Forms.DataGridView.add_ColumnDividerDoubleClick","System.Windows.Forms.DataGridView.remove_ColumnDividerDoubleClick","System.Windows.Forms.DataGridView.ColumnDividerWidthChanged","System.Windows.Forms.DataGridView.add_ColumnDividerWidthChanged","System.Windows.Forms.DataGridView.remove_ColumnDividerWidthChanged","System.Windows.Forms.DataGridView.ColumnHeaderCellChanged","System.Windows.Forms.DataGridView.add_ColumnHeaderCellChanged","System.Windows.Forms.DataGridView.remove_ColumnHeaderCellChanged","System.Windows.Forms.DataGridView.ColumnHeaderMouseClick","System.Windows.Forms.DataGridView.add_ColumnHeaderMouseClick","System.Windows.Forms.DataGridView.remove_ColumnHeaderMouseClick","System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick","System.Windows.Forms.DataGridView.add_ColumnHeaderMouseDoubleClick","System.Windows.Forms.DataGridView.remove_ColumnHeaderMouseDoubleClick","System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle","System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged","System.Windows.Forms.DataGridView.add_ColumnHeadersBorderStyleChanged","System.Windows.Forms.DataGridView.remove_ColumnHeadersBorderStyleChanged","System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle","System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged","System.Windows.Forms.DataGridView.add_ColumnHeadersDefaultCellStyleChanged","System.Windows.Forms.DataGridView.remove_ColumnHeadersDefaultCellStyleChanged","System.Windows.Forms.DataGridView.ColumnHeadersHeight","System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged","System.Windows.Forms.DataGridView.add_ColumnHeadersHeightChanged","System.Windows.Forms.DataGridView.remove_ColumnHeadersHeightChanged","System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode","System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged","System.Windows.Forms.DataGridView.add_ColumnHeadersHeightSizeModeChanged","System.Windows.Forms.DataGridView.remove_ColumnHeadersHeightSizeModeChanged","System.Windows.Forms.DataGridView.ColumnHeadersVisible","System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged","System.Windows.Forms.DataGridView.add_ColumnMinimumWidthChanged","System.Windows.Forms.DataGridView.remove_ColumnMinimumWidthChanged","System.Windows.Forms.DataGridView.ColumnNameChanged","System.Windows.Forms.DataGridView.add_ColumnNameChanged","System.Windows.Forms.DataGridView.remove_ColumnNameChanged","System.Windows.Forms.DataGridView.ColumnRemoved","System.Windows.Forms.DataGridView.add_ColumnRemoved","System.Windows.Forms.DataGridView.remove_ColumnRemoved","System.Windows.Forms.DataGridView.Columns","System.Windows.Forms.DataGridView.ColumnSortModeChanged","System.Windows.Forms.DataGridView.add_ColumnSortModeChanged","System.Windows.Forms.DataGridView.remove_ColumnSortModeChanged","System.Windows.Forms.DataGridView.ColumnStateChanged","System.Windows.Forms.DataGridView.add_ColumnStateChanged","System.Windows.Forms.DataGridView.remove_ColumnStateChanged","System.Windows.Forms.DataGridView.ColumnToolTipTextChanged","System.Windows.Forms.DataGridView.add_ColumnToolTipTextChanged","System.Windows.Forms.DataGridView.remove_ColumnToolTipTextChanged","System.Windows.Forms.DataGridView.ColumnWidthChanged","System.Windows.Forms.DataGridView.add_ColumnWidthChanged","System.Windows.Forms.DataGridView.remove_ColumnWidthChanged","System.Windows.Forms.DataGridView.CommitEdit","System.Windows.Forms.DataGridView.CreateAccessibilityInstance","System.Windows.Forms.DataGridView.CreateColumnsInstance","System.Windows.Forms.DataGridView.CreateControlsInstance","System.Windows.Forms.DataGridView.CreateRowsInstance","System.Windows.Forms.DataGridView.CurrentCell","System.Windows.Forms.DataGridView.CurrentCellAddress","System.Windows.Forms.DataGridView.CurrentCellChanged","System.Windows.Forms.DataGridView.add_CurrentCellChanged","System.Windows.Forms.DataGridView.remove_CurrentCellChanged","System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged","System.Windows.Forms.DataGridView.add_CurrentCellDirtyStateChanged","System.Windows.Forms.DataGridView.remove_CurrentCellDirtyStateChanged","System.Windows.Forms.DataGridView.CurrentRow","System.Windows.Forms.DataGridView.DataBindingComplete","System.Windows.Forms.DataGridView.add_DataBindingComplete","System.Windows.Forms.DataGridView.remove_DataBindingComplete","System.Windows.Forms.DataGridView.DataError","System.Windows.Forms.DataGridView.add_DataError","System.Windows.Forms.DataGridView.remove_DataError","System.Windows.Forms.DataGridView.DataMember","System.Windows.Forms.DataGridView.DataMemberChanged","System.Windows.Forms.DataGridView.add_DataMemberChanged","System.Windows.Forms.DataGridView.remove_DataMemberChanged","System.Windows.Forms.DataGridView.DataSource","System.Windows.Forms.DataGridView.DataSourceChanged","System.Windows.Forms.DataGridView.add_DataSourceChanged","System.Windows.Forms.DataGridView.remove_DataSourceChanged","System.Windows.Forms.DataGridView.DefaultCellStyle","System.Windows.Forms.DataGridView.DefaultCellStyleChanged","System.Windows.Forms.DataGridView.add_DefaultCellStyleChanged","System.Windows.Forms.DataGridView.remove_DefaultCellStyleChanged","System.Windows.Forms.DataGridView.DefaultSize","System.Windows.Forms.DataGridView.DefaultValuesNeeded","System.Windows.Forms.DataGridView.add_DefaultValuesNeeded","System.Windows.Forms.DataGridView.remove_DefaultValuesNeeded","System.Windows.Forms.DataGridView.DisplayedColumnCount","System.Windows.Forms.DataGridView.DisplayedRowCount","System.Windows.Forms.DataGridView.DisplayRectangle","System.Windows.Forms.DataGridView.Dispose","System.Windows.Forms.DataGridView.EditingControl","System.Windows.Forms.DataGridView.EditingControlShowing","System.Windows.Forms.DataGridView.add_EditingControlShowing","System.Windows.Forms.DataGridView.remove_EditingControlShowing","System.Windows.Forms.DataGridView.EditingPanel","System.Windows.Forms.DataGridView.EditMode","System.Windows.Forms.DataGridView.EditModeChanged","System.Windows.Forms.DataGridView.add_EditModeChanged","System.Windows.Forms.DataGridView.remove_EditModeChanged","System.Windows.Forms.DataGridView.EnableHeadersVisualStyles","System.Windows.Forms.DataGridView.EndEdit","System.Windows.Forms.DataGridView.FirstDisplayedCell","System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth","System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex","System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex","System.Windows.Forms.DataGridView.Font","System.Windows.Forms.DataGridView.FontChanged","System.Windows.Forms.DataGridView.add_FontChanged","System.Windows.Forms.DataGridView.remove_FontChanged","System.Windows.Forms.DataGridView.ForeColor","System.Windows.Forms.DataGridView.ForeColorChanged","System.Windows.Forms.DataGridView.add_ForeColorChanged","System.Windows.Forms.DataGridView.remove_ForeColorChanged","System.Windows.Forms.DataGridView.GetAccessibilityObjectById","System.Windows.Forms.DataGridView.GetCellCount","System.Windows.Forms.DataGridView.GetCellDisplayRectangle","System.Windows.Forms.DataGridView.GetClipboardContent","System.Windows.Forms.DataGridView.GetColumnDisplayRectangle","System.Windows.Forms.DataGridView.GetRowDisplayRectangle","System.Windows.Forms.DataGridView.GridColor","System.Windows.Forms.DataGridView.GridColorChanged","System.Windows.Forms.DataGridView.add_GridColorChanged","System.Windows.Forms.DataGridView.remove_GridColorChanged","System.Windows.Forms.DataGridView.HitTest","System.Windows.Forms.DataGridView.HorizontalScrollBar","System.Windows.Forms.DataGridView.HorizontalScrollingOffset","System.Windows.Forms.DataGridView.InvalidateCell","System.Windows.Forms.DataGridView.InvalidateColumn","System.Windows.Forms.DataGridView.InvalidateRow","System.Windows.Forms.DataGridView.IsCurrentCellDirty","System.Windows.Forms.DataGridView.IsCurrentCellInEditMode","System.Windows.Forms.DataGridView.IsCurrentRowDirty","System.Windows.Forms.DataGridView.IsInputChar","System.Windows.Forms.DataGridView.IsInputKey","System.Windows.Forms.DataGridView.Item","System.Windows.Forms.DataGridView.MultiSelect","System.Windows.Forms.DataGridView.MultiSelectChanged","System.Windows.Forms.DataGridView.add_MultiSelectChanged","System.Windows.Forms.DataGridView.remove_MultiSelectChanged","System.Windows.Forms.DataGridView.NewRowIndex","System.Windows.Forms.DataGridView.NewRowNeeded","System.Windows.Forms.DataGridView.add_NewRowNeeded","System.Windows.Forms.DataGridView.remove_NewRowNeeded","System.Windows.Forms.DataGridView.NotifyCurrentCellDirty","System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged","System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged","System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged","System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged","System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged","System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged","System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged","System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged","System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged","System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged","System.Windows.Forms.DataGridView.OnBackgroundColorChanged","System.Windows.Forms.DataGridView.OnBindingContextChanged","System.Windows.Forms.DataGridView.OnBorderStyleChanged","System.Windows.Forms.DataGridView.OnCancelRowEdit","System.Windows.Forms.DataGridView.OnCellBeginEdit","System.Windows.Forms.DataGridView.OnCellBorderStyleChanged","System.Windows.Forms.DataGridView.OnCellClick","System.Windows.Forms.DataGridView.OnCellContentClick","System.Windows.Forms.DataGridView.OnCellContentDoubleClick","System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged","System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded","System.Windows.Forms.DataGridView.OnCellDoubleClick","System.Windows.Forms.DataGridView.OnCellEndEdit","System.Windows.Forms.DataGridView.OnCellEnter","System.Windows.Forms.DataGridView.OnCellErrorTextChanged","System.Windows.Forms.DataGridView.OnCellErrorTextNeeded","System.Windows.Forms.DataGridView.OnCellFormatting","System.Windows.Forms.DataGridView.OnCellLeave","System.Windows.Forms.DataGridView.OnCellMouseClick","System.Windows.Forms.DataGridView.OnCellMouseDoubleClick","System.Windows.Forms.DataGridView.OnCellMouseDown","System.Windows.Forms.DataGridView.OnCellMouseEnter","System.Windows.Forms.DataGridView.OnCellMouseLeave","System.Windows.Forms.DataGridView.OnCellMouseMove","System.Windows.Forms.DataGridView.OnCellMouseUp","System.Windows.Forms.DataGridView.OnCellPainting","System.Windows.Forms.DataGridView.OnCellParsing","System.Windows.Forms.DataGridView.OnCellStateChanged","System.Windows.Forms.DataGridView.OnCellStyleChanged","System.Windows.Forms.DataGridView.OnCellStyleContentChanged","System.Windows.Forms.DataGridView.OnCellToolTipTextChanged","System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded","System.Windows.Forms.DataGridView.OnCellValidated","System.Windows.Forms.DataGridView.OnCellValidating","System.Windows.Forms.DataGridView.OnCellValueChanged","System.Windows.Forms.DataGridView.OnCellValueNeeded","System.Windows.Forms.DataGridView.OnCellValuePushed","System.Windows.Forms.DataGridView.OnColumnAdded","System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged","System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged","System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged","System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged","System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick","System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged","System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged","System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick","System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick","System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged","System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged","System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged","System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged","System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged","System.Windows.Forms.DataGridView.OnColumnNameChanged","System.Windows.Forms.DataGridView.OnColumnRemoved","System.Windows.Forms.DataGridView.OnColumnSortModeChanged","System.Windows.Forms.DataGridView.OnColumnStateChanged","System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged","System.Windows.Forms.DataGridView.OnColumnWidthChanged","System.Windows.Forms.DataGridView.OnCurrentCellChanged","System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged","System.Windows.Forms.DataGridView.OnCursorChanged","System.Windows.Forms.DataGridView.OnDataBindingComplete","System.Windows.Forms.DataGridView.OnDataError","System.Windows.Forms.DataGridView.OnDataMemberChanged","System.Windows.Forms.DataGridView.OnDataSourceChanged","System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged","System.Windows.Forms.DataGridView.OnDefaultValuesNeeded","System.Windows.Forms.DataGridView.OnDoubleClick","System.Windows.Forms.DataGridView.OnEditingControlShowing","System.Windows.Forms.DataGridView.OnEditModeChanged","System.Windows.Forms.DataGridView.OnEnabledChanged","System.Windows.Forms.DataGridView.OnEnter","System.Windows.Forms.DataGridView.OnFontChanged","System.Windows.Forms.DataGridView.OnForeColorChanged","System.Windows.Forms.DataGridView.OnGotFocus","System.Windows.Forms.DataGridView.OnGridColorChanged","System.Windows.Forms.DataGridView.OnHandleCreated","System.Windows.Forms.DataGridView.OnHandleDestroyed","System.Windows.Forms.DataGridView.OnKeyDown","System.Windows.Forms.DataGridView.OnKeyPress","System.Windows.Forms.DataGridView.OnKeyUp","System.Windows.Forms.DataGridView.OnLayout","System.Windows.Forms.DataGridView.OnLeave","System.Windows.Forms.DataGridView.OnLostFocus","System.Windows.Forms.DataGridView.OnMouseClick","System.Windows.Forms.DataGridView.OnMouseDoubleClick","System.Windows.Forms.DataGridView.OnMouseDown","System.Windows.Forms.DataGridView.OnMouseEnter","System.Windows.Forms.DataGridView.OnMouseLeave","System.Windows.Forms.DataGridView.OnMouseMove","System.Windows.Forms.DataGridView.OnMouseUp","System.Windows.Forms.DataGridView.OnMouseWheel","System.Windows.Forms.DataGridView.OnMultiSelectChanged","System.Windows.Forms.DataGridView.OnNewRowNeeded","System.Windows.Forms.DataGridView.OnPaint","System.Windows.Forms.DataGridView.OnReadOnlyChanged","System.Windows.Forms.DataGridView.OnResize","System.Windows.Forms.DataGridView.OnRightToLeftChanged","System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged","System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded","System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged","System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded","System.Windows.Forms.DataGridView.OnRowDividerDoubleClick","System.Windows.Forms.DataGridView.OnRowDividerHeightChanged","System.Windows.Forms.DataGridView.OnRowEnter","System.Windows.Forms.DataGridView.OnRowErrorTextChanged","System.Windows.Forms.DataGridView.OnRowErrorTextNeeded","System.Windows.Forms.DataGridView.OnRowHeaderCellChanged","System.Windows.Forms.DataGridView.OnRowHeaderMouseClick","System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick","System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged","System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged","System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged","System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged","System.Windows.Forms.DataGridView.OnRowHeightChanged","System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded","System.Windows.Forms.DataGridView.OnRowHeightInfoPushed","System.Windows.Forms.DataGridView.OnRowLeave","System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged","System.Windows.Forms.DataGridView.OnRowPostPaint","System.Windows.Forms.DataGridView.OnRowPrePaint","System.Windows.Forms.DataGridView.OnRowsAdded","System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged","System.Windows.Forms.DataGridView.OnRowsRemoved","System.Windows.Forms.DataGridView.OnRowStateChanged","System.Windows.Forms.DataGridView.OnRowUnshared","System.Windows.Forms.DataGridView.OnRowValidated","System.Windows.Forms.DataGridView.OnRowValidating","System.Windows.Forms.DataGridView.OnScroll","System.Windows.Forms.DataGridView.OnSelectionChanged","System.Windows.Forms.DataGridView.OnSortCompare","System.Windows.Forms.DataGridView.OnSorted","System.Windows.Forms.DataGridView.OnUserAddedRow","System.Windows.Forms.DataGridView.OnUserDeletedRow","System.Windows.Forms.DataGridView.OnUserDeletingRow","System.Windows.Forms.DataGridView.OnValidating","System.Windows.Forms.DataGridView.OnVisibleChanged","System.Windows.Forms.DataGridView.Padding","System.Windows.Forms.DataGridView.PaddingChanged","System.Windows.Forms.DataGridView.add_PaddingChanged","System.Windows.Forms.DataGridView.remove_PaddingChanged","System.Windows.Forms.DataGridView.PaintBackground","System.Windows.Forms.DataGridView.ProcessAKey","System.Windows.Forms.DataGridView.ProcessDataGridViewKey","System.Windows.Forms.DataGridView.ProcessDeleteKey","System.Windows.Forms.DataGridView.ProcessDialogKey","System.Windows.Forms.DataGridView.ProcessDownKey","System.Windows.Forms.DataGridView.ProcessEndKey","System.Windows.Forms.DataGridView.ProcessEnterKey","System.Windows.Forms.DataGridView.ProcessEscapeKey","System.Windows.Forms.DataGridView.ProcessF2Key","System.Windows.Forms.DataGridView.ProcessHomeKey","System.Windows.Forms.DataGridView.ProcessInsertKey","System.Windows.Forms.DataGridView.ProcessKeyEventArgs","System.Windows.Forms.DataGridView.ProcessKeyPreview","System.Windows.Forms.DataGridView.ProcessLeftKey","System.Windows.Forms.DataGridView.ProcessNextKey","System.Windows.Forms.DataGridView.ProcessPriorKey","System.Windows.Forms.DataGridView.ProcessRightKey","System.Windows.Forms.DataGridView.ProcessSpaceKey","System.Windows.Forms.DataGridView.ProcessTabKey","System.Windows.Forms.DataGridView.ProcessUpKey","System.Windows.Forms.DataGridView.ProcessZeroKey","System.Windows.Forms.DataGridView.ReadOnly","System.Windows.Forms.DataGridView.ReadOnlyChanged","System.Windows.Forms.DataGridView.add_ReadOnlyChanged","System.Windows.Forms.DataGridView.remove_ReadOnlyChanged","System.Windows.Forms.DataGridView.RefreshEdit","System.Windows.Forms.DataGridView.ResetText","System.Windows.Forms.DataGridView.RowContextMenuStripChanged","System.Windows.Forms.DataGridView.add_RowContextMenuStripChanged","System.Windows.Forms.DataGridView.remove_RowContextMenuStripChanged","System.Windows.Forms.DataGridView.RowContextMenuStripNeeded","System.Windows.Forms.DataGridView.add_RowContextMenuStripNeeded","System.Windows.Forms.DataGridView.remove_RowContextMenuStripNeeded","System.Windows.Forms.DataGridView.RowCount","System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged","System.Windows.Forms.DataGridView.add_RowDefaultCellStyleChanged","System.Windows.Forms.DataGridView.remove_RowDefaultCellStyleChanged","System.Windows.Forms.DataGridView.RowDirtyStateNeeded","System.Windows.Forms.DataGridView.add_RowDirtyStateNeeded","System.Windows.Forms.DataGridView.remove_RowDirtyStateNeeded","System.Windows.Forms.DataGridView.RowDividerDoubleClick","System.Windows.Forms.DataGridView.add_RowDividerDoubleClick","System.Windows.Forms.DataGridView.remove_RowDividerDoubleClick","System.Windows.Forms.DataGridView.RowDividerHeightChanged","System.Windows.Forms.DataGridView.add_RowDividerHeightChanged","System.Windows.Forms.DataGridView.remove_RowDividerHeightChanged","System.Windows.Forms.DataGridView.RowEnter","System.Windows.Forms.DataGridView.add_RowEnter","System.Windows.Forms.DataGridView.remove_RowEnter","System.Windows.Forms.DataGridView.RowErrorTextChanged","System.Windows.Forms.DataGridView.add_RowErrorTextChanged","System.Windows.Forms.DataGridView.remove_RowErrorTextChanged","System.Windows.Forms.DataGridView.RowErrorTextNeeded","System.Windows.Forms.DataGridView.add_RowErrorTextNeeded","System.Windows.Forms.DataGridView.remove_RowErrorTextNeeded","System.Windows.Forms.DataGridView.RowHeaderCellChanged","System.Windows.Forms.DataGridView.add_RowHeaderCellChanged","System.Windows.Forms.DataGridView.remove_RowHeaderCellChanged","System.Windows.Forms.DataGridView.RowHeaderMouseClick","System.Windows.Forms.DataGridView.add_RowHeaderMouseClick","System.Windows.Forms.DataGridView.remove_RowHeaderMouseClick","System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick","System.Windows.Forms.DataGridView.add_RowHeaderMouseDoubleClick","System.Windows.Forms.DataGridView.remove_RowHeaderMouseDoubleClick","System.Windows.Forms.DataGridView.RowHeadersBorderStyle","System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged","System.Windows.Forms.DataGridView.add_RowHeadersBorderStyleChanged","System.Windows.Forms.DataGridView.remove_RowHeadersBorderStyleChanged","System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle","System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged","System.Windows.Forms.DataGridView.add_RowHeadersDefaultCellStyleChanged","System.Windows.Forms.DataGridView.remove_RowHeadersDefaultCellStyleChanged","System.Windows.Forms.DataGridView.RowHeadersVisible","System.Windows.Forms.DataGridView.RowHeadersWidth","System.Windows.Forms.DataGridView.RowHeadersWidthChanged","System.Windows.Forms.DataGridView.add_RowHeadersWidthChanged","System.Windows.Forms.DataGridView.remove_RowHeadersWidthChanged","System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode","System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged","System.Windows.Forms.DataGridView.add_RowHeadersWidthSizeModeChanged","System.Windows.Forms.DataGridView.remove_RowHeadersWidthSizeModeChanged","System.Windows.Forms.DataGridView.RowHeightChanged","System.Windows.Forms.DataGridView.add_RowHeightChanged","System.Windows.Forms.DataGridView.remove_RowHeightChanged","System.Windows.Forms.DataGridView.RowHeightInfoNeeded","System.Windows.Forms.DataGridView.add_RowHeightInfoNeeded","System.Windows.Forms.DataGridView.remove_RowHeightInfoNeeded","System.Windows.Forms.DataGridView.RowHeightInfoPushed","System.Windows.Forms.DataGridView.add_RowHeightInfoPushed","System.Windows.Forms.DataGridView.remove_RowHeightInfoPushed","System.Windows.Forms.DataGridView.RowLeave","System.Windows.Forms.DataGridView.add_RowLeave","System.Windows.Forms.DataGridView.remove_RowLeave","System.Windows.Forms.DataGridView.RowMinimumHeightChanged","System.Windows.Forms.DataGridView.add_RowMinimumHeightChanged","System.Windows.Forms.DataGridView.remove_RowMinimumHeightChanged","System.Windows.Forms.DataGridView.RowPostPaint","System.Windows.Forms.DataGridView.add_RowPostPaint","System.Windows.Forms.DataGridView.remove_RowPostPaint","System.Windows.Forms.DataGridView.RowPrePaint","System.Windows.Forms.DataGridView.add_RowPrePaint","System.Windows.Forms.DataGridView.remove_RowPrePaint","System.Windows.Forms.DataGridView.Rows","System.Windows.Forms.DataGridView.RowsAdded","System.Windows.Forms.DataGridView.add_RowsAdded","System.Windows.Forms.DataGridView.remove_RowsAdded","System.Windows.Forms.DataGridView.RowsDefaultCellStyle","System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged","System.Windows.Forms.DataGridView.add_RowsDefaultCellStyleChanged","System.Windows.Forms.DataGridView.remove_RowsDefaultCellStyleChanged","System.Windows.Forms.DataGridView.RowsRemoved","System.Windows.Forms.DataGridView.add_RowsRemoved","System.Windows.Forms.DataGridView.remove_RowsRemoved","System.Windows.Forms.DataGridView.RowStateChanged","System.Windows.Forms.DataGridView.add_RowStateChanged","System.Windows.Forms.DataGridView.remove_RowStateChanged","System.Windows.Forms.DataGridView.RowTemplate","System.Windows.Forms.DataGridView.RowUnshared","System.Windows.Forms.DataGridView.add_RowUnshared","System.Windows.Forms.DataGridView.remove_RowUnshared","System.Windows.Forms.DataGridView.RowValidated","System.Windows.Forms.DataGridView.add_RowValidated","System.Windows.Forms.DataGridView.remove_RowValidated","System.Windows.Forms.DataGridView.RowValidating","System.Windows.Forms.DataGridView.add_RowValidating","System.Windows.Forms.DataGridView.remove_RowValidating","System.Windows.Forms.DataGridView.Scroll","System.Windows.Forms.DataGridView.add_Scroll","System.Windows.Forms.DataGridView.remove_Scroll","System.Windows.Forms.DataGridView.ScrollBars","System.Windows.Forms.DataGridView.SelectAll","System.Windows.Forms.DataGridView.SelectedCells","System.Windows.Forms.DataGridView.SelectedColumns","System.Windows.Forms.DataGridView.SelectedRows","System.Windows.Forms.DataGridView.SelectionChanged","System.Windows.Forms.DataGridView.add_SelectionChanged","System.Windows.Forms.DataGridView.remove_SelectionChanged","System.Windows.Forms.DataGridView.SelectionMode","System.Windows.Forms.DataGridView.SetBoundsCore","System.Windows.Forms.DataGridView.SetCurrentCellAddressCore","System.Windows.Forms.DataGridView.SetSelectedCellCore","System.Windows.Forms.DataGridView.SetSelectedColumnCore","System.Windows.Forms.DataGridView.SetSelectedRowCore","System.Windows.Forms.DataGridView.ShowCellErrors","System.Windows.Forms.DataGridView.ShowCellToolTips","System.Windows.Forms.DataGridView.ShowEditingIcon","System.Windows.Forms.DataGridView.ShowRowErrors","System.Windows.Forms.DataGridView.Sort","System.Windows.Forms.DataGridView.SortCompare","System.Windows.Forms.DataGridView.add_SortCompare","System.Windows.Forms.DataGridView.remove_SortCompare","System.Windows.Forms.DataGridView.Sorted","System.Windows.Forms.DataGridView.add_Sorted","System.Windows.Forms.DataGridView.remove_Sorted","System.Windows.Forms.DataGridView.SortedColumn","System.Windows.Forms.DataGridView.SortOrder","System.Windows.Forms.DataGridView.StandardTab","System.Windows.Forms.DataGridView.StyleChanged","System.Windows.Forms.DataGridView.add_StyleChanged","System.Windows.Forms.DataGridView.remove_StyleChanged","System.Windows.Forms.DataGridView.ISupportInitialize.BeginInit","System.Windows.Forms.DataGridView.ISupportInitialize.EndInit","System.Windows.Forms.DataGridView.Text","System.Windows.Forms.DataGridView.TextChanged","System.Windows.Forms.DataGridView.add_TextChanged","System.Windows.Forms.DataGridView.remove_TextChanged","System.Windows.Forms.DataGridView.TopLeftHeaderCell","System.Windows.Forms.DataGridView.UpdateCellErrorText","System.Windows.Forms.DataGridView.UpdateCellValue","System.Windows.Forms.DataGridView.UpdateRowErrorText","System.Windows.Forms.DataGridView.UpdateRowHeightInfo","System.Windows.Forms.DataGridView.UserAddedRow","System.Windows.Forms.DataGridView.add_UserAddedRow","System.Windows.Forms.DataGridView.remove_UserAddedRow","System.Windows.Forms.DataGridView.UserDeletedRow","System.Windows.Forms.DataGridView.add_UserDeletedRow","System.Windows.Forms.DataGridView.remove_UserDeletedRow","System.Windows.Forms.DataGridView.UserDeletingRow","System.Windows.Forms.DataGridView.add_UserDeletingRow","System.Windows.Forms.DataGridView.remove_UserDeletingRow","System.Windows.Forms.DataGridView.UserSetCursor","System.Windows.Forms.DataGridView.VerticalScrollBar","System.Windows.Forms.DataGridView.VerticalScrollingOffset","System.Windows.Forms.DataGridView.VirtualMode","System.Windows.Forms.DataGridView.WndProc"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.DataGridView","System::Windows::Forms::DataGridView","System.Windows.Forms.DataGridView.#ctor","System::Windows::Forms::DataGridView::#ctor","System.Windows.Forms.DataGridView.AccessibilityNotifyCurrentCellChanged","System::Windows::Forms::DataGridView::AccessibilityNotifyCurrentCellChanged","System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle","System::Windows::Forms::DataGridView::AdjustColumnHeaderBorderStyle","System.Windows.Forms.DataGridView.AdjustedTopLeftHeaderBorderStyle","System::Windows::Forms::DataGridView::AdjustedTopLeftHeaderBorderStyle","System.Windows.Forms.DataGridView.AdvancedCellBorderStyle","System::Windows::Forms::DataGridView::AdvancedCellBorderStyle","System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle","System::Windows::Forms::DataGridView::AdvancedColumnHeadersBorderStyle","System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle","System::Windows::Forms::DataGridView::AdvancedRowHeadersBorderStyle","System.Windows.Forms.DataGridView.AllowUserToAddRows","System::Windows::Forms::DataGridView::AllowUserToAddRows","System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged","System::Windows::Forms::DataGridView::AllowUserToAddRowsChanged","System.Windows.Forms.DataGridView.AllowUserToDeleteRows","System::Windows::Forms::DataGridView::AllowUserToDeleteRows","System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged","System::Windows::Forms::DataGridView::AllowUserToDeleteRowsChanged","System.Windows.Forms.DataGridView.AllowUserToOrderColumns","System::Windows::Forms::DataGridView::AllowUserToOrderColumns","System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged","System::Windows::Forms::DataGridView::AllowUserToOrderColumnsChanged","System.Windows.Forms.DataGridView.AllowUserToResizeColumns","System::Windows::Forms::DataGridView::AllowUserToResizeColumns","System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged","System::Windows::Forms::DataGridView::AllowUserToResizeColumnsChanged","System.Windows.Forms.DataGridView.AllowUserToResizeRows","System::Windows::Forms::DataGridView::AllowUserToResizeRows","System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged","System::Windows::Forms::DataGridView::AllowUserToResizeRowsChanged","System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle","System::Windows::Forms::DataGridView::AlternatingRowsDefaultCellStyle","System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged","System::Windows::Forms::DataGridView::AlternatingRowsDefaultCellStyleChanged","System.Windows.Forms.DataGridView.AreAllCellsSelected","System::Windows::Forms::DataGridView::AreAllCellsSelected","System.Windows.Forms.DataGridView.AutoGenerateColumns","System::Windows::Forms::DataGridView::AutoGenerateColumns","System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged","System::Windows::Forms::DataGridView::AutoGenerateColumnsChanged","System.Windows.Forms.DataGridView.AutoResizeColumn","System::Windows::Forms::DataGridView::AutoResizeColumn","System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight","System::Windows::Forms::DataGridView::AutoResizeColumnHeadersHeight","System.Windows.Forms.DataGridView.AutoResizeColumns","System::Windows::Forms::DataGridView::AutoResizeColumns","System.Windows.Forms.DataGridView.AutoResizeRow","System::Windows::Forms::DataGridView::AutoResizeRow","System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth","System::Windows::Forms::DataGridView::AutoResizeRowHeadersWidth","System.Windows.Forms.DataGridView.AutoResizeRows","System::Windows::Forms::DataGridView::AutoResizeRows","System.Windows.Forms.DataGridView.AutoSize","System::Windows::Forms::DataGridView::AutoSize","System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged","System::Windows::Forms::DataGridView::AutoSizeColumnModeChanged","System.Windows.Forms.DataGridView.AutoSizeColumnsMode","System::Windows::Forms::DataGridView::AutoSizeColumnsMode","System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged","System::Windows::Forms::DataGridView::AutoSizeColumnsModeChanged","System.Windows.Forms.DataGridView.AutoSizeRowsMode","System::Windows::Forms::DataGridView::AutoSizeRowsMode","System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged","System::Windows::Forms::DataGridView::AutoSizeRowsModeChanged","System.Windows.Forms.DataGridView.BackColor","System::Windows::Forms::DataGridView::BackColor","System.Windows.Forms.DataGridView.BackColorChanged","System::Windows::Forms::DataGridView::BackColorChanged","System.Windows.Forms.DataGridView.BackgroundColor","System::Windows::Forms::DataGridView::BackgroundColor","System.Windows.Forms.DataGridView.BackgroundColorChanged","System::Windows::Forms::DataGridView::BackgroundColorChanged","System.Windows.Forms.DataGridView.BackgroundImage","System::Windows::Forms::DataGridView::BackgroundImage","System.Windows.Forms.DataGridView.BackgroundImageChanged","System::Windows::Forms::DataGridView::BackgroundImageChanged","System.Windows.Forms.DataGridView.BackgroundImageLayout","System::Windows::Forms::DataGridView::BackgroundImageLayout","System.Windows.Forms.DataGridView.BackgroundImageLayoutChanged","System::Windows::Forms::DataGridView::BackgroundImageLayoutChanged","System.Windows.Forms.DataGridView.BeginEdit","System::Windows::Forms::DataGridView::BeginEdit","System.Windows.Forms.DataGridView.BorderStyle","System::Windows::Forms::DataGridView::BorderStyle","System.Windows.Forms.DataGridView.BorderStyleChanged","System::Windows::Forms::DataGridView::BorderStyleChanged","System.Windows.Forms.DataGridView.CancelEdit","System::Windows::Forms::DataGridView::CancelEdit","System.Windows.Forms.DataGridView.CancelRowEdit","System::Windows::Forms::DataGridView::CancelRowEdit","System.Windows.Forms.DataGridView.CanEnableIme","System::Windows::Forms::DataGridView::CanEnableIme","System.Windows.Forms.DataGridView.CellBeginEdit","System::Windows::Forms::DataGridView::CellBeginEdit","System.Windows.Forms.DataGridView.CellBorderStyle","System::Windows::Forms::DataGridView::CellBorderStyle","System.Windows.Forms.DataGridView.CellBorderStyleChanged","System::Windows::Forms::DataGridView::CellBorderStyleChanged","System.Windows.Forms.DataGridView.CellClick","System::Windows::Forms::DataGridView::CellClick","System.Windows.Forms.DataGridView.CellContentClick","System::Windows::Forms::DataGridView::CellContentClick","System.Windows.Forms.DataGridView.CellContentDoubleClick","System::Windows::Forms::DataGridView::CellContentDoubleClick","System.Windows.Forms.DataGridView.CellContextMenuStripChanged","System::Windows::Forms::DataGridView::CellContextMenuStripChanged","System.Windows.Forms.DataGridView.CellContextMenuStripNeeded","System::Windows::Forms::DataGridView::CellContextMenuStripNeeded","System.Windows.Forms.DataGridView.CellDoubleClick","System::Windows::Forms::DataGridView::CellDoubleClick","System.Windows.Forms.DataGridView.CellEndEdit","System::Windows::Forms::DataGridView::CellEndEdit","System.Windows.Forms.DataGridView.CellEnter","System::Windows::Forms::DataGridView::CellEnter","System.Windows.Forms.DataGridView.CellErrorTextChanged","System::Windows::Forms::DataGridView::CellErrorTextChanged","System.Windows.Forms.DataGridView.CellErrorTextNeeded","System::Windows::Forms::DataGridView::CellErrorTextNeeded","System.Windows.Forms.DataGridView.CellFormatting","System::Windows::Forms::DataGridView::CellFormatting","System.Windows.Forms.DataGridView.CellLeave","System::Windows::Forms::DataGridView::CellLeave","System.Windows.Forms.DataGridView.CellMouseClick","System::Windows::Forms::DataGridView::CellMouseClick","System.Windows.Forms.DataGridView.CellMouseDoubleClick","System::Windows::Forms::DataGridView::CellMouseDoubleClick","System.Windows.Forms.DataGridView.CellMouseDown","System::Windows::Forms::DataGridView::CellMouseDown","System.Windows.Forms.DataGridView.CellMouseEnter","System::Windows::Forms::DataGridView::CellMouseEnter","System.Windows.Forms.DataGridView.CellMouseLeave","System::Windows::Forms::DataGridView::CellMouseLeave","System.Windows.Forms.DataGridView.CellMouseMove","System::Windows::Forms::DataGridView::CellMouseMove","System.Windows.Forms.DataGridView.CellMouseUp","System::Windows::Forms::DataGridView::CellMouseUp","System.Windows.Forms.DataGridView.CellPainting","System::Windows::Forms::DataGridView::CellPainting","System.Windows.Forms.DataGridView.CellParsing","System::Windows::Forms::DataGridView::CellParsing","System.Windows.Forms.DataGridView.CellStateChanged","System::Windows::Forms::DataGridView::CellStateChanged","System.Windows.Forms.DataGridView.CellStyleChanged","System::Windows::Forms::DataGridView::CellStyleChanged","System.Windows.Forms.DataGridView.CellStyleContentChanged","System::Windows::Forms::DataGridView::CellStyleContentChanged","System.Windows.Forms.DataGridView.CellToolTipTextChanged","System::Windows::Forms::DataGridView::CellToolTipTextChanged","System.Windows.Forms.DataGridView.CellToolTipTextNeeded","System::Windows::Forms::DataGridView::CellToolTipTextNeeded","System.Windows.Forms.DataGridView.CellValidated","System::Windows::Forms::DataGridView::CellValidated","System.Windows.Forms.DataGridView.CellValidating","System::Windows::Forms::DataGridView::CellValidating","System.Windows.Forms.DataGridView.CellValueChanged","System::Windows::Forms::DataGridView::CellValueChanged","System.Windows.Forms.DataGridView.CellValueNeeded","System::Windows::Forms::DataGridView::CellValueNeeded","System.Windows.Forms.DataGridView.CellValuePushed","System::Windows::Forms::DataGridView::CellValuePushed","System.Windows.Forms.DataGridView.ClearSelection","System::Windows::Forms::DataGridView::ClearSelection","System.Windows.Forms.DataGridView.ClipboardCopyMode","System::Windows::Forms::DataGridView::ClipboardCopyMode","System.Windows.Forms.DataGridView.ColumnAdded","System::Windows::Forms::DataGridView::ColumnAdded","System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged","System::Windows::Forms::DataGridView::ColumnContextMenuStripChanged","System.Windows.Forms.DataGridView.ColumnCount","System::Windows::Forms::DataGridView::ColumnCount","System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged","System::Windows::Forms::DataGridView::ColumnDataPropertyNameChanged","System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged","System::Windows::Forms::DataGridView::ColumnDefaultCellStyleChanged","System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged","System::Windows::Forms::DataGridView::ColumnDisplayIndexChanged","System.Windows.Forms.DataGridView.ColumnDividerDoubleClick","System::Windows::Forms::DataGridView::ColumnDividerDoubleClick","System.Windows.Forms.DataGridView.ColumnDividerWidthChanged","System::Windows::Forms::DataGridView::ColumnDividerWidthChanged","System.Windows.Forms.DataGridView.ColumnHeaderCellChanged","System::Windows::Forms::DataGridView::ColumnHeaderCellChanged","System.Windows.Forms.DataGridView.ColumnHeaderMouseClick","System::Windows::Forms::DataGridView::ColumnHeaderMouseClick","System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick","System::Windows::Forms::DataGridView::ColumnHeaderMouseDoubleClick","System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle","System::Windows::Forms::DataGridView::ColumnHeadersBorderStyle","System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged","System::Windows::Forms::DataGridView::ColumnHeadersBorderStyleChanged","System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle","System::Windows::Forms::DataGridView::ColumnHeadersDefaultCellStyle","System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged","System::Windows::Forms::DataGridView::ColumnHeadersDefaultCellStyleChanged","System.Windows.Forms.DataGridView.ColumnHeadersHeight","System::Windows::Forms::DataGridView::ColumnHeadersHeight","System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged","System::Windows::Forms::DataGridView::ColumnHeadersHeightChanged","System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode","System::Windows::Forms::DataGridView::ColumnHeadersHeightSizeMode","System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged","System::Windows::Forms::DataGridView::ColumnHeadersHeightSizeModeChanged","System.Windows.Forms.DataGridView.ColumnHeadersVisible","System::Windows::Forms::DataGridView::ColumnHeadersVisible","System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged","System::Windows::Forms::DataGridView::ColumnMinimumWidthChanged","System.Windows.Forms.DataGridView.ColumnNameChanged","System::Windows::Forms::DataGridView::ColumnNameChanged","System.Windows.Forms.DataGridView.ColumnRemoved","System::Windows::Forms::DataGridView::ColumnRemoved","System.Windows.Forms.DataGridView.Columns","System::Windows::Forms::DataGridView::Columns","System.Windows.Forms.DataGridView.ColumnSortModeChanged","System::Windows::Forms::DataGridView::ColumnSortModeChanged","System.Windows.Forms.DataGridView.ColumnStateChanged","System::Windows::Forms::DataGridView::ColumnStateChanged","System.Windows.Forms.DataGridView.ColumnToolTipTextChanged","System::Windows::Forms::DataGridView::ColumnToolTipTextChanged","System.Windows.Forms.DataGridView.ColumnWidthChanged","System::Windows::Forms::DataGridView::ColumnWidthChanged","System.Windows.Forms.DataGridView.CommitEdit","System::Windows::Forms::DataGridView::CommitEdit","System.Windows.Forms.DataGridView.CreateAccessibilityInstance","System::Windows::Forms::DataGridView::CreateAccessibilityInstance","System.Windows.Forms.DataGridView.CreateColumnsInstance","System::Windows::Forms::DataGridView::CreateColumnsInstance","System.Windows.Forms.DataGridView.CreateControlsInstance","System::Windows::Forms::DataGridView::CreateControlsInstance","System.Windows.Forms.DataGridView.CreateRowsInstance","System::Windows::Forms::DataGridView::CreateRowsInstance","System.Windows.Forms.DataGridView.CurrentCell","System::Windows::Forms::DataGridView::CurrentCell","System.Windows.Forms.DataGridView.CurrentCellAddress","System::Windows::Forms::DataGridView::CurrentCellAddress","System.Windows.Forms.DataGridView.CurrentCellChanged","System::Windows::Forms::DataGridView::CurrentCellChanged","System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged","System::Windows::Forms::DataGridView::CurrentCellDirtyStateChanged","System.Windows.Forms.DataGridView.CurrentRow","System::Windows::Forms::DataGridView::CurrentRow","System.Windows.Forms.DataGridView.DataBindingComplete","System::Windows::Forms::DataGridView::DataBindingComplete","System.Windows.Forms.DataGridView.DataError","System::Windows::Forms::DataGridView::DataError","System.Windows.Forms.DataGridView.DataMember","System::Windows::Forms::DataGridView::DataMember","System.Windows.Forms.DataGridView.DataMemberChanged","System::Windows::Forms::DataGridView::DataMemberChanged","System.Windows.Forms.DataGridView.DataSource","System::Windows::Forms::DataGridView::DataSource","System.Windows.Forms.DataGridView.DataSourceChanged","System::Windows::Forms::DataGridView::DataSourceChanged","System.Windows.Forms.DataGridView.DefaultCellStyle","System::Windows::Forms::DataGridView::DefaultCellStyle","System.Windows.Forms.DataGridView.DefaultCellStyleChanged","System::Windows::Forms::DataGridView::DefaultCellStyleChanged","System.Windows.Forms.DataGridView.DefaultSize","System::Windows::Forms::DataGridView::DefaultSize","System.Windows.Forms.DataGridView.DefaultValuesNeeded","System::Windows::Forms::DataGridView::DefaultValuesNeeded","System.Windows.Forms.DataGridView.DisplayedColumnCount","System::Windows::Forms::DataGridView::DisplayedColumnCount","System.Windows.Forms.DataGridView.DisplayedRowCount","System::Windows::Forms::DataGridView::DisplayedRowCount","System.Windows.Forms.DataGridView.DisplayRectangle","System::Windows::Forms::DataGridView::DisplayRectangle","System.Windows.Forms.DataGridView.Dispose","System::Windows::Forms::DataGridView::Dispose","System.Windows.Forms.DataGridView.EditingControl","System::Windows::Forms::DataGridView::EditingControl","System.Windows.Forms.DataGridView.EditingControlShowing","System::Windows::Forms::DataGridView::EditingControlShowing","System.Windows.Forms.DataGridView.EditingPanel","System::Windows::Forms::DataGridView::EditingPanel","System.Windows.Forms.DataGridView.EditMode","System::Windows::Forms::DataGridView::EditMode","System.Windows.Forms.DataGridView.EditModeChanged","System::Windows::Forms::DataGridView::EditModeChanged","System.Windows.Forms.DataGridView.EnableHeadersVisualStyles","System::Windows::Forms::DataGridView::EnableHeadersVisualStyles","System.Windows.Forms.DataGridView.EndEdit","System::Windows::Forms::DataGridView::EndEdit","System.Windows.Forms.DataGridView.FirstDisplayedCell","System::Windows::Forms::DataGridView::FirstDisplayedCell","System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnHiddenWidth","System::Windows::Forms::DataGridView::FirstDisplayedScrollingColumnHiddenWidth","System.Windows.Forms.DataGridView.FirstDisplayedScrollingColumnIndex","System::Windows::Forms::DataGridView::FirstDisplayedScrollingColumnIndex","System.Windows.Forms.DataGridView.FirstDisplayedScrollingRowIndex","System::Windows::Forms::DataGridView::FirstDisplayedScrollingRowIndex","System.Windows.Forms.DataGridView.Font","System::Windows::Forms::DataGridView::Font","System.Windows.Forms.DataGridView.FontChanged","System::Windows::Forms::DataGridView::FontChanged","System.Windows.Forms.DataGridView.ForeColor","System::Windows::Forms::DataGridView::ForeColor","System.Windows.Forms.DataGridView.ForeColorChanged","System::Windows::Forms::DataGridView::ForeColorChanged","System.Windows.Forms.DataGridView.GetAccessibilityObjectById","System::Windows::Forms::DataGridView::GetAccessibilityObjectById","System.Windows.Forms.DataGridView.GetCellCount","System::Windows::Forms::DataGridView::GetCellCount","System.Windows.Forms.DataGridView.GetCellDisplayRectangle","System::Windows::Forms::DataGridView::GetCellDisplayRectangle","System.Windows.Forms.DataGridView.GetClipboardContent","System::Windows::Forms::DataGridView::GetClipboardContent","System.Windows.Forms.DataGridView.GetColumnDisplayRectangle","System::Windows::Forms::DataGridView::GetColumnDisplayRectangle","System.Windows.Forms.DataGridView.GetRowDisplayRectangle","System::Windows::Forms::DataGridView::GetRowDisplayRectangle","System.Windows.Forms.DataGridView.GridColor","System::Windows::Forms::DataGridView::GridColor","System.Windows.Forms.DataGridView.GridColorChanged","System::Windows::Forms::DataGridView::GridColorChanged","System.Windows.Forms.DataGridView.HitTest","System::Windows::Forms::DataGridView::HitTest","System.Windows.Forms.DataGridView.HorizontalScrollBar","System::Windows::Forms::DataGridView::HorizontalScrollBar","System.Windows.Forms.DataGridView.HorizontalScrollingOffset","System::Windows::Forms::DataGridView::HorizontalScrollingOffset","System.Windows.Forms.DataGridView.InvalidateCell","System::Windows::Forms::DataGridView::InvalidateCell","System.Windows.Forms.DataGridView.InvalidateColumn","System::Windows::Forms::DataGridView::InvalidateColumn","System.Windows.Forms.DataGridView.InvalidateRow","System::Windows::Forms::DataGridView::InvalidateRow","System.Windows.Forms.DataGridView.IsCurrentCellDirty","System::Windows::Forms::DataGridView::IsCurrentCellDirty","System.Windows.Forms.DataGridView.IsCurrentCellInEditMode","System::Windows::Forms::DataGridView::IsCurrentCellInEditMode","System.Windows.Forms.DataGridView.IsCurrentRowDirty","System::Windows::Forms::DataGridView::IsCurrentRowDirty","System.Windows.Forms.DataGridView.IsInputChar","System::Windows::Forms::DataGridView::IsInputChar","System.Windows.Forms.DataGridView.IsInputKey","System::Windows::Forms::DataGridView::IsInputKey","System.Windows.Forms.DataGridView.Item","System::Windows::Forms::DataGridView::Item","System.Windows.Forms.DataGridView.MultiSelect","System::Windows::Forms::DataGridView::MultiSelect","System.Windows.Forms.DataGridView.MultiSelectChanged","System::Windows::Forms::DataGridView::MultiSelectChanged","System.Windows.Forms.DataGridView.NewRowIndex","System::Windows::Forms::DataGridView::NewRowIndex","System.Windows.Forms.DataGridView.NewRowNeeded","System::Windows::Forms::DataGridView::NewRowNeeded","System.Windows.Forms.DataGridView.NotifyCurrentCellDirty","System::Windows::Forms::DataGridView::NotifyCurrentCellDirty","System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged","System::Windows::Forms::DataGridView::OnAllowUserToAddRowsChanged","System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged","System::Windows::Forms::DataGridView::OnAllowUserToDeleteRowsChanged","System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged","System::Windows::Forms::DataGridView::OnAllowUserToOrderColumnsChanged","System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged","System::Windows::Forms::DataGridView::OnAllowUserToResizeColumnsChanged","System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged","System::Windows::Forms::DataGridView::OnAllowUserToResizeRowsChanged","System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged","System::Windows::Forms::DataGridView::OnAlternatingRowsDefaultCellStyleChanged","System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged","System::Windows::Forms::DataGridView::OnAutoGenerateColumnsChanged","System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged","System::Windows::Forms::DataGridView::OnAutoSizeColumnModeChanged","System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged","System::Windows::Forms::DataGridView::OnAutoSizeColumnsModeChanged","System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged","System::Windows::Forms::DataGridView::OnAutoSizeRowsModeChanged","System.Windows.Forms.DataGridView.OnBackgroundColorChanged","System::Windows::Forms::DataGridView::OnBackgroundColorChanged","System.Windows.Forms.DataGridView.OnBindingContextChanged","System::Windows::Forms::DataGridView::OnBindingContextChanged","System.Windows.Forms.DataGridView.OnBorderStyleChanged","System::Windows::Forms::DataGridView::OnBorderStyleChanged","System.Windows.Forms.DataGridView.OnCancelRowEdit","System::Windows::Forms::DataGridView::OnCancelRowEdit","System.Windows.Forms.DataGridView.OnCellBeginEdit","System::Windows::Forms::DataGridView::OnCellBeginEdit","System.Windows.Forms.DataGridView.OnCellBorderStyleChanged","System::Windows::Forms::DataGridView::OnCellBorderStyleChanged","System.Windows.Forms.DataGridView.OnCellClick","System::Windows::Forms::DataGridView::OnCellClick","System.Windows.Forms.DataGridView.OnCellContentClick","System::Windows::Forms::DataGridView::OnCellContentClick","System.Windows.Forms.DataGridView.OnCellContentDoubleClick","System::Windows::Forms::DataGridView::OnCellContentDoubleClick","System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged","System::Windows::Forms::DataGridView::OnCellContextMenuStripChanged","System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded","System::Windows::Forms::DataGridView::OnCellContextMenuStripNeeded","System.Windows.Forms.DataGridView.OnCellDoubleClick","System::Windows::Forms::DataGridView::OnCellDoubleClick","System.Windows.Forms.DataGridView.OnCellEndEdit","System::Windows::Forms::DataGridView::OnCellEndEdit","System.Windows.Forms.DataGridView.OnCellEnter","System::Windows::Forms::DataGridView::OnCellEnter","System.Windows.Forms.DataGridView.OnCellErrorTextChanged","System::Windows::Forms::DataGridView::OnCellErrorTextChanged","System.Windows.Forms.DataGridView.OnCellErrorTextNeeded","System::Windows::Forms::DataGridView::OnCellErrorTextNeeded","System.Windows.Forms.DataGridView.OnCellFormatting","System::Windows::Forms::DataGridView::OnCellFormatting","System.Windows.Forms.DataGridView.OnCellLeave","System::Windows::Forms::DataGridView::OnCellLeave","System.Windows.Forms.DataGridView.OnCellMouseClick","System::Windows::Forms::DataGridView::OnCellMouseClick","System.Windows.Forms.DataGridView.OnCellMouseDoubleClick","System::Windows::Forms::DataGridView::OnCellMouseDoubleClick","System.Windows.Forms.DataGridView.OnCellMouseDown","System::Windows::Forms::DataGridView::OnCellMouseDown","System.Windows.Forms.DataGridView.OnCellMouseEnter","System::Windows::Forms::DataGridView::OnCellMouseEnter","System.Windows.Forms.DataGridView.OnCellMouseLeave","System::Windows::Forms::DataGridView::OnCellMouseLeave","System.Windows.Forms.DataGridView.OnCellMouseMove","System::Windows::Forms::DataGridView::OnCellMouseMove","System.Windows.Forms.DataGridView.OnCellMouseUp","System::Windows::Forms::DataGridView::OnCellMouseUp","System.Windows.Forms.DataGridView.OnCellPainting","System::Windows::Forms::DataGridView::OnCellPainting","System.Windows.Forms.DataGridView.OnCellParsing","System::Windows::Forms::DataGridView::OnCellParsing","System.Windows.Forms.DataGridView.OnCellStateChanged","System::Windows::Forms::DataGridView::OnCellStateChanged","System.Windows.Forms.DataGridView.OnCellStyleChanged","System::Windows::Forms::DataGridView::OnCellStyleChanged","System.Windows.Forms.DataGridView.OnCellStyleContentChanged","System::Windows::Forms::DataGridView::OnCellStyleContentChanged","System.Windows.Forms.DataGridView.OnCellToolTipTextChanged","System::Windows::Forms::DataGridView::OnCellToolTipTextChanged","System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded","System::Windows::Forms::DataGridView::OnCellToolTipTextNeeded","System.Windows.Forms.DataGridView.OnCellValidated","System::Windows::Forms::DataGridView::OnCellValidated","System.Windows.Forms.DataGridView.OnCellValidating","System::Windows::Forms::DataGridView::OnCellValidating","System.Windows.Forms.DataGridView.OnCellValueChanged","System::Windows::Forms::DataGridView::OnCellValueChanged","System.Windows.Forms.DataGridView.OnCellValueNeeded","System::Windows::Forms::DataGridView::OnCellValueNeeded","System.Windows.Forms.DataGridView.OnCellValuePushed","System::Windows::Forms::DataGridView::OnCellValuePushed","System.Windows.Forms.DataGridView.OnColumnAdded","System::Windows::Forms::DataGridView::OnColumnAdded","System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged","System::Windows::Forms::DataGridView::OnColumnContextMenuStripChanged","System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged","System::Windows::Forms::DataGridView::OnColumnDataPropertyNameChanged","System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged","System::Windows::Forms::DataGridView::OnColumnDefaultCellStyleChanged","System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged","System::Windows::Forms::DataGridView::OnColumnDisplayIndexChanged","System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick","System::Windows::Forms::DataGridView::OnColumnDividerDoubleClick","System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged","System::Windows::Forms::DataGridView::OnColumnDividerWidthChanged","System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged","System::Windows::Forms::DataGridView::OnColumnHeaderCellChanged","System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick","System::Windows::Forms::DataGridView::OnColumnHeaderMouseClick","System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick","System::Windows::Forms::DataGridView::OnColumnHeaderMouseDoubleClick","System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged","System::Windows::Forms::DataGridView::OnColumnHeadersBorderStyleChanged","System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged","System::Windows::Forms::DataGridView::OnColumnHeadersDefaultCellStyleChanged","System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged","System::Windows::Forms::DataGridView::OnColumnHeadersHeightChanged","System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged","System::Windows::Forms::DataGridView::OnColumnHeadersHeightSizeModeChanged","System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged","System::Windows::Forms::DataGridView::OnColumnMinimumWidthChanged","System.Windows.Forms.DataGridView.OnColumnNameChanged","System::Windows::Forms::DataGridView::OnColumnNameChanged","System.Windows.Forms.DataGridView.OnColumnRemoved","System::Windows::Forms::DataGridView::OnColumnRemoved","System.Windows.Forms.DataGridView.OnColumnSortModeChanged","System::Windows::Forms::DataGridView::OnColumnSortModeChanged","System.Windows.Forms.DataGridView.OnColumnStateChanged","System::Windows::Forms::DataGridView::OnColumnStateChanged","System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged","System::Windows::Forms::DataGridView::OnColumnToolTipTextChanged","System.Windows.Forms.DataGridView.OnColumnWidthChanged","System::Windows::Forms::DataGridView::OnColumnWidthChanged","System.Windows.Forms.DataGridView.OnCurrentCellChanged","System::Windows::Forms::DataGridView::OnCurrentCellChanged","System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged","System::Windows::Forms::DataGridView::OnCurrentCellDirtyStateChanged","System.Windows.Forms.DataGridView.OnCursorChanged","System::Windows::Forms::DataGridView::OnCursorChanged","System.Windows.Forms.DataGridView.OnDataBindingComplete","System::Windows::Forms::DataGridView::OnDataBindingComplete","System.Windows.Forms.DataGridView.OnDataError","System::Windows::Forms::DataGridView::OnDataError","System.Windows.Forms.DataGridView.OnDataMemberChanged","System::Windows::Forms::DataGridView::OnDataMemberChanged","System.Windows.Forms.DataGridView.OnDataSourceChanged","System::Windows::Forms::DataGridView::OnDataSourceChanged","System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged","System::Windows::Forms::DataGridView::OnDefaultCellStyleChanged","System.Windows.Forms.DataGridView.OnDefaultValuesNeeded","System::Windows::Forms::DataGridView::OnDefaultValuesNeeded","System.Windows.Forms.DataGridView.OnDoubleClick","System::Windows::Forms::DataGridView::OnDoubleClick","System.Windows.Forms.DataGridView.OnEditingControlShowing","System::Windows::Forms::DataGridView::OnEditingControlShowing","System.Windows.Forms.DataGridView.OnEditModeChanged","System::Windows::Forms::DataGridView::OnEditModeChanged","System.Windows.Forms.DataGridView.OnEnabledChanged","System::Windows::Forms::DataGridView::OnEnabledChanged","System.Windows.Forms.DataGridView.OnEnter","System::Windows::Forms::DataGridView::OnEnter","System.Windows.Forms.DataGridView.OnFontChanged","System::Windows::Forms::DataGridView::OnFontChanged","System.Windows.Forms.DataGridView.OnForeColorChanged","System::Windows::Forms::DataGridView::OnForeColorChanged","System.Windows.Forms.DataGridView.OnGotFocus","System::Windows::Forms::DataGridView::OnGotFocus","System.Windows.Forms.DataGridView.OnGridColorChanged","System::Windows::Forms::DataGridView::OnGridColorChanged","System.Windows.Forms.DataGridView.OnHandleCreated","System::Windows::Forms::DataGridView::OnHandleCreated","System.Windows.Forms.DataGridView.OnHandleDestroyed","System::Windows::Forms::DataGridView::OnHandleDestroyed","System.Windows.Forms.DataGridView.OnKeyDown","System::Windows::Forms::DataGridView::OnKeyDown","System.Windows.Forms.DataGridView.OnKeyPress","System::Windows::Forms::DataGridView::OnKeyPress","System.Windows.Forms.DataGridView.OnKeyUp","System::Windows::Forms::DataGridView::OnKeyUp","System.Windows.Forms.DataGridView.OnLayout","System::Windows::Forms::DataGridView::OnLayout","System.Windows.Forms.DataGridView.OnLeave","System::Windows::Forms::DataGridView::OnLeave","System.Windows.Forms.DataGridView.OnLostFocus","System::Windows::Forms::DataGridView::OnLostFocus","System.Windows.Forms.DataGridView.OnMouseClick","System::Windows::Forms::DataGridView::OnMouseClick","System.Windows.Forms.DataGridView.OnMouseDoubleClick","System::Windows::Forms::DataGridView::OnMouseDoubleClick","System.Windows.Forms.DataGridView.OnMouseDown","System::Windows::Forms::DataGridView::OnMouseDown","System.Windows.Forms.DataGridView.OnMouseEnter","System::Windows::Forms::DataGridView::OnMouseEnter","System.Windows.Forms.DataGridView.OnMouseLeave","System::Windows::Forms::DataGridView::OnMouseLeave","System.Windows.Forms.DataGridView.OnMouseMove","System::Windows::Forms::DataGridView::OnMouseMove","System.Windows.Forms.DataGridView.OnMouseUp","System::Windows::Forms::DataGridView::OnMouseUp","System.Windows.Forms.DataGridView.OnMouseWheel","System::Windows::Forms::DataGridView::OnMouseWheel","System.Windows.Forms.DataGridView.OnMultiSelectChanged","System::Windows::Forms::DataGridView::OnMultiSelectChanged","System.Windows.Forms.DataGridView.OnNewRowNeeded","System::Windows::Forms::DataGridView::OnNewRowNeeded","System.Windows.Forms.DataGridView.OnPaint","System::Windows::Forms::DataGridView::OnPaint","System.Windows.Forms.DataGridView.OnReadOnlyChanged","System::Windows::Forms::DataGridView::OnReadOnlyChanged","System.Windows.Forms.DataGridView.OnResize","System::Windows::Forms::DataGridView::OnResize","System.Windows.Forms.DataGridView.OnRightToLeftChanged","System::Windows::Forms::DataGridView::OnRightToLeftChanged","System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged","System::Windows::Forms::DataGridView::OnRowContextMenuStripChanged","System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded","System::Windows::Forms::DataGridView::OnRowContextMenuStripNeeded","System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged","System::Windows::Forms::DataGridView::OnRowDefaultCellStyleChanged","System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded","System::Windows::Forms::DataGridView::OnRowDirtyStateNeeded","System.Windows.Forms.DataGridView.OnRowDividerDoubleClick","System::Windows::Forms::DataGridView::OnRowDividerDoubleClick","System.Windows.Forms.DataGridView.OnRowDividerHeightChanged","System::Windows::Forms::DataGridView::OnRowDividerHeightChanged","System.Windows.Forms.DataGridView.OnRowEnter","System::Windows::Forms::DataGridView::OnRowEnter","System.Windows.Forms.DataGridView.OnRowErrorTextChanged","System::Windows::Forms::DataGridView::OnRowErrorTextChanged","System.Windows.Forms.DataGridView.OnRowErrorTextNeeded","System::Windows::Forms::DataGridView::OnRowErrorTextNeeded","System.Windows.Forms.DataGridView.OnRowHeaderCellChanged","System::Windows::Forms::DataGridView::OnRowHeaderCellChanged","System.Windows.Forms.DataGridView.OnRowHeaderMouseClick","System::Windows::Forms::DataGridView::OnRowHeaderMouseClick","System.Windows.Forms.DataGridView.OnRowHeaderMouseDoubleClick","System::Windows::Forms::DataGridView::OnRowHeaderMouseDoubleClick","System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged","System::Windows::Forms::DataGridView::OnRowHeadersBorderStyleChanged","System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged","System::Windows::Forms::DataGridView::OnRowHeadersDefaultCellStyleChanged","System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged","System::Windows::Forms::DataGridView::OnRowHeadersWidthChanged","System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged","System::Windows::Forms::DataGridView::OnRowHeadersWidthSizeModeChanged","System.Windows.Forms.DataGridView.OnRowHeightChanged","System::Windows::Forms::DataGridView::OnRowHeightChanged","System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded","System::Windows::Forms::DataGridView::OnRowHeightInfoNeeded","System.Windows.Forms.DataGridView.OnRowHeightInfoPushed","System::Windows::Forms::DataGridView::OnRowHeightInfoPushed","System.Windows.Forms.DataGridView.OnRowLeave","System::Windows::Forms::DataGridView::OnRowLeave","System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged","System::Windows::Forms::DataGridView::OnRowMinimumHeightChanged","System.Windows.Forms.DataGridView.OnRowPostPaint","System::Windows::Forms::DataGridView::OnRowPostPaint","System.Windows.Forms.DataGridView.OnRowPrePaint","System::Windows::Forms::DataGridView::OnRowPrePaint","System.Windows.Forms.DataGridView.OnRowsAdded","System::Windows::Forms::DataGridView::OnRowsAdded","System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged","System::Windows::Forms::DataGridView::OnRowsDefaultCellStyleChanged","System.Windows.Forms.DataGridView.OnRowsRemoved","System::Windows::Forms::DataGridView::OnRowsRemoved","System.Windows.Forms.DataGridView.OnRowStateChanged","System::Windows::Forms::DataGridView::OnRowStateChanged","System.Windows.Forms.DataGridView.OnRowUnshared","System::Windows::Forms::DataGridView::OnRowUnshared","System.Windows.Forms.DataGridView.OnRowValidated","System::Windows::Forms::DataGridView::OnRowValidated","System.Windows.Forms.DataGridView.OnRowValidating","System::Windows::Forms::DataGridView::OnRowValidating","System.Windows.Forms.DataGridView.OnScroll","System::Windows::Forms::DataGridView::OnScroll","System.Windows.Forms.DataGridView.OnSelectionChanged","System::Windows::Forms::DataGridView::OnSelectionChanged","System.Windows.Forms.DataGridView.OnSortCompare","System::Windows::Forms::DataGridView::OnSortCompare","System.Windows.Forms.DataGridView.OnSorted","System::Windows::Forms::DataGridView::OnSorted","System.Windows.Forms.DataGridView.OnUserAddedRow","System::Windows::Forms::DataGridView::OnUserAddedRow","System.Windows.Forms.DataGridView.OnUserDeletedRow","System::Windows::Forms::DataGridView::OnUserDeletedRow","System.Windows.Forms.DataGridView.OnUserDeletingRow","System::Windows::Forms::DataGridView::OnUserDeletingRow","System.Windows.Forms.DataGridView.OnValidating","System::Windows::Forms::DataGridView::OnValidating","System.Windows.Forms.DataGridView.OnVisibleChanged","System::Windows::Forms::DataGridView::OnVisibleChanged","System.Windows.Forms.DataGridView.Padding","System::Windows::Forms::DataGridView::Padding","System.Windows.Forms.DataGridView.PaddingChanged","System::Windows::Forms::DataGridView::PaddingChanged","System.Windows.Forms.DataGridView.PaintBackground","System::Windows::Forms::DataGridView::PaintBackground","System.Windows.Forms.DataGridView.ProcessAKey","System::Windows::Forms::DataGridView::ProcessAKey","System.Windows.Forms.DataGridView.ProcessDataGridViewKey","System::Windows::Forms::DataGridView::ProcessDataGridViewKey","System.Windows.Forms.DataGridView.ProcessDeleteKey","System::Windows::Forms::DataGridView::ProcessDeleteKey","System.Windows.Forms.DataGridView.ProcessDialogKey","System::Windows::Forms::DataGridView::ProcessDialogKey","System.Windows.Forms.DataGridView.ProcessDownKey","System::Windows::Forms::DataGridView::ProcessDownKey","System.Windows.Forms.DataGridView.ProcessEndKey","System::Windows::Forms::DataGridView::ProcessEndKey","System.Windows.Forms.DataGridView.ProcessEnterKey","System::Windows::Forms::DataGridView::ProcessEnterKey","System.Windows.Forms.DataGridView.ProcessEscapeKey","System::Windows::Forms::DataGridView::ProcessEscapeKey","System.Windows.Forms.DataGridView.ProcessF2Key","System::Windows::Forms::DataGridView::ProcessF2Key","System.Windows.Forms.DataGridView.ProcessHomeKey","System::Windows::Forms::DataGridView::ProcessHomeKey","System.Windows.Forms.DataGridView.ProcessInsertKey","System::Windows::Forms::DataGridView::ProcessInsertKey","System.Windows.Forms.DataGridView.ProcessKeyEventArgs","System::Windows::Forms::DataGridView::ProcessKeyEventArgs","System.Windows.Forms.DataGridView.ProcessKeyPreview","System::Windows::Forms::DataGridView::ProcessKeyPreview","System.Windows.Forms.DataGridView.ProcessLeftKey","System::Windows::Forms::DataGridView::ProcessLeftKey","System.Windows.Forms.DataGridView.ProcessNextKey","System::Windows::Forms::DataGridView::ProcessNextKey","System.Windows.Forms.DataGridView.ProcessPriorKey","System::Windows::Forms::DataGridView::ProcessPriorKey","System.Windows.Forms.DataGridView.ProcessRightKey","System::Windows::Forms::DataGridView::ProcessRightKey","System.Windows.Forms.DataGridView.ProcessSpaceKey","System::Windows::Forms::DataGridView::ProcessSpaceKey","System.Windows.Forms.DataGridView.ProcessTabKey","System::Windows::Forms::DataGridView::ProcessTabKey","System.Windows.Forms.DataGridView.ProcessUpKey","System::Windows::Forms::DataGridView::ProcessUpKey","System.Windows.Forms.DataGridView.ProcessZeroKey","System::Windows::Forms::DataGridView::ProcessZeroKey","System.Windows.Forms.DataGridView.ReadOnly","System::Windows::Forms::DataGridView::ReadOnly","System.Windows.Forms.DataGridView.ReadOnlyChanged","System::Windows::Forms::DataGridView::ReadOnlyChanged","System.Windows.Forms.DataGridView.RefreshEdit","System::Windows::Forms::DataGridView::RefreshEdit","System.Windows.Forms.DataGridView.ResetText","System::Windows::Forms::DataGridView::ResetText","System.Windows.Forms.DataGridView.RowContextMenuStripChanged","System::Windows::Forms::DataGridView::RowContextMenuStripChanged","System.Windows.Forms.DataGridView.RowContextMenuStripNeeded","System::Windows::Forms::DataGridView::RowContextMenuStripNeeded","System.Windows.Forms.DataGridView.RowCount","System::Windows::Forms::DataGridView::RowCount","System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged","System::Windows::Forms::DataGridView::RowDefaultCellStyleChanged","System.Windows.Forms.DataGridView.RowDirtyStateNeeded","System::Windows::Forms::DataGridView::RowDirtyStateNeeded","System.Windows.Forms.DataGridView.RowDividerDoubleClick","System::Windows::Forms::DataGridView::RowDividerDoubleClick","System.Windows.Forms.DataGridView.RowDividerHeightChanged","System::Windows::Forms::DataGridView::RowDividerHeightChanged","System.Windows.Forms.DataGridView.RowEnter","System::Windows::Forms::DataGridView::RowEnter","System.Windows.Forms.DataGridView.RowErrorTextChanged","System::Windows::Forms::DataGridView::RowErrorTextChanged","System.Windows.Forms.DataGridView.RowErrorTextNeeded","System::Windows::Forms::DataGridView::RowErrorTextNeeded","System.Windows.Forms.DataGridView.RowHeaderCellChanged","System::Windows::Forms::DataGridView::RowHeaderCellChanged","System.Windows.Forms.DataGridView.RowHeaderMouseClick","System::Windows::Forms::DataGridView::RowHeaderMouseClick","System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick","System::Windows::Forms::DataGridView::RowHeaderMouseDoubleClick","System.Windows.Forms.DataGridView.RowHeadersBorderStyle","System::Windows::Forms::DataGridView::RowHeadersBorderStyle","System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged","System::Windows::Forms::DataGridView::RowHeadersBorderStyleChanged","System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle","System::Windows::Forms::DataGridView::RowHeadersDefaultCellStyle","System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged","System::Windows::Forms::DataGridView::RowHeadersDefaultCellStyleChanged","System.Windows.Forms.DataGridView.RowHeadersVisible","System::Windows::Forms::DataGridView::RowHeadersVisible","System.Windows.Forms.DataGridView.RowHeadersWidth","System::Windows::Forms::DataGridView::RowHeadersWidth","System.Windows.Forms.DataGridView.RowHeadersWidthChanged","System::Windows::Forms::DataGridView::RowHeadersWidthChanged","System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode","System::Windows::Forms::DataGridView::RowHeadersWidthSizeMode","System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged","System::Windows::Forms::DataGridView::RowHeadersWidthSizeModeChanged","System.Windows.Forms.DataGridView.RowHeightChanged","System::Windows::Forms::DataGridView::RowHeightChanged","System.Windows.Forms.DataGridView.RowHeightInfoNeeded","System::Windows::Forms::DataGridView::RowHeightInfoNeeded","System.Windows.Forms.DataGridView.RowHeightInfoPushed","System::Windows::Forms::DataGridView::RowHeightInfoPushed","System.Windows.Forms.DataGridView.RowLeave","System::Windows::Forms::DataGridView::RowLeave","System.Windows.Forms.DataGridView.RowMinimumHeightChanged","System::Windows::Forms::DataGridView::RowMinimumHeightChanged","System.Windows.Forms.DataGridView.RowPostPaint","System::Windows::Forms::DataGridView::RowPostPaint","System.Windows.Forms.DataGridView.RowPrePaint","System::Windows::Forms::DataGridView::RowPrePaint","System.Windows.Forms.DataGridView.Rows","System::Windows::Forms::DataGridView::Rows","System.Windows.Forms.DataGridView.RowsAdded","System::Windows::Forms::DataGridView::RowsAdded","System.Windows.Forms.DataGridView.RowsDefaultCellStyle","System::Windows::Forms::DataGridView::RowsDefaultCellStyle","System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged","System::Windows::Forms::DataGridView::RowsDefaultCellStyleChanged","System.Windows.Forms.DataGridView.RowsRemoved","System::Windows::Forms::DataGridView::RowsRemoved","System.Windows.Forms.DataGridView.RowStateChanged","System::Windows::Forms::DataGridView::RowStateChanged","System.Windows.Forms.DataGridView.RowTemplate","System::Windows::Forms::DataGridView::RowTemplate","System.Windows.Forms.DataGridView.RowUnshared","System::Windows::Forms::DataGridView::RowUnshared","System.Windows.Forms.DataGridView.RowValidated","System::Windows::Forms::DataGridView::RowValidated","System.Windows.Forms.DataGridView.RowValidating","System::Windows::Forms::DataGridView::RowValidating","System.Windows.Forms.DataGridView.Scroll","System::Windows::Forms::DataGridView::Scroll","System.Windows.Forms.DataGridView.ScrollBars","System::Windows::Forms::DataGridView::ScrollBars","System.Windows.Forms.DataGridView.SelectAll","System::Windows::Forms::DataGridView::SelectAll","System.Windows.Forms.DataGridView.SelectedCells","System::Windows::Forms::DataGridView::SelectedCells","System.Windows.Forms.DataGridView.SelectedColumns","System::Windows::Forms::DataGridView::SelectedColumns","System.Windows.Forms.DataGridView.SelectedRows","System::Windows::Forms::DataGridView::SelectedRows","System.Windows.Forms.DataGridView.SelectionChanged","System::Windows::Forms::DataGridView::SelectionChanged","System.Windows.Forms.DataGridView.SelectionMode","System::Windows::Forms::DataGridView::SelectionMode","System.Windows.Forms.DataGridView.SetBoundsCore","System::Windows::Forms::DataGridView::SetBoundsCore","System.Windows.Forms.DataGridView.SetCurrentCellAddressCore","System::Windows::Forms::DataGridView::SetCurrentCellAddressCore","System.Windows.Forms.DataGridView.SetSelectedCellCore","System::Windows::Forms::DataGridView::SetSelectedCellCore","System.Windows.Forms.DataGridView.SetSelectedColumnCore","System::Windows::Forms::DataGridView::SetSelectedColumnCore","System.Windows.Forms.DataGridView.SetSelectedRowCore","System::Windows::Forms::DataGridView::SetSelectedRowCore","System.Windows.Forms.DataGridView.ShowCellErrors","System::Windows::Forms::DataGridView::ShowCellErrors","System.Windows.Forms.DataGridView.ShowCellToolTips","System::Windows::Forms::DataGridView::ShowCellToolTips","System.Windows.Forms.DataGridView.ShowEditingIcon","System::Windows::Forms::DataGridView::ShowEditingIcon","System.Windows.Forms.DataGridView.ShowRowErrors","System::Windows::Forms::DataGridView::ShowRowErrors","System.Windows.Forms.DataGridView.Sort","System::Windows::Forms::DataGridView::Sort","System.Windows.Forms.DataGridView.SortCompare","System::Windows::Forms::DataGridView::SortCompare","System.Windows.Forms.DataGridView.Sorted","System::Windows::Forms::DataGridView::Sorted","System.Windows.Forms.DataGridView.SortedColumn","System::Windows::Forms::DataGridView::SortedColumn","System.Windows.Forms.DataGridView.SortOrder","System::Windows::Forms::DataGridView::SortOrder","System.Windows.Forms.DataGridView.StandardTab","System::Windows::Forms::DataGridView::StandardTab","System.Windows.Forms.DataGridView.StyleChanged","System::Windows::Forms::DataGridView::StyleChanged","System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#BeginInit","System::Windows::Forms::DataGridView::System#ComponentModel#ISupportInitialize#BeginInit","System.Windows.Forms.DataGridView.System#ComponentModel#ISupportInitialize#EndInit","System::Windows::Forms::DataGridView::System#ComponentModel#ISupportInitialize#EndInit","System.Windows.Forms.DataGridView.Text","System::Windows::Forms::DataGridView::Text","System.Windows.Forms.DataGridView.TextChanged","System::Windows::Forms::DataGridView::TextChanged","System.Windows.Forms.DataGridView.TopLeftHeaderCell","System::Windows::Forms::DataGridView::TopLeftHeaderCell","System.Windows.Forms.DataGridView.UpdateCellErrorText","System::Windows::Forms::DataGridView::UpdateCellErrorText","System.Windows.Forms.DataGridView.UpdateCellValue","System::Windows::Forms::DataGridView::UpdateCellValue","System.Windows.Forms.DataGridView.UpdateRowErrorText","System::Windows::Forms::DataGridView::UpdateRowErrorText","System.Windows.Forms.DataGridView.UpdateRowHeightInfo","System::Windows::Forms::DataGridView::UpdateRowHeightInfo","System.Windows.Forms.DataGridView.UserAddedRow","System::Windows::Forms::DataGridView::UserAddedRow","System.Windows.Forms.DataGridView.UserDeletedRow","System::Windows::Forms::DataGridView::UserDeletedRow","System.Windows.Forms.DataGridView.UserDeletingRow","System::Windows::Forms::DataGridView::UserDeletingRow","System.Windows.Forms.DataGridView.UserSetCursor","System::Windows::Forms::DataGridView::UserSetCursor","System.Windows.Forms.DataGridView.VerticalScrollBar","System::Windows::Forms::DataGridView::VerticalScrollBar","System.Windows.Forms.DataGridView.VerticalScrollingOffset","System::Windows::Forms::DataGridView::VerticalScrollingOffset","System.Windows.Forms.DataGridView.VirtualMode","System::Windows::Forms::DataGridView::VirtualMode","System.Windows.Forms.DataGridView.WndProc","System::Windows::Forms::DataGridView::WndProc"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"7819b745-1702-980d-8722-b5488808c09e","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Windows.Forms\\DataGridView.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/DataGridView.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DataGridView class | Microsoft Docs","_op_ogTitle":"DataGridView class","description":"Displays data in a customizable grid.\n","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.DataGridView","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.datagridview","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.datagridview","fileRelativePath":"System.Windows.Forms.DataGridView.html"},"themesRelativePathToOutputRoot":"_themes/"}