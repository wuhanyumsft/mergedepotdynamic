{"content":"    \r\n    <h1 id=\"System_Net_IWebProxy\">\r\n      <span class=\"lang-csharp\">IWebProxy</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides the base interface for implementation of proxy access for the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IWebProxy</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The IWebProxy interface provides the methods and properties that are required by the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> class to access proxy servers.  </p>\n<p> The <a class=\"xref\" href=\"system.net.webproxy\" data-linktype=\"relative-path\">WebProxy</a> class is the base implementation of the IWebProxy interface.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IWebProxy_Credentials\" data-linktype=\"self-bookmark\">Credentials</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The credentials to submit to the proxy server for authentication.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IWebProxy_GetProxy_System_Uri_\" data-linktype=\"self-bookmark\">GetProxy(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the URI of a proxy.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Net_IWebProxy_IsBypassed_System_Uri_\" data-linktype=\"self-bookmark\">IsBypassed(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates that the proxy should not be used for the specified host.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IWebProxy_Credentials\">\r\n    \r\n            <a id=\"System_Net_IWebProxy_Credentials_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Credentials</div>        \r\n          </div>\r\n    \r\n            <p>The credentials to submit to the proxy server for authentication.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Net.ICredentials Credentials { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.net.icredentials\" data-linktype=\"relative-path\">ICredentials</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.net.icredentials\" data-linktype=\"relative-path\">ICredentials</a> instance that contains the credentials that are needed to authenticate a request to the proxy server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Credentials property is an <a class=\"xref\" href=\"system.net.icredentials\" data-linktype=\"relative-path\">ICredentials</a> instance that contains the authorization credentials to send to the proxy server in response to an HTTP 407 (proxy authorization) status code.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.net.webproxy#System_Net_WebProxy_Credentials_\" data-linktype=\"relative-path\">Credentials</a> property to set the credentials that will be submitted to the proxy server for authentication.  </p>\n<pre><code class=\"lang-cs\" name=\"IWebProxy_Interface#1\">public class WebProxy_Interface : IWebProxy\n\n{\n\n\t// The credentials to be used with the web proxy.\n\tprivate ICredentials iCredentials;\n\n\t// Uri of the associated proxy server.\n\tprivate Uri webProxyUri;\n\n\tpublic WebProxy_Interface(Uri proxyUri) {\n\n\t\twebProxyUri = proxyUri;\t\n\n\t}\n\n\t// Get and Set the Credentials property.\n\tpublic ICredentials Credentials {\n\t\tget {\n\t\t\treturn iCredentials;\n\t\t}\n\t\tset {\n\t\t\tif(iCredentials != value)\n\t\t\t\tiCredentials = value;\n\t\t}\n\t}\n\n\t// Return the web proxy for the specified destination(destUri).\n\tpublic Uri GetProxy(Uri destUri) {\n\n\t\t// Always use the same proxy.\n\t\treturn webProxyUri;\n\n\t}\n\n\t// Return whether the web proxy should be bypassed for the specified destination(hostUri).\n\tpublic bool IsBypassed(Uri hostUri) {\n\n\t\t// Never bypass the proxy.\n\t\treturn false;\n\n\t}\n};\n</code></pre><pre><code class=\"lang-vb\" name=\"IWebProxy_Interface#1\">Public Class WebProxy_Interface\n    Implements IWebProxy\n    \n    \n    &#39;The credentials to be used with the web proxy.\n    Private iCredentials As ICredentials\n    \n    &#39;Uri of the associated proxy server.\n    Private webProxyUri As Uri\n    \n    \n    Sub New(proxyUri As Uri)\n        \n        webProxyUri = proxyUri\n    End Sub &#39;New \n    \n\n    &#39;Get and Set the Credentials property.\n    \n    Public Property Credentials() As ICredentials Implements IWebProxy.Credentials\n        Get\n            Return iCredentials\n        End Get\n        Set\n            If iCredentials Is value Then\n                iCredentials = value\n            End If\n        End Set\n    End Property\n     \n    &#39;Returns the web proxy for the specified destination(destUri).\n    Public Function GetProxy(destUri As Uri) As Uri Implements IWebProxy.GetProxy\n        \n        &#39;Always use the same proxy.\n        Return webProxyUri\n    End Function &#39;GetProxy\n     \n    \n    &#39;Returns whether the web proxy should be bypassed for the specified destination(hostUri).\n    Public Function IsBypassed(hostUri As Uri) As Boolean Implements IWebProxy.IsBypassed\n       &#39;Never bypass the proxy.\n        Return False\n    End Function &#39;IsBypassed \nEnd Class &#39;WebProxy_Interface\n\n\n</code></pre><pre><code class=\"lang-cpp\" name=\"IWebProxy_Interface#1\">public ref class WebProxy_Interface: public IWebProxy\n{\nprivate:\n   // The credentials to be used with the web proxy.\n   ICredentials^ iCredentials;\n\n   // Uri of the associated proxy server.\n   Uri^ webProxyUri;\n\npublic:\n   WebProxy_Interface( Uri^ proxyUri )\n   {\n      webProxyUri = proxyUri;\n   }\n\n   property ICredentials^ Credentials \n   {\n      // Get and Set the Credentials property.\n      virtual ICredentials^ get()\n      {\n         return iCredentials;\n      }\n      virtual void set( ICredentials^ value )\n      {\n         if ( iCredentials != value )\n         {\n            iCredentials = value;\n         }\n      }\n   }\n\n   // Return the web proxy for the specified destination (destUri).\n   virtual Uri^ GetProxy( Uri^ destUri )\n   {\n      // Always use the same proxy.\n      return webProxyUri;\n   }\n\n   // Return whether the web proxy should be bypassed for the specified destination (hostUri).\n   virtual bool IsBypassed( Uri^ hostUri )\n   {\n      // Never bypass the proxy.\n      return false;\n   }\n};\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IWebProxy_GetProxy_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_IWebProxy_GetProxy_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetProxy(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the URI of a proxy.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri GetProxy (Uri destination);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>destination</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> that specifies the requested Internet resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance that contains the URI of the proxy used to contact <code>destination</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetProxy method returns the URI of the proxy server that handles requests to the Internet resource that is specified in the <code>destination</code> parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.net.webproxy#System_Net_WebProxy_GetProxy_\" data-linktype=\"relative-path\">GetProxy</a> method to return the URI that the <a class=\"xref\" href=\"system.net.webrequest\" data-linktype=\"relative-path\">WebRequest</a> uses to access the Internet resource.  </p>\n<pre><code class=\"lang-cs\" name=\"IWebProxy_Interface#4\">\t\tWebProxy_Interface webProxy_Interface = new WebProxy_Interface(new Uri(&quot;http://proxy.example.com&quot;));\n\n\t\twebProxy_Interface.Credentials = new NetworkCredential(&quot;myusername&quot;, &quot;mypassword&quot;);\n\n\t\tConsole.WriteLine(&quot;The web proxy is : {0}&quot;, webProxy_Interface.GetProxy(new Uri(&quot;http://www.contoso.com&quot;)));\n\n\t\t// Determine whether the Web proxy can be bypassed for the site &quot;http://www.contoso.com&quot;.\n\t\tif(webProxy_Interface.IsBypassed(new Uri(&quot;http://www.contoso.com&quot;)))\n\t\t\tConsole.WriteLine(&quot;Web Proxy is by passed&quot;);\n\t\telse\n\t\t\tConsole.WriteLine(&quot;Web Proxy is not by passed&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"IWebProxy_Interface#4\">   \n    Public Shared Sub Main()\n        Dim webProxy_Interface As New WebProxy_Interface(New Uri(&quot;http://proxy.example.com&quot;))\n        \n        webProxy_Interface.Credentials = New NetworkCredential(&quot;myusername&quot;, &quot;mypassword&quot;)\n        \n        Console.WriteLine(&quot;The web proxy is : {0}&quot;, webProxy_Interface.GetProxy(New Uri(&quot;http://www.contoso.com&quot;)))\n        \n        &#39;Determine whether the Web proxy can be bypassed for the site &quot;http://www.contoso.com&quot;.\n\tconsole.writeline(&quot;For the Uri http://www.contoso.com , the &quot;)\n        If webProxy_Interface.IsBypassed(New Uri(&quot;http://www.contoso.com&quot;)) Then\n            Console.WriteLine(&quot;webproxy is by passed&quot;)\n        Else\n            Console.WriteLine(&quot;webproxy is not bypassed&quot;)\n        End If \n    End Sub &#39;Main\n</code></pre><pre><code class=\"lang-cpp\" name=\"IWebProxy_Interface#4\">   WebProxy_Interface^ webProxy_Interface = gcnew WebProxy_Interface( gcnew Uri( &quot;http://proxy.example.com&quot; ) );\n\n   webProxy_Interface-&gt;Credentials = gcnew NetworkCredential( &quot;myusername&quot;, &quot;mypassword&quot; );\n\n   Console::WriteLine( &quot;The web proxy is : {0}&quot;, webProxy_Interface-&gt;GetProxy( gcnew Uri( &quot;http://www.contoso.com&quot; ) ) );\n\n   // Check if the webproxy can ne bypassed for the site &quot;http://www.contoso.com&quot;.\n   if ( webProxy_Interface-&gt;IsBypassed( gcnew Uri( &quot;http://www.contoso.com&quot; ) ) )\n   {\n      Console::WriteLine( &quot;Web Proxy is by passed&quot; );\n   }\n   else\n   {\n      Console::WriteLine( &quot;Web Proxy is not by passed&quot; );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Net_IWebProxy_IsBypassed_System_Uri_\">\r\n    \r\n            <a id=\"System_Net_IWebProxy_IsBypassed_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsBypassed(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates that the proxy should not be used for the specified host.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsBypassed (Uri host);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>host</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> of the host to check for proxy use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the proxy server should not be used for <code>host</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsBypassed method indicates whether to use the proxy server to access the host that is specified in the <code>host</code> parameter. If IsBypassed is <code>true</code>, the proxy is not used to contact the host and the request is passed directly to the server.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.net.webproxy#System_Net_WebProxy_IsBypassed_\" data-linktype=\"relative-path\">IsBypassed</a> property to determine whether the proxy server should be used for the specified host.  </p>\n<pre><code class=\"lang-cs\" name=\"IWebProxy_Interface#4\">\t\tWebProxy_Interface webProxy_Interface = new WebProxy_Interface(new Uri(&quot;http://proxy.example.com&quot;));\n\n\t\twebProxy_Interface.Credentials = new NetworkCredential(&quot;myusername&quot;, &quot;mypassword&quot;);\n\n\t\tConsole.WriteLine(&quot;The web proxy is : {0}&quot;, webProxy_Interface.GetProxy(new Uri(&quot;http://www.contoso.com&quot;)));\n\n\t\t// Determine whether the Web proxy can be bypassed for the site &quot;http://www.contoso.com&quot;.\n\t\tif(webProxy_Interface.IsBypassed(new Uri(&quot;http://www.contoso.com&quot;)))\n\t\t\tConsole.WriteLine(&quot;Web Proxy is by passed&quot;);\n\t\telse\n\t\t\tConsole.WriteLine(&quot;Web Proxy is not by passed&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"IWebProxy_Interface#4\">   \n    Public Shared Sub Main()\n        Dim webProxy_Interface As New WebProxy_Interface(New Uri(&quot;http://proxy.example.com&quot;))\n        \n        webProxy_Interface.Credentials = New NetworkCredential(&quot;myusername&quot;, &quot;mypassword&quot;)\n        \n        Console.WriteLine(&quot;The web proxy is : {0}&quot;, webProxy_Interface.GetProxy(New Uri(&quot;http://www.contoso.com&quot;)))\n        \n        &#39;Determine whether the Web proxy can be bypassed for the site &quot;http://www.contoso.com&quot;.\n\tconsole.writeline(&quot;For the Uri http://www.contoso.com , the &quot;)\n        If webProxy_Interface.IsBypassed(New Uri(&quot;http://www.contoso.com&quot;)) Then\n            Console.WriteLine(&quot;webproxy is by passed&quot;)\n        Else\n            Console.WriteLine(&quot;webproxy is not bypassed&quot;)\n        End If \n    End Sub &#39;Main\n</code></pre><pre><code class=\"lang-cpp\" name=\"IWebProxy_Interface#4\">   WebProxy_Interface^ webProxy_Interface = gcnew WebProxy_Interface( gcnew Uri( &quot;http://proxy.example.com&quot; ) );\n\n   webProxy_Interface-&gt;Credentials = gcnew NetworkCredential( &quot;myusername&quot;, &quot;mypassword&quot; );\n\n   Console::WriteLine( &quot;The web proxy is : {0}&quot;, webProxy_Interface-&gt;GetProxy( gcnew Uri( &quot;http://www.contoso.com&quot; ) ) );\n\n   // Check if the webproxy can ne bypassed for the site &quot;http://www.contoso.com&quot;.\n   if ( webProxy_Interface-&gt;IsBypassed( gcnew Uri( &quot;http://www.contoso.com&quot; ) ) )\n   {\n      Console::WriteLine( &quot;Web Proxy is by passed&quot; );\n   }\n   else\n   {\n      Console::WriteLine( &quot;Web Proxy is not by passed&quot; );\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.IWebProxy.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.IWebProxy.yml\">\r\n<meta name=\"APIName\" content=\"System.Net.IWebProxy\">\r\n<meta name=\"APIName\" content=\"System.Net.IWebProxy.Credentials\">\r\n<meta name=\"APIName\" content=\"System.Net.IWebProxy.GetProxy\">\r\n<meta name=\"APIName\" content=\"System.Net.IWebProxy.IsBypassed\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ec6fb861-b531-450a-b1db-20e957f74e46\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the base interface for implementation of proxy access for the  class.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Net/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Net.IWebProxy\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Net.IWebProxy.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Net.IWebProxy.yml","open_to_public_contributors":true,"api_name":["System.Net.IWebProxy","System.Net.IWebProxy.Credentials","System.Net.IWebProxy.GetProxy","System.Net.IWebProxy.IsBypassed"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Net.IWebProxy","System::Net::IWebProxy","System.Net.IWebProxy.Credentials","System::Net::IWebProxy::Credentials","System.Net.IWebProxy.GetProxy","System::Net::IWebProxy::GetProxy","System.Net.IWebProxy.IsBypassed","System::Net::IWebProxy::IsBypassed"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ec6fb861-b531-450a-b1db-20e957f74e46","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Net/IWebProxy.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IWebProxy interface | Microsoft Docs","_op_ogTitle":"IWebProxy interface","description":"Provides the base interface for implementation of proxy access for the  class.\n","toc_asset_id":"_splitted/System.Net/toc.json","toc_rel":"_splitted/System.Net/toc.json","source_url":"","ms.assetid":"System.Net.IWebProxy","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.iwebproxy","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.net.iwebproxy","fileRelativePath":"System.Net.IWebProxy.html"},"themesRelativePathToOutputRoot":"_themes/"}