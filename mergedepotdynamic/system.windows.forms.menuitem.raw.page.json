{"content":"    \r\n    <h1 id=\"System_Windows_Forms_MenuItem\">\r\n      <span class=\"lang-csharp\">MenuItem</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents an individual item that is displayed within a <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> or <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a>. Although <a class=\"xref\" href=\"system.windows.forms.toolstripmenuitem\" data-linktype=\"relative-path\">ToolStripMenuItem</a> replaces and adds functionality to the MenuItem control of previous versions, MenuItem is retained for both backward compatibility and future use if you choose.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.DefaultEvent(&quot;Click&quot;)]\n[System.ComponentModel.DefaultProperty(&quot;Text&quot;)]\n[System.ComponentModel.DesignTimeVisible(false)]\n[System.ComponentModel.ToolboxItem(false)]\npublic class MenuItem : System.Windows.Forms.Menu</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject\" data-linktype=\"relative-path\">MarshalByRefObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component\" data-linktype=\"relative-path\">Component</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l3\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.menu\" data-linktype=\"relative-path\">System.Windows.Forms.Menu</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l4\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">MenuItem</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_CanRaiseEvents\" data-linktype=\"relative-path\">CanRaiseEvents</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Container\" data-linktype=\"relative-path\">Container</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_DesignMode\" data-linktype=\"relative-path\">DesignMode</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Dispose\" data-linktype=\"relative-path\">Dispose()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Disposed\" data-linktype=\"relative-path\">Disposed</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Events\" data-linktype=\"relative-path\">Events</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_GetService_System_Type_\" data-linktype=\"relative-path\">GetService(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.componentmodel.component#System_ComponentModel_Component_Site\" data-linktype=\"relative-path\">Site</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_CreateObjRef_System_Type_\" data-linktype=\"relative-path\">CreateObjRef(Type)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_GetLifetimeService\" data-linktype=\"relative-path\">GetLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_InitializeLifetimeService\" data-linktype=\"relative-path\">InitializeLifetimeService()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.marshalbyrefobject#System_MarshalByRefObject_MemberwiseClone_System_Boolean_\" data-linktype=\"relative-path\">MemberwiseClone(Boolean)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_CloneMenu_System_Windows_Forms_Menu_\" data-linktype=\"relative-path\">CloneMenu(Menu)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_CreateMenuHandle\" data-linktype=\"relative-path\">CreateMenuHandle()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_FindHandle\" data-linktype=\"relative-path\">FindHandle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_FindMenuItem_System_Int32_System_IntPtr_\" data-linktype=\"relative-path\">FindMenuItem(Int32,IntPtr)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_FindMergePosition_System_Int32_\" data-linktype=\"relative-path\">FindMergePosition(Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_FindShortcut\" data-linktype=\"relative-path\">FindShortcut</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_GetContextMenu\" data-linktype=\"relative-path\">GetContextMenu()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_GetMainMenu\" data-linktype=\"relative-path\">GetMainMenu()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_Handle\" data-linktype=\"relative-path\">Handle</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_MdiListItem\" data-linktype=\"relative-path\">MdiListItem</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_MenuItems\" data-linktype=\"relative-path\">MenuItems</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_MergeMenu_System_Windows_Forms_Menu_\" data-linktype=\"relative-path\">MergeMenu(Menu)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_Name\" data-linktype=\"relative-path\">Name</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_ProcessCmdKey_System_Windows_Forms_Message__System_Windows_Forms_Keys_\" data-linktype=\"relative-path\">ProcessCmdKey(Message,Keys)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_Tag\" data-linktype=\"relative-path\">Tag</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>In order for a MenuItem to be displayed, you must add it to a <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> or <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a>. To create submenus, you can add MenuItem objects to the <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_MenuItems_\" data-linktype=\"relative-path\">MenuItems</a> property of the parent MenuItem.  </p>\n<p> The MenuItem class provides properties that enable you to configure the appearance and functionality of a menu item. To display a check mark next to a menu item, use the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Checked_\" data-linktype=\"relative-path\">Checked</a> property. You can use this feature to identify a menu item that is selected in a list of mutually exclusive menu items. For example, if you have a set of menu items for setting the color of text in a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control, you can use the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Checked_\" data-linktype=\"relative-path\">Checked</a> property to identify which color is currently selected. The <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Shortcut_\" data-linktype=\"relative-path\">Shortcut</a> property can be used to define a keyboard combination that can be pressed to select the menu item.  </p>\n<p> For MenuItem objects displayed in a Multiple Document Interface (MDI) application, you can use the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_MergeMenu_\" data-linktype=\"relative-path\">MergeMenu</a> method to merge the menus of an MDI parent for with that of its child forms to create a consolidated menu structure. Because a MenuItem cannot be reused in multiple locations at the same time, such as in a <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> and a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a>, you can use the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_CloneMenu_\" data-linktype=\"relative-path\">CloneMenu</a> method to create a copy of a MenuItem for use in another location.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Popup\" data-linktype=\"relative-path\">Popup</a> event enables you to perform tasks before a menu is displayed. For example, you can create an event handler for this event to display or hide menu items based on the state of your code. The <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Select\" data-linktype=\"relative-path\">Select</a> event enables you to perform tasks such as providing detailed help for your application&#39;s menu items when the user places the mouse pointer over a menu item.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem__ctor\" data-linktype=\"self-bookmark\">MenuItem()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> with a blank caption.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem__ctor_System_String_\" data-linktype=\"self-bookmark\">MenuItem(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> class with a specified caption for the menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem__ctor_System_String_System_EventHandler_\" data-linktype=\"self-bookmark\">MenuItem(String,EventHandler)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the class with a specified caption and event handler for the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event of the menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem__ctor_System_String_System_Windows_Forms_MenuItem___\" data-linktype=\"self-bookmark\">MenuItem(String,MenuItem[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the class with a specified caption and an array of submenu items defined for the menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem__ctor_System_String_System_EventHandler_System_Windows_Forms_Shortcut_\" data-linktype=\"self-bookmark\">MenuItem(String,EventHandler,Shortcut)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the class with a specified caption, event handler, and associated shortcut key for the menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem__ctor_System_Windows_Forms_MenuMerge_System_Int32_System_Windows_Forms_Shortcut_System_String_System_EventHandler_System_EventHandler_System_EventHandler_System_Windows_Forms_MenuItem___\" data-linktype=\"self-bookmark\">MenuItem(MenuMerge,Int32,Shortcut,String,EventHandler,EventHandler,EventHandler,MenuItem[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> class with a specified caption; defined event-handlers for the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a>, <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Select\" data-linktype=\"relative-path\">Select</a> and <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Popup\" data-linktype=\"relative-path\">Popup</a> events; a shortcut key; a merge type; and order specified for the menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_BarBreak\" data-linktype=\"self-bookmark\">BarBreak</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> is placed on a new line (for a menu item added to a <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> object) or in a new column (for a submenu item or menu item displayed in a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a>).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_Break\" data-linktype=\"self-bookmark\">Break</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the item is placed on a new line (for a menu item added to a <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> object) or in a new column (for a menu item or submenu item displayed in a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a>).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_Checked\" data-linktype=\"self-bookmark\">Checked</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether a check mark appears next to the text of the menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_DefaultItem\" data-linktype=\"self-bookmark\">DefaultItem</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the menu item is the default menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_Enabled\" data-linktype=\"self-bookmark\">Enabled</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the menu item is enabled.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_Index\" data-linktype=\"self-bookmark\">Index</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating the position of the menu item in its parent menu.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_IsParent\" data-linktype=\"self-bookmark\">IsParent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the menu item contains child menu items.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_MdiList\" data-linktype=\"self-bookmark\">MdiList</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the menu item will be populated with a list of the Multiple Document Interface (MDI) child windows that are displayed within the associated form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_MenuID\" data-linktype=\"self-bookmark\">MenuID</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating the Windows identifier for this menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_MergeOrder\" data-linktype=\"self-bookmark\">MergeOrder</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating the relative position of the menu item when it is merged with another.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_MergeType\" data-linktype=\"self-bookmark\">MergeType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating the behavior of this menu item when its menu is merged with another.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_Mnemonic\" data-linktype=\"self-bookmark\">Mnemonic</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating the mnemonic character that is associated with this menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_OwnerDraw\" data-linktype=\"self-bookmark\">OwnerDraw</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the code that you provide draws the menu item or Windows draws the menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_Parent\" data-linktype=\"self-bookmark\">Parent</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating the menu that contains this menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_RadioCheck\" data-linktype=\"self-bookmark\">RadioCheck</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>, if checked, displays a radio-button instead of a check mark.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_Shortcut\" data-linktype=\"self-bookmark\">Shortcut</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating the shortcut key associated with the menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_ShowShortcut\" data-linktype=\"self-bookmark\">ShowShortcut</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the shortcut key that is associated with the menu item is displayed next to the menu item caption.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_Text\" data-linktype=\"self-bookmark\">Text</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating the caption of the menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_Visible\" data-linktype=\"self-bookmark\">Visible</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the menu item is visible.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_CloneMenu\" data-linktype=\"self-bookmark\">CloneMenu()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a copy of the current <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_CloneMenu_System_Windows_Forms_MenuItem_\" data-linktype=\"self-bookmark\">CloneMenu(MenuItem)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a copy of the specified <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_Dispose_System_Boolean_\" data-linktype=\"self-bookmark\">Dispose(Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Disposes of the resources (other than memory) used by the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_MergeMenu\" data-linktype=\"self-bookmark\">MergeMenu()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Merges this <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> with another <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> and returns the resulting merged <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_MergeMenu_System_Windows_Forms_MenuItem_\" data-linktype=\"self-bookmark\">MergeMenu(MenuItem)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Merges another menu item with this menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_OnClick_System_EventArgs_\" data-linktype=\"self-bookmark\">OnClick(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_OnDrawItem_System_Windows_Forms_DrawItemEventArgs_\" data-linktype=\"self-bookmark\">OnDrawItem(DrawItemEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_DrawItem\" data-linktype=\"relative-path\">DrawItem</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_OnInitMenuPopup_System_EventArgs_\" data-linktype=\"self-bookmark\">OnInitMenuPopup(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Popup\" data-linktype=\"relative-path\">Popup</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_OnMeasureItem_System_Windows_Forms_MeasureItemEventArgs_\" data-linktype=\"self-bookmark\">OnMeasureItem(MeasureItemEventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_MeasureItem\" data-linktype=\"relative-path\">MeasureItem</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_OnPopup_System_EventArgs_\" data-linktype=\"self-bookmark\">OnPopup(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Popup\" data-linktype=\"relative-path\">Popup</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_OnSelect_System_EventArgs_\" data-linktype=\"self-bookmark\">OnSelect(EventArgs)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Select\" data-linktype=\"relative-path\">Select</a> event.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_PerformClick\" data-linktype=\"self-bookmark\">PerformClick()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Generates a <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a> event for the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>, simulating a click by a user.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_PerformSelect\" data-linktype=\"self-bookmark\">PerformSelect()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Select\" data-linktype=\"relative-path\">Select</a> event for this menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a string that represents the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_Click\" data-linktype=\"self-bookmark\">Click</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the menu item is clicked or selected using a shortcut key or access key defined for the menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_DrawItem\" data-linktype=\"self-bookmark\">DrawItem</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.MenuItem.OwnerDraw*</span> property of a menu item is set to <code>true</code> and a request is made to draw the menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_MeasureItem\" data-linktype=\"self-bookmark\">MeasureItem</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the menu needs to know the size of a menu item before drawing it.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_Popup\" data-linktype=\"self-bookmark\">Popup</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs before a menu item&#39;s list of menu items is displayed.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Forms_MenuItem_Select\" data-linktype=\"self-bookmark\">Select</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the user places the pointer over a menu item.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem__ctor\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MenuItem()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> with a blank caption.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public MenuItem ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Once you have created a blank <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> using this constructor, you can use the properties and methods of the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> class to specify the appearance and behavior of your <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> using this version of the constructor.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic MenuItem.MenuItem Example#1\"> Public Sub CreateMyMenu()\n     &#39; Create an empty menu item object.\n     Dim menuItem1 As New MenuItem()\n     &#39; Intialize the menu item using the parameterless version of the constructor.\n     &#39; Set the caption of the menu item.\n     menuItem1.Text = &quot;&amp;File&quot;\n End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic MenuItem.MenuItem Example#1\">public:\n   void CreateMyMenu()\n   {\n      // Create an empty menu item object.\n      MenuItem^ menuItem1 = gcnew MenuItem;\n      // Intialize the menu item using the parameterless version of the constructor.\n      // Set the caption of the menu item.\n      menuItem1-&gt;Text = &quot;&amp;File&quot;;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic MenuItem.MenuItem Example#1\"> public void CreateMyMenu()\n {\n    // Create an empty menu item object.\n    MenuItem menuItem1 = new MenuItem();\n    // Intialize the menu item using the parameterless version of the constructor.\n    // Set the caption of the menu item.\n    menuItem1.Text = &quot;&amp;File&quot;;\n }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MenuItem(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> class with a specified caption for the menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public MenuItem (string text);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The caption for the menu item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you specify a caption for your menu item with the <code>text</code> parameter, you can also specify an access key by placing an &#39;&amp;&#39; character before the character to be used as the access key. For example, to specify the &quot;F&quot; in &quot;File&quot; as an access key, you would specify the caption for the menu item as &quot;&amp;File&quot;. You can use this feature to provide keyboard navigation for your menus.  </p>\n<p> Setting the <code>text</code> parameter to &quot;<code>-</code>&quot; causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> that specifies the caption of the menu item at the time it is constructed.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic MenuItem.MenuItem1 Example#1\">public:\n   void CreateMyMenus()\n   {\n      // Create an instance of a MenuItem with a specified caption.\n      menuItem1 = gcnew MenuItem( &quot;&amp;File&quot; );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic MenuItem.MenuItem1 Example#1\"> public void CreateMyMenus()\n {\n    // Create an instance of a MenuItem with a specified caption.\n    menuItem1 = new MenuItem(&quot;&amp;File&quot;);\n }\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.MenuItem1 Example#1\"> Public Sub CreateMyMenus()\n     &#39; Create an instance of a MenuItem with a specified caption.\n     menuItem1 = New MenuItem(&quot;&amp;File&quot;)\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem__ctor_System_String_System_EventHandler_\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MenuItem(String,EventHandler)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the class with a specified caption and event handler for the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event of the menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public MenuItem (string text, EventHandler onClick);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The caption for the menu item.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>onClick</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a> that handles the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event for this menu item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you specify a caption for your menu item with the <code>text</code> parameter, you can also specify an access key by placing an &#39;&amp;&#39; before the character to be used as the access key. For example, to specify the &quot;F&quot; in &quot;File&quot; as an access key, you would specify the caption for the menu item as &quot;&amp;File&quot;. You can use this feature to provide keyboard navigation for your menus.  </p>\n<p> Setting the <code>text</code> parameter to &quot;<code>-</code>&quot; causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.  </p>\n<p> In addition, you can use this constructor to specify a delegate that will handle the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event for the menu item being created. The <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a> that you pass to this constructor must be configured to call an event handler that can handle the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event. For more information on handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> object with a specified caption and an <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a> delegate connected to an event handler that will handle the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event for the menu item.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic MenuItem.MenuItem2 Example#1\">public:\n   void CreateMyMenuItem()\n   {\n      // Create an instance of MenuItem with caption and an event handler\n      MenuItem^ menuItem1 = gcnew MenuItem( &quot;&amp;New&quot;,gcnew System::EventHandler(\n         this, &amp;Form1::MenuItem1_Click ) );\n   }\n\nprivate:\n   // This method is an event handler for menuItem1 to use when connecting its event handler.\n   void MenuItem1_Click( Object^ sender, System::EventArgs^ e )\n   {\n      // Code goes here that handles the Click event.\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic MenuItem.MenuItem2 Example#1\"> public void CreateMyMenuItem()\n {\n    // Create an instance of MenuItem with caption and an event handler\n    MenuItem menuItem1 = new MenuItem(&quot;&amp;New&quot;, new System.EventHandler(this.MenuItem1_Click));\n }\n \n // This method is an event handler for menuItem1 to use when connecting its event handler.\n private void MenuItem1_Click(Object sender, System.EventArgs e) \n {\n    // Code goes here that handles the Click event.\n }\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.MenuItem2 Example#1\"> Public Sub CreateMyMenuItem()\n     &#39; Create an instance of MenuItem with caption and an event \n     &#39; handler\n     Dim MenuItem1 As New MenuItem(&quot;&amp;New&quot;, New _\n         System.EventHandler(AddressOf Me.MenuItem1_Click))\n End Sub\n &#39; This method is an event handler for MenuItem1 to use when \n &#39; connecting its event handler.\n Private Sub MenuItem1_Click(ByVal sender As System.Object, ByVal _\n     e as System.EventArgs)\n     &#39; Code goes here that handles the Click event.\n End Sub\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem__ctor_System_String_System_Windows_Forms_MenuItem___\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MenuItem(String,MenuItem[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the class with a specified caption and an array of submenu items defined for the menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public MenuItem (string text, System.Windows.Forms.MenuItem[] items);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The caption for the menu item.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>items</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects that contains the submenu items for this menu item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you specify a caption for your menu item with the <code>text</code> parameter, you can also specify an access key by placing an &#39;&amp;&#39; before the character to be used as the access key. For example, to specify the &quot;F&quot; in &quot;File&quot; as an access key, you would specify the caption for the menu item as &quot;&amp;File&quot;. You can use this feature to provide keyboard navigation for your menus.  </p>\n<p> Setting the <code>text</code> parameter to &quot;<code>-</code>&quot; causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.  </p>\n<p> The <code>items</code> parameter enables you to assign an array of menu items to define a submenu of this menu item. Each item in the array can also have an array of menu items assigned to it. This enables you to create complete menu structures and assign them to the constructor for the menu item.  </p>\n<p> For more information on handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an object with a specified caption, an event handler connected to a method that will handle the event each menu item in an array of submenu items.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic MenuItem.MenuItem4 Example#1\">public:\n   void CreateMyMenuItem()\n   {\n      // submenu item array.\n      array&lt;MenuItem^&gt;^ subMenus = gcnew array&lt;MenuItem^&gt;(3);\n      // Create three menu items to add to the submenu item array.\n      MenuItem^ subMenuItem1 = gcnew MenuItem( &quot;Red&quot; );\n      MenuItem^ subMenuItem2 = gcnew MenuItem( &quot;Blue&quot; );\n      MenuItem^ subMenuItem3 = gcnew MenuItem( &quot;Green&quot; );\n      // Add the submenu items to the array.\n      subMenus[ 0 ] = subMenuItem1;\n      subMenus[ 1 ] = subMenuItem2;\n      subMenus[ 2 ] = subMenuItem3;\n      // Create an instance of a MenuItem with caption and an array of submenu\n      // items specified.\n      MenuItem^ MenuItem1 = gcnew MenuItem( &quot;&amp;Colors&quot;,subMenus );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.MenuItem4 Example#1\"> Public Sub CreateMyMenuItem()\n     &#39; submenu item array.\n     Dim subMenus(3) As MenuItem\n     &#39; Create three menu items to add to the submenu item array.\n     Dim subMenuItem1 As New MenuItem(&quot;Red&quot;)\n     Dim subMenuItem2 As New MenuItem(&quot;Blue&quot;)\n     Dim subMenuItem3 As New MenuItem(&quot;Green&quot;)\n     &#39; Add the submenu items to the array.\n     subMenus(0) = subMenuItem1\n     subMenus(1) = subMenuItem2\n     subMenus(2) = subMenuItem3\n     &#39; Create an instance of a MenuItem with caption and an array of submenu\n     &#39; items specified.\n     Dim MenuItem1 As New MenuItem(&quot;&amp;Colors&quot;, subMenus)\n End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic MenuItem.MenuItem4 Example#1\"> public void CreateMyMenuItem()\n {\n    // submenu item array.\n    MenuItem[] subMenus = new MenuItem[3];\n    // Create three menu items to add to the submenu item array.\n    MenuItem subMenuItem1 = new MenuItem(&quot;Red&quot;);\n    MenuItem subMenuItem2 = new MenuItem(&quot;Blue&quot;);\n    MenuItem subMenuItem3 = new MenuItem(&quot;Green&quot;);\n    // Add the submenu items to the array.\n    subMenus[0] = subMenuItem1;\n    subMenus[1] = subMenuItem2;\n    subMenus[2] = subMenuItem3;\n    // Create an instance of a MenuItem with caption and an array of submenu\n    // items specified.\n    MenuItem MenuItem1 = new MenuItem(&quot;&amp;Colors&quot;, subMenus);\n }\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem__ctor_System_String_System_EventHandler_System_Windows_Forms_Shortcut_\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MenuItem(String,EventHandler,Shortcut)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the class with a specified caption, event handler, and associated shortcut key for the menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public MenuItem (string text, EventHandler onClick, System.Windows.Forms.Shortcut shortcut);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The caption for the menu item.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>onClick</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a> that handles the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event for this menu item.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>shortcut</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.shortcut\" data-linktype=\"relative-path\">Shortcut</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.shortcut\" data-linktype=\"relative-path\">Shortcut</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you specify a caption for your menu item with the <code>text</code> parameter, you can also specify an access key by placing an &#39;&amp;&#39; before the character to be used as the access key. For example, to specify the &quot;F&quot; in &quot;File&quot; as an access key, you would specify the caption for the menu item as &quot;&amp;File&quot;. You can use this feature to provide keyboard navigation for your menus. This constructor also enables you to specify a shortcut key in addition to an access key to provide keyboard navigation. Shortcut keys allow you to specify a combination of keys that can be used to activate the menu item.  </p>\n<p> Setting the <code>text</code> parameter to &quot;<code>-</code>&quot; causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.  </p>\n<p> In addition, you can use this constructor to specify a delegate that will handle the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event for the menu item being created. The <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a> that you pass to this constructor must be configured to call an event handler that can handle the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event. For more information on handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates an object with a specified caption, shortcut key, and an event handler connected to a method that will handle the event for the menu item.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic MenuItem.MenuItem3 Example#1\">public:\n   void CreateMyMenuItem()\n   {\n      // Create a MenuItem with caption, shortcut key, and an event handler\n      // specified.\n      MenuItem^ MenuItem1 = gcnew MenuItem( &quot;&amp;New&quot;,\n         gcnew System::EventHandler( this, &amp;Form1::MenuItem1_Click ), Shortcut::CtrlL );\n   }\n\nprivate:\n   // The following method is an event handler for menuItem1 to use when\n   // connecting the event handler.\n   void MenuItem1_Click( Object^ sender, EventArgs^ e )\n   {\n      // Code goes here that handles the Click event.\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.MenuItem3 Example#1\"> Public Sub CreateMyMenuItem()\n     &#39; Create a MenuItem with caption, shortcut key, and an event handler\n     &#39; specified.\n     Dim MenuItem1 As New MenuItem(&quot;&amp;New&quot;, _\n        New System.EventHandler(AddressOf Me.MenuItem1_Click), Shortcut.CtrlL)\n End Sub    \n    \n &#39; The following method is an event handler for menuItem1 to use when\n &#39; connecting the event handler.\n Private Sub MenuItem1_Click(sender As Object, e As EventArgs)\n     &#39; Code goes here that handles the Click event.\n End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic MenuItem.MenuItem3 Example#1\"> public void CreateMyMenuItem()\n {\n    // Create a MenuItem with caption, shortcut key, and an event handler\n    // specified.\n    MenuItem MenuItem1 = new MenuItem(&quot;&amp;New&quot;,\n        new System.EventHandler(this.MenuItem1_Click), Shortcut.CtrlL);\n }\n \n // The following method is an event handler for menuItem1 to use when\n // connecting the event handler.\n private void MenuItem1_Click(Object sender, EventArgs e)\n {\n    // Code goes here that handles the Click event.\n }\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem__ctor_System_Windows_Forms_MenuMerge_System_Int32_System_Windows_Forms_Shortcut_System_String_System_EventHandler_System_EventHandler_System_EventHandler_System_Windows_Forms_MenuItem___\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MenuItem(MenuMerge,Int32,Shortcut,String,EventHandler,EventHandler,EventHandler,MenuItem[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> class with a specified caption; defined event-handlers for the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a>, <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Select\" data-linktype=\"relative-path\">Select</a> and <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Popup\" data-linktype=\"relative-path\">Popup</a> events; a shortcut key; a merge type; and order specified for the menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public MenuItem (System.Windows.Forms.MenuMerge mergeType, int mergeOrder, System.Windows.Forms.Shortcut shortcut, string text, EventHandler onClick, EventHandler onPopup, EventHandler onSelect, System.Windows.Forms.MenuItem[] items);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>mergeType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.menumerge\" data-linktype=\"relative-path\">MenuMerge</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.menumerge\" data-linktype=\"relative-path\">MenuMerge</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>mergeOrder</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The relative position that this menu item will take in a merged menu.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>shortcut</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.shortcut\" data-linktype=\"relative-path\">Shortcut</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.shortcut\" data-linktype=\"relative-path\">Shortcut</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>text</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The caption for the menu item.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>onClick</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a> that handles the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event for this menu item.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>onPopup</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a> that handles the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Popup\" data-linktype=\"relative-path\">Popup</a> event for this menu item.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>onSelect</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a> that handles the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Select\" data-linktype=\"relative-path\">Select</a> event for this menu item.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>items</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects that contains the submenu items for this menu item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you specify a caption for your menu item with the <code>text</code> parameter, you can also specify an access key by placing an &#39;&amp;&#39; before the character to be used as the access key. For example, to specify the &quot;F&quot; in &quot;File&quot; as an access key, you would specify the caption for the menu item as &quot;&amp;File&quot;. You can use this feature to provide keyboard navigation for your menus.  </p>\n<p> Setting the <code>text</code> parameter to &quot;<code>-</code>&quot; causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.  </p>\n<p> The <code>items</code> parameter enables you to assign an array of menu items to define a submenu of this menu item. Each item in the array can also have an array of menu items assigned to it. This enables you to create complete menu structures and assign them to the constructor for the menu item.  </p>\n<p> The <code>mergeType</code> and <code>mergeOrder</code> parameters allow you to determine how this menu item will behave when the menu item is merged with another menu. Depending on the value you specify for the <code>mergeType</code> parameter, you can either add, remove, replace, or merge the menu item and its submenu items with the menu that it is merging with. The <code>mergeOrder</code> parameter determines where the menu item being created will be positioned when the menu is merged.  </p>\n<p> In addition, you can use this constructor to create a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> and have it connected to an event handler in your code that will process the click of the menu item. The <a class=\"xref\" href=\"system.eventhandler\" data-linktype=\"relative-path\">EventHandler</a> that you pass into this constructor should be configured to call an event handler that can handle the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event. By using this constructor version, you can also connect the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Popup\" data-linktype=\"relative-path\">Popup</a> and <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Select\" data-linktype=\"relative-path\">Select</a> events to determine when this menu item is selected. You can use these events for tasks such as determining whether or not to display a check mark next to submenu items or to enable or disable menu items based on the state of the application. The <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Select\" data-linktype=\"relative-path\">Select</a> and <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> events are raised only for <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects that are not parent menu items. For more information on handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a menu item that has a caption and shortcut key. The menu item also has event handlers defined for the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Popup\" data-linktype=\"relative-path\">Popup</a>, <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a>, and <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Select\" data-linktype=\"relative-path\">Select</a> events. If this menu item is merged, it will add the menu item to the menu with the merge order of zero.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic MenuItem.MenuItem5 Example#1\"> public void CreateMyMenuItem()\n {\n    // Submenu item array.\n    MenuItem[] subMenus = new MenuItem[3];\n    // Create three menu items to add to the submenu item array.\n    MenuItem subMenuItem1 = new MenuItem(&quot;Red&quot;);\n    MenuItem subMenuItem2 = new MenuItem(&quot;Blue&quot;);\n    MenuItem subMenuItem3 = new MenuItem(&quot;Green&quot;);\n \n    // Add the submenu items to the array.\n    subMenus[0] = subMenuItem1;\n    subMenus[1] = subMenuItem2;\n    subMenus[2] = subMenuItem3;\n    /* Create a MenuItem with caption, shortcut key, \n       a Click, Popup, and Select event handler, merge type and order, and an \n       array of submenu items specified.\n    */\n    MenuItem menuItem1 = new MenuItem(MenuMerge.Add, 0,\n       Shortcut.CtrlShiftC, &quot;&amp;Colors&quot;, \n       new EventHandler(this.MenuItem1_Click),\n       new EventHandler(this.MenuItem1_Popup),\n       new EventHandler(this.MenuItem1_Select), subMenus);\n }\n \n // The following method is an event handler for menuItem1 to use when connecting the Click event.\n private void MenuItem1_Click(Object sender, EventArgs e)\n {\n    // Code goes here that handles the Click event.\n }\n \n // The following method is an event handler for menuItem1 to use  when connecting the Popup event.\n private void MenuItem1_Popup(Object sender, EventArgs e)\n {\n    // Code goes here that handles the Click event.\n }\n \n // The following method is an event handler for menuItem1 to use  when connecting the Select event\n private void MenuItem1_Select(Object sender, EventArgs e)\n {\n    // Code goes here that handles the Click event.\n }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic MenuItem.MenuItem5 Example#1\">public:\n   void CreateMyMenuItem()\n   {\n      // Submenu item array.\n      array&lt;MenuItem^&gt;^ subMenus = gcnew array&lt;MenuItem^&gt;(3);\n      // Create three menu items to add to the submenu item array.\n      MenuItem^ subMenuItem1 = gcnew MenuItem( &quot;Red&quot; );\n      MenuItem^ subMenuItem2 = gcnew MenuItem( &quot;Blue&quot; );\n      MenuItem^ subMenuItem3 = gcnew MenuItem( &quot;Green&quot; );\n      \n      // Add the submenu items to the array.\n      subMenus[ 0 ] = subMenuItem1;\n      subMenus[ 1 ] = subMenuItem2;\n      subMenus[ 2 ] = subMenuItem3;\n      /* Create a MenuItem with caption, shortcut key, \n         a Click, Popup, and Select event handler, merge type and order, and an \n         array of submenu items specified.\n      */\n      MenuItem^ menuItem1 = gcnew MenuItem( MenuMerge::Add, 0,\n         Shortcut::CtrlShiftC, &quot;&amp;Colors&quot;,\n         gcnew EventHandler( this, &amp;Form1::MenuItem1_Click ),\n         gcnew EventHandler( this, &amp;Form1::MenuItem1_Popup ),\n         gcnew EventHandler( this, &amp;Form1::MenuItem1_Select ), subMenus );\n   }\n\nprivate:\n   // The following method is an event handler for menuItem1 to use when connecting the Click event.\n   void MenuItem1_Click( Object^ sender, EventArgs^ e )\n   {\n      // Code goes here that handles the Click event.\n   }\n\n   // The following method is an event handler for menuItem1 to use  when connecting the Popup event.\n   void MenuItem1_Popup( Object^ sender, EventArgs^ e )\n   {\n      // Code goes here that handles the Click event.\n   }\n\n   // The following method is an event handler for menuItem1 to use  when connecting the Select event\n   void MenuItem1_Select( Object^ sender, EventArgs^ e )\n   {\n      // Code goes here that handles the Click event.\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.MenuItem5 Example#1\"> Public Sub CreateMyMenuItem()\n    &#39; Submenu item array.\n    Dim SubMenus(3) as MenuItem\n    &#39; Create three menu items to add to the submenu item array.\n    Dim SubMenuItem1, SubMenuItem2, SubMenuItem3 as MenuItem\n    SubMenuItem1 = New MenuItem (&quot;Red&quot;)\n    SubMenuItem2 = New MenuItem (&quot;Blue&quot;)\n    SubMenuItem3 = New MenuItem (&quot;Green&quot;)\n    &#39; Add the submenu items to the array.\n    SubMenus(0) = SubMenuItem1\n    SubMenus(1) = SubMenuItem2\n    SubMenus(2) = SubMenuItem3\n    &#39; Create a MenuItem with caption, shortcut key, \n    &#39; a Click, Popup, and Select event handler, menu merge type and order, and an \n    &#39; array of submenu items specified.\n    Dim MenuItem1 As MenuItem\n    MenuItem1 = New MenuItem(MenuMerge.Add, 0, Shortcut.CtrlShiftC, &quot;&amp;Colors&quot;, _\n       AddressOf Me.MenuItem1_Click, _\n       AddressOf Me.MenuItem1_Popup, _\n       AddressOf Me.MenuItem1_Select, SubMenus)\n End Sub\n \n &#39; The following method is an event handler for MenuItem1 to use  when connecting the Click event.\n Private Sub MenuItem1_Click(ByVal sender As System.Object, ByVal  e as System.EventArgs)\n    &#39; Code goes here that handles the Click event.\n End Sub\n \n &#39; The following method is an event handler for MenuItem1 to use  when connecting the Popup event.\n Private Sub MenuItem1_Popup(ByVal sender As System.Object, ByVal  e as System.EventArgs)\n    &#39; Code goes here that handles the Click event.\n End Sub\n \n &#39; The following method is an event handler for MenuItem1 to use  when connecting the Select event\n Private Sub MenuItem1_Select(ByVal sender As System.Object, ByVal  e as System.EventArgs)\n    &#39; Code goes here that handles the Click event.\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_BarBreak\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_BarBreak_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BarBreak</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> is placed on a new line (for a menu item added to a <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> object) or in a new column (for a submenu item or menu item displayed in a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a>).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool BarBreak { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the menu item is placed on a new line or in a new column; <code>false</code> if the menu item is left in its default placement. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the BarBreak property to create a menu where each menu item is placed next to each other horizontally instead of in a vertical list. You can also use this property to create a menu bar that contains multiple rows of top-level menu items.  </p>\n<p> This property differs from the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Break_\" data-linktype=\"relative-path\">Break</a> property in that a bar is displayed on the left edge of each menu item that has the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Break_\" data-linktype=\"relative-path\">Break</a> property set to <code>true</code>. The bar is only displayed when the menu item is not a top-level menu item.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> with two submenu items. The two submenu items are displayed horizontally instead of vertically using the BarBreak property.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic MenuItem.BarBreak Example#1\"> public void CreateMyMenus()\n {\n    // Create three top-level menu items.\n    MenuItem menuItem1 = new MenuItem(&quot;&amp;File&quot;);\n    MenuItem menuItem2 = new MenuItem(&quot;&amp;New&quot;);\n    MenuItem menuItem3 = new MenuItem(&quot;&amp;Open&quot;);\n    // Set the BarBreak property to display horizontally.\n    menuItem2.BarBreak = true;\n    menuItem3.BarBreak = true;\n    // Add menuItem2 and menuItem3 to the menuItem1&#39;s list of menu items.\n    menuItem1.MenuItems.Add(menuItem2);\n    menuItem1.MenuItems.Add(menuItem3);\n }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic MenuItem.BarBreak Example#1\">public:\n   void CreateMyMenus()\n   {\n      // Create three top-level menu items.\n      MenuItem^ menuItem1 = gcnew MenuItem( &quot;&amp;File&quot; );\n      MenuItem^ menuItem2 = gcnew MenuItem( &quot;&amp;New&quot; );\n      MenuItem^ menuItem3 = gcnew MenuItem( &quot;&amp;Open&quot; );\n      // Set the BarBreak property to display horizontally.\n      menuItem2-&gt;BarBreak = true;\n      menuItem3-&gt;BarBreak = true;\n      // Add menuItem2 and menuItem3 to the menuItem1&#39;s list of menu items.\n      menuItem1-&gt;MenuItems-&gt;Add( menuItem2 );\n      menuItem1-&gt;MenuItems-&gt;Add( menuItem3 );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.BarBreak Example#1\"> Public Sub CreateMyMenus()\n     &#39; Create three top-level menu items.\n     Dim menuItem1 As New MenuItem(&quot;&amp;File&quot;)\n     Dim menuItem2 As New MenuItem(&quot;&amp;New&quot;)\n     Dim menuItem3 As New MenuItem(&quot;&amp;Open&quot;)\n     &#39; Set the BarBreak property to display horizontally.\n     menuItem2.BarBreak = True\n     menuItem3.BarBreak = True\n     &#39; Add menuItem2 and menuItem3 to the menuItem1&#39;s list of menu items.\n     menuItem1.MenuItems.Add(menuItem2)\n     menuItem1.MenuItems.Add(menuItem3)\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_Break\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_Break_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Break</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the item is placed on a new line (for a menu item added to a <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> object) or in a new column (for a menu item or submenu item displayed in a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a>).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Break { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the menu item is placed on a new line or in a new column; <code>false</code> if the menu item is left in its default placement. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the Break property to create a menu where each menu is placed next to each other horizontally instead of in a vertical list. You can also use this property to create a menu bar that contains multiple rows of top-level menu items.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a menu with two top-level menu items on the top row and one menu item on the bottom row.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic MenuItem.Break Example#1\"> public void CreateMyMenus()\n {\n    // Create three top-level menu items.\n    MenuItem menuItem1 = new MenuItem(&quot;&amp;File&quot;);\n    MenuItem menuItem2 = new MenuItem(&quot;&amp;Options&quot;);\n    MenuItem menuItem3 = new MenuItem(&quot;&amp;Edit&quot;);\n    // Place the &quot;Edit&quot; menu on a new line in the menu bar.\n    menuItem3.Break = true;\n }\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.Break Example#1\"> Public Sub CreateMyMenus()\n     &#39; Create three top-level menu items.\n     Dim menuItem1 As New MenuItem(&quot;&amp;File&quot;)\n     Dim menuItem2 As New MenuItem(&quot;&amp;Options&quot;)\n     Dim menuItem3 As New MenuItem(&quot;&amp;Edit&quot;)\n     &#39; Place the &quot;Edit&quot; menu on a new line in the menu bar.\n     menuItem3.Break = True\n End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic MenuItem.Break Example#1\">public:\n   void CreateMyMenus()\n   {\n      // Create three top-level menu items.\n      MenuItem^ menuItem1 = gcnew MenuItem( &quot;&amp;File&quot; );\n      MenuItem^ menuItem2 = gcnew MenuItem( &quot;&amp;Options&quot; );\n      MenuItem^ menuItem3 = gcnew MenuItem( &quot;&amp;Edit&quot; );\n      // Place the &quot;Edit&quot; menu on a new line in the menu bar.\n      menuItem3-&gt;Break = true;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_Checked\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_Checked_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Checked</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether a check mark appears next to the text of the menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Checked { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if there is a check mark next to the menu item; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> is a top-level menu or has children.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the Checked property in combination with other menu items in a menu to provide state for an application. For example, you can place a check mark on a menu item in a group of items to identify the size of the font to be displayed for the text in an application. You can also use the Checked property to identify the selected menu item in a group of mutually exclusive menu items.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> This property cannot be set to <code>true</code> for top-level menu items.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the Checked property to provide the state in an application. In this example, a group of menu items are used to specify the color for the text in a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control. The event handler provided is used by the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event of three menu items. Each menu item specifies a text color, <code>menuItemRed</code> (Red), <code>menuItemGreen</code> (Green), or <code>menuItemBlue</code> (Blue). The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form&#39;s <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control. The example requires that the <a class=\"xref\" href=\"system.drawing\" data-linktype=\"relative-path\">System.Drawing</a> namespace has been added to the form that this code is placed in. The example also requires that a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> has been added to the form that this example code is located in that is named <code>textBox1</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic MenuItem.Checked Example#1\">private:\n   // The following event handler would be connected to three menu items.\n   void MyMenuClick( Object^ sender, EventArgs^ e )\n   {\n      // Determine if clicked menu item is the Blue menu item.\n      if ( sender == menuItemBlue )\n      {\n         // Set the checkmark for the menuItemBlue menu item.\n         menuItemBlue-&gt;Checked = true;\n         // Uncheck the menuItemRed and menuItemGreen menu items.\n         menuItemRed-&gt;Checked = false;\n         menuItemGreen-&gt;Checked = false;\n         // Set the color of the text in the TextBox control to Blue.\n         textBox1-&gt;ForeColor = Color::Blue;\n      }\n      else if ( sender == menuItemRed )\n      {\n         \n         // Set the checkmark for the menuItemRed menu item.\n         menuItemRed-&gt;Checked = true;\n         // Uncheck the menuItemBlue and menuItemGreen menu items.\n         menuItemBlue-&gt;Checked = false;\n         menuItemGreen-&gt;Checked = false;\n         // Set the color of the text in the TextBox control to Red.\n         textBox1-&gt;ForeColor = Color::Red;\n      }\n      else\n      {\n         // Set the checkmark for the menuItemGreen.\n         menuItemGreen-&gt;Checked = true;\n         // Uncheck the menuItemRed and menuItemBlue menu items.\n         menuItemBlue-&gt;Checked = false;\n         menuItemRed-&gt;Checked = false;\n         // Set the color of the text in the TextBox control to Blue.\n         textBox1-&gt;ForeColor = Color::Green;\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic MenuItem.Checked Example#1\">// The following event handler would be connected to three menu items.\n private void MyMenuClick(Object sender, EventArgs e)\n {\n    // Determine if clicked menu item is the Blue menu item.\n    if(sender == menuItemBlue)\n    {\n       // Set the checkmark for the menuItemBlue menu item.\n       menuItemBlue.Checked = true;\n       // Uncheck the menuItemRed and menuItemGreen menu items.\n       menuItemRed.Checked = false;\n       menuItemGreen.Checked = false;\n       // Set the color of the text in the TextBox control to Blue.\n       textBox1.ForeColor = Color.Blue;\n    }\n    else if(sender == menuItemRed)\n    {\n       // Set the checkmark for the menuItemRed menu item.\n       menuItemRed.Checked = true;\n       // Uncheck the menuItemBlue and menuItemGreen menu items.\n       menuItemBlue.Checked = false;\n       menuItemGreen.Checked = false;\n       // Set the color of the text in the TextBox control to Red.\n       textBox1.ForeColor = Color.Red;\n    }\n    else\n    {\n       // Set the checkmark for the menuItemGreen.\n       menuItemGreen.Checked = true;\n       // Uncheck the menuItemRed and menuItemBlue menu items.\n       menuItemBlue.Checked = false;\n       menuItemRed.Checked = false;\n       // Set the color of the text in the TextBox control to Blue.\n       textBox1.ForeColor = Color.Green;\n    }\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.Checked Example#1\"> &#39; The following event handler would be connected to three menu items.\n Private Sub MyMenuClick(sender As Object, e As EventArgs)\n     &#39; Determine if clicked menu item is the Blue menu item.\n     If sender Is menuItemBlue Then\n         &#39; Set the checkmark for the menuItemBlue menu item.\n         menuItemBlue.Checked = True\n         &#39; Uncheck the menuItemRed and menuItemGreen menu items.\n         menuItemRed.Checked = False\n         menuItemGreen.Checked = False\n         &#39; Set the color of the text in the TextBox control to Blue.\n         textBox1.ForeColor = Color.Blue\n     Else\n         If sender Is menuItemRed Then\n             &#39; Set the checkmark for the menuItemRed menu item.\n             menuItemRed.Checked = True\n             &#39; Uncheck the menuItemBlue and menuItemGreen menu items.\n             menuItemBlue.Checked = False\n             menuItemGreen.Checked = False\n             &#39; Set the color of the text in the TextBox control to Red.\n             textBox1.ForeColor = Color.Red\n         Else\n             &#39; Set the checkmark for the menuItemGreen.\n             menuItemGreen.Checked = True\n             &#39; Uncheck the menuItemRed and menuItemBlue menu items.\n             menuItemBlue.Checked = False\n             menuItemRed.Checked = False\n             &#39; Set the color of the text in the TextBox control to Blue.\n             textBox1.ForeColor = Color.Green\n         End If\n     End If\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_DefaultItem\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_DefaultItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DefaultItem</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the menu item is the default menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool DefaultItem { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the menu item is the default item in a menu; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The default menu item for a menu is boldfaced. When the user double-clicks a submenu that contains a default item, the default item is selected, and the submenu is closed. You can use the DefaultItem property to indicate, the default action that is expected in a menu or shortcut menu.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a menu item with two submenu items. The example sets <code>menuItem2</code> as the default menu item using the DefaultItem property.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic MenuItem.DefaultItem Example#1\"> public void CreateMyMenus()\n {\n    MenuItem menuItem1 = new MenuItem(&quot;&amp;File&quot;);\n    MenuItem menuItem2 = new MenuItem(&quot;&amp;New&quot;);\n    MenuItem menuItem3 = new MenuItem(&quot;&amp;Open&quot;);\n    // Make menuItem2 the default menu item.\n    menuItem2.DefaultItem = true;\n }\n \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic MenuItem.DefaultItem Example#1\">public:\n   void CreateMyMenus()\n   {\n      MenuItem^ menuItem1 = gcnew MenuItem( &quot;&amp;File&quot; );\n      MenuItem^ menuItem2 = gcnew MenuItem( &quot;&amp;New&quot; );\n      MenuItem^ menuItem3 = gcnew MenuItem( &quot;&amp;Open&quot; );\n      // Make menuItem2 the default menu item.\n      menuItem2-&gt;DefaultItem = true;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.DefaultItem Example#1\"> Public Sub CreateMyMenus()\n     Dim menuItem1 As New MenuItem(&quot;&amp;File&quot;)\n     Dim menuItem2 As New MenuItem(&quot;&amp;New&quot;)\n     Dim menuItem3 As New MenuItem(&quot;&amp;Open&quot;)\n     &#39; Make menuItem2 the default menu item.\n     menuItem2.DefaultItem = True\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_Enabled\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_Enabled_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Enabled</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the menu item is enabled.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Enabled { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the menu item is enabled; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> that is disabled is displayed in a gray color to indicate its state. When a parent menu item is disabled, all submenu items are not displayed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Popup\" data-linktype=\"relative-path\">Popup</a> event to determine whether <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown. The example determines if <code>textBox1</code>, a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control on the form, is enabled, has input focus, and has text selected before enabling the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects. This example requires that three <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects are created named <code>menuCut</code>, <code>menuCopy</code>, and <code>menuDelete</code> have been created.  </p>\n<pre><code class=\"lang-cs\" name=\"MenuItem.Popup#1\">      private void PopupMyMenu(object sender, System.EventArgs e)\n      {\n         if (textBox1.Enabled == false || textBox1.Focused == false ||\n            textBox1.SelectedText.Length == 0)\n         {\n            menuCut.Enabled = false;\n            menuCopy.Enabled = false;\n            menuDelete.Enabled = false;\n         }\n         else\n         {\n            menuCut.Enabled = true;\n            menuCopy.Enabled = true;\n            menuDelete.Enabled = true;\n         }\n      }\n</code></pre><pre><code class=\"lang-cpp\" name=\"MenuItem.Popup#1\">private:\n   void PopupMyMenu( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      if ( textBox1-&gt;Enabled == false || textBox1-&gt;Focused == false || textBox1-&gt;SelectedText-&gt;Length == 0 )\n      {\n         menuCut-&gt;Enabled = false;\n         menuCopy-&gt;Enabled = false;\n         menuDelete-&gt;Enabled = false;\n      }\n      else\n      {\n         menuCut-&gt;Enabled = true;\n         menuCopy-&gt;Enabled = true;\n         menuDelete-&gt;Enabled = true;\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"MenuItem.Popup#1\">      Private Sub PopupMyMenu(ByVal sender As Object, ByVal e As System.EventArgs) Handles menuEdit.Popup\n         If textBox1.Enabled = False OrElse textBox1.Focused = False OrElse textBox1.SelectedText.Length = 0 Then\n            menuCut.Enabled = False\n            menuCopy.Enabled = False\n            menuDelete.Enabled = False\n         Else\n            menuCut.Enabled = True\n            menuCopy.Enabled = True\n            menuDelete.Enabled = True\n         End If\n      End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_Index\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_Index_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Index</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating the position of the menu item in its parent menu.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Index { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The zero-based index representing the position of the menu item in its parent menu.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p>The assigned value is less than zero or greater than the item count.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property provides the indexed position of a menu item in the menu item collection of its parent menu. You can use this property to reposition a menu item to a different location within its menu. You can also use this property when creating a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> to specify its position in a menu structure at the time of creation.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example switches the position of two menu items in a menu. The following code example requires that two <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects are created named <code>menuItem1</code> and <code>menuItem2</code>. The <code>menuItem1</code> menu item moves down one position in the menu, while <code>menuItem2</code> moves up one position.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic MenuItem.Index Example#1\">public:\n   void SwitchMyMenuItems()\n   {\n      // Move menuItem1 down one position in the menu order.\n      menuItem1-&gt;Index = menuItem1-&gt;Index + 1;\n      // Move menuItem2 up one position in the menu order.\n      menuItem2-&gt;Index = menuItem2-&gt;Index - 1;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic MenuItem.Index Example#1\"> public void SwitchMyMenuItems()\n {\n    // Move menuItem1 down one position in the menu order.\n    menuItem1.Index = menuItem1.Index + 1;\n    // Move menuItem2 up one position in the menu order.\n    menuItem2.Index = menuItem2.Index - 1;\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.Index Example#1\"> Public Sub SwitchMyMenuItems()\n     &#39; Move menuItem1 down one position in the menu order.\n     menuItem1.Index = menuItem1.Index + 1\n     &#39; Move menuItem2 up one position in the menu order.\n     menuItem2.Index = menuItem2.Index - 1\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_IsParent\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_IsParent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsParent</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the menu item contains child menu items.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsParent { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the menu item contains child menu items; <code>false</code> if the menu is a standalone menu item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this property with the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Parent_\" data-linktype=\"relative-path\">Parent</a> property to navigate in code through an entire menu structure.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example determines whether there are any submenus associated with a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> named <code>menuItem1</code>. If any submenus exist, it disables them by setting the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Enabled_\" data-linktype=\"relative-path\">Enabled</a> property to <code>false</code>. The example requires that there is a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> created named <code>menuItem1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic MenuItem.IsParent Example#1\"> public void DisableMyChildMenus ()\n {\n    // Determine if menuItem2 is a parent menu.\n    if(menuItem2.IsParent == true)\n    {\n       // Loop through all the submenus.\n       for(int i = 0; i &lt; menuItem2.MenuItems.Count; i++)\n       {\n          // Disable all of the submenus of menuItem2.\n          menuItem2.MenuItems[i].Enabled = false;\n       }\n    }\n }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic MenuItem.IsParent Example#1\">   void DisableMyChildMenus()\n   {\n      \n      // Determine if menuItem2 is a parent menu.\n      if ( menuItem2-&gt;IsParent == true )\n      {\n         \n         // Loop through all the submenus.\n         for ( int i = 0; i &lt; menuItem2-&gt;MenuItems-&gt;Count; i++ )\n         {\n            \n            // Disable all of the submenus of menuItem2.\n            menuItem2-&gt;MenuItems[ i ]-&gt;Enabled = false;\n\n         }\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.IsParent Example#1\"> Public Sub DisableMyChildMenus()\n     &#39; Determine if menuItem2 is a parent menu.\n     If menuItem2.IsParent = True Then\n         &#39; Loop through all the submenus.\n         Dim i As Integer\n         For i = 0 To menuItem2.MenuItems.Count - 1\n             &#39; Disable all of the submenus of menuItem2.\n             menuItem2.MenuItems(i).Enabled = False\n         Next i\n     End If\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_MdiList\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_MdiList_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MdiList</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the menu item will be populated with a list of the Multiple Document Interface (MDI) child windows that are displayed within the associated form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool MdiList { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a list of the MDI child windows is displayed in this menu item; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When a menu item is selected to display an MDI child window list, the list is displayed as a submenu of the menu item. Only forms that are defined as MDI child forms are displayed in the window list. Only nine child windows can be displayed at a time. If there are more than nine child windows displayed, a &quot;More Windows...&quot; menu item is displayed at the end of the window list. Clicking this menu item displays a dialog box with a complete list of the child windows that are currently active.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> that is used to display the list of currently open MDI child forms in an MDI form.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic MenuItem.MdiList Example#1\"> public void SetMDIList()\n {\n    // Create the MenuItem to be used to display an MDI list.\n    MenuItem menuItem1 = new MenuItem();\n    // Set this menu item to be used as an MDI list.\n    menuItem1.MdiList = true;\n }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic MenuItem.MdiList Example#1\">public:\n   void SetMDIList()\n   {\n      // Create the MenuItem to be used to display an MDI list.\n      MenuItem^ menuItem1 = gcnew MenuItem;\n      // Set this menu item to be used as an MDI list.\n      menuItem1-&gt;MdiList = true;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.MdiList Example#1\"> Public Sub SetMDIList()\n     &#39; Create the MenuItem to be used to display an MDI list.\n     Dim menuItem1 As New MenuItem()\n     &#39; Set this menu item to be used as an MDI list.\n     menuItem1.MdiList = True\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_MenuID\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_MenuID_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MenuID</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating the Windows identifier for this menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected int MenuID { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The Windows identifier for this menu item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_MergeOrder\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_MergeOrder_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MergeOrder</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating the relative position of the menu item when it is merged with another.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int MergeOrder { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A zero-based index representing the merge order position for this menu item. The default is 0.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The merge order of a menu item specifies the relative position that this menu item will take if the menu structure that the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> is contained in is merged with another.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates using the MergeOrder property to control the way a merged menu is displayed. This is a complete example, ready to run once you add it to your project.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.MenuItemMergeOrder#1\">// The following code example demonstrates using the MenuItem \n// Merge-Order property to control the way a merged menu is displayed.\n\n\n\nusing System.Windows.Forms;\n\npublic class Form1:\n\tSystem.Windows.Forms.Form\n\n\t//Declare a MainMenu object and its items.\n{\n\tinternal System.Windows.Forms.MainMenu mainMenu1;\n\tinternal System.Windows.Forms.MenuItem fileItem;\n\tinternal System.Windows.Forms.MenuItem newItem;\n\tinternal System.Windows.Forms.MenuItem openItem;\n\tinternal System.Windows.Forms.MenuItem saveItem;\n\tinternal System.Windows.Forms.MenuItem optionsMenu;\n\tinternal System.Windows.Forms.MenuItem viewItem;\n\tinternal System.Windows.Forms.MenuItem toolsItem;\n\n\t// Declare a ContextMenu object and its items.\n\tinternal System.Windows.Forms.ContextMenu contextMenu1;\n\tinternal System.Windows.Forms.MenuItem cutItem;\n\tinternal System.Windows.Forms.MenuItem copyItem;\n\tinternal System.Windows.Forms.MenuItem pasteItem;\n\n\tpublic Form1() : base()\n\t{        \n\t\tthis.mainMenu1 = new System.Windows.Forms.MainMenu();\n\t\tthis.fileItem = new System.Windows.Forms.MenuItem();\n\t\tthis.newItem = new System.Windows.Forms.MenuItem();\n\t\tthis.openItem = new System.Windows.Forms.MenuItem();\n\t\tthis.saveItem = new System.Windows.Forms.MenuItem();\n\n\t\tthis.viewItem = new System.Windows.Forms.MenuItem();\n\t\tthis.toolsItem = new System.Windows.Forms.MenuItem();\n\n\t\tthis.optionsMenu = new System.Windows.Forms.MenuItem();\n\t\tthis.toolsItem = new System.Windows.Forms.MenuItem();\n\t\tthis.viewItem = new System.Windows.Forms.MenuItem();\n\n\t\tthis.contextMenu1 = new System.Windows.Forms.ContextMenu();\n\t\tthis.cutItem = new System.Windows.Forms.MenuItem();\n\t\tthis.copyItem = new System.Windows.Forms.MenuItem();\n\t\tthis.pasteItem = new System.Windows.Forms.MenuItem();\n\n\t\t//Add file menu item and options menu item to the MainMenu.\n\t\tthis.mainMenu1.MenuItems.AddRange(\n\t\t\tnew System.Windows.Forms.MenuItem[]\n\t\t\t{this.fileItem, this.optionsMenu});\n\n\t\t// Initialize the file menu and its contents.\n\t\tthis.fileItem.Index = 0;\n\t\tthis.fileItem.Text = &quot;File&quot;;\n\t\tthis.newItem.Index = 0;\n\t\tthis.newItem.Text = &quot;New&quot;;\n\t\tthis.openItem.Index = 1;\n\t\tthis.openItem.Text = &quot;Open&quot;;\n\t\tthis.saveItem.Index = 2;\n\t\tthis.saveItem.Text = &quot;Save&quot;;\n\n\n\t\t// Set the merge order of fileItem to 2 so it has a lower priority \n\t\t// on the merged menu.\n\t\tthis.fileItem.MergeOrder = 2;\n\n\t\t//Add the new items to the fileItem menu item collection.\n\t\tthis.fileItem.MenuItems.AddRange(new MenuItem[]\n\t\t\t{this.newItem, this.openItem, this.saveItem});\n\t\t\n\n\t\t// Initalize the optionsMenu item and its contents.\n\t\tthis.optionsMenu.Index = 1;\n\t\tthis.optionsMenu.Text = &quot;Options&quot;;\n\n\t\tthis.viewItem.Index = 0;\n\t\tthis.viewItem.Text = &quot;View&quot;;\n\t\tthis.toolsItem.Index = 1;\n\t\tthis.toolsItem.Text = &quot;Tools&quot;;\n\n\t\t// Set mergeOrder property to 1, so it has a higher priority than\n\t\t// the fileItem on the merged menu.\n\t\tthis.optionsMenu.MergeOrder = 1;\n\n\t\t//Add view and tool items to the optionsItem menu item.\n\t\tthis.optionsMenu.MenuItems.AddRange(new MenuItem[]\n\t\t\t{this.viewItem, this.toolsItem});\n\n\t\t// Initialize the menu items for the shortcut menu.\n\t\tthis.cutItem.Index = 0;\n\t\tthis.cutItem.Text = &quot;Cut&quot;;\n\t\tthis.cutItem.MergeOrder = 0;\n\t\tthis.copyItem.Index = 1;\n\t\tthis.copyItem.Text = &quot;Copy&quot;;\n\t\tthis.copyItem.MergeOrder = 0;\n\t\tthis.pasteItem.Index = 2;\n\t\tthis.pasteItem.Text = &quot;Paste&quot;;\n\t\tthis.pasteItem.MergeOrder = 0;\n\n\t\t// Add menu items to the shortcut menu.\n\t\tthis.contextMenu1.MenuItems.AddRange(new MenuItem[]\n\t\t\t{cutItem, copyItem, pasteItem});\n\n\t\t// Add the mainMenu1 items to the shortcut menu as well, by\n\t\t// calling the MergeMenu method.\n\t\tcontextMenu1.MergeMenu(mainMenu1);\n\n\t\t//Initialize the form.\n\t\tthis.ClientSize = new System.Drawing.Size(292, 266);\n\t\tthis.Name = &quot;Form1&quot;;\n\t\tthis.Text = &quot;Right click on form for merged menu.&quot;;\n\t\t\n\t\t// Associate the event-handling method with the\n\t\t// MouseDown event.\n\t\tthis.MouseDown +=new MouseEventHandler(Form1_MouseDown);\n\n\t\t// Add mainMenu1 to the form.\n\t\tthis.Menu = mainMenu1;\n\t}\n\n\tprivate void Form1_MouseDown(object sender, MouseEventArgs e)\n\t{\n\n\t\t// Check for a right mouse click.\n\t\tif (e.Button==MouseButtons.Right)\n\n\t\t\t// Display a merged menu containing items from mainMenu1 \n\t\t\t// and contextMenu1.\n\t\t{\n\t\t\tcontextMenu1.Show(this, new System.Drawing.Point(30, 30));\n\t\t}\n\t}\n\n\t[System.STAThreadAttribute]\n\tpublic static void Main()\n\t{\n\t\tApplication.Run(new Form1());\n\t}\n\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.MenuItemMergeOrder#1\">// The following code example demonstrates using the MenuItem \n// Merge-Order property to control the way a merged menu is displayed.\nusing namespace System::Windows::Forms;\n\n//Declare a MainMenu object and its items.\npublic ref class Form1: public System::Windows::Forms::Form\n{\npublic private:\n   System::Windows::Forms::MainMenu^ mainMenu1;\n   System::Windows::Forms::MenuItem^ fileItem;\n   System::Windows::Forms::MenuItem^ newItem;\n   System::Windows::Forms::MenuItem^ openItem;\n   System::Windows::Forms::MenuItem^ saveItem;\n   System::Windows::Forms::MenuItem^ optionsMenu;\n   System::Windows::Forms::MenuItem^ viewItem;\n   System::Windows::Forms::MenuItem^ toolsItem;\n\n   // Declare a ContextMenu object and its items.\n   System::Windows::Forms::ContextMenu^ contextMenu1;\n   System::Windows::Forms::MenuItem^ cutItem;\n   System::Windows::Forms::MenuItem^ copyItem;\n   System::Windows::Forms::MenuItem^ pasteItem;\n\npublic:\n   Form1()\n      : Form()\n   {\n      this-&gt;mainMenu1 = gcnew System::Windows::Forms::MainMenu;\n      this-&gt;fileItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;newItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;openItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;saveItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;viewItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;toolsItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;optionsMenu = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;toolsItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;viewItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;contextMenu1 = gcnew System::Windows::Forms::ContextMenu;\n      this-&gt;cutItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;copyItem = gcnew System::Windows::Forms::MenuItem;\n      this-&gt;pasteItem = gcnew System::Windows::Forms::MenuItem;\n      \n      //Add file menu item and options menu item to the MainMenu.\n      array&lt;System::Windows::Forms::MenuItem^&gt;^temp0 = {this-&gt;fileItem,this-&gt;optionsMenu};\n      this-&gt;mainMenu1-&gt;MenuItems-&gt;AddRange( temp0 );\n      \n      // Initialize the file menu and its contents.\n      this-&gt;fileItem-&gt;Index = 0;\n      this-&gt;fileItem-&gt;Text = &quot;File&quot;;\n      this-&gt;newItem-&gt;Index = 0;\n      this-&gt;newItem-&gt;Text = &quot;New&quot;;\n      this-&gt;openItem-&gt;Index = 1;\n      this-&gt;openItem-&gt;Text = &quot;Open&quot;;\n      this-&gt;saveItem-&gt;Index = 2;\n      this-&gt;saveItem-&gt;Text = &quot;Save&quot;;\n      \n      // Set the merge order of fileItem to 2 so it has a lower priority \n      // on the merged menu.\n      this-&gt;fileItem-&gt;MergeOrder = 2;\n      \n      //Add the new items to the fileItem menu item collection.\n      array&lt;MenuItem^&gt;^temp1 = {this-&gt;newItem,this-&gt;openItem,this-&gt;saveItem};\n      this-&gt;fileItem-&gt;MenuItems-&gt;AddRange( temp1 );\n      \n      // Initalize the optionsMenu item and its contents.\n      this-&gt;optionsMenu-&gt;Index = 1;\n      this-&gt;optionsMenu-&gt;Text = &quot;Options&quot;;\n      this-&gt;viewItem-&gt;Index = 0;\n      this-&gt;viewItem-&gt;Text = &quot;View&quot;;\n      this-&gt;toolsItem-&gt;Index = 1;\n      this-&gt;toolsItem-&gt;Text = &quot;Tools&quot;;\n      \n      // Set mergeOrder property to 1, so it has a higher priority than\n      // the fileItem on the merged menu.\n      this-&gt;optionsMenu-&gt;MergeOrder = 1;\n      \n      //Add view and tool items to the optionsItem menu item.\n      array&lt;MenuItem^&gt;^temp2 = {this-&gt;viewItem,this-&gt;toolsItem};\n      this-&gt;optionsMenu-&gt;MenuItems-&gt;AddRange( temp2 );\n      \n      // Initialize the menu items for the shortcut menu.\n      this-&gt;cutItem-&gt;Index = 0;\n      this-&gt;cutItem-&gt;Text = &quot;Cut&quot;;\n      this-&gt;cutItem-&gt;MergeOrder = 0;\n      this-&gt;copyItem-&gt;Index = 1;\n      this-&gt;copyItem-&gt;Text = &quot;Copy&quot;;\n      this-&gt;copyItem-&gt;MergeOrder = 0;\n      this-&gt;pasteItem-&gt;Index = 2;\n      this-&gt;pasteItem-&gt;Text = &quot;Paste&quot;;\n      this-&gt;pasteItem-&gt;MergeOrder = 0;\n      \n      // Add menu items to the shortcut menu.\n      array&lt;MenuItem^&gt;^temp3 = {cutItem,copyItem,pasteItem};\n      this-&gt;contextMenu1-&gt;MenuItems-&gt;AddRange( temp3 );\n      \n      // Add the mainMenu1 items to the shortcut menu as well, by\n      // calling the MergeMenu method.\n      contextMenu1-&gt;MergeMenu( mainMenu1 );\n      \n      //Initialize the form.\n      this-&gt;ClientSize = System::Drawing::Size( 292, 266 );\n      this-&gt;Name = &quot;Form1&quot;;\n      this-&gt;Text = &quot;Right click on form for merged menu.&quot;;\n      \n      // Associate the event-handling method with the\n      // MouseDown event.\n      this-&gt;MouseDown += gcnew MouseEventHandler( this, &amp;Form1::Form1_MouseDown );\n      \n      // Add mainMenu1 to the form.\n      this-&gt;Menu = mainMenu1;\n   }\n\n\nprivate:\n   void Form1_MouseDown( Object^ /*sender*/, MouseEventArgs^ e )\n   {\n      \n      // Check for a right mouse click.\n      if ( e-&gt;Button == ::MouseButtons::Right )\n      {\n         contextMenu1-&gt;Show( this, System::Drawing::Point( 30, 30 ) );\n      }\n   }\n\n};\n\n\n[System::STAThreadAttribute]\nint main()\n{\n   Application::Run( gcnew Form1 );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.MenuItemMergeOrder#1\">&#39; The following code example demonstrates using the MenuItem \n&#39; Merge-Order property to control the way a merged menu is displayed.\n\n\n\nImports System.Windows.Forms\n\nPublic Class Form1\n    Inherits System.Windows.Forms.Form\n\n    &#39;Declare a MainMenu object and its items.\n    Friend WithEvents mainMenu1 As System.Windows.Forms.MainMenu\n    Friend WithEvents fileItem As System.Windows.Forms.MenuItem\n    Friend WithEvents newItem As System.Windows.Forms.MenuItem\n    Friend WithEvents openItem As System.Windows.Forms.MenuItem\n    Friend WithEvents saveItem As System.Windows.Forms.MenuItem\n    Friend WithEvents optionsMenu As System.Windows.Forms.MenuItem\n    Friend WithEvents viewItem As System.Windows.Forms.MenuItem\n    Friend WithEvents toolsItem As System.Windows.Forms.MenuItem\n\n    &#39; Declare a ContextMenu object and its items.\n    Friend WithEvents contextMenu1 As System.Windows.Forms.ContextMenu\n    Friend WithEvents cutItem As System.Windows.Forms.MenuItem\n    Friend WithEvents copyItem As System.Windows.Forms.MenuItem\n    Friend WithEvents pasteItem As System.Windows.Forms.MenuItem\n\n   \n    Public Sub New()\n        MyBase.New()\n        Me.mainMenu1 = New System.Windows.Forms.MainMenu\n        Me.fileItem = New System.Windows.Forms.MenuItem\n        Me.newItem = New System.Windows.Forms.MenuItem\n        Me.openItem = New System.Windows.Forms.MenuItem\n        Me.saveItem = New System.Windows.Forms.MenuItem\n\n        Me.viewItem = New System.Windows.Forms.MenuItem\n        Me.toolsItem = New System.Windows.Forms.MenuItem\n\n\n        Me.optionsMenu = New System.Windows.Forms.MenuItem\n        Me.toolsItem = New System.Windows.Forms.MenuItem\n        Me.viewItem = New System.Windows.Forms.MenuItem\n\n        Me.contextMenu1 = New System.Windows.Forms.ContextMenu\n        Me.cutItem = New System.Windows.Forms.MenuItem\n        Me.copyItem = New System.Windows.Forms.MenuItem\n        Me.pasteItem = New System.Windows.Forms.MenuItem\n\n        &#39;Add file menu item and options menu item to the MainMenu.\n        Me.mainMenu1.MenuItems.AddRange(New System.Windows.Forms.MenuItem() _\n             {Me.fileItem, Me.optionsMenu})\n\n        &#39; Initialize the file menu and its contents.\n        Me.fileItem.Index = 0\n        Me.fileItem.Text = &quot;File&quot;\n        Me.newItem.Index = 0\n        Me.newItem.Text = &quot;New&quot;\n        Me.openItem.Index = 1\n        Me.openItem.Text = &quot;Open&quot;\n        Me.saveItem.Index = 2\n        Me.saveItem.Text = &quot;Save&quot;\n\n\n        &#39; Set the merge order of fileItem to 2 so it has a lower priority \n        &#39; on the merged menu.\n        Me.fileItem.MergeOrder = 2\n\n        &#39;Add the new items to the fileItem menu item collection.\n        Me.fileItem.MenuItems.AddRange(New MenuItem() _\n           {Me.newItem, Me.openItem, Me.saveItem})\n        &#39;\n\n        &#39; Initalize the optionsMenu item and its contents.\n        Me.optionsMenu.Index = 1\n        Me.optionsMenu.Text = &quot;Options&quot;\n\n        Me.viewItem.Index = 0\n        Me.viewItem.Text = &quot;View&quot;\n        Me.toolsItem.Index = 1\n        Me.toolsItem.Text = &quot;Tools&quot;\n\n        &#39; Set mergeOrder property to 1, so it has a higher priority than\n        &#39; the fileItem on the merged menu.\n        Me.optionsMenu.MergeOrder = 1\n\n        &#39;Add view and tool items to the optionsItem menu item.\n        Me.optionsMenu.MenuItems.AddRange _\n            (New MenuItem() {Me.viewItem, Me.toolsItem})\n\n        &#39; Initialize the menu items for the shortcut menu.\n        Me.cutItem.Index = 0\n        Me.cutItem.Text = &quot;Cut&quot;\n        Me.cutItem.MergeOrder = 0\n        Me.copyItem.Index = 1\n        Me.copyItem.Text = &quot;Copy&quot;\n        Me.copyItem.MergeOrder = 0\n        Me.pasteItem.Index = 2\n        Me.pasteItem.Text = &quot;Paste&quot;\n        Me.pasteItem.MergeOrder = 0\n\n        &#39; Add menu items to the shortcut menu.\n        contextMenu1.MenuItems.AddRange _\n            (New MenuItem() {cutItem, copyItem, pasteItem})\n\n        &#39; Add the mainMenu1 items to the shortcut menu as well, by\n        &#39; calling the MergeMenu method.\n        contextMenu1.MergeMenu(mainMenu1)\n\n        &#39;Initialize the form.\n        Me.ClientSize = New System.Drawing.Size(292, 266)\n        Me.Name = &quot;Form1&quot;\n        Me.Text = &quot;Right click on form for merged menu.&quot;\n\n        &#39; Add mainMenu1 to the form.\n        Me.Menu = mainMenu1\n\n\n    End Sub\n\n\n    Private Sub Form1_MouseDown(ByVal sender As Object, _\n        ByVal e As MouseEventArgs) Handles MyBase.MouseDown\n\n        &#39; Check for a right mouse click.\n        If (e.Button = MouseButtons.Right) Then\n\n            &#39; Display a merged menu containing items from mainMenu1 \n            &#39; and contextMenu1.\n            contextMenu1.Show(Me, New System.Drawing.Point(30, 30))\n        End If\n    End Sub\n\n    &lt;System.STAThreadAttribute()&gt; Public Shared Sub Main()\n        Application.Run(New Form1)\n    End Sub\n\n\n    \n\nEnd Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_MergeType\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_MergeType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MergeType</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating the behavior of this menu item when its menu is merged with another.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.MenuMerge MergeType { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.menumerge\" data-linktype=\"relative-path\">MenuMerge</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.menumerge\" data-linktype=\"relative-path\">MenuMerge</a> value that represents the menu item&#39;s merge type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The assigned value is not one of the <a class=\"xref\" href=\"system.windows.forms.menumerge\" data-linktype=\"relative-path\">MenuMerge</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The merge type of a menu item indicates how the menu item behaves when it has the same merge order as another menu item being merged. You can use merged menus to create a consolidated menu based on two or more existing menus.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> with the MergeType and <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_MergeOrder_\" data-linktype=\"relative-path\">MergeOrder</a> specified so that the menu item is added to the merged menu at first position.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic MenuItem.MergeType Example#1\">public:\n   void InitMyFileMenu()\n   {\n      // Set the MergeType to Add so that the menu item is added to the merged menu.\n      menuItem1-&gt;MergeType = MenuMerge::Add;\n      // Set the MergeOrder to 1 so that this menu item is placed lower in the merged menu order.\n      menuItem1-&gt;MergeOrder = 1;\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic MenuItem.MergeType Example#1\"> public void InitMyFileMenu()\n {\n    // Set the MergeType to Add so that the menu item is added to the merged menu.\n    menuItem1.MergeType = MenuMerge.Add;\n    // Set the MergeOrder to 1 so that this menu item is placed lower in the merged menu order.\n    menuItem1.MergeOrder = 1;\n }\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.MergeType Example#1\"> Public Sub InitMyFileMenu()\n     &#39; Set the MergeType to Add so that the menu item is added to the merged menu.\n     menuItem1.MergeType = MenuMerge.Add\n     &#39; Set the MergeOrder to 1 so that this menu item is placed lower in the merged menu order.\n     menuItem1.MergeOrder = 1\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_Mnemonic\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_Mnemonic_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Mnemonic</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating the mnemonic character that is associated with this menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public char Mnemonic { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </div>\r\n                  <p>A character that represents the mnemonic character associated with this menu item. Returns the NUL character (ASCII value 0) if no mnemonic character is specified in the text of the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The mnemonic character is the first character after an ampersand character (&amp;) in the text of the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>. This property will not return a mnemonic if two ampersand characters are placed together as the ampersands are used to display an ampersand in the text of the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> instead of defining a mnemonic character.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_OwnerDraw\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_OwnerDraw_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OwnerDraw</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the code that you provide draws the menu item or Windows draws the menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool OwnerDraw { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the menu item is to be drawn using code; <code>false</code> if the menu item is to be drawn by Windows. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the OwnerDraw property is set to <code>true</code>, you need to handle all drawing of the menu item. You can use this capability to create your own special menu displays.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates a menu with an owner-drawn menu item. This example set the OwnerDraw property and uses the <code>AddHandler</code> statement and the <code>AddressOf</code> operator to designate a delegate to handle the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_DrawItem\" data-linktype=\"relative-path\">DrawItem</a> event. To run the example, paste it in a form that imports the <a class=\"xref\" href=\"system\" data-linktype=\"relative-path\">System</a>, <a class=\"xref\" href=\"system.windows.forms\" data-linktype=\"relative-path\">System.Windows.Forms</a>, and <a class=\"xref\" href=\"system.drawing\" data-linktype=\"relative-path\">System.Drawing</a> namespaces. Call <code>InitializeMenu</code> from the form&#39;s constructor or <code>Load</code> method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.MenuItemOwnerDraw#1\">\t// Declare the MainMenu control.\n\tinternal System.Windows.Forms.MainMenu MainMenu1;\n\n\t// Declare MenuItem2 as With-Events because it will be user drawn.\n\tinternal System.Windows.Forms.MenuItem MenuItem2;\n\n\n\tprivate void InitializeMenu()\n\t{\n\n\t\t// Create MenuItem1, which will be drawn by the operating system.\n\t\tMenuItem MenuItem1 = new MenuItem(&quot;Regular Menu Item&quot;);\n\n\t\t// Create MenuItem2.\n\t\tMenuItem2 = new MenuItem(&quot;Custom Menu Item&quot;);\n\n\t\t// Set OwnerDraw property to true. This requires handling the\n\t\t// DrawItem event for this menu item.\n\t\tMenuItem2.OwnerDraw = true;\n\n\t\t//Add the event-handler delegate to handle the DrawItem event.\n        MenuItem2.DrawItem += new DrawItemEventHandler(DrawCustomMenuItem);\n\t\t\n      // Add the items to the menu.\n\t\tMainMenu1 = new MainMenu(new MenuItem[]{MenuItem1, MenuItem2});\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\n\t\t// Add the menu to the form.\n\t\tthis.Menu = this.MainMenu1;\n\t}\n\n\t// Draw the custom menu item.\n\tprivate void DrawCustomMenuItem(object sender, \n\t\tDrawItemEventArgs e)\n\t{\n\n\t\t// Cast the sender to MenuItem so you can access text property.\n\t\tMenuItem customItem = (MenuItem) sender;\n\n\t\t// Create a Brush and a Font to draw the MenuItem.\n\t\tSystem.Drawing.Brush aBrush = System.Drawing.Brushes.DarkMagenta;\n\t\tFont aFont = new Font(&quot;Garamond&quot;, 10, \n\t\t\tFontStyle.Italic, GraphicsUnit.Point);\n\n\t\t// Get the size of the text to use later to draw an ellipse\n\t\t// around the item.\n\t\tSizeF stringSize = e.Graphics.MeasureString(\n\t\t\tcustomItem.Text, aFont);\n\n\t\t// Draw the item and then draw the ellipse.\n\t\te.Graphics.DrawString(customItem.Text, aFont, \n\t\t\taBrush, e.Bounds.X, e.Bounds.Y);\n\t\te.Graphics.DrawEllipse(new Pen(System.Drawing.Color.Black, 2),\n\t\t\tnew Rectangle(e.Bounds.X, e.Bounds.Y, \n\t\t\t(System.Int32)stringSize.Width,\n\t\t\t(System.Int32)stringSize.Height));\n\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Windows.Forms.MenuItemOwnerDraw#1\">internal:\n   // Declare the MainMenu control.\n   System::Windows::Forms::MainMenu^ MainMenu1;\n\n   // Declare MenuItem2 as With-Events because it will be user drawn.\n   System::Windows::Forms::MenuItem^ MenuItem2;\n\nprivate:\n   void InitializeMenu()\n   {\n      \n      // Create MenuItem1, which will be drawn by the operating system.\n      MenuItem^ MenuItem1 = gcnew MenuItem( &quot;Regular Menu Item&quot; );\n      \n      // Create MenuItem2.\n      MenuItem2 = gcnew MenuItem( &quot;Custom Menu Item&quot; );\n      \n      // Set OwnerDraw property to true. This requires handling the\n      // DrawItem event for this menu item.\n      MenuItem2-&gt;OwnerDraw = true;\n      \n      //Add the event-handler delegate to handle the DrawItem event.\n      MenuItem2-&gt;DrawItem += gcnew DrawItemEventHandler( this, &amp;Form1::DrawCustomMenuItem );\n      \n      // Add the items to the menu.\n      array&lt;MenuItem^&gt;^temp0 = {MenuItem1,MenuItem2};\n      MainMenu1 = gcnew MainMenu( temp0 );\n      \n      // Add the menu to the form.\n      this-&gt;Menu = this-&gt;MainMenu1;\n   }\n\n   // Draw the custom menu item.\n   void DrawCustomMenuItem( Object^ sender, DrawItemEventArgs^ e )\n   {\n      // Cast the sender to MenuItem so you can access text property.\n      MenuItem^ customItem = dynamic_cast&lt;MenuItem^&gt;(sender);\n      \n      // Create a Brush and a Font to draw the MenuItem.\n      System::Drawing::Brush^ aBrush = System::Drawing::Brushes::DarkMagenta;\n      System::Drawing::Font^ aFont = gcnew System::Drawing::Font( &quot;Garamond&quot;,10,FontStyle::Italic,GraphicsUnit::Point );\n      \n      // Get the size of the text to use later to draw an ellipse\n      // around the item.\n      SizeF stringSize = e-&gt;Graphics-&gt;MeasureString( customItem-&gt;Text, aFont );\n      \n      // Draw the item and then draw the ellipse.\n      e-&gt;Graphics-&gt;DrawString( customItem-&gt;Text, aFont, aBrush, (float)e-&gt;Bounds.X, (float)e-&gt;Bounds.Y );\n      e-&gt;Graphics-&gt;DrawEllipse( gcnew Pen( System::Drawing::Color::Black,2 ), Rectangle(e-&gt;Bounds.X,e-&gt;Bounds.Y,(System::Int32)stringSize.Width,(System::Int32)stringSize.Height) );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.MenuItemOwnerDraw#1\">    &#39; Declare the MainMenu control.\n    Friend WithEvents MainMenu1 As System.Windows.Forms.MainMenu\n\n    &#39; Declare MenuItem2 as With-Events because it will be user drawn.\n    Friend WithEvents MenuItem2 As System.Windows.Forms.MenuItem\n\n\n    Private Sub InitializeMenu()\n\n        &#39; Create MenuItem1, which will be drawn by the operating system.\n        Dim MenuItem1 As New MenuItem(&quot;Regular Menu Item&quot;)\n\n        &#39; Create MenuItem2.\n        MenuItem2 = New MenuItem(&quot;Custom Menu Item&quot;)\n\n        &#39; Set OwnerDraw property to true. This requires handling the\n        &#39; DrawItem event for this menu item.\n        MenuItem2.OwnerDraw = True\n\n        &#39;Add the event-handler delegate to handle the DrawItem event.\n        AddHandler MenuItem2.DrawItem, New DrawItemEventHandler(AddressOf DrawCustomMenuItem)\n\n        &#39; Add the items to the menu.\n        MainMenu1 = New MainMenu(New MenuItem() {MenuItem1, MenuItem2})\n\n        &#39; Add the menu to the form.\n        Me.Menu = Me.MainMenu1\n    End Sub\n\n    &#39; Draw the custom menu item.\n    Private Sub DrawCustomMenuItem(ByVal sender As Object, ByVal e As _\n            System.Windows.Forms.DrawItemEventArgs)\n\n        &#39; Cast the sender to MenuItem so you can access text property.\n        Dim customItem As MenuItem = CType(sender, MenuItem)\n\n        &#39; Create a Brush and a Font to draw the MenuItem.\n        Dim aBrush As System.Drawing.Brush = System.Drawing.Brushes.DarkMagenta\n        Dim aFont As New Font(&quot;Garamond&quot;, 10, FontStyle.Italic, _\n            GraphicsUnit.Point)\n\n        &#39; Get the size of the text to use later to draw an ellipse\n        &#39; around the item.\n        Dim stringSize As SizeF = e.Graphics.MeasureString( _\n            customItem.Text, aFont)\n\n        &#39; Draw the item and then draw the ellipse.\n        e.Graphics.DrawString(customItem.Text, aFont, _\n            aBrush, e.Bounds.X, e.Bounds.Y)\n        e.Graphics.DrawEllipse(New Pen(System.Drawing.Color.Black, 2), _\n            New Rectangle(e.Bounds.X, e.Bounds.Y, CInt(stringSize.Width), _\n            CInt(stringSize.Height)))\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_Parent\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_Parent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parent</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating the menu that contains this menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.Menu Parent { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.menu\" data-linktype=\"relative-path\">System.Windows.Forms.Menu</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.menu\" data-linktype=\"relative-path\">Menu</a> that represents the menu that contains this menu item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this property to obtain the <a class=\"xref\" href=\"system.windows.forms.menu\" data-linktype=\"relative-path\">Menu</a> object for a submenu. You can cast the <a class=\"xref\" href=\"system.windows.forms.menu\" data-linktype=\"relative-path\">Menu</a> object returned by this property to a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> object to manipulate it.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In this example, you create a main menu and a top-level menu item, <code>menuItem1</code> (<code>File</code>). You also create two menu items, <code>menuItem2</code> (<code>New</code>) and <code>menuItem3</code> (<code>Open</code>), and add them to the menu item list of <code>menuItem1</code>. Then you check to see if <code>menuItem3</code> has got a parent menu, which is true, and display the information of this parent menu in message box. This example requires that you have created a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"ParentMenu#1\">\t\tpublic void CreateMyMenuItems()\n\t\t{\n\t\t\t// Craete a main menu object.\n\t\t\tMainMenu mainMenu1 = new MainMenu();\n\n\t\t\t// Create three top-level menu items.\n\t\t\tMenuItem menuItem1 = new MenuItem(&quot;&amp;File&quot;);\n\t\t\tMenuItem menuItem2 = new MenuItem(&quot;&amp;New&quot;);\n\t\t\tMenuItem menuItem3 = new MenuItem(&quot;&amp;Open&quot;);\n\n\t\t\t// Add menuItem1 to the main menu.\n\t\t\tmainMenu1.MenuItems.Add(menuItem1);\t\n\n\t\t\t// Add menuItem2 and menuItem3 to menuItem1.\n\t\t\tmenuItem1.MenuItems.Add(menuItem2);\n\t\t\tmenuItem1.MenuItems.Add(menuItem3);\n\n\t\t\t// Check to see if menuItem3 has a parent menu.\n\t\t\tif (menuItem3.Parent != null)\n\t\t\t\tMessageBox.Show(menuItem3.Parent.ToString()+\n\t\t\t\t\t\t&quot;.&quot;, &quot;Parent Menu Information of menuItem3&quot;); \n\t\t\telse\n\t\t\t\tMessageBox.Show(&quot;No parent menu.&quot;); \n\n\t\t\t// Assign mainMenu1 to the form.\n\t\t\tthis.Menu = mainMenu1;\t\t\t\n\t\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"ParentMenu#1\">public:\n   void CreateMyMenuItems()\n   {\n      // Craete a main menu object.\n      MainMenu^ mainMenu1 = gcnew MainMenu;\n\n      // Create three top-level menu items.\n      MenuItem^ menuItem1 = gcnew MenuItem( &quot;&amp;File&quot; );\n      MenuItem^ menuItem2 = gcnew MenuItem( &quot;&amp;New&quot; );\n      MenuItem^ menuItem3 = gcnew MenuItem( &quot;&amp;Open&quot; );\n\n      // Add menuItem1 to the main menu.\n      mainMenu1-&gt;MenuItems-&gt;Add( menuItem1 );\n\n      // Add menuItem2 and menuItem3 to menuItem1.\n      menuItem1-&gt;MenuItems-&gt;Add( menuItem2 );\n      menuItem1-&gt;MenuItems-&gt;Add( menuItem3 );\n\n      // Check to see if menuItem3 has a parent menu.\n      if ( menuItem3-&gt;Parent != nullptr )\n            MessageBox::Show( String::Concat( menuItem3-&gt;Parent, &quot;.&quot; ), &quot;Parent Menu Information of menuItem3&quot; );\n      else\n            MessageBox::Show( &quot;No parent menu.&quot; );\n\n      // Assign mainMenu1 to the form.\n      this-&gt;Menu = mainMenu1;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"ParentMenu#1\">    Public Sub CreateMyMenuItems()\n        &#39; Craete a main menu object.\n        Dim mainMenu1 As New MainMenu()\n\n        &#39; Create three top-level menu items.\n        Dim menuItem1 As New MenuItem(&quot;&amp;File&quot;)\n        Dim menuItem2 As New MenuItem(&quot;&amp;New&quot;)\n        Dim menuItem3 As New MenuItem(&quot;&amp;Open&quot;)\n\n        &#39; Add menuItem1 to the main menu.\n        mainMenu1.MenuItems.Add(menuItem1)\n\n        &#39; Add menuItem2 and menuItem3 to menuItem1.\n        menuItem1.MenuItems.Add(menuItem2)\n        menuItem1.MenuItems.Add(menuItem3)\n\n        &#39; Check to see if menuItem3 has a parent menu.\n        If (menuItem3.Parent IsNot Nothing) Then\n            MessageBox.Show(menuItem3.Parent.ToString() + &quot;.&quot;, &quot;Parent Menu Information of menuItem3&quot;)\n        Else\n            MessageBox.Show(&quot;No parent menu.&quot;)\n        End If\n        &#39; Assign mainMenu1 to the form.\n        Me.Menu = mainMenu1\n    End Sub &#39;CreateMyMenuItems\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_RadioCheck\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_RadioCheck_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RadioCheck</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>, if checked, displays a radio-button instead of a check mark.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool RadioCheck { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if a radio-button is to be used instead of a check mark; <code>false</code> if the standard check mark is to be displayed when the menu item is checked. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Check marks do not necessarily imply a mutually exclusive state for a group of menu items. You can use this property to indicate to the user that the check mark of a menu item is mutually exclusive.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Checked_\" data-linktype=\"relative-path\">Checked</a> property to change the state of an application. In the example, a group of menu items are provided that are used to specify the color for the text in an <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control. In the example, the event handler provided is used by the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event of the three menu items. Each menu item specifies a color, <code>menuItemRed</code>, <code>menuItemGreen</code>, or <code>menuItemBlue</code>. The event handler determines which menu item was clicked, places a checkmark to the selected menu item, and changes the text color of the form&#39;s <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control, named <code>textBox1</code>. The example also uses the RadioCheck property to demonstrate how a radio-button check is used to show menu items that are mutually exclusive. This example requires that the <a class=\"xref\" href=\"system.drawing\" data-linktype=\"relative-path\">System.Drawing</a> namespace has been added to the form that contains this code.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic MenuItem.RadioCheck Example#1\"> // This method is called from the constructor of the form to set up the menu items.\n public void ConfigureMyMenus()\n {\n    /* Set all of these menu items to Radio-Button check marks so the user can see \n       that only one color can be selected at a time. */\n    menuItemRed.RadioCheck = true;\n    menuItemBlue.RadioCheck = true;\n    menuItemGreen.RadioCheck = true;\n }\n \n // The following event handler would be connected to three menu items.\n private void MyMenuClick(Object sender, EventArgs e)\n {\n    if(sender == menuItemBlue)\n    {\n       // Set the checkmark for the menuItemBlue menu item.\n       menuItemBlue.Checked = true;\n       // Uncheck the menuItemRed and menuItemGreen menu items.\n       menuItemRed.Checked = false;\n       menuItemGreen.Checked = false;\n       // Set the color of the text in the TextBox control to Blue.\n       textBox1.ForeColor = Color.Blue;\n    }\n    else if(sender == menuItemRed)\n    {\n       // Set the checkmark for the menuItemRed menu item.\n       menuItemRed.Checked = true;\n       // Uncheck the menuItemBlue and menuItemGreen menu items.\n       menuItemBlue.Checked = false;\n       menuItemGreen.Checked = false;\n       // Set the color of the text in the TextBox control to Red.\n       textBox1.ForeColor = Color.Red;\n    }\n    else\n    {\n      // Set the checkmark for the menuItemGreen menu item.\n       menuItemGreen.Checked = true;\n       // Uncheck the menuItemRed and menuItemGreen menu items.\n       menuItemBlue.Checked = false;\n       menuItemRed.Checked = false;\n       // Set the color of the text in the TextBox control to Blue.\n       textBox1.ForeColor = Color.Green;\n    }\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.RadioCheck Example#1\">    &#39; This method is called from the constructor of the form to set up the menu\n    &#39; items.\n    Public Sub ConfigureMyMenus()\n        &#39; Set all of these menu items to Radio-Button check marks so the user\n        &#39; can see that only one color can be selected at a time. \n        menuItemRed.RadioCheck = True\n        menuItemBlue.RadioCheck = True\n        menuItemGreen.RadioCheck = True\n    End Sub    \n    \n    &#39; The following event handler would be connected to three menu items.\n    Private Sub MyMenuClick(sender As Object, e As EventArgs)\n        If sender Is menuItemBlue Then\n            &#39; Set the checkmark for the menuItemBlue menu item.\n            menuItemBlue.Checked = True\n            &#39; Uncheck the menuItemRed and menuItemGreen menu items.\n            menuItemRed.Checked = False\n            menuItemGreen.Checked = False\n            &#39; Set the color of the text in the TextBox control to Blue.\n            textBox1.ForeColor = Color.Blue\n        Else\n            If sender Is menuItemRed Then\n                &#39; Set the checkmark for the menuItemRed menu item.\n                menuItemRed.Checked = True\n                &#39; Uncheck the menuItemBlue and menuItemGreen menu items.\n                menuItemBlue.Checked = False\n                menuItemGreen.Checked = False\n                &#39; Set the color of the text in the TextBox control to Red.\n                textBox1.ForeColor = Color.Red\n            Else\n                &#39; Set the checkmark for the menuItemGreen menu item.\n                menuItemGreen.Checked = True\n                &#39; Uncheck the menuItemRed and menuItemGreen menu items.\n                menuItemBlue.Checked = False\n                menuItemRed.Checked = False\n                &#39; Set the color of the text in the TextBox control to Blue.\n                textBox1.ForeColor = Color.Green\n            End If\n        End If\n    End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic MenuItem.RadioCheck Example#1\">public:\n   // This method is called from the constructor of the form to set up the menu items.\n   void ConfigureMyMenus()\n   {\n      /* Set all of these menu items to Radio-Button check marks so the user can see \n         that only one color can be selected at a time. */\n      menuItemRed-&gt;RadioCheck = true;\n      menuItemBlue-&gt;RadioCheck = true;\n      menuItemGreen-&gt;RadioCheck = true;\n   }\n\nprivate:\n   // The following event handler would be connected to three menu items.\n   void MyMenuClick( Object^ sender, EventArgs^ e )\n   {\n      if ( sender == menuItemBlue )\n      {\n         // Set the checkmark for the menuItemBlue menu item.\n         menuItemBlue-&gt;Checked = true;\n         // Uncheck the menuItemRed and menuItemGreen menu items.\n         menuItemRed-&gt;Checked = false;\n         menuItemGreen-&gt;Checked = false;\n         // Set the color of the text in the TextBox control to Blue.\n         textBox1-&gt;ForeColor = Color::Blue;\n      }\n      else if ( sender == menuItemRed )\n      {\n         // Set the checkmark for the menuItemRed menu item.\n         menuItemRed-&gt;Checked = true;\n         // Uncheck the menuItemBlue and menuItemGreen menu items.\n         menuItemBlue-&gt;Checked = false;\n         menuItemGreen-&gt;Checked = false;\n         // Set the color of the text in the TextBox control to Red.\n         textBox1-&gt;ForeColor = Color::Red;\n      }\n      else\n      {\n         // Set the checkmark for the menuItemGreen menu item.\n         menuItemGreen-&gt;Checked = true;\n         // Uncheck the menuItemRed and menuItemGreen menu items.\n         menuItemBlue-&gt;Checked = false;\n         menuItemRed-&gt;Checked = false;\n         // Set the color of the text in the TextBox control to Blue.\n         textBox1-&gt;ForeColor = Color::Green;\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_Shortcut\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_Shortcut_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Shortcut</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating the shortcut key associated with the menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Windows.Forms.Shortcut Shortcut { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.shortcut\" data-linktype=\"relative-path\">Shortcut</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.windows.forms.shortcut\" data-linktype=\"relative-path\">Shortcut</a> values. The default is <code>Shortcut.None</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></div>\r\n                  </div>\r\n                  <p>The assigned value is not one of the <a class=\"xref\" href=\"system.windows.forms.shortcut\" data-linktype=\"relative-path\">Shortcut</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Shortcut keys provide a method for users to activate frequently used menu items in your menu system and to provide keyboard access to your application for those users who do not have access to a mouse or other pointer device.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item. The example requires that a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> has been created that is named <code>menuItem1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic MenuItem.Text Example#1\"> public void SetupMyMenuItem()\n {\n    // Set the caption for the menu item.\n    menuItem1.Text = &quot;&amp;New&quot;;\n    // Assign a shortcut key.\n    menuItem1.Shortcut = Shortcut.CtrlN;\n    // Make the menu item visible.\n    menuItem1.Visible = true;\n    // Display the shortcut key combination.\n    menuItem1.ShowShortcut = true;\n }\n   \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic MenuItem.Text Example#1\">public:\n   void SetupMyMenuItem()\n   {\n      // Set the caption for the menu item.\n      menuItem1-&gt;Text = &quot;&amp;New&quot;;\n      // Assign a shortcut key.\n      menuItem1-&gt;Shortcut = Shortcut::CtrlN;\n      // Make the menu item visible.\n      menuItem1-&gt;Visible = true;\n      // Display the shortcut key combination.\n      menuItem1-&gt;ShowShortcut = true;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.Text Example#1\"> Public Sub SetupMyMenuItem()\n     &#39; Set the caption for the menu item.\n     menuItem1.Text = &quot;&amp;New&quot;\n     &#39; Assign a shortcut key.\n     menuItem1.Shortcut = Shortcut.CtrlN\n     &#39; Make the menu item visible.\n     menuItem1.Visible = True\n     &#39; Display the shortcut key combination.\n     menuItem1.ShowShortcut = True\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_ShowShortcut\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_ShowShortcut_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ShowShortcut</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the shortcut key that is associated with the menu item is displayed next to the menu item caption.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool ShowShortcut { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the shortcut key combination is displayed next to the menu item caption; <code>false</code> if the shortcut key combination is not to be displayed. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this property to provide the option for users to hide shortcuts from menus to conserve menu space or to hide a shortcut key from being displayed.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item. The example requires that a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> has been created that is named <code>menuItem1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic MenuItem.Text Example#1\"> public void SetupMyMenuItem()\n {\n    // Set the caption for the menu item.\n    menuItem1.Text = &quot;&amp;New&quot;;\n    // Assign a shortcut key.\n    menuItem1.Shortcut = Shortcut.CtrlN;\n    // Make the menu item visible.\n    menuItem1.Visible = true;\n    // Display the shortcut key combination.\n    menuItem1.ShowShortcut = true;\n }\n   \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic MenuItem.Text Example#1\">public:\n   void SetupMyMenuItem()\n   {\n      // Set the caption for the menu item.\n      menuItem1-&gt;Text = &quot;&amp;New&quot;;\n      // Assign a shortcut key.\n      menuItem1-&gt;Shortcut = Shortcut::CtrlN;\n      // Make the menu item visible.\n      menuItem1-&gt;Visible = true;\n      // Display the shortcut key combination.\n      menuItem1-&gt;ShowShortcut = true;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.Text Example#1\"> Public Sub SetupMyMenuItem()\n     &#39; Set the caption for the menu item.\n     menuItem1.Text = &quot;&amp;New&quot;\n     &#39; Assign a shortcut key.\n     menuItem1.Shortcut = Shortcut.CtrlN\n     &#39; Make the menu item visible.\n     menuItem1.Visible = True\n     &#39; Display the shortcut key combination.\n     menuItem1.ShowShortcut = True\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_Text\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_Text_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Text</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating the caption of the menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Text { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The text caption of the menu item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you specify a caption for your menu item, you can also specify an access key by placing an &#39;&amp;&#39; before the character to be used as the access key. For example, to specify the &quot;F&quot; in &quot;File&quot; as an access key, you would specify the caption for the menu item as &quot;&amp;File&quot;. You can use this feature to provide keyboard navigation for your menus.  </p>\n<p> Setting this property to &quot;<code>-</code>&quot; causes your menu item to be displayed as a separator (a horizontal line) rather than a standard menu item.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item. The example requires that a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> has been created that is named <code>menuItem1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic MenuItem.Text Example#1\"> public void SetupMyMenuItem()\n {\n    // Set the caption for the menu item.\n    menuItem1.Text = &quot;&amp;New&quot;;\n    // Assign a shortcut key.\n    menuItem1.Shortcut = Shortcut.CtrlN;\n    // Make the menu item visible.\n    menuItem1.Visible = true;\n    // Display the shortcut key combination.\n    menuItem1.ShowShortcut = true;\n }\n   \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic MenuItem.Text Example#1\">public:\n   void SetupMyMenuItem()\n   {\n      // Set the caption for the menu item.\n      menuItem1-&gt;Text = &quot;&amp;New&quot;;\n      // Assign a shortcut key.\n      menuItem1-&gt;Shortcut = Shortcut::CtrlN;\n      // Make the menu item visible.\n      menuItem1-&gt;Visible = true;\n      // Display the shortcut key combination.\n      menuItem1-&gt;ShowShortcut = true;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.Text Example#1\"> Public Sub SetupMyMenuItem()\n     &#39; Set the caption for the menu item.\n     menuItem1.Text = &quot;&amp;New&quot;\n     &#39; Assign a shortcut key.\n     menuItem1.Shortcut = Shortcut.CtrlN\n     &#39; Make the menu item visible.\n     menuItem1.Visible = True\n     &#39; Display the shortcut key combination.\n     menuItem1.ShowShortcut = True\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_Visible\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_Visible_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Visible</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the menu item is visible.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Visible { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the menu item will be made visible on the menu; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this property to modify a menu structure without having to merge menus or disable menus. For example, if you want to hide a complete section of functionality from the menus for your application, you can hide them from the user by setting this property to <code>false</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a menu item, sets the caption, assigns a shortcut key, makes the menu item visible, and shows the shortcut key display for the menu item. The example requires that a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> has been created that is named <code>menuItem1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic MenuItem.Text Example#1\"> public void SetupMyMenuItem()\n {\n    // Set the caption for the menu item.\n    menuItem1.Text = &quot;&amp;New&quot;;\n    // Assign a shortcut key.\n    menuItem1.Shortcut = Shortcut.CtrlN;\n    // Make the menu item visible.\n    menuItem1.Visible = true;\n    // Display the shortcut key combination.\n    menuItem1.ShowShortcut = true;\n }\n   \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic MenuItem.Text Example#1\">public:\n   void SetupMyMenuItem()\n   {\n      // Set the caption for the menu item.\n      menuItem1-&gt;Text = &quot;&amp;New&quot;;\n      // Assign a shortcut key.\n      menuItem1-&gt;Shortcut = Shortcut::CtrlN;\n      // Make the menu item visible.\n      menuItem1-&gt;Visible = true;\n      // Display the shortcut key combination.\n      menuItem1-&gt;ShowShortcut = true;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.Text Example#1\"> Public Sub SetupMyMenuItem()\n     &#39; Set the caption for the menu item.\n     menuItem1.Text = &quot;&amp;New&quot;\n     &#39; Assign a shortcut key.\n     menuItem1.Shortcut = Shortcut.CtrlN\n     &#39; Make the menu item visible.\n     menuItem1.Visible = True\n     &#39; Display the shortcut key combination.\n     menuItem1.ShowShortcut = True\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_CloneMenu\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_CloneMenu_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CloneMenu()</div>        \r\n          </div>\r\n    \r\n            <p>Creates a copy of the current <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.MenuItem CloneMenu ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> that represents the duplicated menu item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p><a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects cannot be used in more than one place unless you obtain a copy of the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>. You can call this method to create a copy of this menu item for use in a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a>, <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a>, or other <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> within your application. When a menu item is cloned, any event handlers specified in the original menu item will continue to function in the cloned version of the menu item. For example, if you created a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> and connected its <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event to an event handler. When the menu item is cloned, the cloned menu item will call the same event handler.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example clones a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> and displays it in a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a>. The example requires that a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> exists in a <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> on a form with the name of <code>menuItem1</code> and that a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> object named <code>contextMenu1</code> also exists on the form.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic MenuItem.CloneMenu Example#1\"> public void CloneMyMenu()\n {\n    // Clone the menu item and add it to the collection for the shortcut menu.\n    contextMenu1.MenuItems.Add(menuItem1.CloneMenu());\n    \n }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic MenuItem.CloneMenu Example#1\">public:\n   void CloneMyMenu()\n   {\n      // Clone the menu item and add it to the collection for the shortcut menu.\n      contextMenu1-&gt;MenuItems-&gt;Add( menuItem1-&gt;CloneMenu() );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.CloneMenu Example#1\"> Public Sub CloneMyMenu()\n \n     &#39; Clone the menu item and add it to the collection for the shortcut menu.\n     contextMenu1.MenuItems.Add(menuItem1.CloneMenu())\n     \n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_CloneMenu_System_Windows_Forms_MenuItem_\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_CloneMenu_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CloneMenu(MenuItem)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a copy of the specified <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void CloneMenu (System.Windows.Forms.MenuItem itemSrc);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>itemSrc</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> that represents the menu item to copy.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call this method to create copies of menu items that you have already created for use in a shortcut menu or another menu structure within your application. This version of <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_CloneMenu_\" data-linktype=\"relative-path\">CloneMenu</a> allows you to specify a specific <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> to copy instead of the menu item that is calling the method. You can use this method to initialize a new <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> object with a copy of another <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>. When a menu item is cloned, any event handlers specified in the original menu item will continue to function in the cloned version of the menu item. For example, if you created a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> and connected its <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event to an event handler. When the menu item is cloned, the cloned menu item will call the same event handler.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example initializes a new <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> with a copy of an existing <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> that is used in a <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> on a form. The code then adds the cloned <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> to a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> on the form. This example requires that a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> is already created and named <code>menuItem1</code> and that a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> control has been created and named <code>contextMenu1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic MenuItem.CloneMenu1 Example#1\"> public void CloneMyMenu()\n {\n    // Clone the existing MenuItem into the new MenuItem.\n    MenuItem tempMenuItem = menuItem1.CloneMenu();\n  \n    // Assign the cloned MenuItem to the ContextMenu.\n    contextMenu1.MenuItems.Add(tempMenuItem);\n }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic MenuItem.CloneMenu1 Example#1\">public:\n   void CloneMyMenu()\n   {\n      // Clone the existing MenuItem into the new MenuItem.\n      MenuItem^ tempMenuItem = menuItem1-&gt;CloneMenu();\n      \n      // Assign the cloned MenuItem to the ContextMenu.\n      contextMenu1-&gt;MenuItems-&gt;Add( tempMenuItem );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic MenuItem.CloneMenu1 Example#1\"> Public Sub CloneMyMenu()\n     &#39; Clone the existing MenuItem into the new MenuItem.\n     Dim tempMenuItem As MenuItem = menuItem1.CloneMenu()\n        \n     &#39; Assign the cloned MenuItem to the ContextMenu.\n     contextMenu1.MenuItems.Add(tempMenuItem)\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_Dispose_System_Boolean_\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_Dispose_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Dispose(Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Disposes of the resources (other than memory) used by the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void Dispose (bool disposing);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>disposing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> to release both managed and unmanaged resources; <code>false</code> to release only unmanaged resources.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Call Dispose when you are finished using the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>. The Dispose method leaves the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> in an unusable state. After calling Dispose, you must release all references to the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> so the memory it was occupying can be reclaimed by garbage collection.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Always call Dispose before you release your last reference to the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>. Otherwise, the resources the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> is using will not be freed until garbage collection calls the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> object&#39;s destructor.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_MergeMenu\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_MergeMenu_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MergeMenu()</div>        \r\n          </div>\r\n    \r\n            <p>Merges this <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> with another <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> and returns the resulting merged <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Windows.Forms.MenuItem MergeMenu ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> that represents the merged menu item.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When you call this version of MergeMenu, the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> returned is a copy of the current menu item that can be merged with another menu item without affecting the functionality of the current item. This version of the MergeMenu method is similar to calling the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_CloneMenu_\" data-linktype=\"relative-path\">CloneMenu</a> method that contains no parameters.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_MergeMenu_System_Windows_Forms_MenuItem_\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_MergeMenu_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MergeMenu(MenuItem)</div>        \r\n          </div>\r\n    \r\n            <p>Merges another menu item with this menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void MergeMenu (System.Windows.Forms.MenuItem itemSrc);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>itemSrc</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> that specifies the menu item to merge with this one.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Menu items are merged according to the value of the menu item&#39;s <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_MergeType_\" data-linktype=\"relative-path\">MergeType</a> and <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_MergeOrder_\" data-linktype=\"relative-path\">MergeOrder</a> properties. This version of the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_MergeMenu_\" data-linktype=\"relative-path\">MergeMenu</a> method enables you to merge two <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects (and their submenus) into a single menu. Menu merging is handled automatically when a Multiple Document Interface (MDI) parent form and a child both have menus. You can use this version of the method to merge two <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects (and their submenu items) located in a <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> control into a single menu within a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a>. For example, you can call this version of the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_MergeMenu_\" data-linktype=\"relative-path\">MergeMenu</a> method to merge the menu items of a File and Edit menu into a single <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> that can then be added to and displayed by a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses this version of the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_MergeMenu_\" data-linktype=\"relative-path\">MergeMenu</a> method to create a copy of a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> and merge it with another. The merged <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> is then added to a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> control. This example requires that there are two menu items called <code>menuItem1</code> and <code>menuItem2</code> that contain submenu items within them and a <a class=\"xref\" href=\"system.windows.forms.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> named <code>contextMenu1</code> to display the menu items. <code>menuItem1</code> and <code>menuItem2</code> have different menu items contained within them. After the call to <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_MergeMenu_\" data-linktype=\"relative-path\">MergeMenu</a> is made, a consolidated menu is created.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic MenuItem.MergeMenu1 Example#1\"> Private Sub MergeMyMenus()\n     &#39; Set the merge type to merge the items from both top menu items.\n     menuItem1.MergeType = MenuMerge.MergeItems\n     menuItem2.MergeType = MenuMerge.MergeItems\n     &#39; Create a copy of my menu item.\n     Dim tempMenuItem As New MenuItem()\n     &#39; Create a copy of menuItem1 before doing the merge.\n     tempMenuItem = menuItem1.CloneMenu()\n     &#39; Merge menuItem1&#39;s copy with a clone of menuItem2\n     tempMenuItem.MergeMenu(menuItem2.CloneMenu())\n        \n     &#39; Add the merged menu to the ContextMenu control.\n     contextMenu1.MenuItems.Add(tempMenuItem)\n End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic MenuItem.MergeMenu1 Example#1\">private:\n   void MergeMyMenus()\n   {\n      // Set the merge type to merge the items from both top menu items.\n      menuItem1-&gt;MergeType = MenuMerge::MergeItems;\n      menuItem2-&gt;MergeType = MenuMerge::MergeItems;\n      // Create a copy of my menu item.\n      MenuItem^ tempMenuItem = gcnew MenuItem;\n      // Create a copy of menuItem1 before doing the merge.\n      tempMenuItem = menuItem1-&gt;CloneMenu();\n      // Merge menuItem1&#39;s copy with a clone of menuItem2\n      tempMenuItem-&gt;MergeMenu( menuItem2-&gt;CloneMenu() );\n      \n      // Add the merged menu to the ContextMenu control.\n      contextMenu1-&gt;MenuItems-&gt;Add( tempMenuItem );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic MenuItem.MergeMenu1 Example#1\"> private void MergeMyMenus()\n {\n    // Set the merge type to merge the items from both top menu items.\n    menuItem1.MergeType = MenuMerge.MergeItems;\n    menuItem2.MergeType = MenuMerge.MergeItems;\n    // Create a copy of my menu item.\n    MenuItem tempMenuItem = new MenuItem();\n    // Create a copy of menuItem1 before doing the merge.\n    tempMenuItem = menuItem1.CloneMenu();\n    // Merge menuItem1&#39;s copy with a clone of menuItem2\n    tempMenuItem.MergeMenu(menuItem2.CloneMenu());\n \n    // Add the merged menu to the ContextMenu control.\n    contextMenu1.MenuItems.Add(tempMenuItem);\n }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_OnClick_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_OnClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnClick(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnClick (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event to perform tasks when a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> is clicked. The example creates a <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> called <code>mainMenu1</code> and adds two <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects, <code>topMenuItem</code> (<code>File</code>) and <code>menuItem1</code> (<code>Open</code>). It then connects the <code>Click</code> event to the <code>menuItem1_Click</code> event handler. When the user clicks the <code>Open</code> menu item, an <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a> is initialized and displayed. The example requires that you have created a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"MenuItemClick#1\">\t\tpublic void CreateMyMenu()\n\t\t{\n\t\t\t// Create a main menu object.\n\t\t\tMainMenu mainMenu1 = new MainMenu();\n\n\t\t\t// Create empty menu item objects.\n\t\t\tMenuItem topMenuItem = new MenuItem();\n\t\t\tMenuItem menuItem1 = new MenuItem();\n                  \n\t\t\t// Set the caption of the menu items.\n\t\t\ttopMenuItem.Text = &quot;&amp;File&quot;;\n\t\t\tmenuItem1.Text = &quot;&amp;Open&quot;;\n\n\t\t\t// Add the menu items to the main menu.\n         \t\ttopMenuItem.MenuItems.Add(menuItem1);\n\t\t\tmainMenu1.MenuItems.Add(topMenuItem);\n\t\t\t\t\t\t\n\t\t\t// Add functionality to the menu items using the Click event. \n\t\t\tmenuItem1.Click += new System.EventHandler(this.menuItem1_Click);\n\n\t\t\t// Assign mainMenu1 to the form.\n\t\t\tthis.Menu=mainMenu1;\n\t\t}\n\n\t\tprivate void menuItem1_Click(object sender, System.EventArgs e)\n\t\t{\t\n                   // Create a new OpenFileDialog and display it.\n\t\t   OpenFileDialog fd = new OpenFileDialog();\n         \t   fd.DefaultExt = &quot;*.*&quot;;\n\t\t   fd.ShowDialog();\n\t\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"MenuItemClick#1\">public:\n   void CreateMyMenu()\n   {\n      // Create a main menu object.\n      MainMenu^ mainMenu1 = gcnew MainMenu;\n\n      // Create empty menu item objects.\n      MenuItem^ topMenuItem = gcnew MenuItem;\n      MenuItem^ menuItem1 = gcnew MenuItem;\n\n      // Set the caption of the menu items.\n      topMenuItem-&gt;Text = &quot;&amp;File&quot;;\n      menuItem1-&gt;Text = &quot;&amp;Open&quot;;\n\n      // Add the menu items to the main menu.\n      topMenuItem-&gt;MenuItems-&gt;Add( menuItem1 );\n      mainMenu1-&gt;MenuItems-&gt;Add( topMenuItem );\n\n      // Add functionality to the menu items using the Click event. \n      menuItem1-&gt;Click += gcnew System::EventHandler( this, &amp;Form1::menuItem1_Click );\n\n      // Assign mainMenu1 to the form.\n      this-&gt;Menu = mainMenu1;\n   }\n\nprivate:\n   void menuItem1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Create a new OpenFileDialog and display it.\n      OpenFileDialog^ fd = gcnew OpenFileDialog;\n      fd-&gt;DefaultExt = &quot;*.&quot;;\n      fd-&gt;ShowDialog();\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"MenuItemClick#1\">    Public Sub CreateMyMenu()\n      &#39; Create a main menu object.\n      Dim mainMenu1 As New MainMenu()\n\n      &#39; Create empty menu item objects.\n      Dim topMenuItem As New MenuItem()\n      Dim menuItem1 As New MenuItem()\n\n      &#39; Set the caption of the menu items.\n      topMenuItem.Text = &quot;&amp;File&quot;\n      menuItem1.Text = &quot;&amp;Open&quot;\n\n      &#39; Add the menu items to the main menu.\n      topMenuItem.MenuItems.Add(menuItem1)\n      mainMenu1.MenuItems.Add(topMenuItem)\n\n      &#39; Add functionality to the menu items using the Click event. \n      AddHandler menuItem1.Click, AddressOf Me.menuItem1_Click\n      &#39; Assign mainMenu1 to the form.\n      Me.Menu = mainMenu1\n   End Sub\n\n\n   Private Sub menuItem1_Click(ByVal sender As Object, ByVal e As System.EventArgs)\n      &#39; Create a new OpenFileDialog and display it.\n      Dim fd As New OpenFileDialog()\n      fd.DefaultExt = &quot;*.*&quot;\n      fd.ShowDialog()\n   End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_OnDrawItem_System_Windows_Forms_DrawItemEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_OnDrawItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnDrawItem(DrawItemEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_DrawItem\" data-linktype=\"relative-path\">DrawItem</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.drawitemeventargs\" data-linktype=\"relative-path\">DrawItemEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.drawitemeventargs\" data-linktype=\"relative-path\">DrawItemEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_OnInitMenuPopup_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_OnInitMenuPopup_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnInitMenuPopup(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Popup\" data-linktype=\"relative-path\">Popup</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnInitMenuPopup (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_OnMeasureItem_System_Windows_Forms_MeasureItemEventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_OnMeasureItem_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnMeasureItem(MeasureItemEventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_MeasureItem\" data-linktype=\"relative-path\">MeasureItem</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.forms.measureitemeventargs\" data-linktype=\"relative-path\">MeasureItemEventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.windows.forms.measureitemeventargs\" data-linktype=\"relative-path\">MeasureItemEventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_OnPopup_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_OnPopup_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnPopup(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Popup\" data-linktype=\"relative-path\">Popup</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnPopup (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Popup\" data-linktype=\"relative-path\">Popup</a> event to determine whether <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown. The example determines if <code>textBox1</code>, a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control on the form, is enabled, has input focus, and has text selected before enabling the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects. This example requires that three <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects are created named <code>menuCut</code>, <code>menuCopy</code>, and <code>menuDelete</code> have been created.  </p>\n<pre><code class=\"lang-cs\" name=\"MenuItem.Popup#1\">      private void PopupMyMenu(object sender, System.EventArgs e)\n      {\n         if (textBox1.Enabled == false || textBox1.Focused == false ||\n            textBox1.SelectedText.Length == 0)\n         {\n            menuCut.Enabled = false;\n            menuCopy.Enabled = false;\n            menuDelete.Enabled = false;\n         }\n         else\n         {\n            menuCut.Enabled = true;\n            menuCopy.Enabled = true;\n            menuDelete.Enabled = true;\n         }\n      }\n</code></pre><pre><code class=\"lang-cpp\" name=\"MenuItem.Popup#1\">private:\n   void PopupMyMenu( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      if ( textBox1-&gt;Enabled == false || textBox1-&gt;Focused == false || textBox1-&gt;SelectedText-&gt;Length == 0 )\n      {\n         menuCut-&gt;Enabled = false;\n         menuCopy-&gt;Enabled = false;\n         menuDelete-&gt;Enabled = false;\n      }\n      else\n      {\n         menuCut-&gt;Enabled = true;\n         menuCopy-&gt;Enabled = true;\n         menuDelete-&gt;Enabled = true;\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"MenuItem.Popup#1\">      Private Sub PopupMyMenu(ByVal sender As Object, ByVal e As System.EventArgs) Handles menuEdit.Popup\n         If textBox1.Enabled = False OrElse textBox1.Focused = False OrElse textBox1.SelectedText.Length = 0 Then\n            menuCut.Enabled = False\n            menuCopy.Enabled = False\n            menuDelete.Enabled = False\n         Else\n            menuCut.Enabled = True\n            menuCopy.Enabled = True\n            menuDelete.Enabled = True\n         End If\n      End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_OnSelect_System_EventArgs_\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_OnSelect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnSelect(EventArgs)</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Select\" data-linktype=\"relative-path\">Select</a> event.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void OnSelect (EventArgs e);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>e</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a> that contains the event data.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Raising an event invokes the event handler through a delegate. For more information, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Select\" data-linktype=\"relative-path\">Select</a> event of the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> class to assign help text to a <a class=\"xref\" href=\"system.windows.forms.statusbarpanel\" data-linktype=\"relative-path\">StatusBarPanel</a> of a <a class=\"xref\" href=\"system.windows.forms.statusbar\" data-linktype=\"relative-path\">StatusBar</a> control. This example requires that <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects named <code>menuOpen</code>, <code>menuSave</code>, and <code>menuExit</code> are added to a <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> control on a form. The example also requires that a <a class=\"xref\" href=\"system.windows.forms.statusbar\" data-linktype=\"relative-path\">StatusBar</a> control, named <code>statusBar1</code> has been added to the form. The <a class=\"xref\" href=\"system.windows.forms.statusbar\" data-linktype=\"relative-path\">StatusBar</a> control should contain a <a class=\"xref\" href=\"system.windows.forms.statusbarpanel\" data-linktype=\"relative-path\">StatusBarPanel</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"MenuItem.Select#1\">   Private Sub MenuSelected(ByVal sender As Object, ByVal e As System.EventArgs) _\n                        Handles menuOpen.Select, menuExit.Select, menuSave.Select\n      If sender Is menuOpen Then\n         StatusBar1.Panels(0).Text = &quot;Opens a file to edit&quot;\n      Else\n         If sender Is menuSave Then\n            StatusBar1.Panels(0).Text = &quot;Saves the current file&quot;\n         Else\n            If sender Is menuExit Then\n               StatusBar1.Panels(0).Text = &quot;Exits the application&quot;\n            Else\n               StatusBar1.Panels(0).Text = &quot;Ready&quot;\n            End If\n         End If\n      End If\n   End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"MenuItem.Select#1\">      private void MenuSelected(object sender, System.EventArgs e)\n      {\n         if (sender == menuOpen)\n            statusBar1.Panels[0].Text = &quot;Opens a file to edit&quot;;\n         else if(sender == menuSave)\n            statusBar1.Panels[0].Text = &quot;Saves the current file&quot;;\n         else if(sender == menuExit)\n            statusBar1.Panels[0].Text = &quot;Exits the application&quot;;\n         else\n            statusBar1.Panels[0].Text = &quot;Ready&quot;;\n      }\n</code></pre><pre><code class=\"lang-cpp\" name=\"MenuItem.Select#1\">private:\n   void MenuSelected( Object^ sender, System::EventArgs^ /*e*/ )\n   {\n      if ( sender == menuOpen )\n            statusBar1-&gt;Panels[ 0 ]-&gt;Text = &quot;Opens a file to edit&quot;;\n      else\n      if ( sender == menuSave )\n            statusBar1-&gt;Panels[ 0 ]-&gt;Text = &quot;Saves the current file&quot;;\n      else\n      if ( sender == menuExit )\n            statusBar1-&gt;Panels[ 0 ]-&gt;Text = &quot;Exits the application&quot;;\n      else\n            statusBar1-&gt;Panels[ 0 ]-&gt;Text = &quot;Ready&quot;;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_PerformClick\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_PerformClick_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PerformClick()</div>        \r\n          </div>\r\n    \r\n            <p>Generates a <a class=\"xref\" href=\"system.windows.forms.control#System_Windows_Forms_Control_Click\" data-linktype=\"relative-path\">Click</a> event for the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>, simulating a click by a user.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void PerformClick ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use this menu to activate a menu item through code without passing any event information. For example, if you want to activate a menu item based on an action that occurs in your application, you can call the PerformClick method for that <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In this example you programmatically click a menu item by using the <code>PerformClick</code> method. First, you create a main menu (<code>mainMenu1</code>) and add to it two menu items, <code>menuItem1</code> (<code>File</code>) and <code>menuItem2</code> (<code>Edit</code>). You also use the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Click\" data-linktype=\"relative-path\">Click</a> event to send data to the event handler when a menu item is clicked. Then you use the <code>PerformClick</code> method to click the <code>File</code> menu item. When you start the application, the <code>File</code> menu item is activated, and a message box that contains the text &quot;The File menu is clicked.&quot; appears on the screen. The example requires that you have created a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"PerformClick#1\">public:\n   void CreateMyMenu()\n   {\n      // Create a main menu object.\n      MainMenu^ mainMenu1 = gcnew MainMenu;\n\n      // Create empty menu item objects.\n      MenuItem^ menuItem1 = gcnew MenuItem;\n      MenuItem^ menuItem2 = gcnew MenuItem;\n\n      // Set the caption of the menu items.\n      menuItem1-&gt;Text = &quot;&amp;File&quot;;\n      menuItem2-&gt;Text = &quot;&amp;Edit&quot;;\n\n      // Add the menu items to the main menu.\n      mainMenu1-&gt;MenuItems-&gt;Add( menuItem1 );\n      mainMenu1-&gt;MenuItems-&gt;Add( menuItem2 );\n\n      // Add functionality to the menu items.\n      menuItem1-&gt;Click += gcnew System::EventHandler( this, &amp;Form1::menuItem1_Click );\n      menuItem2-&gt;Click += gcnew System::EventHandler( this, &amp;Form1::menuItem2_Click );\n\n      // Assign mainMenu1 to the form.\n      this-&gt;Menu = mainMenu1;\n\n      // Perform a click on the File menu item.\n      menuItem1-&gt;PerformClick();\n   }\n\nprivate:\n   void menuItem1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( &quot;You clicked the File menu.&quot;, &quot;The Event Information&quot; );\n   }\n\n   void menuItem2_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( &quot;You clicked the Edit menu.&quot;, &quot;The Event Information&quot; );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"PerformClick#1\">\t\tpublic void CreateMyMenu()\n\t\t{\n\t\t\t// Create a main menu object.\n\t\t\tMainMenu mainMenu1 = new MainMenu();\n\n\t\t\t// Create empty menu item objects.\n\t\t\tMenuItem menuItem1 = new MenuItem();\n\t\t\tMenuItem menuItem2 = new MenuItem();\n\n\t\t\t// Set the caption of the menu items.\n\t\t\tmenuItem1.Text = &quot;&amp;File&quot;;\n\t\t\tmenuItem2.Text = &quot;&amp;Edit&quot;;\n\n\t\t\t// Add the menu items to the main menu.\n\t\t\tmainMenu1.MenuItems.Add(menuItem1);\n\t\t\tmainMenu1.MenuItems.Add(menuItem2);\n\t\t\t\n\t\t\t// Add functionality to the menu items. \n\t\t\tmenuItem1.Click += new System.EventHandler(this.menuItem1_Click);\n\t\t\tmenuItem2.Click += new System.EventHandler(this.menuItem2_Click);\n\t\t\t\n\t\t\t// Assign mainMenu1 to the form.\n\t\t\tthis.Menu=mainMenu1;\n\n\t\t\t// Perform a click on the File menu item.\n\t\t\tmenuItem1.PerformClick();\n\t\t}\n\n\t\tprivate void menuItem1_Click(object sender, System.EventArgs e)\n\t\t{\t\n\t\t\tMessageBox.Show(&quot;You clicked the File menu.&quot;,&quot;The Event Information&quot;);\t\t\n\t\t}\n\n\t\tprivate void menuItem2_Click(object sender, System.EventArgs e)\n\t\t{\n\t\t\tMessageBox.Show(&quot;You clicked the Edit menu.&quot;,&quot;The Event Information&quot;);\t\t\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"PerformClick#1\">    Public Sub CreateMyMenu()\n        &#39; Create a main menu object.\n        Dim mainMenu1 As New MainMenu()\n\n        &#39; Create empty menu item objects.\n        Dim menuItem1 As New MenuItem()\n        Dim menuItem2 As New MenuItem()\n\n        &#39; Set the caption of the menu items.\n        menuItem1.Text = &quot;&amp;File&quot;\n        menuItem2.Text = &quot;&amp;Edit&quot;\n\n        &#39; Add the menu items to the main menu.\n        mainMenu1.MenuItems.Add(menuItem1)\n        mainMenu1.MenuItems.Add(menuItem2)\n\n        &#39; Add functionality to the menu items. \n        AddHandler menuItem1.Click, AddressOf Me.menuItem1_Click\n        AddHandler menuItem2.Click, AddressOf Me.menuItem2_Click\n\n        &#39; Assign mainMenu1 to the form.\n        Me.Menu = mainMenu1\n\n        &#39; Perform a click on the File menu item.\n        menuItem1.PerformClick()\n    End Sub &#39;CreateMyMenu\n\n\n    Private Sub menuItem1_Click(ByVal sender As Object, ByVal e As System.EventArgs)\n        MessageBox.Show(&quot;You clicked the File menu.&quot;, &quot;The Event Information&quot;)\n    End Sub &#39;menuItem1_Click\n\n\n    Private Sub menuItem2_Click(ByVal sender As Object, ByVal e As System.EventArgs)\n        MessageBox.Show(&quot;You clicked the Edit menu.&quot;, &quot;The Event Information&quot;)\n    End Sub &#39;menuItem2_Click\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_PerformSelect\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_PerformSelect_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PerformSelect()</div>        \r\n          </div>\r\n    \r\n            <p>Raises the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Select\" data-linktype=\"relative-path\">Select</a> event for this menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual void PerformSelect ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method allows you to raise the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Select\" data-linktype=\"relative-path\">Select</a> event without passing any event information to the event handler.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>In this example you programmatically select a menu item by using the <code>PerformSelect</code> method. First, you create a main menu (<code>mainMenu1</code>) and add to it two menu items, <code>menuItem1</code> (<code>File</code>) and <code>menuItem2</code> (<code>Edit</code>). You also use the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_Select\" data-linktype=\"relative-path\">Select</a> event to send data to the event handler when a menu item is selected. Then you use the <code>PerformSelect</code> method to select the <code>File</code> menu item. When you start the application, the <code>File</code> menu item is selected, and a message box that contains the text &quot;The File menu is selected.&quot; appears on the screen. The example requires that you have created a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"PerformSelect#1\">public:\n   void CreateMyMenu()\n   {\n      // Create a main menu objects.\n      MainMenu^ mainMenu1 = gcnew MainMenu;\n\n      // Create empty menu item objects.\n      MenuItem^ menuItem1 = gcnew MenuItem;\n      MenuItem^ menuItem2 = gcnew MenuItem;\n\n      // Set the caption of the menu items.\n      menuItem1-&gt;Text = &quot;&amp;File&quot;;\n      menuItem2-&gt;Text = &quot;&amp;Edit&quot;;\n\n      // Add the menu items to the main menu.\n      mainMenu1-&gt;MenuItems-&gt;Add( menuItem1 );\n      mainMenu1-&gt;MenuItems-&gt;Add( menuItem2 );\n\n      // Add functionality to the menu items.\n      menuItem1-&gt;Select += gcnew System::EventHandler( this, &amp;Form1::menuItem1_Select );\n      menuItem2-&gt;Select += gcnew System::EventHandler( this, &amp;Form1::menuItem2_Select );\n\n      // Assign mainMenu1 to the form.\n      this-&gt;Menu = mainMenu1;\n\n      // Select the File menu item.\n      menuItem1-&gt;PerformSelect();\n   }\n\nprivate:\n   void menuItem1_Select( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( &quot;You selected the File menu.&quot;, &quot;The Event Information&quot; );\n   }\n\n   void menuItem2_Select( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      MessageBox::Show( &quot;You selected the Edit menu.&quot;, &quot;The Event Information&quot; );\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"PerformSelect#1\">\t\tpublic void CreateMyMenu()\n\t\t{\n\t\t\t// Create a main menu object.\n\t\t\tMainMenu mainMenu1 = new MainMenu();\n\n\t\t\t// Create empty menu item objects.\n\t\t\tMenuItem menuItem1 = new MenuItem();\n\t\t\tMenuItem menuItem2 = new MenuItem();\n\n\t\t\t// Set the caption of the menu items.\n\t\t\tmenuItem1.Text = &quot;&amp;File&quot;;\n\t\t\tmenuItem2.Text = &quot;&amp;Edit&quot;;\n\n\t\t\t// Add the menu items to the main menu.\n\t\t\tmainMenu1.MenuItems.Add(menuItem1);\n\t\t\tmainMenu1.MenuItems.Add(menuItem2);\n\t\t\t\n\t\t\t// Add functionality to the menu items. \n\t\t\tmenuItem1.Select += new System.EventHandler(this.menuItem1_Select);\n\t\t\tmenuItem2.Select += new System.EventHandler(this.menuItem2_Select);\n\t\t\t\n\t\t\t// Assign mainMenu1 to the form.\n\t\t\tthis.Menu=mainMenu1;\n\n\t\t\t// Select the File menu item.\n\t\t\tmenuItem1.PerformSelect();\n\t\t}\n\n\t\tprivate void menuItem1_Select(object sender, System.EventArgs e)\n\t\t{\t\n\t\t\tMessageBox.Show(&quot;You selected the File menu.&quot;,&quot;The Event Information&quot;);\t\t\n\t\t}\n\n\t\tprivate void menuItem2_Select(object sender, System.EventArgs e)\n\t\t{\n\t\t\tMessageBox.Show(&quot;You selected the Edit menu.&quot;,&quot;The Event Information&quot;);\t\t\n\t\t}\n</code></pre><pre><code class=\"lang-vb\" name=\"PerformSelect#1\">    Public Sub CreateMyMenu()\n        &#39; Create a main menu object.\n        Dim mainMenu1 As New MainMenu()\n\n        &#39; Create empty menu item objects.\n        Dim menuItem1 As New MenuItem()\n        Dim menuItem2 As New MenuItem()\n\n        &#39; Set the caption of the menu items.\n        menuItem1.Text = &quot;&amp;File&quot;\n        menuItem2.Text = &quot;&amp;Edit&quot;\n\n        &#39; Add the menu items to the main menu.\n        mainMenu1.MenuItems.Add(menuItem1)\n        mainMenu1.MenuItems.Add(menuItem2)\n\n        &#39; Add functionality to the menu items. \n        AddHandler menuItem1.Select, AddressOf Me.menuItem1_Select\n        AddHandler menuItem2.Select, AddressOf Me.menuItem2_Select\n\n        &#39; Assign mainMenu1 to the form.\n        Me.Menu = mainMenu1\n\n        &#39; Select the File menu item.\n        menuItem1.PerformSelect()\n    End Sub &#39;CreateMyMenu\n\n\n    Private Sub menuItem1_Select(ByVal sender As Object, ByVal e As System.EventArgs)\n        MessageBox.Show(&quot;You selected the File menu.&quot;, &quot;The Event Information&quot;)\n    End Sub &#39;menuItem1_Select\n\n\n    Private Sub menuItem2_Select(ByVal sender As Object, ByVal e As System.EventArgs)\n        MessageBox.Show(&quot;You selected the Edit menu.&quot;, &quot;The Event Information&quot;)\n    End Sub &#39;menuItem2_Select\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_ToString\">\r\n    \r\n            <a id=\"System_Windows_Forms_MenuItem_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Returns a string that represents the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A string that represents the current <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>. The string includes the type and the <span class=\"xref\">stem.Windows.Forms.MenuItem.Text*</span> property of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_Click\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Click</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the menu item is clicked or selected using a shortcut key or access key defined for the menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Click;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Click event occurs when this <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> is clicked by the user. This event also occurs if the user selects the menu item using the keyboard and presses the Enter key. It can also occur if an access key or shortcut key is pressed that is associated with the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a>. For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_MenuItems_\" data-linktype=\"relative-path\">MenuItems</a> property for the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> contains any items, this event is not raised. This event is not raised for parent menu items.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Click event to perform tasks when a <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> is clicked. The example creates a <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> called <code>mainMenu1</code> and adds two <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects, <code>topMenuItem</code> (<code>File</code>) and <code>menuItem1</code> (<code>Open</code>). It then connects the <code>Click</code> event to the <code>menuItem1_Click</code> event handler. When the user clicks the <code>Open</code> menu item, an <a class=\"xref\" href=\"system.windows.forms.openfiledialog\" data-linktype=\"relative-path\">OpenFileDialog</a> is initialized and displayed. The example requires that you have created a <a class=\"xref\" href=\"system.windows.forms.form\" data-linktype=\"relative-path\">Form</a> named <code>Form1</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"MenuItemClick#1\">\t\tpublic void CreateMyMenu()\n\t\t{\n\t\t\t// Create a main menu object.\n\t\t\tMainMenu mainMenu1 = new MainMenu();\n\n\t\t\t// Create empty menu item objects.\n\t\t\tMenuItem topMenuItem = new MenuItem();\n\t\t\tMenuItem menuItem1 = new MenuItem();\n                  \n\t\t\t// Set the caption of the menu items.\n\t\t\ttopMenuItem.Text = &quot;&amp;File&quot;;\n\t\t\tmenuItem1.Text = &quot;&amp;Open&quot;;\n\n\t\t\t// Add the menu items to the main menu.\n         \t\ttopMenuItem.MenuItems.Add(menuItem1);\n\t\t\tmainMenu1.MenuItems.Add(topMenuItem);\n\t\t\t\t\t\t\n\t\t\t// Add functionality to the menu items using the Click event. \n\t\t\tmenuItem1.Click += new System.EventHandler(this.menuItem1_Click);\n\n\t\t\t// Assign mainMenu1 to the form.\n\t\t\tthis.Menu=mainMenu1;\n\t\t}\n\n\t\tprivate void menuItem1_Click(object sender, System.EventArgs e)\n\t\t{\t\n                   // Create a new OpenFileDialog and display it.\n\t\t   OpenFileDialog fd = new OpenFileDialog();\n         \t   fd.DefaultExt = &quot;*.*&quot;;\n\t\t   fd.ShowDialog();\n\t\t}\n</code></pre><pre><code class=\"lang-cpp\" name=\"MenuItemClick#1\">public:\n   void CreateMyMenu()\n   {\n      // Create a main menu object.\n      MainMenu^ mainMenu1 = gcnew MainMenu;\n\n      // Create empty menu item objects.\n      MenuItem^ topMenuItem = gcnew MenuItem;\n      MenuItem^ menuItem1 = gcnew MenuItem;\n\n      // Set the caption of the menu items.\n      topMenuItem-&gt;Text = &quot;&amp;File&quot;;\n      menuItem1-&gt;Text = &quot;&amp;Open&quot;;\n\n      // Add the menu items to the main menu.\n      topMenuItem-&gt;MenuItems-&gt;Add( menuItem1 );\n      mainMenu1-&gt;MenuItems-&gt;Add( topMenuItem );\n\n      // Add functionality to the menu items using the Click event. \n      menuItem1-&gt;Click += gcnew System::EventHandler( this, &amp;Form1::menuItem1_Click );\n\n      // Assign mainMenu1 to the form.\n      this-&gt;Menu = mainMenu1;\n   }\n\nprivate:\n   void menuItem1_Click( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      // Create a new OpenFileDialog and display it.\n      OpenFileDialog^ fd = gcnew OpenFileDialog;\n      fd-&gt;DefaultExt = &quot;*.&quot;;\n      fd-&gt;ShowDialog();\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"MenuItemClick#1\">    Public Sub CreateMyMenu()\n      &#39; Create a main menu object.\n      Dim mainMenu1 As New MainMenu()\n\n      &#39; Create empty menu item objects.\n      Dim topMenuItem As New MenuItem()\n      Dim menuItem1 As New MenuItem()\n\n      &#39; Set the caption of the menu items.\n      topMenuItem.Text = &quot;&amp;File&quot;\n      menuItem1.Text = &quot;&amp;Open&quot;\n\n      &#39; Add the menu items to the main menu.\n      topMenuItem.MenuItems.Add(menuItem1)\n      mainMenu1.MenuItems.Add(topMenuItem)\n\n      &#39; Add functionality to the menu items using the Click event. \n      AddHandler menuItem1.Click, AddressOf Me.menuItem1_Click\n      &#39; Assign mainMenu1 to the form.\n      Me.Menu = mainMenu1\n   End Sub\n\n\n   Private Sub menuItem1_Click(ByVal sender As Object, ByVal e As System.EventArgs)\n      &#39; Create a new OpenFileDialog and display it.\n      Dim fd As New OpenFileDialog()\n      fd.DefaultExt = &quot;*.*&quot;\n      fd.ShowDialog()\n   End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_DrawItem\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DrawItem</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.Windows.Forms.MenuItem.OwnerDraw*</span> property of a menu item is set to <code>true</code> and a request is made to draw the menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.DrawItemEventHandler DrawItem;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.windows.forms.drawitemeventargs\" data-linktype=\"relative-path\">DrawItemEventArgs</a> argument passed to a DrawItem event handler provides a <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object that enables you to perform drawing and other graphical operations on the surface of the menu item. You can use this event handler to create custom menus that meet the needs of your application. For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to handle the DrawItem event. This example draws a menu item using a <a class=\"xref\" href=\"system.drawing.brush\" data-linktype=\"relative-path\">Brush</a> and a <a class=\"xref\" href=\"system.drawing.font\" data-linktype=\"relative-path\">Font</a>, and then draws a <a class=\"xref\" href=\"system.drawing.rectangle\" data-linktype=\"relative-path\">Rectangle</a> around the menu item. The drawing is performed through the <a class=\"xref\" href=\"system.drawing.graphics\" data-linktype=\"relative-path\">Graphics</a> object, which is passed to the event handler in the <a class=\"xref\" href=\"system.windows.forms.drawitemeventargs\" data-linktype=\"relative-path\">DrawItemEventArgs</a> parameter. This example requires that you have initialized the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_OwnerDraw_\" data-linktype=\"relative-path\">OwnerDraw</a> property for the item to <code>true</code>. For the C# example, add the following code in the form&#39;s constructor, after <code>InitializeComponent</code>, to hook up the event:  </p>\n<p> <code>this.menuItem1.DrawItem += new DrawItemEventHandler(menuItem1_DrawItem);</code>  </p>\n<pre><code class=\"lang-cs\" name=\"OwnerDraw example#1\">\n// The DrawItem event handler.\nprivate void menuItem1_DrawItem(object sender, System.Windows.Forms.DrawItemEventArgs e)\n{\n\n\tstring myCaption = &quot;Owner Draw Item1&quot;;\n\n\t// Create a Brush and a Font with which to draw the item.\n\tBrush myBrush = System.Drawing.Brushes.AliceBlue;\n\tFont myFont = new Font(FontFamily.GenericSerif, 14, FontStyle.Underline, GraphicsUnit.Pixel);\n\tSizeF mySizeF = e.Graphics.MeasureString(myCaption, myFont);\n\n\t// Draw the item, and then draw a Rectangle around it.\n\te.Graphics.DrawString(myCaption, myFont, myBrush, e.Bounds.X, e.Bounds.Y);\n\te.Graphics.DrawRectangle(Pens.Black, new Rectangle(e.Bounds.X, e.Bounds.Y, Convert.ToInt32(mySizeF.Width), Convert.ToInt32(mySizeF.Height)));\n\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"OwnerDraw example#1\">   // The DrawItem event handler.\nprivate:\n   void menuItem1_DrawItem( Object^ /*sender*/, System::Windows::Forms::DrawItemEventArgs^ e )\n   {\n      String^ myCaption = &quot;Owner Draw Item1&quot;;\n\n      // Create a Brush and a Font with which to draw the item.\n      Brush^ myBrush = System::Drawing::Brushes::AliceBlue;\n      System::Drawing::Font^ myFont = gcnew System::Drawing::Font( FontFamily::GenericSerif,14,FontStyle::Underline,GraphicsUnit::Pixel );\n      SizeF mySizeF = e-&gt;Graphics-&gt;MeasureString( myCaption, myFont );\n\n      // Draw the item, and then draw a Rectangle around it.\n      e-&gt;Graphics-&gt;DrawString( myCaption, myFont, myBrush, (float)e-&gt;Bounds.X, (float)e-&gt;Bounds.Y );\n      e-&gt;Graphics-&gt;DrawRectangle( Pens::Black, Rectangle(e-&gt;Bounds.X,e-&gt;Bounds.Y,Convert::ToInt32( mySizeF.Width ),Convert::ToInt32( mySizeF.Height )) );\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"OwnerDraw example#1\">    &#39; The DrawItem event handler.\n    Private Sub MenuItem1_DrawItem(ByVal sender As Object, ByVal e As System.Windows.Forms.DrawItemEventArgs) Handles MenuItem1.DrawItem\n\n\n        Dim MyCaption As String = &quot;Owner Draw Item1&quot;\n\n        &#39; Create a Brush and a Font with which to draw the item.\n        Dim MyBrush As System.Drawing.Brush = System.Drawing.Brushes.AliceBlue\n        Dim MyFont As New Font(FontFamily.GenericSerif, 14, FontStyle.Underline, GraphicsUnit.Pixel)\n        Dim MySizeF As SizeF = e.Graphics.MeasureString(MyCaption, MyFont)\n\n        &#39; Draw the item, and then draw a Rectangle around it.\n        e.Graphics.DrawString(MyCaption, MyFont, MyBrush, e.Bounds.X, e.Bounds.Y)\n        e.Graphics.DrawRectangle(Drawing.Pens.Black, New Rectangle(e.Bounds.X, e.Bounds.Y, MySizeF.Width, MySizeF.Height))\n\n    End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_MeasureItem\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MeasureItem</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the menu needs to know the size of a menu item before drawing it.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In order for this event to be raised, you must have the <a class=\"xref\" href=\"system.windows.forms.menuitem#System_Windows_Forms_MenuItem_OwnerDraw_\" data-linktype=\"relative-path\">OwnerDraw</a> property of the menu item set to <code>true</code>. This event is raised before owner drawn menus are drawn to allow for the size of the menu item to be drawn to be specified. For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MeasureItem event. This report helps you to learn when the event occurs and can assist you in debugging.  </p>\n<p> To run the example code, paste it into a project that contains an instance of type <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> named <code>MenuItem1</code>. Then ensure that the event handler is associated with the MeasureItem event.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Windows.Forms.EventExamples#499\">private void MenuItem1_MeasureItem(Object sender, MeasureItemEventArgs e) {\n\nSystem.Text.StringBuilder messageBoxCS = new System.Text.StringBuilder();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;Index&quot;, e.Index );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemHeight&quot;, e.ItemHeight );\nmessageBoxCS.AppendLine();\nmessageBoxCS.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemWidth&quot;, e.ItemWidth );\nmessageBoxCS.AppendLine();\nMessageBox.Show(messageBoxCS.ToString(), &quot;MeasureItem Event&quot; );\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Windows.Forms.EventExamples#499\">Private Sub MenuItem1_MeasureItem(sender as Object, e as MeasureItemEventArgs) _ \n     Handles MenuItem1.MeasureItem\n\n    Dim messageBoxVB as New System.Text.StringBuilder()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Graphics&quot;, e.Graphics)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;Index&quot;, e.Index)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemHeight&quot;, e.ItemHeight)\n    messageBoxVB.AppendLine()\n    messageBoxVB.AppendFormat(&quot;{0} = {1}&quot;, &quot;ItemWidth&quot;, e.ItemWidth)\n    messageBoxVB.AppendLine()\n    MessageBox.Show(messageBoxVB.ToString(),&quot;MeasureItem Event&quot;)\n\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_Popup\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Popup</div>        \r\n          </div>\r\n    \r\n            <p>Occurs before a menu item&#39;s list of menu items is displayed.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Popup;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event only occurs when a menu item has submenu items to display. You can use this event handler to add, remove, enable, disable, check, or uncheck menu items based on the state of your application before they are displayed. For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Popup event to determine whether <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects that provide support for cut, copy, and delete operations are enabled before the menu they are displayed in is shown. The example determines if <code>textBox1</code>, a <a class=\"xref\" href=\"system.windows.forms.textbox\" data-linktype=\"relative-path\">TextBox</a> control on the form, is enabled, has input focus, and has text selected before enabling the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects. This example requires that three <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects are created named <code>menuCut</code>, <code>menuCopy</code>, and <code>menuDelete</code> have been created.  </p>\n<pre><code class=\"lang-cs\" name=\"MenuItem.Popup#1\">      private void PopupMyMenu(object sender, System.EventArgs e)\n      {\n         if (textBox1.Enabled == false || textBox1.Focused == false ||\n            textBox1.SelectedText.Length == 0)\n         {\n            menuCut.Enabled = false;\n            menuCopy.Enabled = false;\n            menuDelete.Enabled = false;\n         }\n         else\n         {\n            menuCut.Enabled = true;\n            menuCopy.Enabled = true;\n            menuDelete.Enabled = true;\n         }\n      }\n</code></pre><pre><code class=\"lang-cpp\" name=\"MenuItem.Popup#1\">private:\n   void PopupMyMenu( Object^ /*sender*/, System::EventArgs^ /*e*/ )\n   {\n      if ( textBox1-&gt;Enabled == false || textBox1-&gt;Focused == false || textBox1-&gt;SelectedText-&gt;Length == 0 )\n      {\n         menuCut-&gt;Enabled = false;\n         menuCopy-&gt;Enabled = false;\n         menuDelete-&gt;Enabled = false;\n      }\n      else\n      {\n         menuCut-&gt;Enabled = true;\n         menuCopy-&gt;Enabled = true;\n         menuDelete-&gt;Enabled = true;\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"MenuItem.Popup#1\">      Private Sub PopupMyMenu(ByVal sender As Object, ByVal e As System.EventArgs) Handles menuEdit.Popup\n         If textBox1.Enabled = False OrElse textBox1.Focused = False OrElse textBox1.SelectedText.Length = 0 Then\n            menuCut.Enabled = False\n            menuCopy.Enabled = False\n            menuDelete.Enabled = False\n         Else\n            menuCut.Enabled = True\n            menuCopy.Enabled = True\n            menuDelete.Enabled = True\n         End If\n      End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Forms_MenuItem_Select\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Select</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the user places the pointer over a menu item.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler Select;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This event is typically raised when the user places the mouse pointer over the menu item. The event can also be raised when the user highlights a menu item using the keyboard by scrolling to the menu item with the arrow keys. You can use this event to display a detailed help string pertaining to this menu item in an application&#39;s status bar. For more information about handling events, see <a href=\"../Topic/Handling%20and%20Raising%20Events.md\" data-linktype=\"relative-path\">Handling and Raising Events</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the <a class=\"xref\" href=\"system.windows.forms.menu#System_Windows_Forms_Menu_MenuItems_\" data-linktype=\"relative-path\">MenuItems</a> property for the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> contains any items, this event is not raised. This event is not raised for parent menu items.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates how to use the Select event of the <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> class to assign help text to a <a class=\"xref\" href=\"system.windows.forms.statusbarpanel\" data-linktype=\"relative-path\">StatusBarPanel</a> of a <a class=\"xref\" href=\"system.windows.forms.statusbar\" data-linktype=\"relative-path\">StatusBar</a> control. This example requires that <a class=\"xref\" href=\"system.windows.forms.menuitem\" data-linktype=\"relative-path\">MenuItem</a> objects named <code>menuOpen</code>, <code>menuSave</code>, and <code>menuExit</code> are added to a <a class=\"xref\" href=\"system.windows.forms.mainmenu\" data-linktype=\"relative-path\">MainMenu</a> control on a form. The example also requires that a <a class=\"xref\" href=\"system.windows.forms.statusbar\" data-linktype=\"relative-path\">StatusBar</a> control, named <code>statusBar1</code> has been added to the form. The <a class=\"xref\" href=\"system.windows.forms.statusbar\" data-linktype=\"relative-path\">StatusBar</a> control should contain a <a class=\"xref\" href=\"system.windows.forms.statusbarpanel\" data-linktype=\"relative-path\">StatusBarPanel</a>.  </p>\n<pre><code class=\"lang-vb\" name=\"MenuItem.Select#1\">   Private Sub MenuSelected(ByVal sender As Object, ByVal e As System.EventArgs) _\n                        Handles menuOpen.Select, menuExit.Select, menuSave.Select\n      If sender Is menuOpen Then\n         StatusBar1.Panels(0).Text = &quot;Opens a file to edit&quot;\n      Else\n         If sender Is menuSave Then\n            StatusBar1.Panels(0).Text = &quot;Saves the current file&quot;\n         Else\n            If sender Is menuExit Then\n               StatusBar1.Panels(0).Text = &quot;Exits the application&quot;\n            Else\n               StatusBar1.Panels(0).Text = &quot;Ready&quot;\n            End If\n         End If\n      End If\n   End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"MenuItem.Select#1\">      private void MenuSelected(object sender, System.EventArgs e)\n      {\n         if (sender == menuOpen)\n            statusBar1.Panels[0].Text = &quot;Opens a file to edit&quot;;\n         else if(sender == menuSave)\n            statusBar1.Panels[0].Text = &quot;Saves the current file&quot;;\n         else if(sender == menuExit)\n            statusBar1.Panels[0].Text = &quot;Exits the application&quot;;\n         else\n            statusBar1.Panels[0].Text = &quot;Ready&quot;;\n      }\n</code></pre><pre><code class=\"lang-cpp\" name=\"MenuItem.Select#1\">private:\n   void MenuSelected( Object^ sender, System::EventArgs^ /*e*/ )\n   {\n      if ( sender == menuOpen )\n            statusBar1-&gt;Panels[ 0 ]-&gt;Text = &quot;Opens a file to edit&quot;;\n      else\n      if ( sender == menuSave )\n            statusBar1-&gt;Panels[ 0 ]-&gt;Text = &quot;Saves the current file&quot;;\n      else\n      if ( sender == menuExit )\n            statusBar1-&gt;Panels[ 0 ]-&gt;Text = &quot;Exits the application&quot;;\n      else\n            statusBar1-&gt;Panels[ 0 ]-&gt;Text = &quot;Ready&quot;;\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.MenuItem.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.MenuItem.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.BarBreak\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.Break\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.Checked\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.Click\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.add_Click\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.remove_Click\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.CloneMenu\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.DefaultItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.Dispose\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.DrawItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.add_DrawItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.remove_DrawItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.Enabled\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.Index\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.IsParent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.MdiList\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.MeasureItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.add_MeasureItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.remove_MeasureItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.MenuID\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.MergeMenu\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.MergeOrder\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.MergeType\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.Mnemonic\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.OnClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.OnDrawItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.OnInitMenuPopup\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.OnMeasureItem\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.OnPopup\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.OnSelect\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.OwnerDraw\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.Parent\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.PerformClick\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.PerformSelect\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.Popup\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.add_Popup\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.remove_Popup\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.RadioCheck\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.Select\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.add_Select\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.remove_Select\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.Shortcut\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.ShowShortcut\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.Text\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.ToString\">\r\n<meta name=\"APIName\" content=\"System.Windows.Forms.MenuItem.Visible\">\r\n<meta name=\"APILocation\" content=\"System.Windows.Forms.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"3d0e693d-8eba-a528-1399-b9bf7106b61f\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an individual item that is displayed within a  or . Although  replaces and adds functionality to the MenuItem control of previous versions, MenuItem is retained for both backward compatibiâ€¦\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Forms/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Forms.MenuItem\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Forms.MenuItem.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Forms.MenuItem.yml","open_to_public_contributors":true,"api_name":["System.Windows.Forms.MenuItem","System.Windows.Forms.MenuItem..ctor","System.Windows.Forms.MenuItem.BarBreak","System.Windows.Forms.MenuItem.Break","System.Windows.Forms.MenuItem.Checked","System.Windows.Forms.MenuItem.Click","System.Windows.Forms.MenuItem.add_Click","System.Windows.Forms.MenuItem.remove_Click","System.Windows.Forms.MenuItem.CloneMenu","System.Windows.Forms.MenuItem.DefaultItem","System.Windows.Forms.MenuItem.Dispose","System.Windows.Forms.MenuItem.DrawItem","System.Windows.Forms.MenuItem.add_DrawItem","System.Windows.Forms.MenuItem.remove_DrawItem","System.Windows.Forms.MenuItem.Enabled","System.Windows.Forms.MenuItem.Index","System.Windows.Forms.MenuItem.IsParent","System.Windows.Forms.MenuItem.MdiList","System.Windows.Forms.MenuItem.MeasureItem","System.Windows.Forms.MenuItem.add_MeasureItem","System.Windows.Forms.MenuItem.remove_MeasureItem","System.Windows.Forms.MenuItem.MenuID","System.Windows.Forms.MenuItem.MergeMenu","System.Windows.Forms.MenuItem.MergeOrder","System.Windows.Forms.MenuItem.MergeType","System.Windows.Forms.MenuItem.Mnemonic","System.Windows.Forms.MenuItem.OnClick","System.Windows.Forms.MenuItem.OnDrawItem","System.Windows.Forms.MenuItem.OnInitMenuPopup","System.Windows.Forms.MenuItem.OnMeasureItem","System.Windows.Forms.MenuItem.OnPopup","System.Windows.Forms.MenuItem.OnSelect","System.Windows.Forms.MenuItem.OwnerDraw","System.Windows.Forms.MenuItem.Parent","System.Windows.Forms.MenuItem.PerformClick","System.Windows.Forms.MenuItem.PerformSelect","System.Windows.Forms.MenuItem.Popup","System.Windows.Forms.MenuItem.add_Popup","System.Windows.Forms.MenuItem.remove_Popup","System.Windows.Forms.MenuItem.RadioCheck","System.Windows.Forms.MenuItem.Select","System.Windows.Forms.MenuItem.add_Select","System.Windows.Forms.MenuItem.remove_Select","System.Windows.Forms.MenuItem.Shortcut","System.Windows.Forms.MenuItem.ShowShortcut","System.Windows.Forms.MenuItem.Text","System.Windows.Forms.MenuItem.ToString","System.Windows.Forms.MenuItem.Visible"],"api_location":["System.Windows.Forms.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Forms.MenuItem","System::Windows::Forms::MenuItem","System.Windows.Forms.MenuItem.#ctor","System::Windows::Forms::MenuItem::#ctor","System.Windows.Forms.MenuItem.BarBreak","System::Windows::Forms::MenuItem::BarBreak","System.Windows.Forms.MenuItem.Break","System::Windows::Forms::MenuItem::Break","System.Windows.Forms.MenuItem.Checked","System::Windows::Forms::MenuItem::Checked","System.Windows.Forms.MenuItem.Click","System::Windows::Forms::MenuItem::Click","System.Windows.Forms.MenuItem.CloneMenu","System::Windows::Forms::MenuItem::CloneMenu","System.Windows.Forms.MenuItem.DefaultItem","System::Windows::Forms::MenuItem::DefaultItem","System.Windows.Forms.MenuItem.Dispose","System::Windows::Forms::MenuItem::Dispose","System.Windows.Forms.MenuItem.DrawItem","System::Windows::Forms::MenuItem::DrawItem","System.Windows.Forms.MenuItem.Enabled","System::Windows::Forms::MenuItem::Enabled","System.Windows.Forms.MenuItem.Index","System::Windows::Forms::MenuItem::Index","System.Windows.Forms.MenuItem.IsParent","System::Windows::Forms::MenuItem::IsParent","System.Windows.Forms.MenuItem.MdiList","System::Windows::Forms::MenuItem::MdiList","System.Windows.Forms.MenuItem.MeasureItem","System::Windows::Forms::MenuItem::MeasureItem","System.Windows.Forms.MenuItem.MenuID","System::Windows::Forms::MenuItem::MenuID","System.Windows.Forms.MenuItem.MergeMenu","System::Windows::Forms::MenuItem::MergeMenu","System.Windows.Forms.MenuItem.MergeOrder","System::Windows::Forms::MenuItem::MergeOrder","System.Windows.Forms.MenuItem.MergeType","System::Windows::Forms::MenuItem::MergeType","System.Windows.Forms.MenuItem.Mnemonic","System::Windows::Forms::MenuItem::Mnemonic","System.Windows.Forms.MenuItem.OnClick","System::Windows::Forms::MenuItem::OnClick","System.Windows.Forms.MenuItem.OnDrawItem","System::Windows::Forms::MenuItem::OnDrawItem","System.Windows.Forms.MenuItem.OnInitMenuPopup","System::Windows::Forms::MenuItem::OnInitMenuPopup","System.Windows.Forms.MenuItem.OnMeasureItem","System::Windows::Forms::MenuItem::OnMeasureItem","System.Windows.Forms.MenuItem.OnPopup","System::Windows::Forms::MenuItem::OnPopup","System.Windows.Forms.MenuItem.OnSelect","System::Windows::Forms::MenuItem::OnSelect","System.Windows.Forms.MenuItem.OwnerDraw","System::Windows::Forms::MenuItem::OwnerDraw","System.Windows.Forms.MenuItem.Parent","System::Windows::Forms::MenuItem::Parent","System.Windows.Forms.MenuItem.PerformClick","System::Windows::Forms::MenuItem::PerformClick","System.Windows.Forms.MenuItem.PerformSelect","System::Windows::Forms::MenuItem::PerformSelect","System.Windows.Forms.MenuItem.Popup","System::Windows::Forms::MenuItem::Popup","System.Windows.Forms.MenuItem.RadioCheck","System::Windows::Forms::MenuItem::RadioCheck","System.Windows.Forms.MenuItem.Select","System::Windows::Forms::MenuItem::Select","System.Windows.Forms.MenuItem.Shortcut","System::Windows::Forms::MenuItem::Shortcut","System.Windows.Forms.MenuItem.ShowShortcut","System::Windows::Forms::MenuItem::ShowShortcut","System.Windows.Forms.MenuItem.Text","System::Windows::Forms::MenuItem::Text","System.Windows.Forms.MenuItem.ToString","System::Windows::Forms::MenuItem::ToString","System.Windows.Forms.MenuItem.Visible","System::Windows::Forms::MenuItem::Visible"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"3d0e693d-8eba-a528-1399-b9bf7106b61f","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Forms/MenuItem.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"MenuItem class | Microsoft Docs","_op_ogTitle":"MenuItem class","description":"Represents an individual item that is displayed within a  or . Although  replaces and adds functionality to the MenuItem control of previous versions, MenuItem is retained for both backward compatibiâ€¦","toc_asset_id":"_splitted/System.Windows.Forms/toc.json","toc_rel":"_splitted/System.Windows.Forms/toc.json","source_url":"","ms.assetid":"System.Windows.Forms.MenuItem","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.menuitem","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.forms.menuitem","fileRelativePath":"System.Windows.Forms.MenuItem.html"},"themesRelativePathToOutputRoot":"_themes/"}