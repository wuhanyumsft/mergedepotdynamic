{"content":"    \r\n    <h1 id=\"Microsoft_VisualBasic_ErrObject\">\r\n      <span class=\"lang-csharp\">ErrObject</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>The <code>ErrObject</code> module contains properties and procedures used to identify and handle run-time errors using the <code>Err</code> object.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class ErrObject</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ErrObject</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The <code>ErrObject</code> module supports the <code>Err</code> object. For more information, see <a class=\"xref\" href=\"microsoft.visualbasic.information#Microsoft_VisualBasic_Information_Err_\" data-linktype=\"relative-path\">Err</a>.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_ErrObject_Description\" data-linktype=\"self-bookmark\">Description</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns or sets a <code>String</code> expression containing a descriptive string associated with an error. Read/write.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_ErrObject_Erl\" data-linktype=\"self-bookmark\">Erl</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an integer indicating the line number of the last executed statement. Read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_ErrObject_HelpContext\" data-linktype=\"self-bookmark\">HelpContext</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns or sets an <code>Integer</code> containing the context ID for a topic in a Help file. Read/write.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_ErrObject_HelpFile\" data-linktype=\"self-bookmark\">HelpFile</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns or sets a <code>String</code> expression containing the fully qualified path to a Help file. Read/write.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_ErrObject_LastDllError\" data-linktype=\"self-bookmark\">LastDllError</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a system error code produced by a call to a dynamic-link library (DLL). Read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_ErrObject_Number\" data-linktype=\"self-bookmark\">Number</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns or sets a numeric value specifying an error. Read/write.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_ErrObject_Source\" data-linktype=\"self-bookmark\">Source</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns or sets a <code>String</code> expression specifying the name of the object or application that originally generated the error. Read/write.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_ErrObject_Clear\" data-linktype=\"self-bookmark\">Clear()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Clears all property settings of the <code>Err</code> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_ErrObject_GetException\" data-linktype=\"self-bookmark\">GetException()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the exception representing the error that occurred.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#Microsoft_VisualBasic_ErrObject_Raise_System_Int32_System_Object_System_Object_System_Object_System_Object_\" data-linktype=\"self-bookmark\">Raise(Int32,Object,Object,Object,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Generates a run-time error; can be used instead of the <code>Error</code> statement.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_ErrObject_Description\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_ErrObject_Description_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Description</div>        \r\n          </div>\r\n    \r\n            <p>Returns or sets a <code>String</code> expression containing a descriptive string associated with an error. Read/write.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Description { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns or sets a <code>String</code> expression containing a descriptive string associated with an error. Read/write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>Description</code> property setting consists of a short description of the error. Use this property to alert the user to an error that you cannot or do not want to handle. When generating a user-defined error, assign a short description of your error to the <code>Description</code> property. If the <code>Description</code> property is not filled in, and the value of the <a class=\"xref\" href=\"microsoft.visualbasic.errobject#Microsoft_VisualBasic_ErrObject_Number_\" data-linktype=\"relative-path\">Number</a> property corresponds to a Visual Basic run-time error, then the string returned by the <a class=\"xref\" href=\"microsoft.visualbasic.conversion#Microsoft_VisualBasic_Conversion_ErrorToString_\" data-linktype=\"relative-path\">ErrorToString</a> function is set in the <code>Description</code> property when the error is generated.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example assigns a user-defined message to the <code>Description</code> property of the <code>Err</code> object.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrErrorHandling#5\">    On Error Resume Next\n    Err.Raise(60000)\n    Err.Description = &quot;Your Widget needs a new Frob!&quot;\n    MsgBox(Err.Description)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_ErrObject_Erl\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_ErrObject_Erl_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Erl</div>        \r\n          </div>\r\n    \r\n            <p>Returns an integer indicating the line number of the last executed statement. Read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Erl { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns an integer indicating the line number of the last executed statement. Read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If Visual Basic encounters no line numbers, it returns 0.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>Erl</code> property to indicate the line number.  </p>\n<pre><code>10:     On Error Resume Next  \n20:     Err.Raise(60000)  \n&#39; Returns 20.  \n30:     MsgBox(Erl())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_ErrObject_HelpContext\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_ErrObject_HelpContext_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HelpContext</div>        \r\n          </div>\r\n    \r\n            <p>Returns or sets an <code>Integer</code> containing the context ID for a topic in a Help file. Read/write.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int HelpContext { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns or sets an <code>Integer</code> containing the context ID for a topic in a Help file. Read/write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>HelpContext</code> property is used to display context-sensitive Help for an application. If a Help file is specified in <code>HelpFile</code>, the <code>HelpContext</code> property is used to automatically display the Help file identified. If both the <code>HelpFile</code> and <code>HelpContext</code> properties are empty, the value of the <a class=\"xref\" href=\"microsoft.visualbasic.errobject#Microsoft_VisualBasic_ErrObject_Number_\" data-linktype=\"relative-path\">Number</a> property  is checked. If the value of the <code>Number</code> property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used. If the value of the <code>Number</code> property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You should write routines in your application to handle typical errors. When programming with an object, you can use the object&#39;s Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>HelpContext</code> property of the <code>Err</code> object to show the Visual Basic Help topic for the <code>Overflow</code> error.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrErrorHandling#7\">    Dim Msg As String\n    Err.Clear()\n    On Error Resume Next   &#39; Suppress errors for demonstration purposes.\n    Err.Raise(6)   &#39; Generate &quot;Overflow&quot; error.\n    If Err.Number &lt;&gt; 0 Then\n      Msg = &quot;Press F1 or HELP to see &quot; &amp; Err.HelpFile &amp; &quot; topic for&quot; &amp; \n      &quot; the following HelpContext: &quot; &amp; Err.HelpContext\n      MsgBox(Msg, , &quot;Error:&quot;)\n    End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_ErrObject_HelpFile\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_ErrObject_HelpFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HelpFile</div>        \r\n          </div>\r\n    \r\n            <p>Returns or sets a <code>String</code> expression containing the fully qualified path to a Help file. Read/write.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string HelpFile { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns or sets a <code>String</code> expression containing the fully qualified path to a Help file. Read/write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If a Help file is specified by the <code>HelpFile</code> property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box. If the <code>HelpContext</code> property contains a valid context ID for the specified file, that topic is automatically displayed. If no <code>HelpFile</code> is specified, the Visual Basic Help file is displayed.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You should write routines in your application to handle typical errors. When programming with an object, you can use the object&#39;s Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>HelpFile</code> property of the <code>Err</code> object to start the Help system. By default, the <code>HelpFile</code> property contains the name of the Visual Basic Help file.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrErrorHandling#7\">    Dim Msg As String\n    Err.Clear()\n    On Error Resume Next   &#39; Suppress errors for demonstration purposes.\n    Err.Raise(6)   &#39; Generate &quot;Overflow&quot; error.\n    If Err.Number &lt;&gt; 0 Then\n      Msg = &quot;Press F1 or HELP to see &quot; &amp; Err.HelpFile &amp; &quot; topic for&quot; &amp; \n      &quot; the following HelpContext: &quot; &amp; Err.HelpContext\n      MsgBox(Msg, , &quot;Error:&quot;)\n    End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_ErrObject_LastDllError\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_ErrObject_LastDllError_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LastDllError</div>        \r\n          </div>\r\n    \r\n            <p>Returns a system error code produced by a call to a dynamic-link library (DLL). Read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int LastDllError { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns a system error code produced by a call to a dynamic-link library (DLL). Read-only.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The LastDllError property applies only to DLL calls made from Visual Basic code. When such a call is made, the called function usually returns a code indicating success or failure, and the LastDllError property is filled. Check the documentation for the DLL&#39;s functions to determine the return values that indicate success or failure. Whenever the failure code is returned, the Visual Basic application should immediately check the LastDllError property. No exception is raised when the LastDllError property is set.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The LastDllError property is protected by <a class=\"xref\" href=\"system.security.permissions.securityaction\" data-linktype=\"relative-path\">SecurityAction</a>, which helps prevent it from being accessed from untrusted code. However, <a class=\"xref\" href=\"system.security.permissions.securityaction\" data-linktype=\"relative-path\">SecurityAction</a> requires only the immediate caller to have <a class=\"xref\" href=\"system.security.permissions.securitypermissionattribute#System_Security_Permissions_SecurityPermissionAttribute_UnmanagedCode_\" data-linktype=\"relative-path\">UnmanagedCode</a> permission. If your code can be called from partially trusted code, exposing the value of LastDllError without validation is a security risk.  </p>\n<p> For important limitations about how to use the <a class=\"xref\" href=\"system.security.permissions.securityaction\" data-linktype=\"relative-path\">SecurityAction</a> member, see <a href=\"http://msdn.microsoft.com/en-us/1ab877f2-70f4-4e0d-8116-943999dfe8f5\" data-linktype=\"external\">Demand vs. LinkDemand</a>. For more information about permissions, see <a class=\"xref\" href=\"system.security.permissions.securitypermission\" data-linktype=\"relative-path\">SecurityPermission</a> and <a href=\"http://msdn.microsoft.com/en-us/e5ae402f-6dda-4732-bbe8-77296630f675\" data-linktype=\"external\">Code Access Permissions</a>.  </p>\n</div>\n<p> Note   For smart devices this property always returns zero.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows how you can use the <code>LastDllError</code> property after calling a function in the Windows API. The <code>PrintWindowCoordinates</code> procedure takes a handle to a window and calls the <code>GetWindowRect</code> function. <code>GetWindowRect</code> fills the RECT data structure with the lengths of the sides of the rectangle that make up the window. If you pass an invalid handle, an error occurs, and the error number is available through the <code>LastDllError</code> property.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrErrorHandling#8\">  Declare Function GetWindowRect Lib &quot;user32&quot; (\n      ByVal hwnd As Integer, ByRef lpRect As RECT) As Integer\n</code></pre><pre><code class=\"lang-vb\" name=\"VbVbalrErrorHandling#9\">\n  Public Structure RECT\n      Public Left As Integer\n      Public Top As Integer\n      Public Right As Integer\n      Public Bottom As Integer\n  End Structure\n</code></pre><pre><code class=\"lang-vb\" name=\"VbVbalrErrorHandling#10\">\n  Const ERROR_INVALID_WINDOW_HANDLE As Long = 1400\n  Const ERROR_INVALID_WINDOW_HANDLE_DESCR As String = \n      &quot;Invalid window handle.&quot;\n</code></pre><pre><code class=\"lang-vb\" name=\"VbVbalrErrorHandling#11\">  Private Sub PrintWindowCoordinates(ByVal hwnd As Integer)\n  &#39; Prints left, right, top, and bottom positions\n  &#39; of a window in pixels.\n\n    Dim rectWindow As RECT\n\n    &#39; Pass in window handle and empty the data structure.\n    &#39; If function returns 0, an error occurred.\n    If GetWindowRect(hwnd, rectWindow) = 0 Then\n        &#39; Check LastDllError and display a dialog box if the error\n        &#39; occurred because an invalid handle was passed.\n        If Err.LastDllError = ERROR_INVALID_WINDOW_HANDLE Then\n            MsgBox(ERROR_INVALID_WINDOW_HANDLE_DESCR, Title:=&quot;Error!&quot;)\n        End If\n    Else\n        Debug.Print(rectWindow.Bottom)\n        Debug.Print(rectWindow.Left)\n        Debug.Print(rectWindow.Right)\n        Debug.Print(rectWindow.Top)\n    End If\n  End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_ErrObject_Number\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_ErrObject_Number_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Number</div>        \r\n          </div>\r\n    \r\n            <p>Returns or sets a numeric value specifying an error. Read/write.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Number { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>Returns or sets a numeric value specifying an error. Read/write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>Number</code> is greater than 65535.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>All of the <code>Raise</code> arguments except <code>Number</code> are optional. If you omit optional arguments, and the property settings of the <code>Err</code> object contain values that have not been cleared, those values serve as the values for your error.  </p>\n<p> Because the <code>Err</code> object gives richer information than when you generate errors with the <code>Error</code> statement, <code>Raise</code> is useful for generating errors when writing class modules. For example, with the <code>Raise</code> method, the source that generated the error can be specified in the <code>Source</code> property, online Help for the error can be referenced, and so on.  </p>\n<p> When returning a user-defined error from an object, set <code>Err.Number</code> by adding the number you selected as an error code to the <code>VbObjectError</code> constant. For example, you use the following code to return the number 1051 as an error code:  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrErrorHandling#13\">    Err.Raise(Number:=vbObjectError + 1051, Source:=&quot;SomeClass&quot;)\n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example illustrates a typical use of the <code>Number</code> property in an error-handling routine.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrErrorHandling#12\">    &#39; Typical use of Number property.\nSub test()\n  On Error GoTo out\n\n  Dim x, y As Integer\n  x = 1 / y   &#39; Create division by zero error.\n  Exit Sub\nout:\n  MsgBox(Err.Number)\n  MsgBox(Err.Description)\n  &#39; Check for division by zero error.\n  If Err.Number = 11 Then\n      y = y + 1\n  End If\n  Resume Next\nEnd Sub\n</code></pre><p> This example uses the <code>Err</code> object&#39;s <code>Raise</code> method to generate an original error within a function written in Visual Basic. The calling function can catch the error and report it to the user. Notice that procedure <code>CallingProcedure</code> contrasts the type of information that you can derive from an <code>Err</code> object with the information that you can derive from an <code>Exception</code> object.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrErrorHandling#14\">Module Module1\n\n    Const WidthErrorNumber As Integer = 1000\n    Const WidthHelpOffset As Object = 100\n\n    Sub Main()\n        CallingProcedure()\n    End Sub\n\n    Sub TestWidth(ByVal width As Integer)\n        If width &gt; 1000 Then\n            &#39; Replace HelpFile.hlp with the full path to an appropriate\n            &#39; help file for the error. Notice that you add the error \n            &#39; number you want to use to the vbObjectError constant. \n            &#39; This assures that it will not conflict with a Visual\n            &#39; Basic error.\n            Err.Raise(vbObjectError + WidthErrorNumber, &quot;ConsoleApplication1.Module1.TestWidth&quot;, \n                &quot;Width must be less than 1000.&quot;, &quot;HelpFile.hlp&quot;, WidthHelpOffset)\n        End If\n    End Sub\n\n    Sub CallingProcedure()\n        Try\n            &#39; The error is raised in TestWidth.\n            TestWidth(2000)\n        Catch ex As Exception\n            &#39; The Err object can access a number of pieces of\n            &#39; information about the error.\n            Console.WriteLine(&quot;Information available from Err object:&quot;)\n            Console.WriteLine(Err.Number)\n            Console.WriteLine(Err.Description)\n            Console.WriteLine(Err.Source)\n            Console.WriteLine(Err.HelpFile)\n            Console.WriteLine(Err.HelpContext)\n            Console.WriteLine(Err.GetException)\n\n            Console.WriteLine(vbCrLf &amp; &quot;Information available from Exception object:&quot;)\n            Console.WriteLine(ex.Message)\n            Console.WriteLine(ex.ToString)\n\n            Err.Clear()\n        End Try\n    End Sub\nEnd Module\n\n&#39; The example produces the following output:\n&#39; Information available from Err object:\n&#39; -2147220504\n&#39; Width must be less than 1000.\n&#39; ConsoleApplication1.Module1.TestWidth\n&#39; HelpFile.hlp\n&#39; 100\n&#39; System.Exception: Width must be less than 1000.\n&#39;    at Microsoft.VisualBasic.ErrObject.Raise(Int32 Number, Object Source, Object\n&#39; Description, Object HelpFile, Object HelpContext)\n&#39;    at ConsoleApplication1.Module1.TestWidth(Int32 width) in C:\\Users\\example\\App\n&#39; Data\\Local&nbsp;&nbsp;&nbsp;&nbsp;emporary Projects\\ConsoleApplication1\\Module1.vb:line 17\n&#39;    at ConsoleApplication1.Module1.CallingProcedure() in C:\\Users\\example\\AppData\n&#39; \\Local&nbsp;&nbsp;&nbsp;&nbsp;emporary Projects\\ConsoleApplication1\\Module1.vb:line 25\n&#39;\n&#39; Information available from Exception object:\n&#39; Width must be less than 1000.\n&#39; System.Exception: Width must be less than 1000.\n&#39;    at Microsoft.VisualBasic.ErrObject.Raise(Int32 Number, Object Source, Object\n&#39; Description, Object HelpFile, Object HelpContext)\n&#39;    at ConsoleApplication1.Module1.TestWidth(Int32 width) in C:\\Users\\example\\App\n&#39; Data\\Local&nbsp;&nbsp;&nbsp;&nbsp;emporary Projects\\ConsoleApplication1\\Module1.vb:line 17\n&#39;    at ConsoleApplication1.Module1.CallingProcedure() in C:\\Users\\example\\AppData\n&#39; \\Local&nbsp;&nbsp;&nbsp;&nbsp;emporary Projects\\ConsoleApplication1\\Module1.vb:line 25\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_ErrObject_Source\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_ErrObject_Source_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Source</div>        \r\n          </div>\r\n    \r\n            <p>Returns or sets a <code>String</code> expression specifying the name of the object or application that originally generated the error. Read/write.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Source { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns or sets a <code>String</code> expression specifying the name of the object or application that originally generated the error. Read/write.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>Source</code> property specifies a <code>String</code> expression representing the object that generated the error; the expression is usually the object&#39;s class name or process ID. Use the <code>Source</code> property to provide information when your code is unable to handle an error generated in an accessed object. For example, if you access Microsoft Excel and it generates a <code>Division by zero</code> error, Microsoft Excel sets <code>Err.Number</code> to its error code for that error and sets <code>Source</code> to &quot;Excel.Application&quot;.  </p>\n<p> When the application is generating an error from code, <code>Source</code> is your application&#39;s programmatic ID. Within a class, <code>Source</code> should contain a name having the form <em>project</em>.<em>class</em>. When an unexpected error occurs in your code, the <code>Source</code> property is automatically filled in. For errors in a module, <code>Source</code> contains the project name.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example demonstrates the use of the <code>Source</code> property in a typical error-handling routine. When an error is raised from <code>Class1</code>, the string <code>&quot;Class1&quot;</code> is assigned to the <code>Source</code> property of the <code>Err</code> object. This string is then displayed in an informative message indicating the source and number of the error.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrErrorHandling#15\">  Public Class Class1\n    Public Sub MySub()\n        On Error Resume Next\n        Err.Raise(60000, &quot;Class1&quot;)\n        MsgBox(Err.Source &amp; &quot; caused an error of type &quot; &amp; Err.Number)\n    End Sub\n  End Class\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_ErrObject_Clear\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_ErrObject_Clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clear()</div>        \r\n          </div>\r\n    \r\n            <p>Clears all property settings of the <code>Err</code> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Clear ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use <code>Clear</code> to explicitly clear the <code>Err</code> object after an error has been handled, such as when you use deferred error handling with <code>On Error Resume Next</code>. The <code>Clear</code> method is called automatically whenever any of the following statements executes:  </p>\n<ul>\n<li><p>Any type of <code>Resume</code> statement  </p>\n</li>\n<li><p><code>Exit Sub</code>, <code>Exit Function</code>, or <code>Exit Property</code>  </p>\n</li>\n<li><p>Any <code>On Error</code> statement  </p>\n</li>\n<li><p>Any <code>Try...Catch...Finally</code> statement  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <code>On Error Resume Next</code> construct may be preferable to <code>On Error GoTo</code> when handling errors generated during access to other objects. Checking <code>Err</code> after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in <code>Err.Number</code>, as well as which object originally generated the error (the object specified in <code>Err.Source</code>).</p>\n</div>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>Err</code> object&#39;s <code>Clear</code> method to reset the numeric properties of the <code>Err</code> object to zero and its string properties to zero-length strings. Without the call to <code>Clear</code>, the second call to <code>MsgBox</code> would display the same error message.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrErrorHandling#4\">  Sub ClearErr()\n    &#39; Produce overflow error\n    On Error Resume Next\n    Dim zero As Integer = 0\n    Dim result As Integer = 8 / zero\n    MsgBox(Err.Description)\n    Err.Clear()\n    MsgBox(Err.Description)\n  End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_ErrObject_GetException\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_ErrObject_GetException_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetException()</div>        \r\n          </div>\r\n    \r\n            <p>Returns the exception representing the error that occurred.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Exception GetException ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </div>\r\n                  <p>Returns the exception representing the error that occurred.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>GetException</code> function is available only from the <code>Err</code> object class. It works with the <code>Exception</code> property of the <code>Err</code> object to display the error that has occurred.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code displays the message assigned to the exception in the <code>Err</code> object:  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrCatRef#66\">        On Error Resume Next\n        Dim myError As System.Exception\n        &#39; Generate an overflow exception.\n        Err.Raise(6)\n        &#39; Assigns the exception from the Err object to myError.\n        myError = Err.GetException()\n        &#39; Displays the message associated with the exception.\n        MsgBox(myError.Message)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"Microsoft_VisualBasic_ErrObject_Raise_System_Int32_System_Object_System_Object_System_Object_System_Object_\">\r\n    \r\n            <a id=\"Microsoft_VisualBasic_ErrObject_Raise_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Raise(Int32,Object,Object,Object,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Generates a run-time error; can be used instead of the <code>Error</code> statement.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>Number</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Required. <code>Long</code> integer that identifies the nature of the error. Visual Basic errors are in the range 0â€“65535; the range 0â€“512 is reserved for system errors; the range 513â€“65535 is available for user-defined errors. When setting the <code>Number</code> property to your own error code in a class module, you add your error code number to the <code>vbObjectError</code> constant. For example, to generate the error number 513, assign <code>vbObjectError + 513</code> to the <code>Number</code> property.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Source</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. <code>String</code> expression naming the object or application that generated the error. When setting this property for an object, use the form <code>project</code>.<code>class</code>. If <code>Source</code> is not specified, the process ID of the current Visual Basic project is used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>Description</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. <code>String</code> expression describing the error. If unspecified, the value in the <code>Number</code> property is examined. If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <code>Error</code> function is used as the <code>Description</code> property. If there is no Visual Basic error corresponding to the <code>Number</code> property, the &quot;Application-defined or object-defined error&quot; message is used.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>HelpFile</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. The fully qualified path to the Help file in which help on this error can be found. If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>HelpContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Optional. The context ID identifying a topic within <code>HelpFile</code> that provides help for the error. If omitted, the Visual Basic Help-file context ID for the error corresponding to the <code>Number</code> property is used, if it exists.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>All of the <code>Raise</code> arguments except <code>Number</code> are optional. If you omit optional arguments, and the property settings of the <code>Err</code> object contain values that have not been cleared, those values serve as the values for your error.  </p>\n<p> Because the <code>Err</code> object gives richer information than when you generate errors with the <code>Error</code> statement, <code>Raise</code> is useful for generating errors when writing class modules. For example, with the <code>Raise</code> method, the source that generated the error can be specified in the <code>Source</code> property, online Help for the error can be referenced, and so on.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example uses the <code>Err</code> object&#39;s <code>Raise</code> method to generate an error within a function written in Visual Basic. The calling function can catch the error and report it to the user with a message box.  </p>\n<pre><code class=\"lang-vb\" name=\"VbVbalrErrorHandling#14\">Module Module1\n\n    Const WidthErrorNumber As Integer = 1000\n    Const WidthHelpOffset As Object = 100\n\n    Sub Main()\n        CallingProcedure()\n    End Sub\n\n    Sub TestWidth(ByVal width As Integer)\n        If width &gt; 1000 Then\n            &#39; Replace HelpFile.hlp with the full path to an appropriate\n            &#39; help file for the error. Notice that you add the error \n            &#39; number you want to use to the vbObjectError constant. \n            &#39; This assures that it will not conflict with a Visual\n            &#39; Basic error.\n            Err.Raise(vbObjectError + WidthErrorNumber, &quot;ConsoleApplication1.Module1.TestWidth&quot;, \n                &quot;Width must be less than 1000.&quot;, &quot;HelpFile.hlp&quot;, WidthHelpOffset)\n        End If\n    End Sub\n\n    Sub CallingProcedure()\n        Try\n            &#39; The error is raised in TestWidth.\n            TestWidth(2000)\n        Catch ex As Exception\n            &#39; The Err object can access a number of pieces of\n            &#39; information about the error.\n            Console.WriteLine(&quot;Information available from Err object:&quot;)\n            Console.WriteLine(Err.Number)\n            Console.WriteLine(Err.Description)\n            Console.WriteLine(Err.Source)\n            Console.WriteLine(Err.HelpFile)\n            Console.WriteLine(Err.HelpContext)\n            Console.WriteLine(Err.GetException)\n\n            Console.WriteLine(vbCrLf &amp; &quot;Information available from Exception object:&quot;)\n            Console.WriteLine(ex.Message)\n            Console.WriteLine(ex.ToString)\n\n            Err.Clear()\n        End Try\n    End Sub\nEnd Module\n\n&#39; The example produces the following output:\n&#39; Information available from Err object:\n&#39; -2147220504\n&#39; Width must be less than 1000.\n&#39; ConsoleApplication1.Module1.TestWidth\n&#39; HelpFile.hlp\n&#39; 100\n&#39; System.Exception: Width must be less than 1000.\n&#39;    at Microsoft.VisualBasic.ErrObject.Raise(Int32 Number, Object Source, Object\n&#39; Description, Object HelpFile, Object HelpContext)\n&#39;    at ConsoleApplication1.Module1.TestWidth(Int32 width) in C:\\Users\\example\\App\n&#39; Data\\Local&nbsp;&nbsp;&nbsp;&nbsp;emporary Projects\\ConsoleApplication1\\Module1.vb:line 17\n&#39;    at ConsoleApplication1.Module1.CallingProcedure() in C:\\Users\\example\\AppData\n&#39; \\Local&nbsp;&nbsp;&nbsp;&nbsp;emporary Projects\\ConsoleApplication1\\Module1.vb:line 25\n&#39;\n&#39; Information available from Exception object:\n&#39; Width must be less than 1000.\n&#39; System.Exception: Width must be less than 1000.\n&#39;    at Microsoft.VisualBasic.ErrObject.Raise(Int32 Number, Object Source, Object\n&#39; Description, Object HelpFile, Object HelpContext)\n&#39;    at ConsoleApplication1.Module1.TestWidth(Int32 width) in C:\\Users\\example\\App\n&#39; Data\\Local&nbsp;&nbsp;&nbsp;&nbsp;emporary Projects\\ConsoleApplication1\\Module1.vb:line 17\n&#39;    at ConsoleApplication1.Module1.CallingProcedure() in C:\\Users\\example\\AppData\n&#39; \\Local&nbsp;&nbsp;&nbsp;&nbsp;emporary Projects\\ConsoleApplication1\\Module1.vb:line 25\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.VisualBasic.ErrObject.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.VisualBasic.ErrObject.yml\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.ErrObject\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.ErrObject.Clear\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.ErrObject.Description\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.ErrObject.Erl\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.ErrObject.GetException\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.ErrObject.HelpContext\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.ErrObject.HelpFile\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.ErrObject.LastDllError\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.ErrObject.Number\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.ErrObject.Raise\">\r\n<meta name=\"APIName\" content=\"Microsoft.VisualBasic.ErrObject.Source\">\r\n<meta name=\"APILocation\" content=\"Microsoft.VisualBasic.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a0e5b97d-6871-ebe0-4e28-b8db844fe1b4\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\Microsoft.VisualBasic\\ErrObject.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The ErrObject module contains properties and procedures used to identify and handle run-time errors using the Err object.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/Microsoft.VisualBasic/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"Microsoft.VisualBasic.ErrObject\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/Microsoft.VisualBasic.ErrObject.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/Microsoft.VisualBasic.ErrObject.yml","open_to_public_contributors":true,"api_name":["Microsoft.VisualBasic.ErrObject","Microsoft.VisualBasic.ErrObject.Clear","Microsoft.VisualBasic.ErrObject.Description","Microsoft.VisualBasic.ErrObject.Erl","Microsoft.VisualBasic.ErrObject.GetException","Microsoft.VisualBasic.ErrObject.HelpContext","Microsoft.VisualBasic.ErrObject.HelpFile","Microsoft.VisualBasic.ErrObject.LastDllError","Microsoft.VisualBasic.ErrObject.Number","Microsoft.VisualBasic.ErrObject.Raise","Microsoft.VisualBasic.ErrObject.Source"],"api_location":["Microsoft.VisualBasic.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["Microsoft.VisualBasic.ErrObject","Microsoft::VisualBasic::ErrObject","Microsoft.VisualBasic.ErrObject.Clear","Microsoft::VisualBasic::ErrObject::Clear","Microsoft.VisualBasic.ErrObject.Description","Microsoft::VisualBasic::ErrObject::Description","Microsoft.VisualBasic.ErrObject.Erl","Microsoft::VisualBasic::ErrObject::Erl","Microsoft.VisualBasic.ErrObject.GetException","Microsoft::VisualBasic::ErrObject::GetException","Microsoft.VisualBasic.ErrObject.HelpContext","Microsoft::VisualBasic::ErrObject::HelpContext","Microsoft.VisualBasic.ErrObject.HelpFile","Microsoft::VisualBasic::ErrObject::HelpFile","Microsoft.VisualBasic.ErrObject.LastDllError","Microsoft::VisualBasic::ErrObject::LastDllError","Microsoft.VisualBasic.ErrObject.Number","Microsoft::VisualBasic::ErrObject::Number","Microsoft.VisualBasic.ErrObject.Raise","Microsoft::VisualBasic::ErrObject::Raise","Microsoft.VisualBasic.ErrObject.Source","Microsoft::VisualBasic::ErrObject::Source"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a0e5b97d-6871-ebe0-4e28-b8db844fe1b4","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\Microsoft.VisualBasic\\ErrObject.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/Microsoft.VisualBasic/ErrObject.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ErrObject class | Microsoft Docs","_op_ogTitle":"ErrObject class","description":"The ErrObject module contains properties and procedures used to identify and handle run-time errors using the Err object.\n","toc_asset_id":"_splitted/Microsoft.VisualBasic/toc.json","toc_rel":"_splitted/Microsoft.VisualBasic/toc.json","source_url":"","ms.assetid":"Microsoft.VisualBasic.ErrObject","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.visualbasic.errobject","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/microsoft.visualbasic.errobject","fileRelativePath":"Microsoft.VisualBasic.ErrObject.html"},"themesRelativePathToOutputRoot":"_themes/"}