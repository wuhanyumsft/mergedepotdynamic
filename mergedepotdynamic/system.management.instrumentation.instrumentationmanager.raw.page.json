{"content":"    \r\n    <h1 id=\"System_Management_Instrumentation_InstrumentationManager\">\r\n      <span class=\"lang-csharp\">InstrumentationManager</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides methods that manage the lifetime and the model used for decoupled providers.  </p>\n<p> Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries. The <a href=\"https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx\" data-linktype=\"external\">MI APIs</a> should be used for all new development.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static class InstrumentationManager</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">InstrumentationManager</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Decoupled providers are hosted by an application. Two methods can be used by the application to make instances of WMI classes available: publish/revoke or the callback method. The callback method uses the <a class=\"xref\" href=\"system.management.instrumentation.instrumentationmanager#System_Management_Instrumentation_InstrumentationManager_RegisterType_\" data-linktype=\"relative-path\">RegisterType</a> and <a class=\"xref\" href=\"system.management.instrumentation.instrumentationmanager#System_Management_Instrumentation_InstrumentationManager_UnregisterType_\" data-linktype=\"relative-path\">UnregisterType</a> methods.  </p>\n<p> In the publish/revoke model, the WMI infrastructure provides default behavior for many of the methods you have to write yourself in the callback method. These include the enumeration and bind methods. In this model, the application creates instances and publishes them. The application is responsible for ensuring that the key properties of the classes are respected. The application is also responsible for deleting instances.  </p>\n<p> In the callback model, the WMI infrastructure expects the application to have methods that handle enumeration, binding and any other methods required to implement the functionality of the provider. It calls into the application for this functionality and fails if it does not exist or is not implemented properly. The application registers the type of its WMI classes with the infrastructure by calling <a class=\"xref\" href=\"system.management.instrumentation.instrumentationmanager#System_Management_Instrumentation_InstrumentationManager_RegisterType_\" data-linktype=\"relative-path\">RegisterType</a> and indicates that it no longer wants the WMI classes exposed by calling <a class=\"xref\" href=\"system.management.instrumentation.instrumentationmanager#System_Management_Instrumentation_InstrumentationManager_UnregisterType_\" data-linktype=\"relative-path\">UnregisterType</a>.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_Instrumentation_InstrumentationManager_Publish_System_Object_\" data-linktype=\"self-bookmark\">Publish(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Makes an instance of a provider available within the WMI infrastructure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_Instrumentation_InstrumentationManager_RegisterAssembly_System_Reflection_Assembly_\" data-linktype=\"self-bookmark\">RegisterAssembly(Assembly)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers an assembly with the WMI infrastructure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_Instrumentation_InstrumentationManager_RegisterType_System_Type_\" data-linktype=\"self-bookmark\">RegisterType(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Registers a class with the WMI infrastructure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_Instrumentation_InstrumentationManager_Revoke_System_Object_\" data-linktype=\"self-bookmark\">Revoke(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Takes an instance of a currently available provider and makes it unavailable within the WMI infrastructure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_Instrumentation_InstrumentationManager_UnregisterAssembly_System_Reflection_Assembly_\" data-linktype=\"self-bookmark\">UnregisterAssembly(Assembly)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Unregisters an assembly currently registered with the WMI infrastructure.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Management_Instrumentation_InstrumentationManager_UnregisterType_System_Type_\" data-linktype=\"self-bookmark\">UnregisterType(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Unregisters a class registered with the WMI infrastructure.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Management_Instrumentation_InstrumentationManager_Publish_System_Object_\">\r\n    \r\n            <a id=\"System_Management_Instrumentation_InstrumentationManager_Publish_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Publish(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Makes an instance of a provider available within the WMI infrastructure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Publish (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_Instrumentation_InstrumentationManager_RegisterAssembly_System_Reflection_Assembly_\">\r\n    \r\n            <a id=\"System_Management_Instrumentation_InstrumentationManager_RegisterAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterAssembly(Assembly)</div>        \r\n          </div>\r\n    \r\n            <p>Registers an assembly with the WMI infrastructure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterAssembly (System.Reflection.Assembly managementAssembly);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>managementAssembly</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The assembly to register.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_Instrumentation_InstrumentationManager_RegisterType_System_Type_\">\r\n    \r\n            <a id=\"System_Management_Instrumentation_InstrumentationManager_RegisterType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RegisterType(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Registers a class with the WMI infrastructure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void RegisterType (Type managementType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>managementType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <pre><code>static int Main(string[] args)  \n{  \n   InstrumentationManager.RegisterType(typeof(MySampleProvider));  \n   return 0;  \n}  \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_Instrumentation_InstrumentationManager_Revoke_System_Object_\">\r\n    \r\n            <a id=\"System_Management_Instrumentation_InstrumentationManager_Revoke_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Revoke(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Takes an instance of a currently available provider and makes it unavailable within the WMI infrastructure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void Revoke (object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>To be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_Instrumentation_InstrumentationManager_UnregisterAssembly_System_Reflection_Assembly_\">\r\n    \r\n            <a id=\"System_Management_Instrumentation_InstrumentationManager_UnregisterAssembly_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnregisterAssembly(Assembly)</div>        \r\n          </div>\r\n    \r\n            <p>Unregisters an assembly currently registered with the WMI infrastructure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void UnregisterAssembly (System.Reflection.Assembly managementAssembly);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>managementAssembly</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.assembly\" data-linktype=\"relative-path\">Assembly</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The registered assembly to unregister.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Management_Instrumentation_InstrumentationManager_UnregisterType_System_Type_\">\r\n    \r\n            <a id=\"System_Management_Instrumentation_InstrumentationManager_UnregisterType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnregisterType(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Unregisters a class registered with the WMI infrastructure.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static void UnregisterType (Type managementType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>managementType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The registered type to unregister.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Management.Instrumentation.InstrumentationManager.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Management.Instrumentation.InstrumentationManager.yml\">\r\n<meta name=\"APIName\" content=\"System.Management.Instrumentation.InstrumentationManager\">\r\n<meta name=\"APIName\" content=\"System.Management.Instrumentation.InstrumentationManager.Publish\">\r\n<meta name=\"APIName\" content=\"System.Management.Instrumentation.InstrumentationManager.RegisterAssembly\">\r\n<meta name=\"APIName\" content=\"System.Management.Instrumentation.InstrumentationManager.RegisterType\">\r\n<meta name=\"APIName\" content=\"System.Management.Instrumentation.InstrumentationManager.Revoke\">\r\n<meta name=\"APIName\" content=\"System.Management.Instrumentation.InstrumentationManager.UnregisterAssembly\">\r\n<meta name=\"APIName\" content=\"System.Management.Instrumentation.InstrumentationManager.UnregisterType\">\r\n<meta name=\"APILocation\" content=\"System.Management.Instrumentation.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"b9c8d410-280d-58b7-9144-fc78b610317a\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides methods that manage the lifetime and the model used for decoupled providers.  \n Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or u…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Management.Instrumentation/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Management.Instrumentation.InstrumentationManager\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Management.Instrumentation.InstrumentationManager.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Management.Instrumentation.InstrumentationManager.yml","open_to_public_contributors":true,"api_name":["System.Management.Instrumentation.InstrumentationManager","System.Management.Instrumentation.InstrumentationManager.Publish","System.Management.Instrumentation.InstrumentationManager.RegisterAssembly","System.Management.Instrumentation.InstrumentationManager.RegisterType","System.Management.Instrumentation.InstrumentationManager.Revoke","System.Management.Instrumentation.InstrumentationManager.UnregisterAssembly","System.Management.Instrumentation.InstrumentationManager.UnregisterType"],"api_location":["System.Management.Instrumentation.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Management.Instrumentation.InstrumentationManager","System::Management::Instrumentation::InstrumentationManager","System.Management.Instrumentation.InstrumentationManager.Publish","System::Management::Instrumentation::InstrumentationManager::Publish","System.Management.Instrumentation.InstrumentationManager.RegisterAssembly","System::Management::Instrumentation::InstrumentationManager::RegisterAssembly","System.Management.Instrumentation.InstrumentationManager.RegisterType","System::Management::Instrumentation::InstrumentationManager::RegisterType","System.Management.Instrumentation.InstrumentationManager.Revoke","System::Management::Instrumentation::InstrumentationManager::Revoke","System.Management.Instrumentation.InstrumentationManager.UnregisterAssembly","System::Management::Instrumentation::InstrumentationManager::UnregisterAssembly","System.Management.Instrumentation.InstrumentationManager.UnregisterType","System::Management::Instrumentation::InstrumentationManager::UnregisterType"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"b9c8d410-280d-58b7-9144-fc78b610317a","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Management.Instrumentation/InstrumentationManager.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"InstrumentationManager class | Microsoft Docs","_op_ogTitle":"InstrumentationManager class","description":"Provides methods that manage the lifetime and the model used for decoupled providers.  \n Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or u…","toc_asset_id":"_splitted/System.Management.Instrumentation/toc.json","toc_rel":"_splitted/System.Management.Instrumentation/toc.json","source_url":"","ms.assetid":"System.Management.Instrumentation.InstrumentationManager","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.management.instrumentation.instrumentationmanager","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.management.instrumentation.instrumentationmanager","fileRelativePath":"System.Management.Instrumentation.InstrumentationManager.html"},"themesRelativePathToOutputRoot":"_themes/"}