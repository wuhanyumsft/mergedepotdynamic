{"content":"    \r\n    <h1 id=\"System_Security_Principal_WindowsPrincipal\">\r\n      <span class=\"lang-csharp\">WindowsPrincipal</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Enables code to check the Windows group membership of a Windows user.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class WindowsPrincipal : System.Security.Claims.ClaimsPrincipal</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal\" data-linktype=\"relative-path\">System.Security.Claims.ClaimsPrincipal</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">WindowsPrincipal</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_AddIdentities_System_Collections_Generic_IEnumerable_System_Security_Claims_ClaimsIdentity__\" data-linktype=\"relative-path\">AddIdentities(IEnumerable&lt;ClaimsIdentity&gt;)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_AddIdentity_System_Security_Claims_ClaimsIdentity_\" data-linktype=\"relative-path\">AddIdentity(ClaimsIdentity)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_Claims\" data-linktype=\"relative-path\">Claims</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_ClaimsPrincipalSelector\" data-linktype=\"relative-path\">ClaimsPrincipalSelector</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_Clone\" data-linktype=\"relative-path\">Clone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_CreateClaimsIdentity_System_IO_BinaryReader_\" data-linktype=\"relative-path\">CreateClaimsIdentity(BinaryReader)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_Current\" data-linktype=\"relative-path\">Current</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_CustomSerializationData\" data-linktype=\"relative-path\">CustomSerializationData</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_FindAll_System_Predicate_System_Security_Claims_Claim__\" data-linktype=\"relative-path\">FindAll(Predicate&lt;Claim&gt;)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_FindAll_System_String_\" data-linktype=\"relative-path\">FindAll(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_FindFirst_System_Predicate_System_Security_Claims_Claim__\" data-linktype=\"relative-path\">FindFirst(Predicate&lt;Claim&gt;)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_FindFirst_System_String_\" data-linktype=\"relative-path\">FindFirst(String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"relative-path\">GetObjectData(SerializationInfo,StreamingContext)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_HasClaim_System_Predicate_System_Security_Claims_Claim__\" data-linktype=\"relative-path\">HasClaim(Predicate&lt;Claim&gt;)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_HasClaim_System_String_System_String_\" data-linktype=\"relative-path\">HasClaim(String,String)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_Identities\" data-linktype=\"relative-path\">Identities</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_PrimaryIdentitySelector\" data-linktype=\"relative-path\">PrimaryIdentitySelector</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_WriteTo_System_IO_BinaryWriter_\" data-linktype=\"relative-path\">WriteTo(BinaryWriter)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.security.claims.claimsprincipal#System_Security_Claims_ClaimsPrincipal_WriteTo_System_IO_BinaryWriter_System_Byte___\" data-linktype=\"relative-path\">WriteTo(BinaryWriter,Byte[])</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The WindowsPrincipal class is primarily used to check the role of a Windows user. The <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> method overloads let you check the user role by using different role contexts.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsPrincipal__ctor_System_Security_Principal_WindowsIdentity_\" data-linktype=\"self-bookmark\">WindowsPrincipal(WindowsIdentity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsprincipal\" data-linktype=\"relative-path\">WindowsPrincipal</a> class by using the specified <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsPrincipal_DeviceClaims\" data-linktype=\"self-bookmark\">DeviceClaims</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets all Windows device claims from this principal.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsPrincipal_Identity\" data-linktype=\"self-bookmark\">Identity</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the identity of the current principal.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsPrincipal_UserClaims\" data-linktype=\"self-bookmark\">UserClaims</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets all Windows user claims from this principal.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsPrincipal_IsInRole_System_Int32_\" data-linktype=\"self-bookmark\">IsInRole(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current principal belongs to the Windows user group with the specified relative identifier (RID).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsPrincipal_IsInRole_System_Security_Principal_SecurityIdentifier_\" data-linktype=\"self-bookmark\">IsInRole(SecurityIdentifier)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current principal belongs to the Windows user group with the specified security identifier (SID).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsPrincipal_IsInRole_System_Security_Principal_WindowsBuiltInRole_\" data-linktype=\"self-bookmark\">IsInRole(WindowsBuiltInRole)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current principal belongs to the Windows user group with the specified <a class=\"xref\" href=\"system.security.principal.windowsbuiltinrole\" data-linktype=\"relative-path\">WindowsBuiltInRole</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Principal_WindowsPrincipal_IsInRole_System_String_\" data-linktype=\"self-bookmark\">IsInRole(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current principal belongs to the Windows user group with the specified name.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsPrincipal__ctor_System_Security_Principal_WindowsIdentity_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsPrincipal__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WindowsPrincipal(WindowsIdentity)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.security.principal.windowsprincipal\" data-linktype=\"relative-path\">WindowsPrincipal</a> class by using the specified <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public WindowsPrincipal (System.Security.Principal.WindowsIdentity ntIdentity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>ntIdentity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object from which to construct the new instance of <a class=\"xref\" href=\"system.security.principal.windowsprincipal\" data-linktype=\"relative-path\">WindowsPrincipal</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>ntIdentity</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new <a class=\"xref\" href=\"system.security.principal.windowsprincipal\" data-linktype=\"relative-path\">WindowsPrincipal</a> object from the current <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WindowsPrincipal.WindowsPrincipal Example#1\">      WindowsIdentity^ wi = WindowsIdentity::GetCurrent();\n      WindowsPrincipal^ wp = gcnew WindowsPrincipal( wi );\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WindowsPrincipal.WindowsPrincipal Example#1\">\n WindowsIdentity wi = WindowsIdentity.GetCurrent();\n WindowsPrincipal wp = new WindowsPrincipal(wi);\n \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WindowsPrincipal.WindowsPrincipal Example#1\">\n Dim wi As WindowsIdentity = WindowsIdentity.GetCurrent()\n Dim wp As New WindowsPrincipal(wi)        \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsPrincipal_DeviceClaims\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsPrincipal_DeviceClaims_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DeviceClaims</div>        \r\n          </div>\r\n    \r\n            <p>Gets all Windows device claims from this principal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; DeviceClaims { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.security.claims.claim\" data-linktype=\"relative-path\">Claim</a>&gt;</div>\r\n                  </div>\r\n                  <p>A collection of all Windows device claims from this principal.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsPrincipal_Identity\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsPrincipal_Identity_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Identity</div>        \r\n          </div>\r\n    \r\n            <p>Gets the identity of the current principal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Security.Principal.IIdentity Identity { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.iidentity\" data-linktype=\"relative-path\">IIdentity</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.security.principal.windowsidentity\" data-linktype=\"relative-path\">WindowsIdentity</a> object of the current principal.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example retrieves the name of the user by using the Identity property of the <a class=\"xref\" href=\"system.security.principal.windowsprincipal\" data-linktype=\"relative-path\">WindowsPrincipal</a> object.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic WindowsPrincipal.Identity Example#1\">      WindowsPrincipal^ wp = gcnew WindowsPrincipal( WindowsIdentity::GetCurrent() );\n      String^ username = wp-&gt;Identity-&gt;Name;\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic WindowsPrincipal.Identity Example#1\"> Dim wp As New WindowsPrincipal(WindowsIdentity.GetCurrent())\n Dim username As String = wp.Identity.Name\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic WindowsPrincipal.Identity Example#1\"> WindowsPrincipal wp = new WindowsPrincipal(WindowsIdentity.GetCurrent());\n String username = wp.Identity.Name;\n \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsPrincipal_UserClaims\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsPrincipal_UserClaims_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserClaims</div>        \r\n          </div>\r\n    \r\n            <p>Gets all Windows user claims from this principal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; UserClaims { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable</a>&lt;<a class=\"xref\" href=\"system.security.claims.claim\" data-linktype=\"relative-path\">Claim</a>&gt;</div>\r\n                  </div>\r\n                  <p>A collection of all Windows user claims from this principal.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsPrincipal_IsInRole_System_Int32_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsPrincipal_IsInRole_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsInRole(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current principal belongs to the Windows user group with the specified relative identifier (RID).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool IsInRole (int rid);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The RID of the Windows user group in which to check for the principal’s membership status.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current principal is a member of the specified Windows user group, that is, in a particular role; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain. Not doing so can cause the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> test to return <code>false</code>. This method is not supported on Windows 98 or Windows Millennium Edition.  </p>\n<p> For performance reasons, the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_System_Security_Principal_SecurityIdentifier_\" data-linktype=\"relative-path\">IsInRole(SecurityIdentifier)</a> overload is recommended as the preferable overload for determining the user&#39;s role.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box. The code that executes the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> method does not display the Consent dialog box. The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group. You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.  </p>\n</div>\n<p> Relative identifiers (RIDs) are components of a Windows user group&#39;s security identifier (SID) and are supported to help prevent cross-platform localization issues. Many user accounts, local groups, and global groups have a default RID value that is constant across all versions of Windows.  </p>\n<p> For example, the RID for the BUILTIN\\Administrators role is 0x220. Using 0x220 as the input parameter for the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> method results in <code>true</code> being returned if the current principal is an administrator.  </p>\n<p> The following tables list the default RID values.  </p>\n<table>\n<thead>\n<tr>\n<th>Built-in users</th>\n<th>RID</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DOMAINNAME\\Administrator</td>\n<td>0x1F4</td>\n</tr>\n<tr>\n<td>DOMAINNAME\\Guest</td>\n<td>0x1F5</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>Built-in global groups</th>\n<th>RID</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DOMAINNAME\\Domain Admins</td>\n<td>0x200</td>\n</tr>\n<tr>\n<td>DOMAINNAME\\Domain Users</td>\n<td>0x201</td>\n</tr>\n<tr>\n<td>DOMAINNAME\\Domain Guests</td>\n<td>0x202</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th>Built-in local groups</th>\n<th>RID</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>BUILTIN\\Administrators</td>\n<td>0x220</td>\n</tr>\n<tr>\n<td>BUILTIN\\Users</td>\n<td>0x221</td>\n</tr>\n<tr>\n<td>BUILTIN\\Guests</td>\n<td>0x222</td>\n</tr>\n<tr>\n<td>BUILTIN\\Account Operators</td>\n<td>0x224</td>\n</tr>\n<tr>\n<td>BUILTIN\\Server Operators</td>\n<td>0x225</td>\n</tr>\n<tr>\n<td>BUILTIN\\Print Operators</td>\n<td>0x226</td>\n</tr>\n<tr>\n<td>BUILTIN\\Backup Operators</td>\n<td>0x227</td>\n</tr>\n<tr>\n<td>BUILTIN\\Replicator</td>\n<td>0x228</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of  the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> methods. The <a class=\"xref\" href=\"system.security.principal.windowsbuiltinrole\" data-linktype=\"relative-path\">WindowsBuiltInRole</a> enumeration is used as the source for the RIDs that identify the built-in roles. The RIDs are used to determine the roles of the current principal.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsBuiltInRole Example#1\">using System;\nusing System.Threading;\nusing System.Security.Permissions;\nusing System.Security.Principal;\n\nclass SecurityPrincipalDemo\n{\n    public static void DemonstrateWindowsBuiltInRoleEnum()\n    {\n        AppDomain myDomain = Thread.GetDomain();\n\n        myDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal);\n        WindowsPrincipal myPrincipal = (WindowsPrincipal)Thread.CurrentPrincipal;\n        Console.WriteLine(&quot;{0} belongs to: &quot;, myPrincipal.Identity.Name.ToString());\n        Array wbirFields = Enum.GetValues(typeof(WindowsBuiltInRole));\n        foreach (object roleName in wbirFields)\n        {\n            try\n            {\n                // Cast the role name to a RID represented by the WindowsBuildInRole value.\n                Console.WriteLine(&quot;{0}? {1}.&quot;, roleName,\n                    myPrincipal.IsInRole((WindowsBuiltInRole)roleName));\n                Console.WriteLine(&quot;The RID for this role is: &quot; + ((int)roleName).ToString());\n\n            }\n            catch (Exception)\n            {\n                Console.WriteLine(&quot;{0}: Could not obtain role for this RID.&quot;,\n                    roleName);\n            }\n        }\n        // Get the role using the string value of the role.\n        Console.WriteLine(&quot;{0}? {1}.&quot;, &quot;Administrators&quot;,\n            myPrincipal.IsInRole(&quot;BUILTIN\\\\&quot; + &quot;Administrators&quot;));\n        Console.WriteLine(&quot;{0}? {1}.&quot;, &quot;Users&quot;,\n            myPrincipal.IsInRole(&quot;BUILTIN\\\\&quot; + &quot;Users&quot;));\n        // Get the role using the WindowsBuiltInRole enumeration value.\n        Console.WriteLine(&quot;{0}? {1}.&quot;, WindowsBuiltInRole.Administrator,\n           myPrincipal.IsInRole(WindowsBuiltInRole.Administrator));\n        // Get the role using the WellKnownSidType.\n        SecurityIdentifier sid = new SecurityIdentifier(WellKnownSidType.BuiltinAdministratorsSid, null);\n        Console.WriteLine(&quot;WellKnownSidType BuiltinAdministratorsSid  {0}? {1}.&quot;, sid.Value, myPrincipal.IsInRole(sid));\n    }\n\n    public static void Main()\n    {\n        DemonstrateWindowsBuiltInRoleEnum();\n    }\n}\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.Security.Principal.WindowsBuiltInRole Example#1\">public:\n   static void DemonstrateWindowsBuiltInRoleEnum()\n   {\n      AppDomain^ myDomain = Thread::GetDomain();\n\n      myDomain-&gt;SetPrincipalPolicy( PrincipalPolicy::WindowsPrincipal );\n      WindowsPrincipal^ myPrincipal = dynamic_cast&lt;WindowsPrincipal^&gt;(Thread::CurrentPrincipal);\n\n      Console::WriteLine( &quot;{0} belongs to: &quot;, myPrincipal-&gt;Identity-&gt;Name );\n\n      Array^ wbirFields = Enum::GetValues( WindowsBuiltInRole::typeid );\n\n      for each ( Object^ roleName in wbirFields )\n      {\n         try\n         {\n            Console::WriteLine( &quot;{0}? {1}.&quot;, roleName,\n               myPrincipal-&gt;IsInRole(  *dynamic_cast&lt;WindowsBuiltInRole^&gt;(roleName) ) );\n         }\n         catch ( Exception^ ) \n         {\n            Console::WriteLine( &quot;{0}: Could not obtain role for this RID.&quot;,\n               roleName );\n         }\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsBuiltInRole Example#1\">Imports System\nImports System.Threading\nImports System.Security.Permissions\nImports System.Security.Principal\n\nClass SecurityPrincipalDemo\n\n    Public Shared Sub DemonstrateWindowsBuiltInRoleEnum()\n        Dim myDomain As AppDomain = Thread.GetDomain()\n\n        myDomain.SetPrincipalPolicy(PrincipalPolicy.WindowsPrincipal)\n        Dim myPrincipal As WindowsPrincipal = CType(Thread.CurrentPrincipal, WindowsPrincipal)\n        Console.WriteLine(&quot;{0} belongs to: &quot;, myPrincipal.Identity.Name.ToString())\n        Dim wbirFields As Array = [Enum].GetValues(GetType(WindowsBuiltInRole))\n        Dim roleName As Object\n        For Each roleName In wbirFields\n            Try\n                &#39; Cast the role name to a RID represented by the WindowsBuildInRole value.\n                Console.WriteLine(&quot;{0}? {1}.&quot;, roleName, myPrincipal.IsInRole(CType(roleName, WindowsBuiltInRole)))\n                Console.WriteLine(&quot;The RID for this role is: &quot; + Fix(roleName).ToString())\n\n            Catch\n                Console.WriteLine(&quot;{0}: Could not obtain role for this RID.&quot;, roleName)\n            End Try\n        Next roleName\n        &#39; Get the role using the string value of the role.\n        Console.WriteLine(&quot;{0}? {1}.&quot;, &quot;Administrators&quot;, myPrincipal.IsInRole(&quot;BUILTIN\\&quot; + &quot;Administrators&quot;))\n        Console.WriteLine(&quot;{0}? {1}.&quot;, &quot;Users&quot;, myPrincipal.IsInRole(&quot;BUILTIN\\&quot; + &quot;Users&quot;))\n        &#39; Get the role using the WindowsBuiltInRole enumeration value.\n        Console.WriteLine(&quot;{0}? {1}.&quot;, WindowsBuiltInRole.Administrator, myPrincipal.IsInRole(WindowsBuiltInRole.Administrator))\n        &#39; Get the role using the WellKnownSidType.\n        Dim sid As New SecurityIdentifier(WellKnownSidType.BuiltinAdministratorsSid, Nothing)\n        Console.WriteLine(&quot;WellKnownSidType BuiltinAdministratorsSid  {0}? {1}.&quot;, sid.Value, myPrincipal.IsInRole(sid))\n\n    End Sub &#39;DemonstrateWindowsBuiltInRoleEnum\n\n    Public Shared Sub Main()\n        DemonstrateWindowsBuiltInRoleEnum()\n\n    End Sub &#39;Main\nEnd Class &#39;SecurityPrincipalDemo \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsPrincipal_IsInRole_System_Security_Principal_SecurityIdentifier_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsPrincipal_IsInRole_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsInRole(SecurityIdentifier)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current principal belongs to the Windows user group with the specified security identifier (SID).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool IsInRole (System.Security.Principal.SecurityIdentifier sid);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>sid</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a> that uniquely identifies a Windows user group.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current principal is a member of the specified Windows user group; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>sid</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.securityexception\" data-linktype=\"relative-path\">SecurityException</a></div>\r\n                  </div>\r\n                  <p>Windows returned a Win32 error.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.security.principal.securityidentifier\" data-linktype=\"relative-path\">SecurityIdentifier</a> uniquely identifies a user or group on Windows 2000, Windows Server, and Windows XP implementations. When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain. Not doing so can cause the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> test to return <code>false</code>. This method is not supported on Windows 98 or Windows Millennium Edition.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box. The code that executes the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> method does not display the Consent dialog box. The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group. You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.  </p>\n</div>\n<p> For performance reasons, this is the preferable overload to determine a user&#39;s role.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the IsInRole method. The <a class=\"xref\" href=\"system.security.principal.wellknownsidtype\" data-linktype=\"relative-path\">WellKnownSidType</a> enumeration value is used to determine whether the current principal is an administrator. For the full code example, see the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_System_Int32_\" data-linktype=\"relative-path\">System.Security.Principal.WindowsPrincipal.IsInRole(Int32)</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsBuiltInRole Example#5\">        // Get the role using the WellKnownSidType.\n        SecurityIdentifier sid = new SecurityIdentifier(WellKnownSidType.BuiltinAdministratorsSid, null);\n        Console.WriteLine(&quot;WellKnownSidType BuiltinAdministratorsSid  {0}? {1}.&quot;, sid.Value, myPrincipal.IsInRole(sid));\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsBuiltInRole Example#5\">        &#39; Get the role using the WellKnownSidType.\n        Dim sid As New SecurityIdentifier(WellKnownSidType.BuiltinAdministratorsSid, Nothing)\n        Console.WriteLine(&quot;WellKnownSidType BuiltinAdministratorsSid  {0}? {1}.&quot;, sid.Value, myPrincipal.IsInRole(sid))\n\n    End Sub &#39;DemonstrateWindowsBuiltInRoleEnum\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsPrincipal_IsInRole_System_Security_Principal_WindowsBuiltInRole_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsPrincipal_IsInRole_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsInRole(WindowsBuiltInRole)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current principal belongs to the Windows user group with the specified <a class=\"xref\" href=\"system.security.principal.windowsbuiltinrole\" data-linktype=\"relative-path\">WindowsBuiltInRole</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual bool IsInRole (System.Security.Principal.WindowsBuiltInRole role);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>role</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.principal.windowsbuiltinrole\" data-linktype=\"relative-path\">WindowsBuiltInRole</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.security.principal.windowsbuiltinrole\" data-linktype=\"relative-path\">WindowsBuiltInRole</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current principal is a member of the specified Windows user group; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>role</code> is not a valid <a class=\"xref\" href=\"system.security.principal.windowsbuiltinrole\" data-linktype=\"relative-path\">WindowsBuiltInRole</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain. Not doing so can cause the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> test to return <code>false</code>. This method is not supported on Windows 98 or Windows Millennium Edition.  </p>\n<p> For performance reasons, the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_System_Security_Principal_SecurityIdentifier_\" data-linktype=\"relative-path\">IsInRole(SecurityIdentifier)</a> overload is recommended as the preferable overload for determining the user&#39;s role.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box. The code that executes the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> method does not display the Consent dialog box. The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group. You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example uses the <a class=\"xref\" href=\"system.security.principal.windowsbuiltinrole\" data-linktype=\"relative-path\">WindowsBuiltInRole</a> enumeration is used to determine whether the current principal is an <a class=\"xref\" href=\"system.security.principal.windowsbuiltinrole\" data-linktype=\"relative-path\">WindowsBuiltInRole</a>. For the full code example, see the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_System_Int32_\" data-linktype=\"relative-path\">System.Security.Principal.WindowsPrincipal.IsInRole(Int32)</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsBuiltInRole Example#4\">        // Get the role using the WindowsBuiltInRole enumeration value.\n        Console.WriteLine(&quot;{0}? {1}.&quot;, WindowsBuiltInRole.Administrator,\n           myPrincipal.IsInRole(WindowsBuiltInRole.Administrator));\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsBuiltInRole Example#4\">        &#39; Get the role using the WindowsBuiltInRole enumeration value.\n        Console.WriteLine(&quot;{0}? {1}.&quot;, WindowsBuiltInRole.Administrator, myPrincipal.IsInRole(WindowsBuiltInRole.Administrator))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Principal_WindowsPrincipal_IsInRole_System_String_\">\r\n    \r\n            <a id=\"System_Security_Principal_WindowsPrincipal_IsInRole_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsInRole(String)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current principal belongs to the Windows user group with the specified name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool IsInRole (string role);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>role</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name of the Windows user group for which to check membership.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current principal is a member of the specified Windows user group; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When testing for newly created role information, such as a new user or a new group, it is important to log out and log in to force the propagation of role information within the domain. Not doing so can cause the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> test to return <code>false</code>. This method is not supported on Windows 98 or Windows Millennium Edition.  </p>\n<p> For performance reasons, the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_System_Security_Principal_SecurityIdentifier_\" data-linktype=\"relative-path\">IsInRole(SecurityIdentifier)</a> overload is recommended as the preferable overload for determining the user&#39;s role.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In Windows Vista, User Account Control (UAC) determines the privileges of a user. If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token. By default, you are in the standard user role. When you attempt to perform a task that requires administrative privileges, you can dynamically elevate your role by using the Consent dialog box. The code that executes the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_\" data-linktype=\"relative-path\">IsInRole</a> method does not display the Consent dialog box. The code returns false if you are in the standard user role, even if you are in the Built-in Administrators group. You can elevate your privileges before you execute the code by right-clicking the application icon and indicating that you want to run as an administrator.  </p>\n</div>\n<p> For built-in roles, the <code>role</code> string should be in the form &quot;BUILTIN\\<em>RoleNameHere</em>&quot;. For example, to test for membership in the Windows administrator role, the string representing the role should be &quot;BUILTIN\\Administrators&quot;. Note that the backslash might need to be escaped. The following table lists the built-in roles.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The spelling for the BUILTIN roles in string format differs from the spelling used in the <a class=\"xref\" href=\"system.security.principal.windowsbuiltinrole\" data-linktype=\"relative-path\">WindowsBuiltInRole</a> enumeration. For example, the spelling for an administrator in the enumeration is &quot;Administrator&quot;, not &quot;Administrators&quot;. When using this overload, use the spelling for the role from the following table.  </p>\n</div>\n<table>\n<thead>\n<tr>\n<th>Built-in local groups</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>BUILTIN\\Administrators</td>\n</tr>\n<tr>\n<td>BUILTIN\\Users</td>\n</tr>\n<tr>\n<td>BUILTIN\\Guests</td>\n</tr>\n<tr>\n<td>BUILTIN\\Account Operators</td>\n</tr>\n<tr>\n<td>BUILTIN\\Server Operators</td>\n</tr>\n<tr>\n<td>BUILTIN\\Print Operators</td>\n</tr>\n<tr>\n<td>BUILTIN\\Backup Operators</td>\n</tr>\n<tr>\n<td>BUILTIN\\Replicator</td>\n</tr>\n</tbody>\n</table>\n<p> For machine-specific roles, the <code>role</code> string should be in the form &quot;MachineName\\<em>RoleNameHere</em>&quot;.  </p>\n<p> For domain-specific roles, the <code>role</code> string should be in the form &quot;DomainName\\<em>RoleNameHere</em>&quot;; for example, <code>&quot;SomeDomain\\Domain Users</code>&quot;.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In the .NET Framework version 1.0, the <code>role</code> parameter is case-sensitive. In the .NET Framework version 1.1 and later, the <code>role</code> parameter is case-insensitive.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the use of the IsInRole method.  </p>\n<p> The strings <code>BUILTIN\\Administrators</code> and <code>BUILTIN\\Users</code> are used to determine whether the current principal is an administrator or a user. For the full code example, see the <a class=\"xref\" href=\"system.security.principal.windowsprincipal#System_Security_Principal_WindowsPrincipal_IsInRole_System_Int32_\" data-linktype=\"relative-path\">System.Security.Principal.WindowsPrincipal.IsInRole(Int32)</a> method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Security.Principal.WindowsBuiltInRole Example#3\">        // Get the role using the string value of the role.\n        Console.WriteLine(&quot;{0}? {1}.&quot;, &quot;Administrators&quot;,\n            myPrincipal.IsInRole(&quot;BUILTIN\\\\&quot; + &quot;Administrators&quot;));\n        Console.WriteLine(&quot;{0}? {1}.&quot;, &quot;Users&quot;,\n            myPrincipal.IsInRole(&quot;BUILTIN\\\\&quot; + &quot;Users&quot;));\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Security.Principal.WindowsBuiltInRole Example#3\">        &#39; Get the role using the string value of the role.\n        Console.WriteLine(&quot;{0}? {1}.&quot;, &quot;Administrators&quot;, myPrincipal.IsInRole(&quot;BUILTIN\\&quot; + &quot;Administrators&quot;))\n        Console.WriteLine(&quot;{0}? {1}.&quot;, &quot;Users&quot;, myPrincipal.IsInRole(&quot;BUILTIN\\&quot; + &quot;Users&quot;))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Principal.WindowsPrincipal.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Principal.WindowsPrincipal.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsPrincipal\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsPrincipal..ctor\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsPrincipal.DeviceClaims\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsPrincipal.Identity\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsPrincipal.IsInRole\">\r\n<meta name=\"APIName\" content=\"System.Security.Principal.WindowsPrincipal.UserClaims\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"b25c8b94-c21a-c832-0621-fa15bf42e833\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Enables code to check the Windows group membership of a Windows user.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Principal/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Principal.WindowsPrincipal\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Principal.WindowsPrincipal.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Principal.WindowsPrincipal.yml","open_to_public_contributors":true,"api_name":["System.Security.Principal.WindowsPrincipal","System.Security.Principal.WindowsPrincipal..ctor","System.Security.Principal.WindowsPrincipal.DeviceClaims","System.Security.Principal.WindowsPrincipal.Identity","System.Security.Principal.WindowsPrincipal.IsInRole","System.Security.Principal.WindowsPrincipal.UserClaims"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Principal.WindowsPrincipal","System::Security::Principal::WindowsPrincipal","System.Security.Principal.WindowsPrincipal.#ctor","System::Security::Principal::WindowsPrincipal::#ctor","System.Security.Principal.WindowsPrincipal.DeviceClaims","System::Security::Principal::WindowsPrincipal::DeviceClaims","System.Security.Principal.WindowsPrincipal.Identity","System::Security::Principal::WindowsPrincipal::Identity","System.Security.Principal.WindowsPrincipal.IsInRole","System::Security::Principal::WindowsPrincipal::IsInRole","System.Security.Principal.WindowsPrincipal.UserClaims","System::Security::Principal::WindowsPrincipal::UserClaims"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"b25c8b94-c21a-c832-0621-fa15bf42e833","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Principal/WindowsPrincipal.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WindowsPrincipal class | Microsoft Docs","_op_ogTitle":"WindowsPrincipal class","description":"Enables code to check the Windows group membership of a Windows user.\n","toc_asset_id":"_splitted/System.Security.Principal/toc.json","toc_rel":"_splitted/System.Security.Principal/toc.json","source_url":"","ms.assetid":"System.Security.Principal.WindowsPrincipal","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.principal.windowsprincipal","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.principal.windowsprincipal","fileRelativePath":"System.Security.Principal.WindowsPrincipal.html"},"themesRelativePathToOutputRoot":"_themes/"}