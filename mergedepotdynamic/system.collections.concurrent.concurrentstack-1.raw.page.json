{"content":"    \r\n    <h1 id=\"System_Collections_Concurrent_ConcurrentStack_1\">\r\n      <span class=\"lang-csharp\">ConcurrentStack&lt;T&gt;</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a thread-safe last in-first out (LIFO) collection.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Diagnostics.DebuggerDisplay(&quot;Count = {Count}&quot;)]\n[System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Concurrent.SystemCollectionsConcurrent_ProducerConsumerCollectionDebugView`1))]\npublic class ConcurrentStack&lt;T&gt; : System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</code></pre>\r\n    \r\n    \r\n    \t<h2>Type Parameters</h2>\r\n    \r\n    \t<table class=\"nameValue\">\r\n    \t\t<tr>\r\n    \t\t<td>\r\n    \t\tT\r\n    \t\t</td>\r\n    \t\t<td>\r\n    \t\t<p>The type of the elements contained in the stack.</p>\n\r\n    \t\t</td>\r\n    \t\t</tr>\r\n    \t</table>\r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">ConcurrentStack&lt;T&gt;</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <div class=\"NOTE\"><h5>Note</h5><p> ConcurrentStack(T) implements the <a class=\"xref\" href=\"system.collections.generic.ireadonlycollection-1\" data-linktype=\"relative-path\">IReadOnlyCollection&lt;T&gt;</a> interface starting with the .NET Framework 4.6; in previous versions of the .NET Framework, the ConcurrentStack(T) class did not implement this interface.  </p>\n</div>\n<p> ConcurrentStack(T) provides a few main operations:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1#System_Collections_Concurrent_ConcurrentStack_1_Push_\" data-linktype=\"relative-path\">Push</a> inserts an element at the top of the ConcurrentStack(T).  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1#System_Collections_Concurrent_ConcurrentStack_1_TryPop_\" data-linktype=\"relative-path\">TryPop</a> removes an element from the top of the ConcurrentStack(T), or returns <code>false</code> if the item cannot be removed.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1#System_Collections_Concurrent_ConcurrentStack_1_TryPeek_\" data-linktype=\"relative-path\">TryPeek</a> returns an element that is at the top of the ConcurrentStack(T) but does not remove it from the ConcurrentStack(T).  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1#System_Collections_Concurrent_ConcurrentStack_1_TryPopRange_\" data-linktype=\"relative-path\">TryPopRange</a> and <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1#System_Collections_Concurrent_ConcurrentStack_1_PushRange_\" data-linktype=\"relative-path\">PushRange</a> methods provide efficient pushing and popping of multiple elements in a single operation.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1__ctor\" data-linktype=\"self-bookmark\">ConcurrentStack&lt;T&gt;()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1__ctor_System_Collections_Generic_IEnumerable__0__\" data-linktype=\"self-bookmark\">ConcurrentStack&lt;T&gt;(IEnumerable&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> class that contains elements copied from the specified collection</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_Count\" data-linktype=\"self-bookmark\">Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of elements contained in the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_IsEmpty\" data-linktype=\"self-bookmark\">IsEmpty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that indicates whether the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> is empty.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_Clear\" data-linktype=\"self-bookmark\">Clear()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes all objects from the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_CopyTo__0___System_Int32_\" data-linktype=\"self-bookmark\">CopyTo(T[],Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> elements to an existing one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at the specified array index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an enumerator that iterates through the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_Push__0_\" data-linktype=\"self-bookmark\">Push(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts an object at the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_PushRange__0___\" data-linktype=\"self-bookmark\">PushRange(T[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts multiple objects at the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> atomically.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_PushRange__0___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">PushRange(T[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts multiple objects at the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> atomically.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_ToArray\" data-linktype=\"self-bookmark\">ToArray()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the items stored in the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> to a new array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_TryPeek__0__\" data-linktype=\"self-bookmark\">TryPeek(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to return an object from the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> without removing it.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_TryPop__0__\" data-linktype=\"self-bookmark\">TryPop(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to pop and return the object at the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_TryPopRange__0___\" data-linktype=\"self-bookmark\">TryPopRange(T[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to pop and return multiple objects from the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> atomically.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_TryPopRange__0___System_Int32_System_Int32_\" data-linktype=\"self-bookmark\">TryPopRange(T[],Int32,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to pop and return multiple objects from the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> atomically.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_System_Collections_Concurrent_IProducerConsumerCollection_T__TryAdd__0_\" data-linktype=\"self-bookmark\">IProducerConsumerCollection&lt;T&gt;.TryAdd(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to add an object to the <span class=\"xref\">stem.Collections.Concurrent.IProducerConsumerCollection`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_System_Collections_Concurrent_IProducerConsumerCollection_T__TryTake__0__\" data-linktype=\"self-bookmark\">IProducerConsumerCollection&lt;T&gt;.TryTake(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Attempts to remove and return an object from the <span class=\"xref\">stem.Collections.Concurrent.IProducerConsumerCollection`1</span>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_System_Collections_ICollection_CopyTo_System_Array_System_Int32_\" data-linktype=\"self-bookmark\">ICollection.CopyTo(Array,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the elements of the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> to an <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at a particular <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_System_Collections_ICollection_IsSynchronized\" data-linktype=\"self-bookmark\">ICollection.IsSynchronized</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> is synchronized with the SyncRoot.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_System_Collections_ICollection_SyncRoot\" data-linktype=\"self-bookmark\">ICollection.SyncRoot</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an object that can be used to synchronize access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>. This property is not supported.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Concurrent_ConcurrentStack_1_System_Collections_IEnumerable_GetEnumerator\" data-linktype=\"self-bookmark\">IEnumerable.GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an enumerator that iterates through a collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1__ctor\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConcurrentStack&lt;T&gt;()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ConcurrentStack ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1__ctor_System_Collections_Generic_IEnumerable__0__\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ConcurrentStack&lt;T&gt;(IEnumerable&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> class that contains elements copied from the specified collection</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public ConcurrentStack (System.Collections.Generic.IEnumerable&lt;T&gt; collection);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>collection</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerable-1\" data-linktype=\"relative-path\">IEnumerable<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The collection whose elements are copied to the new <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>collection</code> argument is null.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_Count\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Count</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of elements contained in the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of elements contained in the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For determining whether the collection contains any items, use of the <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1#System_Collections_Concurrent_ConcurrentStack_1_IsEmpty_\" data-linktype=\"relative-path\">IsEmpty</a> property is recommended rather than retrieving the number of items from the Count property and comparing it to 0.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_IsEmpty\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_IsEmpty_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsEmpty</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that indicates whether the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> is empty.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsEmpty { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>true if the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> is empty; otherwise, false.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For determining whether the collection contains any items, use of this property is recommended rather than retrieving the number of items from the <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1#System_Collections_Concurrent_ConcurrentStack_1_Count_\" data-linktype=\"relative-path\">Count</a> property and comparing it to 0. However, as this collection is intended to be accessed concurrently, it may be the case that another thread will modify the collection after IsEmpty returns, thus invalidating the result.  </p>\n<p> For a code example, see <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1\" data-linktype=\"relative-path\">ConcurrentStack&lt;T&gt;</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_Clear\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_Clear_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clear()</div>        \r\n          </div>\r\n    \r\n            <p>Removes all objects from the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Clear ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_CopyTo__0___System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyTo(T[],Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> elements to an existing one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at the specified array index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyTo (T[] array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T[]</span>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> that is the destination of the elements copied from the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>. The <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> must have zero-based indexing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index in <code>array</code> at which copying begins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is a null reference (Nothing in Visual Basic).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is equal to or greater than the length of the <code>array</code> -or- The number of elements in the source <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_GetEnumerator\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an enumerator that iterates through the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ienumerator-1\" data-linktype=\"relative-path\">IEnumerator<t></t></a></div>\r\n                  </div>\r\n                  <p>An enumerator for the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The enumeration represents a moment-in-time snapshot of the contents of the stack. It does not reflect any updates to the collection after GetEnumerator was called. The enumerator is safe to use concurrently with reads from and writes to the stack. The enumerator returns items in LIFO (last-in, first-out) order.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_Push__0_\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_Push_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Push(T)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts an object at the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Push (T item);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>item</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to push onto the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>. The value can be a null reference (Nothing in Visual Basic) for reference types.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_PushRange__0___\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_PushRange_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PushRange(T[])</div>        \r\n          </div>\r\n    \r\n            <p>Inserts multiple objects at the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> atomically.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void PushRange (T[] items);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>items</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T[]</span>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The objects to push onto the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>items</code> is a null reference (Nothing in Visual Basic).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When adding multiple items to the stack, using PushRange is a more efficient mechanism than using <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1#System_Collections_Concurrent_ConcurrentStack_1_Push_\" data-linktype=\"relative-path\">Push</a> one item at a time. Additionally, PushRange guarantees that all of the elements will be added atomically, meaning that no other threads will be able to inject elements between the elements being pushed. Items at lower indices in the <code>items</code> array will be pushed before items at higher indices.  </p>\n<p> For a code example, see <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1\" data-linktype=\"relative-path\">ConcurrentStack&lt;T&gt;</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_PushRange__0___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_PushRange_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PushRange(T[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts multiple objects at the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> atomically.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void PushRange (T[] items, int startIndex, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>items</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T[]</span>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The objects to push onto the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based offset in <code>items</code> at which to begin inserting elements onto the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of elements to be inserted onto the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>items</code> is a null reference (Nothing in Visual Basic).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>startIndex</code> or <code>count</code> is negative. Or <code>startIndex</code> is greater than or equal to the length of <code>items</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>startIndex</code> + <code>count</code> is greater than the length of <code>items</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When adding multiple items to the stack, using PushRange is a more efficient mechanism than using <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1#System_Collections_Concurrent_ConcurrentStack_1_Push_\" data-linktype=\"relative-path\">Push</a> one item at a time. Additionally, PushRange guarantees that all of the elements will be added atomically, meaning that no other threads will be able to inject elements between the elements being pushed. Items at lower indices in the <code>items</code> array will be pushed before items at higher indices.  </p>\n<p> For a code example, see <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1\" data-linktype=\"relative-path\">ConcurrentStack&lt;T&gt;</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_ToArray\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_ToArray_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToArray()</div>        \r\n          </div>\r\n    \r\n            <p>Copies the items stored in the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> to a new array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public T[] ToArray ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><span class=\"xref\">T[]</span>[]</div>\r\n                  </div>\r\n                  <p>A new array containing a snapshot of elements copied from the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_TryPeek__0__\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_TryPeek_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryPeek(T)</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to return an object from the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> without removing it.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool TryPeek (out T result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, <code>result</code> contains an object from the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>or an unspecified value if the operation failed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>true if and object was returned successfully; otherwise, false.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_TryPop__0__\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_TryPop_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryPop(T)</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to pop and return the object at the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool TryPop (out T result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, if the operation was successful, <code>result</code> contains the object removed. If no object was available to be removed, the value is unspecified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>true if an element was removed and returned from the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> successfully; otherwise, false.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For a code example, see <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1\" data-linktype=\"relative-path\">ConcurrentStack&lt;T&gt;</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_TryPopRange__0___\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_TryPopRange_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryPopRange(T[])</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to pop and return multiple objects from the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> atomically.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int TryPopRange (T[] items);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>items</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T[]</span>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> to which objects popped from the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> will be added.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of objects successfully popped from the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> and inserted in <code>items</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>items</code> is a null argument (Nothing in Visual Basic).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When popping multiple items, if there is little contention on the stack, using <code>TryPopRange</code> can be more efficient than using <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1#System_Collections_Concurrent_ConcurrentStack_1_TryPop_\" data-linktype=\"relative-path\">TryPop</a> once per item to be removed. Nodes fill the <code>items</code> array with the first item to be popped at the startIndex, the second item to be popped at startIndex + 1, and so on.  </p>\n<p> For a code example, see <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1\" data-linktype=\"relative-path\">ConcurrentStack&lt;T&gt;</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_TryPopRange__0___System_Int32_System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_TryPopRange_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryPopRange(T[],Int32,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to pop and return multiple objects from the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> atomically.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int TryPopRange (T[] items, int startIndex, int count);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>items</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T[]</span>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> to which objects popped from the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> will be added.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>startIndex</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based offset in <code>items</code> at which to begin inserting elements from the top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>count</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of elements to be popped from top of the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span> and inserted into <code>items</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of objects successfully popped from the top of the stack and inserted in <code>items</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>items</code> is a null reference (Nothing in Visual Basic).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>startIndex</code> or <code>count</code> is negative. Or <code>startIndex</code> is greater than or equal to the length of <code>items</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>startIndex</code> + <code>count</code> is greater than the length of <code>items</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When popping multiple items, if there is little contention on the stack, using TryPopRange can be more efficient than using <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1#System_Collections_Concurrent_ConcurrentStack_1_TryPop_\" data-linktype=\"relative-path\">TryPop</a> once per item to be removed. Nodes fill the <code>items</code> array with the first item to be popped at the startIndex, the second item to be popped at startIndex + 1, and so on.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_System_Collections_Concurrent_IProducerConsumerCollection_T__TryAdd__0_\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_System_Collections_Concurrent_IProducerConsumerCollection_T__TryAdd_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IProducerConsumerCollection&lt;T&gt;.TryAdd(T)</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to add an object to the <span class=\"xref\">stem.Collections.Concurrent.IProducerConsumerCollection`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool IProducerConsumerCollection&lt;T&gt;.TryAdd (T item);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>item</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to add to the <span class=\"xref\">stem.Collections.Concurrent.IProducerConsumerCollection`1</span>. The value can be a null reference (Nothing in Visual Basic) for reference types.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>true if the object was added successfully; otherwise, false.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1\" data-linktype=\"relative-path\">ConcurrentStack&lt;T&gt;</a>, this operation will always insert the object onto the top of the <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1\" data-linktype=\"relative-path\">ConcurrentStack&lt;T&gt;</a> and return true.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_System_Collections_Concurrent_IProducerConsumerCollection_T__TryTake__0__\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_System_Collections_Concurrent_IProducerConsumerCollection_T__TryTake_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IProducerConsumerCollection&lt;T&gt;.TryTake(T)</div>        \r\n          </div>\r\n    \r\n            <p>Attempts to remove and return an object from the <span class=\"xref\">stem.Collections.Concurrent.IProducerConsumerCollection`1</span>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool IProducerConsumerCollection&lt;T&gt;.TryTake (out T item);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>item</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, if the operation was successful, <code>item</code> contains the object removed. If no object was available to be removed, the value is unspecified.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>true if an element was removed and returned succesfully; otherwise, false.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1\" data-linktype=\"relative-path\">ConcurrentStack&lt;T&gt;</a>, this operation will attempt to pop the object at the top of the <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1\" data-linktype=\"relative-path\">ConcurrentStack&lt;T&gt;</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_System_Collections_ICollection_CopyTo_System_Array_System_Int32_\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_System_Collections_ICollection_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.CopyTo(Array,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the elements of the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> to an <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a>, starting at a particular <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ICollection.CopyTo (Array array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The one-dimensional <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> that is the destination of the elements copied from the <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>. The <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> must have zero-based indexing.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index in <code>array</code> at which copying begins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is a null reference (Nothing in Visual Basic).</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is less than zero.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>array</code> is multidimensional. -or- <code>array</code> does not have zero-based indexing. -or- <code>index</code> is equal to or greater than the length of the <code>array</code> -or- The number of elements in the source <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> is greater than the available space from <code>index</code> to the end of the destination <code>array</code>. -or- The type of the source <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> cannot be cast automatically to the type of the destination <code>array</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_System_Collections_ICollection_IsSynchronized\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_System_Collections_ICollection_IsSynchronized_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.IsSynchronized</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> is synchronized with the SyncRoot.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.Collections.ICollection.IsSynchronized { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>true if access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> is synchronized with the SyncRoot; otherwise, false. For <span class=\"xref\">stem.Collections.Concurrent.ConcurrentStack`1</span>, this property always returns false.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_System_Collections_ICollection_SyncRoot\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_System_Collections_ICollection_SyncRoot_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.SyncRoot</div>        \r\n          </div>\r\n    \r\n            <p>Gets an object that can be used to synchronize access to the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a>. This property is not supported.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object System.Collections.ICollection.SyncRoot { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>Returns null (Nothing in Visual Basic).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></div>\r\n                  </div>\r\n                  <p>The SyncRoot property is not supported</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Concurrent_ConcurrentStack_1_System_Collections_IEnumerable_GetEnumerator\">\r\n    \r\n            <a id=\"System_Collections_Concurrent_ConcurrentStack_1_System_Collections_IEnumerable_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IEnumerable.GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an enumerator that iterates through a collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Collections.IEnumerator IEnumerable.GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> that can be used to iterate through the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The enumeration represents a moment-in-time snapshot of the contents of the stack. It does not reflect any updates to the collection after <a class=\"xref\" href=\"system.collections.concurrent.concurrentstack-1#System_Collections_Concurrent_ConcurrentStack_1_GetEnumerator_\" data-linktype=\"relative-path\">GetEnumerator</a> was called. The enumerator is safe to use concurrently with reads from and writes to the stack.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.Concurrent.ConcurrentStack-1.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.Concurrent.ConcurrentStack-1.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;..ctor\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.Clear\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.Count\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.IsEmpty\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.Push\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.PushRange\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.IProducerConsumerCollection&lt;T&gt;.TryAdd\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.IProducerConsumerCollection&lt;T&gt;.TryTake\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.ICollection.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.ICollection.IsSynchronized\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.ICollection.SyncRoot\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.IEnumerable.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.ToArray\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.TryPeek\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.TryPop\">\r\n<meta name=\"APIName\" content=\"System.Collections.Concurrent.ConcurrentStack&lt;T&gt;.TryPopRange\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"2dc69ce0-7800-96af-9237-cbbbecaaf982\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a thread-safe last in-first out (LIFO) collection.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Collections.Concurrent/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.Concurrent.ConcurrentStack`1\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.Concurrent.ConcurrentStack-1.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.Concurrent.ConcurrentStack-1.yml","open_to_public_contributors":true,"api_name":["System.Collections.Concurrent.ConcurrentStack<T>","System.Collections.Concurrent.ConcurrentStack<T>..ctor","System.Collections.Concurrent.ConcurrentStack<T>.Clear","System.Collections.Concurrent.ConcurrentStack<T>.CopyTo","System.Collections.Concurrent.ConcurrentStack<T>.Count","System.Collections.Concurrent.ConcurrentStack<T>.GetEnumerator","System.Collections.Concurrent.ConcurrentStack<T>.IsEmpty","System.Collections.Concurrent.ConcurrentStack<T>.Push","System.Collections.Concurrent.ConcurrentStack<T>.PushRange","System.Collections.Concurrent.ConcurrentStack<T>.IProducerConsumerCollection<T>.TryAdd","System.Collections.Concurrent.ConcurrentStack<T>.IProducerConsumerCollection<T>.TryTake","System.Collections.Concurrent.ConcurrentStack<T>.ICollection.CopyTo","System.Collections.Concurrent.ConcurrentStack<T>.ICollection.IsSynchronized","System.Collections.Concurrent.ConcurrentStack<T>.ICollection.SyncRoot","System.Collections.Concurrent.ConcurrentStack<T>.IEnumerable.GetEnumerator","System.Collections.Concurrent.ConcurrentStack<T>.ToArray","System.Collections.Concurrent.ConcurrentStack<T>.TryPeek","System.Collections.Concurrent.ConcurrentStack<T>.TryPop","System.Collections.Concurrent.ConcurrentStack<T>.TryPopRange"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.Concurrent.ConcurrentStack`1","System::Collections::Concurrent::ConcurrentStack`1","System.Collections.Concurrent.ConcurrentStack`1.#ctor","System::Collections::Concurrent::ConcurrentStack`1::#ctor","System.Collections.Concurrent.ConcurrentStack`1.Clear","System::Collections::Concurrent::ConcurrentStack`1::Clear","System.Collections.Concurrent.ConcurrentStack`1.CopyTo","System::Collections::Concurrent::ConcurrentStack`1::CopyTo","System.Collections.Concurrent.ConcurrentStack`1.Count","System::Collections::Concurrent::ConcurrentStack`1::Count","System.Collections.Concurrent.ConcurrentStack`1.GetEnumerator","System::Collections::Concurrent::ConcurrentStack`1::GetEnumerator","System.Collections.Concurrent.ConcurrentStack`1.IsEmpty","System::Collections::Concurrent::ConcurrentStack`1::IsEmpty","System.Collections.Concurrent.ConcurrentStack`1.Push","System::Collections::Concurrent::ConcurrentStack`1::Push","System.Collections.Concurrent.ConcurrentStack`1.PushRange","System::Collections::Concurrent::ConcurrentStack`1::PushRange","System.Collections.Concurrent.ConcurrentStack`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd","System::Collections::Concurrent::ConcurrentStack`1::System#Collections#Concurrent#IProducerConsumerCollection{T}#TryAdd","System.Collections.Concurrent.ConcurrentStack`1.System#Collections#Concurrent#IProducerConsumerCollection{T}#TryTake","System::Collections::Concurrent::ConcurrentStack`1::System#Collections#Concurrent#IProducerConsumerCollection{T}#TryTake","System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#CopyTo","System::Collections::Concurrent::ConcurrentStack`1::System#Collections#ICollection#CopyTo","System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#IsSynchronized","System::Collections::Concurrent::ConcurrentStack`1::System#Collections#ICollection#IsSynchronized","System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#SyncRoot","System::Collections::Concurrent::ConcurrentStack`1::System#Collections#ICollection#SyncRoot","System.Collections.Concurrent.ConcurrentStack`1.System#Collections#IEnumerable#GetEnumerator","System::Collections::Concurrent::ConcurrentStack`1::System#Collections#IEnumerable#GetEnumerator","System.Collections.Concurrent.ConcurrentStack`1.ToArray","System::Collections::Concurrent::ConcurrentStack`1::ToArray","System.Collections.Concurrent.ConcurrentStack`1.TryPeek","System::Collections::Concurrent::ConcurrentStack`1::TryPeek","System.Collections.Concurrent.ConcurrentStack`1.TryPop","System::Collections::Concurrent::ConcurrentStack`1::TryPop","System.Collections.Concurrent.ConcurrentStack`1.TryPopRange","System::Collections::Concurrent::ConcurrentStack`1::TryPopRange"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"2dc69ce0-7800-96af-9237-cbbbecaaf982","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Collections.Concurrent/ConcurrentStack`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ConcurrentStack<T> class | Microsoft Docs","_op_ogTitle":"ConcurrentStack<T> class","description":"Represents a thread-safe last in-first out (LIFO) collection.\n","toc_asset_id":"_splitted/System.Collections.Concurrent/toc.json","toc_rel":"_splitted/System.Collections.Concurrent/toc.json","source_url":"","ms.assetid":"System.Collections.Concurrent.ConcurrentStack`1","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.concurrent.concurrentstack-1","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.concurrent.concurrentstack-1","fileRelativePath":"System.Collections.Concurrent.ConcurrentStack-1.html"},"themesRelativePathToOutputRoot":"_themes/"}