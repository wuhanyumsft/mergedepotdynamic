{"content":"    \r\n    <h1 id=\"System_ComponentModel_AttributeCollection\">\r\n      <span class=\"lang-csharp\">AttributeCollection</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a collection of attributes.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic class AttributeCollection : System.Collections.ICollection</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">AttributeCollection</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The AttributeCollection class is read-only; it does not implement methods to add or remove attributes. You must inherit from this class to implement these methods.  </p>\n<p> Use the <a class=\"xref\" href=\"system.componentmodel.attributecollection#System_ComponentModel_AttributeCollection_Count_\" data-linktype=\"relative-path\">Count</a> property to find the number of attributes that exist in the collection.  </p>\n<p> You can also use the methods of this class to query the collection about its contents. Call the <a class=\"xref\" href=\"system.componentmodel.attributecollection#System_ComponentModel_AttributeCollection_Contains_\" data-linktype=\"relative-path\">Contains</a> method to verify that a specified attribute or attribute array exists in the collection. Call the <a class=\"xref\" href=\"system.componentmodel.attributecollection#System_ComponentModel_AttributeCollection_Matches_\" data-linktype=\"relative-path\">Matches</a> method to verify that a specified attribute or array of attributes exists in the collection, and that the values of the specified attributes are the same as the values in the collection.  </p>\n<p> While most attributes have default values, default values are not required. If an attribute has no default value, <code>null</code> is returned from the indexed property that takes a type. When defining your own attributes, you can declare a default value by either providing a constructor that takes no arguments, or defining a public static field of your attribute type named &quot;Default&quot;.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection__ctor\" data-linktype=\"self-bookmark\">AttributeCollection()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.attributecollection\" data-linktype=\"relative-path\">AttributeCollection</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection__ctor_System_Attribute___\" data-linktype=\"self-bookmark\">AttributeCollection(Attribute[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.attributecollection\" data-linktype=\"relative-path\">AttributeCollection</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_Empty\" data-linktype=\"self-bookmark\">Empty</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies an empty collection that you can use, rather than creating a new one. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_Attributes\" data-linktype=\"self-bookmark\">Attributes</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the attribute collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_Count\" data-linktype=\"self-bookmark\">Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of attributes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_Item_System_Int32_\" data-linktype=\"self-bookmark\">Item(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the attribute with the specified index number.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_Item_System_Type_\" data-linktype=\"self-bookmark\">Item(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the attribute with the specified type.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_Contains_System_Attribute_\" data-linktype=\"self-bookmark\">Contains(Attribute)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether this collection of attributes has the specified attribute.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_Contains_System_Attribute___\" data-linktype=\"self-bookmark\">Contains(Attribute[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether this attribute collection contains all the specified attributes in the attribute array.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_CopyTo_System_Array_System_Int32_\" data-linktype=\"self-bookmark\">CopyTo(Array,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the collection to an array, starting at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_FromExisting_System_ComponentModel_AttributeCollection_System_Attribute___\" data-linktype=\"self-bookmark\">FromExisting(AttributeCollection,Attribute[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.componentmodel.attributecollection\" data-linktype=\"relative-path\">AttributeCollection</a> from an existing <a class=\"xref\" href=\"system.componentmodel.attributecollection\" data-linktype=\"relative-path\">AttributeCollection</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_GetDefaultAttribute_System_Type_\" data-linktype=\"self-bookmark\">GetDefaultAttribute(Type)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the default <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> of a given <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_GetEnumerator\" data-linktype=\"self-bookmark\">GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an enumerator for this collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_Matches_System_Attribute_\" data-linktype=\"self-bookmark\">Matches(Attribute)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether a specified attribute is the same as an attribute in the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_Matches_System_Attribute___\" data-linktype=\"self-bookmark\">Matches(Attribute[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the attributes in the specified array are the same as the attributes in the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_System_Collections_ICollection_Count\" data-linktype=\"self-bookmark\">ICollection.Count</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the number of elements contained in the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_System_Collections_ICollection_IsSynchronized\" data-linktype=\"self-bookmark\">ICollection.IsSynchronized</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether access to the collection is synchronized (thread-safe).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_System_Collections_ICollection_SyncRoot\" data-linktype=\"self-bookmark\">ICollection.SyncRoot</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an object that can be used to synchronize access to the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_ComponentModel_AttributeCollection_System_Collections_IEnumerable_GetEnumerator\" data-linktype=\"self-bookmark\">IEnumerable.GetEnumerator()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns an <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> for the <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection__ctor\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AttributeCollection()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.attributecollection\" data-linktype=\"relative-path\">AttributeCollection</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected AttributeCollection ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection__ctor_System_Attribute___\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AttributeCollection(Attribute[])</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.componentmodel.attributecollection\" data-linktype=\"relative-path\">AttributeCollection</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public AttributeCollection (Attribute[] attributes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> that provides the attributes for this collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>attributes</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates a new <a class=\"xref\" href=\"system.componentmodel.attributecollection\" data-linktype=\"relative-path\">AttributeCollection</a> using the attributes on <code>button1</code>. It assumes that <code>button1</code> has been created on a form.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic AttributeCollection.AttributeCollection Example#1\">      AttributeCollection^ collection1;\n      collection1 = TypeDescriptor::GetAttributes( button1 );\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic AttributeCollection.AttributeCollection Example#1\">AttributeCollection collection1;\ncollection1 = TypeDescriptor.GetAttributes(button1);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic AttributeCollection.AttributeCollection Example#1\">Dim collection1 As AttributeCollection\ncollection1 = TypeDescriptor.GetAttributes(button1)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_Empty\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Empty</div>        \r\n          </div>\r\n    \r\n            <p>Specifies an empty collection that you can use, rather than creating a new one. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly System.ComponentModel.AttributeCollection Empty;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_Attributes\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection_Attributes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Attributes</div>        \r\n          </div>\r\n    \r\n            <p>Gets the attribute collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual Attribute[] Attributes { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a>[]</div>\r\n                  </div>\r\n                  <p>The attribute collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_Count\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Count</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of attributes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of attributes.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can use the Count property to set the limits of a loop that iterates through a collection of objects. If the collection is zero-based, be sure to use <code>Count - 1</code> as the upper boundary of the loop.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the Count property to print the number of properties on <code>button1</code> in a text box. It assumes that <code>button1</code> and <code>textBox1</code> have been created on a form.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic AttributeCollection.Count Example#1\">private void GetCount() {\n    // Creates a new collection and assigns it the attributes for button1.\n    AttributeCollection attributes;\n    attributes = TypeDescriptor.GetAttributes(button1);\n \n    // Prints the number of items in the collection.\n    textBox1.Text = attributes.Count.ToString();\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic AttributeCollection.Count Example#1\">Private Sub GetCount\n    &#39; Creates a new collection and assigns it the attributes for button 1.\n    Dim attributes As AttributeCollection\n    attributes = TypeDescriptor.GetAttributes(button1)\n    &#39; Prints the number of items in the collection.\n    textBox1.Text = attributes.Count.ToString\nEnd Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic AttributeCollection.Count Example#1\">private:\n   void GetCount()\n   {\n      // Creates a new collection and assigns it the attributes for button1.\n      AttributeCollection^ attributes;\n      attributes = TypeDescriptor::GetAttributes( button1 );\n      \n      // Prints the number of items in the collection.\n      textBox1-&gt;Text = attributes-&gt;Count.ToString();\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_Item_System_Int32_\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the attribute with the specified index number.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual Attribute this[int index] { get; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of <a class=\"xref\" href=\"system.componentmodel.attributecollection\" data-linktype=\"relative-path\">AttributeCollection</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> with the specified index number.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The index number is zero-based. Therefore, you must subtract 1 from the numerical position of a particular <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> to access that <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a>. For example, to get the third <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a>, you need to specify <code>myColl[2]</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example uses the Item property to print the name of the <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> specified by the index number in a text box. Because the index number is zero-based, this code example prints the name of the second <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> in a text box. It assumes <code>button1</code> and <code>textBox1</code> have been created on a form.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic AttributeCollection.this Example#1\">private void PrintIndexItem() {\n    // Creates a new collection and assigns it the attributes for button1.\n    AttributeCollection attributes;\n    attributes = TypeDescriptor.GetAttributes(button1);\n \n    // Prints the second attribute&#39;s name.\n    textBox1.Text = attributes[1].ToString();\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic AttributeCollection.this Example#1\">\tPrivate Sub PrintIndexItem\n\t\t&#39; Creates a new collection and assigns it the attributes for button1.\n\t\tDim attributes As AttributeCollection\n\t\tattributes = TypeDescriptor.GetAttributes(button1)\n\n\t\t&#39; Prints the second attribute&#39;s name.\n\t\ttextBox1.Text = attributes(1).ToString\n\tEnd Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic AttributeCollection.this Example#1\">private:\n   void PrintIndexItem()\n   {\n      // Creates a new collection and assigns it the attributes for button1.\n      AttributeCollection^ attributes;\n      attributes = TypeDescriptor::GetAttributes( button1 );\n      \n      // Prints the second attribute&#39;s name.\n      textBox1-&gt;Text = attributes[ 1 ]-&gt;ToString();\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_Item_System_Type_\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the attribute with the specified type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public virtual Attribute this[Type attributeType] { get; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attributeType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> to get from the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a></div>\r\n                  </div>\r\n                  <p>The <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> with the specified type or, if the attribute does not exist, the default value for the attribute type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the attribute does not exist in the collection, this property returns the default value for the attribute type.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example gets the <a class=\"xref\" href=\"system.componentmodel.designerattribute\" data-linktype=\"relative-path\">DesignerAttribute</a> from the collection and prints its value. It assumes that <code>button1</code> and <code>textBox1</code> have been created on a form.  </p>\n<p> For this code example to run, you must provide the fully qualified assembly name. For information about how to obtain the fully qualified assembly name, see <a href=\"../Topic/Assembly%20Names.md\" data-linktype=\"relative-path\">Assembly Names</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic AttributeCollection.this1 Example#1\">private void PrintIndexItem2() {\n    // Creates a new collection and assigns it the attributes for button1.\n    AttributeCollection attributes;\n    attributes = TypeDescriptor.GetAttributes(button1);\n \n    // Gets the designer attribute from the collection.\n    DesignerAttribute myDesigner; \n    // You must supply a valid fully qualified assembly name here. \n    myDesigner = (DesignerAttribute)attributes[Type.GetType(&quot;Assembly text name, Version, Culture, PublicKeyToken&quot;)];\n    textBox1.Text = myDesigner.DesignerTypeName;\n }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic AttributeCollection.this1 Example#1\">   void PrintIndexItem2()\n   {\n      \n      // Creates a new collection and assigns it the attributes for button1.\n      AttributeCollection^ attributes;\n      attributes = TypeDescriptor::GetAttributes( button1 );\n      \n      // Gets the designer attribute from the collection.\n      DesignerAttribute^ myDesigner;\n      \n      // You must supply a valid fully qualified assembly name here. \n      myDesigner = dynamic_cast&lt;DesignerAttribute^&gt;(attributes[ Type::GetType(  &quot;Assembly text name, Version, Culture, PublicKeyToken&quot; ) ]);\n      textBox1-&gt;Text = myDesigner-&gt;DesignerTypeName;\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic AttributeCollection.this1 Example#1\">\tPrivate Sub PrintIndexItem2\n\t\t&#39; Creates a new collection and assigns it the attributes for button1.\n\t\tDim attributes As AttributeCollection\n\t\tattributes = TypeDescriptor.GetAttributes(button1)\n\n\t\t&#39; Gets the designer attribute from the collection.\n\t\tDim myDesigner As DesignerAttribute\n                &#39; You must supply a valid fully qualified assembly name here. \n\t\tmyDesigner = CType(attributes(Type.GetType(&quot;Assembly text name, Version, Culture, PublicKeyToken&quot;)), DesignerAttribute)\n\t\ttextBox1.Text = myDesigner.DesignerTypeName\n\tEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_Contains_System_Attribute_\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection_Contains_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Contains(Attribute)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether this collection of attributes has the specified attribute.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Contains (Attribute attribute);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attribute</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> to find in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the collection contains the attribute or is the default attribute for the type of attribute; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This collection has the specified attribute if the specified type of attribute exists in the collection, and if the value of the specified attribute is the same as the value of the instance of the attribute in the collection.  </p>\n<p> The difference between the <a class=\"xref\" href=\"system.componentmodel.attributecollection#System_ComponentModel_AttributeCollection_Matches_\" data-linktype=\"relative-path\">Matches</a> and Contains methods is that <a class=\"xref\" href=\"system.componentmodel.attributecollection#System_ComponentModel_AttributeCollection_Matches_\" data-linktype=\"relative-path\">Matches</a> calls the <a class=\"xref\" href=\"system.attribute#System_Attribute_Match_\" data-linktype=\"relative-path\">Match</a> method on an attribute, and Contains calls the <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a> method.  </p>\n<p> For most attributes, these methods do the same thing. For attributes that may have multiple flags, however, <a class=\"xref\" href=\"system.attribute#System_Attribute_Match_\" data-linktype=\"relative-path\">Match</a> is typically implemented so that it returns <code>true</code> if any of the flags are satisfied. For example, consider a data binding attribute with the Boolean flags &quot;SupportsSql&quot;, &quot;SupportsOleDb&quot;, and &quot;SupportsXml&quot;. This attribute may be present on a property that supports all three data-binding approaches. It will often be the case that a programmer needs to know only if a particular approach is available, not all three. Therefore, a programmer could use <a class=\"xref\" href=\"system.attribute#System_Attribute_Match_\" data-linktype=\"relative-path\">Match</a> with an instance of the attribute containing only the flags the programmer needs.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example checks to see whether the collection has a <a class=\"xref\" href=\"system.componentmodel.browsableattribute\" data-linktype=\"relative-path\">BrowsableAttribute</a> set to <code>true</code>. It assumes that <code>button1</code> and <code>textBox1</code> have been created on a form.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic AttributeCollection.Contains Example#1\">\tPrivate Sub ContainsAttribute\n\t\t&#39; Creates a new collection and assigns it the attributes for button.\n\t\tDim attributes As AttributeCollection\n\t\tattributes = TypeDescriptor.GetAttributes(button1)\n\n\t\t&#39; Sets an Attribute to the specific attribute.\n\t\tDim myAttribute As BrowsableAttribute = BrowsableAttribute.Yes\n\n\t\tIf Attributes.Contains(myAttribute) Then\n\t\t\ttextBox1.Text = &quot;button1 has a browsable attribute.&quot;\n\t\tElse\n\t\t\ttextBox1.Text = &quot;button1 does not have a browsable attribute.&quot;\n\t\tEnd If\n\tEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic AttributeCollection.Contains Example#1\">private void ContainsAttribute() {\n    // Creates a new collection and assigns it the attributes for button1.\n    AttributeCollection attributes;\n    attributes = TypeDescriptor.GetAttributes(button1);\n \n    // Sets an Attribute to the specific attribute.\n    BrowsableAttribute myAttribute = BrowsableAttribute.Yes;\n \n    if (attributes.Contains(myAttribute))\n       textBox1.Text = &quot;button1 has a browsable attribute.&quot;;\n    else\n       textBox1.Text = &quot;button1 does not have a browsable attribute.&quot;;\n }\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic AttributeCollection.Contains Example#1\">protected:\n   void ContainsAttribute()\n   {\n      // Creates a new collection and assigns it the attributes for button1.\n      AttributeCollection^ attributes;\n      attributes = TypeDescriptor::GetAttributes( button1 );\n      \n      // Sets an Attribute to the specific attribute.\n      BrowsableAttribute^ myAttribute = BrowsableAttribute::Yes;\n\n      if ( attributes-&gt;Contains( myAttribute ) )\n      {\n         textBox1-&gt;Text = &quot;button1 has a browsable attribute.&quot;;\n      }\n      else\n      {\n         textBox1-&gt;Text = &quot;button1 does not have a browsable attribute.&quot;;\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_Contains_System_Attribute___\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection_Contains_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Contains(Attribute[])</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether this attribute collection contains all the specified attributes in the attribute array.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Contains (Attribute[] attributes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> to find in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the collection contains all the attributes; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This collection has the specified array of attributes if all the specified attribute types exist in the collection and if each attribute in the specified array is the same as an attribute in the collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example compares the attributes in <code>button1</code> and <code>textBox1</code> to see whether the attributes for the button are contained in the attributes for the text box. It assumes that both <code>button1</code> and <code>textBox1</code> have been created on a form.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic AttributeCollection.Contains1 Example#1\"> private void ContainsAttributes() {\n    // Creates a new collection and assigns it the attributes for button1.\n    AttributeCollection myCollection;\n    myCollection = TypeDescriptor.GetAttributes(button1);    \n \n    // Checks to see whether the attributes in myCollection are the attributes for textBox1.\n    Attribute[] myAttrArray = new Attribute[100];\n    TypeDescriptor.GetAttributes(textBox1).CopyTo(myAttrArray, 0);\n    if (myCollection.Contains(myAttrArray))\n       textBox1.Text = &quot;Both the button and text box have the same attributes.&quot;;\n    else\n       textBox1.Text = &quot;The button and the text box do not have the same attributes.&quot;;\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic AttributeCollection.Contains1 Example#1\"> Private Sub ContainsAttributes()\n     &#39; Creates a new collection and assigns it the attributes for button1.\n     Dim myCollection As AttributeCollection\n     myCollection = TypeDescriptor.GetAttributes(button1)\n       \n     &#39; Checks to see whether the attributes in myCollection are the attributes for textBox1.\n     Dim myAttrArray(100) As Attribute\n     TypeDescriptor.GetAttributes(textBox1).CopyTo(myAttrArray, 0)\n     If myCollection.Contains(myAttrArray) Then\n         textBox1.Text = &quot;Both the button and text box have the same attributes.&quot;\n     Else\n         textBox1.Text = &quot;The button and the text box do not have the same attributes.&quot;\n     End If\n End Sub\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic AttributeCollection.Contains1 Example#1\">private:\n   void ContainsAttributes()\n   {\n      // Creates a new collection and assigns it the attributes for button1.\n      AttributeCollection^ myCollection;\n      myCollection = TypeDescriptor::GetAttributes( button1 );\n      \n      // Checks to see whether the attributes in myCollection are the attributes for textBox1.\n      array&lt;Attribute^&gt;^ myAttrArray = gcnew array&lt;Attribute^&gt;(100);\n      TypeDescriptor::GetAttributes( textBox1 )-&gt;CopyTo( myAttrArray, 0 );\n      if ( myCollection-&gt;Contains( myAttrArray ) )\n      {\n         textBox1-&gt;Text = &quot;Both the button and text box have the same attributes.&quot;;\n      }\n      else\n      {\n         textBox1-&gt;Text = &quot;The button and the text box do not have the same attributes.&quot;;\n      }\n   }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_CopyTo_System_Array_System_Int32_\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyTo(Array,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the collection to an array, starting at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyTo (Array array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.array\" data-linktype=\"relative-path\">Array</a> to copy the collection to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index to start from.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_FromExisting_System_ComponentModel_AttributeCollection_System_Attribute___\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection_FromExisting_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromExisting(AttributeCollection,Attribute[])</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.componentmodel.attributecollection\" data-linktype=\"relative-path\">AttributeCollection</a> from an existing <a class=\"xref\" href=\"system.componentmodel.attributecollection\" data-linktype=\"relative-path\">AttributeCollection</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.ComponentModel.AttributeCollection FromExisting (System.ComponentModel.AttributeCollection existing, Attribute[] newAttributes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>existing</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.attributecollection\" data-linktype=\"relative-path\">AttributeCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.componentmodel.attributecollection\" data-linktype=\"relative-path\">AttributeCollection</a> from which to create the copy.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>newAttributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> that provides the attributes for this collection. Can be <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.attributecollection\" data-linktype=\"relative-path\">AttributeCollection</a></div>\r\n                  </div>\r\n                  <p>A new <a class=\"xref\" href=\"system.componentmodel.attributecollection\" data-linktype=\"relative-path\">AttributeCollection</a> that is a copy of <code>existing</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>existing</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the <code>newAttributes</code> parameter is provided, its <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> entries are merged with those of the <code>existing</code> parameter.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_GetDefaultAttribute_System_Type_\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection_GetDefaultAttribute_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetDefaultAttribute(Type)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the default <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> of a given <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected Attribute GetDefaultAttribute (Type attributeType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attributeType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the attribute to retrieve.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a></div>\r\n                  </div>\r\n                  <p>The default <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> of a given <code>attributeType</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_GetEnumerator\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Gets an enumerator for this collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Collections.IEnumerator GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An enumerator of type <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example gets an enumerator for the attributes on <code>button1</code>. It uses the enumerator to print the names of the attributes in the collection. It assumes that <code>button1</code> and <code>textBox1</code> have been created on a form.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic AttributeCollection.GetEnumerator Example#1\">private:\n   void MyEnumerator()\n   {\n      // Creates a new collection and assigns it the attributes for button1.\n      AttributeCollection^ attributes;\n      attributes = TypeDescriptor::GetAttributes( button1 );\n      \n      // Creates an enumerator for the collection.\n      System::Collections::IEnumerator^ ie = attributes-&gt;GetEnumerator();\n      \n      // Prints the type of each attribute in the collection.\n      Object^ myAttribute;\n      System::Text::StringBuilder^ text = gcnew System::Text::StringBuilder;\n      while ( ie-&gt;MoveNext() == true )\n      {\n         myAttribute = ie-&gt;Current;\n         text-&gt;Append( myAttribute );\n         text-&gt;Append( &#39;<br>&#39; );\n      }\n      textBox1-&gt;Text = text-&gt;ToString();\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic AttributeCollection.GetEnumerator Example#1\">private void MyEnumerator() {\n    // Creates a new collection and assigns it the attributes for button1.\n    AttributeCollection attributes;\n    attributes = TypeDescriptor.GetAttributes(button1);\n \n    // Creates an enumerator for the collection.\n    System.Collections.IEnumerator ie = attributes.GetEnumerator();\n \n    // Prints the type of each attribute in the collection.\n    Object myAttribute;\n    while(ie.MoveNext()==true) {\n       myAttribute = ie.Current;\n       textBox1.Text += myAttribute.ToString();\n       textBox1.Text += &#39;<br>&#39;;\n    }\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic AttributeCollection.GetEnumerator Example#1\">\tPrivate Sub MyEnumerator\n\t\t&#39; Creates a new collection and assigns it the attributes for button1.\n\t\tDim attributes As AttributeCollection\n\t\tattributes = TypeDescriptor.GetAttributes(button1)\n\n\t\t&#39; Creates an enumerator for the collection.\n\t\tDim ie As System.Collections.IEnumerator = attributes.GetEnumerator\n\n\t\t&#39; Prints the type of each attribute in the collection.\n\t\tDim myAttribute As Object\n\t\tDo While ie.MoveNext\n\t\t\tmyAttribute = ie.Current\n\t\t\ttextBox1.Text = textBox1.Text &amp; myAttribute.toString &amp; ControlChars.crlf\n\t\tLoop\n\tEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_Matches_System_Attribute_\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection_Matches_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Matches(Attribute)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether a specified attribute is the same as an attribute in the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Matches (Attribute attribute);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attribute</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of <a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a> to compare with the attributes in this collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the attribute is contained within the collection and has the same value as the attribute in the collection; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An attribute can provide support for matching.  </p>\n<p> The difference between the Matches and <a class=\"xref\" href=\"system.componentmodel.attributecollection#System_ComponentModel_AttributeCollection_Contains_\" data-linktype=\"relative-path\">Contains</a> methods is that Matches calls the <a class=\"xref\" href=\"system.attribute#System_Attribute_Match_\" data-linktype=\"relative-path\">Match</a> method on an attribute, and <a class=\"xref\" href=\"system.componentmodel.attributecollection#System_ComponentModel_AttributeCollection_Contains_\" data-linktype=\"relative-path\">Contains</a> calls the <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a> method.  </p>\n<p> For most attributes, these methods do the same thing. For attributes that may have multiple flags, however, <a class=\"xref\" href=\"system.attribute#System_Attribute_Match_\" data-linktype=\"relative-path\">Match</a> is typically implemented so that it returns <code>true</code> if any of the flags are satisfied. For example, consider a data binding attribute with the Boolean flags &quot;SupportsSql&quot;, &quot;SupportsOleDb&quot;, and &quot;SupportsXml&quot;. This attribute may be present on a property that supports all three data binding approaches. It will often be the case that a programmer needs to know only if a particular approach is available, not all three. Therefore, a programmer could use <a class=\"xref\" href=\"system.attribute#System_Attribute_Match_\" data-linktype=\"relative-path\">Match</a> with an instance of the attribute containing only the flags the programmer needs.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example verifies that the <a class=\"xref\" href=\"system.componentmodel.browsableattribute\" data-linktype=\"relative-path\">BrowsableAttribute</a> is a member of the collection and that it has been set to <code>true</code>. It assumes that <code>button1</code> and <code>textBox1</code> have been created on a form.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic AttributeCollection.Matches Example#1\">private:\n   void MatchesAttribute()\n   {\n      // Creates a new collection and assigns it the attributes for button1.\n      AttributeCollection^ attributes;\n      attributes = TypeDescriptor::GetAttributes( button1 );\n      \n      // Checks to see if the browsable attribute is true.\n      if ( attributes-&gt;Matches( BrowsableAttribute::Yes ) )\n      {\n         textBox1-&gt;Text = &quot;button1 is browsable.&quot;;\n      }\n      else\n      {\n         textBox1-&gt;Text = &quot;button1 is not browsable.&quot;;\n      }\n   }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic AttributeCollection.Matches Example#1\">\tPrivate Sub MatchesAttribute\n\t\t&#39; Creates a new collection and assigns it the attributes for button\n\t\tDim attributes As AttributeCollection\n\t\tattributes = TypeDescriptor.GetAttributes(button1)\n\n\t\t&#39; Checks to see if the browsable attribute is true.\n\t\tIf attributes.Matches(BrowsableAttribute.Yes) Then\n\t\t\ttextBox1.Text = &quot;button1 is browsable.&quot;\n\t\tElse\n\t\t\ttextBox1.Text = &quot;button1 is not browsable.&quot;\n\t\tEnd If\n    End Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic AttributeCollection.Matches Example#1\">private void MatchesAttribute() {\n    // Creates a new collection and assigns it the attributes for button1.\n    AttributeCollection attributes;\n    attributes = TypeDescriptor.GetAttributes(button1);\n \n    // Checks to see if the browsable attribute is true.\n    if (attributes.Matches(BrowsableAttribute.Yes))\n       textBox1.Text = &quot;button1 is browsable.&quot;;\n    else\n       textBox1.Text = &quot;button1 is not browsable.&quot;;\n }\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_Matches_System_Attribute___\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection_Matches_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Matches(Attribute[])</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the attributes in the specified array are the same as the attributes in the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Matches (Attribute[] attributes);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>attributes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.attribute\" data-linktype=\"relative-path\">Attribute</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of <a class=\"xref\" href=\"system.codedom.memberattributes\" data-linktype=\"relative-path\">MemberAttributes</a> to compare with the attributes in this collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if all the attributes in the array are contained in the collection and have the same values as the attributes in the collection; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An attribute can provide support for matching.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example compares the attributes in a button and a text box to see whether they match. It assumes that <code>button1</code> and <code>textBox1</code> have been created on a form.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic AttributeCollection.Matches1 Example#1\">private:\n   void MatchesAttributes()\n   {\n      // Creates a new collection and assigns it the attributes for button1.\n      AttributeCollection^ myCollection;\n      myCollection = TypeDescriptor::GetAttributes( button1 );\n      \n      // Checks to see whether the attributes in myCollection match the attributes for textBox1.\n      array&lt;Attribute^&gt;^ myAttrArray = gcnew array&lt;Attribute^&gt;(100);\n      TypeDescriptor::GetAttributes( textBox1 )-&gt;CopyTo( myAttrArray, 0 );\n      if ( myCollection-&gt;Matches( myAttrArray ) )\n      {\n         textBox1-&gt;Text = &quot;The attributes in the button and text box match.&quot;;\n      }\n      else\n      {\n         textBox1-&gt;Text = &quot;The attributes in the button and text box do not match.&quot;;\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic AttributeCollection.Matches1 Example#1\"> private void MatchesAttributes() {\n    // Creates a new collection and assigns it the attributes for button1.\n    AttributeCollection myCollection;\n    myCollection = TypeDescriptor.GetAttributes(button1);\n \n    // Checks to see whether the attributes in myCollection match the attributes for textBox1.\n    Attribute[] myAttrArray = new Attribute[100];\n    TypeDescriptor.GetAttributes(textBox1).CopyTo(myAttrArray, 0);\n    if (myCollection.Matches(myAttrArray))\n       textBox1.Text = &quot;The attributes in the button and text box match.&quot;;\n    else\n       textBox1.Text = &quot;The attributes in the button and text box do not match.&quot;;\n }\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic AttributeCollection.Matches1 Example#1\"> Private Sub MatchesAttributes()\n     &#39; Creates a new collection and assigns it the attributes for button1.\n     Dim myCollection As AttributeCollection\n     myCollection = TypeDescriptor.GetAttributes(button1)\n        \n     &#39; Checks to see whether the attributes in myCollection match the attributes.\n     &#39; for textBox1.\n     Dim myAttrArray(100) As Attribute\n     TypeDescriptor.GetAttributes(textBox1).CopyTo(myAttrArray, 0)\n     If myCollection.Matches(myAttrArray) Then\n         textBox1.Text = &quot;The attributes in the button and text box match.&quot;\n     Else\n         textBox1.Text = &quot;The attributes in the button and text box do not match.&quot;\n     End If\n End Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_System_Collections_ICollection_Count\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection_System_Collections_ICollection_Count_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.Count</div>        \r\n          </div>\r\n    \r\n            <p>Gets the number of elements contained in the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int System.Collections.ICollection.Count { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The number of elements contained in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_System_Collections_ICollection_IsSynchronized\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection_System_Collections_ICollection_IsSynchronized_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.IsSynchronized</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether access to the collection is synchronized (thread-safe).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool System.Collections.ICollection.IsSynchronized { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if access to the collection is synchronized (thread-safe); otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_System_Collections_ICollection_SyncRoot\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection_System_Collections_ICollection_SyncRoot_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ICollection.SyncRoot</div>        \r\n          </div>\r\n    \r\n            <p>Gets an object that can be used to synchronize access to the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">object System.Collections.ICollection.SyncRoot { get; }</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An object that can be used to synchronize access to the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_ComponentModel_AttributeCollection_System_Collections_IEnumerable_GetEnumerator\">\r\n    \r\n            <a id=\"System_ComponentModel_AttributeCollection_System_Collections_IEnumerable_GetEnumerator_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IEnumerable.GetEnumerator()</div>        \r\n          </div>\r\n    \r\n            <p>Returns an <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> for the <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">System.Collections.IEnumerator IEnumerable.GetEnumerator ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a> for the <a class=\"xref\" href=\"system.collections.idictionary\" data-linktype=\"relative-path\">IDictionary</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ComponentModel.AttributeCollection.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ComponentModel.AttributeCollection.yml\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.AttributeCollection\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.AttributeCollection..ctor\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.AttributeCollection.Attributes\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.AttributeCollection.Contains\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.AttributeCollection.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.AttributeCollection.Count\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.AttributeCollection.Empty\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.AttributeCollection.FromExisting\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.AttributeCollection.GetDefaultAttribute\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.AttributeCollection.GetEnumerator\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.AttributeCollection.Item\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.AttributeCollection.Matches\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.AttributeCollection.ICollection.Count\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.AttributeCollection.ICollection.IsSynchronized\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.AttributeCollection.ICollection.SyncRoot\">\r\n<meta name=\"APIName\" content=\"System.ComponentModel.AttributeCollection.IEnumerable.GetEnumerator\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"d6d1b39f-4357-ab20-6aa7-e63cea6ce22a\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a collection of attributes.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ComponentModel/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ComponentModel.AttributeCollection\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ComponentModel.AttributeCollection.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ComponentModel.AttributeCollection.yml","open_to_public_contributors":true,"api_name":["System.ComponentModel.AttributeCollection","System.ComponentModel.AttributeCollection..ctor","System.ComponentModel.AttributeCollection.Attributes","System.ComponentModel.AttributeCollection.Contains","System.ComponentModel.AttributeCollection.CopyTo","System.ComponentModel.AttributeCollection.Count","System.ComponentModel.AttributeCollection.Empty","System.ComponentModel.AttributeCollection.FromExisting","System.ComponentModel.AttributeCollection.GetDefaultAttribute","System.ComponentModel.AttributeCollection.GetEnumerator","System.ComponentModel.AttributeCollection.Item","System.ComponentModel.AttributeCollection.Matches","System.ComponentModel.AttributeCollection.ICollection.Count","System.ComponentModel.AttributeCollection.ICollection.IsSynchronized","System.ComponentModel.AttributeCollection.ICollection.SyncRoot","System.ComponentModel.AttributeCollection.IEnumerable.GetEnumerator"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ComponentModel.AttributeCollection","System::ComponentModel::AttributeCollection","System.ComponentModel.AttributeCollection.#ctor","System::ComponentModel::AttributeCollection::#ctor","System.ComponentModel.AttributeCollection.Attributes","System::ComponentModel::AttributeCollection::Attributes","System.ComponentModel.AttributeCollection.Contains","System::ComponentModel::AttributeCollection::Contains","System.ComponentModel.AttributeCollection.CopyTo","System::ComponentModel::AttributeCollection::CopyTo","System.ComponentModel.AttributeCollection.Count","System::ComponentModel::AttributeCollection::Count","System.ComponentModel.AttributeCollection.Empty","System::ComponentModel::AttributeCollection::Empty","System.ComponentModel.AttributeCollection.FromExisting","System::ComponentModel::AttributeCollection::FromExisting","System.ComponentModel.AttributeCollection.GetDefaultAttribute","System::ComponentModel::AttributeCollection::GetDefaultAttribute","System.ComponentModel.AttributeCollection.GetEnumerator","System::ComponentModel::AttributeCollection::GetEnumerator","System.ComponentModel.AttributeCollection.Item","System::ComponentModel::AttributeCollection::Item","System.ComponentModel.AttributeCollection.Matches","System::ComponentModel::AttributeCollection::Matches","System.ComponentModel.AttributeCollection.System#Collections#ICollection#Count","System::ComponentModel::AttributeCollection::System#Collections#ICollection#Count","System.ComponentModel.AttributeCollection.System#Collections#ICollection#IsSynchronized","System::ComponentModel::AttributeCollection::System#Collections#ICollection#IsSynchronized","System.ComponentModel.AttributeCollection.System#Collections#ICollection#SyncRoot","System::ComponentModel::AttributeCollection::System#Collections#ICollection#SyncRoot","System.ComponentModel.AttributeCollection.System#Collections#IEnumerable#GetEnumerator","System::ComponentModel::AttributeCollection::System#Collections#IEnumerable#GetEnumerator"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"d6d1b39f-4357-ab20-6aa7-e63cea6ce22a","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ComponentModel/AttributeCollection.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"AttributeCollection class | Microsoft Docs","_op_ogTitle":"AttributeCollection class","description":"Represents a collection of attributes.\n","toc_asset_id":"_splitted/System.ComponentModel/toc.json","toc_rel":"_splitted/System.ComponentModel/toc.json","source_url":"","ms.assetid":"System.ComponentModel.AttributeCollection","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.componentmodel.attributecollection","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.componentmodel.attributecollection","fileRelativePath":"System.ComponentModel.AttributeCollection.html"},"themesRelativePathToOutputRoot":"_themes/"}