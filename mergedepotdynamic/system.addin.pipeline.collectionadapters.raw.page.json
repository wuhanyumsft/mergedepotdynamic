{"content":"    \r\n    <h1 id=\"System_AddIn_Pipeline_CollectionAdapters\">\r\n      <span class=\"lang-csharp\">CollectionAdapters</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Enables collections to be passed between an add-in and its host application.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static class CollectionAdapters</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CollectionAdapters</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This class provides methods that enable an <a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList&lt;T&gt;</a> collection to be converted to a <a class=\"xref\" href=\"system.addin.contract.ilistcontract-1\" data-linktype=\"relative-path\">IListContract&lt;T&gt;</a> collection. The <a class=\"xref\" href=\"system.addin.contract.ilistcontract-1\" data-linktype=\"relative-path\">IListContract&lt;T&gt;</a> collection is passed across the isolation boundary and converted back to an <a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList&lt;T&gt;</a> collection that the add-in or the host application can use.  </p>\n<p> Objects in collections must be remotable. For more information about the object types that you can pass, see <a href=\"http://msdn.microsoft.com/en-us/a6460173-9507-4b87-8c07-d4ee245d715c\" data-linktype=\"external\">Contracts, Views, and Adapters</a>.</p>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Pipeline_CollectionAdapters_ToIList__1_System_AddIn_Contract_IListContract___0__\" data-linktype=\"self-bookmark\">ToIList&lt;T&gt;(IListContract&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified <span class=\"xref\">stem.AddIn.Contract.IListContract`1</span> collection to an <span class=\"xref\">stem.Collections.Generic.IList`1</span> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Pipeline_CollectionAdapters_ToIList__2_System_AddIn_Contract_IListContract___0__System_Converter___0___1__System_Converter___1___0__\" data-linktype=\"self-bookmark\">ToIList&lt;TContract,TView&gt;(IListContract&lt;TContract&gt;,Converter&lt;TContract,TView&gt;,Converter&lt;TView,TContract&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a specified <span class=\"xref\">stem.AddIn.Contract.IListContract`1</span> collection to an <span class=\"xref\">stem.Collections.Generic.IList`1</span> collection by using converter adapters.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Pipeline_CollectionAdapters_ToIListContract__1_System_Collections_Generic_IList___0__\" data-linktype=\"self-bookmark\">ToIListContract&lt;T&gt;(IList&lt;T&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a specified <span class=\"xref\">stem.Collections.Generic.IList`1</span> collection to an <span class=\"xref\">stem.AddIn.Contract.IListContract`1</span> collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_AddIn_Pipeline_CollectionAdapters_ToIListContract__2_System_Collections_Generic_IList___0__System_Converter___0___1__System_Converter___1___0__\" data-linktype=\"self-bookmark\">ToIListContract&lt;TView,TContract&gt;(IList&lt;TView&gt;,Converter&lt;TView,TContract&gt;,Converter&lt;TContract,TView&gt;)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a specified <span class=\"xref\">stem.Collections.Generic.IList`1</span> collection to an <span class=\"xref\">stem.AddIn.Contract.IListContract`1</span> collection by using converter adapters.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Pipeline_CollectionAdapters_ToIList__1_System_AddIn_Contract_IListContract___0__\">\r\n    \r\n            <a id=\"System_AddIn_Pipeline_CollectionAdapters_ToIList_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToIList&lt;T&gt;(IListContract&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified <span class=\"xref\">stem.AddIn.Contract.IListContract`1</span> collection to an <span class=\"xref\">stem.Collections.Generic.IList`1</span> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Collections.Generic.IList&lt;T&gt; ToIList&lt;T&gt; (System.AddIn.Contract.IListContract&lt;T&gt; collection);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>collection</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.addin.contract.ilistcontract-1\" data-linktype=\"relative-path\">IListContract<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The collection from the other side of the pipeline.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList<t></t></a></div>\r\n                  </div>\r\n                  <p>The converted collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The host application or add-in can use the returned <a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList&lt;T&gt;</a> collection. The <a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList&lt;T&gt;</a> collection will have a lifetime token for the remote <a class=\"xref\" href=\"system.addin.contract.ilistcontract-1\" data-linktype=\"relative-path\">IListContract&lt;T&gt;</a> collection.  </p>\n<p> You should use this method overload only when the contents of the <a class=\"xref\" href=\"system.addin.contract.ilistcontract-1\" data-linktype=\"relative-path\">IListContract&lt;T&gt;</a> are serializable types that can be passed directly to the add-in and host (rather than types that must be adapted into views).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example implements a host-side adapter pipeline segment as described <a href=\"http://msdn.microsoft.com/en-us/b532c604-548e-4fab-b11c-377257dd0ee5\" data-linktype=\"external\">Walkthrough: Passing Collections Between Hosts and Add-Ins</a>. The example adapts the custom <code>ProcessBooks</code> method by taking the <a class=\"xref\" href=\"system.addin.contract.ilistcontract-1\" data-linktype=\"relative-path\">IListContract&lt;T&gt;</a> collection passed from the add-in and converting it to an <a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList&lt;T&gt;</a> collection, which the host application can then use.  </p>\n<pre><code class=\"lang-vb\" name=\"AddInCollectionPipelineAddInSideAdapter#3\">Public Overridable Sub ProcessBooks(ByVal books As IListContract(Of Library.IBookInfoContract)) Implements Library.ILibraryManagerContract.ProcessBooks\n\t_view.ProcessBooks(CollectionAdapters.ToIList(Of Library.IBookInfoContract, _\n\tLibraryContractsBase.BookInfo)(books, _\n\tAddressOf LibraryContractsAddInAdapters.BookInfoAddInAdapter.ContractToViewAdapter, _\n\tAddressOf LibraryContractsAddInAdapters.BookInfoAddInAdapter.ViewToContractAdapter))\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"AddInCollectionPipelineAddInSideAdapter#3\">public virtual void ProcessBooks(IListContract&lt;Library.IBookInfoContract&gt; books)\n{\n    _view.ProcessBooks(CollectionAdapters.ToIList&lt;Library.IBookInfoContract,\n        LibraryContractsBase.BookInfo&gt;(books,\n        LibraryContractsAddInAdapters.BookInfoAddInAdapter.ContractToViewAdapter,\n        LibraryContractsAddInAdapters.BookInfoAddInAdapter.ViewToContractAdapter));\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Pipeline_CollectionAdapters_ToIList__2_System_AddIn_Contract_IListContract___0__System_Converter___0___1__System_Converter___1___0__\">\r\n    \r\n            <a id=\"System_AddIn_Pipeline_CollectionAdapters_ToIList_TContract_TView__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToIList&lt;TContract,TView&gt;(IListContract&lt;TContract&gt;,Converter&lt;TContract,TView&gt;,Converter&lt;TView,TContract&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a specified <span class=\"xref\">stem.AddIn.Contract.IListContract`1</span> collection to an <span class=\"xref\">stem.Collections.Generic.IList`1</span> collection by using converter adapters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Collections.Generic.IList&lt;TView&gt; ToIList&lt;TContract,TView&gt; (System.AddIn.Contract.IListContract&lt;TContract&gt; collection, Converter&lt;TContract,TView&gt; contractViewAdapter, Converter&lt;TView,TContract&gt; viewContractAdapter);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>collection</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.addin.contract.ilistcontract-1\" data-linktype=\"relative-path\">IListContract</a>&lt;<span class=\"xref\">TContract</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The collection to pass to the other side of the pipeline.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>contractViewAdapter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.converter-2\" data-linktype=\"relative-path\">Converter</a>&lt;<span class=\"xref\">TContract</span>,<span class=\"xref\">TView</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A converter that adapts the data from the type defined in the contract to the type expected in the view.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>viewContractAdapter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.converter-2\" data-linktype=\"relative-path\">Converter</a>&lt;<span class=\"xref\">TView</span>,<span class=\"xref\">TContract</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A converter that adapts the data from the type defined in the view to the type expected by the contract.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList</a>&lt;<span class=\"xref\">TView</span>&gt;</div>\r\n                  </div>\r\n                  <p>The converted collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method overload for <a class=\"xref\" href=\"system.addin.contract.ilistcontract-1\" data-linktype=\"relative-path\">IListContract&lt;T&gt;</a> collections that contain types that must be adapted before they can be passed to the add-in or host (rather than simple serializable types that can be passed directly). The host application or add-in can use the returned <a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList&lt;T&gt;</a> collection. It will have a lifetime token for the remote <a class=\"xref\" href=\"system.addin.contract.ilistcontract-1\" data-linktype=\"relative-path\">IListContract&lt;T&gt;</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Pipeline_CollectionAdapters_ToIListContract__1_System_Collections_Generic_IList___0__\">\r\n    \r\n            <a id=\"System_AddIn_Pipeline_CollectionAdapters_ToIListContract_T__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToIListContract&lt;T&gt;(IList&lt;T&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a specified <span class=\"xref\">stem.Collections.Generic.IList`1</span> collection to an <span class=\"xref\">stem.AddIn.Contract.IListContract`1</span> collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.AddIn.Contract.IListContract&lt;T&gt; ToIListContract&lt;T&gt; (System.Collections.Generic.IList&lt;T&gt; collection);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>collection</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList<t></t></a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The collection to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.addin.contract.ilistcontract-1\" data-linktype=\"relative-path\">IListContract<t></t></a></div>\r\n                  </div>\r\n                  <p>The converted collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.addin.contract.ilistcontract-1\" data-linktype=\"relative-path\">IListContract&lt;T&gt;</a> collection can be marshaled across the isolation boundary between the add-in and its host application.  </p>\n<p> You should use this method overload only when the contents of the <a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList&lt;T&gt;</a> collection are serializable types that can be passed directly to the contract (rather than types that must be adapted into contracts).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example implements the class that defines an add-in side adapter pipeline segment. It adapts the custom <code>ProcessBooks</code> method by taking the <a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList&lt;T&gt;</a> collection passed from the add-in view segment and converting it to an <a class=\"xref\" href=\"system.addin.contract.ilistcontract-1\" data-linktype=\"relative-path\">IListContract&lt;T&gt;</a> collection that can be marshaled across the isolation boundary to the host.  </p>\n<pre><code class=\"lang-cs\" name=\"AddInCollectionPipelineHostSideAdapter#4\">public override void ProcessBooks(IList&lt;LibraryContractsHAV.BookInfo&gt; books) {\n    _contract.ProcessBooks(CollectionAdapters.ToIListContract&lt;LibraryContractsHAV.BookInfo,\n        Library.IBookInfoContract&gt;(books,\n        LibraryContractsHostAdapters.BookInfoHostAdapter.ViewToContractAdapter,\n        LibraryContractsHostAdapters.BookInfoHostAdapter.ContractToViewAdapter));\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"AddInCollectionPipelineHostSideAdapter#4\">Public Overrides Sub ProcessBooks(ByVal books As IList(Of LibraryContractsHAV.BookInfo))\n    _contract.ProcessBooks(CollectionAdapters.ToIListContract(Of LibraryContractsHAV.BookInfo, _\n    Library.IBookInfoContract)(books, _\n    AddressOf LibraryContractsHostAdapters.BookInfoHostAdapter.ViewToContractAdapter, _\n    AddressOf LibraryContractsHostAdapters.BookInfoHostAdapter.ContractToViewAdapter))\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_AddIn_Pipeline_CollectionAdapters_ToIListContract__2_System_Collections_Generic_IList___0__System_Converter___0___1__System_Converter___1___0__\">\r\n    \r\n            <a id=\"System_AddIn_Pipeline_CollectionAdapters_ToIListContract_TView_TContract__\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToIListContract&lt;TView,TContract&gt;(IList&lt;TView&gt;,Converter&lt;TView,TContract&gt;,Converter&lt;TContract,TView&gt;)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a specified <span class=\"xref\">stem.Collections.Generic.IList`1</span> collection to an <span class=\"xref\">stem.AddIn.Contract.IListContract`1</span> collection by using converter adapters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.AddIn.Contract.IListContract&lt;TContract&gt; ToIListContract&lt;TView,TContract&gt; (System.Collections.Generic.IList&lt;TView&gt; collection, Converter&lt;TView,TContract&gt; viewContractAdapter, Converter&lt;TContract,TView&gt; contractViewAdapter);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>collection</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList</a>&lt;<span class=\"xref\">TView</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The collection to convert.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>viewContractAdapter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.converter-2\" data-linktype=\"relative-path\">Converter</a>&lt;<span class=\"xref\">TView</span>,<span class=\"xref\">TContract</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A converter that adapts the data from the type defined in the view to the type expected by the contract.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>contractViewAdapter</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.converter-2\" data-linktype=\"relative-path\">Converter</a>&lt;<span class=\"xref\">TContract</span>,<span class=\"xref\">TView</span>&gt;</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A converter that adapts the data from the type defined in the contract to the type expected in the view.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.addin.contract.ilistcontract-1\" data-linktype=\"relative-path\">IListContract</a>&lt;<span class=\"xref\">TContract</span>&gt;</div>\r\n                  </div>\r\n                  <p>The converted collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use this method overload for <a class=\"xref\" href=\"system.collections.generic.ilist-1\" data-linktype=\"relative-path\">IList&lt;T&gt;</a> collections that contain types that must be adapted into contracts before they can be passed to the contract (rather than simple serializable types that can be passed directly). The <a class=\"xref\" href=\"system.addin.contract.ilistcontract-1\" data-linktype=\"relative-path\">IListContract&lt;T&gt;</a> collection can be marshaled across the isolation boundary between an add-in and its host application.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.AddIn.Pipeline.CollectionAdapters.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.AddIn.Pipeline.CollectionAdapters.yml\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Pipeline.CollectionAdapters\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Pipeline.CollectionAdapters.ToIList&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Pipeline.CollectionAdapters.ToIList&lt;TContract,TView&gt;\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Pipeline.CollectionAdapters.ToIListContract&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.AddIn.Pipeline.CollectionAdapters.ToIListContract&lt;TView,TContract&gt;\">\r\n<meta name=\"APILocation\" content=\"System.AddIn.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"49deb2c5-69f1-e7fe-a108-43b2a9ddd778\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Enables collections to be passed between an add-in and its host application.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.AddIn.Pipeline/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.AddIn.Pipeline.CollectionAdapters\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.AddIn.Pipeline.CollectionAdapters.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.AddIn.Pipeline.CollectionAdapters.yml","open_to_public_contributors":true,"api_name":["System.AddIn.Pipeline.CollectionAdapters","System.AddIn.Pipeline.CollectionAdapters.ToIList<T>","System.AddIn.Pipeline.CollectionAdapters.ToIList<TContract,TView>","System.AddIn.Pipeline.CollectionAdapters.ToIListContract<T>","System.AddIn.Pipeline.CollectionAdapters.ToIListContract<TView,TContract>"],"api_location":["System.AddIn.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.AddIn.Pipeline.CollectionAdapters","System::AddIn::Pipeline::CollectionAdapters","System.AddIn.Pipeline.CollectionAdapters.ToIList``1","System::AddIn::Pipeline::CollectionAdapters::ToIList``1","System.AddIn.Pipeline.CollectionAdapters.ToIList``2","System::AddIn::Pipeline::CollectionAdapters::ToIList``2","System.AddIn.Pipeline.CollectionAdapters.ToIListContract``1","System::AddIn::Pipeline::CollectionAdapters::ToIListContract``1","System.AddIn.Pipeline.CollectionAdapters.ToIListContract``2","System::AddIn::Pipeline::CollectionAdapters::ToIListContract``2"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"49deb2c5-69f1-e7fe-a108-43b2a9ddd778","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.AddIn.Pipeline/CollectionAdapters.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CollectionAdapters class | Microsoft Docs","_op_ogTitle":"CollectionAdapters class","description":"Enables collections to be passed between an add-in and its host application.\n","toc_asset_id":"_splitted/System.AddIn.Pipeline/toc.json","toc_rel":"_splitted/System.AddIn.Pipeline/toc.json","source_url":"","ms.assetid":"System.AddIn.Pipeline.CollectionAdapters","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.addin.pipeline.collectionadapters","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.addin.pipeline.collectionadapters","fileRelativePath":"System.AddIn.Pipeline.CollectionAdapters.html"},"themesRelativePathToOutputRoot":"_themes/"}