{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">DateTime</span>\r\n      Struct\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Represents an instant in time, typically expressed as a date and time of day.  </p>\n<p> To browse the .NET Framework source code for this type, see the <a href=\"http://referencesource-beta.microsoft.com/#mscorlib/system/datetime.cs#df6b1eba7461813b\" data-linktype=\"external\">Reference Source</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public struct DateTime : IComparable, IComparable&lt;DateTime&gt;, IConvertible, IEquatable&lt;DateTime&gt;, IFormattable, System.Runtime.Serialization.ISerializable</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">DateTime</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<div class=\"NOTE\"><h5>Note</h5><p> To view the .NET Framework source code for this type, see the <a href=\"http://referencesource-beta.microsoft.com/#mscorlib/system/datetime.cs#df6b1eba7461813b\" data-linktype=\"external\">Reference Source</a>. You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <a href=\"http://referencesource.microsoft.com/\" data-linktype=\"external\">instructions</a>.  </p>\n</div>\n<p> The DateTime value type represents dates and times with values ranging from 00:00:00 (midnight), January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D. (C.E.) in the Gregorian calendar.  </p>\n<p> Time values are measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D. (C.E.) in the <a class=\"xref\" href=\"system.globalization.gregoriancalendar\" data-linktype=\"relative-path\">GregorianCalendar</a> calendar (excluding ticks that would be added by leap seconds). For example, a ticks value of 31241376000000000L represents the date, Friday, January 01, 0100 12:00:00 midnight. A DateTime value is always expressed in the context of an explicit or default calendar.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <a class=\"xref\" href=\"system.timespan#System_TimeSpan_TicksPerDay\" data-linktype=\"relative-path\">System.TimeSpan.TicksPerDay</a>, <a class=\"xref\" href=\"system.timespan#System_TimeSpan_TicksPerHour\" data-linktype=\"relative-path\">System.TimeSpan.TicksPerHour</a>, <a class=\"xref\" href=\"system.timespan#System_TimeSpan_TicksPerMinute\" data-linktype=\"relative-path\">System.TimeSpan.TicksPerMinute</a>, <a class=\"xref\" href=\"system.timespan#System_TimeSpan_TicksPerSecond\" data-linktype=\"relative-path\">System.TimeSpan.TicksPerSecond</a>, or <a class=\"xref\" href=\"system.timespan#System_TimeSpan_TicksPerMillisecond\" data-linktype=\"relative-path\">System.TimeSpan.TicksPerMillisecond</a> constant to perform the conversion. For example, to add the number of seconds represented by a specified number of ticks to the <a class=\"xref\" href=\"system.datetime#System_DateTime_Second_\" data-linktype=\"relative-path\">Second</a> component of a DateTime value, you can use the expression <code>dateValue.Second + nTicks/Timespan.TicksPerSecond</code>.  </p>\n</div>\n<p> In this section:  </p>\n<p> <a href=\"#instantiating_datetime\" data-linktype=\"self-bookmark\">Instantiating a DateTime object</a><br> <a href=\"#datetime_values_strings\" data-linktype=\"self-bookmark\">DateTime values and their string representations</a><br> <a href=\"#parsing\" data-linktype=\"self-bookmark\">Converting strings to DateTime values</a><br> <a href=\"#datetime_versions\" data-linktype=\"self-bookmark\">Version considerations</a><br> <a href=\"#datetime_values\" data-linktype=\"self-bookmark\">DateTime values</a><br> <a href=\"#datetime_ops\" data-linktype=\"self-bookmark\">DateTime operations</a><br> <a href=\"#Resolution\" data-linktype=\"self-bookmark\">DateTime resolution</a><br> <a href=\"#datetime_timespan\" data-linktype=\"self-bookmark\">DateTime vs. TimeSpan</a><br> <a href=\"#Calendars\" data-linktype=\"self-bookmark\">DateTime values and calendars</a><br> <a href=\"#Persisting\" data-linktype=\"self-bookmark\">Persisting DateTime values</a><br> <a href=\"#com_interop\" data-linktype=\"self-bookmark\">COM interop considerations</a>  </p>\n<p><a name=\"instantiating_datetime\"></a>   </p>\n<h2 id=\"instantiating-a-datetime-object\">Instantiating a DateTime object</h2>\n<p> You can create a new DateTime value in any of the following ways:  </p>\n<ul>\n<li><p>By calling any of the overloads of the DateTime constructor that allow you to specify specific elements of the date and time value (such as the year, month, and day, or the number of ticks). The following statement illustrates a call to one of the DateTime constructors to create a date with a specific year, month, day, hour, minute, and second.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTime.Instantiation#1\">      Dim date1 As New Date(2008, 5, 1, 8, 30, 52)\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.Instantiation#1\">      DateTime date1 = new DateTime(2008, 5, 1, 8, 30, 52);\n</code></pre></li>\n<li><p>By using any compiler-specific syntax for declaring date and time values. For example, the following Visual Basic statement initializes a new DateTime value.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTime.Instantiation#2\">      Dim date1 As Date = #5/1/2008 8:30:52AM#\n</code></pre></li>\n<li><p>By assigning the DateTime object a date and time value returned by a property or method. The following example assigns the current date and time, the current Coordinated Universal Time (UTC) date and time, and the current date to three new DateTime variables.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTime.Instantiation#3\">      Dim date1 As Date = Date.Now\n      Dim date2 As Date = Date.UtcNow\n      Dim date3 As Date = Date.Today\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.Instantiation#3\">      DateTime date1 = DateTime.Now;\n      DateTime date2 = DateTime.UtcNow;\n      DateTime date3 = DateTime.Today;\n</code></pre></li>\n<li><p>By parsing the string representation of a date and time value. The <a class=\"xref\" href=\"system.datetime#System_DateTime_Parse_\" data-linktype=\"relative-path\">Parse</a>, <a class=\"xref\" href=\"system.datetime#System_DateTime_ParseExact_\" data-linktype=\"relative-path\">ParseExact</a>, <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParse_\" data-linktype=\"relative-path\">TryParse</a>, and <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParseExact_\" data-linktype=\"relative-path\">TryParseExact</a> methods all convert a string to its equivalent date and time value. The following example uses the <a class=\"xref\" href=\"system.datetime#System_DateTime_Parse_\" data-linktype=\"relative-path\">Parse</a> method to parse a string and convert it to a DateTime value.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTime.Instantiation#4\">      Dim dateString As String = &quot;5/1/2008 8:30:52 AM&quot;\n      Dim date1 As Date = Date.Parse(dateString, _\n                               System.Globalization.CultureInfo.InvariantCulture) \n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.Instantiation#4\">      string dateString = &quot;5/1/2008 8:30:52 AM&quot;;\n      DateTime date1 = DateTime.Parse(dateString, \n                                System.Globalization.CultureInfo.InvariantCulture); \n</code></pre><p> Note that the <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParse_\" data-linktype=\"relative-path\">TryParse</a> and <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParseExact_\" data-linktype=\"relative-path\">TryParseExact</a> methods indicate whether a particular string contains a valid representation of a DateTime value in addition to performing the conversion.  </p>\n</li>\n<li><p>By calling the DateTime structure&#39;s implicit default constructor. (For details on the implicit default constructor of a value type, see <a href=\"../Topic/Value%20Types%20(C%23%20Reference).md\" data-linktype=\"relative-path\">Value Types</a>.) An approximate equivalent, for compilers that support it, is declaring a DateTime value without explicitly assigning a date and time to it. The following example illustrates a call to the DateTime implicit default constructor in C# and Visual Basic, as well as a DateTime variable declaration with no assignment in Visual Basic.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTime.Instantiation#5\">      Dim dat1 As DateTime\n      &#39; The following method call displays 1/1/0001 12:00:00 AM.\n      Console.WriteLine(dat1.ToString(System.Globalization.CultureInfo.InvariantCulture))\n      &#39; The following method call displays True.\n      Console.WriteLine(dat1.Equals(Date.MinValue))\n      \n      Dim dat2 As New DateTime()\n      &#39; The following method call displays 1/1/0001 12:00:00 AM.\n      Console.WriteLine(dat2.ToString(System.Globalization.CultureInfo.InvariantCulture))\n      &#39; The following method call displays True.\n      Console.WriteLine(dat2.Equals(Date.MinValue))\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.Instantiation#5\">      DateTime dat1 = new DateTime();\n      // The following method call displays 1/1/0001 12:00:00 AM.\n      Console.WriteLine(dat1.ToString(System.Globalization.CultureInfo.InvariantCulture));\n      // The following method call displays True.\n      Console.WriteLine(dat1.Equals(DateTime.MinValue));\n</code></pre></li>\n</ul>\n<p><a name=\"datetime_values_strings\"></a>   </p>\n<h2 id=\"datetime-values-and-their-string-representations\">DateTime values and their string representations</h2>\n<p> Internally, all DateTime values are represented as the number of ticks (the number of 100-nanosecond intervals) that have elapsed since 12:00:00 midnight, January 1, 0001. The actual DateTime value is independent of the way in which that value appears when displayed in a user interface element or when written to a file. The appearance of a DateTime value is the result of a formatting operation. Formatting is the process of converting a value to its string representation.  </p>\n<p> Because the appearance of date and time values is dependent on such factors as culture, international standards, application requirements, and personal preference, the DateTime structure offers a great deal of flexibility in formatting date and time values through the overloads of its <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_\" data-linktype=\"relative-path\">ToString</a> method. The default <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString\" data-linktype=\"relative-path\">System.DateTime.ToString()</a> method returns the string representation of a date and time value using the current culture&#39;s short date and long time pattern. The following example uses the default <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString\" data-linktype=\"relative-path\">System.DateTime.ToString()</a> method to display the date and time using the short date and long time pattern for the en-US culture, the current culture on the computer on which the example was run.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTime.Formatting#1\">      Dim date1 As Date = #3/1/2008 7:00AM#\n      Console.WriteLine(date1.ToString())\n      &#39; For en-US culture, displays 3/1/2008 7:00:00 AM\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.Formatting#1\">      DateTime date1 = new DateTime(2008, 3, 1, 7, 0, 0);\n      Console.WriteLine(date1.ToString());\n      // For en-US culture, displays 3/1/2008 7:00:00 AM\n</code></pre><p> The <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_IFormatProvider_\" data-linktype=\"relative-path\">System.DateTime.ToString(IFormatProvider)</a> method returns the string representation of a date and time value using the short date and long time pattern of a specific culture. The following example uses the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_IFormatProvider_\" data-linktype=\"relative-path\">System.DateTime.ToString(IFormatProvider)</a> method to display the date and time using the short date and long time pattern for the fr-FR culture.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTime.Formatting#2\">      Dim date1 As Date = #3/1/2008 7:00AM#\n      Console.WriteLine(date1.ToString(System.Globalization.CultureInfo.CreateSpecificCulture(&quot;fr-FR&quot;)))\n      &#39; Displays 01/03/2008 07:00:00\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.Formatting#2\">      DateTime date1 = new DateTime(2008, 3, 1, 7, 0, 0);\n      Console.WriteLine(date1.ToString(System.Globalization.CultureInfo.CreateSpecificCulture(&quot;fr-FR&quot;)));\n      // Displays 01/03/2008 07:00:00\n</code></pre><p> The <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_String_\" data-linktype=\"relative-path\">System.DateTime.ToString(String)</a> method returns the string representation of the date and time in a format defined by a standard or custom format specifier and using the formatting conventions of the current culture. The following example uses the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_String_\" data-linktype=\"relative-path\">System.DateTime.ToString(String)</a> method to display the full date and time pattern for the en-US culture, the current culture on the computer on which the example was run.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTime.Formatting#3\">      Dim date1 As Date = #3/1/2008 7:00AM#\n      Console.WriteLine(date1.ToString(&quot;F&quot;))\n      &#39; Displays Saturday, March 01, 2008 7:00:00 AM\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.Formatting#3\">      DateTime date1 = new DateTime(2008, 3, 1, 7, 0, 0);\n      Console.WriteLine(date1.ToString(&quot;F&quot;));\n      // Displays Saturday, March 01, 2008 7:00:00 AM\n</code></pre><p> The <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">System.DateTime.ToString(String,IFormatProvider)</a> method returns the string representation of the date and time in a format defined by a specific format specifier and using the formatting conventions of a specific culture. The following example uses the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">System.DateTime.ToString(String,IFormatProvider)</a> method to display the full date and time pattern for the fr-FR culture.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTime.Formatting#4\">      Dim date1 As Date = #3/1/2008 7:00AM#\n      Console.WriteLine(date1.ToString(&quot;F&quot;, New System.Globalization.CultureInfo(&quot;fr-FR&quot;)))\n      &#39; Displays samedi 1 mars 2008 07:00:00\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.Formatting#4\">      DateTime date1 = new DateTime(2008, 3, 1, 7, 0, 0);\n      Console.WriteLine(date1.ToString(&quot;F&quot;, new System.Globalization.CultureInfo(&quot;fr-FR&quot;)));\n      // Displays samedi 1 mars 2008 07:00:00\n</code></pre><p> For more information about formatting DateTime values, see  <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a> and <a href=\"../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Date and Time Format Strings</a>.  </p>\n<p><a name=\"parsing\"></a>   </p>\n<h2 id=\"converting-strings-to-datetime-values\">Converting strings to DateTime values</h2>\n<p> Parsing involves converting the string representation of a date and time to a DateTime value. Typically, date and time strings have two different usages in applications:  </p>\n<ul>\n<li><p>They represent a date and time that can take a variety of forms and that reflect the conventions of either the current culture or a specific culture. For example, an application may allow a user whose current culture is en-US to input a date value as &quot;12/15/2013&quot; or &quot;December 15, 2013&quot;, and allow a user whose current culture is en-GB to input a date value as &quot;15/12/2013&quot; or &quot;15 December 2013&quot;.  </p>\n</li>\n<li><p>They represent a date and time in a predefined format. For example, an application may serialize a date as &quot;20130103&quot; independently of the culture on which the app is running, or it may require that a date be input in the current culture&#39;s short date format.  </p>\n<p>You can use the <a class=\"xref\" href=\"system.datetime#System_DateTime_Parse_\" data-linktype=\"relative-path\">Parse</a> or <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParse_\" data-linktype=\"relative-path\">TryParse</a> method to convert a string that might reflect one of the common date and time formats used by a culture to a DateTime value. The following example shows how you can use <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParse_\" data-linktype=\"relative-path\">TryParse</a> to convert date strings in a number of different culture-specific formats to a DateTime value. It changes the current culture to English (Great Britain) and calls the <a class=\"xref\" href=\"system.datetime#System_DateTime_GetDateTimeFormats\" data-linktype=\"relative-path\">GetDateTimeFormats()</a> method to generate an array of date and time strings. It then passes each element in the array to the <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParse_\" data-linktype=\"relative-path\">TryParse</a> method. The output from the example shows that the parsing method was able to successfully convert each of the culture-specific date and time strings.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Parsing#1\">using System;\nusing System.Collections.Generic;\nusing System.Globalization;\nusing System.Threading;\n\npublic class Example\n{\n   public static void Main()\n   {\n      Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture(&quot;en-GB&quot;);\n\n      DateTime date1 = new DateTime(2013, 6, 1, 12, 32, 30);\n      List&lt;string&gt; badFormats = new List&lt;String&gt;();\n      \n      Console.WriteLine(&quot;{0,-37} {1,-19}\\n&quot;, &quot;Date String&quot;, &quot;Date&quot;);\n      foreach (var dateString in date1.GetDateTimeFormats()) {\n         DateTime parsedDate;\n         if (DateTime.TryParse(dateString, out parsedDate))\n            Console.WriteLine(&quot;{0,-37} {1,-19}&quot;, dateString, DateTime.Parse(dateString));\n         else\n            badFormats.Add(dateString);\n      } \n      \n      // Display strings that could not be parsed.\n      if (badFormats.Count &gt; 0) {\n         Console.WriteLine(&quot;\\nStrings that could not be parsed: &quot;);\n         foreach (var badFormat in badFormats)\n            Console.WriteLine(&quot;   {0}&quot;, badFormat);         \n      }\n   }\n}\n// The example displays the following output:\n//       Date String                           Date               \n//       \n//       01/06/2013                            01/06/2013 00:00:00\n//       01/06/13                              01/06/2013 00:00:00\n//       1/6/13                                01/06/2013 00:00:00\n//       1.6.13                                01/06/2013 00:00:00\n//       2013-06-01                            01/06/2013 00:00:00\n//       01 June 2013                          01/06/2013 00:00:00\n//       1 June 2013                           01/06/2013 00:00:00\n//       01 June 2013 12:32                    01/06/2013 12:32:00\n//       01 June 2013 12:32                    01/06/2013 12:32:00\n//       01 June 2013 12:32 PM                 01/06/2013 12:32:00\n//       01 June 2013 12:32 PM                 01/06/2013 12:32:00\n//       1 June 2013 12:32                     01/06/2013 12:32:00\n//       1 June 2013 12:32                     01/06/2013 12:32:00\n//       1 June 2013 12:32 PM                  01/06/2013 12:32:00\n//       1 June 2013 12:32 PM                  01/06/2013 12:32:00\n//       01 June 2013 12:32:30                 01/06/2013 12:32:30\n//       01 June 2013 12:32:30                 01/06/2013 12:32:30\n//       01 June 2013 12:32:30 PM              01/06/2013 12:32:30\n//       01 June 2013 12:32:30 PM              01/06/2013 12:32:30\n//       1 June 2013 12:32:30                  01/06/2013 12:32:30\n//       1 June 2013 12:32:30                  01/06/2013 12:32:30\n//       1 June 2013 12:32:30 PM               01/06/2013 12:32:30\n//       1 June 2013 12:32:30 PM               01/06/2013 12:32:30\n//       01/06/2013 12:32                      01/06/2013 12:32:00\n//       01/06/2013 12:32                      01/06/2013 12:32:00\n//       01/06/2013 12:32 PM                   01/06/2013 12:32:00\n//       01/06/2013 12:32 PM                   01/06/2013 12:32:00\n//       01/06/13 12:32                        01/06/2013 12:32:00\n//       01/06/13 12:32                        01/06/2013 12:32:00\n//       01/06/13 12:32 PM                     01/06/2013 12:32:00\n//       01/06/13 12:32 PM                     01/06/2013 12:32:00\n//       1/6/13 12:32                          01/06/2013 12:32:00\n//       1/6/13 12:32                          01/06/2013 12:32:00\n//       1/6/13 12:32 PM                       01/06/2013 12:32:00\n//       1/6/13 12:32 PM                       01/06/2013 12:32:00\n//       1.6.13 12:32                          01/06/2013 12:32:00\n//       1.6.13 12:32                          01/06/2013 12:32:00\n//       1.6.13 12:32 PM                       01/06/2013 12:32:00\n//       1.6.13 12:32 PM                       01/06/2013 12:32:00\n//       2013-06-01 12:32                      01/06/2013 12:32:00\n//       2013-06-01 12:32                      01/06/2013 12:32:00\n//       2013-06-01 12:32 PM                   01/06/2013 12:32:00\n//       2013-06-01 12:32 PM                   01/06/2013 12:32:00\n//       01/06/2013 12:32:30                   01/06/2013 12:32:30\n//       01/06/2013 12:32:30                   01/06/2013 12:32:30\n//       01/06/2013 12:32:30 PM                01/06/2013 12:32:30\n//       01/06/2013 12:32:30 PM                01/06/2013 12:32:30\n//       01/06/13 12:32:30                     01/06/2013 12:32:30\n//       01/06/13 12:32:30                     01/06/2013 12:32:30\n//       01/06/13 12:32:30 PM                  01/06/2013 12:32:30\n//       01/06/13 12:32:30 PM                  01/06/2013 12:32:30\n//       1/6/13 12:32:30                       01/06/2013 12:32:30\n//       1/6/13 12:32:30                       01/06/2013 12:32:30\n//       1/6/13 12:32:30 PM                    01/06/2013 12:32:30\n//       1/6/13 12:32:30 PM                    01/06/2013 12:32:30\n//       1.6.13 12:32:30                       01/06/2013 12:32:30\n//       1.6.13 12:32:30                       01/06/2013 12:32:30\n//       1.6.13 12:32:30 PM                    01/06/2013 12:32:30\n//       1.6.13 12:32:30 PM                    01/06/2013 12:32:30\n//       2013-06-01 12:32:30                   01/06/2013 12:32:30\n//       2013-06-01 12:32:30                   01/06/2013 12:32:30\n//       2013-06-01 12:32:30 PM                01/06/2013 12:32:30\n//       2013-06-01 12:32:30 PM                01/06/2013 12:32:30\n//       01 June                               01/06/2013 00:00:00\n//       01 June                               01/06/2013 00:00:00\n//       2013-06-01T12:32:30.0000000           01/06/2013 12:32:30\n//       2013-06-01T12:32:30.0000000           01/06/2013 12:32:30\n//       Sat, 01 Jun 2013 12:32:30 GMT         01/06/2013 05:32:30\n//       Sat, 01 Jun 2013 12:32:30 GMT         01/06/2013 05:32:30\n//       2013-06-01T12:32:30                   01/06/2013 12:32:30\n//       12:32                                 22/04/2013 12:32:00\n//       12:32                                 22/04/2013 12:32:00\n//       12:32 PM                              22/04/2013 12:32:00\n//       12:32 PM                              22/04/2013 12:32:00\n//       12:32:30                              22/04/2013 12:32:30\n//       12:32:30                              22/04/2013 12:32:30\n//       12:32:30 PM                           22/04/2013 12:32:30\n//       12:32:30 PM                           22/04/2013 12:32:30\n//       2013-06-01 12:32:30Z                  01/06/2013 05:32:30\n//       01 June 2013 19:32:30                 01/06/2013 19:32:30\n//       01 June 2013 19:32:30                 01/06/2013 19:32:30\n//       01 June 2013 07:32:30 PM              01/06/2013 19:32:30\n//       01 June 2013 7:32:30 PM               01/06/2013 19:32:30\n//       1 June 2013 19:32:30                  01/06/2013 19:32:30\n//       1 June 2013 19:32:30                  01/06/2013 19:32:30\n//       1 June 2013 07:32:30 PM               01/06/2013 19:32:30\n//       1 June 2013 7:32:30 PM                01/06/2013 19:32:30\n//       June 2013                             01/06/2013 00:00:00\n//       June 2013                             01/06/2013 00:00:00\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Parsing#1\">Imports System.Collections.Generic\nImports System.Globalization\nImports System.Threading\n\nModule Example\n   Public Sub Main()\n      Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture(&quot;en-GB&quot;)\n\n      Dim date1 As DateTime = New DateTime(2013, 6, 1, 12, 32, 30)\n      Dim badFormats As New List(Of String)\n      \n      Console.WriteLine(&quot;{0,-37} {1,-19}&quot;, &quot;Date String&quot;, &quot;Date&quot;)\n      Console.WriteLine()\n      For Each dateString As String In date1.GetDateTimeFormats()\n         Dim parsedDate As DateTime\n         If DateTime.TryParse(dateString, parsedDate) Then\n            Console.WriteLine(&quot;{0,-37} {1,-19:g}&quot;, dateString, DateTime.Parse(dateString))\n         Else\n            badFormats.Add(dateString)\n         End If   \n      Next \n      \n      &#39; Display strings that could not be parsed.\n      If badFormats.Count &gt; 0 Then\n         Console.WriteLine()\n         Console.WriteLine(&quot;Strings that could not be parsed: &quot;)\n         For Each badFormat In badFormats\n            Console.WriteLine(&quot;   {0}&quot;, badFormat)         \n         Next\n      End If\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Date String                           Date               \n&#39;       \n&#39;       01/06/2013                            01/06/2013 00:00:00\n&#39;       01/06/13                              01/06/2013 00:00:00\n&#39;       1/6/13                                01/06/2013 00:00:00\n&#39;       1.6.13                                01/06/2013 00:00:00\n&#39;       2013-06-01                            01/06/2013 00:00:00\n&#39;       01 June 2013                          01/06/2013 00:00:00\n&#39;       1 June 2013                           01/06/2013 00:00:00\n&#39;       01 June 2013 12:32                    01/06/2013 12:32:00\n&#39;       01 June 2013 12:32                    01/06/2013 12:32:00\n&#39;       01 June 2013 12:32 PM                 01/06/2013 12:32:00\n&#39;       01 June 2013 12:32 PM                 01/06/2013 12:32:00\n&#39;       1 June 2013 12:32                     01/06/2013 12:32:00\n&#39;       1 June 2013 12:32                     01/06/2013 12:32:00\n&#39;       1 June 2013 12:32 PM                  01/06/2013 12:32:00\n&#39;       1 June 2013 12:32 PM                  01/06/2013 12:32:00\n&#39;       01 June 2013 12:32:30                 01/06/2013 12:32:30\n&#39;       01 June 2013 12:32:30                 01/06/2013 12:32:30\n&#39;       01 June 2013 12:32:30 PM              01/06/2013 12:32:30\n&#39;       01 June 2013 12:32:30 PM              01/06/2013 12:32:30\n&#39;       1 June 2013 12:32:30                  01/06/2013 12:32:30\n&#39;       1 June 2013 12:32:30                  01/06/2013 12:32:30\n&#39;       1 June 2013 12:32:30 PM               01/06/2013 12:32:30\n&#39;       1 June 2013 12:32:30 PM               01/06/2013 12:32:30\n&#39;       01/06/2013 12:32                      01/06/2013 12:32:00\n&#39;       01/06/2013 12:32                      01/06/2013 12:32:00\n&#39;       01/06/2013 12:32 PM                   01/06/2013 12:32:00\n&#39;       01/06/2013 12:32 PM                   01/06/2013 12:32:00\n&#39;       01/06/13 12:32                        01/06/2013 12:32:00\n&#39;       01/06/13 12:32                        01/06/2013 12:32:00\n&#39;       01/06/13 12:32 PM                     01/06/2013 12:32:00\n&#39;       01/06/13 12:32 PM                     01/06/2013 12:32:00\n&#39;       1/6/13 12:32                          01/06/2013 12:32:00\n&#39;       1/6/13 12:32                          01/06/2013 12:32:00\n&#39;       1/6/13 12:32 PM                       01/06/2013 12:32:00\n&#39;       1/6/13 12:32 PM                       01/06/2013 12:32:00\n&#39;       1.6.13 12:32                          01/06/2013 12:32:00\n&#39;       1.6.13 12:32                          01/06/2013 12:32:00\n&#39;       1.6.13 12:32 PM                       01/06/2013 12:32:00\n&#39;       1.6.13 12:32 PM                       01/06/2013 12:32:00\n&#39;       2013-06-01 12:32                      01/06/2013 12:32:00\n&#39;       2013-06-01 12:32                      01/06/2013 12:32:00\n&#39;       2013-06-01 12:32 PM                   01/06/2013 12:32:00\n&#39;       2013-06-01 12:32 PM                   01/06/2013 12:32:00\n&#39;       01/06/2013 12:32:30                   01/06/2013 12:32:30\n&#39;       01/06/2013 12:32:30                   01/06/2013 12:32:30\n&#39;       01/06/2013 12:32:30 PM                01/06/2013 12:32:30\n&#39;       01/06/2013 12:32:30 PM                01/06/2013 12:32:30\n&#39;       01/06/13 12:32:30                     01/06/2013 12:32:30\n&#39;       01/06/13 12:32:30                     01/06/2013 12:32:30\n&#39;       01/06/13 12:32:30 PM                  01/06/2013 12:32:30\n&#39;       01/06/13 12:32:30 PM                  01/06/2013 12:32:30\n&#39;       1/6/13 12:32:30                       01/06/2013 12:32:30\n&#39;       1/6/13 12:32:30                       01/06/2013 12:32:30\n&#39;       1/6/13 12:32:30 PM                    01/06/2013 12:32:30\n&#39;       1/6/13 12:32:30 PM                    01/06/2013 12:32:30\n&#39;       1.6.13 12:32:30                       01/06/2013 12:32:30\n&#39;       1.6.13 12:32:30                       01/06/2013 12:32:30\n&#39;       1.6.13 12:32:30 PM                    01/06/2013 12:32:30\n&#39;       1.6.13 12:32:30 PM                    01/06/2013 12:32:30\n&#39;       2013-06-01 12:32:30                   01/06/2013 12:32:30\n&#39;       2013-06-01 12:32:30                   01/06/2013 12:32:30\n&#39;       2013-06-01 12:32:30 PM                01/06/2013 12:32:30\n&#39;       2013-06-01 12:32:30 PM                01/06/2013 12:32:30\n&#39;       01 June                               01/06/2013 00:00:00\n&#39;       01 June                               01/06/2013 00:00:00\n&#39;       2013-06-01T12:32:30.0000000           01/06/2013 12:32:30\n&#39;       2013-06-01T12:32:30.0000000           01/06/2013 12:32:30\n&#39;       Sat, 01 Jun 2013 12:32:30 GMT         01/06/2013 05:32:30\n&#39;       Sat, 01 Jun 2013 12:32:30 GMT         01/06/2013 05:32:30\n&#39;       2013-06-01T12:32:30                   01/06/2013 12:32:30\n&#39;       12:32                                 22/04/2013 12:32:00\n&#39;       12:32                                 22/04/2013 12:32:00\n&#39;       12:32 PM                              22/04/2013 12:32:00\n&#39;       12:32 PM                              22/04/2013 12:32:00\n&#39;       12:32:30                              22/04/2013 12:32:30\n&#39;       12:32:30                              22/04/2013 12:32:30\n&#39;       12:32:30 PM                           22/04/2013 12:32:30\n&#39;       12:32:30 PM                           22/04/2013 12:32:30\n&#39;       2013-06-01 12:32:30Z                  01/06/2013 05:32:30\n&#39;       01 June 2013 19:32:30                 01/06/2013 19:32:30\n&#39;       01 June 2013 19:32:30                 01/06/2013 19:32:30\n&#39;       01 June 2013 07:32:30 PM              01/06/2013 19:32:30\n&#39;       01 June 2013 7:32:30 PM               01/06/2013 19:32:30\n&#39;       1 June 2013 19:32:30                  01/06/2013 19:32:30\n&#39;       1 June 2013 19:32:30                  01/06/2013 19:32:30\n&#39;       1 June 2013 07:32:30 PM               01/06/2013 19:32:30\n&#39;       1 June 2013 7:32:30 PM                01/06/2013 19:32:30\n&#39;       June 2013                             01/06/2013 00:00:00\n&#39;       June 2013                             01/06/2013 00:00:00\n</code></pre><p>You can use the <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParse_\" data-linktype=\"relative-path\">TryParse</a> and <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParseExact_\" data-linktype=\"relative-path\">TryParseExact</a> methods to convert a date and time string that must match a particular format or formats to a DateTime value. You specify the required format or formats as a parameter to the parsing methodby using one or more  or  date and time format strings. The following example uses the [TryParseExact(String, String&lt;xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29&gt; method to convert strings that must be either in a &quot;yyyyMMdd&quot; format or a &quot;HHmmss&quot; format to DateTime values.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTime.Parsing#2\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim formats() As String = { &quot;yyyyMMdd&quot;, &quot;HHmmss&quot; }\n      Dim dateStrings() As String = { &quot;20130816&quot;, &quot;20131608&quot;,  \n                                      &quot;  20130816   &quot;, &quot;115216&quot;, \n                                      &quot;521116&quot;, &quot;  115216  &quot; }\n      Dim parsedDate As DateTime\n      \n      For Each dateString As String In dateStrings\n         If DateTime.TryParseExact(dateString, formats, Nothing, \n                                   DateTimeStyles.AllowWhiteSpaces Or\n                                   DateTimeStyles.AdjustToUniversal,\n                                   parsedDate)\n            Console.WriteLine(&quot;{0} --&gt; {1:g}&quot;, dateString, parsedDate)\n         Else\n            Console.WriteLine(&quot;Cannot convert {0}&quot;, dateString)\n         End If                                         \n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       20130816 --&gt; 8/16/2013 12:00 AM\n&#39;       Cannot convert 20131608\n&#39;         20130816    --&gt; 8/16/2013 12:00 AM\n&#39;       115216 --&gt; 4/22/2013 11:52 AM\n&#39;       Cannot convert 521116\n&#39;         115216   --&gt; 4/22/2013 11:52 AM\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.Parsing#2\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      string[] formats = { &quot;yyyyMMdd&quot;, &quot;HHmmss&quot; };\n      string[] dateStrings = { &quot;20130816&quot;, &quot;20131608&quot;, &quot;  20130816   &quot;, \n                               &quot;115216&quot;, &quot;521116&quot;, &quot;  115216  &quot; };\n      DateTime parsedDate;\n      \n      foreach (var dateString in dateStrings) {\n         if (DateTime.TryParseExact(dateString, formats, null, \n                                    DateTimeStyles.AllowWhiteSpaces |\n                                    DateTimeStyles.AdjustToUniversal,\n                                    out parsedDate))\n            Console.WriteLine(&quot;{0} --&gt; {1:g}&quot;, dateString, parsedDate);\n         else\n            Console.WriteLine(&quot;Cannot convert {0}&quot;, dateString);\n      }\n   }\n}\n// The example displays the following output:\n//       20130816 --&gt; 8/16/2013 12:00 AM\n//       Cannot convert 20131608\n//         20130816    --&gt; 8/16/2013 12:00 AM\n//       115216 --&gt; 4/22/2013 11:52 AM\n//       Cannot convert 521116\n//         115216   --&gt; 4/22/2013 11:52 AM\n</code></pre><p>The <a class=\"xref\" href=\"system.datetime#System_DateTime_Parse_\" data-linktype=\"relative-path\">Parse</a> and <a class=\"xref\" href=\"system.datetime#System_DateTime_ParseExact_\" data-linktype=\"relative-path\">ParseExact</a> methods throw an exception if the string to be converted to a DateTime value cannot be parsed. The <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParse_\" data-linktype=\"relative-path\">TryParse</a> and <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParseExact_\" data-linktype=\"relative-path\">TryParseExact</a> methods return a <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that indicates whether the conversion succeeded or failed. Because the parsing operation for date and time strings, particularly if strings are input by users, tends to have a high failure rate, and because exception handling is expensive, you should use the <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParse_\" data-linktype=\"relative-path\">TryParse</a> or <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParseExact_\" data-linktype=\"relative-path\">TryParseExact</a> methods in scenarios where performance is important or conversions are subject to a high rate of failure.  </p>\n<p>For more information about parsing date and time values, see <a href=\"../Topic/Parsing%20Date%20and%20Time%20Strings%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Parsing Date and Time Strings</a>.  </p>\n</li>\n</ul>\n<p><a name=\"datetime_versions\"></a>   </p>\n<h2 id=\"version-considerations\">Version considerations</h2>\n<p> Prior to the .NET Framework version 2.0, the DateTime structure contains a 64-bit field composed of an unused 2-bit field concatenated with a private <code>Ticks</code> field, which is a 62-bit unsigned field that contains the number of ticks that represent the date and time. The value of the <code>Ticks</code> field can be obtained with the <a class=\"xref\" href=\"system.datetime#System_DateTime_Ticks_\" data-linktype=\"relative-path\">Ticks</a> property.  </p>\n<p> Starting with the .NET Framework 2.0, the DateTime structure contains a 64-bit field composed of a private Kind field concatenated with the Ticks field. The Kind field is a 2-bit field that indicates whether the DateTime structure represents a local time, a Coordinated Universal Time (UTC), or the time in an unspecified time zone. The Kind field is used when performing time conversions between time zones, but not for time comparisons or arithmetic. The value of the Kind field can be obtained with the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> An alternative to the DateTime structure for working with date and time values in particular time zones is the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure. The <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure stores date and time information in a private DateTime field and the number of minutes by which that date and time differs from UTC in a private <a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a> field. This makes it possible for a <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> value to reflect the time in a particular time zone, whereas a DateTime value can unambiguously reflect only UTC and the local time zone&#39;s time. For a discussion about when to use the DateTime structure or the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure when working with date and time values, see <a href=\"../Topic/Choosing%20Between%20DateTime,%20DateTimeOffset,%20TimeSpan,%20and%20TimeZoneInfo.md\" data-linktype=\"relative-path\">Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo</a>.  </p>\n</div>\n<p><a name=\"datetime_values\"></a>   </p>\n<h2 id=\"datetime-values\">DateTime values</h2>\n<p> Descriptions of time values in the DateTime type are often expressed using the Coordinated Universal Time (UTC) standard, which is the internationally recognized name for Greenwich Mean Time (GMT). Coordinated Universal Time is the time as measured at zero degrees longitude, the UTC origin point. Daylight saving time is not applicable to UTC.  </p>\n<p> Local time is relative to a particular time zone. A time zone is associated with a time zone offset, which is the displacement of the time zone measured in hours from the UTC origin point. In addition, local time is optionally affected by daylight saving time, which adds or subtracts an hour from the length of a day. Consequently, local time is calculated by adding the time zone offset to UTC and adjusting for daylight saving time if necessary. The time zone offset at the UTC origin point is zero.  </p>\n<p> UTC time is suitable for calculations, comparisons, and storing dates and time in files. Local time is appropriate for display in user interfaces of desktop applications. Time zone-aware applications (such as many Web applications) also need to work with a number of other time zones.  </p>\n<p> If the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of a DateTime object is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>, it is unspecified whether the time represented is local time, UTC time, or a time in some other time zone.  </p>\n<p><a name=\"datetime_ops\"></a>   </p>\n<h2 id=\"datetime-operations\">DateTime operations</h2>\n<p> A calculation using a DateTime structure, such as <a class=\"xref\" href=\"system.datetime#System_DateTime_Add_\" data-linktype=\"relative-path\">Add</a> or <a class=\"xref\" href=\"system.datetime#System_DateTime_Subtract_\" data-linktype=\"relative-path\">Subtract</a>, does not modify the value of the structure. Instead, the calculation returns a new DateTime structure whose value is the result of the calculation.  </p>\n<p> Conversion operations between time zones (such as between UTC and local time, or between one time zone and another) take daylight saving time into account, but arithmetic and comparison operations do not.  </p>\n<p> The DateTime structure itself offers limited support for converting from one time zone to another. You can use the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToLocalTime_\" data-linktype=\"relative-path\">ToLocalTime</a> method to convert UTC to local time, or you can use the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> method to convert from local time to UTC. However, a full set of time zone conversion methods is available in the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> class. Using these methods, you can convert the time in any one of the world&#39;s time zones to the time in any other time zone.  </p>\n<p> Calculations and comparisons of DateTime objects are meaningful only if the objects represent times in the same time zone. You can use a <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object to represent a DateTime value&#39;s time zone, although the two are loosely coupled. (That is, a DateTime object does not have a property that returns an object that represents that date and time value&#39;s time zone other than the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property.) For this reason, in a time zone-aware application, you must rely on some external mechanism to determine the time zone in which a DateTime object was created. For example, you could use a structure that wraps both the DateTime value and the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that represents the DateTime value&#39;s time zone. For details on using UTC in calculations and comparisons with DateTime values, see <a href=\"../Topic/Performing%20Arithmetic%20Operations%20with%20Dates%20and%20Times.md\" data-linktype=\"relative-path\">Performing Arithmetic Operations with Dates and Times</a>.  </p>\n<p> Each DateTime member implicitly uses the Gregorian calendar to perform its operation, with the exception of constructors that specify a calendar, and methods with a parameter derived from <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a>, such as <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">System.Globalization.DateTimeFormatInfo</a>, that implicitly specifies a calendar.  </p>\n<p> Operations by members of the DateTime type take into account details such as leap years and the number of days in a month.  </p>\n<p> Two other common operations with DateTime values involve converting a date and time value to or from its string representation. The process of converting a DateTime value to its string representation is a formatting operation; for more information about formatting, see <a href=\"#datetime_values_strings\" data-linktype=\"self-bookmark\">DateTime values and their string representations</a>. The process of converting the string representation of a date and time to a DateTime value is a parsing operation; for more information about parsing, see <a href=\"#parsing\" data-linktype=\"self-bookmark\">Converting strings to DateTime values</a>.  </p>\n<p><a name=\"Resolution\"></a>   </p>\n<h2 id=\"datetime-resolution\">DateTime resolution</h2>\n<div class=\"NOTE\"><h5>Note</h5><p> As an alternative to performing date and time arithmetic on DateTime values to measure elapsed time, you can use the <a class=\"xref\" href=\"system.diagnostics.stopwatch\" data-linktype=\"relative-path\">Stopwatch</a> class.  </p>\n</div>\n<p> The <a class=\"xref\" href=\"system.datetime#System_DateTime_Ticks_\" data-linktype=\"relative-path\">Ticks</a> property expresses date and time values in units of one ten-millionth of a second, and the <a class=\"xref\" href=\"system.datetime#System_DateTime_Millisecond_\" data-linktype=\"relative-path\">Millisecond</a> property returns the thousandths of a second in a date and time value. However, if you are using repeated calls to the <a class=\"xref\" href=\"system.datetime#System_DateTime_Now_\" data-linktype=\"relative-path\">Now</a> property to measure elapsed time, and you are concerned with small time intervals less than 100 milliseconds, you should note that values returned by the <a class=\"xref\" href=\"system.datetime#System_DateTime_Now_\" data-linktype=\"relative-path\">Now</a> property are dependent on the system clock, which on Windows 7 and Windows 8 systems has a resolution of approximately 15 milliseconds.  </p>\n<p> The following example illustrates the dependence of current date and time values on the resolution of the system clock. In the example, an outer loop repeats 20 times, and an inner loop serves to delay the outer loop. If the value of the outer loop counter is 10, a call to the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Sleep_\" data-linktype=\"relative-path\">Sleep</a> method introduces a five millisecond delay. As the output from the example shows, the number of milliseconds in returned by the <code>DateTime.Now.Milliseconds</code> property changed only after the call to <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_Sleep_\" data-linktype=\"relative-path\">Sleep</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.DateTime.Now#1\">using namespace System;\nusing namespace System::Threading;\n\nvoid main()\n{\n   String^ output = &quot;&quot;;\n   for (int ctr = 0; ctr &lt;= 20; ctr++) {\n      output += String::Format(&quot;{0}\\n&quot;, DateTime::Now.Millisecond);\n      // Introduce a delay loop.\n      for (int delay = 0; delay &lt;= 1000; delay++)\n      {}\n\n      if (ctr == 10) {\n         output += &quot;Thread.Sleep called...\\n&quot;;\n         Thread::Sleep(5);\n      }\n   }\n   Console::WriteLine(output);\n}\n// The example displays the following output:\n//       111\n//       111\n//       111\n//       111\n//       111\n//       111\n//       111\n//       111\n//       111\n//       111\n//       111\n//       Thread.Sleep called...\n//       143\n//       143\n//       143\n//       143\n//       143\n//       143\n//       143\n//       143\n//       143\n//       143\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.Now#1\">using System;\nusing System.Threading;\n\npublic class Example\n{\n   public static void Main()\n   {\n      String output = &quot;&quot;;\n      for (int ctr = 0; ctr &lt;= 20; ctr++) {\n         output += String.Format(&quot;{0}\\n&quot;, DateTime.Now.Millisecond);\n         // Introduce a delay loop.\n         for (int delay = 0; delay &lt;= 1000; delay++)\n         {}\n\n         if (ctr == 10) {\n            output += &quot;Thread.Sleep called...\\n&quot;;\n            Thread.Sleep(5);\n         }\n      }\n      Console.WriteLine(output);\n   }\n}\n// The example displays the following output:\n//       111\n//       111\n//       111\n//       111\n//       111\n//       111\n//       111\n//       111\n//       111\n//       111\n//       111\n//       Thread.Sleep called...\n//       143\n//       143\n//       143\n//       143\n//       143\n//       143\n//       143\n//       143\n//       143\n//       143\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Now#1\">Imports System.Threading\n\nModule Example\n   Public Sub Main()\n      Dim output As String = &quot;&quot;\n      For ctr As Integer = 0 To 20\n         output += Date.Now.Millisecond.ToString() + vbCrLf\n         &#39; Introduce a delay loop.\n         For delay As Integer = 0 To 1000\n         Next\n\n         If ctr = 10 Then\n            output += &quot;Thread.Sleep called...&quot; + vbCrLf\n            Thread.Sleep(5)\n         End If\n      Next\n      Console.WriteLine(output)\n   End Sub\nEnd Module\n&#39; The example displays output like the following:\n&#39;       111\n&#39;       111\n&#39;       111\n&#39;       111\n&#39;       111\n&#39;       111\n&#39;       111\n&#39;       111\n&#39;       111\n&#39;       111\n&#39;       111\n&#39;       Thread.Sleep called...\n&#39;       143\n&#39;       143\n&#39;       143\n&#39;       143\n&#39;       143\n&#39;       143\n&#39;       143\n&#39;       143\n&#39;       143\n&#39;       143\n</code></pre><p><a name=\"datetime_timespan\"></a>   </p>\n<h2 id=\"datetime-vs-timespan\">DateTime vs. TimeSpan</h2>\n<p> The DateTime and <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> value types differ in that a DateTime represents an instant in time whereas a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> represents a time interval. This means, for example, that you can subtract one instance of DateTime from another to obtain a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> object that represents the time interval between them. Or you could add a positive <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> to the current DateTime to obtain a DateTime value that represents a future date.  </p>\n<p> You can add or subtract a time interval from a DateTime object. Time intervals can be negative or positive, can be expressed in units such as ticks or seconds, or can be expressed as a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> object.  </p>\n<p><a name=\"Calendars\"></a>   </p>\n<h2 id=\"datetime-values-and-calendars\">DateTime values and calendars</h2>\n<p> The .NET Framework Class Library includes a number of calendar classes, all of which are derived from the <a class=\"xref\" href=\"system.globalization.calendar\" data-linktype=\"relative-path\">Calendar</a> class.  They are:  </p>\n<ul>\n<li><p>The <a class=\"xref\" href=\"system.globalization.chineselunisolarcalendar\" data-linktype=\"relative-path\">ChineseLunisolarCalendar</a> class.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.globalization.eastasianlunisolarcalendar\" data-linktype=\"relative-path\">EastAsianLunisolarCalendar</a> class.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.globalization.gregoriancalendar\" data-linktype=\"relative-path\">GregorianCalendar</a> class.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.globalization.hebrewcalendar\" data-linktype=\"relative-path\">HebrewCalendar</a> class.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.globalization.hijricalendar\" data-linktype=\"relative-path\">HijriCalendar</a> class.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.globalization.japanesecalendar\" data-linktype=\"relative-path\">JapaneseCalendar</a> class.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.globalization.japaneselunisolarcalendar\" data-linktype=\"relative-path\">JapaneseLunisolarCalendar</a> class.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.globalization.juliancalendar\" data-linktype=\"relative-path\">JulianCalendar</a> class.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.globalization.koreancalendar\" data-linktype=\"relative-path\">KoreanCalendar</a> class.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.globalization.koreanlunisolarcalendar\" data-linktype=\"relative-path\">KoreanLunisolarCalendar</a> class.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.globalization.persiancalendar\" data-linktype=\"relative-path\">PersianCalendar</a> class.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.globalization.taiwancalendar\" data-linktype=\"relative-path\">TaiwanCalendar</a> class.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.globalization.taiwanlunisolarcalendar\" data-linktype=\"relative-path\">TaiwanLunisolarCalendar</a> class.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.globalization.thaibuddhistcalendar\" data-linktype=\"relative-path\">ThaiBuddhistCalendar</a> class.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.globalization.umalquracalendar\" data-linktype=\"relative-path\">UmAlQuraCalendar</a> class.  </p>\n<p>Each culture uses a default calendar defined by its read-only <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_Calendar_\" data-linktype=\"relative-path\">Calendar</a> property and supports one or more calendars defined by its read-only <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_OptionalCalendars_\" data-linktype=\"relative-path\">OptionalCalendars</a> property. The calendar currently used by a specific <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object is defined by its <a class=\"xref\" href=\"system.globalization.datetimeformatinfo#System_Globalization_DateTimeFormatInfo_Calendar_\" data-linktype=\"relative-path\">Calendar</a> property; it must be one of the calendars found in the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_OptionalCalendars_\" data-linktype=\"relative-path\">OptionalCalendars</a> array.  </p>\n<p>A culture&#39;s current calendar is used in all formatting operations for that culture. For example, the default calendar of the Persian (Iran) culture is the Umm al-Qura calendar, which is represented by the <a class=\"xref\" href=\"system.globalization.umalquracalendar\" data-linktype=\"relative-path\">UmAlQuraCalendar</a> class.  When a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the Persian (Iran) culture is used in a date and time formatting operation, the Umm al-Qura calendar is used by default, and the Gregorian calendar is used only if the culture&#39;s <a class=\"xref\" href=\"system.globalization.datetimeformatinfo#System_Globalization_DateTimeFormatInfo_Calendar_\" data-linktype=\"relative-path\">Calendar</a> property is changed, as the following example shows.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Calendar#1\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      var faIR = new CultureInfo(&quot;fa-IR&quot;);\n      var value = new DateTime(2016, 5, 28);\n\n      Console.WriteLine(value.ToString(faIR));\n\n      faIR.DateTimeFormat.Calendar = new GregorianCalendar();\n      Console.WriteLine(value.ToString(faIR));\n   }\n}\n// The example displays the following output:\n// 08/03/1395 12:00:00 ?.?\n// 28/05/2016 12:00:00 ?.?\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Calendar#1\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim faIR As New CultureInfo(&quot;fa-IR&quot;)\n      Dim value As New DateTime(2016, 5, 28)\n\n      Console.WriteLine(value.ToString(faIR))\n\n      faIR.DateTimeFormat.Calendar = New GregorianCalendar()\n      Console.WriteLine(value.ToString(faIR))\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       08/03/1395 12:00:00 ?.?\n&#39;       28/05/2016 12:00:00 ?.?\n</code></pre><p>A culture&#39;s current calendar is also used in all parsing operations for that culture, as the following example shows.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Calendar#2\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      var faIR = new CultureInfo(&quot;fa-IR&quot;);\n      var value = DateTime.Parse(&quot;08/03/1395&quot;, faIR);\n      Console.WriteLine(value.ToString(faIR));\n      \n      faIR.DateTimeFormat.Calendar = new GregorianCalendar();\n      Console.WriteLine(value.ToString(faIR));\n   }\n}\n// The example displays the following output:\n//       08/03/1395 12:00:00 ?.?\n//       28/05/2016 12:00:00 ?.?\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Calendar#2\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim faIR As New CultureInfo(&quot;fa-IR&quot;)\n      Dim value As DateTime = DateTime.Parse(&quot;08/03/1395&quot;, faIR)\n      Console.WriteLine(value.ToString(faIR))\n      \n      faIR.DateTimeFormat.Calendar = New GregorianCalendar()\n      Console.WriteLine(value.ToString(faIR))\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       08/03/1395 12:00:00 ?.?\n&#39;       28/05/2016 12:00:00 ?.?\n</code></pre><p>You can also instantiate a DateTime value by using the date and time elements (such as the number of the year, month, and day) of a specific calendar by calling a <a href=\"../Topic/DateTime%20Constructor.md\" data-linktype=\"relative-path\">DateTime constructor</a> that includes a <code>calendar</code> parameter and passing it a <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_Calendar_\" data-linktype=\"relative-path\">Calendar</a> object that represents that calendar. The following example does this by using the date and time elements from the <a class=\"xref\" href=\"system.globalization.umalquracalendar\" data-linktype=\"relative-path\">UmAlQuraCalendar</a> calendar.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Calendar#3\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      var faIR = new CultureInfo(&quot;fa-IR&quot;);\n      var dat = new DateTime(1395, 8, 18, faIR.DateTimeFormat.Calendar);\n      Console.WriteLine(&quot;Umm-al-Qura date: {0}&quot;, dat.ToString(&quot;d&quot;, faIR));\n      Console.WriteLine(&quot;Gregorian date:   {0:d}&quot;, dat);\n   }\n}\n// The example displays the following output:\n//       Umm-al-Qura date: 18/08/1395\n//       Gregorian date:   11/8/2016\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Calendar#3\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim faIR As New CultureInfo(&quot;fa-IR&quot;)\n      Dim dat As New DateTime(1395, 8, 18, faIR.DateTimeFormat.Calendar)\n      Console.WriteLine(&quot;Umm-al-Qura date: {0}&quot;, dat.ToString(&quot;d&quot;, faIR))\n      Console.WriteLine(&quot;Gregorian date:   {0:d}&quot;, dat)\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Umm-al-Qura date: 18/08/1395\n&#39;       Gregorian date:   11/8/2016\n</code></pre><p>DateTime constructors that do not include a <code>calendar</code> parameter assume that the date and time elements are expressed as units in the Gregorian calendar.  </p>\n<p>All other DateTime properties and methods use the Gregorian calendar. For example, the <a class=\"xref\" href=\"system.datetime#System_DateTime_Year_\" data-linktype=\"relative-path\">Year</a> property returns the year in the Gregorian calendar, and the <a class=\"xref\" href=\"system.datetime#System_DateTime_IsLeapYear_System_Int32_\" data-linktype=\"relative-path\">System.DateTime.IsLeapYear(Int32)</a> method assumes that the <code>year</code> parameter is a year in the Gregorian calendar.  Each DateTime member that uses the Gregorian calendar has a corresponding member of the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_Calendar_\" data-linktype=\"relative-path\">Calendar</a> class that  uses a specific calendar. For example, the <a class=\"xref\" href=\"system.globalization.calendar#System_Globalization_Calendar_GetYear_\" data-linktype=\"relative-path\">GetYear</a> method returns the year in a specific calendar, and the <a class=\"xref\" href=\"system.globalization.calendar#System_Globalization_Calendar_IsLeapYear_\" data-linktype=\"relative-path\">IsLeapYear</a> method interprets the <code>year</code> parameter as a year number in a specific calendar. The following example use both the DateTime and the corresponding members of the  <a class=\"xref\" href=\"system.globalization.umalquracalendar\" data-linktype=\"relative-path\">UmAlQuraCalendar</a> class.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Calendar#4\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      var faIR = new CultureInfo(&quot;fa-IR&quot;);\n      var cal = faIR.DateTimeFormat.Calendar;\n      var dat = new DateTime(1395, 8, 18, cal);\n      Console.WriteLine(&quot;Using the Umm-al-Qura calendar:&quot;);\n      Console.WriteLine(&quot;Date: {0}&quot;, dat.ToString(&quot;d&quot;, faIR));\n      Console.WriteLine(&quot;Year: {0}&quot;, cal.GetYear(dat));\n      Console.WriteLine(&quot;Leap year: {0}\\n&quot;, \n                        cal.IsLeapYear(cal.GetYear(dat)));\n      \n      Console.WriteLine(&quot;Using the Gregorian calendar:&quot;);\n      Console.WriteLine(&quot;Date: {0:d}&quot;, dat);\n      Console.WriteLine(&quot;Year: {0}&quot;, dat.Year);\n      Console.WriteLine(&quot;Leap year: {0}&quot;, DateTime.IsLeapYear(dat.Year));\n   }\n}\n// The example displays the following output:\n//       Using the Umm-al-Qura calendar:\n//       Date: 18/08/1395\n//       Year: 1395\n//       Leap year: True\n//       \n//       Using the Gregorian calendar:\n//       Date: 11/8/2016\n//       Year: 2016\n//       Leap year: True\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Calendar#4\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim faIR As New CultureInfo(&quot;fa-IR&quot;)\n      Dim cal As Calendar = faIR.DateTimeFormat.Calendar\n      Dim dat As New DateTime(1395, 8, 18, cal)\n      Console.WriteLine(&quot;Using the Umm-al-Qura calendar:&quot;)\n      Console.WriteLine(&quot;Date: {0}&quot;, dat.ToString(&quot;d&quot;, faIR))\n      Console.WriteLine(&quot;Year: {0}&quot;, cal.GetYear(dat))\n      Console.WriteLine(&quot;Leap year: {0}&quot;, cal.IsLeapYear(cal.GetYear(dat)))\n      Console.WriteLine()\n      \n      Console.WriteLine(&quot;Using the Gregorian calendar:&quot;)\n      Console.WriteLine(&quot;Date: {0:d}&quot;, dat)\n      Console.WriteLine(&quot;Year: {0}&quot;, dat.Year)\n      Console.WriteLine(&quot;Leap year: {0}&quot;, DateTime.IsLeapYear(dat.Year))\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Using the Umm-al-Qura calendar:\n&#39;       Date: 18/08/1395\n&#39;       Year: 1395\n&#39;       Leap year: True\n&#39;       \n&#39;       Using the Gregorian calendar:\n&#39;       Date: 11/8/2016\n&#39;       Year: 2016\n&#39;       Leap year: True\n</code></pre><p>Although the DateTime structure includes <a class=\"xref\" href=\"system.datetime#System_DateTime_DayOfWeek_\" data-linktype=\"relative-path\">DayOfWeek</a> property that returns the day of the week in the Gregorian calendar, it does not include a member that allows you to retrieve the week number of the year. To retrieve the week of the year, call the individual calendar&#39;s <a class=\"xref\" href=\"system.globalization.calendar#System_Globalization_Calendar_GetWeekOfYear_\" data-linktype=\"relative-path\">GetWeekOfYear</a> method. The following example provides an illustration.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Calendar#5\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      var faIR = new CultureInfo(&quot;fa-IR&quot;);\n      var umAlQura = faIR.DateTimeFormat.Calendar;\n      var dat = new DateTime(1395, 8, 18, umAlQura);\n      Console.WriteLine(&quot;Using the Umm-al-Qura calendar:&quot;);\n      Console.WriteLine(&quot;Date: {0}&quot;, dat.ToString(&quot;d&quot;, faIR));\n      Console.WriteLine(&quot;Day of Week: {0}&quot;, umAlQura.GetDayOfWeek(dat));\n      Console.WriteLine(&quot;Week of year: {0}\\n&quot;, \n                        umAlQura.GetWeekOfYear(dat, CalendarWeekRule.FirstDay, \n                                               DayOfWeek.Sunday));\n      \n      var greg = new GregorianCalendar(); \n      Console.WriteLine(&quot;Using the Gregorian calendar:&quot;);\n      Console.WriteLine(&quot;Date: {0:d}&quot;, dat);\n      Console.WriteLine(&quot;Day of Week: {0}&quot;, dat.DayOfWeek);\n      Console.WriteLine(&quot;Week of year: {0}&quot;, \n                         greg.GetWeekOfYear(dat, CalendarWeekRule.FirstDay, \n                                            DayOfWeek.Sunday));\n   }\n}\n// The example displays the following output:\n//       Using the Umm-al-Qura calendar:\n//       Date: 18/08/1395\n//       Day of Week: Tuesday\n//       Week of year: 34\n//       \n//       Using the Gregorian calendar:\n//       Date: 11/8/2016\n//       Day of Week: Tuesday\n//       Week of year: 46\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Calendar#5\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim faIR As New CultureInfo(&quot;fa-IR&quot;)\n      Dim umAlQura As Calendar = faIR.DateTimeFormat.Calendar\n      Dim dat As New DateTime(1395, 8, 18, umAlQura)\n      Console.WriteLine(&quot;Using the Umm-al-Qura calendar:&quot;)\n      Console.WriteLine(&quot;Date: {0}&quot;, dat.ToString(&quot;d&quot;, faIR))\n      Console.WriteLine(&quot;Day of Week: {0}&quot;, umAlQura.GetDayOfWeek(dat))\n      Console.WriteLine(&quot;Week of year: {0}&quot;, \n                        umAlQura.GetWeekOfYear(dat, CalendarWeekRule.FirstDay, \n                                               DayOfWeek.Sunday))\n      Console.WriteLine()\n      \n      Dim greg As Calendar = New GregorianCalendar() \n      Console.WriteLine(&quot;Using the Gregorian calendar:&quot;)\n      Console.WriteLine(&quot;Date: {0:d}&quot;, dat)\n      Console.WriteLine(&quot;Day of Week: {0}&quot;, dat.DayOfWeek)\n      Console.WriteLine(&quot;Week of year: {0}&quot;, \n                         greg.GetWeekOfYear(dat, CalendarWeekRule.FirstDay, \n                                            DayOfWeek.Sunday))\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       Using the Umm-al-Qura calendar:\n&#39;       Date: 18/08/1395\n&#39;       Day of Week: Tuesday\n&#39;       Week of year: 34\n&#39;       \n&#39;       Using the Gregorian calendar:\n&#39;       Date: 11/8/2016\n&#39;       Day of Week: Tuesday\n&#39;       Week of year: 46\n</code></pre><p>For more information on dates and calendars, see <a href=\"../Topic/Working%20with%20Calendars.md\" data-linktype=\"relative-path\">Working with Calendars</a>.  </p>\n</li>\n</ul>\n<p><a name=\"Persisting\"></a>   </p>\n<h2 id=\"persisting-datetime-values\">Persisting DateTime values</h2>\n<p> You can persist DateTime values in four ways:  </p>\n<ul>\n<li><p>You can <a href=\"#Strings\" data-linktype=\"self-bookmark\">convert them to strings</a> and persist the strings.  </p>\n</li>\n<li><p>You can <a href=\"#Integers\" data-linktype=\"self-bookmark\">convert them to 64-bit integer values</a> (the value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Ticks_\" data-linktype=\"relative-path\">Ticks</a> property) and persist the integers.  </p>\n</li>\n<li><p>You can<a href=\"#Serialized\" data-linktype=\"self-bookmark\">serialize the DateTime values</a>.  </p>\n</li>\n<li><p>You can <a href=\"#TimeZone\" data-linktype=\"self-bookmark\">serialize the DateTime values along with time zone information</a>.  </p>\n<p>Regardless of which technique you choose, you must ensure that the routine that restores the DateTime values doesn&#39;t lose data or throw an exception. DateTime values should round-trip. That is, the original value and the restored value should be the same. And if the original DateTime value represents a single instant of time, it should identify the same moment of time when it&#39;s restored.  </p>\n</li>\n</ul>\n<p><a name=\"Strings\"></a>   </p>\n<h3 id=\"persisting-values-as-strings\">Persisting values as strings</h3>\n<p> To successfully restore DateTime values that are persisted as strings, follow these rules:  </p>\n<ul>\n<li><p>Make the same assumptions about culture-specific formatting when you restore the string as when you persisted it. To ensure that a string can be restored on a system whose current culture is different from the culture of the system it was saved on, call the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_\" data-linktype=\"relative-path\">ToString</a>overload to save the string by using the conventions of the invariant culture, and call the <a class=\"xref\" href=\"system.datetime#System_DateTime_Parse_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\" data-linktype=\"relative-path\">Parse(String,IFormatProvider,DateTimeStyles)</a> or <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParse_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_System_DateTime__\" data-linktype=\"relative-path\">TryParse(String,IFormatProvider,DateTimeStyles,DateTime)</a> overload to restore the string by using the conventions of the invariant culture. Never use the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString\" data-linktype=\"relative-path\">ToString()</a>, <a class=\"xref\" href=\"system.datetime#System_DateTime_Parse_System_String_\" data-linktype=\"relative-path\">Parse(String)</a>, or <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParse_System_String_System_DateTime__\" data-linktype=\"relative-path\">TryParse(String,DateTime)</a> overloads, which use the conventions of the current thread culture.  </p>\n</li>\n<li><p>If the data represents a single moment of time, ensure that it represents the same moment in time when it&#39;s restored, even if it&#39;s restored on a system that uses a different time zone. To do this, you convert the DateTime value to Coordinated Universal Time (UTC) before saving it. You can also serialize the value along with time zone information; for more information about this approach, see <a href=\"#TimeZone\" data-linktype=\"self-bookmark\">Serializing DateTime and time zone data</a>.  </p>\n<p>The most common error made when persisting DateTime values as strings is to rely on the formatting conventions of the default or current culture. Problems arise if the current culture is different when saving and restoring the strings. The following example illustrates these problems. It saves five dates using the formatting conventions of the current culture, which in this case is English (United States). It restores the dates using the formatting conventions of the current culture, which in this case is English (Great Britain). Because the formatting conventions of the two cultures are different, two of the dates can&#39;t be restored, and the remaining three dates are interpreted incorrectly. Also, if the original date and time values represent single moments in time, the restored times are incorrect because time zone information is lost.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTime.Persist#1\">Imports System.Globalization\nImports System.IO\nImports System.Threading\n\nModule Example\n   Private Const filename As String = &quot;.\\BadDates.txt&quot;\n\n   Public Sub Main()\n      If Not File.Exists(filename) Then\n         SaveDates()\n      Else\n         RestoreDates()\n      End If\n   End Sub\n\n   Private Sub SaveDates()\n      Dim dates() As Date = { #6/14/2014 6:32AM#, #7/10/2014 11:49PM#, \n                              #1/10/2015 1:16AM#, #12/20/2014 9:45PM#,\n                              #6/2/2014 3:14PM# }\n      Dim output As String = Nothing\n \n      Console.WriteLine(&quot;Current Time Zone: {0}&quot;,\n                        TimeZoneInfo.Local.DisplayName)\n      Console.WriteLine(&quot;The dates on an {0} system:&quot;, \n                        Thread.CurrentThread.CurrentCulture.Name)\n      For ctr As Integer = 0 To dates.Length - 1 \n         Console.WriteLine(dates(ctr).ToString(&quot;f&quot;))\n         output += dates(ctr).ToString() + If(ctr &lt;&gt; dates.Length - 1, &quot;|&quot;, &quot;&quot;)\n      Next\n      Dim sw As New StreamWriter(filename)\n      sw.Write(output)\n      sw.Close()\n      Console.WriteLine(&quot;Saved dates...&quot;)\n   End Sub\n\n   Private Sub RestoreDates()\n      TimeZoneInfo.ClearCachedData()\n      Console.WriteLine(&quot;Current Time Zone: {0}&quot;,\n                        TimeZoneInfo.Local.DisplayName)\n      Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture(&quot;en-GB&quot;)\n      Dim sr As New StreamReader(filename)\n      Dim inputValues() As String = sr.ReadToEnd().Split( {&quot;|&quot;c} , StringSplitOptions.RemoveEmptyEntries)\n      sr.Close()\n      Console.WriteLine(&quot;The dates on an {0} system:&quot;, \n                        Thread.CurrentThread.CurrentCulture.Name)\n      For Each inputValue In inputValues\n         Dim dateValue As Date\n         If DateTime.TryParse(inputValue, dateValue) Then\n            Console.WriteLine(&quot;&#39;{0}&#39; --&gt; {1:f}&quot;, inputValue, dateValue)\n         Else\n            Console.WriteLine(&quot;Cannot parse &#39;{0}&#39;&quot;, inputValue)   \n         End If\n      Next\n      Console.WriteLine(&quot;Restored dates...&quot;)   \n   End Sub\nEnd Module\n&#39; When saved on an en-US system, the example displays the following output:\n&#39;       Current Time Zone: (UTC-08:00) Pacific Time (US &amp; Canada)\n&#39;       The dates on an en-US system:\n&#39;       Saturday, June 14, 2014 6:32 AM\n&#39;       Thursday, July 10, 2014 11:49 PM\n&#39;       Saturday, January 10, 2015 1:16 AM\n&#39;       Saturday, December 20, 2014 9:45 PM\n&#39;       Monday, June 02, 2014 3:14 PM\n&#39;       Saved dates...\n&#39;\n&#39; When restored on an en-GB system, the example displays the following output:\n&#39;       Current Time Zone: (UTC) Dublin, Edinburgh, Lisbon, London\n&#39;       The dates on an en-GB system:\n&#39;       Cannot parse &#39;6/14/2014 6:32:00 AM&#39;\n&#39;       &#39;7/10/2014 11:49:00 PM&#39; --&gt; 07 October 2014 23:49\n&#39;       &#39;1/10/2015 1:16:00 AM&#39; --&gt; 01 October 2015 01:16\n&#39;       Cannot parse &#39;12/20/2014 9:45:00 PM&#39;\n&#39;       &#39;6/2/2014 3:14:00 PM&#39; --&gt; 06 February 2014 15:14\n&#39;       Restored dates...\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.Persist#1\">using System;\nusing System.Globalization;\nusing System.IO;\nusing System.Threading;\n\npublic class Example\n{\n   private const string filename = @&quot;.\\BadDates.txt&quot;;\n\n   public static void Main()\n   {\n      if (! File.Exists(filename))\n         SaveDates();\n      else\n         RestoreDates();\n   }\n\n   private static void SaveDates()\n   {\n      DateTime[] dates = { new DateTime(2014, 6, 14, 6, 32, 0), \n                           new DateTime(2014, 7, 10, 23, 49, 0),  \n                           new DateTime(2015, 1, 10, 1, 16, 0), \n                           new DateTime(2014, 12, 20, 21, 45, 0), \n                           new DateTime(2014, 6, 2, 15, 14, 0) }; \n      string output = null;\n \n      Console.WriteLine(&quot;Current Time Zone: {0}&quot;,\n                        TimeZoneInfo.Local.DisplayName);\n      Console.WriteLine(&quot;The dates on an {0} system:&quot;, \n                        Thread.CurrentThread.CurrentCulture.Name);\n      for (int ctr = 0; ctr &lt; dates.Length; ctr++) { \n         Console.WriteLine(dates[ctr].ToString(&quot;f&quot;));\n         output += dates[ctr].ToString() + (ctr != dates.Length - 1 ? &quot;|&quot; : &quot;&quot;);\n      }\n      StreamWriter sw = new StreamWriter(filename);\n      sw.Write(output);\n      sw.Close();\n      Console.WriteLine(&quot;Saved dates...&quot;);\n   }\n\n   private static void RestoreDates()\n   {\n      TimeZoneInfo.ClearCachedData();\n      Console.WriteLine(&quot;Current Time Zone: {0}&quot;,\n                        TimeZoneInfo.Local.DisplayName);\n      Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture(&quot;en-GB&quot;);\n      StreamReader sr = new StreamReader(filename);\n      string[] inputValues = sr.ReadToEnd().Split( new char[] { &#39;|&#39; } , \n                                                  StringSplitOptions.RemoveEmptyEntries);\n      sr.Close();\n      Console.WriteLine(&quot;The dates on an {0} system:&quot;, \n                        Thread.CurrentThread.CurrentCulture.Name);\n      foreach (var inputValue in inputValues) {\n         DateTime dateValue;\n         if (DateTime.TryParse(inputValue, out dateValue)) {\n            Console.WriteLine(&quot;&#39;{0}&#39; --&gt; {1:f}&quot;, inputValue, dateValue);\n         }\n         else {\n            Console.WriteLine(&quot;Cannot parse &#39;{0}&#39;&quot;, inputValue);   \n         }\n      }\n      Console.WriteLine(&quot;Restored dates...&quot;);   \n   }\n}\n// When saved on an en-US system, the example displays the following output:\n//       Current Time Zone: (UTC-08:00) Pacific Time (US &amp; Canada)\n//       The dates on an en-US system:\n//       Saturday, June 14, 2014 6:32 AM\n//       Thursday, July 10, 2014 11:49 PM\n//       Saturday, January 10, 2015 1:16 AM\n//       Saturday, December 20, 2014 9:45 PM\n//       Monday, June 02, 2014 3:14 PM\n//       Saved dates...\n//\n// When restored on an en-GB system, the example displays the following output:\n//       Current Time Zone: (UTC) Dublin, Edinburgh, Lisbon, London\n//       The dates on an en-GB system:\n//       Cannot parse //6/14/2014 6:32:00 AM//\n//       //7/10/2014 11:49:00 PM// --&gt; 07 October 2014 23:49\n//       //1/10/2015 1:16:00 AM// --&gt; 01 October 2015 01:16\n//       Cannot parse //12/20/2014 9:45:00 PM//\n//       //6/2/2014 3:14:00 PM// --&gt; 06 February 2014 15:14\n//       Restored dates...\n</code></pre><p>To round-trip DateTime values successfully, follow these steps:  </p>\n</li>\n</ul>\n<ol>\n<li><p>If the values represent single moments of time, convert them from the local time to UTC by calling the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> method.  </p>\n</li>\n<li><p>Convert the dates to their string representations by calling the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(String,IFormatProvider)</a> or [String.Format(IFormatProvider, String, Object&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt; overload. Use the formatting conventions of the invariant culture by specifying <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_InvariantCulture_\" data-linktype=\"relative-path\">InvariantCulture</a> as the <code>provider</code> argument. Specify that the value should round-trip by using the &quot;O&quot; or &quot;R&quot; .  </p>\n</li>\n<li><p>When you call the <a class=\"xref\" href=\"system.datetime#System_DateTime_Parse_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\" data-linktype=\"relative-path\">Parse(String,IFormatProvider,DateTimeStyles)</a> or <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParse_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_System_DateTime__\" data-linktype=\"relative-path\">TryParse(String,IFormatProvider,DateTimeStyles,DateTime)</a> method.  </p>\n<p>To restore the persisted DateTime values without data loss, do the following:  </p>\n</li>\n<li><p>Parse the data by calling the <a class=\"xref\" href=\"system.datetime#System_DateTime_ParseExact_\" data-linktype=\"relative-path\">ParseExact</a> or <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParseExact_\" data-linktype=\"relative-path\">TryParseExact</a> overload. Specify <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_InvariantCulture_\" data-linktype=\"relative-path\">InvariantCulture</a> as the <code>provider</code> argument, and use the same standard format string you used for the <code>format</code> argument during conversion. Include the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> value in the <code>styles</code> argument.  </p>\n</li>\n<li><p>If the DateTime values represent single moments in time, call the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToLocalTime_\" data-linktype=\"relative-path\">ToLocalTime</a> method to convert the parsed date from UTC to local time.  </p>\n<p>The following example uses the invariant culture and the &quot;O&quot; standard format string to ensure that DateTime values that are saved and restored represent the same moment in time regardless of the system, culture, or time zone of the source and target systems.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Persist#2\">using System;\nusing System.Globalization;\nusing System.IO;\nusing System.Threading;\n\npublic class Example\n{\n   private const string filename = @&quot;.\\Dates.txt&quot;;\n\n   public static void Main()\n   {\n      if (! File.Exists(filename))\n         SaveDates();\n      else\n         RestoreDates();\n   }\n\n   private static void SaveDates()\n   {\n      DateTime[] dates = { new DateTime(2014, 6, 14, 6, 32, 0), \n                           new DateTime(2014, 7, 10, 23, 49, 0),  \n                           new DateTime(2015, 1, 10, 1, 16, 0), \n                           new DateTime(2014, 12, 20, 21, 45, 0), \n                           new DateTime(2014, 6, 2, 15, 14, 0) }; \n      string output = null;\n \n      Console.WriteLine(&quot;Current Time Zone: {0}&quot;,\n                        TimeZoneInfo.Local.DisplayName);\n      Console.WriteLine(&quot;The dates on an {0} system:&quot;, \n                        Thread.CurrentThread.CurrentCulture.Name);\n      for (int ctr = 0; ctr &lt; dates.Length; ctr++) { \n         Console.WriteLine(dates[ctr].ToString(&quot;f&quot;));\n         output += dates[ctr].ToUniversalTime().ToString(&quot;O&quot;, CultureInfo.InvariantCulture) \n                   + (ctr != dates.Length - 1 ? &quot;|&quot; : &quot;&quot;);\n      }\n      StreamWriter sw = new StreamWriter(filename);\n      sw.Write(output);\n      sw.Close();\n      Console.WriteLine(&quot;Saved dates...&quot;);\n   }\n\n   private static void RestoreDates()\n   {\n      TimeZoneInfo.ClearCachedData();\n      Console.WriteLine(&quot;Current Time Zone: {0}&quot;,\n                        TimeZoneInfo.Local.DisplayName);\n      Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture(&quot;en-GB&quot;);\n      StreamReader sr = new StreamReader(filename);\n      string[] inputValues = sr.ReadToEnd().Split( new char[] { &#39;|&#39; } , \n                                                  StringSplitOptions.RemoveEmptyEntries);\n      sr.Close();\n      Console.WriteLine(&quot;The dates on an {0} system:&quot;, \n                        Thread.CurrentThread.CurrentCulture.Name);\n      foreach (var inputValue in inputValues) {\n         DateTime dateValue;\n         if (DateTime.TryParseExact(inputValue, &quot;O&quot;, CultureInfo.InvariantCulture, \n                               DateTimeStyles.RoundtripKind, out dateValue)) {\n            Console.WriteLine(&quot;&#39;{0}&#39; --&gt; {1:f}&quot;, \n                              inputValue, dateValue.ToLocalTime());\n         }\n         else {\n            Console.WriteLine(&quot;Cannot parse &#39;{0}&#39;&quot;, inputValue);   \n         }\n      }\n      Console.WriteLine(&quot;Restored dates...&quot;);   \n   }\n}\n// When saved on an en-US system, the example displays the following output:\n//       Current Time Zone: (UTC-08:00) Pacific Time (US &amp; Canada)\n//       The dates on an en-US system:\n//       Saturday, June 14, 2014 6:32 AM\n//       Thursday, July 10, 2014 11:49 PM\n//       Saturday, January 10, 2015 1:16 AM\n//       Saturday, December 20, 2014 9:45 PM\n//       Monday, June 02, 2014 3:14 PM\n//       Saved dates...\n//\n// When restored on an en-GB system, the example displays the following output:\n//       Current Time Zone: (UTC) Dublin, Edinburgh, Lisbon, London\n//       The dates on an en-GB system:\n//       &#39;2014-06-14T13:32:00.0000000Z&#39; --&gt; 14 June 2014 14:32\n//       &#39;2014-07-11T06:49:00.0000000Z&#39; --&gt; 11 July 2014 07:49\n//       &#39;2015-01-10T09:16:00.0000000Z&#39; --&gt; 10 January 2015 09:16\n//       &#39;2014-12-21T05:45:00.0000000Z&#39; --&gt; 21 December 2014 05:45\n//       &#39;2014-06-02T22:14:00.0000000Z&#39; --&gt; 02 June 2014 23:14\n//       Restored dates...\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Persist#2\">Imports System.Globalization\nImports System.IO\nImports System.Threading\n\nModule Example\n   Private Const filename As String = &quot;.\\Dates.txt&quot;\n\n   Public Sub Main()\n      If Not File.Exists(filename) Then\n         SaveDates()\n      Else\n         RestoreDates()\n      End If\n   End Sub\n\n   Private Sub SaveDates()\n      Dim dates() As Date = { #6/14/2014 6:32AM#, #7/10/2014 11:49PM#, \n                              #1/10/2015 1:16AM#, #12/20/2014 9:45PM#,\n                              #6/2/2014 3:14PM# }\n      Dim output As String = Nothing\n \n      Console.WriteLine(&quot;Current Time Zone: {0}&quot;,\n                        TimeZoneInfo.Local.DisplayName)\n      Console.WriteLine(&quot;The dates on an {0} system:&quot;, \n                        Thread.CurrentThread.CurrentCulture.Name)\n      For ctr As Integer = 0 To dates.Length - 1 \n         Console.WriteLine(dates(ctr).ToString(&quot;f&quot;))\n         output += dates(ctr).ToUniversalTime().ToString(&quot;O&quot;, CultureInfo.InvariantCulture) + \n                                       If(ctr &lt;&gt; dates.Length - 1, &quot;|&quot;, &quot;&quot;)\n      Next\n      Dim sw As New StreamWriter(filename)\n      sw.Write(output)\n      sw.Close()\n      Console.WriteLine(&quot;Saved dates...&quot;)\n   End Sub\n\n   Private Sub RestoreDates()\n      TimeZoneInfo.ClearCachedData()\n      Console.WriteLine(&quot;Current Time Zone: {0}&quot;,\n                        TimeZoneInfo.Local.DisplayName)\n      Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture(&quot;en-GB&quot;)\n      Dim sr As New StreamReader(filename)\n      Dim inputValues() As String = sr.ReadToEnd().Split( {&quot;|&quot;c} , StringSplitOptions.RemoveEmptyEntries)\n      sr.Close()\n      Console.WriteLine(&quot;The dates on an {0} system:&quot;, \n                        Thread.CurrentThread.CurrentCulture.Name)\n      For Each inputValue In inputValues\n         Dim dateValue As Date\n         If DateTime.TryParseExact(inputValue, &quot;O&quot;, CultureInfo.InvariantCulture, \n                              DateTimeStyles.RoundtripKind, dateValue) Then\n            Console.WriteLine(&quot;&#39;{0}&#39; --&gt; {1:f}&quot;, \n                              inputValue, dateValue.ToLocalTime())\n         Else\n            Console.WriteLine(&quot;Cannot parse &#39;{0}&#39;&quot;, inputValue)   \n         End If\n      Next\n      Console.WriteLine(&quot;Restored dates...&quot;)   \n   End Sub\nEnd Module\n&#39; When saved on an en-US system, the example displays the following output:\n&#39;       Current Time Zone: (UTC-08:00) Pacific Time (US &amp; Canada)\n&#39;       The dates on an en-US system:\n&#39;       Saturday, June 14, 2014 6:32 AM\n&#39;       Thursday, July 10, 2014 11:49 PM\n&#39;       Saturday, January 10, 2015 1:16 AM\n&#39;       Saturday, December 20, 2014 9:45 PM\n&#39;       Monday, June 02, 2014 3:14 PM\n&#39;       Saved dates...\n&#39;\n&#39; When restored on an en-GB system, the example displays the following output:\n&#39;       Current Time Zone: (UTC) Dublin, Edinburgh, Lisbon, London\n&#39;       The dates on an en-GB system:\n&#39;       &#39;2014-06-14T13:32:00.0000000Z&#39; --&gt; 14 June 2014 14:32\n&#39;       &#39;2014-07-11T06:49:00.0000000Z&#39; --&gt; 11 July 2014 07:49\n&#39;       &#39;2015-01-10T09:16:00.0000000Z&#39; --&gt; 10 January 2015 09:16\n&#39;       &#39;2014-12-21T05:45:00.0000000Z&#39; --&gt; 21 December 2014 05:45\n&#39;       &#39;2014-06-02T22:14:00.0000000Z&#39; --&gt; 02 June 2014 23:14\n&#39;       Restored dates...\n</code></pre></li>\n</ol>\n<p><a name=\"Integers\"></a>   </p>\n<h3 id=\"persisting-values-as-integers\">Persisting values as integers</h3>\n<p> Instead of persisting a DateTime value as a string, you can persist it as an <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value that represents a number of ticks. In this case, you don&#39;t have to consider the culture of the systems the DateTime values are persisted and restored on.  </p>\n<p> To persist a DateTime value as an integer:  </p>\n<ul>\n<li><p>If the DateTime values represent single moments in time, convert them to UTC by calling the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> method.  </p>\n</li>\n<li><p>Retrieve the number of ticks represented by the DateTime value from its <a class=\"xref\" href=\"system.datetime#System_DateTime_Ticks_\" data-linktype=\"relative-path\">Ticks</a> property.  </p>\n<p>To restore a DateTime value that has been persisted as an integer:  </p>\n</li>\n</ul>\n<ol>\n<li><p>Instantiate a new DateTime object by passing the <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> value to the <a class=\"xref\" href=\"system.datetime#System_DateTime__ctor_System_Int64_\" data-linktype=\"relative-path\">DateTime(Int64)</a> constructor.  </p>\n</li>\n<li><p>If the DateTime value represents a single moment in time, convert it from UTC to the local time by calling the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToLocalTime_\" data-linktype=\"relative-path\">ToLocalTime</a> method.  </p>\n<p>The following example persists an array of DateTime values as integers on a system in the U.S. Pacific Time zone. It restores it on a system in the UTC zone. The file that contains the integers includes an <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that indicates the total number of <a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a> values that immediately follow it.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTime.Persist#4\">Imports System.Globalization\nImports System.IO\nImports System.Threading\n\nModule Example\n   Private Const filename As String = &quot;.\\IntDates.bin&quot;\n\n   Public Sub Main()\n      If Not File.Exists(filename) Then\n         SaveDates()\n      Else\n         RestoreDates()\n      End If\n   End Sub\n\n   Private Sub SaveDates()\n      Dim dates() As Date = { #6/14/2014 6:32AM#, #7/10/2014 11:49PM#, \n                              #1/10/2015 1:16AM#, #12/20/2014 9:45PM#,\n                              #6/2/2014 3:14PM# }\n \n      Console.WriteLine(&quot;Current Time Zone: {0}&quot;,\n                        TimeZoneInfo.Local.DisplayName)\n      Console.WriteLine(&quot;The dates on an {0} system:&quot;, \n                        Thread.CurrentThread.CurrentCulture.Name)\n      Dim ticks(dates.Length - 1) As Long\n      For ctr As Integer = 0 To dates.Length - 1 \n         Console.WriteLine(dates(ctr).ToString(&quot;f&quot;))\n         ticks(ctr) = dates(ctr).ToUniversalTime().Ticks \n      Next\n      Dim fs As New FileStream(filename, FileMode.Create)\n      Dim bw As New BinaryWriter(fs)\n      bw.Write(ticks.Length)\n      For Each tick In ticks\n         bw.Write(tick)\n      Next\n      bw.Close()\n      Console.WriteLine(&quot;Saved dates...&quot;)\n   End Sub\n\n   Private Sub RestoreDates()\n      TimeZoneInfo.ClearCachedData()\n      Console.WriteLine(&quot;Current Time Zone: {0}&quot;,\n                        TimeZoneInfo.Local.DisplayName)\n      Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture(&quot;en-GB&quot;)\n      Dim fs As New FileStream(filename, FileMode.Open)\n      Dim br As New BinaryReader(fs)\n      Dim items As Integer\n      Dim dates() As DateTime\n      \n      Try\n         items = br.ReadInt32()\n         ReDim dates(items - 1)\n\n         For ctr As Integer = 0 To items - 1\n            Dim ticks As Long = br.ReadInt64()\n            dates(ctr) = New DateTime(Ticks).ToLocalTime()\n         Next      \n      Catch e As EndOfStreamException\n         Console.WriteLine(&quot;File corruption detected. Unable to restore data...&quot;)\n         Exit Sub\n      Catch e As IOException\n         Console.WriteLine(&quot;Unspecified I/O error. Unable to restore data...&quot;)\n         Exit Sub\n      Catch e As OutOfMemoryException     &#39;Thrown in array initialization.\n         Console.WriteLine(&quot;File corruption detected. Unable to restore data...&quot;)\n         Exit Sub\n      Finally\n         br.Close()   \n      End Try   \n      \n      Console.WriteLine(&quot;The dates on an {0} system:&quot;, \n                        Thread.CurrentThread.CurrentCulture.Name)\n      For Each value In dates\n         Console.WriteLine(value.ToString(&quot;f&quot;))\n      Next\n      Console.WriteLine(&quot;Restored dates...&quot;)   \n   End Sub\nEnd Module\n&#39; When saved on an en-US system, the example displays the following output:\n&#39;       Current Time Zone: (UTC-08:00) Pacific Time (US &amp; Canada)\n&#39;       The dates on an en-US system:\n&#39;       Saturday, June 14, 2014 6:32 AM\n&#39;       Thursday, July 10, 2014 11:49 PM\n&#39;       Saturday, January 10, 2015 1:16 AM\n&#39;       Saturday, December 20, 2014 9:45 PM\n&#39;       Monday, June 02, 2014 3:14 PM\n&#39;       Saved dates...\n&#39;\n&#39; When restored on an en-GB system, the example displays the following output:\n&#39;       Current Time Zone: (UTC) Dublin, Edinburgh, Lisbon, London\n&#39;       The dates on an en-GB system:\n&#39;       14 June 2014 14:32\n&#39;       11 July 2014 07:49\n&#39;       10 January 2015 09:16\n&#39;       21 December 2014 05:45\n&#39;       02 June 2014 23:14\n&#39;       Restored dates...\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.Persist#4\">using System;\nusing System.Globalization;\nusing System.IO;\nusing System.Threading;\n\nclass Example\n{\n   private const string filename = @&quot;.\\IntDates.bin&quot;;\n\n   public static void Main()\n   {\n      if (! File.Exists(filename))\n         SaveDates();\n      else\n         RestoreDates();\n   }\n\n   private static void SaveDates()\n   {\n      DateTime[] dates = { new DateTime(2014, 6, 14, 6, 32, 0), \n                           new DateTime(2014, 7, 10, 23, 49, 0),  \n                           new DateTime(2015, 1, 10, 1, 16, 0), \n                           new DateTime(2014, 12, 20, 21, 45, 0), \n                           new DateTime(2014, 6, 2, 15, 14, 0) }; \n \n      Console.WriteLine(&quot;Current Time Zone: {0}&quot;,\n                        TimeZoneInfo.Local.DisplayName);\n      Console.WriteLine(&quot;The dates on an {0} system:&quot;, \n                        Thread.CurrentThread.CurrentCulture.Name);\n      long[] ticks = new long[dates.Length];\n      for (int ctr = 0; ctr &lt; dates.Length; ctr++) { \n         Console.WriteLine(dates[ctr].ToString(&quot;f&quot;));\n         ticks[ctr] = dates[ctr].ToUniversalTime().Ticks; \n      }\n      FileStream fs = new FileStream(filename, FileMode.Create);\n      BinaryWriter bw = new BinaryWriter(fs);\n      bw.Write(ticks.Length);\n      foreach (var tick in ticks)\n         bw.Write(tick);\n\n      bw.Close();\n      Console.WriteLine(&quot;Saved dates...&quot;);\n   }\n\n   private static void RestoreDates()\n   {\n      TimeZoneInfo.ClearCachedData();\n      Console.WriteLine(&quot;Current Time Zone: {0}&quot;,\n                        TimeZoneInfo.Local.DisplayName);\n      Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture(&quot;en-GB&quot;);\n      FileStream fs = new FileStream(filename, FileMode.Open);\n      BinaryReader br = new BinaryReader(fs);\n      int items;\n      DateTime[] dates;\n\n      try { \n         items = br.ReadInt32();\n         dates = new DateTime[items];\n      \n         for (int ctr = 0; ctr &lt; items; ctr++) {\n            long ticks = br.ReadInt64();\n            dates[ctr] = new DateTime(ticks).ToLocalTime();\n         }\n      }   \n      catch (EndOfStreamException) {\n         Console.WriteLine(&quot;File corruption detected. Unable to restore data...&quot;);\n         return;\n      }   \n      catch (IOException) {\n         Console.WriteLine(&quot;Unspecified I/O error. Unable to restore data...&quot;);\n         return;\n      }\n      // Thrown during array initialization.\n      catch (OutOfMemoryException) {\n         Console.WriteLine(&quot;File corruption detected. Unable to restore data...&quot;);\n         return;\n      }\n      finally {      \n         br.Close();\n      }   \n      \n      Console.WriteLine(&quot;The dates on an {0} system:&quot;, \n                        Thread.CurrentThread.CurrentCulture.Name);\n      foreach (var value in dates)\n         Console.WriteLine(value.ToString(&quot;f&quot;));\n\n      Console.WriteLine(&quot;Restored dates...&quot;);   \n   }\n}\n// When saved on an en-US system, the example displays the following output:\n//       Current Time Zone: (UTC-08:00) Pacific Time (US &amp; Canada)\n//       The dates on an en-US system:\n//       Saturday, June 14, 2014 6:32 AM\n//       Thursday, July 10, 2014 11:49 PM\n//       Saturday, January 10, 2015 1:16 AM\n//       Saturday, December 20, 2014 9:45 PM\n//       Monday, June 02, 2014 3:14 PM\n//       Saved dates...\n//\n// When restored on an en-GB system, the example displays the following output:\n//       Current Time Zone: (UTC) Dublin, Edinburgh, Lisbon, London\n//       The dates on an en-GB system:\n//       14 June 2014 14:32\n//       11 July 2014 07:49\n//       10 January 2015 09:16\n//       21 December 2014 05:45\n//       02 June 2014 23:14\n//       Restored dates...\n</code></pre></li>\n</ol>\n<p><a name=\"Serialized\"></a>   </p>\n<h3 id=\"serializing-datetime-values\">Serializing DateTime values</h3>\n<p> Instead of saving DateTime values as strings or integers, which you then have to convert back to DateTime values, you can persist DateTime values through serialization to a stream or file, and then restore them through deserialization. In this case, DateTimedata is serialized in some specified object format, and the objects are restored when they are deserialized. A formatter or serializer, such as <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> or <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a>, handles the process of serialization and deserialization. For more information about serialization and the types of serialization supported by the .NET Framework, see <a href=\"../Topic/Serialization%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Serialization</a>.  </p>\n<p> The following example uses the <a class=\"xref\" href=\"system.xml.serialization.xmlserializer\" data-linktype=\"relative-path\">XmlSerializer</a> class to serialize and deserialize DateTime values that represent all leap year days in the twenty-first century. The output represents the result if the example is run on a system whose current culture is English (Great Britain). Because we&#39;ve deserialized the DateTime object itself, the code doesn&#39;t have to handle cultural differences in date and time formats.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Persist#5\">using System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Threading;\nusing System.Xml.Serialization;\n\nclass Example\n{\n   private const string filename = @&quot;.\\LeapYears.xml&quot;;\n   \n   public static void Main()\n   {\n      // Serialize the data.\n      List&lt;DateTime&gt; leapYears = new List&lt;DateTime&gt;();\n      for (int year = 2000; year &lt;= 2100; year += 4) {\n         if (DateTime.IsLeapYear(year)) \n            leapYears.Add(new DateTime(year, 2, 29));\n      }\n      DateTime[] dateArray = leapYears.ToArray();\n      \n      XmlSerializer serializer = new XmlSerializer(dateArray.GetType());\n      TextWriter sw = new StreamWriter(filename);\n      \n      try {\n         serializer.Serialize(sw, dateArray);\n      }\n      catch (InvalidOperationException e) {\n         Console.WriteLine(e.InnerException.Message);         \n      }\n      finally {\n         if (sw != null) sw.Close();\n      }   \n\n      // Deserialize the data.\n      DateTime[] deserializedDates;\n      using (FileStream fs = new FileStream(filename, FileMode.Open)) {\n         deserializedDates = (DateTime[]) serializer.Deserialize(fs);\n      } \n      \n      // Display the dates.\n      Console.WriteLine(&quot;Leap year days from 2000-2100 on an {0} system:&quot;,\n                        Thread.CurrentThread.CurrentCulture.Name);\n      int nItems = 0;\n      foreach (var dat in deserializedDates) {\n         Console.Write(&quot;   {0:d}     &quot;, dat);\n         nItems++;\n         if (nItems % 5 == 0) \n               Console.WriteLine(); \n      }\n   }\n}\n// The example displays the following output:\n//    Leap year days from 2000-2100 on an en-GB system:\n//       29/02/2000       29/02/2004       29/02/2008       29/02/2012       29/02/2016\n//       29/02/2020       29/02/2024       29/02/2028       29/02/2032       29/02/2036\n//       29/02/2040       29/02/2044       29/02/2048       29/02/2052       29/02/2056\n//       29/02/2060       29/02/2064       29/02/2068       29/02/2072       29/02/2076\n//       29/02/2080       29/02/2084       29/02/2088       29/02/2092       29/02/2096\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Persist#5\">Imports System.Collections.Generic\nImports System.IO\nImports System.Threading\nImports System.Xml.Serialization\n\nModule Example\n   Private Const filename As String = &quot;.\\LeapYears.xml&quot;\n   \n   Public Sub Main()\n      &#39; Serialize the data.\n      Dim leapYears As New List(Of DateTime)()\n      For year As Integer = 2000 To 2100 Step 4\n         If Date.IsLeapYear(year) Then \n            leapYears.Add(New Date(year, 2, 29))\n         End If\n      Next\n      Dim dateArray() As DateTime = leapYears.ToArray()\n      \n      Dim serializer As New XMLSerializer(dateArray.GetType())\n      Dim sw As TextWriter = New StreamWriter(fileName)\n      \n      Try\n         serializer.Serialize(sw, dateArray)\n      Catch e As InvalidOperationException\n         Console.WriteLine(e.InnerException.Message)         \n      Finally\n         If sw IsNot Nothing Then sw.Close()\n      End Try   \n\n      &#39; Deserialize the data.\n      Dim deserializedDates() As Date\n      Using fs As New FileStream(filename, FileMode.Open)\n         deserializedDates = CType(serializer.Deserialize(fs), Date())\n      End Using \n      \n      &#39; Display the dates.\n      Console.WriteLine(&quot;Leap year days from 2000-2100 on an {0} system:&quot;,\n                        Thread.CurrentThread.CurrentCulture.Name)\n      Dim nItems As Integer\n      For Each dat In deserializedDates\n         Console.Write(&quot;   {0:d}     &quot;, dat)\n         nItems += 1\n         If nItems Mod 5 = 0 Then Console.WriteLine() \n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    Leap year days from 2000-2100 on an en-GB system:\n&#39;       29/02/2000       29/02/2004       29/02/2008       29/02/2012       29/02/2016\n&#39;       29/02/2020       29/02/2024       29/02/2028       29/02/2032       29/02/2036\n&#39;       29/02/2040       29/02/2044       29/02/2048       29/02/2052       29/02/2056\n&#39;       29/02/2060       29/02/2064       29/02/2068       29/02/2072       29/02/2076\n&#39;       29/02/2080       29/02/2084       29/02/2088       29/02/2092       29/02/2096\n</code></pre><p> The previous example doesn&#39;t include time information. However, if a DateTime value represents a moment in time and is expressed as a local time, you should convert it from local time to UTC before serializing it by calling the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> method. After you deserialize it, you should convert it from UTC to local time by calling the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToLocalTime_\" data-linktype=\"relative-path\">ToLocalTime</a> method. The following example uses the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a> class to serializeDateTime data on a system in the U.S. Pacific Standard Time zone and to deserialize it on a system in the UTC zone.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Persist#3\">using System;\nusing System.IO;\nusing System.Globalization;\nusing System.Runtime.Serialization.Formatters.Binary;\nusing System.Threading;\n\nclass Example\n{\n   private const string filename = @&quot;.\\Dates.bin&quot;;\n\n   public static void Main()\n   {\n      if (! File.Exists(filename))\n         SaveDates();\n      else\n         RestoreDates();\n   }\n\n   private static void SaveDates()\n   {\n      DateTime[] dates = { new DateTime(2014, 6, 14, 6, 32, 0), \n                           new DateTime(2014, 7, 10, 23, 49, 0),  \n                           new DateTime(2015, 1, 10, 1, 16, 0), \n                           new DateTime(2014, 12, 20, 21, 45, 0), \n                           new DateTime(2014, 6, 2, 15, 14, 0) }; \n      FileStream fs = new FileStream(filename, FileMode.Create);\n      BinaryFormatter bin = new BinaryFormatter();\n      \n      Console.WriteLine(&quot;Current Time Zone: {0}&quot;,\n                        TimeZoneInfo.Local.DisplayName);\n      Console.WriteLine(&quot;The dates on an {0} system:&quot;, \n                        Thread.CurrentThread.CurrentCulture.Name);\n      for (int ctr = 0; ctr &lt; dates.Length; ctr++) { \n         Console.WriteLine(dates[ctr].ToString(&quot;f&quot;));\n         dates[ctr] = dates[ctr].ToUniversalTime();\n      }\n      bin.Serialize(fs, dates);\n      fs.Close();\n      Console.WriteLine(&quot;Saved dates...&quot;);\n   }\n\n   private static void RestoreDates()\n   {\n      TimeZoneInfo.ClearCachedData();\n      Console.WriteLine(&quot;Current Time Zone: {0}&quot;,\n                        TimeZoneInfo.Local.DisplayName);\n      Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture(&quot;en-GB&quot;);\n\n      FileStream fs = new FileStream(filename, FileMode.Open);\n      BinaryFormatter bin = new BinaryFormatter();\n      DateTime[] dates = (DateTime[]) bin.Deserialize(fs);\n      fs.Close();\n      \n      Console.WriteLine(&quot;The dates on an {0} system:&quot;, \n                        Thread.CurrentThread.CurrentCulture.Name);\n      foreach (var value in dates)\n         Console.WriteLine(value.ToLocalTime().ToString(&quot;f&quot;));\n\n      Console.WriteLine(&quot;Restored dates...&quot;);   \n   }\n}\n// When saved on an en-US system, the example displays the following output:\n//       Current Time Zone: (UTC-08:00) Pacific Time (US &amp; Canada)\n//       The dates on an en-US system:\n//       Saturday, June 14, 2014 6:32 AM\n//       Thursday, July 10, 2014 11:49 PM\n//       Saturday, January 10, 2015 1:16 AM\n//       Saturday, December 20, 2014 9:45 PM\n//       Monday, June 02, 2014 3:14 PM\n//       Saved dates...\n//\n// When restored on an en-GB system, the example displays the following output:\n//       Current Time Zone: (UTC) Dublin, Edinburgh, Lisbon, London\n//       The dates on an en-GB system:\n//       14 June 2014 14:32\n//       11 July 2014 07:49\n//       10 January 2015 09:16\n//       21 December 2014 05:45\n//       02 June 2014 23:14\n//       Restored dates...\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Persist#3\">Imports System.IO\nImports System.Globalization\nImports System.Runtime.Serialization.Formatters.Binary\nImports System.Threading\n\nModule Example\n   Private Const filename As String = &quot;.\\Dates.bin&quot;\n\n   Public Sub Main()\n      If Not File.Exists(filename) Then\n         SaveDates()\n      Else\n         RestoreDates()\n      End If\n   End Sub\n\n   Private Sub SaveDates()\n      Dim dates() As Date = { #6/14/2014 6:32AM#, #7/10/2014 11:49PM#, \n                              #1/10/2015 1:16AM#, #12/20/2014 9:45PM#,\n                              #6/2/2014 3:14PM# }\n      Dim fs As New FileStream(filename, FileMode.Create)\n      Dim bin As New BinaryFormatter()\n      \n      Console.WriteLine(&quot;Current Time Zone: {0}&quot;,\n                        TimeZoneInfo.Local.DisplayName)\n      Console.WriteLine(&quot;The dates on an {0} system:&quot;, \n                        Thread.CurrentThread.CurrentCulture.Name)\n      For ctr As Integer = 0 To dates.Length - 1 \n         Console.WriteLine(dates(ctr).ToString(&quot;f&quot;))\n         dates(ctr) = dates(ctr).ToUniversalTime()\n      Next\n      bin.Serialize(fs, dates)\n      fs.Close()\n      Console.WriteLine(&quot;Saved dates...&quot;)\n   End Sub\n\n   Private Sub RestoreDates()\n      TimeZoneInfo.ClearCachedData()\n      Console.WriteLine(&quot;Current Time Zone: {0}&quot;,\n                        TimeZoneInfo.Local.DisplayName)\n      Thread.CurrentThread.CurrentCulture = CultureInfo.CreateSpecificCulture(&quot;en-GB&quot;)\n\n      Dim fs As New FileStream(filename, FileMode.Open)\n      Dim bin As New BinaryFormatter()\n      Dim dates() As DateTime = DirectCast(bin.Deserialize(fs), Date())\n      fs.Close()\n      \n      Console.WriteLine(&quot;The dates on an {0} system:&quot;, \n                        Thread.CurrentThread.CurrentCulture.Name)\n      For Each value In dates\n         Console.WriteLine(value.ToLocalTime().ToString(&quot;f&quot;))\n      Next\n      Console.WriteLine(&quot;Restored dates...&quot;)   \n   End Sub\nEnd Module\n&#39; When saved on an en-US system, the example displays the following output:\n&#39;       Current Time Zone: (UTC-08:00) Pacific Time (US &amp; Canada)\n&#39;       The dates on an en-US system:\n&#39;       Saturday, June 14, 2014 6:32 AM\n&#39;       Thursday, July 10, 2014 11:49 PM\n&#39;       Saturday, January 10, 2015 1:16 AM\n&#39;       Saturday, December 20, 2014 9:45 PM\n&#39;       Monday, June 02, 2014 3:14 PM\n&#39;       Saved dates...\n&#39;\n&#39; When restored on an en-GB system, the example displays the following output:\n&#39;       Current Time Zone: (UTC) Dublin, Edinburgh, Lisbon, London\n&#39;       The dates on an en-GB system:\n&#39;       14 June 2014 14:32\n&#39;       11 July 2014 07:49\n&#39;       10 January 2015 09:16\n&#39;       21 December 2014 05:45\n&#39;       02 June 2014 23:14\n&#39;       Restored dates...\n</code></pre><p><a name=\"TimeZone\"></a>   </p>\n<h3 id=\"serializing-datetime-and-time-zone-data\">Serializing DateTime and time zone data</h3>\n<p> The previous examples have all assumed that DateTime values are expressed as local times, and converted the values between UTC and local time so they reflect the same moment in time on the source and target systems. DateTime values may also reflect moments in time in a time zone other than local and UTC. In this case, because the DateTime structure is not time zone-aware, you have to serialize both the DateTimevalue and the <a class=\"xref\" href=\"system.timezoneinfo\" data-linktype=\"relative-path\">TimeZoneInfo</a> object that represents its time zone. To do this, create a type whose fields include both the DateTime value and its time zone. The following example defines a <code>DateWithTimeZone</code> structure that illustrates how this might be done.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Persist#6\">using System;\n\nnamespace DateTimeExtensions\n{\n   [Serializable] public struct DateWithTimeZone\n   {\n      private TimeZoneInfo tz;\n      private DateTime dt;\n      \n      public DateWithTimeZone(DateTime dateValue, TimeZoneInfo timeZone)\n      {\n         dt = dateValue;\n         if (timeZone == null)\n            tz = TimeZoneInfo.Local;\n         else\n            tz = timeZone;\n      }   \n      \n      public TimeZoneInfo TimeZone \n      { get { return (tz); }\n        set { tz = value; } }\n      \n      public DateTime DateTime \n      { get { return (dt); }\n        set { dt = value; } }\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Persist#6\">Namespace DateTimeExtensions\n   &lt;Serializable&gt; Public Structure DateWithTimeZone\n      Private tz As TimeZoneInfo\n      Private dt As DateTime\n      \n      Public Sub New(dateValue As DateTime, timeZone As TimeZoneInfo)\n         dt = dateValue\n         If timeZone Is Nothing Then\n            tz = TimeZoneInfo.Local\n         Else\n            tz = timeZone\n         End If   \n      End Sub   \n      \n      Public Property TimeZone As TimeZoneInfo\n         Get\n            Return tz\n         End Get\n         Set\n            tz = value\n         End Set\n      End Property\n      \n      Public Property DateTime As Date\n         Get\n            Return dt\n         End Get\n         Set\n            dt = value\n         End Set\n      End Property\n   End Structure\nEnd Namespace\n</code></pre><div class=\"IMPORTANT\"><h5>Important</h5><p> The <code>DateWithTimeZone</code> structure is used in the next two examples, which serialize and deserialize an array of <code>DateWithTimeZone</code> objects. To run the examples, first create a class library that contains the <code>DateWithTimeZone</code> structure, and then add a reference to it when you compile each example.  </p>\n</div>\n<p> By using the <code>DateWithTimeZone</code> structure , you can then persist date and time along with time zone information. The following example uses the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter\" data-linktype=\"relative-path\">BinaryFormatter</a> class to serialize an array of <code>DateWithTimeZone</code>objects.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Persist#7\">using System;\nusing DateTimeExtensions;\nusing System.IO;\nusing System.Runtime.Serialization;\nusing System.Runtime.Serialization.Formatters.Binary;\n\npublic class Example\n{\n   public static void Main()\n   {\n      DateWithTimeZone[] dates= { new DateWithTimeZone(new DateTime(2014, 8, 9, 19, 30, 0),  \n                                      TimeZoneInfo.FindSystemTimeZoneById(&quot;Eastern Standard Time&quot;)),\n                                  new DateWithTimeZone(new DateTime(2014, 8, 15, 19, 0, 0), \n                                      TimeZoneInfo.FindSystemTimeZoneById(&quot;Pacific Standard Time&quot;)),  \n                                  new DateWithTimeZone(new DateTime(2014, 8, 22, 19, 30, 0),  \n                                      TimeZoneInfo.FindSystemTimeZoneById(&quot;Eastern Standard Time&quot;)),  \n                                  new DateWithTimeZone(new DateTime(2014, 8, 28, 19, 0, 0), \n                                      TimeZoneInfo.FindSystemTimeZoneById(&quot;Eastern Standard Time&quot;)) };\n      FileStream fs = new FileStream(@&quot;.\\Schedule.bin&quot;, FileMode.Create);\n      BinaryFormatter formatter = new BinaryFormatter();\n      try {\n         formatter.Serialize(fs, dates);\n         // Display dates.\n         foreach (var date in dates) {\n            TimeZoneInfo tz = date.TimeZone;\n            Console.WriteLine(&quot;{0} {1}&quot;, date.DateTime, \n                              tz.IsDaylightSavingTime(date.DateTime) ? \n                              tz.DaylightName : tz.StandardName);      \n         }\n      }\n      catch (SerializationException e) {\n         Console.WriteLine(&quot;Serialization failed. Reason: {0}&quot;, e.Message);\n      }   \n      finally {\n         if (fs != null) fs.Close();\n      }\n   }\n}\n// The example displays the following output:\n//       8/9/2014 7:30:00 PM Eastern Daylight Time\n//       8/15/2014 7:00:00 PM Pacific Daylight Time\n//       8/22/2014 7:30:00 PM Eastern Daylight Time\n//       8/28/2014 7:00:00 PM Eastern Daylight Time\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Persist#7\">Imports DateTimeExtensions\nImports System.IO\nImports System.Runtime.Serialization\nImports System.Runtime.Serialization.Formatters.Binary\n\nModule Example\n   Public Sub Main()\n      Dim dates() As DateWithTimeZone = { New DateWithTimeZone(#8/9/2014 7:30PM#, \n                                              TimeZoneInfo.FindSystemTimeZoneById(&quot;Eastern Standard Time&quot;)),\n                                          New DateWithTimeZone(#8/15/2014 7:00PM#, \n                                              TimeZoneInfo.FindSystemTimeZoneById(&quot;Pacific Standard Time&quot;)),  \n                                          New DateWithTimeZone(#8/22/2014 7:30PM#, \n                                              TimeZoneInfo.FindSystemTimeZoneById(&quot;Eastern Standard Time&quot;)),  \n                                          New DateWithTimeZone(#8/28/2014 7:00PM#, \n                                              TimeZoneInfo.FindSystemTimeZoneById(&quot;Eastern Standard Time&quot;)) }\n      Dim fs As New FileStream(&quot;.\\Schedule.bin&quot;, FileMode.Create)\n      Dim formatter As New BinaryFormatter()\n      Try\n         formatter.Serialize(fs, dates)\n      Catch e As SerializationException\n         Console.WriteLine(&quot;Serialization failed. Reason: {0}&quot;, e.Message)\n      Finally\n         If fs IsNot Nothing Then fs.Close()\n      End Try      \n      &#39; Display dates.\n      For Each dateInfo In dates\n         Dim tz As TimeZoneInfo = dateInfo.TimeZone\n         Console.WriteLine(&quot;{0} {1}&quot;, dateInfo.DateTime, \n                           If(tz.IsDaylightSavingTime(dateInfo.DateTime), \n                           tz.DaylightName, tz.StandardName))      \n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       8/9/2014 7:30:00 PM Eastern Daylight Time\n&#39;       8/15/2014 7:00:00 PM Pacific Daylight Time\n&#39;       8/22/2014 7:30:00 PM Eastern Daylight Time\n&#39;       8/28/2014 7:00:00 PM Eastern Daylight Time\n</code></pre><p> The following example then calls the <a class=\"xref\" href=\"system.runtime.serialization.formatters.binary.binaryformatter#System_Runtime_Serialization_Formatters_Binary_BinaryFormatter_Deserialize_\" data-linktype=\"relative-path\">Deserialize</a> method to deserialize it.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Persist#8\">using System;\nusing DateTimeExtensions;\nusing System.IO;\nusing System.Runtime.Serialization;\nusing System.Runtime.Serialization.Formatters.Binary;\n\npublic class Example\n{\n   private const string filename = @&quot;.\\Schedule.bin&quot;;\n\n   public static void Main()\n   {\n      FileStream fs;\n      if (File.Exists(filename))\n         fs = new FileStream(filename, FileMode.Open);\n      else {\n         Console.WriteLine(&quot;Unable to find file to deserialize.&quot;);\n         return;\n      }\n\n      BinaryFormatter formatter = new BinaryFormatter();\n      DateWithTimeZone[] dates;\n      try {\n         dates = (DateWithTimeZone[]) formatter.Deserialize(fs);\n         // Display dates.\n         foreach (var date in dates) {\n            TimeZoneInfo tz = date.TimeZone;\n            Console.WriteLine(&quot;{0} {1}&quot;, date.DateTime, \n                              tz.IsDaylightSavingTime(date.DateTime) ? \n                              tz.DaylightName : tz.StandardName);      \n         }\n      }\n      catch (SerializationException e) {\n         Console.WriteLine(&quot;Deserialization failed. Reason: {0}&quot;, e.Message);\n      }   \n      finally {\n         if (fs != null) fs.Close();\n      }\n   }\n}\n// The example displays the following output:\n//       8/9/2014 7:30:00 PM Eastern Daylight Time\n//       8/15/2014 7:00:00 PM Pacific Daylight Time\n//       8/22/2014 7:30:00 PM Eastern Daylight Time\n//       8/28/2014 7:00:00 PM Eastern Daylight Time\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Persist#8\">Imports DateTimeExtensions\nImports System.IO\nImports System.Runtime.Serialization\nImports System.Runtime.Serialization.Formatters.Binary\n\nModule Example\n   Private Const filename As String = &quot;.\\Schedule.bin&quot;\n\n   Public Sub Main()\n      Dim fs As FileStream\n      If File.Exists(filename) Then\n         fs = New FileStream(filename, FileMode.Open)\n      Else\n         Console.WriteLine(&quot;Unable to find file to deserialize.&quot;)\n         Exit Sub\n      End If\n      \n      Dim formatter As New BinaryFormatter()\n      Dim dates() As DateWithTimeZone = Nothing\n      Try\n         dates = DirectCast(formatter.Deserialize(fs), DateWithTimeZone()) \n         &#39; Display dates.\n         For Each dateInfo In dates\n            Dim tz As TimeZoneInfo = dateInfo.TimeZone\n            Console.WriteLine(&quot;{0} {1}&quot;, dateInfo.DateTime, \n                              If(tz.IsDaylightSavingTime(dateInfo.DateTime), \n                              tz.DaylightName, tz.StandardName))      \n         Next\n      Catch e As SerializationException\n         Console.WriteLine(&quot;Deserialization failed. Reason: {0}&quot;, e.Message)\n      Finally\n         If fs IsNot Nothing Then fs.Close()\n      End Try      \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       8/9/2014 7:30:00 PM Eastern Daylight Time\n&#39;       8/15/2014 7:00:00 PM Pacific Daylight Time\n&#39;       8/22/2014 7:30:00 PM Eastern Daylight Time\n&#39;       8/28/2014 7:00:00 PM Eastern Daylight Time\n</code></pre><p><a name=\"com_interop\"></a>   </p>\n<h2 id=\"com-interop-considerations\">COM interop considerations</h2>\n<p> A DateTime value that is transferred to a COM application, then is transferred back to a managed application, is said to round-trip. However, a DateTime value that specifies only a time does not round-trip as you might expect.  </p>\n<p> If you round-trip only a time, such as 3 P.M., the final date and time is December 30, 1899 C.E. at 3:00 P.M., instead of January, 1, 0001 C.E. at 3:00 P.M. This happens because the .NET Framework and COM assume a default date when only a time is specified. However, the COM system assumes a base date of December 30, 1899 C.E. while the .NET Framework assumes a base date of January, 1, 0001 C.E.  </p>\n<p> When only a time is passed from the .NET Framework to COM, special processing is performed that converts the time to the format used by COM. When only a time is passed from COM to the .NET Framework, no special processing is performed because that would corrupt legitimate dates and times on or before December 30, 1899. This also means if a date starts its round-trip from COM, the .NET Framework and COM preserve the date.  </p>\n<p> The behavior of the .NET Framework and COM means that if your application round-trips a DateTime that only specifies a time, your application must remember to modify or ignore the erroneous date from the final DateTime object.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime__ctor_System_Int64_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DateTime(Int64)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure to a specified number of ticks.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime (long ticks);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ticks</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>ticks</code> is less than <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">MinValue</a> or greater than <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is initialized to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>.  </p>\n<p> For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> constructor.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime__ctor_System_Int64_System_DateTimeKind_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DateTime(Int64,DateTimeKind)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime (long ticks, DateTimeKind kind);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>ticks</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>kind</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the enumeration values that indicates whether <code>ticks</code> specifies a local time, Coordinated Universal Time (UTC), or neither.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>ticks</code> is less than <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">MinValue</a> or greater than <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>kind</code> is not one of the <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> values.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> constructor.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime__ctor_System_Int32_System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DateTime(Int32,Int32,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure to the specified year, month, and day.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime (int year, int month, int day);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>year</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The year (1 through 9999).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>month</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The month (1 through 12).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>day</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The day (1 through the number of days in <code>month</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>year</code> is less than 1 or greater than 9999.  </p>\n<p> -or-  </p>\n<p> <code>month</code> is less than 1 or greater than 12.  </p>\n<p> -or-  </p>\n<p> <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor interprets <code>year</code>, <code>month</code>, and <code>day</code> as a year, month, and day in the Gregorian calendar. To instantiate a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value by using the year, month, and day in another calendar, call the <a class=\"xref\" href=\"system.datetime#System_DateTime__ctor_System_Int32_System_Int32_System_Int32_System_Globalization_Calendar_\" data-linktype=\"relative-path\">DateTime(Int32,Int32,Int32,Calendar)</a> constructor.  </p>\n<p> The time of day for the resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is midnight (00:00:00). The <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is initialized to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime__ctor_System_Int32_System_Int32_System_Int32_System_Globalization_Calendar_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DateTime(Int32,Int32,Int32,Calendar)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure to the specified year, month, and day for the specified calendar.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime (int year, int month, int day, System.Globalization.Calendar calendar);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>year</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The year (1 through the number of years in <code>calendar</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>month</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The month (1 through the number of months in <code>calendar</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>day</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The day (1 through the number of days in <code>month</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>calendar</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.calendar\" data-linktype=\"relative-path\">Calendar</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>calendar</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>year</code> is not in the range supported by <code>calendar</code>.  </p>\n<p> -or-  </p>\n<p> <code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>.  </p>\n<p> -or-  </p>\n<p> <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The time of day for the resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is midnight (00:00:00). The <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is initialized to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>.  </p>\n<p> The allowable values for <code>year</code>, <code>month</code>, and <code>day</code> depend on <code>calendar</code>. An exception is thrown if the specified date and time cannot be expressed using <code>calendar</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace provides several calendars including <a class=\"xref\" href=\"system.globalization.gregoriancalendar\" data-linktype=\"relative-path\">GregorianCalendar</a> and <a class=\"xref\" href=\"system.globalization.juliancalendar\" data-linktype=\"relative-path\">JulianCalendar</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DateTime(Int32,Int32,Int32,Int32,Int32,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure to the specified year, month, day, hour, minute, and second.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime (int year, int month, int day, int hour, int minute, int second);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>year</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The year (1 through 9999).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>month</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The month (1 through 12).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>day</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The day (1 through the number of days in <code>month</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>hour</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The hours (0 through 23).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>minute</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The minutes (0 through 59).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>second</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The seconds (0 through 59).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>year</code> is less than 1 or greater than 9999.  </p>\n<p> -or-  </p>\n<p> <code>month</code> is less than 1 or greater than 12.  </p>\n<p> -or-  </p>\n<p> <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  </p>\n<p> -or-  </p>\n<p> <code>hour</code> is less than 0 or greater than 23.  </p>\n<p> -or-  </p>\n<p> <code>minute</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>second</code> is less than 0 or greater than 59.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is initialized to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>.  </p>\n<p> This constructor interprets<code>year</code>, <code>month</code>, and <code>day</code> as a year, month, and day in the Gregorian calendar. To instantiate a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value by using the year, month, and day in another calendar, call the <a class=\"xref\" href=\"system.datetime#System_DateTime__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Globalization_Calendar_\" data-linktype=\"relative-path\">DateTime(Int32,Int32,Int32,Int32,Int32,Int32,Calendar)</a> constructor.  </p>\n<p> For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> constructor.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_DateTimeKind_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DateTime(Int32,Int32,Int32,Int32,Int32,Int32,DateTimeKind)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime (int year, int month, int day, int hour, int minute, int second, DateTimeKind kind);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>year</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The year (1 through 9999).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>month</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The month (1 through 12).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>day</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The day (1 through the number of days in <code>month</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>hour</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The hours (0 through 23).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>minute</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The minutes (0 through 59).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>second</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The seconds (0 through 59).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>kind</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the enumeration values that indicates whether <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code> and <code>second</code> specify a local time, Coordinated Universal Time (UTC), or neither.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>year</code> is less than 1 or greater than 9999.  </p>\n<p> -or-  </p>\n<p> <code>month</code> is less than 1 or greater than 12.  </p>\n<p> -or-  </p>\n<p> <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  </p>\n<p> -or-  </p>\n<p> <code>hour</code> is less than 0 or greater than 23.  </p>\n<p> -or-  </p>\n<p> <code>minute</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>second</code> is less than 0 or greater than 59.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>kind</code> is not one of the <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> values.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor interprets<code>year</code>, <code>month</code>, and <code>day</code> as a year, month, and day in the Gregorian calendar. To instantiate a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value by using the year, month, and day in another calendar, call the <a class=\"xref\" href=\"system.datetime#System_DateTime__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Globalization_Calendar_System_DateTimeKind_\" data-linktype=\"relative-path\">DateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,DateTimeKind)</a> constructor.  </p>\n<p> For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> constructor.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Globalization_Calendar_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DateTime(Int32,Int32,Int32,Int32,Int32,Int32,Calendar)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure to the specified year, month, day, hour, minute, and second for the specified calendar.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime (int year, int month, int day, int hour, int minute, int second, System.Globalization.Calendar calendar);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>year</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The year (1 through the number of years in <code>calendar</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>month</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The month (1 through the number of months in <code>calendar</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>day</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The day (1 through the number of days in <code>month</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>hour</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The hours (0 through 23).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>minute</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The minutes (0 through 59).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>second</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The seconds (0 through 59).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>calendar</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.calendar\" data-linktype=\"relative-path\">Calendar</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>calendar</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>year</code> is not in the range supported by <code>calendar</code>.  </p>\n<p> -or-  </p>\n<p> <code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>.  </p>\n<p> -or-  </p>\n<p> <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  </p>\n<p> -or-  </p>\n<p> <code>hour</code> is less than 0 or greater than 23  </p>\n<p> -or-  </p>\n<p> <code>minute</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>second</code> is less than 0 or greater than 59.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is initialized to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>.  </p>\n<p> The allowable values for <code>year</code>, <code>month</code>, and <code>day</code> depend on <code>calendar</code>. An exception is thrown if the specified date and time cannot be expressed using <code>calendar</code>.  </p>\n<p> The <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace provides several calendars including <a class=\"xref\" href=\"system.globalization.gregoriancalendar\" data-linktype=\"relative-path\">GregorianCalendar</a> and <a class=\"xref\" href=\"system.globalization.juliancalendar\" data-linktype=\"relative-path\">JulianCalendar</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure to the specified year, month, day, hour, minute, second, and millisecond.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>year</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The year (1 through 9999).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>month</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The month (1 through 12).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>day</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The day (1 through the number of days in <code>month</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>hour</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The hours (0 through 23).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>minute</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The minutes (0 through 59).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>second</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The seconds (0 through 59).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>millisecond</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The milliseconds (0 through 999).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>year</code> is less than 1 or greater than 9999.  </p>\n<p> -or-  </p>\n<p> <code>month</code> is less than 1 or greater than 12.  </p>\n<p> -or-  </p>\n<p> <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  </p>\n<p> -or-  </p>\n<p> <code>hour</code> is less than 0 or greater than 23.  </p>\n<p> -or-  </p>\n<p> <code>minute</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>second</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>millisecond</code> is less than 0 or greater than 999.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor interprets<code>year</code>, <code>month</code>, and <code>day</code> as a year, month, and day in the Gregorian calendar. To instantiate a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value by using the year, month, and day in another calendar, call the <a class=\"xref\" href=\"system.datetime#System_DateTime__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Globalization_Calendar_\" data-linktype=\"relative-path\">DateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar)</a> constructor.  </p>\n<p> The <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is initialized to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>.  </p>\n<p> For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> constructor.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_DateTimeKind_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,DateTimeKind)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, DateTimeKind kind);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>year</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The year (1 through 9999).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>month</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The month (1 through 12).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>day</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The day (1 through the number of days in <code>month</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>hour</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The hours (0 through 23).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>minute</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The minutes (0 through 59).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>second</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The seconds (0 through 59).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>millisecond</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The milliseconds (0 through 999).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>kind</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the enumeration values that indicates whether <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>, <code>second</code>, and <code>millisecond</code> specify a local time, Coordinated Universal Time (UTC), or neither.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>year</code> is less than 1 or greater than 9999.  </p>\n<p> -or-  </p>\n<p> <code>month</code> is less than 1 or greater than 12.  </p>\n<p> -or-  </p>\n<p> <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  </p>\n<p> -or-  </p>\n<p> <code>hour</code> is less than 0 or greater than 23.  </p>\n<p> -or-  </p>\n<p> <code>minute</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>second</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>millisecond</code> is less than 0 or greater than 999.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>kind</code> is not one of the <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> values.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This constructor interprets<code>year</code>, <code>month</code>, and <code>day</code> as a year, month, and day in the Gregorian calendar. To instantiate a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value by using the year, month, and day in another calendar, call the <a class=\"xref\" href=\"system.datetime#System_DateTime__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Globalization_Calendar_System_DateTimeKind_\" data-linktype=\"relative-path\">DateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,DateTimeKind)</a> constructor.  </p>\n<p> For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> constructor.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Globalization_Calendar_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure to the specified year, month, day, hour, minute, second, and millisecond for the specified calendar.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>year</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The year (1 through the number of years in <code>calendar</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>month</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The month (1 through the number of months in <code>calendar</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>day</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The day (1 through the number of days in <code>month</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>hour</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The hours (0 through 23).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>minute</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The minutes (0 through 59).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>second</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The seconds (0 through 59).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>millisecond</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The milliseconds (0 through 999).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>calendar</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.calendar\" data-linktype=\"relative-path\">Calendar</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>calendar</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>year</code> is not in the range supported by <code>calendar</code>.  </p>\n<p> -or-  </p>\n<p> <code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>.  </p>\n<p> -or-  </p>\n<p> <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  </p>\n<p> -or-  </p>\n<p> <code>hour</code> is less than 0 or greater than 23.  </p>\n<p> -or-  </p>\n<p> <code>minute</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>second</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>millisecond</code> is less than 0 or greater than 999.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is initialized to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>.  </p>\n<p> The allowable values for <code>year</code>, <code>month</code>, and <code>day</code> depend on <code>calendar</code>. An exception is thrown if the specified date and time cannot be expressed using <code>calendar</code>.  </p>\n<p> For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> constructor.  </p>\n<p> The <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace provides several calendars including <a class=\"xref\" href=\"system.globalization.gregoriancalendar\" data-linktype=\"relative-path\">GregorianCalendar</a> and <a class=\"xref\" href=\"system.globalization.juliancalendar\" data-linktype=\"relative-path\">JulianCalendar</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Globalization_Calendar_System_DateTimeKind_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,DateTimeKind)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time for the specified calendar.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, DateTimeKind kind);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>year</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The year (1 through the number of years in <code>calendar</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>month</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The month (1 through the number of months in <code>calendar</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>day</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The day (1 through the number of days in <code>month</code>).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>hour</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The hours (0 through 23).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>minute</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The minutes (0 through 59).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>second</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The seconds (0 through 59).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>millisecond</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The milliseconds (0 through 999).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>calendar</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.calendar\" data-linktype=\"relative-path\">Calendar</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The calendar that is used to interpret <code>year</code>, <code>month</code>, and <code>day</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>kind</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the enumeration values that indicates whether <code>year</code>, <code>month</code>, <code>day</code>, <code>hour</code>, <code>minute</code>, <code>second</code>, and <code>millisecond</code> specify a local time, Coordinated Universal Time (UTC), or neither.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>calendar</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>year</code> is not in the range supported by <code>calendar</code>.  </p>\n<p> -or-  </p>\n<p> <code>month</code> is less than 1 or greater than the number of months in <code>calendar</code>.  </p>\n<p> -or-  </p>\n<p> <code>day</code> is less than 1 or greater than the number of days in <code>month</code>.  </p>\n<p> -or-  </p>\n<p> <code>hour</code> is less than 0 or greater than 23.  </p>\n<p> -or-  </p>\n<p> <code>minute</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>second</code> is less than 0 or greater than 59.  </p>\n<p> -or-  </p>\n<p> <code>millisecond</code> is less than 0 or greater than 999.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>kind</code> is not one of the <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> values.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The allowable values for <code>year</code>, <code>month</code>, and <code>day</code> parameters depend on the <code>calendar</code> parameter. An exception is thrown if the specified date and time cannot be expressed using <code>calendar</code>.  </p>\n<p> For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> constructor.  </p>\n<p> The <a class=\"xref\" href=\"system.globalization\" data-linktype=\"relative-path\">System.Globalization</a> namespace provides several calendars including <a class=\"xref\" href=\"system.globalization.gregoriancalendar\" data-linktype=\"relative-path\">GregorianCalendar</a> and <a class=\"xref\" href=\"system.globalization.juliancalendar\" data-linktype=\"relative-path\">JulianCalendar</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Fields\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_MaxValue\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MaxValue</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the largest possible value of <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>. This field is read-only.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly DateTime MaxValue;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of this constant is equivalent to 23:59:59.9999999 UTC, December 31, 9999 in the Gregorian calendar, exactly one 100-nanosecond tick before 00:00:00 UTC, January 1, 10000.  </p>\n<p> Some calendars, such as the <a class=\"xref\" href=\"system.globalization.umalquracalendar\" data-linktype=\"relative-path\">UmAlQuraCalendar</a>, support an upper date range that is earlier than MaxValue. In these cases, trying to access MaxValue in variable assignments or formatting and parsing operations can throw an <a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a>. Rather than retrieving the value of MaxValue, you can retrieve the value of the specified culture&#39;s latest valid date value from the <code>System.Globalization.CultureInfo.DateTimeFormat.Calendar.MaxSupportedDateTime</code> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_MinValue\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MinValue</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Represents the smallest possible value of <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>. This field is read-only.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly DateTime MinValue;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of this constant is equivalent to 00:00:00.0000000 UTC, January 1, 0001, in the Gregorian calendar.  </p>\n<p> MinValue defines the date and time that is assigned to an uninitialized <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> variable. The following example illustrates this.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.MinValue#1\">      // Define an uninitialized date.\n      DateTime date1 = new DateTime();\n      Console.Write(date1);\n      if (date1.Equals(DateTime.MinValue))\n         Console.WriteLine(&quot;  (Equals Date.MinValue)&quot;);\n      // The example displays the following output:\n      //    1/1/0001 12:00:00 AM  (Equals Date.MinValue)\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.MinValue#1\">      &#39; Define an uninitialized date.\n      Dim date1 As Date\n      Console.Write(date1)\n      If date1.Equals(Date.MinValue) Then _\n         Console.WriteLine(&quot;  (Equals Date.MinValue)&quot;)\n      &#39; The example displays the following output:\n      &#39;    1/1/0001 12:00:00 AM  (Equals Date.MinValue)\n</code></pre><p> The MinValue and <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> properties can be used to ensure that a value lies within the supported range before passing it to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> constructor. The code in the Example section illustrates this usage.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Date\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Date</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the date component of this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime Date { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A new object with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is the same as that of the current instance.  </p>\n<p> Because the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> type represents both dates and times in a single type, it is important to avoid misinterpreting a date returned by the Date property as a date and time.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Day\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Day</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the day of the month represented by this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Day { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The day component, expressed as a value between 1 and 31.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Day property always returns the day of the month in the Gregorian calendar, even if the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value was instantiated using some other calendar or if the current thread culture&#39;s default calendar is not the Gregorian calendar. To retrieve the day of the month of a particular date using some other calendar, call that calendar&#39;s <a class=\"xref\" href=\"system.globalization.calendar#System_Globalization_Calendar_GetDayOfMonth_\" data-linktype=\"relative-path\">GetDayOfMonth</a> method. The following example uses both the Day property and the <a class=\"xref\" href=\"system.globalization.hijricalendar#System_Globalization_HijriCalendar_GetDayOfMonth_\" data-linktype=\"relative-path\">GetDayOfMonth</a> method to retrieve the day of the month for a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that is instantiated using the Hijri calendar.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Day#1\">      // Return day of 1/13/2009.\n      DateTime dateGregorian = new DateTime(2009, 1, 13);\n      Console.WriteLine(dateGregorian.Day);              \n      // Displays 13 (Gregorian day).\n      \n      // Create date of 1/13/2009 using Hijri calendar.\n      HijriCalendar hijri = new HijriCalendar();\n      DateTime dateHijri = new DateTime(1430, 1, 17, hijri);\n      // Return day of date created using Hijri calendar.\n      Console.WriteLine(dateHijri.Day);                    \n      // Displays 13 (Gregorian day).\n      \n      // Display day of date in Hijri calendar.\n      Console.WriteLine(hijri.GetDayOfMonth(dateHijri));   \n      // Displays 17 (Hijri day).\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Day#1\">      &#39; Return day of 1/13/2009.\n      Dim dateGregorian As Date = #1/13/2009#\n      Console.WriteLine(dateGregorian.Day)\n      &#39; Displays 13 (Gregorian date).\n      \n      &#39; Create date of 1/13/2009 using Hijri calendar.\n      Dim hijri As New HijriCalendar()\n      Dim dateHijri As Date = New Date(1430, 1, 17, hijri)\n      &#39; Return day of date created using Hijri calendar.\n      Console.WriteLine(dateHijri.Day)                   \n      &#39; Displays 13 (Gregorian date).\n      \n      &#39; Display day of date in Hijri calendar.\n      Console.WriteLine(hijri.GetDayOfMonth(dateHijri))  \n      &#39; Displays 17 (Hijri date).\n</code></pre><p> Similarly, the following example uses both the Day property and the <a class=\"xref\" href=\"system.globalization.hijricalendar#System_Globalization_HijriCalendar_GetDayOfMonth_\" data-linktype=\"relative-path\">GetDayOfMonth</a> method to retrieve the day of the month when the current thread culture is ar-SA, which uses Hijri as its default calendar.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Day#2\">      CultureInfo originalCulture = Thread.CurrentThread.CurrentCulture;\n\n      // Change current culture to ar-SA.\n      CultureInfo ci = new CultureInfo(&quot;ar-SA&quot;);\n      Thread.CurrentThread.CurrentCulture = ci;\n      \n      DateTime hijriDate = new DateTime(1430, 1, 17, \n                               Thread.CurrentThread.CurrentCulture.Calendar);\n      // Display date (uses calendar of current culture by default).\n      Console.WriteLine(hijriDate.ToString(&quot;dd-MM-yyyy&quot;));\n      // Displays 17-01-1430.\n\n      // Display day of 17th of Muharram\n      Console.WriteLine(hijriDate.Day);\n      // Displays 13 (corresponding day of January in Gregorian calendar).\n      \n      // Display day of 17th of Muharram in Hijri calendar.\n      Console.WriteLine(Thread.CurrentThread.CurrentCulture.Calendar.GetDayOfMonth(hijriDate));\n      // Displays 17.\n      \n      Thread.CurrentThread.CurrentCulture = originalCulture;  \n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Day#2\">      Dim originalCulture As CultureInfo = Thread.CurrentThread.CurrentCulture\n\n      &#39; Change current culture to ar-SA.\n      Dim ci As New CultureInfo(&quot;ar-SA&quot;)\n      Thread.CurrentThread.CurrentCulture = ci\n      \n      Dim hijriDate As New Date(1430, 1, 17, _\n                                Thread.CurrentThread.CurrentCulture.Calendar)\n      &#39; Display date (uses calendar of current culture by default).\n      Console.WriteLine(hijriDate.ToString(&quot;dd-MM-yyyy&quot;))\n      &#39; Displays 17-01-1430.\n\n      &#39; Display day of 17th of Muharram\n      Console.WriteLine(hijriDate.Day)\n      &#39; Displays 13 (corresponding day of January in Gregorian calendar).\n      \n      &#39; Display day of 17th of Muharram in Hijri calendar.\n      Console.WriteLine(Thread.CurrentThread.CurrentCulture.Calendar.GetDayOfMonth(hijriDate))\n      &#39; Displays 17.\n      \n      Thread.CurrentThread.CurrentCulture = originalCulture  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_DayOfWeek\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DayOfWeek</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the day of the week represented by this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DayOfWeek DayOfWeek { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.dayofweek\" data-linktype=\"relative-path\">DayOfWeek</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An enumerated constant that indicates the day of the week of this <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the constants in the <a class=\"xref\" href=\"system.dayofweek\" data-linktype=\"relative-path\">DayOfWeek</a> enumeration ranges from <a class=\"xref\" href=\"system.dayofweek\" data-linktype=\"relative-path\">System.DayOfWeek</a> to <a class=\"xref\" href=\"system.dayofweek\" data-linktype=\"relative-path\">System.DayOfWeek</a>. If cast to an integer, its value ranges from zero (which indicates <a class=\"xref\" href=\"system.dayofweek\" data-linktype=\"relative-path\">System.DayOfWeek</a>) to six (which indicates <a class=\"xref\" href=\"system.dayofweek\" data-linktype=\"relative-path\">System.DayOfWeek</a>).  </p>\n<p> The DayOfWeek property returns an enumerated constant; it does not reflect a system&#39;s regional and language settings. To retrieve a string representing a localized weekday name for a particular date, call one of the overloads of the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_\" data-linktype=\"relative-path\">ToString</a> method that includes a <code>format</code> parameter and pass it either the <code>ddd</code> or <code>dddd</code> custom format strings. For details, see <a href=\"../Topic/How%20to:%20Extract%20the%20Day%20of%20the%20Week%20from%20a%20Specific%20Date.md\" data-linktype=\"relative-path\">How to: Extract the Day of the Week from a Specific Date</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_DayOfYear\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DayOfYear</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the day of the year represented by this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int DayOfYear { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The day of the year, expressed as a value between 1 and 366.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>TheDayOfYear property takes leap years into account when it calculates the day of the year. The property value always reflects the day of the year in the Gregorian calendar, regardless of the current thread culture&#39;s current calendar. To retrieve the day of the year in a different calendar, call the <a class=\"xref\" href=\"system.globalization.calendar#System_Globalization_Calendar_GetDayOfYear_\" data-linktype=\"relative-path\">GetDayOfYear</a> method of that calendar.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Hour\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Hour</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the hour component of the date represented by this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Hour { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The hour component, expressed as a value between 0 and 23.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the Hour property is always expressed using a 24-hour clock. To retrieve a string that represents the hour of a date and time using a 12-hour clock, call the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_String_\" data-linktype=\"relative-path\">System.DateTime.ToString(String)</a> or <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">System.DateTime.ToString(String,IFormatProvider)</a> method with the &quot;h&quot; custom format specifier. For example:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Hour#1\">      DateTime date1 = new DateTime(2008, 4, 1, 18, 53, 0);\n      Console.WriteLine(date1.ToString(&quot;%h&quot;));              // Displays 6 \n      Console.WriteLine(date1.ToString(&quot;h tt&quot;));            // Displays 6 PM\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Hour#1\">      Dim date1 As Date = #04/01/2008 6:53:00PM#\n      Console.WriteLine(date1.ToString(&quot;%h&quot;))      &#39; Displays 6\n      Console.WriteLine(date1.ToString(&quot;h tt&quot;))    &#39; Displays 6 PM\n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Kind\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Kind</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTimeKind Kind { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the enumeration values that indicates what the current time represents. The default is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can explicitly set the Kind property of a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value to a particular <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> value by calling the <a class=\"xref\" href=\"system.datetime#System_DateTime_SpecifyKind_\" data-linktype=\"relative-path\">SpecifyKind</a> method.  </p>\n<p> The Kind property allows a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value to clearly reflect either Coordinated Universal Time (UTC) or the local time. In contrast, the <a class=\"xref\" href=\"system.datetimeoffset\" data-linktype=\"relative-path\">DateTimeOffset</a> structure can unambiguously reflect any time in any time zone as a single point in time.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Millisecond\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Millisecond</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the milliseconds component of the date represented by this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Millisecond { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The milliseconds component, expressed as a value between 0 and 999.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can display the string representation of the Millisecond property by using the &quot;fff&quot; format specifier. For example, the following code displays a string that contains the number of milliseconds in a date and time to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Millisecond#1\">      DateTime date1 = new DateTime(2008, 1, 1, 0, 30, 45, 125);\n      Console.WriteLine(&quot;Milliseconds: {0:fff}&quot;, \n                        date1);           // displays Milliseconds: 125\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Millisecond#1\">      Dim date1 As Date = New Date(2008, 1, 1, 0, 30, 45, 125)\n      Console.WriteLine(&quot;Milliseconds: {0:fff}&quot;, _\n                        date1)       &#39; displays Milliseconds: 125\n</code></pre><p> You can also display the millisecond component together with the other components of a date and time value by using the &quot;o&quot; standard format specifier. For example:  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Millisecond#2\">      DateTime date2 = new DateTime(2008, 1, 1, 0, 30, 45, 125);\n      Console.WriteLine(&quot;Date: {0:o}&quot;, \n                        date2);           \n      // Displays the following output to the console:\n      //      Date: 2008-01-01T00:30:45.1250000\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Millisecond#2\">      Dim date2 As New Date(2008, 1, 1, 0, 30, 45, 125)\n      Console.WriteLine(&quot;Date: {0:o}&quot;, date2)           \n      &#39; Displays the following output to the console:\n      &#39;      Date: 2008-01-01T00:30:45.1250000\n</code></pre><p> However, the &quot;o&quot; format specifier is intended less for displaying than for round-tripping or storing a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value. You can also display milliseconds together with other date and time components by using a custom format string, as the following example shows.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.Millisecond#3\">      DateTime date3 = new DateTime(2008, 1, 1, 0, 30, 45, 125);\n      Console.WriteLine(&quot;Date with milliseconds: {0:MM/dd/yyy HH:mm:ss.fff}&quot;, \n                        date3);\n      // Displays the following output to the console:\n      //       Date with milliseconds: 01/01/2008 00:30:45.125                       \n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Millisecond#3\">      Dim date3 As New Date(2008, 1, 1, 0, 30, 45, 125)\n      Console.WriteLine(&quot;Date with milliseconds: {0:MM/dd/yyy HH:mm:ss.fff}&quot;, _\n                        date3)\n      &#39; Displays the following output to the console:\n      &#39;       Date with milliseconds: 01/01/2008 00:30:45.125                       \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Minute\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Minute</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the minute component of the date represented by this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Minute { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The minute component, expressed as a value between 0 and 59.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Month\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Month</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the month component of the date represented by this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Month { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The month component, expressed as a value between 1 and 12.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Now\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Now</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object that is set to the current date and time on this computer, expressed as the local time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static DateTime Now { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object whose value is the current local date and time.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Now property returns a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that represents the current date and time on the local computer. Note that there is a difference between a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value, which represents the number of ticks that have elapsed since midnight of January 1, 0001, and the string representation of that <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value, which expresses a date and time value in a culture-specific-specific format. For information on formatting date and time values, see the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_\" data-linktype=\"relative-path\">ToString</a>method. The following example displays the short date and time string in a number of culture-specific formats.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.DateTime.Now#2\">using namespace System;\nusing namespace System::Globalization;\n\nvoid main()\n{\n   DateTime localDate = DateTime::Now;\n   array&lt;String^&gt;^ cultureNames = { &quot;en-US&quot;, &quot;en-GB&quot;, &quot;fr-FR&quot;,\n                                    &quot;de-DE&quot;, &quot;ru-RU&quot; };\n\n   for each (String^ cultureName in cultureNames) {\n      CultureInfo^ culture = gcnew CultureInfo(cultureName);\n      Console::WriteLine(&quot;{0}: {1}&quot;, cultureName,\n                         localDate.ToString(culture));\n   }\n}\n// The example displays the following output:\n//       en-US: 6/19/2015 10:03:06 AM\n//       en-GB: 19/06/2015 10:03:06\n//       fr-FR: 19/06/2015 10:03:06\n//       de-DE: 19.06.2015 10:03:06\n//       ru-RU: 19.06.2015 10:03:06\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.Now#2\">using System;\nusing System.Globalization;\n\npublic class Example\n{\n   public static void Main()\n   {\n      DateTime localDate = DateTime.Now;\n      String[] cultureNames = { &quot;en-US&quot;, &quot;en-GB&quot;, &quot;fr-FR&quot;,\n                                &quot;de-DE&quot;, &quot;ru-RU&quot; };\n\n      foreach (var cultureName in cultureNames) {\n         var culture = new CultureInfo(cultureName);\n         Console.WriteLine(&quot;{0}: {1}&quot;, cultureName,\n                           localDate.ToString(culture));\n      }\n   }\n}\n// The example displays the following output:\n//       en-US: 6/19/2015 10:03:06 AM\n//       en-GB: 19/06/2015 10:03:06\n//       fr-FR: 19/06/2015 10:03:06\n//       de-DE: 19.06.2015 10:03:06\n//       ru-RU: 19.06.2015 10:03:06\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.Now#2\">Imports System.Globalization\n\nModule Example\n   Public Sub Main()\n      Dim localDate = DateTime.Now\n      Dim cultureNames() As String = { &quot;en-US&quot;, &quot;en-GB&quot;, &quot;fr-FR&quot;,\n                                       &quot;de-DE&quot;, &quot;ru-RU&quot; }\n\n      For Each cultureName In cultureNames\n         Dim culture As New CultureInfo(cultureName)\n         Console.WriteLine(&quot;{0}: {1}&quot;, cultureName,\n                           localDate.ToString(culture))\n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    en-US: 6/19/2015 10:03:06 AM\n&#39;    en-GB: 19/06/2015 10:03:06\n&#39;    fr-FR: 19/06/2015 10:03:06\n&#39;    de-DE: 19.06.2015 10:03:06\n&#39;    ru-RU: 19.06.2015 10:03:06\n</code></pre><p> The resolution of this property depends on the system timer, which is approximately 15 milliseconds on Windows systems.As a result, repeated calls to the Now property in a short time interval, such as in a loop, may return the same value.  </p>\n<p> The Now property is frequently used to measure performance. However, because of its low resolution, it is not suitable for use as a benchmarking tool. A better alternative is to use the <a class=\"xref\" href=\"system.diagnostics.stopwatch\" data-linktype=\"relative-path\">Stopwatch</a> class.  </p>\n<p> Starting with the .NET Framework version 2.0, the return value is a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property returns <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You can also use the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Now_\" data-linktype=\"relative-path\">Now</a> property to retrieve the current local date and time. It allows a local time to be expressed unambiguously as a single point in time, which in turn makes that time value portable across computers.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Second\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Second</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the seconds component of the date represented by this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Second { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The seconds component, expressed as a value between 0 and 59.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Ticks\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Ticks</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the number of ticks that represent the date and time of this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public long Ticks { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of ticks that represent the date and time of this instance. The value is between <code>DateTime.MinValue.Ticks</code> and <code>DateTime.MaxValue.Ticks</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A single tick represents one hundred nanoseconds or one ten-millionth of a second. There are 10,000 ticks in a millisecond, or 10 million ticks in a second.  </p>\n<p> The value of this property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight, January 1, 0001 (0:00:00 UTC on January 1, 0001, in the Gregorian calendar), which represents <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">System.DateTime.MinValue</a>. It does not include the number of ticks that are attributable to leap seconds.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_TimeOfDay\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TimeOfDay</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the time of day for this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public TimeSpan TimeOfDay { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A time interval that represents the fraction of the day that has elapsed since midnight.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Unlike the <a class=\"xref\" href=\"system.datetime#System_DateTime_Date_\" data-linktype=\"relative-path\">Date</a> property. which returns a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that represents a date without its time component, the TimeOfDay property returns a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> value that represents a  <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value&#39;s time component.  </p>\n<p> If you want to display the time of day or retrieve the string representation of the time of day of a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value, you can instead call an overload of the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_\" data-linktype=\"relative-path\">ToString</a> method that has a <code>format</code> parameter or use the <a href=\"../Topic/Composite%20Formatting.md\" data-linktype=\"relative-path\">composite formatting</a> feature with the &quot;t&quot; or &quot;T&quot; standard format string.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Today\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Today</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the current date.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static DateTime Today { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that is set to today&#39;s date, with the time component set to 00:00:00.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Starting with the .NET Framework version 2.0, the return value is a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property returns <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>.  </p>\n<p> Because it returns the current date without the current time, the Today property is suitable for use in applications that work with dates only. For details, see <a href=\"../Topic/Choosing%20Between%20DateTime,%20DateTimeOffset,%20TimeSpan,%20and%20TimeZoneInfo.md\" data-linktype=\"relative-path\">Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo</a>. In contrast, the <a class=\"xref\" href=\"system.datetime#System_DateTime_TimeOfDay_\" data-linktype=\"relative-path\">TimeOfDay</a> property returns the current time without the current date, and the <a class=\"xref\" href=\"system.datetime#System_DateTime_Now_\" data-linktype=\"relative-path\">Now</a> property returns both the current date and the current time.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_UtcNow\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UtcNow</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static DateTime UtcNow { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object whose value is the current UTC date and time.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The resolution of this property depends on the system timer.  </p>\n<table>\n<thead>\n<tr>\n<th>System</th>\n<th>Approximate Resolution</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows NT 3.5 and later</td>\n<td>10 milliseconds</td>\n</tr>\n<tr>\n<td>Windows 98</td>\n<td>55 milliseconds</td>\n</tr>\n</tbody>\n</table>\n<p> Starting with the .NET Framework version 2.0, the return value is a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property returns <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.  </p>\n<p> An alternative to using UtcNow is <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_UtcNow_\" data-linktype=\"relative-path\">UtcNow</a>. While the former indicates that a date and time value is Coordinated Universal Time (UTC) by assigning <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a> to its <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property, the latter assigns the date and time value the UTC time&#39;s offset (equal to <a class=\"xref\" href=\"system.timespan#System_TimeSpan_Zero\" data-linktype=\"relative-path\">System.TimeSpan.Zero</a>).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Year\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Year</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the year component of the date represented by this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int Year { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The year, between 1 and 9999.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>TheYear property returns the year of the current instance in the Gregorian calendar. It does not return the year using the default calendar of the current culture. To retrieve the year using a particular calendar, you can call that calendar&#39;s <code>GetYear</code> method, as the following code shows.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTime.Year#1\">Imports System.Globalization\nImports System.Threading\n\nModule YearMethodExample\n   Public Sub Main()\n      &#39; Initialize date variable and display year\n      Dim date1 As Date = #01/01/2008 6:32AM#\n      Console.WriteLine(date1.Year)       &#39; Displays 2008\n      \n      &#39; Set culture to th-TH\n      Thread.CurrentThread.CurrentCulture = New CultureInfo(&quot;th-TH&quot;)\n      Console.WriteLine(date1.Year)        &#39; Displays 2008\n      \n      &#39; display year using current culture&#39;s calendar \n      Dim thaiCalendar As Calendar = CultureInfo.CurrentCulture.Calendar\n      Console.WriteLine(thaiCalendar.GetYear(date1))    &#39; Displays 2551\n      \n      &#39; display year using Persian calendar\n      Dim persianCalendar As New PersianCalendar()\n      Console.WriteLine(persianCalendar.GetYear(date1))  &#39; Displays 1386 \n   End Sub\nEnd Module\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.Year#1\">using System;\nusing System.Globalization;\nusing System.Threading;\n\npublic class YearMethodExample\n{\n    public static void Main()\n    {\n      // Initialize date variable and display year\n      DateTime date1 = new DateTime(2008, 1, 1, 6, 32, 0);\n      Console.WriteLine(date1.Year);                    // Displays 2008\n      \n      // Set culture to th-TH\n      Thread.CurrentThread.CurrentCulture = new CultureInfo(&quot;th-TH&quot;);\n      Console.WriteLine(date1.Year);                    // Displays 2008\n      \n      // display year using current culture&#39;s calendar \n      Calendar thaiCalendar = CultureInfo.CurrentCulture.Calendar;\n      Console.WriteLine(thaiCalendar.GetYear(date1));   // Displays 2551\n      \n      // display year using Persian calendar\n      PersianCalendar persianCalendar = new PersianCalendar();\n      Console.WriteLine(persianCalendar.GetYear(date1)); // Displays 1386 \n   }\n}\n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Add_System_TimeSpan_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Add(TimeSpan)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> that adds the value of the specified <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> to the value of this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime Add (TimeSpan value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A positive or negative time interval.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object whose value is the sum of the date and time represented by this instance and the time interval represented by <code>value</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is less than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> or greater than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can use the Add method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation. This method&#39;s behavior is identical to that of the addition operator. The <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure also supports specialized addition methods (such as <a class=\"xref\" href=\"system.datetime#System_DateTime_AddDays_\" data-linktype=\"relative-path\">AddDays</a>, <a class=\"xref\" href=\"system.datetime#System_DateTime_AddHours_\" data-linktype=\"relative-path\">AddHours</a>, and <a class=\"xref\" href=\"system.datetime#System_DateTime_AddMinutes_\" data-linktype=\"relative-path\">AddMinutes</a>) for each time interval.  </p>\n<p> The Add method takes into account leap years and the number of days in a month when performing date arithmetic.  </p>\n<p> This method does not change the value of this <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>. Instead, it returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> whose value is the result of this operation. The <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> instance is the same as that of the current instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_AddDays_System_Double_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddDays(Double)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> that adds the specified number of days to the value of this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime AddDays (double value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A number of whole and fractional days. The <code>value</code> parameter can be negative or positive.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object whose value is the sum of the date and time represented by this instance and the number of days represented by <code>value</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is less than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> or greater than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method does not change the value of this <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>. Instead, it returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> whose value is the result of this operation.  </p>\n<p> The fractional part of <code>value</code>is the fractional part of a day. For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds, and 0 ticks.  </p>\n<p> The <code>value</code> parameter is rounded to the nearest millisecond.  </p>\n<p> TheAddDays method takes into account leap years and the number of days in a month when performing date arithmetic.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_AddHours_System_Double_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddHours(Double)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> that adds the specified number of hours to the value of this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime AddHours (double value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A number of whole and fractional hours. The <code>value</code> parameter can be negative or positive.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object whose value is the sum of the date and time represented by this instance and the number of hours represented by <code>value</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is less than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> or greater than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method does not change the value of this <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>. Instead, it returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> whose value is the result of this operation. The <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is the same as that of <code>value</code>.  </p>\n<p> The fractional part of <code>value</code> is the fractional part of an hour. For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds, and 0 ticks.  </p>\n<p> The <code>value</code> parameter is rounded to the nearest millisecond.  </p>\n<p> Converting time intervals of less than an hour to a fraction can involve a loss of precision if the result is a non-terminating repeating decimal. (For example, one minute is 0.016667 of an hour.) If this is problematic, you can use the <a class=\"xref\" href=\"system.datetime#System_DateTime_Add_\" data-linktype=\"relative-path\">Add</a> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_AddMilliseconds_System_Double_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddMilliseconds(Double)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> that adds the specified number of milliseconds to the value of this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime AddMilliseconds (double value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A number of whole and fractional milliseconds. The <code>value</code> parameter can be negative or positive. Note that this value is rounded to the nearest integer.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by <code>value</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is less than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> or greater than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method does not change the value of this <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>. Instead, it returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> whose value is the result of this operation.  </p>\n<p> The fractional part of <code>value</code> is the fractional part of a millisecond. For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond = 10000 ticks.  </p>\n<p> The <code>value</code> parameter is rounded to the nearest integer.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_AddMinutes_System_Double_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddMinutes(Double)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> that adds the specified number of minutes to the value of this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime AddMinutes (double value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A number of whole and fractional minutes. The <code>value</code> parameter can be negative or positive.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object whose value is the sum of the date and time represented by this instance and the number of minutes represented by <code>value</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is less than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> or greater than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method does not change the value of this <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>. Instead, it returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> whose value is the result of this operation.  </p>\n<p> The fractional part of <code>value</code> is the fractional part of a minute. For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds, and 0 ticks.  </p>\n<p> The <code>value</code> parameter is rounded to the nearest millisecond.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_AddMonths_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddMonths(Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> that adds the specified number of months to the value of this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime AddMonths (int months);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>months</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A number of months. The <code>months</code> parameter can be negative or positive.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object whose value is the sum of the date and time represented by this instance and <code>months</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is less than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> or greater than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.  </p>\n<p> -or-  </p>\n<p> <code>months</code> is less than -120,000 or greater than 120,000.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method does not change the value of this <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object. Instead, it returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object whose value is the result of this operation.  </p>\n<p> The AddMonths method calculates the resulting month and year, taking into account leap years and the number of days in a month, then adjusts the day part of the resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object. If the resulting day is not a valid day in the resulting month, the last valid day of the resulting month is used. For example, March 31st + 1 month = April 30th, and March 31st - 1 month = February 28 for a non-leap year and February 29 for a leap year.  </p>\n<p> The time-of-day part of the resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object remains the same as this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_AddSeconds_System_Double_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddSeconds(Double)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> that adds the specified number of seconds to the value of this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime AddSeconds (double value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A number of whole and fractional seconds. The <code>value</code> parameter can be negative or positive.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object whose value is the sum of the date and time represented by this instance and the number of seconds represented by <code>value</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is less than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> or greater than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method does not change the value of this <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>. Instead, it returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> whose value is the result of this operation.  </p>\n<p> The fractional part of <code>value</code> is the fractional part of a second. For example, 4.5 is equivalent to 4 seconds, 500 milliseconds, and 0 ticks.  </p>\n<p> The <code>value</code> parameter is rounded to the nearest millisecond.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_AddTicks_System_Int64_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddTicks(Int64)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> that adds the specified number of ticks to the value of this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime AddTicks (long value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A number of 100-nanosecond ticks. The <code>value</code> parameter can be positive or negative.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object whose value is the sum of the date and time represented by this instance and the time represented by <code>value</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is less than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> or greater than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method does not change the value of this <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>. Instead, it returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> whose value is the result of this operation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_AddYears_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddYears(Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> that adds the specified number of years to the value of this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime AddYears (int value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A number of years. The <code>value</code> parameter can be negative or positive.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object whose value is the sum of the date and time represented by this instance and the number of years represented by <code>value</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>value</code> or the resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is less than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> or greater than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method does not change the value of this <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object. Instead, it returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object whose value is the result of this operation.  </p>\n<p> The AddYears method calculates the resulting year taking into account leap years. The month and time-of-day part of the resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object remains the same as this instance.  </p>\n<p> If the current instance represents the leap day in a leap year, the return value depends on the target date:  </p>\n<ul>\n<li><p>If <code>value</code> + <a class=\"xref\" href=\"system.datetime#System_DateTime_Year_\" data-linktype=\"relative-path\">Year</a> is also a leap year, the return value represents the leap day in that year. For example, if four years is added to February 29, 2012, the date returned is February 29, 2016.  </p>\n</li>\n<li><p>If <code>value</code> + <a class=\"xref\" href=\"system.datetime#System_DateTime_Year_\" data-linktype=\"relative-path\">Year</a> is not a leap year, the return value represents the day before the leap day in that year. For example, if one year is added to February 29, 2012, the date returned is February 28, 2013.  </p>\n<p>The following example illustrates using the AddYears method with a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that represents a leap year day. It displays the date for the fifteen years prior to and the fifteen years that follow February 29, 2000.  </p>\n<pre><code class=\"lang-cs\" name=\"System.DateTime.AddYears#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      DateTime baseDate = new DateTime(2000, 2, 29);\n      Console.WriteLine(&quot;    Base Date:        {0:d}\\n&quot;, baseDate);\n      \n      // Show dates of previous fifteen years.\n      for (int ctr = -1; ctr &gt;= -15; ctr--)\n         Console.WriteLine(&quot;{0,2} year(s) ago:        {1:d}&quot;, \n                           Math.Abs(ctr), baseDate.AddYears(ctr));\n      Console.WriteLine();\n\n      // Show dates of next fifteen years.\n      for (int ctr = 1; ctr &lt;= 15; ctr++)\n         Console.WriteLine(&quot;{0,2} year(s) from now:   {1:d}&quot;, \n                           ctr, baseDate.AddYears(ctr));\n   }\n}\n// The example displays the following output:\n//           Base Date:        2/29/2000\n//       \n//        1 year(s) ago:        2/28/1999\n//        2 year(s) ago:        2/28/1998\n//        3 year(s) ago:        2/28/1997\n//        4 year(s) ago:        2/29/1996\n//        5 year(s) ago:        2/28/1995\n//        6 year(s) ago:        2/28/1994\n//        7 year(s) ago:        2/28/1993\n//        8 year(s) ago:        2/29/1992\n//        9 year(s) ago:        2/28/1991\n//       10 year(s) ago:        2/28/1990\n//       11 year(s) ago:        2/28/1989\n//       12 year(s) ago:        2/29/1988\n//       13 year(s) ago:        2/28/1987\n//       14 year(s) ago:        2/28/1986\n//       15 year(s) ago:        2/28/1985\n//       \n//        1 year(s) from now:   2/28/2001\n//        2 year(s) from now:   2/28/2002\n//        3 year(s) from now:   2/28/2003\n//        4 year(s) from now:   2/29/2004\n//        5 year(s) from now:   2/28/2005\n//        6 year(s) from now:   2/28/2006\n//        7 year(s) from now:   2/28/2007\n//        8 year(s) from now:   2/29/2008\n//        9 year(s) from now:   2/28/2009\n//       10 year(s) from now:   2/28/2010\n//       11 year(s) from now:   2/28/2011\n//       12 year(s) from now:   2/29/2012\n//       13 year(s) from now:   2/28/2013\n//       14 year(s) from now:   2/28/2014\n//       15 year(s) from now:   2/28/2015\n</code></pre><pre><code class=\"lang-vb\" name=\"System.DateTime.AddYears#1\">Module Example\n   Public Sub Main()\n      Dim baseDate As Date = #2/29/2000#\n      Console.WriteLine(&quot;    Base Date:        {0:d}&quot;, baseDate)\n      Console.WriteLine()\n      \n      &#39; Show dates of previous fifteen years.\n      For ctr As Integer = -1 To -15 Step -1\n         Console.WriteLine(&quot;{0,3} years ago:        {1:d}&quot;, \n                           ctr, baseDate.AddYears(ctr))\n      Next\n      Console.WriteLine()\n      &#39; Show dates of next fifteen years.\n      For ctr As Integer = 1 To 15\n         Console.WriteLine(&quot;{0,3} years from now:   {1:d}&quot;, \n                           ctr, baseDate.AddYears(ctr))\n      Next      \n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;           Base Date:        2/29/2000\n&#39;       \n&#39;        1 year(s) ago:        2/28/1999\n&#39;        2 year(s) ago:        2/28/1998\n&#39;        3 year(s) ago:        2/28/1997\n&#39;        4 year(s) ago:        2/29/1996\n&#39;        5 year(s) ago:        2/28/1995\n&#39;        6 year(s) ago:        2/28/1994\n&#39;        7 year(s) ago:        2/28/1993\n&#39;        8 year(s) ago:        2/29/1992\n&#39;        9 year(s) ago:        2/28/1991\n&#39;       10 year(s) ago:        2/28/1990\n&#39;       11 year(s) ago:        2/28/1989\n&#39;       12 year(s) ago:        2/29/1988\n&#39;       13 year(s) ago:        2/28/1987\n&#39;       14 year(s) ago:        2/28/1986\n&#39;       15 year(s) ago:        2/28/1985\n&#39;       \n&#39;        1 year(s) from now:   2/28/2001\n&#39;        2 year(s) from now:   2/28/2002\n&#39;        3 year(s) from now:   2/28/2003\n&#39;        4 year(s) from now:   2/29/2004\n&#39;        5 year(s) from now:   2/28/2005\n&#39;        6 year(s) from now:   2/28/2006\n&#39;        7 year(s) from now:   2/28/2007\n&#39;        8 year(s) from now:   2/29/2008\n&#39;        9 year(s) from now:   2/28/2009\n&#39;       10 year(s) from now:   2/28/2010\n&#39;       11 year(s) from now:   2/28/2011\n&#39;       12 year(s) from now:   2/29/2012\n&#39;       13 year(s) from now:   2/28/2013\n&#39;       14 year(s) from now:   2/28/2014\n&#39;       15 year(s) from now:   2/28/2015\n</code></pre></li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Compare_System_DateTime_System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Compare(DateTime,DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Compares two instances of <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> and returns an integer that indicates whether the first instance is earlier than, the same as, or later than the second instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static int Compare (DateTime t1, DateTime t2);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>t1</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>t2</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A signed number indicating the relative values of <code>t1</code> and <code>t2</code>.  </p>\n <table><thead><tr><th> Value Type<br>\n </th><th> Condition<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td><code>t1</code> is earlier than <code>t2</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td><code>t1</code> is the same as <code>t2</code>.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td><code>t1</code> is later than <code>t2</code>.<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To determine the relationship of <code>t1</code> to <code>t2</code>, the Compare method compares the <a class=\"xref\" href=\"system.datetime#System_DateTime_Ticks_\" data-linktype=\"relative-path\">Ticks</a> property of <code>t1</code> and <code>t2</code> but ignores their <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property. Before comparing <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> objects, ensure that the objects represent times in the same time zone.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_CompareTo_System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CompareTo(DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Compares the value of this instance to a specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int CompareTo (DateTime value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to compare to the current instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A signed number indicating the relative values of this instance and the <code>value</code> parameter.  </p>\n <table><thead><tr><th> Value<br>\n </th><th> Description<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td> This instance is earlier than <code>value</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td> This instance is the same as <code>value</code>.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td> This instance is later than <code>value</code>.<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To determine the relationship of the current instance to <code>value</code>, the CompareTo method compares the <a class=\"xref\" href=\"system.datetime#System_DateTime_Ticks_\" data-linktype=\"relative-path\">Ticks</a> property of the current instance and <code>value</code> but ignores their <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property.  Before comparing <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> properties.  </p>\n<p> This method implements the <a class=\"xref\" href=\"system.icomparable-1\" data-linktype=\"relative-path\">System.IComparable&lt;T&gt;</a> interface and performs slightly better than the <a class=\"xref\" href=\"system.datetime#System_DateTime_CompareTo_System_Object_\" data-linktype=\"relative-path\">System.DateTime.CompareTo(Object)</a> method overload because it does not have to convert the <code>value</code> parameter to an object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_CompareTo_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CompareTo(Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Compares the value of this instance to a specified object that contains a specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value, and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public int CompareTo (object value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A boxed object to compare, or <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A signed number indicating the relative values of this instance and <code>value</code>.  </p>\n <table><thead><tr><th> Value<br>\n </th><th> Description<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td> This instance is earlier than <code>value</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td> This instance is the same as <code>value</code>.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td> This instance is later than <code>value</code>, or <code>value</code> is <code>null</code>.<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>value</code> is not a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To determine the relationship of the current instance to <code>value</code>, theCompareTo method compares the <a class=\"xref\" href=\"system.datetime#System_DateTime_Ticks_\" data-linktype=\"relative-path\">Ticks</a> property of the current instance and <code>value</code> but ignores their <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property. Before comparing <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> properties.  </p>\n<p> Any instance of <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>, regardless of its value, is considered greater than <code>null</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_DaysInMonth_System_Int32_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DaysInMonth(Int32,Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the number of days in the specified month and year.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static int DaysInMonth (int year, int month);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>year</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The year.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>month</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The month (a number ranging from 1 to 12).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of days in <code>month</code> for the specified <code>year</code>.  </p>\n<p> For example, if <code>month</code> equals 2 for February, the return value is 28 or 29 depending upon whether <code>year</code> is a leap year.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>month</code> is less than 1 or greater than 12.  </p>\n<p> -or-  </p>\n<p> <code>year</code> is less than 1 or greater than 9999.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>TheDaysInMonth method always interprets <code>month</code> and <code>year</code> as the month and year of the Gregorian calendar even if the Gregorian calendar is not the current culture&#39;s current calendar. To get the number of days in a specified month of a particular calendar, call that calendar&#39;s <a class=\"xref\" href=\"system.globalization.calendar#System_Globalization_Calendar_GetDaysInMonth_\" data-linktype=\"relative-path\">GetDaysInMonth</a> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Equals_System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals(DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a value indicating whether the value of this instance is equal to the value of the specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool Equals (DateTime value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to compare to this instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <code>value</code> parameter equals the value of this instance; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The current instance and <code>value</code> are equal if their <a class=\"xref\" href=\"system.datetime#System_DateTime_Ticks_\" data-linktype=\"relative-path\">Ticks</a> property values are equal. Their <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property values are not considered in the test for equality.  </p>\n<p> This method implements the <a class=\"xref\" href=\"system.iequatable-1\" data-linktype=\"relative-path\">System.IEquatable&lt;T&gt;</a> interface, and performs slightly better than the <a class=\"xref\" href=\"system.datetime#System_DateTime_Equals_\" data-linktype=\"relative-path\">Equals</a> method because the <code>value</code> parameter does not have to be converted to an object.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Equals_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals(Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a value indicating whether this instance is equal to a specified object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override bool Equals (object value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to compare to this instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>value</code> is an instance of <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> and equals the value of this instance; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The current instance and <code>value</code> are equal if their <a class=\"xref\" href=\"system.datetime#System_DateTime_Ticks_\" data-linktype=\"relative-path\">Ticks</a> property values are equal. Their <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property values are not considered in the test for equality.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Equals_System_DateTime_System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Equals(DateTime,DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a value indicating whether two <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> instances  have the same date and time value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool Equals (DateTime t1, DateTime t2);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>t1</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>t2</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the two values are equal; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p><code>t1</code> and <code>t2</code> are equal if their <a class=\"xref\" href=\"system.datetime#System_DateTime_Ticks_\" data-linktype=\"relative-path\">Ticks</a> property values are equal. Their<a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property values are not considered in the test for equality.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_FromBinary_System_Int64_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FromBinary(Int64)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Deserializes a 64-bit binary value and recreates an original serialized <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static DateTime FromBinary (long dateData);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dateData</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A 64-bit signed integer that encodes the <span class=\"xref\">stem.DateTime.Kind*</span> property in a 2-bit field and the <span class=\"xref\">stem.DateTime.Ticks*</span> property in a 62-bit field.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that is equivalent to the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object that was serialized by the <span class=\"xref\">stem.DateTime.ToBinary*</span> method.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>dateData</code> is less than <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">MinValue</a> or greater than <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">MaxValue</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToBinary_\" data-linktype=\"relative-path\">ToBinary</a> method to convert the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to a binary value. Subsequently, use the binary value and the FromBinary method to recreate the original <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> In some cases, the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value returned by the FromBinary method is not identical to the original <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value supplied to the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToBinary_\" data-linktype=\"relative-path\">ToBinary</a> method. For more information, see the next section, &quot;Local Time Adjustment&quot;.  </p>\n</div>\n<h2 id=\"local-time-adjustment\">Local Time Adjustment</h2>\n<p> A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property has the value <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>. When restoring a local <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value from the binary representation that is produced by the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToBinary_\" data-linktype=\"relative-path\">ToBinary</a> method, the FromBinary method may adjust the recreated value so that it is not equal to the original value. This can occur under the following conditions:  </p>\n<ul>\n<li><p>If a local <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is serialized in one time zone by the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToBinary_\" data-linktype=\"relative-path\">ToBinary</a> method, and then deserialized in a different time zone by the FromBinary method, the local time represented by the resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is automatically adjusted to the second time zone.  </p>\n<p> For example, consider a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object that represents a local time of 3 P.M. An application that is executing in the U.S. Pacific Time zone uses the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToBinary_\" data-linktype=\"relative-path\">ToBinary</a> method to convert that <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to a binary value. Another application that is executing in the U.S. Eastern Time zone then uses the FromBinary method to convert the binary value to a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object. The value of the new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is 6 P.M., which represents the same point in time as the original 3 P.M. value, but is adjusted to local time in the Eastern Time zone.  </p>\n</li>\n<li><p>If the binary representation of a local <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value represents an invalid time in the local time zone of the system on which FromBinary is called, the time is adjusted so that it is valid.  </p>\n<p> For example, the transition from standard time to daylight saving time occurs in the Pacific Time zone of the United States on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M. This hour interval is an invalid time, that is, a time interval that does not exist in this time zone. The following example shows that when a time that falls within this range is converted to a binary value by the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToBinary_\" data-linktype=\"relative-path\">ToBinary</a> method and is then restored by the FromBinary method, the original value is adjusted to become a valid time. You can determine whether a particular date and time value may be subject to modification by passing it to the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_IsInvalidTime_\" data-linktype=\"relative-path\">IsInvalidTime</a> method, as the example illustrates.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTime.FromBinary#1\">Module Example\n   Public Sub Main()\n      Dim localDate As Date = DateTime.SpecifyKind(#03/14/2010 2:30AM#, DateTimeKind.Local)\n      Dim binLocal As Long = localDate.ToBinary()\n      If TimeZoneInfo.Local.IsInvalidTime(localDate) Then\n         Console.WriteLine(&quot;{0} is an invalid time in the {1} zone.&quot;, _\n                           localDate, _\n                           TimeZoneInfo.Local.StandardName)\n      End If\n      Dim localDate2 As Date = DateTime.FromBinary(binLocal)\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                        localDate, localDate2, localDate.Equals(localDate2))\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    3/14/2010 2:30:00 AM is an invalid time in the Pacific Standard Time zone.\n&#39;    3/14/2010 2:30:00 AM = 3/14/2010 3:30:00 AM: False\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.FromBinary#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      DateTime localDate = new DateTime(2010, 3, 14, 2, 30, 0, DateTimeKind.Local);\n      long binLocal = localDate.ToBinary();\n      if (TimeZoneInfo.Local.IsInvalidTime(localDate))\n         Console.WriteLine(&quot;{0} is an invalid time in the {1} zone.&quot;, \n                           localDate, \n                           TimeZoneInfo.Local.StandardName);\n\n      DateTime localDate2 = DateTime.FromBinary(binLocal);\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                        localDate, localDate2, localDate.Equals(localDate2));\n   }\n}\n// The example displays the following output:\n//    3/14/2010 2:30:00 AM is an invalid time in the Pacific Standard Time zone.\n//    3/14/2010 2:30:00 AM = 3/14/2010 3:30:00 AM: False\n</code></pre></li>\n</ul>\n<h2 id=\"version-considerations\">Version Considerations</h2>\n<p> Starting with the .NET Framework version 2.0, a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure consists of a private Kind field, which indicates whether the specified time is local time, Coordinated Universal Time (UTC), or neither, concatenated to a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time. The number of ticks can be accessed with the <a class=\"xref\" href=\"system.datetime#System_DateTime_Ticks_\" data-linktype=\"relative-path\">Ticks</a> property and theKind field can be accessed with the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property.  </p>\n<p> Prior to the .NET Framework 2.0, if you serialized a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object manually instead of using a serialization interface such as <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">System.Runtime.Serialization.ISerializable</a>, you needed to serialize only the Ticks data in the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>. Starting with the .NET Framework 2.0, you must also serialize the Kind data.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_FromFileTime_System_Int64_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FromFileTime(Int64)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the specified Windows file time to an equivalent local time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static DateTime FromFileTime (long fileTime);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileTime</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A Windows file time expressed in ticks.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that represents the local time equivalent of the date and time represented by the <code>fileTime</code> parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>fileTime</code> is less than 0 or represents a time greater than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  </p>\n<p> The <code>fileTime</code> parameter specifies a file time expressed in 100-nanosecond ticks.  </p>\n<p> Starting with the .NET Framework version 2.0, the return value is a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_FromFileTimeUtc_System_Int64_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FromFileTimeUtc(Int64)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the specified Windows file time to an equivalent UTC time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static DateTime FromFileTimeUtc (long fileTime);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>fileTime</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A Windows file time expressed in ticks.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that represents the UTC time equivalent of the date and time represented by the <code>fileTime</code> parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>fileTime</code> is less than 0 or represents a time greater than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  </p>\n<p> The <code>fileTime</code> parameter specifies a file time expressed in 100-nanosecond ticks.  </p>\n<p> Starting with the .NET Framework version 2.0, the return value is a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_FromOADate_System_Double_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FromOADate(Double)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent to the specified OLE Automation Date.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static DateTime FromOADate (double d);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>d</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An OLE Automation Date value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that represents the same date and time as <code>d</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The date is not a valid OLE Automation Date value.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>d</code> parameter is a double-precision floating-point number that represents a date as the number of days before or after the base date, midnight, 30 December 1899. The sign and integral part of <code>d</code> encode the date as a positive or negative day displacement from 30 December 1899, and the absolute value of the fractional part of <code>d</code> encodes the time of day as a fraction of a day displacement from midnight. <code>d</code> must be a value between negative 657435.0 through positive 2958465.99999999.  </p>\n<p> Note that because of the way dates are encoded, there are two ways of representing any time of day on 30 December 1899. For example, -0.5 and 0.5 both mean noon on 30 December 1899 because a day displacement of plus or minus zero days from the base date is still the base date, and a half day displacement from midnight is noon.  </p>\n<p> See <a class=\"xref\" href=\"system.datetime#System_DateTime_ToOADate_\" data-linktype=\"relative-path\">ToOADate</a> for more information on OLE Automation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_GetDateTimeFormats\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetDateTimeFormats()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string[] GetDateTimeFormats ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The string array returned by the GetDateTimeFormats method is equivalent to combining the string arrays returned by separate calls to the <a class=\"xref\" href=\"system.datetime#System_DateTime_GetDateTimeFormats_System_Char_\" data-linktype=\"relative-path\">System.DateTime.GetDateTimeFormats(Char)</a> method with the &quot;d&quot;, &quot;D&quot;, &quot;f&quot;, &quot;F&quot;, &quot;g&quot;, &quot;G&quot;, &quot;m&quot;, &quot;o&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;, &quot;T&quot;, &quot;u&quot;, &quot;U&quot;, and &quot;y&quot; standard format strings. For more information about standard format specifiers, see <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a>.  </p>\n<p> Each element of the return value is formatted using information from the current culture. For more information about culture-specific formatting information for the current culture, see <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data. The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system&#39;s cultural data.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_GetDateTimeFormats_System_Char_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetDateTimeFormats(Char)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string[] GetDateTimeFormats (char format);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>format</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A standard date and time format string (see Remarks).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string array where each element is the representation of the value of this instance formatted with the <code>format</code> standard date and time format specifier.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>format</code> is not a valid standard date and time format specifier character.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>format</code> parameter can be any of the standard date and time format specifiers. These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y). For more information, see <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a>.  </p>\n<p> Each element of the return value is formatted using information from the current culture. For more information about culture-specific formatting information for the current culture, see <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data. The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system&#39;s cultural data.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_GetDateTimeFormats_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetDateTimeFormats(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of this instance to all the string representations supported by the standard date and time format specifiers and the specified culture-specific formatting information.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string[] GetDateTimeFormats (IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that supplies culture-specific formatting information about this instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The string array returned by the GetDateTimeFormats method is equivalent to combining the string arrays returned by separate calls to the <a class=\"xref\" href=\"system.datetime#System_DateTime_GetDateTimeFormats_System_Char_System_IFormatProvider_\" data-linktype=\"relative-path\">System.DateTime.GetDateTimeFormats(Char,IFormatProvider)</a> method with the &quot;d&quot;, &quot;D&quot;, &quot;f&quot;, &quot;F&quot;, &quot;g&quot;, &quot;G&quot;, &quot;m&quot;, &quot;o&quot;, &quot;r&quot;, &quot;s&quot;, &quot;t&quot;, &quot;T&quot;, &quot;u&quot;, &quot;U&quot;, and &quot;y&quot; standard format strings. For more information about standard format specifiers, see <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a>.  </p>\n<p> Each element of the return value is formatted using culture-specific information supplied by <code>provider</code>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless <code>provider</code> is a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the invariant culture. The data returned by this method can change if the user overrides the individual cultural settings of <code>provider</code>or if an update occurs to the system&#39;s cultural data for <code>provider</code>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_GetDateTimeFormats_System_Char_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetDateTimeFormats(Char,IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier and culture-specific formatting information.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string[] GetDateTimeFormats (char format, IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>format</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A date and time format string (see Remarks).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that supplies culture-specific formatting information about this instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>format</code> is not a valid standard date and time format specifier character.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The format parameter can be any of the standard date and time format specifiers. These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y). For more information, see <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a>.  </p>\n<p> Each element of the return value is formatted using culture-specific information supplied by <code>provider</code>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless <code>provider</code> is a <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the invariant culture. The data returned by this method can change if the user overrides the individual cultural settings of <code>provider</code> or if an update occurs to the system&#39;s cultural data for <code>provider</code>.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_GetHashCode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetHashCode()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the hash code for this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override int GetHashCode ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A 32-bit signed integer hash code.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_GetTypeCode\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetTypeCode()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the <a class=\"xref\" href=\"system.typecode\" data-linktype=\"relative-path\">TypeCode</a> for value type <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public TypeCode GetTypeCode ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.typecode\" data-linktype=\"relative-path\">TypeCode</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The enumerated constant, <a class=\"xref\" href=\"system.typecode\" data-linktype=\"relative-path\">TypeCode</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_IsDaylightSavingTime\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsDaylightSavingTime()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates whether this instance of <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is within the daylight saving time range for the current time zone.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsDaylightSavingTime ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the value of the <span class=\"xref\">stem.DateTime.Kind*</span> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> or <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> and the value of this instance of <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is within the daylight saving time range for the local time zone; <code>false</code> if <span class=\"xref\">stem.DateTime.Kind*</span> is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method determines whether the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value falls within the daylight saving time range of the local time zone, which is returned by the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_Local_\" data-linktype=\"relative-path\">Local</a> property. You can determine whether a time zone supports daylight saving time by retrieving the value of its <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_SupportsDaylightSavingTime_\" data-linktype=\"relative-path\">SupportsDaylightSavingTime</a> property. For time zones that observe daylight saving time, you can determine when the transition to and from daylight saving time occurs by retrieving the <a class=\"xref\" href=\"system.timezoneinfo.adjustmentrule\" data-linktype=\"relative-path\">System.TimeZoneInfo.AdjustmentRule</a> array returned by the time zone&#39;s <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_GetAdjustmentRules_\" data-linktype=\"relative-path\">GetAdjustmentRules</a> property.  </p>\n<p> If the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value represents either an ambiguous or an invalid time in the local time zone, the method returns <code>false</code>.  </p>\n<p> On Windows XP systems, the IsDaylightSavingTime method recognizes only the current adjustment rule when determining whether the current instance is a daylight saving time. As a result, the method may not accurately report whether the current instance is a daylight saving time for periods before the current adjustment rule came into effect.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_IsLeapYear_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsLeapYear(Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns an indication whether the specified year is a leap year.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool IsLeapYear (int year);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>year</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A 4-digit year.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>year</code> is a leap year; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>year</code> is less than 1 or greater than 9999.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p><code>year</code> is specified as a 4-digit base 10 number; for example, 1996.  </p>\n<p> <code>year</code> is always interpreted as a year in the Gregorian calendar. To determine whether a particular year was a leap year in some other calendar, call that calendar object&#39;s <code>IsLeapYear</code> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Parse_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Parse(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the string representation of a date and time to its <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static DateTime Parse (string s);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>s</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string that contains a date and time to convert.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that is equivalent to the date and time contained in <code>s</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>s</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>s</code> does not contain a valid string representation of a date and time.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> For examples and comprehensive usage information about this and other overloads of the <code>Parse</code> method, see the <a class=\"xref\" href=\"system.datetime#System_DateTime_Parse_\" data-linktype=\"relative-path\">Parse</a>overload summary.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Parse_System_String_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Parse(String,IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the string representation of a date and time to its <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent by using culture-specific format information.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static DateTime Parse (string s, IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>s</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string that contains a date and time to convert.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that supplies culture-specific format information about <code>s</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that is equivalent to the date and time contained in <code>s</code> as specified by <code>provider</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>s</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>s</code> does not contain a valid string representation of a date and time.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> For examples and comprehensive usage information about this and other overloads of the <code>Parse</code> method, see the <a class=\"xref\" href=\"system.datetime#System_DateTime_Parse_\" data-linktype=\"relative-path\">Parse</a>overload summary.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Parse_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Parse(String,IFormatProvider,DateTimeStyles)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the string representation of a date and time to its <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent by using culture-specific format information and formatting style.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static DateTime Parse (string s, IFormatProvider provider, System.Globalization.DateTimeStyles styles);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>s</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string that contains a date and time to convert.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that supplies culture-specific formatting information about <code>s</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>styles</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the enumeration values that indicates the style elements that can be present in <code>s</code> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date. A typical value to specify is <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>provider</code> and <code>styles</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>s</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>s</code> does not contain a valid string representation of a date and time.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>styles</code> contains an invalid combination of <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> values. For example, both <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> and <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> For examples and comprehensive usage information about this and other overloads of the <code>Parse</code> method, see the <a class=\"xref\" href=\"system.datetime#System_DateTime_Parse_\" data-linktype=\"relative-path\">Parse</a>overload summary.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ParseExact_System_String_System_String_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ParseExact(String,String,IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static DateTime ParseExact (string s, string format, IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>s</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string that contains a date and time to convert.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>format</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A format specifier that defines the required format of <code>s</code>. For more information, see the Remarks section.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that supplies culture-specific format information about <code>s</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>format</code> and <code>provider</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>s</code> or <code>format</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>s</code> or <code>format</code> is an empty string.  </p>\n<p> -or-  </p>\n<p> <code>s</code> does not contain a date and time that corresponds to the pattern specified in <code>format</code>.  </p>\n<p> -or-  </p>\n<p> The hour component and the AM/PM designator in <code>s</code> do not agree.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ParseExact method parses the string representation of a date, which must be in the format defined by the <code>format</code> parameter. It also requires that the &lt;Date&gt; and &lt;Time&gt; elements of the string representation of a date and time appear in the order specified by <code>format</code>, and that <code>s</code> have no white space other than that permitted by <code>format</code>. If <code>format</code> defines a date with no time element and the parse operation succeeds, the resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value has a time of midnight (00:00:00). If <code>format</code> defines a time with no date element and the parse operation succeeds, the resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value has a date of <code>DateTime.Now.Date</code>.  </p>\n<p> If <code>s</code> does not represent a time in a particular time zone and the parse operation succeeds, the<a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. If <code>s</code> does represent the time in a particular time zone and <code>format</code> allows time zone information to be present (for example, if <code>format</code> is equal to the &quot;o&quot;, &quot;r&quot;, or &quot;u&quot; standard format specifiers, or if it contains the &quot;z&quot;, &quot;zz&quot;, or &quot;zzz&quot; custom format specifiers), the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.  </p>\n<p> The <code>format</code> parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of <code>s</code>. For details about valid formatting codes, see <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a> or <a href=\"../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Date and Time Format Strings</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If <code>format</code> is a custom format pattern that does not include date or time separators (such as &quot;yyyyMMddHHmm&quot;), use the invariant culture for the <code>provider</code> parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the format pattern, specify the wider form, &quot;HH&quot;, instead of the narrower form, &quot;H&quot;.  </p>\n</div>\n<p> The particular date and time symbols and strings (such as names of the days of the week in a particular language) used in <code>s</code> are defined by the <code>provider</code> parameter, as is the precise format of <code>s</code> if <code>format</code> is a standard format specifier string. The <code>provider</code> parameter can be any of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture used to interpret <code>s</code>. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by its <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the symbols and formatting in <code>s</code>.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n</li>\n<li><p>A custom <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation whose <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns either the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object or the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that provides formatting information.  </p>\n<p>If <code>provider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that corresponds to the current culture is used.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ParseExact_System_String_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ParseExact(String,String,IFormatProvider,DateTimeStyles)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly or an exception is thrown.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static DateTime ParseExact (string s, string format, IFormatProvider provider, System.Globalization.DateTimeStyles style);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>s</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string containing a date and time to convert.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>format</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A format specifier that defines the required format of <code>s</code>. For more information, see the Remarks section.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that supplies culture-specific formatting information about <code>s</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>style</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of the enumeration values that provides additional information about <code>s</code>, about style elements that may be present in <code>s</code>, or about the conversion from <code>s</code> to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value. A typical value to specify is <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>format</code>, <code>provider</code>, and <code>style</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>s</code> or <code>format</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>s</code> or <code>format</code> is an empty string.  </p>\n<p> -or-  </p>\n<p> <code>s</code> does not contain a date and time that corresponds to the pattern specified in <code>format</code>.  </p>\n<p> -or-  </p>\n<p> The hour component and the AM/PM designator in <code>s</code> do not agree.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>style</code> contains an invalid combination of <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> values. For example, both <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> and <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ParseExact method parses the string representation of a date, which must be in a format defined by the <code>format</code> parameter. It also requires that the date and time elements in <code>s</code> appear in the order specified by <code>format</code>. If <code>s</code> does not match the pattern of the <code>format</code> parameter, with any variations defined by the <code>style</code> parameter, the method throws a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>. In contrast, the <a class=\"xref\" href=\"system.datetime#System_DateTime_Parse_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\" data-linktype=\"relative-path\">System.DateTime.Parse(String,IFormatProvider,DateTimeStyles)</a> method parses the string representation of a date in any one of the formats recognized by the format provider&#39;s <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object. The<a class=\"xref\" href=\"system.datetime#System_DateTime_Parse_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\" data-linktype=\"relative-path\">System.DateTime.Parse(String,IFormatProvider,DateTimeStyles)</a> method also allows the date and time elements in <code>s</code> to appear in any order.  </p>\n<p> If the <code>s</code> parameter contains only a time and no date, the current date is used unless the <code>style</code> parameter includes the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, in which case the default date (<code>DateTime.Date.MinValue</code>) is used. If the <code>s</code> parameter contains only a date and no time, midnight (00:00:00) is used. The <code>style</code> parameter also determines whether the <code>s</code> parameter can contain leading, inner, or trailing white space characters.  </p>\n<p> If <code>s</code> contains no time zone information, the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. This behavior can be changed by using the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, which returns a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>, or by using the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> and <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flags, which returns a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. If <code>s</code> contains time zone information, the time is converted to local time, if necessary, and the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. This behavior can be changed by using the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag to not convert Coordinated Universal Time (UTC) to a local time and to set the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.  </p>\n<p> The <code>format</code> parameter defines the required pattern of the <code>s</code> parameter. It can consist of either one or more custom format specifiers from the <a href=\"../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Date and Time Format Strings</a> table, or a single standard format specifier, which identifies a predefined pattern, from the <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a> table.  </p>\n<p> If you do not use date or time separators in a custom format pattern, use the invariant culture for the <code>provider</code> parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, &quot;HH&quot;, instead of the narrower form, &quot;H&quot;.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Rather than requiring that <code>s</code> conform to a single format for the parse operation to succeed, you can call the [DateTime.ParseExact(String, String&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt; method and specify multiple permitted formats. This makes the parse operation more likely to succeed.  </p>\n</div>\n<p> The <code>styles</code> parameter includes one or more members of the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration that determine whether and where white space not defined by <code>format</code> can appear in <code>s</code> and that control the precise behavior of the parse operation. The following table describes how each member of the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration affects the operation of the ParseExact method.  </p>\n<table>\n<thead>\n<tr>\n<th>DateTimeStyles member</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Parses <code>s</code> and, if necessary, converts it to UTC. If <code>s</code> includes a time zone offset, or if <code>s</code> contains no time zone information but <code>styles</code> includes the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, the method parses the string, calls <a class=\"xref\" href=\"system.datetime#System_DateTime_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> to convert the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value to UTC, and sets the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. If <code>s</code> indicates that it represents UTC, or if <code>s</code> does not contain time zone information but <code>styles</code> includes the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, the method parses the string, performs no time zone conversion on the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value, and sets the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. In all other cases, the flag has no effect.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that white space not defined by <code>format</code> can appear between any individual date or time element.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that white space not defined by <code>format</code> can appear at the beginning of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that white space not defined by <code>format</code> can appear at the end of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that <code>s</code> may contain leading, inner, and trailing white spaces not defined by <code>format</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that if <code>s</code> lacks any time zone information, it is assumed to represent a local time. Unless the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag is present, the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that if <code>s</code> lacks any time zone information, it is assumed to represent UTC. Unless the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag is present, the method converts the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value from UTC to local time and sets its <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>If <code>s</code> contains time without date information, the date of the return value is set to <code>DateTime.MinValue.Date</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>The <code>s</code> parameter is parsed using default values. No white space other than that present in <code>format</code> is allowed. If <code>s</code> lacks a date component, the date of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is set to 1/1/0001. If <code>s</code> contains no time zone information, the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. If time zone information is present in <code>s</code>, the time is converted to local time and the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>For strings that contain time zone information, tries to prevent the conversion to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value date and time with its <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. This flag primarily prevents the conversion of UTC times to local times.</td>\n</tr>\n</tbody>\n</table>\n<p> The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in <code>s</code> are defined by the <code>provider</code> parameter, as is the precise format of <code>s</code> if <code>format</code> is a standard format specifier string. The <code>provider</code> parameter can be any of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture used to interpret <code>s</code>. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by its <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the symbols and formatting in <code>s</code>.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n</li>\n<li><p>A custom <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation whose <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns either the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object or the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that provides formatting information.  </p>\n<p>If <code>provider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that corresponds to the current culture is used.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ParseExact_System_String_System_String___System_IFormatProvider_System_Globalization_DateTimeStyles_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ParseExact(String,String[],IFormatProvider,DateTimeStyles)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly or an exception is thrown.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static DateTime ParseExact (string s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>s</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string that contains a date and time to convert.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>formats</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of allowable formats of <code>s</code>. For more information, see the Remarks section.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that supplies culture-specific format information about <code>s</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>style</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>. A typical value to specify is <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that is equivalent to the date and time contained in <code>s</code>, as specified by <code>formats</code>, <code>provider</code>, and <code>style</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>s</code> or <code>formats</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>s</code> is an empty string.  </p>\n<p> -or-  </p>\n<p> an element of <code>formats</code> is an empty string.  </p>\n<p> -or-  </p>\n<p> <code>s</code> does not contain a date and time that corresponds to any element of <code>formats</code>.  </p>\n<p> -or-  </p>\n<p> The hour component and the AM/PM designator in <code>s</code> do not agree.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>style</code> contains an invalid combination of <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> values. For example, both <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> and <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ParseExact method parses the string representation of a date that matches any one of the patterns assigned to the <code>formats</code> parameter. If the string <code>s</code> does not match any one of these patterns with any of the variations defined by the <code>styles</code> parameter, the method throws a <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>. Aside from comparing <code>s</code> to multiple formatting patterns, rather than to a single formatting pattern, this overload behaves identically to the <a class=\"xref\" href=\"system.datetime#System_DateTime_ParseExact_System_String_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\" data-linktype=\"relative-path\">System.DateTime.ParseExact(String,String,IFormatProvider,DateTimeStyles)</a> method.  </p>\n<p> The <code>s</code> parameter contains the date and time to parse. If the <code>s</code> parameter contains only a time and no date, the current date is used unless the <code>style</code> parameter includes the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, in which case the default date (<code>DateTime.Date.MinValue</code>) is used. If the <code>s</code> parameter contains only a date and no time, midnight (00:00:00) is used. The <code>style</code> parameter also determines whether the <code>s</code> parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in <code>formats</code>.  </p>\n<p> If <code>s</code> contains no time zone information, the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. This behavior can be changed by using the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, which returns a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>, or by using the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> and <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flags, which returns a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. If <code>s</code> contains time zone information, the time is converted to local time, if necessary, and the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. This behavior can be changed by using the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.  </p>\n<p> The <code>formats</code> parameter contains an array of patterns, one of which <code>s</code> must match exactly if the parse operation is to succeed. The patterns in the <code>formats</code> parameter consists of one or more custom format specifiers from the <a href=\"../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Date and Time Format Strings</a> table, or a single standard format specifier, which identifies a predefined pattern, from the <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a> table.  </p>\n<p> If you do not use date or time separators in a custom format pattern, use the invariant culture for the <code>provider</code> parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, &quot;HH&quot;, instead of the narrower form, &quot;H&quot;.  </p>\n<p> The <code>styles</code> parameter includes one or more members of the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration that determine whether and where white space not defined by <code>format</code> can appear in <code>s</code> and that control the precise behavior of the parse operation. The following table describes how each member of the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration affects the operation of the <a class=\"xref\" href=\"system.datetime#System_DateTime_ParseExact_System_String_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\" data-linktype=\"relative-path\">ParseExact(String,String,IFormatProvider,DateTimeStyles)</a> method.  </p>\n<table>\n<thead>\n<tr>\n<th>DateTimeStyles member</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Parses <code>s</code> and, if necessary, converts it to UTC. If <code>s</code> includes a time zone offset, or if <code>s</code> contains no time zone information but <code>styles</code> includes the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, the method parses the string, calls <a class=\"xref\" href=\"system.datetime#System_DateTime_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> to convert the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value to UTC, and sets the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. If <code>s</code> indicates that it represents UTC, or if <code>s</code> does not contain time zone information but <code>styles</code> includes the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, the method parses the string, performs no time zone conversion on the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value, and sets the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. In all other cases, the flag has no effect.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that white space not defined by <code>format</code> can appear between any individual date or time element.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that white space not defined by <code>format</code> can appear at the beginning of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that white space not defined by <code>format</code> can appear at the end of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that <code>s</code> may contain leading, inner, and trailing white spaces not defined by <code>format</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that if <code>s</code> lacks any time zone information, it is assumed to represent a local time. Unless the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag is present, the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that if <code>s</code> lacks any time zone information, it is assumed to represent UTC. Unless the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag is present, the method converts the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value from UTC to local time and sets its <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>If <code>s</code> contains time without date information, the date of the return value is set to <code>DateTime.MinValue.Date</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>The <code>s</code> parameter is parsed using default values. No white space other than that present in <code>format</code> is allowed. If <code>s</code> lacks a date component, the date of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is set to 1/1/0001. If <code>s</code> contains no time zone information, the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. If time zone information is present in <code>s</code>, the time is converted to local time and the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>For strings that contain time zone information, tries to prevent the conversion to a date and time with its <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. This flag primarily prevents the conversion of UTC times to local times.</td>\n</tr>\n</tbody>\n</table>\n<p> The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in <code>s</code> are defined by the <code>provider</code> parameter, as is the precise format of <code>s</code> if <code>format</code> is a standard format specifier string. The <code>provider</code> parameter can be any of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture used to interpret <code>s</code>. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by its <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the symbols and formatting in <code>s</code>.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n</li>\n<li><p>A custom <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation whose <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns either the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object or the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that provides formatting information.  </p>\n<p>If <code>provider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that corresponds to the current culture is used.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_SpecifyKind_System_DateTime_System_DateTimeKind_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SpecifyKind(DateTime,DateTimeKind)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Creates a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object that has the same number of ticks as the specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>, but is designated as either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> value.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static DateTime SpecifyKind (DateTime value, DateTimeKind kind);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A date and time.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>kind</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>One of the enumeration values that indicates whether the new object represents local time, UTC, or neither.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A new object that has the same number of ticks as the object represented by the <code>value</code> parameter and the <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a> value specified by the <code>kind</code> parameter.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object consists of a Kind field that indicates whether the time value is based on local time, Coordinated Universal Time (UTC), or neither, and a Ticks field that contains a time value measured in 100-nanosecond ticks. The SpecifyKind method creates a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object using the specified <code>kind</code> parameter and the original time value.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value does not represent the same instant in time as the <code>value</code> parameter, and SpecifyKind is not a time zone conversion method. Instead, it leaves the time specified by the <code>value</code> parameter unchanged, and sets the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <code>kind</code>. For information about time zone conversions, see <a href=\"../Topic/Converting%20Times%20Between%20Time%20Zones.md\" data-linktype=\"relative-path\">Converting Times Between Time Zones</a>.  </p>\n</div>\n<p> The SpecifyKind method is useful in interoperability scenarios where you receive a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object with an unspecified Kind field, but you can determine by independent means that the Ticks field represents local time or UTC.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Subtract_System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Subtract(DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Subtracts the specified date and time from this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public TimeSpan Subtract (DateTime value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The date and time value to subtract.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A time interval that is equal to the date and time represented by this instance minus the date and time represented by <code>value</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The result is less than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> or greater than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Subtract method determines the difference between two dates. To subtract a time interval from the current instance, call the <a class=\"xref\" href=\"system.datetime#System_DateTime_Subtract_System_TimeSpan_\" data-linktype=\"relative-path\">Subtract(TimeSpan)</a> method. To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument. For example, to subtract two months from the current date, call the <a class=\"xref\" href=\"system.datetime#System_DateTime_AddMonths_System_Int32_\" data-linktype=\"relative-path\">AddMonths(Int32)</a> method with a value of -2.  </p>\n<p> If the date and time of the current instance is earlier than <code>value</code>, the method returns a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> object that represents a negative time span. That is, the value of all of its non-zero properties (such as <a class=\"xref\" href=\"system.timespan#System_TimeSpan_Days_\" data-linktype=\"relative-path\">Days</a> or <a class=\"xref\" href=\"system.timespan#System_TimeSpan_Ticks_\" data-linktype=\"relative-path\">Ticks</a>) is negative.  </p>\n<p> TheSubtract method does not consider the value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the two <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> values when performing the subtraction. Before subtracting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> objects, ensure that the objects represent times in the same time zone. Otherwise, the result will include the difference between time zones.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_Subtract_System_DateTimeOffset_\" data-linktype=\"relative-path\">System.DateTimeOffset.Subtract(DateTimeOffset)</a> method does consider the difference between time zones when performing the subtraction.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_Subtract_System_TimeSpan_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Subtract(TimeSpan)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Subtracts the specified duration from this instance.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime Subtract (TimeSpan value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The time interval to subtract.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that is equal to the date and time represented by this instance minus the time interval represented by <code>value</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The result is less than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> or greater than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Subtract method returns the date that is a specified time interval difference from the current instance. To determine the time interval between two dates, call the <a class=\"xref\" href=\"system.datetime#System_DateTime_Subtract_System_DateTime_\" data-linktype=\"relative-path\">Subtract(DateTime)</a> method. To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument. For example, to subtract two months from the current date, call the <a class=\"xref\" href=\"system.datetime#System_DateTime_AddMonths_System_Int32_\" data-linktype=\"relative-path\">AddMonths(Int32)</a> method with a value of -2.  </p>\n<p> This method does not change the value of this <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>. Instead, it returns a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> whose value is the result of this operation.  </p>\n<p> Ordinarily, the Subtract method subtracts a <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> object that represents a positive time span and returns a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that is earlier than the date and time of the current instance. However, if the <a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a> object represents a negative time span, the Subtract method returns a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value that is later than the date and time of the current instance.  </p>\n<p> The Subtract method allows you to subtract a time interval that consists of more than one unit of time (such as a given number of hours and a given number of minutes). To subtract a single unit of time (such as years, months, or days) from the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> instance, you can pass a negative numeric value as a parameter to any of the following methods:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.datetime#System_DateTime_AddYears_\" data-linktype=\"relative-path\">AddYears</a>, to subtract a specific number of years from the current date and time instance.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.datetime#System_DateTime_AddMonths_\" data-linktype=\"relative-path\">AddMonths</a>, to subtract a specific number of months from the current date and time instance.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.datetime#System_DateTime_AddDays_\" data-linktype=\"relative-path\">AddDays</a>, to subtract a specific number of days from the current date and time instance.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.datetime#System_DateTime_AddHours_\" data-linktype=\"relative-path\">AddHours</a>, to subtract a specific number of hours from the current date and time instance.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.datetime#System_DateTime_AddMinutes_\" data-linktype=\"relative-path\">AddMinutes</a>, to subtract a specific number of minutes from the current date and time instance.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.datetime#System_DateTime_AddSeconds_\" data-linktype=\"relative-path\">AddSeconds</a>, to subtract a specific number of seconds from the current date and time instance.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.datetime#System_DateTime_AddMilliseconds_\" data-linktype=\"relative-path\">AddMilliseconds</a>, to subtract a specific number of milliseconds from the current date and time instance.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.datetime#System_DateTime_AddTicks_\" data-linktype=\"relative-path\">AddTicks</a>, to subtract a specific number of ticks from the current date and time instance.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ToBinary\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToBinary()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Serializes the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to a 64-bit binary value that subsequently can be used to recreate the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public long ToBinary ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A 64-bit signed integer that encodes the <span class=\"xref\">stem.DateTime.Kind*</span> and <span class=\"xref\">stem.DateTime.Ticks*</span> properties.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use the ToBinary method to convert the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to a binary value. Subsequently, use the binary value and the <a class=\"xref\" href=\"system.datetime#System_DateTime_FromBinary_\" data-linktype=\"relative-path\">FromBinary</a> method to recreate the original <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> In some cases, the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value returned by the <a class=\"xref\" href=\"system.datetime#System_DateTime_FromBinary_\" data-linktype=\"relative-path\">FromBinary</a> method is not identical to the original <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value supplied to the ToBinary method. For more information, see the next section, &quot;Local Time Adjustment&quot;.  </p>\n</div>\n<h2 id=\"local-time-adjustment\">Local Time Adjustment</h2>\n<p> A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property has the value <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>. When restoring a local <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value from the binary representation that is produced by the ToBinary method, the <a class=\"xref\" href=\"system.datetime#System_DateTime_FromBinary_\" data-linktype=\"relative-path\">FromBinary</a> method may adjust the recreated value so that it is not equal to the original value. This can occur under the following conditions:  </p>\n<ul>\n<li><p>If a local <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is serialized in one time zone by the ToBinary method, and then deserialized in a different time zone by the <a class=\"xref\" href=\"system.datetime#System_DateTime_FromBinary_\" data-linktype=\"relative-path\">FromBinary</a> method, the local time represented by the resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is automatically adjusted to the second time zone.  </p>\n<p> For example, consider a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object that represents a local time of 3 P.M. An application that is executing in the U.S. Pacific Time zone uses the ToBinary method to convert that <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to a binary value. Another application that is executing in the U.S. Eastern Time zone uses the <a class=\"xref\" href=\"system.datetime#System_DateTime_FromBinary_\" data-linktype=\"relative-path\">FromBinary</a> method to convert the binary value to a new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object. The value of the new <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is 6 P.M., which represents the same point in time as the original 3 P.M. value, but is adjusted to local time in the Eastern Time zone.  </p>\n</li>\n<li><p>If the binary representation of a local <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value represents an invalid time in the local time zone of the system on which <a class=\"xref\" href=\"system.datetime#System_DateTime_FromBinary_\" data-linktype=\"relative-path\">FromBinary</a> is called, the time is adjusted so that it is valid.  </p>\n<p> For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M. This hour interval is an invalid time, that is, a time interval that does not exist in this time zone. The following example shows that when a time that falls within this range is converted to a binary value by the ToBinary method and is then restored by the <a class=\"xref\" href=\"system.datetime#System_DateTime_FromBinary_\" data-linktype=\"relative-path\">FromBinary</a> method, the original value is adjusted to become a valid time. You can determine whether a particular date and time value may be subject to modification by passing it to the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_IsInvalidTime_\" data-linktype=\"relative-path\">IsInvalidTime</a> method, as the example illustrates.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTime.FromBinary#1\">Module Example\n   Public Sub Main()\n      Dim localDate As Date = DateTime.SpecifyKind(#03/14/2010 2:30AM#, DateTimeKind.Local)\n      Dim binLocal As Long = localDate.ToBinary()\n      If TimeZoneInfo.Local.IsInvalidTime(localDate) Then\n         Console.WriteLine(&quot;{0} is an invalid time in the {1} zone.&quot;, _\n                           localDate, _\n                           TimeZoneInfo.Local.StandardName)\n      End If\n      Dim localDate2 As Date = DateTime.FromBinary(binLocal)\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, _\n                        localDate, localDate2, localDate.Equals(localDate2))\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;    3/14/2010 2:30:00 AM is an invalid time in the Pacific Standard Time zone.\n&#39;    3/14/2010 2:30:00 AM = 3/14/2010 3:30:00 AM: False\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.FromBinary#1\">using System;\n\npublic class Example\n{\n   public static void Main()\n   {\n      DateTime localDate = new DateTime(2010, 3, 14, 2, 30, 0, DateTimeKind.Local);\n      long binLocal = localDate.ToBinary();\n      if (TimeZoneInfo.Local.IsInvalidTime(localDate))\n         Console.WriteLine(&quot;{0} is an invalid time in the {1} zone.&quot;, \n                           localDate, \n                           TimeZoneInfo.Local.StandardName);\n\n      DateTime localDate2 = DateTime.FromBinary(binLocal);\n      Console.WriteLine(&quot;{0} = {1}: {2}&quot;, \n                        localDate, localDate2, localDate.Equals(localDate2));\n   }\n}\n// The example displays the following output:\n//    3/14/2010 2:30:00 AM is an invalid time in the Pacific Standard Time zone.\n//    3/14/2010 2:30:00 AM = 3/14/2010 3:30:00 AM: False\n</code></pre></li>\n</ul>\n<h2 id=\"version-considerations\">Version Considerations</h2>\n<p> Starting with the .NET Framework version 2.0, a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure consists of a private Kind field, which indicates whether the specified time value is based on local time, Coordinated Universal Time (UTC), or neither, and a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time. The Ticks field can be accessed with the <a class=\"xref\" href=\"system.datetime#System_DateTime_Ticks_\" data-linktype=\"relative-path\">Ticks</a> property and the Kind field can be accessed with the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property.  </p>\n<p> Prior to the .NET Framework 2.0, if you serialized a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object manually instead of using a serialization interface such as <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">System.Runtime.Serialization.ISerializable</a>, you only needed to serialize the Ticks data in the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> structure. Starting with version 2.0, you must also serialize the Kind data.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ToFileTime\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToFileTime()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to a Windows file time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public long ToFileTime ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object expressed as a Windows file time.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  </p>\n<p> The ToFileTime method uses the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to determine whether the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is a local time, a UTC time, or an unspecified kind of time which is treated as a local time.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ToFileTimeUtc\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToFileTimeUtc()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to a Windows file time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public long ToFileTimeUtc ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object expressed as a Windows file time.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E. UTC.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D. (C.E.) Coordinated Universal Time (UTC). Windows uses a file time to record when an application creates, accesses, or writes to a file.  </p>\n<p> The ToFileTimeUtc method uses the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to determine whether the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is a local time, a UTC time, or an unspecified kind of time which is treated as a UTC time. If it is a local time, it converts the time to UTC before performing the conversion to a Windows file time.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ToLocalTime\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToLocalTime()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to local time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime ToLocalTime ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object whose <span class=\"xref\">stem.DateTime.Kind*</span> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>, and whose value is the local time equivalent to the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object, or <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">MaxValue</a> if the converted value is too large to be represented by a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object, or <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">MinValue</a> if the converted value is too small to be represented as a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The local time is equal to the Coordinated Universal Time (UTC) time plus the UTC offset. For more information about the UTC offset, see <a class=\"xref\" href=\"system.timezone#System_TimeZone_GetUtcOffset_\" data-linktype=\"relative-path\">GetUtcOffset</a>. The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> On Windows XP systems, the ToLocalTime method recognizes only the current adjustment rule when converting from UTC to local time. As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between UTC and local time.  </p>\n</div>\n<p> Starting with the .NET Framework version 2.0, the value returned by the ToLocalTime method is determined by the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object. The following table describes the possible results.  </p>\n<table>\n<thead>\n<tr>\n<th>Kind</th>\n<th>Results</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a></td>\n<td>This instance of <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is converted to local time.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a></td>\n<td>No conversion is performed.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a></td>\n<td>This instance of <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is assumed to be a UTC time, and the conversion is performed as if <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> were <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"NOTE\"><h5>Note</h5><p> The ToLocalTime method converts a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value from UTC to local time. To convert the time in any designated time zone to local time, use the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTime_\" data-linktype=\"relative-path\">ConvertTime</a> method.  </p>\n</div>\n<p> The value returned by the conversion is a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property always returns <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>. Consequently, a valid result is returned even if ToLocalTime is applied repeatedly to the same <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ToLongDateString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToLongDateString()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to its equivalent long date string representation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ToLongDateString ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string that contains the long date string representation of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is formatted using the pattern defined by the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo#System_Globalization_DateTimeFormatInfo_LongDatePattern_\" data-linktype=\"relative-path\">LongDatePattern</a> property associated with the current thread culture. The return value is identical to the value returned by specifying the &quot;D&quot; <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">standard DateTime format string</a> with the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The string returned by the ToLongDateString method is culture-sensitive. It reflects the pattern defined by the current culture&#39;s <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object. For example, for the en-US culture, the standard long date pattern is &quot;dddd, MMMMdd, yyyy&quot;; for the de-DE culture, it is &quot;dddd, d. MMMMyyyy&quot;; for the ja-JP culture, it is &quot;yyyy&#39;?&#39;M&#39;?&#39;d&#39;?&#39;&quot;. The specific format string on a particular computer can also be customized so that it differs from the standard long date format string.  </p>\n</div>\n<p> For more information about the current thread culture, see the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property. For more information about format characters, format patterns, and the output they produce, see the <a href=\"../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Formatting Types</a> topic. For more information about changing the format pattern associated with a format character, see the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ToLongTimeString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToLongTimeString()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to its equivalent long time string representation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ToLongTimeString ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string that contains the long time string representation of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is formatted using the pattern defined by the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo#System_Globalization_DateTimeFormatInfo_LongTimePattern_\" data-linktype=\"relative-path\">LongTimePattern</a> property associated with the current thread culture. The return value is identical to the value returned by specifying the &quot;T&quot; <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">standard date and time format string</a> with the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The string returned by the ToLongTimeString method is culture-sensitive. It reflects the pattern defined by the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo#System_Globalization_DateTimeFormatInfo_LongTimePattern_\" data-linktype=\"relative-path\">LongTimePattern</a> property of the current culture&#39;s <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object. For example, for the en-US culture, the standard long time pattern is &quot;h:mm:ss tt&quot;; for the de-DE culture, it is &quot;HH:mm:ss&quot;; for the ja-JP culture, it is &quot;H:mm:ss&quot;. The specific format string on a particular computer can also be customized so that it differs from the standard long time format string.  </p>\n</div>\n<p> For more information about the current thread culture, see the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property. For more information about format characters, format patterns, and the output they produce, see the <a href=\"../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Formatting Types</a> topic. For more information about changing the format pattern associated with a format character, see the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ToOADate\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToOADate()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of this instance to the equivalent OLE Automation date.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public double ToOADate ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The value of this instance cannot be represented as an OLE Automation Date.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>An OLE Automation date is implemented as a floating-point number whose integral component is the number of days before or after midnight, 30 December 1899, and whose fractional component represents the time on that day divided by 24. For example, midnight, 31 December 1899 is represented by 1.0; 6 A.M., 1 January 1900 is represented by 2.25; midnight, 29 December 1899 is represented by -1.0; and 6 A.M., 29 December 1899 is represented by -1.25.  </p>\n<p> The base OLE Automation Date is midnight, 30 December 1899. The minimum OLE Automation date is midnight, 1 January 0100. The maximum OLE Automation Date is the same as <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">System.DateTime.MaxValue</a>, the last moment of 31 December 9999.  </p>\n<p> The ToOADate method throws an <a class=\"xref\" href=\"system.overflowexception\" data-linktype=\"relative-path\">OverflowException</a> if the current instance represents a date that is later than <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">MinValue</a> and earlier than midnight on January1, 0100. However, if the value of the current instance is <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">MinValue</a>, the method returns 0.  </p>\n<p> For more information about OLE Automation, see the <a href=\"http://go.microsoft.com/fwlink/?linkid=37118\" data-linktype=\"external\">MSDN Library</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ToShortDateString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToShortDateString()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to its equivalent short date string representation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ToShortDateString ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string that contains the short date string representation of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is formatted using the pattern defined by the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo#System_Globalization_DateTimeFormatInfo_ShortDatePattern_\" data-linktype=\"relative-path\">ShortDatePattern</a> property associated with the current thread culture. The return value is identical to the value returned by specifying the &quot;d&quot; <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">standard DateTime format string</a> with the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The string returned by the ToShortDateString method is culture-sensitive. It reflects the pattern defined by the current culture&#39;s <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object. For example, for the en-US culture, the standard short date pattern is &quot;M/d/yyyy&quot;; for the de-DE culture, it is &quot;dd.MM.yyyy&quot;; for the ja-JP culture, it is &quot;yyyy/M/d&quot;. The specific format string on a particular computer can also be customized so that it differs from the standard short date format string.  </p>\n</div>\n<p> For more information about the current thread culture, see the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property. For more information about format characters, format patterns, and the output they produce, see the <a href=\"../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Formatting Types</a> topic. For more information about changing the format pattern associated with a format character, see the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ToShortTimeString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToShortTimeString()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to its equivalent short time string representation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ToShortTimeString ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string that contains the short time string representation of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is formatted using the pattern defined by the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo#System_Globalization_DateTimeFormatInfo_ShortTimePattern_\" data-linktype=\"relative-path\">ShortTimePattern</a> property associated with the current thread culture. The return value is identical to the value returned by specifying the &quot;t&quot; <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">standard DateTime format string</a> with the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> The string returned by the ToShortTimeString method is culture-sensitive. It reflects the pattern defined by the current culture&#39;s <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object. For example, for the en-US culture, the standard short time pattern is &quot;h:mm tt&quot;; for the de-DE culture, it is &quot;HH:mm&quot;; for the ja-JP culture, it is &quot;H:mm&quot;. The specific format string on a particular computer can also be customized so that it differs from the standard short time format string.  </p>\n</div>\n<p> For more information about the current thread culture, see the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a> property. For more information about format characters, format patterns, and the output they produce, see the <a href=\"../Topic/Formatting%20Types%20in%20the%20.NET%20Framework.md\" data-linktype=\"relative-path\">Formatting Types</a> topic. For more information about changing the format pattern associated with a format character, see the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ToString\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToString()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to its equivalent string representation using the formatting conventions of the current culture.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override string ToString ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string representation of the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The date and time is outside the range of dates supported by the calendar used by the current culture.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is formatted using the general date and time format specifier (&#39;G&#39;). To format it using a specific date and time format specifier, call the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_String_\" data-linktype=\"relative-path\">ToString(String)</a> method. To format it using the general date and time format specifier (&#39;G&#39;) for a specific culture, call the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(IFormatProvider)</a> method. To format it using a specific date and time format specifier and the conventions of a specific culture, call the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_String_System_IFormatProvider_\" data-linktype=\"relative-path\">ToString(String,IFormatProvider)</a> method.  </p>\n<p> This method uses formatting information derived from the current culture. In particular, it combines the custom format strings returned by the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo#System_Globalization_DateTimeFormatInfo_ShortDatePattern_\" data-linktype=\"relative-path\">ShortDatePattern</a> and <a class=\"xref\" href=\"system.globalization.datetimeformatinfo#System_Globalization_DateTimeFormatInfo_LongTimePattern_\" data-linktype=\"relative-path\">LongTimePattern</a> properties of the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by the <code>Thread.CurrentThread.CurrentCulture.DateTimeFormat</code> property. For more information, see <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a>. Other overloads of the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_\" data-linktype=\"relative-path\">ToString</a> method enable you to specify the culture whose formatting to use and to define the output pattern of the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ToString_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToString(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to its equivalent string representation using the specified culture-specific format information.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ToString (IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that supplies culture-specific formatting information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string representation of value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object as specified by <code>provider</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The date and time is outside the range of dates supported by the calendar used by <code>provider</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is formatted using the general date and time format specifier (&#39;G&#39;), which formats output using the short date pattern and the long time pattern.  </p>\n<p> The format of the short date and long time pattern is defined by the <code>provider</code> parameter. The <code>provider</code> parameter can be any of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the formatting of the returned string.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n</li>\n<li><p>A custom object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. Its <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns a <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that provides formatting information.  </p>\n<p>If <code>provider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object associated with the current culture is used. For more information, see <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a>.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ToString_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToString(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to its equivalent string representation using the specified format and the formatting conventions of the current culture.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ToString (string format);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>format</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A standard or custom date and time format string (see Remarks).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string representation of value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object as specified by <code>format</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The length of <code>format</code> is 1, and it is not one of the format specifier characters defined for <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a>.  </p>\n<p> -or-  </p>\n<p> <code>format</code> does not contain a valid custom format pattern.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The date and time is outside the range of dates supported by the calendar used by the current culture.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The ToString method returns the string representation of a date and time value in a specific format that uses the formatting conventions of the current culture; for more information, see <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a>.  </p>\n<p> The <code>format</code> parameter should contain either a single format specifier character (see <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a>) or a custom format pattern (see <a href=\"../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Date and Time Format Strings</a>) that defines the format of the returned string. If <code>format</code> is <code>null</code> or an empty string, the general format specifier, &#39;G&#39;, is used.  </p>\n<p> Some uses of this method include:  </p>\n<ul>\n<li><p>Getting a string that displays the date and time in the current culture’s short date and time format. To do this, you use the “G” format specifier.  </p>\n</li>\n<li><p>Getting a string that contains only the month and year. To do this, you use the “MM/yyyy” format string. The format string uses the current culture’s date separator.  </p>\n</li>\n<li><p>Getting a string that contains the date and time in a specific format. For example, the “MM/dd/yyyyHH:mm” format string displays the date and time string in a fixed format such as “19//03//2013 18:06&quot;. The format string uses “/” as a fixed date separator regardless of culture-specific settings.  </p>\n</li>\n<li><p>Getting a date in a condensed format that could be used for serializing a date string. For example, the &quot;yyyyMMdd&quot; format string displays a four-digit year followed by a two-digit month and a two-digit day with no date separator.  </p>\n<p>The following example uses these three format strings to display a date and time value by using the conventions of the en-US and fr-FR cultures.  </p>\n<pre><code class=\"lang-vb\" name=\"System.DateTime.ToString#5\">Imports System.Globalization\nImports System.Threading\n\nPublic Module Example\n   Public Sub Main()\n      Dim formats() As String = { &quot;G&quot;, &quot;MM/yyyy&quot;, &quot;MM\\/dd\\/yyyy HH:mm&quot;,\n                                  &quot;yyyyMMdd&quot; }\n      Dim cultureNames() As String = { &quot;en-US&quot;, &quot;fr-FR&quot; }\n      Dim dat As New DateTime(2015, 8, 18, 13, 31, 17)\n      For Each cultureName In cultureNames\n         Dim culture As New CultureInfo(cultureName)\n         CultureInfo.CurrentCulture = culture\n         Console.WriteLine(culture.NativeName)\n         For Each fmt In formats\n            Console.WriteLine(&quot;   {0}: {1}&quot;, fmt,\n                              dat.ToString(fmt))\n         Next\n         Console.WriteLine()\n      Next\n   End Sub\nEnd Module\n&#39; The example displays the following output:\n&#39;       English (United States)\n&#39;          G: 8/18/2015 1:31:17 PM\n&#39;          MM/yyyy: 08/2015\n&#39;          MM\\/dd\\/yyyy HH:mm: 08/18/2015 13:31\n&#39;          yyyyMMdd: 20150818\n&#39;\n&#39;       fran&#231;ais (France)\n&#39;          G: 18/08/2015 13:31:17\n&#39;          MM/yyyy: 08/2015\n&#39;          MM\\/dd\\/yyyy HH:mm: 08/18/2015 13:31\n&#39;          yyyyMMdd: 20150818\n</code></pre><pre><code class=\"lang-cs\" name=\"System.DateTime.ToString#5\">using System;\nusing System.Globalization;\nusing System.Threading;\n\npublic class Example\n{\n   public static void Main()\n   {\n      String[] formats = { &quot;G&quot;, &quot;MM/yyyy&quot;, @&quot;MM\\/dd\\/yyyy HH:mm&quot;,\n                           &quot;yyyyMMdd&quot; };\n      String[] cultureNames = { &quot;en-US&quot;, &quot;fr-FR&quot; };\n      DateTime date = new DateTime(2015, 8, 18, 13, 31, 17);\n      foreach (var cultureName in cultureNames) {\n         var culture = new CultureInfo(cultureName);\n         CultureInfo.CurrentCulture = culture;\n         Console.WriteLine(culture.NativeName);\n         foreach (var format in formats)\n            Console.WriteLine(&quot;   {0}: {1}&quot;, format,\n                              date.ToString(format));\n         Console.WriteLine();\n      }\n   }\n}\n// The example displays the following output:\n//       English (United States)\n//          G: 8/18/2015 1:31:17 PM\n//          MM/yyyy: 08/2015\n//          MM\\/dd\\/yyyy HH:mm: 08/18/2015 13:31\n//          yyyyMMdd: 20150818\n//\n//       fran&#231;ais (France)\n//          G: 18/08/2015 13:31:17\n//          MM/yyyy: 08/2015\n//          MM\\/dd\\/yyyy HH:mm: 08/18/2015 13:31\n//          yyyyMMdd: 20150818\n</code></pre></li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ToString_System_String_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToString(String,IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to its equivalent string representation using the specified format and culture-specific format information.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string ToString (string format, IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>format</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A standard or custom date and time format string.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that supplies culture-specific formatting information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string representation of value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object as specified by <code>format</code> and <code>provider</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The length of <code>format</code> is 1, and it is not one of the format specifier characters defined for <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a>.  </p>\n<p> -or-  </p>\n<p> <code>format</code> does not contain a valid custom format pattern.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The date and time is outside the range of dates supported by the calendar used by <code>provider</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <code>format</code> parameter can contain either a single format specifier character (see <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a>) or a custom format pattern (see <a href=\"../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Date and Time Format Strings</a>). If <code>format</code>is <code>null</code> or an empty string (&quot;&quot;), the standard format specifier, &quot;G&quot;, is used.  </p>\n<p> The <code>provider</code> parameter defines the pattern that corresponds to the standard format specifiers, as well as the symbols and names of date and time components. The <code>provider</code> parameter can be any of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture whose formatting conventions are to be reflected in the returned string. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the formatting of the returned string.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n</li>\n<li><p>A custom object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. Its <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns a <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that provides formatting information.  </p>\n<p>If <code>provider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> associated with the current culture is used. For more information, see <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_CurrentCulture_\" data-linktype=\"relative-path\">CurrentCulture</a>.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_ToUniversalTime\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToUniversalTime()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to Coordinated Universal Time (UTC).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public DateTime ToUniversalTime ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object whose <span class=\"xref\">stem.DateTime.Kind*</span> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>, and whose value is the UTC equivalent to the value of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object, or <a class=\"xref\" href=\"system.datetime#System_DateTime_MaxValue\" data-linktype=\"relative-path\">MaxValue</a> if the converted value is too large to be represented by a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object, or <a class=\"xref\" href=\"system.datetime#System_DateTime_MinValue\" data-linktype=\"relative-path\">MinValue</a> if the converted value is too small to be represented by a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Coordinated Universal Time (UTC) is equal to the local time minus the UTC offset. For more information about the UTC offset, see <a class=\"xref\" href=\"system.timezone#System_TimeZone_GetUtcOffset_\" data-linktype=\"relative-path\">GetUtcOffset</a>. The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> On Windows XP systems, the ToUniversalTime method recognizes only the current adjustment rule when converting from local time to UTC. As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between local time and UTC.  </p>\n</div>\n<p> Starting with the .NET Framework version 2.0, the value returned by the ToUniversalTime method is determined by the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object. The following table describes the possible results.  </p>\n<table>\n<thead>\n<tr>\n<th>Kind</th>\n<th>Results</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a></td>\n<td>No conversion is performed.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a></td>\n<td>The current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is converted to UTC.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a></td>\n<td>The current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is assumed to be a local time, and the conversion is performed as if <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> were <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">DateTimeKind</a>.</td>\n</tr>\n</tbody>\n</table>\n<div class=\"NOTE\"><h5>Note</h5><p> The ToUniversalTime method converts a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value from local time to UTC. To convert the time in a non-local time zone to UTC, use the <a class=\"xref\" href=\"system.timezoneinfo#System_TimeZoneInfo_ConvertTimeToUtc_System_DateTime_System_TimeZoneInfo_\" data-linktype=\"relative-path\">System.TimeZoneInfo.ConvertTimeToUtc(DateTime,TimeZoneInfo)</a> method. To convert a time whose offset from UTC is known, use the <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> method.  </p>\n</div>\n<p> If the date and time instance value is an ambiguous time, this method assumes that it is a standard time. (An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone) If the date and time instance value is an invalid time, this method simply subtracts the local time from the local time zone&#39;s UTC offset to return UTC. (An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_TryParse_System_String_System_DateTime__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TryParse(String,DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent and returns a value that indicates whether the conversion succeeded.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool TryParse (string s, out DateTime result);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>s</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string containing a date and time to convert.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>result</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>When this method returns, contains the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> if the conversion failed. The conversion fails if the <code>s</code> parameter is <code>null</code>, is an empty string (&quot;&quot;), or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <code>s</code> parameter was converted successfully; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The TryParse method is similar to the <a class=\"xref\" href=\"system.datetime#System_DateTime_Parse_System_String_\" data-linktype=\"relative-path\">System.DateTime.Parse(String)</a> method, except that the TryParse method does not throw an exception if the conversion fails.  </p>\n<p> The string <code>s</code> is parsed using formatting information in the current <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object, which is supplied implicitly by the current thread culture.  </p>\n<p> This method tries to ignore unrecognized data, if possible, and fills in missing month, day, and year information with the current date. If <code>s</code> contains only a date and no time, this method assumes the time is 12:00 midnight. If <code>s</code> includes a date component with a two-digit year, it is converted to a year in the current culture&#39;s current calendar based on the value of the <a class=\"xref\" href=\"system.globalization.calendar#System_Globalization_Calendar_TwoDigitYearMax_\" data-linktype=\"relative-path\">TwoDigitYearMax</a> property. Any leading, inner, or trailing white space character in <code>s</code> is ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters (&#39;#&#39;, U+0023), and can be trailed with one or more NULL characters (U+0000).  </p>\n<p> Because the TryParse method tries to parse the string representation of a date and time using the formatting rules of the current culture, trying to parse a particular string across different cultures can either fail or return different results. If a specific date and time format will be parsed across different locales, use the <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParse_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_System_DateTime__\" data-linktype=\"relative-path\">System.DateTime.TryParse(String,IFormatProvider,DateTimeStyles,DateTime)</a> method or one of the overloads of the <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParseExact_\" data-linktype=\"relative-path\">TryParseExact</a> method and provide a format specifier.  </p>\n<p> If <code>s</code> is the string representation of a leap day in a leap year in the current calendar, the method parses <code>s</code> successfully. If <code>s</code> is the string representation of a leap day in a non-leap year in the current culture&#39;s current calendar, the parse operation fails and the method returns <code>false</code>.  </p>\n<p> If <code>s</code> contains no time zone information, <code>result</code> contains a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a> when the method returns. If the string to be parsed contains time zone information, <code>result</code> contains a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a> when the method returns.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_TryParse_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_System_DateTime__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TryParse(String,IFormatProvider,DateTimeStyles,DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent using the specified culture-specific format information and formatting style, and returns a value that indicates whether the conversion succeeded.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool TryParse (string s, IFormatProvider provider, System.Globalization.DateTimeStyles styles, out DateTime result);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>s</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string containing a date and time to convert.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that supplies culture-specific formatting information about <code>s</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>styles</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of enumeration values that defines how to interpret the parsed date in relation to the current time zone or the current date. A typical value to specify is <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>result</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>When this method returns, contains the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> if the conversion failed. The conversion fails if the <code>s</code> parameter is <code>null</code>, is an empty string (&quot;&quot;), or does not contain a valid string representation of a date and time. This parameter is passed uninitialized.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <code>s</code> parameter was converted successfully; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>styles</code> is not a valid <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> value.  </p>\n<p> -or-  </p>\n<p> <code>styles</code> contains an invalid combination of <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> values (for example, both <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> and <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>).</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.notsupportedexception\" data-linktype=\"relative-path\">NotSupportedException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>provider</code> is a neutral culture and cannot be used in a parsing operation.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The TryParse method parses a string that can contain date, time, and time zone information. It is similar to the <a class=\"xref\" href=\"system.datetime#System_DateTime_Parse_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\" data-linktype=\"relative-path\">System.DateTime.Parse(String,IFormatProvider,DateTimeStyles)</a> method, except that the <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParse_System_String_System_DateTime__\" data-linktype=\"relative-path\">System.DateTime.TryParse(String,DateTime)</a> method does not throw an exception if the conversion fails.  </p>\n<p> This method attempts to ignore unrecognized data and parse <code>s</code> completely. If <code>s</code> contains a time but no date, the method by default substitutes the current date or, if <code>styles</code> includes the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> flag, it substitutes <code>DateTime.Date.MinValue</code>. If <code>s</code> contains a date but no time, 12:00 midnight is used as the default time. If a date is present but its year component consists of only two digits, it is converted to a year in the <code>provider</code> parameter&#39;s current calendar based on the value of the <a class=\"xref\" href=\"system.globalization.calendar#System_Globalization_Calendar_TwoDigitYearMax_\" data-linktype=\"relative-path\">TwoDigitYearMax</a> property. Any leading, inner, or trailing white space characters in <code>s</code> are ignored. The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters (&#39;#&#39;, U+0023), and can be trailed with one or more NULL characters (U+0000).  </p>\n<p> Specific valid formats for date and time elements, as well as the names and symbols used in dates and times, are defined by the <code>provider</code> parameter, which can be any of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture whose formatting is used in the <code>s</code> parameter. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by the <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the formatting used in <code>s</code>.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the formatting used in <code>s</code>.  </p>\n</li>\n<li><p>A custom <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation. Its <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns a <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the formatting used in <code>s</code>.  </p>\n<p>If <code>provider</code> is <code>null</code>, the current culture is used.  </p>\n<p>If <code>s</code> is the string representation of a leap day in a leap year in the current calendar, the method parses <code>s</code> successfully. If <code>s</code> is the string representation of a leap day in a non-leap year in the current calendar of <code>provider</code>, the parse operation fails and the method returns <code>false</code>.  </p>\n<p>The <code>styles</code> parameter defines the precise interpretation of the parsed string and how the parse operation should handle it. It can be one or more members of the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration, as described in the following table.  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>DateTimeStyles member</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Parses <code>s</code> and, if necessary, converts it to UTC. If <code>s</code> includes a time zone offset, or if <code>s</code> contains no time zone information but <code>styles</code> includes the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, the method parses the string, calls <a class=\"xref\" href=\"system.datetime#System_DateTime_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> to convert the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value to UTC, and sets the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. If <code>s</code> indicates that it represents UTC, or if <code>s</code> does not contain time zone information but <code>styles</code> includes the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, the method parses the string, performs no time zone conversion on the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value, and sets the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. In all other cases, the flag has no effect.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Although valid, this value is ignored. Inner white space is permitted in the date and time elements of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Although valid, this value is ignored. Leading white space is permitted in the date and time elements of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Although valid, this value is ignored. Trailing white space is permitted in the date and time elements of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that <code>s</code> may contain leading, inner, and trailing white spaces. This is the default behavior. It cannot be overridden by supplying a more restrictive <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration value such as <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that if <code>s</code> lacks any time zone information, it is assumed to represent a local time. Unless the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag is present, the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that if <code>s</code> lacks any time zone information, it is assumed to represent UTC. Unless the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag is present, the method converts the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value from UTC to local time and sets its <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Although valid, this value is ignored.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value with its <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. Typically, such a string is created by calling the <a class=\"xref\" href=\"system.datetime#System_DateTime_ToString_System_String_\" data-linktype=\"relative-path\">System.DateTime.ToString(String)</a> method using either the &quot;o&quot;, &quot;r&quot;, or &quot;u&quot; standard format specifiers.</td>\n</tr>\n</tbody>\n</table>\n<p> If <code>s</code> contains no time zone information, the TryParse method returns a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a> unless a <code>styles</code> flag indicates otherwise. If <code>s</code> includes time zone or time zone offset information, the TryParse method performs any necessary time conversion and returns one of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value whose date and time reflect the local time and whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.  </p>\n</li>\n<li><p>Or, if <code>styles</code> includes the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> flag, a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value whose date and time reflect UTC and whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.  </p>\n<p>This behavior can be overridden by using the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag.  </p>\n</li>\n</ul>\n<h2 id=\"parsing-custom-cultures\">Parsing Custom Cultures</h2>\n<p> If you parse a date and time string generated for a custom culture, use the <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParseExact_\" data-linktype=\"relative-path\">TryParseExact</a> method instead of the <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParse_\" data-linktype=\"relative-path\">TryParse</a> method to improve the probability that the parse operation will succeed. A custom culture date and time string can be complicated and difficult to parse. The <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParse_\" data-linktype=\"relative-path\">TryParse</a> method attempts to parse a string with several implicit parse patterns, all of which might fail. In contrast, the <a class=\"xref\" href=\"system.datetime#System_DateTime_TryParseExact_\" data-linktype=\"relative-path\">TryParseExact</a> method  requires you to explicitly designate one or more exact parse patterns that are likely to succeed.  </p>\n<p> For more information about custom cultures, see the <a class=\"xref\" href=\"system.globalization.cultureandregioninfobuilder\" data-linktype=\"relative-path\">System.Globalization.CultureAndRegionInfoBuilder</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_TryParseExact_System_String_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_System_DateTime__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent using the specified format, culture-specific format information, and style. The format of the string representation must match the specified format exactly. The method returns a value that indicates whether the conversion succeeded.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool TryParseExact (string s, string format, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>s</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string containing a date and time to convert.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>format</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The required format of <code>s</code>. See the Remarks section for more information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that supplies culture-specific formatting information about <code>s</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>style</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of one or more enumeration values that indicate the permitted format of <code>s</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>result</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>When this method returns, contains the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> if the conversion failed. The conversion fails if either the <code>s</code> or <code>format</code> parameter is <code>null</code>, is an empty string, or does not contain a date and time that correspond to the pattern specified in <code>format</code>. This parameter is passed uninitialized.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>s</code> was converted successfully; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>styles</code> is not a valid <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> value.  </p>\n<p> -or-  </p>\n<p> <code>styles</code> contains an invalid combination of <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> values (for example, both <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> and <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>).</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The TryParseExact method parses the string representation of a date, which must be in the format defined by the <code>format</code> parameter. It is similar to the <a class=\"xref\" href=\"system.datetime#System_DateTime_ParseExact_System_String_System_String_System_IFormatProvider_System_Globalization_DateTimeStyles_\" data-linktype=\"relative-path\">System.DateTime.ParseExact(String,String,IFormatProvider,DateTimeStyles)</a> method, except that the TryParseExact method does not throw an exception if the conversion fails.  </p>\n<p> The <code>s</code> parameter contains the date and time to parse and must be in a format defined by the <code>format</code> parameter. If date, time, and time zone elements are present in <code>s</code>, they must also appear in the order specified by <code>format</code>. If <code>format</code> defines a date with no time element and the parse operation succeeds, the resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value has a time of midnight (00:00:00). If <code>format</code> defines a time with no date element and the parse operation succeeds, the resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value by default has a date of <code>DateTime.Now.Date</code>, or it has a date of <code>DateTime.MinValue.Date</code> if <code>styles</code> includes the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag. The <code>style</code> parameter determines whether the <code>s</code> parameter can contain leading, inner, or trailing white space characters.  </p>\n<p> If <code>s</code> contains no time zone information, the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. This behavior can be changed by using the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, which returns a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>, or by using the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> and <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flags, which returns a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. If s contains time zone information, the time is converted to local time, if necessary, and the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. This behavior can be changed by using the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.  </p>\n<p> The <code>format</code> parameter contains a pattern that corresponds to the expected format of the <code>s</code> parameter. The pattern in the <code>format</code> parameter consists of one or more custom format specifiers from the <a href=\"../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Date and Time Format Strings</a> table, or a single standard format specifier, which identifies a predefined pattern, from the <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a> table.  </p>\n<p> If you do not use date or time separators in a custom format pattern, use the invariant culture for the <code>provider</code> parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, &quot;HH&quot;, instead of the narrower form, &quot;H&quot;.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Rather than requiring that <code>s</code> conform to a single format for the parse operation to succeed, you can call the [DateTime.TryParseExact(String, String&lt;xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName&gt; method and specify multiple permitted formats. This makes the parse operation more likely to succeed.  </p>\n</div>\n<p> The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in <code>s</code> are defined by the <code>provider</code> parameter, as is the precise format of <code>s</code> if <code>format</code> is a standard format specifier string. The <code>provider</code> parameter can be any of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture used to interpret <code>s</code>. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by its <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the symbols and formatting in <code>s</code>.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n</li>\n<li><p>A custom <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation whose <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns either the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object or the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that provides formatting information.  </p>\n<p>If <code>provider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that corresponds to the current culture is used.  </p>\n<p>The <code>styles</code> parameter includes one or more members of the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration that determine whether and where white space not defined by <code>format</code> can appear in <code>s</code> and that control the precise behavior of the parse operation. The following table describes how each member of the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration affects the operation of the TryParseExact method.  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>DateTimeStyles member</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Parses <code>s</code> and, if necessary, converts it to UTC. If <code>s</code> includes a time zone offset, or if <code>s</code> contains no time zone information but <code>styles</code> includes the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, the method parses the string, calls <a class=\"xref\" href=\"system.datetime#System_DateTime_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> to convert the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value to UTC, and sets the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. If <code>s</code> indicates that it represents UTC, or if <code>s</code> does not contain time zone information but <code>styles</code> includes the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, the method parses the string, performs no time zone conversion on the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value, and sets the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. In all other cases, the flag has no effect.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that white space not defined by <code>format</code> can appear between any individual date or time element.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that white space not defined by <code>format</code> can appear at the beginning of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that white space not defined by <code>format</code> can appear at the end of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that <code>s</code> may contain leading, inner, and trailing white spaces not defined by <code>format</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that if <code>s</code> lacks any time zone information, it is assumed to represent a local time. Unless the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag is present, the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>value is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that if <code>s</code> lacks any time zone information, it is assumed to represent UTC. Unless the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag is present, the method converts the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value from UTC to local time and sets its <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>If <code>s</code> contains time without date information, the date of the return value is set to <code>DateTime.MinValue.Date</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>The <code>s</code> parameter is parsed using default values. No white space other than that present in <code>format</code> is allowed. If <code>s</code> lacks a date component, the date of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is set to 1/1/0001. If <code>s</code> contains no time zone information, the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. If time zone information is present in <code>s</code>, the time is converted to local time and the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>For strings that contain time zone information, tries to prevent the conversion to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value with its <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. This flag primarily prevents the conversion of UTC times to local times.</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_TryParseExact_System_String_System_String___System_IFormatProvider_System_Globalization_DateTimeStyles_System_DateTime__\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the specified string representation of a date and time to its <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> equivalent using the specified array of formats, culture-specific format information, and style. The format of the string representation must match at least one of the specified formats exactly. The method returns a value that indicates whether the conversion succeeded.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool TryParseExact (string s, string[] formats, IFormatProvider provider, System.Globalization.DateTimeStyles style, out DateTime result);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>s</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A string that contains a date and time to convert.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>formats</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An array of allowable formats of <code>s</code>. See the Remarks section for more information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that supplies culture-specific format information about <code>s</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>style</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>. A typical value to specify is <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>result</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>When this method returns, contains the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value equivalent to the date and time contained in <code>s</code>, if the conversion succeeded, or <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> if the conversion failed. The conversion fails if <code>s</code> or <code>formats</code> is <code>null</code>, <code>s</code> or an element of <code>formats</code> is an empty string, or the format of <code>s</code> is not exactly as specified by at least one of the format patterns in <code>formats</code>. This parameter is passed uninitialized.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <code>s</code> parameter was converted successfully; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>styles</code> is not a valid <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> value.  </p>\n<p> -or-  </p>\n<p> <code>styles</code> contains an invalid combination of <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> values (for example, both <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> and <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a>).</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The TryParseExact method parses the string representation of a date that matches any one of the patterns assigned to the <code>formats</code> parameter. It is like the [DateTime.ParseExact(String, String&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt; method, except the TryParseExact method does not throw an exception if the conversion fails.  </p>\n<p> The <code>s</code> parameter contains the date and time to parse. If the <code>s</code> parameter contains only a time and no date, the current date is used unless the <code>style</code> parameter includes the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, in which case the default date (<code>DateTime.Date.MinValue</code>) is used. If the <code>s</code> parameter contains only a date and no time, midnight (00:00:00) is used. The <code>style</code> parameter also determines whether the <code>s</code> parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in <code>formats</code>.  </p>\n<p> If <code>s</code> contains no time zone information, the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. This behavior can be changed by using the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, which returns a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>, or by using the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> and <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flags, which returns a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value whose <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property is <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. If s contains time zone information, the time is converted to local time, if necessary, and the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. This behavior can be changed by using the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.  </p>\n<p> The <code>formats</code> parameter contains an array of patterns, one of which <code>s</code> must match exactly if the parse operation is to succeed. The patterns in the <code>formats</code> parameter consist of one or more custom format specifiers from the <a href=\"../Topic/Custom%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Custom Date and Time Format Strings</a> table, or a single standard format specifier, which identifies a predefined pattern, from the <a href=\"../Topic/Standard%20Date%20and%20Time%20Format%20Strings.md\" data-linktype=\"relative-path\">Standard Date and Time Format Strings</a> table.  </p>\n<p> If you do not use date or time separators in a custom format pattern, use the invariant culture for the <code>provider</code> parameter and the widest form of each custom format specifier. For example, if you want to specify hours in the pattern, specify the wider form, &quot;HH&quot;, instead of the narrower form, &quot;H&quot;.  </p>\n<p> The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in <code>s</code> are defined by the <code>provider</code> parameter, as is the precise format of <code>s</code> if <code>format</code> is a standard format specifier string. The <code>provider</code> parameter can be any of the following:  </p>\n<ul>\n<li><p>A <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that represents the culture used to interpret <code>s</code>. The <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object returned by its <a class=\"xref\" href=\"system.globalization.cultureinfo#System_Globalization_CultureInfo_DateTimeFormat_\" data-linktype=\"relative-path\">DateTimeFormat</a> property defines the symbols and formatting in <code>s</code>.  </p>\n</li>\n<li><p>A <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that defines the format of date and time data.  </p>\n</li>\n<li><p>A custom <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> implementation whose <a class=\"xref\" href=\"system.iformatprovider#System_IFormatProvider_GetFormat_\" data-linktype=\"relative-path\">GetFormat</a> method returns either the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a>object or the <a class=\"xref\" href=\"system.globalization.datetimeformatinfo\" data-linktype=\"relative-path\">DateTimeFormatInfo</a> object that provides formatting information.  </p>\n<p>If <code>provider</code> is <code>null</code>, the <a class=\"xref\" href=\"system.globalization.cultureinfo\" data-linktype=\"relative-path\">CultureInfo</a> object that corresponds to the current culture is used.  </p>\n<p>The <code>styles</code> parameter includes one or more members of the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration that determine whether and where white space not defined by <code>format</code> can appear in <code>s</code> and that control the precise behavior of the parse operation. The following table describes how each member of the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a> enumeration affects the operation of the TryParseExact method.  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>DateTimeStyles member</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Parses <code>s</code> and, if necessary, converts it to UTC. If <code>s</code> includes a time zone offset, or if <code>s</code> contains no time zone information but <code>styles</code> includes the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, the method parses the string, calls <a class=\"xref\" href=\"system.datetime#System_DateTime_ToUniversalTime_\" data-linktype=\"relative-path\">ToUniversalTime</a> to convert the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value to UTC, and sets the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. If <code>s</code> indicates that it represents UTC, or if <code>s</code> does not contain time zone information but <code>styles</code> includes the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag, the method parses the string, performs no time zone conversion on the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value, and sets the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. In all other cases, the flag has no effect.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that white space not defined by <code>format</code> can appear between any individual date or time element.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that white space not defined by <code>format</code> can appear at the beginning of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that white space not defined by <code>format</code> can appear at the end of <code>s</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that <code>s</code> may contain leading, inner, and trailing white spaces not defined by <code>format</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that if <code>s</code> lacks any time zone information, it is assumed to represent a local time. Unless the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag is present, the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>Specifies that if <code>s</code> lacks any time zone information, it is assumed to represent UTC. Unless the <a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">System.Globalization.DateTimeStyles</a> flag is present, the method converts the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value from UTC to local time and sets its <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>If <code>s</code> contains time without date information, the date of the return value is set to <code>DateTime.MinValue.Date</code>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>The <code>s</code> parameter is parsed using default values. No white space other than that present in <code>format</code> is allowed. If <code>s</code> lacks a date component, the date of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value is set to 1/1/0001. If <code>s</code> contains no time zone information, the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. If time zone information is present in <code>s</code>, the time is converted to local time and the<a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the returned <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object is set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>.</td>\n</tr>\n<tr>\n<td><a class=\"xref\" href=\"system.globalization.datetimestyles\" data-linktype=\"relative-path\">DateTimeStyles</a></td>\n<td>For strings that contain time zone information, tries to prevent the conversion to a <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> value with its <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property set to <a class=\"xref\" href=\"system.datetimekind\" data-linktype=\"relative-path\">System.DateTimeKind</a>. This flag primarily prevents the conversion of UTC times to local times.</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Operators\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_op_Addition_System_DateTime_System_TimeSpan_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_Addition(DateTime,TimeSpan)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds a specified time interval to a specified date and time, yielding a new date and time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static DateTime op_Addition (DateTime d, TimeSpan t);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>d</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The date and time value to add.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>t</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The time interval to add.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that is the sum of the values of <code>d</code> and <code>t</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is less than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> or greater than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_op_Equality_System_DateTime_System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_Equality(DateTime,DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether two specified instances of <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> are equal.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool op_Equality (DateTime d1, DateTime d2);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>d1</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>d2</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>d1</code> and <code>d2</code> represent the same date and time; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Equality operator determines whether two <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> values are equal by comparing their number of ticks. Before comparing <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_op_GreaterThan_System_DateTime_System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_GreaterThan(DateTime,DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether one specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is later than another specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool op_GreaterThan (DateTime t1, DateTime t2);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>t1</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>t2</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>t1</code> is later than <code>t2</code>; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The GreaterThan operator determines the relationship between two <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> values by comparing their number of ticks. Before comparing <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_op_GreaterThanOrEqual_System_DateTime_System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_GreaterThanOrEqual(DateTime,DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether one specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> represents a date and time that is the same as or later than another specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool op_GreaterThanOrEqual (DateTime t1, DateTime t2);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>t1</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>t2</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>t1</code> is the same as or later than <code>t2</code>; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The GreaterThanOrEqual operator determines the relationship between two <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> values by comparing their number of ticks. Before comparing <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_op_Inequality_System_DateTime_System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_Inequality(DateTime,DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether two specified instances of <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> are not equal.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool op_Inequality (DateTime d1, DateTime d2);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>d1</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>d2</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>d1</code> and <code>d2</code> do not represent the same date and time; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Inequality operator determines whether two <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> values are not equal by comparing their number of ticks. Before comparing <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_op_LessThan_System_DateTime_System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_LessThan(DateTime,DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether one specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is earlier than another specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool op_LessThan (DateTime t1, DateTime t2);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>t1</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>t2</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>t1</code> is earlier than <code>t2</code>; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The LessThan operator determines the relationship between two <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> values by comparing their number of ticks. Before comparing <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_op_LessThanOrEqual_System_DateTime_System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_LessThanOrEqual(DateTime,DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines whether one specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> represents a date and time that is the same as or earlier than another specified <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static bool op_LessThanOrEqual (DateTime t1, DateTime t2);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>t1</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The first object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>t2</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The second object to compare.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>t1</code> is the same as or earlier than <code>t2</code>; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The LessThanOrEqual operator determines the relationship between two <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> values by comparing their number of ticks. Before comparing <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> objects, make sure that the objects represent times in the same time zone. You can do this by comparing the values of their <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_op_Subtraction_System_DateTime_System_DateTime_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_Subtraction(DateTime,DateTime)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Subtracts a specified date and time from another specified date and time and returns a time interval.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static TimeSpan op_Subtraction (DateTime d1, DateTime d2);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>d1</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The date and time value to subtract from (the minuend).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>d2</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The date and time value to subtract (the subtrahend).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The time interval between <code>d1</code> and <code>d2</code>; that is, <code>d1</code> minus <code>d2</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The Subtraction method does not consider the value of the <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property of the two <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> values when performing the subtraction. Before subtracting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> objects, ensure that the objects represent times in the same time zone. Otherwise, the result will include the difference between time zones.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The <a class=\"xref\" href=\"system.datetimeoffset#System_DateTimeOffset_op_Subtraction_System_DateTimeOffset_System_DateTimeOffset_\" data-linktype=\"relative-path\">System.DateTimeOffset.op_Subtraction(DateTimeOffset,DateTimeOffset)</a> method does consider the difference between time zones when performing the subtraction.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_op_Subtraction_System_DateTime_System_TimeSpan_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">op_Subtraction(DateTime,TimeSpan)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Subtracts a specified time interval from a specified date and time and returns a new date and time.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static DateTime op_Subtraction (DateTime d, TimeSpan t);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>d</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The date and time value to subtract from.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>t</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.timespan\" data-linktype=\"relative-path\">TimeSpan</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The time interval to subtract.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object whose value is the value of <code>d</code> minus the value of <code>t</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>The resulting <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> is less than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> or greater than <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method subtracts the ticks value of <code>t</code> from the ticks value of <code>d</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Explicit Interface Implementations\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_System_IConvertible_ToBoolean_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IConvertible.ToBoolean(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">bool IConvertible.ToBoolean (IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. (This parameter is not used; specify <code>null</code>.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The return value for this member is not used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In all cases.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_System_IConvertible_ToByte_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IConvertible.ToByte(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">byte IConvertible.ToByte (IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. (This parameter is not used; specify <code>null</code>.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The return value for this member is not used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In all cases.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_System_IConvertible_ToChar_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IConvertible.ToChar(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">char IConvertible.ToChar (IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. (This parameter is not used; specify <code>null</code>.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The return value for this member is not used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In all cases.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_System_IConvertible_ToDateTime_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IConvertible.ToDateTime(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">DateTime IConvertible.ToDateTime (IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. (This parameter is not used; specify <code>null</code>.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The current object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_System_IConvertible_ToDecimal_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IConvertible.ToDecimal(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">decimal IConvertible.ToDecimal (IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. (This parameter is not used; specify <code>null</code>.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.decimal\" data-linktype=\"relative-path\">Decimal</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The return value for this member is not used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In all cases.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_System_IConvertible_ToDouble_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IConvertible.ToDouble(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">double IConvertible.ToDouble (IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. (This parameter is not used; specify <code>null</code>.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The return value for this member is not used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In all cases.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_System_IConvertible_ToInt16_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IConvertible.ToInt16(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">short IConvertible.ToInt16 (IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. (This parameter is not used; specify <code>null</code>.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int16\" data-linktype=\"relative-path\">Int16</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The return value for this member is not used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In all cases.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_System_IConvertible_ToInt32_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IConvertible.ToInt32(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">int IConvertible.ToInt32 (IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. (This parameter is not used; specify <code>null</code>.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The return value for this member is not used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In all cases.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_System_IConvertible_ToInt64_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IConvertible.ToInt64(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">long IConvertible.ToInt64 (IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. (This parameter is not used; specify <code>null</code>.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int64\" data-linktype=\"relative-path\">Int64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The return value for this member is not used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In all cases.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_System_IConvertible_ToSByte_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IConvertible.ToSByte(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">sbyte IConvertible.ToSByte (IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. (This parameter is not used; specify <code>null</code>.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.sbyte\" data-linktype=\"relative-path\">SByte</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The return value for this member is not used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In all cases.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_System_IConvertible_ToSingle_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IConvertible.ToSingle(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">float IConvertible.ToSingle (IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. (This parameter is not used; specify <code>null</code>.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.single\" data-linktype=\"relative-path\">Single</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The return value for this member is not used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In all cases.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_System_IConvertible_ToType_System_Type_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IConvertible.ToType(Type,IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Converts the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object to an object of a specified type.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">object IConvertible.ToType (Type type, IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>type</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The desired type.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. (This parameter is not used; specify <code>null</code>.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object of the type specified by the <code>type</code> parameter, with a value equivalent to the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>type</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>This conversion is not supported for the <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> type.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_System_IConvertible_ToUInt16_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IConvertible.ToUInt16(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">ushort IConvertible.ToUInt16 (IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. (This parameter is not used; specify <code>null</code>.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint16\" data-linktype=\"relative-path\">UInt16</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The return value for this member is not used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In all cases.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_System_IConvertible_ToUInt32_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IConvertible.ToUInt32(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">uint IConvertible.ToUInt32 (IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. (This parameter is not used; specify <code>null</code>.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint32\" data-linktype=\"relative-path\">UInt32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The return value for this member is not used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In all cases.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_System_IConvertible_ToUInt64_System_IFormatProvider_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IConvertible.ToUInt64(IFormatProvider)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>This conversion is not supported. Attempting to use this method throws an <a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">ulong IConvertible.ToUInt64 (IFormatProvider provider);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>provider</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An object that implements the <a class=\"xref\" href=\"system.iformatprovider\" data-linktype=\"relative-path\">IFormatProvider</a> interface. (This parameter is not used; specify <code>null</code>.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.uint64\" data-linktype=\"relative-path\">UInt64</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The return value for this member is not used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidcastexception\" data-linktype=\"relative-path\">InvalidCastException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>In all cases.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_DateTime_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the data needed to serialize the current <a class=\"xref\" href=\"system.datetime\" data-linktype=\"relative-path\">DateTime</a> object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>info</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to populate with data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>context</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The destination for this serialization. (This parameter is not used; specify <code>null</code>.)</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>info</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method populates the <code>info</code> parameter with the <a class=\"xref\" href=\"system.datetime#System_DateTime_Ticks_\" data-linktype=\"relative-path\">Ticks</a> and <a class=\"xref\" href=\"system.datetime#System_DateTime_Kind_\" data-linktype=\"relative-path\">Kind</a> property values.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.DateTime.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.DateTime.yml\">\r\n<meta name=\"APIName\" content=\"System.DateTime\">\r\n<meta name=\"APIName\" content=\"System.DateTime..ctor\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Add\">\r\n<meta name=\"APIName\" content=\"System.DateTime.AddDays\">\r\n<meta name=\"APIName\" content=\"System.DateTime.AddHours\">\r\n<meta name=\"APIName\" content=\"System.DateTime.AddMilliseconds\">\r\n<meta name=\"APIName\" content=\"System.DateTime.AddMinutes\">\r\n<meta name=\"APIName\" content=\"System.DateTime.AddMonths\">\r\n<meta name=\"APIName\" content=\"System.DateTime.AddSeconds\">\r\n<meta name=\"APIName\" content=\"System.DateTime.AddTicks\">\r\n<meta name=\"APIName\" content=\"System.DateTime.AddYears\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Compare\">\r\n<meta name=\"APIName\" content=\"System.DateTime.CompareTo\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Date\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Day\">\r\n<meta name=\"APIName\" content=\"System.DateTime.DayOfWeek\">\r\n<meta name=\"APIName\" content=\"System.DateTime.DayOfYear\">\r\n<meta name=\"APIName\" content=\"System.DateTime.DaysInMonth\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Equals\">\r\n<meta name=\"APIName\" content=\"System.DateTime.FromBinary\">\r\n<meta name=\"APIName\" content=\"System.DateTime.FromFileTime\">\r\n<meta name=\"APIName\" content=\"System.DateTime.FromFileTimeUtc\">\r\n<meta name=\"APIName\" content=\"System.DateTime.FromOADate\">\r\n<meta name=\"APIName\" content=\"System.DateTime.GetDateTimeFormats\">\r\n<meta name=\"APIName\" content=\"System.DateTime.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.DateTime.GetTypeCode\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Hour\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IsDaylightSavingTime\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IsLeapYear\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Kind\">\r\n<meta name=\"APIName\" content=\"System.DateTime.MaxValue\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Millisecond\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Minute\">\r\n<meta name=\"APIName\" content=\"System.DateTime.MinValue\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Month\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Now\">\r\n<meta name=\"APIName\" content=\"System.DateTime.op_Addition\">\r\n<meta name=\"APIName\" content=\"System.DateTime.op_op_Addition\">\r\n<meta name=\"APIName\" content=\"System.DateTime.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.DateTime.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.DateTime.op_GreaterThan\">\r\n<meta name=\"APIName\" content=\"System.DateTime.op_op_GreaterThan\">\r\n<meta name=\"APIName\" content=\"System.DateTime.op_GreaterThanOrEqual\">\r\n<meta name=\"APIName\" content=\"System.DateTime.op_op_GreaterThanOrEqual\">\r\n<meta name=\"APIName\" content=\"System.DateTime.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.DateTime.op_op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.DateTime.op_LessThan\">\r\n<meta name=\"APIName\" content=\"System.DateTime.op_op_LessThan\">\r\n<meta name=\"APIName\" content=\"System.DateTime.op_LessThanOrEqual\">\r\n<meta name=\"APIName\" content=\"System.DateTime.op_op_LessThanOrEqual\">\r\n<meta name=\"APIName\" content=\"System.DateTime.op_Subtraction\">\r\n<meta name=\"APIName\" content=\"System.DateTime.op_op_Subtraction\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Parse\">\r\n<meta name=\"APIName\" content=\"System.DateTime.ParseExact\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Second\">\r\n<meta name=\"APIName\" content=\"System.DateTime.SpecifyKind\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Subtract\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IConvertible.ToBoolean\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IConvertible.ToByte\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IConvertible.ToChar\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IConvertible.ToDateTime\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IConvertible.ToDecimal\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IConvertible.ToDouble\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IConvertible.ToInt16\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IConvertible.ToInt32\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IConvertible.ToInt64\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IConvertible.ToSByte\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IConvertible.ToSingle\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IConvertible.ToType\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IConvertible.ToUInt16\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IConvertible.ToUInt32\">\r\n<meta name=\"APIName\" content=\"System.DateTime.IConvertible.ToUInt64\">\r\n<meta name=\"APIName\" content=\"System.DateTime.ISerializable.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Ticks\">\r\n<meta name=\"APIName\" content=\"System.DateTime.TimeOfDay\">\r\n<meta name=\"APIName\" content=\"System.DateTime.ToBinary\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Today\">\r\n<meta name=\"APIName\" content=\"System.DateTime.ToFileTime\">\r\n<meta name=\"APIName\" content=\"System.DateTime.ToFileTimeUtc\">\r\n<meta name=\"APIName\" content=\"System.DateTime.ToLocalTime\">\r\n<meta name=\"APIName\" content=\"System.DateTime.ToLongDateString\">\r\n<meta name=\"APIName\" content=\"System.DateTime.ToLongTimeString\">\r\n<meta name=\"APIName\" content=\"System.DateTime.ToOADate\">\r\n<meta name=\"APIName\" content=\"System.DateTime.ToShortDateString\">\r\n<meta name=\"APIName\" content=\"System.DateTime.ToShortTimeString\">\r\n<meta name=\"APIName\" content=\"System.DateTime.ToString\">\r\n<meta name=\"APIName\" content=\"System.DateTime.ToUniversalTime\">\r\n<meta name=\"APIName\" content=\"System.DateTime.TryParse\">\r\n<meta name=\"APIName\" content=\"System.DateTime.TryParseExact\">\r\n<meta name=\"APIName\" content=\"System.DateTime.UtcNow\">\r\n<meta name=\"APIName\" content=\"System.DateTime.Year\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"a913764a-8f6e-218b-34a2-a556625c80c4\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents an instant in time, typically expressed as a date and time of day.  \n To browse the .NET Framework source code for this type, see the Reference Source.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.DateTime\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.DateTime.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.DateTime.yml","open_to_public_contributors":true,"api_name":["System.DateTime","System.DateTime..ctor","System.DateTime.Add","System.DateTime.AddDays","System.DateTime.AddHours","System.DateTime.AddMilliseconds","System.DateTime.AddMinutes","System.DateTime.AddMonths","System.DateTime.AddSeconds","System.DateTime.AddTicks","System.DateTime.AddYears","System.DateTime.Compare","System.DateTime.CompareTo","System.DateTime.Date","System.DateTime.Day","System.DateTime.DayOfWeek","System.DateTime.DayOfYear","System.DateTime.DaysInMonth","System.DateTime.Equals","System.DateTime.FromBinary","System.DateTime.FromFileTime","System.DateTime.FromFileTimeUtc","System.DateTime.FromOADate","System.DateTime.GetDateTimeFormats","System.DateTime.GetHashCode","System.DateTime.GetTypeCode","System.DateTime.Hour","System.DateTime.IsDaylightSavingTime","System.DateTime.IsLeapYear","System.DateTime.Kind","System.DateTime.MaxValue","System.DateTime.Millisecond","System.DateTime.Minute","System.DateTime.MinValue","System.DateTime.Month","System.DateTime.Now","System.DateTime.op_Addition","System.DateTime.op_op_Addition","System.DateTime.op_Equality","System.DateTime.op_op_Equality","System.DateTime.op_GreaterThan","System.DateTime.op_op_GreaterThan","System.DateTime.op_GreaterThanOrEqual","System.DateTime.op_op_GreaterThanOrEqual","System.DateTime.op_Inequality","System.DateTime.op_op_Inequality","System.DateTime.op_LessThan","System.DateTime.op_op_LessThan","System.DateTime.op_LessThanOrEqual","System.DateTime.op_op_LessThanOrEqual","System.DateTime.op_Subtraction","System.DateTime.op_op_Subtraction","System.DateTime.Parse","System.DateTime.ParseExact","System.DateTime.Second","System.DateTime.SpecifyKind","System.DateTime.Subtract","System.DateTime.IConvertible.ToBoolean","System.DateTime.IConvertible.ToByte","System.DateTime.IConvertible.ToChar","System.DateTime.IConvertible.ToDateTime","System.DateTime.IConvertible.ToDecimal","System.DateTime.IConvertible.ToDouble","System.DateTime.IConvertible.ToInt16","System.DateTime.IConvertible.ToInt32","System.DateTime.IConvertible.ToInt64","System.DateTime.IConvertible.ToSByte","System.DateTime.IConvertible.ToSingle","System.DateTime.IConvertible.ToType","System.DateTime.IConvertible.ToUInt16","System.DateTime.IConvertible.ToUInt32","System.DateTime.IConvertible.ToUInt64","System.DateTime.ISerializable.GetObjectData","System.DateTime.Ticks","System.DateTime.TimeOfDay","System.DateTime.ToBinary","System.DateTime.Today","System.DateTime.ToFileTime","System.DateTime.ToFileTimeUtc","System.DateTime.ToLocalTime","System.DateTime.ToLongDateString","System.DateTime.ToLongTimeString","System.DateTime.ToOADate","System.DateTime.ToShortDateString","System.DateTime.ToShortTimeString","System.DateTime.ToString","System.DateTime.ToUniversalTime","System.DateTime.TryParse","System.DateTime.TryParseExact","System.DateTime.UtcNow","System.DateTime.Year"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.DateTime","System::DateTime","System.DateTime.#ctor","System::DateTime::#ctor","System.DateTime.Add","System::DateTime::Add","System.DateTime.AddDays","System::DateTime::AddDays","System.DateTime.AddHours","System::DateTime::AddHours","System.DateTime.AddMilliseconds","System::DateTime::AddMilliseconds","System.DateTime.AddMinutes","System::DateTime::AddMinutes","System.DateTime.AddMonths","System::DateTime::AddMonths","System.DateTime.AddSeconds","System::DateTime::AddSeconds","System.DateTime.AddTicks","System::DateTime::AddTicks","System.DateTime.AddYears","System::DateTime::AddYears","System.DateTime.Compare","System::DateTime::Compare","System.DateTime.CompareTo","System::DateTime::CompareTo","System.DateTime.Date","System::DateTime::Date","System.DateTime.Day","System::DateTime::Day","System.DateTime.DayOfWeek","System::DateTime::DayOfWeek","System.DateTime.DayOfYear","System::DateTime::DayOfYear","System.DateTime.DaysInMonth","System::DateTime::DaysInMonth","System.DateTime.Equals","System::DateTime::Equals","System.DateTime.FromBinary","System::DateTime::FromBinary","System.DateTime.FromFileTime","System::DateTime::FromFileTime","System.DateTime.FromFileTimeUtc","System::DateTime::FromFileTimeUtc","System.DateTime.FromOADate","System::DateTime::FromOADate","System.DateTime.GetDateTimeFormats","System::DateTime::GetDateTimeFormats","System.DateTime.GetHashCode","System::DateTime::GetHashCode","System.DateTime.GetTypeCode","System::DateTime::GetTypeCode","System.DateTime.Hour","System::DateTime::Hour","System.DateTime.IsDaylightSavingTime","System::DateTime::IsDaylightSavingTime","System.DateTime.IsLeapYear","System::DateTime::IsLeapYear","System.DateTime.Kind","System::DateTime::Kind","System.DateTime.MaxValue","System::DateTime::MaxValue","System.DateTime.Millisecond","System::DateTime::Millisecond","System.DateTime.Minute","System::DateTime::Minute","System.DateTime.MinValue","System::DateTime::MinValue","System.DateTime.Month","System::DateTime::Month","System.DateTime.Now","System::DateTime::Now","System.DateTime.op_Addition","System::DateTime::op_Addition","System.DateTime.op_Equality","System::DateTime::op_Equality","System.DateTime.op_GreaterThan","System::DateTime::op_GreaterThan","System.DateTime.op_GreaterThanOrEqual","System::DateTime::op_GreaterThanOrEqual","System.DateTime.op_Inequality","System::DateTime::op_Inequality","System.DateTime.op_LessThan","System::DateTime::op_LessThan","System.DateTime.op_LessThanOrEqual","System::DateTime::op_LessThanOrEqual","System.DateTime.op_Subtraction","System::DateTime::op_Subtraction","System.DateTime.Parse","System::DateTime::Parse","System.DateTime.ParseExact","System::DateTime::ParseExact","System.DateTime.Second","System::DateTime::Second","System.DateTime.SpecifyKind","System::DateTime::SpecifyKind","System.DateTime.Subtract","System::DateTime::Subtract","System.DateTime.System#IConvertible#ToBoolean","System::DateTime::System#IConvertible#ToBoolean","System.DateTime.System#IConvertible#ToByte","System::DateTime::System#IConvertible#ToByte","System.DateTime.System#IConvertible#ToChar","System::DateTime::System#IConvertible#ToChar","System.DateTime.System#IConvertible#ToDateTime","System::DateTime::System#IConvertible#ToDateTime","System.DateTime.System#IConvertible#ToDecimal","System::DateTime::System#IConvertible#ToDecimal","System.DateTime.System#IConvertible#ToDouble","System::DateTime::System#IConvertible#ToDouble","System.DateTime.System#IConvertible#ToInt16","System::DateTime::System#IConvertible#ToInt16","System.DateTime.System#IConvertible#ToInt32","System::DateTime::System#IConvertible#ToInt32","System.DateTime.System#IConvertible#ToInt64","System::DateTime::System#IConvertible#ToInt64","System.DateTime.System#IConvertible#ToSByte","System::DateTime::System#IConvertible#ToSByte","System.DateTime.System#IConvertible#ToSingle","System::DateTime::System#IConvertible#ToSingle","System.DateTime.System#IConvertible#ToType","System::DateTime::System#IConvertible#ToType","System.DateTime.System#IConvertible#ToUInt16","System::DateTime::System#IConvertible#ToUInt16","System.DateTime.System#IConvertible#ToUInt32","System::DateTime::System#IConvertible#ToUInt32","System.DateTime.System#IConvertible#ToUInt64","System::DateTime::System#IConvertible#ToUInt64","System.DateTime.System#Runtime#Serialization#ISerializable#GetObjectData","System::DateTime::System#Runtime#Serialization#ISerializable#GetObjectData","System.DateTime.Ticks","System::DateTime::Ticks","System.DateTime.TimeOfDay","System::DateTime::TimeOfDay","System.DateTime.ToBinary","System::DateTime::ToBinary","System.DateTime.Today","System::DateTime::Today","System.DateTime.ToFileTime","System::DateTime::ToFileTime","System.DateTime.ToFileTimeUtc","System::DateTime::ToFileTimeUtc","System.DateTime.ToLocalTime","System::DateTime::ToLocalTime","System.DateTime.ToLongDateString","System::DateTime::ToLongDateString","System.DateTime.ToLongTimeString","System::DateTime::ToLongTimeString","System.DateTime.ToOADate","System::DateTime::ToOADate","System.DateTime.ToShortDateString","System::DateTime::ToShortDateString","System.DateTime.ToShortTimeString","System::DateTime::ToShortTimeString","System.DateTime.ToString","System::DateTime::ToString","System.DateTime.ToUniversalTime","System::DateTime::ToUniversalTime","System.DateTime.TryParse","System::DateTime::TryParse","System.DateTime.TryParseExact","System::DateTime::TryParseExact","System.DateTime.UtcNow","System::DateTime::UtcNow","System.DateTime.Year","System::DateTime::Year"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"a913764a-8f6e-218b-34a2-a556625c80c4","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/DateTime.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"DateTime struct | Microsoft Docs","_op_ogTitle":"DateTime struct","description":"Represents an instant in time, typically expressed as a date and time of day.  \n To browse the .NET Framework source code for this type, see the Reference Source.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.DateTime","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.datetime","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.datetime","fileRelativePath":"System.DateTime.html"},"themesRelativePathToOutputRoot":"_themes/"}