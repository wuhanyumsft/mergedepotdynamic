{"content":"    \r\n    <h1 id=\"System_OperatingSystem\">\r\n      <span class=\"lang-csharp\">OperatingSystem</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents information about an operating system, such as the version and platform identifier. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\npublic sealed class OperatingSystem : ICloneable, System.Runtime.Serialization.ISerializable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">OperatingSystem</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The OperatingSystem class contains information about an operating system.  </p>\n<p> For information about the current runtime operating system, retrieve the OperatingSystem object returned by the <a class=\"xref\" href=\"system.environment#System_Environment_OSVersion_\" data-linktype=\"relative-path\">OSVersion</a> property. For a list of Windows operating system versions and their corresponding version numbers returned by the <a class=\"xref\" href=\"system.operatingsystem#System_OperatingSystem_Version_\" data-linktype=\"relative-path\">Version</a> and <a class=\"xref\" href=\"system.operatingsystem#System_OperatingSystem_VersionString_\" data-linktype=\"relative-path\">VersionString</a> properties and the <a class=\"xref\" href=\"system.operatingsystem#System_OperatingSystem_ToString_\" data-linktype=\"relative-path\">ToString</a> method, see <a href=\"https://msdn.microsoft.com/library/windows/desktop/ms724832.aspx\" data-linktype=\"external\">Operating System Version</a> on the Windows Dev Center.  </p>\n<p> By design, the OperatingSystem class is not a general purpose means of describing an operating system, and you cannot derive a more inclusive type from the OperatingSystem class. If you need a type to contain other information about an operating system, create your own type, then include a field of type OperatingSystem and any additional fields, properties, or methods that you require.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_OperatingSystem__ctor_System_PlatformID_System_Version_\" data-linktype=\"self-bookmark\">OperatingSystem(PlatformID,Version)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.operatingsystem\" data-linktype=\"relative-path\">OperatingSystem</a> class, using the specified platform identifier value and version object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_OperatingSystem_Platform\" data-linktype=\"self-bookmark\">Platform</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.platformid\" data-linktype=\"relative-path\">PlatformID</a> enumeration value that identifies the operating system platform.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_OperatingSystem_ServicePack\" data-linktype=\"self-bookmark\">ServicePack</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the service pack version represented by this <a class=\"xref\" href=\"system.operatingsystem\" data-linktype=\"relative-path\">OperatingSystem</a> object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_OperatingSystem_Version\" data-linktype=\"self-bookmark\">Version</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a <a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a> object that identifies the operating system.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_OperatingSystem_VersionString\" data-linktype=\"self-bookmark\">VersionString</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the concatenated string representation of the platform identifier, version, and service pack that are currently installed on the operating system.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_OperatingSystem_Clone\" data-linktype=\"self-bookmark\">Clone()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates an <a class=\"xref\" href=\"system.operatingsystem\" data-linktype=\"relative-path\">OperatingSystem</a> object that is identical to this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_OperatingSystem_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the data necessary to deserialize this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_OperatingSystem_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the value of this <a class=\"xref\" href=\"system.operatingsystem\" data-linktype=\"relative-path\">OperatingSystem</a> object to its equivalent string representation.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_OperatingSystem__ctor_System_PlatformID_System_Version_\">\r\n    \r\n            <a id=\"System_OperatingSystem__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OperatingSystem(PlatformID,Version)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.operatingsystem\" data-linktype=\"relative-path\">OperatingSystem</a> class, using the specified platform identifier value and version object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public OperatingSystem (PlatformID platform, Version version);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>platform</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformid\" data-linktype=\"relative-path\">PlatformID</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.platformid\" data-linktype=\"relative-path\">PlatformID</a> values that indicates the operating system platform.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>version</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a> object that indicates the version of the operating system.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>version</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>platform</code> is not a <a class=\"xref\" href=\"system.platformid\" data-linktype=\"relative-path\">PlatformID</a> enumeration value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_OperatingSystem_Platform\">\r\n    \r\n            <a id=\"System_OperatingSystem_Platform_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Platform</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.platformid\" data-linktype=\"relative-path\">PlatformID</a> enumeration value that identifies the operating system platform.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public PlatformID Platform { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.platformid\" data-linktype=\"relative-path\">PlatformID</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.platformid\" data-linktype=\"relative-path\">PlatformID</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates several <a class=\"xref\" href=\"system.operatingsystem\" data-linktype=\"relative-path\">OperatingSystem</a> objects and displays the Platform property for each.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.OperatingSystem.Platform_Version#1\">// Example for the OperatingSystem.Platform and \n// OperatingSystem.Version properties.\nusing namespace System;\n\n// Create an OperatingSystem object and display the Platform\n// and Version properties.\nvoid BuildOSObj( PlatformID pID, Version^ ver )\n{\n   OperatingSystem^ opSys = gcnew OperatingSystem( pID,ver );\n   PlatformID platform = opSys-&gt;Platform;\n   Version^ version = opSys-&gt;Version;\n   Console::WriteLine( &quot;   Platform: {0,-15} Version: {1}&quot;, platform, version );\n}\n\nvoid BuildOperatingSystemObjects()\n{\n   \n   // The Version object does not need to correspond to an \n   // actual OS version.\n   Version^ verNull = gcnew Version;\n   Version^ verString = gcnew Version( &quot;3.5.8.13&quot; );\n   Version^ verMajMin = gcnew Version( 6,10 );\n   Version^ verMMBld = gcnew Version( 5,25,5025 );\n   Version^ verMMBVer = gcnew Version( 5,6,7,8 );\n   \n   // All PlatformID members are shown here.\n   BuildOSObj( PlatformID::Win32NT, verNull );\n   BuildOSObj( PlatformID::Win32S, verString );\n   BuildOSObj( PlatformID::Win32Windows, verMajMin );\n   BuildOSObj( PlatformID::WinCE, verMMBld );\n   BuildOSObj( PlatformID::Win32NT, verMMBVer );\n}\n\nint main()\n{\n   Console::WriteLine( &quot;This example of OperatingSystem::Platform &quot;\n   &quot;and OperatingSystem::Version <br>&quot;\n   &quot;generates the following output.<br>&quot; );\n   Console::WriteLine( &quot;Create several OperatingSystem objects &quot;\n   &quot;and display their properties:<br>&quot; );\n   BuildOperatingSystemObjects();\n   Console::WriteLine( &quot;<br>The operating system of the host computer is:<br>&quot; );\n   BuildOSObj( Environment::OSVersion-&gt;Platform, Environment::OSVersion-&gt;Version );\n}\n\n/*\nThis example of OperatingSystem::Platform and OperatingSystem::Version\ngenerates the following output.\n\nCreate several OperatingSystem objects and display their properties:\n\n   Platform: Win32NT         Version: 0.0\n   Platform: Win32S          Version: 3.5.8.13\n   Platform: Win32Windows    Version: 6.10\n   Platform: WinCE           Version: 5.25.5025\n   Platform: Win32NT         Version: 5.6.7.8\n\nThe operating system of the host computer is:\n\n   Platform: Win32NT         Version: 5.1.2600.0\n*/\n</code></pre><pre><code class=\"lang-cs\" name=\"System.OperatingSystem.Platform_Version#1\">// Example for the OperatingSystem.Platform and \n// OperatingSystem.Version properties.\nusing System;\n\nclass PlatformVersionDemo\n{\n    // Create an OperatingSystem object and display the Platform\n    // and Version properties.\n    static void BuildOSObj( PlatformID pID, Version ver )\n    {\n        OperatingSystem opSys   = new OperatingSystem( pID, ver );\n        PlatformID platform     = opSys.Platform;\n        Version version         = opSys.Version;\n\n        Console.WriteLine( &quot;   Platform: {0,-15} Version: {1}&quot;, \n            platform, version );\n    } \n        \n    static void BuildOperatingSystemObjects( )\n    { \n        // The Version object does not need to correspond to an \n        // actual OS version.\n        Version verNull     = new Version( );\n        Version verString   = new Version( &quot;3.5.8.13&quot; );\n        Version verMajMin   = new Version( 6, 10 );\n        Version verMMBld    = new Version( 5, 25, 5025 );\n        Version verMMBVer   = new Version( 5, 6, 7, 8 );\n            \n        // All PlatformID members are shown here.\n        BuildOSObj( PlatformID.Win32NT, verNull );\n        BuildOSObj( PlatformID.Win32S, verString );\n        BuildOSObj( PlatformID.Win32Windows, verMajMin );\n        BuildOSObj( PlatformID.WinCE, verMMBld );\n        BuildOSObj( PlatformID.Win32NT, verMMBVer );\n    } \n        \n    static void Main( )\n    {\n        Console.WriteLine(\n            &quot;This example of OperatingSystem.Platform &quot; +\n            &quot;and OperatingSystem.Version <br>&quot; +\n            &quot;generates the following output.<br>&quot; );\n        Console.WriteLine(\n            &quot;Create several OperatingSystem objects &quot; +\n            &quot;and display their properties:<br>&quot; );\n\n        BuildOperatingSystemObjects( );\n            \n        Console.WriteLine(\n            &quot;<br>The operating system of the host computer is:<br>&quot; );\n\n        BuildOSObj(\n            Environment.OSVersion.Platform, \n            Environment.OSVersion.Version );\n    } \n}\n\n/*\nThis example of OperatingSystem.Platform and OperatingSystem.Version\ngenerates the following output.\n\nCreate several OperatingSystem objects and display their properties:\n\nPlatform: Win32NT         Version: 0.0\nPlatform: Win32S          Version: 3.5.8.13\nPlatform: Win32Windows    Version: 6.10\nPlatform: WinCE           Version: 5.25.5025\nPlatform: Win32NT         Version: 5.6.7.8\n\nThe operating system of the host computer is:\n\nPlatform: Win32NT         Version: 5.1.2600.0\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.OperatingSystem.Platform_Version#1\">&#39; Example for the OperatingSystem.Platform and \n&#39; OperatingSystem.Version properties.\nImports System\nImports Microsoft.VisualBasic\n\nModule PlatformVersionDemo\n    \n    &#39; Create an OperatingSystem object, and display the Platform\n    &#39; and Version properties.\n    Sub BuildOSObj( pID As PlatformID, ver As Version )\n\n        Dim opSys       As New OperatingSystem( pID, ver )\n        Dim platform    As PlatformID = opSys.Platform\n        Dim version     As Version = opSys.Version\n\n        Console.WriteLine( &quot;   Platform: {0,-15} Version: {1}&quot;, _\n            platform, version )\n    End Sub \n        \n    Sub BuildOperatingSystemObjects( )\n\n        &#39; The Version object does not need to correspond to an \n        &#39; actual OS version.\n        Dim verNull     As New Version( )\n        Dim verString   As New Version( &quot;3.5.8.13&quot; )\n        Dim verMajMin   As New Version( 6, 10 )\n        Dim verMMBld    As New Version( 5, 25, 5025 )\n        Dim verMMBVer   As New Version( 5, 6, 7, 8 )\n            \n        &#39; All PlatformID members are shown here.\n        BuildOSObj( PlatformID.Win32NT, verNull )\n        BuildOSObj( PlatformID.Win32S, verString )\n        BuildOSObj( PlatformID.Win32Windows, verMajMin )\n        BuildOSObj( PlatformID.WinCE, verMMBld )\n        BuildOSObj( PlatformID.Win32NT, verMMBVer )\n    End Sub \n        \n    Sub Main( )\n        Console.WriteLine( _\n            &quot;This example of OperatingSystem.Platform &quot; &amp; _\n            &quot;and OperatingSystem.Version &quot; &amp; vbCrLf &amp; _\n            &quot;generates the following output.&quot; &amp; vbCrLf )\n        Console.WriteLine( _\n            &quot;Create several OperatingSystem objects &quot; &amp; _\n            &quot;and display their properties:&quot; &amp; vbCrLf )\n\n        BuildOperatingSystemObjects( )\n            \n        Console.WriteLine(vbCrLf &amp; _\n            &quot;The operating system of the host computer is: &quot; &amp; _\n            vbCrLf )\n\n        BuildOSObj( _\n            Environment.OSVersion.Platform, _\n            Environment.OSVersion.Version )\n    End Sub \nEnd Module \n\n&#39; This example of OperatingSystem.Platform and OperatingSystem.Version\n&#39; generates the following output.\n&#39; \n&#39; Create several OperatingSystem objects and display their properties:\n&#39; \n&#39;    Platform: Win32NT         Version: 0.0\n&#39;    Platform: Win32S          Version: 3.5.8.13\n&#39;    Platform: Win32Windows    Version: 6.10\n&#39;    Platform: WinCE           Version: 5.25.5025\n&#39;    Platform: Win32NT         Version: 5.6.7.8\n&#39; \n&#39; The operating system of the host computer is:\n&#39; \n&#39;    Platform: Win32NT         Version: 5.1.2600.0\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_OperatingSystem_ServicePack\">\r\n    \r\n            <a id=\"System_OperatingSystem_ServicePack_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ServicePack</div>        \r\n          </div>\r\n    \r\n            <p>Gets the service pack version represented by this <a class=\"xref\" href=\"system.operatingsystem\" data-linktype=\"relative-path\">OperatingSystem</a> object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string ServicePack { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The service pack version, if service packs are supported and at least one is installed; otherwise, an empty string (&quot;&quot;).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A service pack is used to distribute software updates for the operating system on which it is installed. However, not every operating system uses service packs.  </p>\n<p> The service pack version, if available, is already correctly formatted for display.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the ServicePack property.  </p>\n<pre><code class=\"lang-cs\" name=\"OperatingSystem.ServicePack#1\">// This example demonstrates the OperatingSystem.ServicePack property.\nusing System;\n\nclass Sample \n{\n    public static void Main() \n    {\n    OperatingSystem os = Environment.OSVersion;\n    String sp = os.ServicePack;\n    Console.WriteLine(&quot;Service pack version = \\&quot;{0}\\&quot;&quot;, sp);\n    }\n}\n/*\nThis example produces the following results:\n\nService pack version = &quot;Service Pack 1&quot;\n\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"OperatingSystem.ServicePack#1\">&#39; This example demonstrates the OperatingSystem.ServicePack property.\nImports System\n\nClass Sample\n   Public Shared Sub Main()\n      Dim os As OperatingSystem = Environment.OSVersion\n      Console.WriteLine(&quot;Service pack version = &quot;&quot;{0}&quot;&quot;&quot;, os.ServicePack)\n   End Sub &#39;Main\nEnd Class &#39;Sample\n&#39;\n&#39;This example produces the following results:\n&#39;\n&#39;Service pack version = &quot;Service Pack 1&quot;\n&#39;\n</code></pre><pre><code class=\"lang-cpp\" name=\"OperatingSystem.ServicePack#1\">// This example demonstrates the OperatingSystem.ServicePack property.\nusing namespace System;\nint main()\n{\n   OperatingSystem^ os = Environment::OSVersion;\n   String^ sp = os-&gt;ServicePack;\n   Console::WriteLine( &quot;Service pack version = \\&quot;{0}\\&quot;&quot;, sp );\n}\n\n/*\nThis example produces the following results:\n\nService pack version = &quot;Service Pack 1&quot;\n\n*/\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_OperatingSystem_Version\">\r\n    \r\n            <a id=\"System_OperatingSystem_Version_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Version</div>        \r\n          </div>\r\n    \r\n            <p>Gets a <a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a> object that identifies the operating system.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Version Version { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.version\" data-linktype=\"relative-path\">Version</a> object that describes the major version, minor version, build, and revision numbers for the operating system.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See <a href=\"http://msdn.microsoft.com/library/windows/desktop/ms724832.aspx\" data-linktype=\"external\">Operating System Version</a> on the Windows Dev Center for a list of Windows operating system versions and their corresponding version numbers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example creates several <a class=\"xref\" href=\"system.operatingsystem\" data-linktype=\"relative-path\">OperatingSystem</a> objects and displays the Version property for each.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.OperatingSystem.Platform_Version#1\">// Example for the OperatingSystem.Platform and \n// OperatingSystem.Version properties.\nusing namespace System;\n\n// Create an OperatingSystem object and display the Platform\n// and Version properties.\nvoid BuildOSObj( PlatformID pID, Version^ ver )\n{\n   OperatingSystem^ opSys = gcnew OperatingSystem( pID,ver );\n   PlatformID platform = opSys-&gt;Platform;\n   Version^ version = opSys-&gt;Version;\n   Console::WriteLine( &quot;   Platform: {0,-15} Version: {1}&quot;, platform, version );\n}\n\nvoid BuildOperatingSystemObjects()\n{\n   \n   // The Version object does not need to correspond to an \n   // actual OS version.\n   Version^ verNull = gcnew Version;\n   Version^ verString = gcnew Version( &quot;3.5.8.13&quot; );\n   Version^ verMajMin = gcnew Version( 6,10 );\n   Version^ verMMBld = gcnew Version( 5,25,5025 );\n   Version^ verMMBVer = gcnew Version( 5,6,7,8 );\n   \n   // All PlatformID members are shown here.\n   BuildOSObj( PlatformID::Win32NT, verNull );\n   BuildOSObj( PlatformID::Win32S, verString );\n   BuildOSObj( PlatformID::Win32Windows, verMajMin );\n   BuildOSObj( PlatformID::WinCE, verMMBld );\n   BuildOSObj( PlatformID::Win32NT, verMMBVer );\n}\n\nint main()\n{\n   Console::WriteLine( &quot;This example of OperatingSystem::Platform &quot;\n   &quot;and OperatingSystem::Version <br>&quot;\n   &quot;generates the following output.<br>&quot; );\n   Console::WriteLine( &quot;Create several OperatingSystem objects &quot;\n   &quot;and display their properties:<br>&quot; );\n   BuildOperatingSystemObjects();\n   Console::WriteLine( &quot;<br>The operating system of the host computer is:<br>&quot; );\n   BuildOSObj( Environment::OSVersion-&gt;Platform, Environment::OSVersion-&gt;Version );\n}\n\n/*\nThis example of OperatingSystem::Platform and OperatingSystem::Version\ngenerates the following output.\n\nCreate several OperatingSystem objects and display their properties:\n\n   Platform: Win32NT         Version: 0.0\n   Platform: Win32S          Version: 3.5.8.13\n   Platform: Win32Windows    Version: 6.10\n   Platform: WinCE           Version: 5.25.5025\n   Platform: Win32NT         Version: 5.6.7.8\n\nThe operating system of the host computer is:\n\n   Platform: Win32NT         Version: 5.1.2600.0\n*/\n</code></pre><pre><code class=\"lang-cs\" name=\"System.OperatingSystem.Platform_Version#1\">// Example for the OperatingSystem.Platform and \n// OperatingSystem.Version properties.\nusing System;\n\nclass PlatformVersionDemo\n{\n    // Create an OperatingSystem object and display the Platform\n    // and Version properties.\n    static void BuildOSObj( PlatformID pID, Version ver )\n    {\n        OperatingSystem opSys   = new OperatingSystem( pID, ver );\n        PlatformID platform     = opSys.Platform;\n        Version version         = opSys.Version;\n\n        Console.WriteLine( &quot;   Platform: {0,-15} Version: {1}&quot;, \n            platform, version );\n    } \n        \n    static void BuildOperatingSystemObjects( )\n    { \n        // The Version object does not need to correspond to an \n        // actual OS version.\n        Version verNull     = new Version( );\n        Version verString   = new Version( &quot;3.5.8.13&quot; );\n        Version verMajMin   = new Version( 6, 10 );\n        Version verMMBld    = new Version( 5, 25, 5025 );\n        Version verMMBVer   = new Version( 5, 6, 7, 8 );\n            \n        // All PlatformID members are shown here.\n        BuildOSObj( PlatformID.Win32NT, verNull );\n        BuildOSObj( PlatformID.Win32S, verString );\n        BuildOSObj( PlatformID.Win32Windows, verMajMin );\n        BuildOSObj( PlatformID.WinCE, verMMBld );\n        BuildOSObj( PlatformID.Win32NT, verMMBVer );\n    } \n        \n    static void Main( )\n    {\n        Console.WriteLine(\n            &quot;This example of OperatingSystem.Platform &quot; +\n            &quot;and OperatingSystem.Version <br>&quot; +\n            &quot;generates the following output.<br>&quot; );\n        Console.WriteLine(\n            &quot;Create several OperatingSystem objects &quot; +\n            &quot;and display their properties:<br>&quot; );\n\n        BuildOperatingSystemObjects( );\n            \n        Console.WriteLine(\n            &quot;<br>The operating system of the host computer is:<br>&quot; );\n\n        BuildOSObj(\n            Environment.OSVersion.Platform, \n            Environment.OSVersion.Version );\n    } \n}\n\n/*\nThis example of OperatingSystem.Platform and OperatingSystem.Version\ngenerates the following output.\n\nCreate several OperatingSystem objects and display their properties:\n\nPlatform: Win32NT         Version: 0.0\nPlatform: Win32S          Version: 3.5.8.13\nPlatform: Win32Windows    Version: 6.10\nPlatform: WinCE           Version: 5.25.5025\nPlatform: Win32NT         Version: 5.6.7.8\n\nThe operating system of the host computer is:\n\nPlatform: Win32NT         Version: 5.1.2600.0\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.OperatingSystem.Platform_Version#1\">&#39; Example for the OperatingSystem.Platform and \n&#39; OperatingSystem.Version properties.\nImports System\nImports Microsoft.VisualBasic\n\nModule PlatformVersionDemo\n    \n    &#39; Create an OperatingSystem object, and display the Platform\n    &#39; and Version properties.\n    Sub BuildOSObj( pID As PlatformID, ver As Version )\n\n        Dim opSys       As New OperatingSystem( pID, ver )\n        Dim platform    As PlatformID = opSys.Platform\n        Dim version     As Version = opSys.Version\n\n        Console.WriteLine( &quot;   Platform: {0,-15} Version: {1}&quot;, _\n            platform, version )\n    End Sub \n        \n    Sub BuildOperatingSystemObjects( )\n\n        &#39; The Version object does not need to correspond to an \n        &#39; actual OS version.\n        Dim verNull     As New Version( )\n        Dim verString   As New Version( &quot;3.5.8.13&quot; )\n        Dim verMajMin   As New Version( 6, 10 )\n        Dim verMMBld    As New Version( 5, 25, 5025 )\n        Dim verMMBVer   As New Version( 5, 6, 7, 8 )\n            \n        &#39; All PlatformID members are shown here.\n        BuildOSObj( PlatformID.Win32NT, verNull )\n        BuildOSObj( PlatformID.Win32S, verString )\n        BuildOSObj( PlatformID.Win32Windows, verMajMin )\n        BuildOSObj( PlatformID.WinCE, verMMBld )\n        BuildOSObj( PlatformID.Win32NT, verMMBVer )\n    End Sub \n        \n    Sub Main( )\n        Console.WriteLine( _\n            &quot;This example of OperatingSystem.Platform &quot; &amp; _\n            &quot;and OperatingSystem.Version &quot; &amp; vbCrLf &amp; _\n            &quot;generates the following output.&quot; &amp; vbCrLf )\n        Console.WriteLine( _\n            &quot;Create several OperatingSystem objects &quot; &amp; _\n            &quot;and display their properties:&quot; &amp; vbCrLf )\n\n        BuildOperatingSystemObjects( )\n            \n        Console.WriteLine(vbCrLf &amp; _\n            &quot;The operating system of the host computer is: &quot; &amp; _\n            vbCrLf )\n\n        BuildOSObj( _\n            Environment.OSVersion.Platform, _\n            Environment.OSVersion.Version )\n    End Sub \nEnd Module \n\n&#39; This example of OperatingSystem.Platform and OperatingSystem.Version\n&#39; generates the following output.\n&#39; \n&#39; Create several OperatingSystem objects and display their properties:\n&#39; \n&#39;    Platform: Win32NT         Version: 0.0\n&#39;    Platform: Win32S          Version: 3.5.8.13\n&#39;    Platform: Win32Windows    Version: 6.10\n&#39;    Platform: WinCE           Version: 5.25.5025\n&#39;    Platform: Win32NT         Version: 5.6.7.8\n&#39; \n&#39; The operating system of the host computer is:\n&#39; \n&#39;    Platform: Win32NT         Version: 5.1.2600.0\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_OperatingSystem_VersionString\">\r\n    \r\n            <a id=\"System_OperatingSystem_VersionString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">VersionString</div>        \r\n          </div>\r\n    \r\n            <p>Gets the concatenated string representation of the platform identifier, version, and service pack that are currently installed on the operating system.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string VersionString { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The string representation of the values returned by the <span class=\"xref\">stem.OperatingSystem.Platform*</span>, <span class=\"xref\">stem.OperatingSystem.Version*</span>, and <span class=\"xref\">stem.OperatingSystem.ServicePack*</span> properties.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the value returned by VersionString is the same as the value returned by the <a class=\"xref\" href=\"system.operatingsystem#System_OperatingSystem_ToString_\" data-linktype=\"relative-path\">ToString</a> method. However, an implementation of the .NET Framework for a different platform might return a more appropriate string for that platform.  </p>\n<p> See <a href=\"http://msdn.microsoft.com/library/windows/desktop/ms724832.aspx\" data-linktype=\"external\">Operating System Version</a> on the Windows Dev Center for a list of Windows operating system versions and their corresponding version numbers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example demonstrates the VersionString property.  </p>\n<pre><code class=\"lang-cpp\" name=\"OperatingSystem.VersionString#1\">// This example demonstrates the VersionString property.\nusing namespace System;\nint main()\n{\n   OperatingSystem^ os = Environment::OSVersion;\n   \n   // Display the value of OperatingSystem.VersionString. By default, this is\n   // the same value as OperatingSystem.ToString.\n   Console::WriteLine( L&quot;This operating system is {0}&quot;, os-&gt;VersionString );\n   return 0;\n}\n\n/*\nThis example produces the following results:\n\nThis operating system is Microsoft Windows NT 5.1.2600.0 Service Pack 1\n*/\n</code></pre><pre><code class=\"lang-cs\" name=\"OperatingSystem.VersionString#1\">// This example demonstrates the VersionString property.\nusing System;\n\nclass Sample \n{\n    public static void Main() \n    {\n    OperatingSystem os = Environment.OSVersion;\n// Display the value of OperatingSystem.VersionString. By default, this is\n// the same value as OperatingSystem.ToString.\n    Console.WriteLine(&quot;This operating system is {0}&quot;, os.VersionString);\n    }\n}\n/*\nThis example produces the following results:\n\nThis operating system is Microsoft Windows NT 5.1.2600.0 Service Pack 1\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"OperatingSystem.VersionString#1\">&#39; This example demonstrates the VersionString property.\nImports System\n\nClass Sample\n   Public Shared Sub Main()\n      Dim os As OperatingSystem = Environment.OSVersion\n\n&#39; Display the value of OperatingSystem.VersionString. By default, this is\n&#39; the same value as OperatingSystem.ToString.\n\n      Console.WriteLine(&quot;This operating system is {0}&quot;, os.VersionString)\n\n   End Sub &#39;Main\nEnd Class &#39;Sample\n&#39;\n&#39;This example produces the following results:\n&#39;\n&#39;This operating system is Microsoft Windows NT 5.1.2600.0 Service Pack 1\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_OperatingSystem_Clone\">\r\n    \r\n            <a id=\"System_OperatingSystem_Clone_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Clone()</div>        \r\n          </div>\r\n    \r\n            <p>Creates an <a class=\"xref\" href=\"system.operatingsystem\" data-linktype=\"relative-path\">OperatingSystem</a> object that is identical to this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public object Clone ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.operatingsystem\" data-linktype=\"relative-path\">OperatingSystem</a> object that is a copy of this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of the Clone method to make a copy of an <a class=\"xref\" href=\"system.operatingsystem\" data-linktype=\"relative-path\">OperatingSystem</a> object. The clone is compared with the original object to show that they are not the same object.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.OperatingSystem.Clone#1\">// Example for the OperatingSystem::Clone method.\nusing namespace System;\n\n// Copy, clone, and duplicate an OperatingSystem object.\nvoid CopyOperatingSystemObjects()\n{\n   \n   // The Version object does not need to correspond to an \n   // actual OS version.\n   Version^ verMMBVer = gcnew Version( 5,6,7,8 );\n   OperatingSystem^ opCreate1 = gcnew OperatingSystem( PlatformID::Win32NT,verMMBVer );\n   \n   // Create another OperatingSystem object with the same \n   // parameters as opCreate1.\n   OperatingSystem^ opCreate2 = gcnew OperatingSystem( PlatformID::Win32NT,verMMBVer );\n   \n   // Clone opCreate1 and copy the opCreate1 reference.\n   OperatingSystem^ opClone = safe_cast&lt;OperatingSystem^&gt;(opCreate1-&gt;Clone());\n   OperatingSystem^ opCopy = opCreate1;\n   \n   // Compare the various objects for equality.\n   Console::WriteLine( &quot;{0,-50}{1}&quot;, &quot;Is the second object the same as the original?&quot;, opCreate1-&gt;Equals( opCreate2 ) );\n   Console::WriteLine( &quot;{0,-50}{1}&quot;, &quot;Is the object clone the same as the original?&quot;, opCreate1-&gt;Equals( opClone ) );\n   Console::WriteLine( &quot;{0,-50}{1}&quot;, &quot;Is the copied object the same as the original?&quot;, opCreate1-&gt;Equals( opCopy ) );\n}\n\nint main()\n{\n   Console::WriteLine( &quot;This example of OperatingSystem::Clone( ) &quot;\n   &quot;generates the following output.<br>&quot; );\n   Console::WriteLine( &quot;Create an OperatingSystem object, and then &quot;\n   &quot;create another object with the <br>&quot;\n   &quot;same parameters. Clone and copy the original &quot;\n   &quot;object, and then compare <br>&quot;\n   &quot;each object with the original &quot;\n   &quot;using the Equals( ) method. Equals( ) <br>&quot;\n   &quot;returns true only when both &quot;\n   &quot;references refer to the same object.<br>&quot; );\n   CopyOperatingSystemObjects();\n}\n\n/*\nThis example of OperatingSystem::Clone( ) generates the following output.\n\nCreate an OperatingSystem object, and then create another object with the\nsame parameters. Clone and copy the original object, and then compare\neach object with the original using the Equals( ) method. Equals( )\nreturns true only when both references refer to the same object.\n\nIs the second object the same as the original?    False\nIs the object clone the same as the original?     False\nIs the copied object the same as the original?    True\n*/\n</code></pre><pre><code class=\"lang-cs\" name=\"System.OperatingSystem.Clone#1\">// Example for the OperatingSystem.Clone method.\nusing System;\n\nclass CloneCompareDemo\n{\n    // Copy, clone, and duplicate an OperatingSystem object.\n    static void CopyOperatingSystemObjects( )\n    {\n        // The Version object does not need to correspond to an \n        // actual OS version.\n        Version verMMBVer = new Version( 5, 6, 7, 8 );\n            \n        OperatingSystem opCreate1 = new \n            OperatingSystem( PlatformID.Win32NT, verMMBVer );\n            \n        // Create another OperatingSystem object with the same \n        // parameters as opCreate1.\n        OperatingSystem opCreate2 = new \n            OperatingSystem( PlatformID.Win32NT, verMMBVer );\n            \n        // Clone opCreate1 and copy the opCreate1 reference.\n        OperatingSystem opClone = \n            (OperatingSystem)opCreate1.Clone( );\n        OperatingSystem opCopy = opCreate1;\n\n        // Compare the various objects for equality.\n        Console.WriteLine( &quot;{0,-50}{1}&quot;, \n            &quot;Is the second object the same as the original?&quot;, \n            opCreate1.Equals( opCreate2 ) );\n        Console.WriteLine( &quot;{0,-50}{1}&quot;, \n            &quot;Is the object clone the same as the original?&quot;, \n            opCreate1.Equals( opClone ) );\n        Console.WriteLine( &quot;{0,-50}{1}&quot;, \n            &quot;Is the copied object the same as the original?&quot;, \n            opCreate1.Equals( opCopy ) );\n    } \n        \n    static void Main( )\n    {\n        Console.WriteLine(\n            &quot;This example of OperatingSystem.Clone( ) &quot; +\n            &quot;generates the following output.<br>&quot; );\n        Console.WriteLine(\n            &quot;Create an OperatingSystem object, and then &quot; +\n            &quot;create another object with the <br>&quot; +\n            &quot;same parameters. Clone and copy the original &quot; +\n            &quot;object, and then compare <br>&quot; +\n            &quot;each object with the original &quot; +\n            &quot;using the Equals( ) method. Equals( ) <br>&quot; +\n            &quot;returns true only when both &quot; +\n            &quot;references refer to the same object.<br>&quot; );\n            \n        CopyOperatingSystemObjects( );\n    } \n} \n\n/*\nThis example of OperatingSystem.Clone( ) generates the following output.\n\nCreate an OperatingSystem object, and then create another object with the\nsame parameters. Clone and copy the original object, and then compare\neach object with the original using the Equals( ) method. Equals( )\nreturns true only when both references refer to the same object.\n\nIs the second object the same as the original?    False\nIs the object clone the same as the original?     False\nIs the copied object the same as the original?    True\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.OperatingSystem.Clone#1\">&#39; Example for the OperatingSystem.Clone method.\nImports System\nImports Microsoft.VisualBasic\n\nModule CloneCompareDemo\n    \n    &#39; Copy, clone, and duplicate an OperatingSystem object.\n    Sub CopyOperatingSystemObjects( )\n\n        &#39; The Version object does not need to correspond to an \n        &#39; actual OS version.\n        Dim verMMBVer As New Version( 5, 6, 7, 8 )\n            \n        Dim opCreate1 As New _\n            OperatingSystem( PlatformID.Win32NT, verMMBVer )\n            \n        &#39; Create another OperatingSystem object with the same \n        &#39; parameters as opCreate1.\n        Dim opCreate2 As New _\n            OperatingSystem( PlatformID.Win32NT, verMMBVer )\n            \n        &#39; Clone opCreate1 and copy the opCreate1 reference.\n        Dim opClone As OperatingSystem = _\n            CType( opCreate1.Clone( ), OperatingSystem )\n        Dim opCopy As OperatingSystem = opCreate1\n\n        &#39; Compare the various objects for equality.\n        Console.WriteLine( &quot;{0,-50}{1}&quot;, _\n            &quot;Is the second object the same as the original?&quot;, _\n            opCreate1.Equals( opCreate2 ) )\n        Console.WriteLine( &quot;{0,-50}{1}&quot;, _\n            &quot;Is the object clone the same as the original?&quot;, _\n            opCreate1.Equals( opClone ) )\n        Console.WriteLine( &quot;{0,-50}{1}&quot;, _\n            &quot;Is the copied object the same as the original?&quot;, _\n            opCreate1.Equals( opCopy ) )\n    End Sub \n        \n    Sub Main( )\n\n        Console.WriteLine( _\n            &quot;This example of OperatingSystem.Clone( ) &quot; &amp; _\n            &quot;generates the following output.&quot; &amp; vbCrLf )\n        Console.WriteLine( _\n            &quot;Create an OperatingSystem object, and then &quot; &amp; _\n            &quot;create another object with the &quot; &amp; vbCrLf &amp; _\n            &quot;same parameters. Clone and copy the &quot; &amp; _\n            &quot;original object, and then compare &quot; &amp; vbCrLf &amp; _\n            &quot;each object with the original using the &quot; &amp; _\n            &quot;Equals( ) method. Equals( ) &quot; &amp; vbCrLf &amp; _\n            &quot;returns true only when both &quot; &amp; _\n            &quot;references refer to the same object.&quot; &amp; vbCrLf)\n            \n        CopyOperatingSystemObjects( )\n\n    End Sub \nEnd Module \n\n&#39; This example of OperatingSystem.Clone( ) generates the following output.\n&#39; \n&#39; Create an OperatingSystem object, and then create another object with the\n&#39; same parameters. Clone and copy the original object, and then compare\n&#39; each object with the original using the Equals( ) method. Equals( )\n&#39; returns true only when both references refer to the same object.\n&#39; \n&#39; Is the second object the same as the original?    False\n&#39; Is the object clone the same as the original?     False\n&#39; Is the copied object the same as the original?    True\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_OperatingSystem_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_OperatingSystem_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Populates a <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object with the data necessary to deserialize this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>info</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object to populate with serialization information.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>context</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The place to store and retrieve serialized data. Reserved for future use.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>info</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <code>context</code> parameter is reserved for future use; it is currently not implemented in the GetObjectData method.  </p>\n<p> For more information, see the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo#System_Runtime_Serialization_SerializationInfo_AddValue_\" data-linktype=\"relative-path\">AddValue</a> method.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_OperatingSystem_ToString\">\r\n    \r\n            <a id=\"System_OperatingSystem_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Converts the value of this <a class=\"xref\" href=\"system.operatingsystem\" data-linktype=\"relative-path\">OperatingSystem</a> object to its equivalent string representation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The string representation of the values returned by the <span class=\"xref\">stem.OperatingSystem.Platform*</span>, <span class=\"xref\">stem.OperatingSystem.Version*</span>, and <span class=\"xref\">stem.OperatingSystem.ServicePack*</span> properties.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>See <a href=\"http://msdn.microsoft.com/library/windows/desktop/ms724832.aspx\" data-linktype=\"external\">Operating System Version</a> on the Windows Dev Center for a list of Windows operating system versions and their corresponding version numbers.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example illustrates the use of the ToString method to display <a class=\"xref\" href=\"system.operatingsystem\" data-linktype=\"relative-path\">OperatingSystem</a> objects.  </p>\n<pre><code class=\"lang-cs\" name=\"System.OperatingSystem.Ctor_ToString#1\">// Example for the OperatingSystem constructor and the \n// OperatingSystem.ToString( ) method.\nusing System;\n\nclass OpSysConstructDemo \n{\n    // Create and display an OperatingSystem object.\n    static void BuildOSObj( PlatformID pID, Version ver )\n    {\n        OperatingSystem os = new OperatingSystem( pID, ver );\n\n        Console.WriteLine( &quot;   {0}&quot;, os.ToString( ) );\n    }\n\n    static void BuildOperatingSystemObjects( )\n    {\n        // The Version object does not need to correspond to an \n        // actual OS version.\n        Version verNull     = new Version( );\n        Version verMajMin   = new Version( 3, 11 );\n        Version verMMBld    = new Version( 5, 25, 625 );\n        Version verMMBVer   = new Version( 5, 6, 7, 8 );\n        Version verString   = new Version( &quot;3.5.8.13&quot; );\n\n        // All PlatformID members are shown here.\n        BuildOSObj( PlatformID.Win32NT, verNull );\n        BuildOSObj( PlatformID.Win32S, verMajMin );\n        BuildOSObj( PlatformID.Win32Windows, verMMBld );\n        BuildOSObj( PlatformID.WinCE, verMMBVer );\n        BuildOSObj( PlatformID.Win32NT, verString );\n    }\n\n    public static void Main( ) \n    {\n        Console.WriteLine( \n            &quot;This example of the OperatingSystem constructor &quot; +\n            &quot;and <br>OperatingSystem.ToString( ) &quot; +\n            &quot;generates the following output.<br>&quot; );\n        Console.WriteLine( \n            &quot;Create and display several different &quot; +\n            &quot;OperatingSystem objects:<br>&quot; );\n\n        BuildOperatingSystemObjects( );\n\n        Console.WriteLine( \n            &quot;<br>The OS version of the host computer is:<br><br>   {0}&quot;, \n            Environment.OSVersion.ToString( ) );\n    }\n}\n\n/*\nThis example of the OperatingSystem constructor and\nOperatingSystem.ToString( ) generates the following output.\n\nCreate and display several different OperatingSystem objects:\n\n   Microsoft Windows NT 0.0\n   Microsoft Win32S 3.11\n   Microsoft Windows 98 5.25.625\n   Microsoft Windows CE 5.6.7.8\n   Microsoft Windows NT 3.5.8.13\n\nThe OS version of the host computer is:\n\n   Microsoft Windows NT 5.1.2600.0\n*/\n</code></pre><pre><code class=\"lang-cpp\" name=\"System.OperatingSystem.Ctor_ToString#1\">// Example for the OperatingSystem constructor and the \n// OperatingSystem::ToString( ) method.\nusing namespace System;\n\n// Create and display an OperatingSystem object.\nvoid BuildOSObj( PlatformID pID, Version^ ver )\n{\n   OperatingSystem^ os = gcnew OperatingSystem( pID,ver );\n   Console::WriteLine( &quot;   {0}&quot;, os-&gt;ToString() );\n}\n\nvoid BuildOperatingSystemObjects()\n{\n   \n   // The Version object does not need to correspond to an \n   // actual OS version.\n   Version^ verNull = gcnew Version;\n   Version^ verMajMin = gcnew Version( 3,11 );\n   Version^ verMMBld = gcnew Version( 5,25,625 );\n   Version^ verMMBVer = gcnew Version( 5,6,7,8 );\n   Version^ verString = gcnew Version( &quot;3.5.8.13&quot; );\n   \n   // All PlatformID members are shown here.\n   BuildOSObj( PlatformID::Win32NT, verNull );\n   BuildOSObj( PlatformID::Win32S, verMajMin );\n   BuildOSObj( PlatformID::Win32Windows, verMMBld );\n   BuildOSObj( PlatformID::WinCE, verMMBVer );\n   BuildOSObj( PlatformID::Win32NT, verString );\n}\n\nint main()\n{\n   Console::WriteLine( &quot;This example of the OperatingSystem constructor and <br>&quot;\n   &quot;OperatingSystem::ToString( ) generates the following &quot;\n   &quot;output.<br>&quot; );\n   Console::WriteLine( &quot;Create and display several different &quot;\n   &quot;OperatingSystem objects:<br>&quot; );\n   BuildOperatingSystemObjects();\n   Console::WriteLine( &quot;<br>The OS version of the host computer is:<br><br>   {0}&quot;, Environment::OSVersion-&gt;ToString() );\n}\n\n/*\nThis example of the OperatingSystem constructor and\nOperatingSystem::ToString( ) generates the following output.\n\nCreate and display several different OperatingSystem objects:\n\n   Microsoft Windows NT 0.0\n   Microsoft Win32S 3.11\n   Microsoft Windows 98 5.25.625\n   Microsoft Windows CE 5.6.7.8\n   Microsoft Windows NT 3.5.8.13\n\nThe OS version of the host computer is:\n\n   Microsoft Windows NT 5.1.2600.0\n*/\n</code></pre><pre><code class=\"lang-vb\" name=\"System.OperatingSystem.Ctor_ToString#1\">&#39; Example for the OperatingSystem constructor and the  \n&#39; OperatingSystem.ToString( ) method.\nImports System\nImports Microsoft.VisualBasic\n\nModule OpSysConstructDemo\n    \n    &#39; Create and display an OperatingSystem object.\n    Sub BuildOSObj( pID As PlatformID, ver As Version )\n\n        Dim os As New OperatingSystem( pID, ver )\n\n        Console.WriteLine( &quot;   {0}&quot;, os.ToString( ) )\n    End Sub \n        \n    Sub BuildOperatingSystemObjects( )\n\n        &#39; The Version object does not need to correspond to an \n        &#39; actual OS version.\n        Dim verNull     As New Version( )\n        Dim verMajMin   As New Version( 3, 11 )\n        Dim verMMBld    As New Version( 5, 25, 625 )\n        Dim verMMBVer   As New Version( 5, 6, 7, 8 )\n        Dim verString   As New Version( &quot;3.5.8.13&quot; )\n            \n        &#39; All PlatformID members are shown here.\n        BuildOSObj( PlatformID.Win32NT, verNull )\n        BuildOSObj( PlatformID.Win32S, verMajMin )\n        BuildOSObj( PlatformID.Win32Windows, verMMBld )\n        BuildOSObj( PlatformID.WinCE, verMMBVer )\n        BuildOSObj( PlatformID.Win32NT, verString )\n    End Sub \n        \n    Sub Main( )\n        Console.WriteLine( _\n            &quot;This example of the OperatingSystem constructor &quot; &amp; _\n            &quot;and &quot; &amp; vbCrLf &amp; &quot;OperatingSystem.ToString( ) &quot; &amp; _\n            &quot;generates the following output.&quot; &amp; vbCrLf )\n        Console.WriteLine( _\n            &quot;Create and display several different &quot; &amp; _\n            &quot;OperatingSystem objects:&quot; &amp; vbCrLf )\n\n        BuildOperatingSystemObjects( )\n            \n        Console.WriteLine(vbCrLf &amp; _\n            &quot;The OS version of the host computer is: &quot; &amp; _\n            vbCrLf &amp; vbCrLf &amp; &quot;   {0}&quot;, _\n            Environment.OSVersion.ToString( ) )\n    End Sub\nEnd Module \n\n&#39; This example of the OperatingSystem constructor and\n&#39; OperatingSystem.ToString( ) generates the following output.\n&#39; \n&#39; Create and display several different OperatingSystem objects:\n&#39; \n&#39;    Microsoft Windows NT 0.0\n&#39;    Microsoft Win32S 3.11\n&#39;    Microsoft Windows 98 5.25.625\n&#39;    Microsoft Windows CE 5.6.7.8\n&#39;    Microsoft Windows NT 3.5.8.13\n&#39; \n&#39; The OS version of the host computer is:\n&#39; \n&#39;    Microsoft Windows NT 5.1.2600.0\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.OperatingSystem.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.OperatingSystem.yml\">\r\n<meta name=\"APIName\" content=\"System.OperatingSystem\">\r\n<meta name=\"APIName\" content=\"System.OperatingSystem..ctor\">\r\n<meta name=\"APIName\" content=\"System.OperatingSystem.Clone\">\r\n<meta name=\"APIName\" content=\"System.OperatingSystem.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.OperatingSystem.Platform\">\r\n<meta name=\"APIName\" content=\"System.OperatingSystem.ServicePack\">\r\n<meta name=\"APIName\" content=\"System.OperatingSystem.ToString\">\r\n<meta name=\"APIName\" content=\"System.OperatingSystem.Version\">\r\n<meta name=\"APIName\" content=\"System.OperatingSystem.VersionString\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5a81a10e-67ed-e528-c3cb-baa63a635db0\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents information about an operating system, such as the version and platform identifier. This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.OperatingSystem\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.OperatingSystem.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.OperatingSystem.yml","open_to_public_contributors":true,"api_name":["System.OperatingSystem","System.OperatingSystem..ctor","System.OperatingSystem.Clone","System.OperatingSystem.GetObjectData","System.OperatingSystem.Platform","System.OperatingSystem.ServicePack","System.OperatingSystem.ToString","System.OperatingSystem.Version","System.OperatingSystem.VersionString"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.OperatingSystem","System::OperatingSystem","System.OperatingSystem.#ctor","System::OperatingSystem::#ctor","System.OperatingSystem.Clone","System::OperatingSystem::Clone","System.OperatingSystem.GetObjectData","System::OperatingSystem::GetObjectData","System.OperatingSystem.Platform","System::OperatingSystem::Platform","System.OperatingSystem.ServicePack","System::OperatingSystem::ServicePack","System.OperatingSystem.ToString","System::OperatingSystem::ToString","System.OperatingSystem.Version","System::OperatingSystem::Version","System.OperatingSystem.VersionString","System::OperatingSystem::VersionString"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5a81a10e-67ed-e528-c3cb-baa63a635db0","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/OperatingSystem.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"OperatingSystem class | Microsoft Docs","_op_ogTitle":"OperatingSystem class","description":"Represents information about an operating system, such as the version and platform identifier. This class cannot be inherited.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.OperatingSystem","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.operatingsystem","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.operatingsystem","fileRelativePath":"System.OperatingSystem.html"},"themesRelativePathToOutputRoot":"_themes/"}