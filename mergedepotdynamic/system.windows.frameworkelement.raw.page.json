{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">FrameworkElement</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a WPF framework-level set of properties, events, and methods for Windows Presentation Foundation (WPF) elements. This class represents the provided WPF framework-level implementation that is built on the WPF core-level APIs that are defined by <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a>.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">[System.Windows.Markup.RuntimeNameProperty(&quot;Name&quot;)]\n[System.Windows.Markup.UsableDuringInitialization(true)]\n[System.Windows.Markup.XmlLangProperty(&quot;Language&quot;)]\n[System.Windows.StyleTypedProperty(Property=&quot;FocusVisualStyle&quot;, StyleTargetType=typeof(System.Windows.Controls.Control))]\npublic class FrameworkElement : System.Windows.UIElement, System.ComponentModel.ISupportInitialize, System.Windows.IFrameworkInputElement, System.Windows.Markup.IQueryAmbient</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherobject\" data-linktype=\"relative-path\">DispatcherObject</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual\" data-linktype=\"relative-path\">Visual</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">System.Windows.UIElement</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">FrameworkElement</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ClearValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">ClearValue(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ClearValue_System_Windows_DependencyPropertyKey_\" data-linktype=\"relative-path\">ClearValue(DependencyPropertyKey)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_CoerceValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">CoerceValue(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_DependencyObjectType\" data-linktype=\"relative-path\">DependencyObjectType</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_GetLocalValueEnumerator\" data-linktype=\"relative-path\">GetLocalValueEnumerator()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_GetValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">GetValue(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_InvalidateProperty_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">InvalidateProperty(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_IsSealed\" data-linktype=\"relative-path\">IsSealed</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ReadLocalValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">ReadLocalValue(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetCurrentValue_System_Windows_DependencyProperty_System_Object_\" data-linktype=\"relative-path\">SetCurrentValue(DependencyProperty,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetValue_System_Windows_DependencyProperty_System_Object_\" data-linktype=\"relative-path\">SetValue(DependencyProperty,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_SetValue_System_Windows_DependencyPropertyKey_System_Object_\" data-linktype=\"relative-path\">SetValue(DependencyPropertyKey,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject#System_Windows_DependencyObject_ShouldSerializeProperty_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">ShouldSerializeProperty(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_AddVisualChild_System_Windows_Media_Visual_\" data-linktype=\"relative-path\">AddVisualChild(Visual)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_FindCommonVisualAncestor_System_Windows_DependencyObject_\" data-linktype=\"relative-path\">FindCommonVisualAncestor(DependencyObject)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_IsAncestorOf_System_Windows_DependencyObject_\" data-linktype=\"relative-path\">IsAncestorOf(DependencyObject)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_IsDescendantOf_System_Windows_DependencyObject_\" data-linktype=\"relative-path\">IsDescendantOf(DependencyObject)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_OnDpiChanged_System_Windows_DpiScale_System_Windows_DpiScale_\" data-linktype=\"relative-path\">OnDpiChanged(DpiScale,DpiScale)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_OnVisualChildrenChanged_System_Windows_DependencyObject_System_Windows_DependencyObject_\" data-linktype=\"relative-path\">OnVisualChildrenChanged(DependencyObject,DependencyObject)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_PointFromScreen_System_Windows_Point_\" data-linktype=\"relative-path\">PointFromScreen(Point)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_PointToScreen_System_Windows_Point_\" data-linktype=\"relative-path\">PointToScreen(Point)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_RemoveVisualChild_System_Windows_Media_Visual_\" data-linktype=\"relative-path\">RemoveVisualChild(Visual)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_TransformToAncestor_System_Windows_Media_Media3D_Visual3D_\" data-linktype=\"relative-path\">TransformToAncestor(Visual3D)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_TransformToAncestor_System_Windows_Media_Visual_\" data-linktype=\"relative-path\">TransformToAncestor(Visual)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_TransformToDescendant_System_Windows_Media_Visual_\" data-linktype=\"relative-path\">TransformToDescendant(Visual)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_TransformToVisual_System_Windows_Media_Visual_\" data-linktype=\"relative-path\">TransformToVisual(Visual)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualBitmapEffect\" data-linktype=\"relative-path\">VisualBitmapEffect</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualBitmapEffectInput\" data-linktype=\"relative-path\">VisualBitmapEffectInput</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualBitmapScalingMode\" data-linktype=\"relative-path\">VisualBitmapScalingMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualCacheMode\" data-linktype=\"relative-path\">VisualCacheMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualClearTypeHint\" data-linktype=\"relative-path\">VisualClearTypeHint</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualClip\" data-linktype=\"relative-path\">VisualClip</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualEdgeMode\" data-linktype=\"relative-path\">VisualEdgeMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualEffect\" data-linktype=\"relative-path\">VisualEffect</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualOffset\" data-linktype=\"relative-path\">VisualOffset</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualOpacity\" data-linktype=\"relative-path\">VisualOpacity</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualOpacityMask\" data-linktype=\"relative-path\">VisualOpacityMask</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualParent\" data-linktype=\"relative-path\">VisualParent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualScrollableAreaClip\" data-linktype=\"relative-path\">VisualScrollableAreaClip</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualTextHintingMode\" data-linktype=\"relative-path\">VisualTextHintingMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualTextRenderingMode\" data-linktype=\"relative-path\">VisualTextRenderingMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualTransform\" data-linktype=\"relative-path\">VisualTransform</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualXSnappingGuidelines\" data-linktype=\"relative-path\">VisualXSnappingGuidelines</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual#System_Windows_Media_Visual_VisualYSnappingGuidelines\" data-linktype=\"relative-path\">VisualYSnappingGuidelines</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_CheckAccess\" data-linktype=\"relative-path\">CheckAccess()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_Dispatcher\" data-linktype=\"relative-path\">Dispatcher</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.threading.dispatcherobject#System_Windows_Threading_DispatcherObject_VerifyAccess\" data-linktype=\"relative-path\">VerifyAccess()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_AddHandler_System_Windows_RoutedEvent_System_Delegate_\" data-linktype=\"relative-path\">AddHandler(RoutedEvent,Delegate)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_AddHandler_System_Windows_RoutedEvent_System_Delegate_System_Boolean_\" data-linktype=\"relative-path\">AddHandler(RoutedEvent,Delegate,Boolean)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_AddToEventRoute_System_Windows_EventRoute_System_Windows_RoutedEventArgs_\" data-linktype=\"relative-path\">AddToEventRoute(EventRoute,RoutedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_AllowDrop\" data-linktype=\"relative-path\">AllowDrop</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_AllowDropProperty\" data-linktype=\"relative-path\">AllowDropProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ApplyAnimationClock_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationClock_\" data-linktype=\"relative-path\">ApplyAnimationClock(DependencyProperty,AnimationClock)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ApplyAnimationClock_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationClock_System_Windows_Media_Animation_HandoffBehavior_\" data-linktype=\"relative-path\">ApplyAnimationClock(DependencyProperty,AnimationClock,HandoffBehavior)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_AreAnyTouchesCaptured\" data-linktype=\"relative-path\">AreAnyTouchesCaptured</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_AreAnyTouchesCapturedProperty\" data-linktype=\"relative-path\">AreAnyTouchesCapturedProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_AreAnyTouchesCapturedWithin\" data-linktype=\"relative-path\">AreAnyTouchesCapturedWithin</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_AreAnyTouchesCapturedWithinProperty\" data-linktype=\"relative-path\">AreAnyTouchesCapturedWithinProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_AreAnyTouchesDirectlyOver\" data-linktype=\"relative-path\">AreAnyTouchesDirectlyOver</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_AreAnyTouchesDirectlyOverProperty\" data-linktype=\"relative-path\">AreAnyTouchesDirectlyOverProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_AreAnyTouchesOver\" data-linktype=\"relative-path\">AreAnyTouchesOver</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_AreAnyTouchesOverProperty\" data-linktype=\"relative-path\">AreAnyTouchesOverProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Arrange_System_Windows_Rect_\" data-linktype=\"relative-path\">Arrange(Rect)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_BeginAnimation_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationTimeline_\" data-linktype=\"relative-path\">BeginAnimation(DependencyProperty,AnimationTimeline)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_BeginAnimation_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationTimeline_System_Windows_Media_Animation_HandoffBehavior_\" data-linktype=\"relative-path\">BeginAnimation(DependencyProperty,AnimationTimeline,HandoffBehavior)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_BitmapEffect\" data-linktype=\"relative-path\">BitmapEffect</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_BitmapEffectInput\" data-linktype=\"relative-path\">BitmapEffectInput</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_BitmapEffectInputProperty\" data-linktype=\"relative-path\">BitmapEffectInputProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_BitmapEffectProperty\" data-linktype=\"relative-path\">BitmapEffectProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_CacheMode\" data-linktype=\"relative-path\">CacheMode</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_CacheModeProperty\" data-linktype=\"relative-path\">CacheModeProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_CaptureMouse\" data-linktype=\"relative-path\">CaptureMouse()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_CaptureStylus\" data-linktype=\"relative-path\">CaptureStylus()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_CaptureTouch_System_Windows_Input_TouchDevice_\" data-linktype=\"relative-path\">CaptureTouch(TouchDevice)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Clip\" data-linktype=\"relative-path\">Clip</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ClipProperty\" data-linktype=\"relative-path\">ClipProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ClipToBounds\" data-linktype=\"relative-path\">ClipToBounds</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ClipToBoundsProperty\" data-linktype=\"relative-path\">ClipToBoundsProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_CommandBindings\" data-linktype=\"relative-path\">CommandBindings</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_DesiredSize\" data-linktype=\"relative-path\">DesiredSize</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_DragEnter\" data-linktype=\"relative-path\">DragEnter</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_DragEnterEvent\" data-linktype=\"relative-path\">DragEnterEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_DragLeave\" data-linktype=\"relative-path\">DragLeave</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_DragLeaveEvent\" data-linktype=\"relative-path\">DragLeaveEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_DragOver\" data-linktype=\"relative-path\">DragOver</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_DragOverEvent\" data-linktype=\"relative-path\">DragOverEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Drop\" data-linktype=\"relative-path\">Drop</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_DropEvent\" data-linktype=\"relative-path\">DropEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Effect\" data-linktype=\"relative-path\">Effect</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_EffectProperty\" data-linktype=\"relative-path\">EffectProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Focus\" data-linktype=\"relative-path\">Focus()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Focusable\" data-linktype=\"relative-path\">Focusable</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_FocusableChanged\" data-linktype=\"relative-path\">FocusableChanged</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_FocusableProperty\" data-linktype=\"relative-path\">FocusableProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_GetAnimationBaseValue_System_Windows_DependencyProperty_\" data-linktype=\"relative-path\">GetAnimationBaseValue(DependencyProperty)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_GiveFeedback\" data-linktype=\"relative-path\">GiveFeedback</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_GiveFeedbackEvent\" data-linktype=\"relative-path\">GiveFeedbackEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_GotFocus\" data-linktype=\"relative-path\">GotFocus</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_GotFocusEvent\" data-linktype=\"relative-path\">GotFocusEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_GotKeyboardFocus\" data-linktype=\"relative-path\">GotKeyboardFocus</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_GotKeyboardFocusEvent\" data-linktype=\"relative-path\">GotKeyboardFocusEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_GotMouseCapture\" data-linktype=\"relative-path\">GotMouseCapture</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_GotMouseCaptureEvent\" data-linktype=\"relative-path\">GotMouseCaptureEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_GotStylusCapture\" data-linktype=\"relative-path\">GotStylusCapture</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_GotStylusCaptureEvent\" data-linktype=\"relative-path\">GotStylusCaptureEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_GotTouchCapture\" data-linktype=\"relative-path\">GotTouchCapture</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_GotTouchCaptureEvent\" data-linktype=\"relative-path\">GotTouchCaptureEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_HasAnimatedProperties\" data-linktype=\"relative-path\">HasAnimatedProperties</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_HasEffectiveKeyboardFocus\" data-linktype=\"relative-path\">HasEffectiveKeyboardFocus</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_HitTestCore_System_Windows_Media_GeometryHitTestParameters_\" data-linktype=\"relative-path\">HitTestCore(GeometryHitTestParameters)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_HitTestCore_System_Windows_Media_PointHitTestParameters_\" data-linktype=\"relative-path\">HitTestCore(PointHitTestParameters)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_InputBindings\" data-linktype=\"relative-path\">InputBindings</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_InputHitTest_System_Windows_Point_\" data-linktype=\"relative-path\">InputHitTest(Point)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_InvalidateArrange\" data-linktype=\"relative-path\">InvalidateArrange()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_InvalidateMeasure\" data-linktype=\"relative-path\">InvalidateMeasure()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_InvalidateVisual\" data-linktype=\"relative-path\">InvalidateVisual()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsArrangeValid\" data-linktype=\"relative-path\">IsArrangeValid</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsEnabled\" data-linktype=\"relative-path\">IsEnabled</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsEnabledChanged\" data-linktype=\"relative-path\">IsEnabledChanged</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsEnabledCore\" data-linktype=\"relative-path\">IsEnabledCore</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsEnabledProperty\" data-linktype=\"relative-path\">IsEnabledProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsFocused\" data-linktype=\"relative-path\">IsFocused</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsFocusedProperty\" data-linktype=\"relative-path\">IsFocusedProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsHitTestVisible\" data-linktype=\"relative-path\">IsHitTestVisible</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsHitTestVisibleChanged\" data-linktype=\"relative-path\">IsHitTestVisibleChanged</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsHitTestVisibleProperty\" data-linktype=\"relative-path\">IsHitTestVisibleProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsInputMethodEnabled\" data-linktype=\"relative-path\">IsInputMethodEnabled</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsKeyboardFocused\" data-linktype=\"relative-path\">IsKeyboardFocused</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsKeyboardFocusedChanged\" data-linktype=\"relative-path\">IsKeyboardFocusedChanged</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsKeyboardFocusedProperty\" data-linktype=\"relative-path\">IsKeyboardFocusedProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsKeyboardFocusWithin\" data-linktype=\"relative-path\">IsKeyboardFocusWithin</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsKeyboardFocusWithinChanged\" data-linktype=\"relative-path\">IsKeyboardFocusWithinChanged</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsKeyboardFocusWithinProperty\" data-linktype=\"relative-path\">IsKeyboardFocusWithinProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsManipulationEnabled\" data-linktype=\"relative-path\">IsManipulationEnabled</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsManipulationEnabledProperty\" data-linktype=\"relative-path\">IsManipulationEnabledProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsMeasureValid\" data-linktype=\"relative-path\">IsMeasureValid</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsMouseCaptured\" data-linktype=\"relative-path\">IsMouseCaptured</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsMouseCapturedChanged\" data-linktype=\"relative-path\">IsMouseCapturedChanged</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsMouseCapturedProperty\" data-linktype=\"relative-path\">IsMouseCapturedProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsMouseCaptureWithin\" data-linktype=\"relative-path\">IsMouseCaptureWithin</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsMouseCaptureWithinChanged\" data-linktype=\"relative-path\">IsMouseCaptureWithinChanged</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsMouseCaptureWithinProperty\" data-linktype=\"relative-path\">IsMouseCaptureWithinProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsMouseDirectlyOver\" data-linktype=\"relative-path\">IsMouseDirectlyOver</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsMouseDirectlyOverChanged\" data-linktype=\"relative-path\">IsMouseDirectlyOverChanged</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsMouseDirectlyOverProperty\" data-linktype=\"relative-path\">IsMouseDirectlyOverProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsMouseOver\" data-linktype=\"relative-path\">IsMouseOver</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsMouseOverProperty\" data-linktype=\"relative-path\">IsMouseOverProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsStylusCaptured\" data-linktype=\"relative-path\">IsStylusCaptured</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsStylusCapturedChanged\" data-linktype=\"relative-path\">IsStylusCapturedChanged</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsStylusCapturedProperty\" data-linktype=\"relative-path\">IsStylusCapturedProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsStylusCaptureWithin\" data-linktype=\"relative-path\">IsStylusCaptureWithin</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsStylusCaptureWithinChanged\" data-linktype=\"relative-path\">IsStylusCaptureWithinChanged</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsStylusCaptureWithinProperty\" data-linktype=\"relative-path\">IsStylusCaptureWithinProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsStylusDirectlyOver\" data-linktype=\"relative-path\">IsStylusDirectlyOver</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsStylusDirectlyOverChanged\" data-linktype=\"relative-path\">IsStylusDirectlyOverChanged</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsStylusDirectlyOverProperty\" data-linktype=\"relative-path\">IsStylusDirectlyOverProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsStylusOver\" data-linktype=\"relative-path\">IsStylusOver</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsStylusOverProperty\" data-linktype=\"relative-path\">IsStylusOverProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsVisible\" data-linktype=\"relative-path\">IsVisible</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsVisibleChanged\" data-linktype=\"relative-path\">IsVisibleChanged</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsVisibleProperty\" data-linktype=\"relative-path\">IsVisibleProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_KeyDown\" data-linktype=\"relative-path\">KeyDown</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_KeyDownEvent\" data-linktype=\"relative-path\">KeyDownEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_KeyUp\" data-linktype=\"relative-path\">KeyUp</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_KeyUpEvent\" data-linktype=\"relative-path\">KeyUpEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_LayoutUpdated\" data-linktype=\"relative-path\">LayoutUpdated</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_LostFocus\" data-linktype=\"relative-path\">LostFocus</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_LostFocusEvent\" data-linktype=\"relative-path\">LostFocusEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_LostKeyboardFocus\" data-linktype=\"relative-path\">LostKeyboardFocus</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_LostKeyboardFocusEvent\" data-linktype=\"relative-path\">LostKeyboardFocusEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_LostMouseCapture\" data-linktype=\"relative-path\">LostMouseCapture</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_LostMouseCaptureEvent\" data-linktype=\"relative-path\">LostMouseCaptureEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_LostStylusCapture\" data-linktype=\"relative-path\">LostStylusCapture</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_LostStylusCaptureEvent\" data-linktype=\"relative-path\">LostStylusCaptureEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_LostTouchCapture\" data-linktype=\"relative-path\">LostTouchCapture</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_LostTouchCaptureEvent\" data-linktype=\"relative-path\">LostTouchCaptureEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ManipulationBoundaryFeedback\" data-linktype=\"relative-path\">ManipulationBoundaryFeedback</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ManipulationBoundaryFeedbackEvent\" data-linktype=\"relative-path\">ManipulationBoundaryFeedbackEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ManipulationCompleted\" data-linktype=\"relative-path\">ManipulationCompleted</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ManipulationCompletedEvent\" data-linktype=\"relative-path\">ManipulationCompletedEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ManipulationDelta\" data-linktype=\"relative-path\">ManipulationDelta</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ManipulationDeltaEvent\" data-linktype=\"relative-path\">ManipulationDeltaEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ManipulationInertiaStarting\" data-linktype=\"relative-path\">ManipulationInertiaStarting</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ManipulationInertiaStartingEvent\" data-linktype=\"relative-path\">ManipulationInertiaStartingEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ManipulationStarted\" data-linktype=\"relative-path\">ManipulationStarted</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ManipulationStartedEvent\" data-linktype=\"relative-path\">ManipulationStartedEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ManipulationStarting\" data-linktype=\"relative-path\">ManipulationStarting</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ManipulationStartingEvent\" data-linktype=\"relative-path\">ManipulationStartingEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Measure_System_Windows_Size_\" data-linktype=\"relative-path\">Measure(Size)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseDown\" data-linktype=\"relative-path\">MouseDown</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseDownEvent\" data-linktype=\"relative-path\">MouseDownEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseEnter\" data-linktype=\"relative-path\">MouseEnter</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseEnterEvent\" data-linktype=\"relative-path\">MouseEnterEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseLeave\" data-linktype=\"relative-path\">MouseLeave</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseLeaveEvent\" data-linktype=\"relative-path\">MouseLeaveEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseLeftButtonDown\" data-linktype=\"relative-path\">MouseLeftButtonDown</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseLeftButtonDownEvent\" data-linktype=\"relative-path\">MouseLeftButtonDownEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseLeftButtonUp\" data-linktype=\"relative-path\">MouseLeftButtonUp</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseLeftButtonUpEvent\" data-linktype=\"relative-path\">MouseLeftButtonUpEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseMove\" data-linktype=\"relative-path\">MouseMove</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseMoveEvent\" data-linktype=\"relative-path\">MouseMoveEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseRightButtonDown\" data-linktype=\"relative-path\">MouseRightButtonDown</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseRightButtonDownEvent\" data-linktype=\"relative-path\">MouseRightButtonDownEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseRightButtonUp\" data-linktype=\"relative-path\">MouseRightButtonUp</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseRightButtonUpEvent\" data-linktype=\"relative-path\">MouseRightButtonUpEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseUp\" data-linktype=\"relative-path\">MouseUp</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseUpEvent\" data-linktype=\"relative-path\">MouseUpEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseWheel\" data-linktype=\"relative-path\">MouseWheel</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MouseWheelEvent\" data-linktype=\"relative-path\">MouseWheelEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnAccessKey_System_Windows_Input_AccessKeyEventArgs_\" data-linktype=\"relative-path\">OnAccessKey(AccessKeyEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnChildDesiredSizeChanged_System_Windows_UIElement_\" data-linktype=\"relative-path\">OnChildDesiredSizeChanged(UIElement)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnCreateAutomationPeer\" data-linktype=\"relative-path\">OnCreateAutomationPeer()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnDragEnter_System_Windows_DragEventArgs_\" data-linktype=\"relative-path\">OnDragEnter(DragEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnDragLeave_System_Windows_DragEventArgs_\" data-linktype=\"relative-path\">OnDragLeave(DragEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnDragOver_System_Windows_DragEventArgs_\" data-linktype=\"relative-path\">OnDragOver(DragEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnDrop_System_Windows_DragEventArgs_\" data-linktype=\"relative-path\">OnDrop(DragEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnGiveFeedback_System_Windows_GiveFeedbackEventArgs_\" data-linktype=\"relative-path\">OnGiveFeedback(GiveFeedbackEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnGotKeyboardFocus_System_Windows_Input_KeyboardFocusChangedEventArgs_\" data-linktype=\"relative-path\">OnGotKeyboardFocus(KeyboardFocusChangedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnGotMouseCapture_System_Windows_Input_MouseEventArgs_\" data-linktype=\"relative-path\">OnGotMouseCapture(MouseEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnGotStylusCapture_System_Windows_Input_StylusEventArgs_\" data-linktype=\"relative-path\">OnGotStylusCapture(StylusEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnGotTouchCapture_System_Windows_Input_TouchEventArgs_\" data-linktype=\"relative-path\">OnGotTouchCapture(TouchEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnIsKeyboardFocusedChanged_System_Windows_DependencyPropertyChangedEventArgs_\" data-linktype=\"relative-path\">OnIsKeyboardFocusedChanged(DependencyPropertyChangedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnIsKeyboardFocusWithinChanged_System_Windows_DependencyPropertyChangedEventArgs_\" data-linktype=\"relative-path\">OnIsKeyboardFocusWithinChanged(DependencyPropertyChangedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnIsMouseCapturedChanged_System_Windows_DependencyPropertyChangedEventArgs_\" data-linktype=\"relative-path\">OnIsMouseCapturedChanged(DependencyPropertyChangedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnIsMouseCaptureWithinChanged_System_Windows_DependencyPropertyChangedEventArgs_\" data-linktype=\"relative-path\">OnIsMouseCaptureWithinChanged(DependencyPropertyChangedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnIsMouseDirectlyOverChanged_System_Windows_DependencyPropertyChangedEventArgs_\" data-linktype=\"relative-path\">OnIsMouseDirectlyOverChanged(DependencyPropertyChangedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnIsStylusCapturedChanged_System_Windows_DependencyPropertyChangedEventArgs_\" data-linktype=\"relative-path\">OnIsStylusCapturedChanged(DependencyPropertyChangedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnIsStylusCaptureWithinChanged_System_Windows_DependencyPropertyChangedEventArgs_\" data-linktype=\"relative-path\">OnIsStylusCaptureWithinChanged(DependencyPropertyChangedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnIsStylusDirectlyOverChanged_System_Windows_DependencyPropertyChangedEventArgs_\" data-linktype=\"relative-path\">OnIsStylusDirectlyOverChanged(DependencyPropertyChangedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnKeyDown_System_Windows_Input_KeyEventArgs_\" data-linktype=\"relative-path\">OnKeyDown(KeyEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnKeyUp_System_Windows_Input_KeyEventArgs_\" data-linktype=\"relative-path\">OnKeyUp(KeyEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnLostFocus_System_Windows_RoutedEventArgs_\" data-linktype=\"relative-path\">OnLostFocus(RoutedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnLostKeyboardFocus_System_Windows_Input_KeyboardFocusChangedEventArgs_\" data-linktype=\"relative-path\">OnLostKeyboardFocus(KeyboardFocusChangedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnLostMouseCapture_System_Windows_Input_MouseEventArgs_\" data-linktype=\"relative-path\">OnLostMouseCapture(MouseEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnLostStylusCapture_System_Windows_Input_StylusEventArgs_\" data-linktype=\"relative-path\">OnLostStylusCapture(StylusEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnLostTouchCapture_System_Windows_Input_TouchEventArgs_\" data-linktype=\"relative-path\">OnLostTouchCapture(TouchEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnManipulationBoundaryFeedback_System_Windows_Input_ManipulationBoundaryFeedbackEventArgs_\" data-linktype=\"relative-path\">OnManipulationBoundaryFeedback(ManipulationBoundaryFeedbackEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnManipulationCompleted_System_Windows_Input_ManipulationCompletedEventArgs_\" data-linktype=\"relative-path\">OnManipulationCompleted(ManipulationCompletedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnManipulationDelta_System_Windows_Input_ManipulationDeltaEventArgs_\" data-linktype=\"relative-path\">OnManipulationDelta(ManipulationDeltaEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnManipulationInertiaStarting_System_Windows_Input_ManipulationInertiaStartingEventArgs_\" data-linktype=\"relative-path\">OnManipulationInertiaStarting(ManipulationInertiaStartingEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnManipulationStarted_System_Windows_Input_ManipulationStartedEventArgs_\" data-linktype=\"relative-path\">OnManipulationStarted(ManipulationStartedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnManipulationStarting_System_Windows_Input_ManipulationStartingEventArgs_\" data-linktype=\"relative-path\">OnManipulationStarting(ManipulationStartingEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnMouseDown_System_Windows_Input_MouseButtonEventArgs_\" data-linktype=\"relative-path\">OnMouseDown(MouseButtonEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnMouseEnter_System_Windows_Input_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseEnter(MouseEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnMouseLeave_System_Windows_Input_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseLeave(MouseEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnMouseLeftButtonDown_System_Windows_Input_MouseButtonEventArgs_\" data-linktype=\"relative-path\">OnMouseLeftButtonDown(MouseButtonEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnMouseLeftButtonUp_System_Windows_Input_MouseButtonEventArgs_\" data-linktype=\"relative-path\">OnMouseLeftButtonUp(MouseButtonEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnMouseMove_System_Windows_Input_MouseEventArgs_\" data-linktype=\"relative-path\">OnMouseMove(MouseEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnMouseRightButtonDown_System_Windows_Input_MouseButtonEventArgs_\" data-linktype=\"relative-path\">OnMouseRightButtonDown(MouseButtonEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnMouseRightButtonUp_System_Windows_Input_MouseButtonEventArgs_\" data-linktype=\"relative-path\">OnMouseRightButtonUp(MouseButtonEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnMouseUp_System_Windows_Input_MouseButtonEventArgs_\" data-linktype=\"relative-path\">OnMouseUp(MouseButtonEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnMouseWheel_System_Windows_Input_MouseWheelEventArgs_\" data-linktype=\"relative-path\">OnMouseWheel(MouseWheelEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewDragEnter_System_Windows_DragEventArgs_\" data-linktype=\"relative-path\">OnPreviewDragEnter(DragEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewDragLeave_System_Windows_DragEventArgs_\" data-linktype=\"relative-path\">OnPreviewDragLeave(DragEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewDragOver_System_Windows_DragEventArgs_\" data-linktype=\"relative-path\">OnPreviewDragOver(DragEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewDrop_System_Windows_DragEventArgs_\" data-linktype=\"relative-path\">OnPreviewDrop(DragEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewGiveFeedback_System_Windows_GiveFeedbackEventArgs_\" data-linktype=\"relative-path\">OnPreviewGiveFeedback(GiveFeedbackEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewGotKeyboardFocus_System_Windows_Input_KeyboardFocusChangedEventArgs_\" data-linktype=\"relative-path\">OnPreviewGotKeyboardFocus(KeyboardFocusChangedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewKeyDown_System_Windows_Input_KeyEventArgs_\" data-linktype=\"relative-path\">OnPreviewKeyDown(KeyEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewKeyUp_System_Windows_Input_KeyEventArgs_\" data-linktype=\"relative-path\">OnPreviewKeyUp(KeyEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewLostKeyboardFocus_System_Windows_Input_KeyboardFocusChangedEventArgs_\" data-linktype=\"relative-path\">OnPreviewLostKeyboardFocus(KeyboardFocusChangedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewMouseDown_System_Windows_Input_MouseButtonEventArgs_\" data-linktype=\"relative-path\">OnPreviewMouseDown(MouseButtonEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewMouseLeftButtonDown_System_Windows_Input_MouseButtonEventArgs_\" data-linktype=\"relative-path\">OnPreviewMouseLeftButtonDown(MouseButtonEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewMouseLeftButtonUp_System_Windows_Input_MouseButtonEventArgs_\" data-linktype=\"relative-path\">OnPreviewMouseLeftButtonUp(MouseButtonEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewMouseMove_System_Windows_Input_MouseEventArgs_\" data-linktype=\"relative-path\">OnPreviewMouseMove(MouseEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewMouseRightButtonDown_System_Windows_Input_MouseButtonEventArgs_\" data-linktype=\"relative-path\">OnPreviewMouseRightButtonDown(MouseButtonEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewMouseRightButtonUp_System_Windows_Input_MouseButtonEventArgs_\" data-linktype=\"relative-path\">OnPreviewMouseRightButtonUp(MouseButtonEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewMouseUp_System_Windows_Input_MouseButtonEventArgs_\" data-linktype=\"relative-path\">OnPreviewMouseUp(MouseButtonEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewMouseWheel_System_Windows_Input_MouseWheelEventArgs_\" data-linktype=\"relative-path\">OnPreviewMouseWheel(MouseWheelEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewQueryContinueDrag_System_Windows_QueryContinueDragEventArgs_\" data-linktype=\"relative-path\">OnPreviewQueryContinueDrag(QueryContinueDragEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewStylusButtonDown_System_Windows_Input_StylusButtonEventArgs_\" data-linktype=\"relative-path\">OnPreviewStylusButtonDown(StylusButtonEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewStylusButtonUp_System_Windows_Input_StylusButtonEventArgs_\" data-linktype=\"relative-path\">OnPreviewStylusButtonUp(StylusButtonEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewStylusDown_System_Windows_Input_StylusDownEventArgs_\" data-linktype=\"relative-path\">OnPreviewStylusDown(StylusDownEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewStylusInAirMove_System_Windows_Input_StylusEventArgs_\" data-linktype=\"relative-path\">OnPreviewStylusInAirMove(StylusEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewStylusInRange_System_Windows_Input_StylusEventArgs_\" data-linktype=\"relative-path\">OnPreviewStylusInRange(StylusEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewStylusMove_System_Windows_Input_StylusEventArgs_\" data-linktype=\"relative-path\">OnPreviewStylusMove(StylusEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewStylusOutOfRange_System_Windows_Input_StylusEventArgs_\" data-linktype=\"relative-path\">OnPreviewStylusOutOfRange(StylusEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewStylusSystemGesture_System_Windows_Input_StylusSystemGestureEventArgs_\" data-linktype=\"relative-path\">OnPreviewStylusSystemGesture(StylusSystemGestureEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewStylusUp_System_Windows_Input_StylusEventArgs_\" data-linktype=\"relative-path\">OnPreviewStylusUp(StylusEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewTextInput_System_Windows_Input_TextCompositionEventArgs_\" data-linktype=\"relative-path\">OnPreviewTextInput(TextCompositionEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewTouchDown_System_Windows_Input_TouchEventArgs_\" data-linktype=\"relative-path\">OnPreviewTouchDown(TouchEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewTouchMove_System_Windows_Input_TouchEventArgs_\" data-linktype=\"relative-path\">OnPreviewTouchMove(TouchEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnPreviewTouchUp_System_Windows_Input_TouchEventArgs_\" data-linktype=\"relative-path\">OnPreviewTouchUp(TouchEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnQueryContinueDrag_System_Windows_QueryContinueDragEventArgs_\" data-linktype=\"relative-path\">OnQueryContinueDrag(QueryContinueDragEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnQueryCursor_System_Windows_Input_QueryCursorEventArgs_\" data-linktype=\"relative-path\">OnQueryCursor(QueryCursorEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnRender_System_Windows_Media_DrawingContext_\" data-linktype=\"relative-path\">OnRender(DrawingContext)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnStylusButtonDown_System_Windows_Input_StylusButtonEventArgs_\" data-linktype=\"relative-path\">OnStylusButtonDown(StylusButtonEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnStylusButtonUp_System_Windows_Input_StylusButtonEventArgs_\" data-linktype=\"relative-path\">OnStylusButtonUp(StylusButtonEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnStylusDown_System_Windows_Input_StylusDownEventArgs_\" data-linktype=\"relative-path\">OnStylusDown(StylusDownEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnStylusEnter_System_Windows_Input_StylusEventArgs_\" data-linktype=\"relative-path\">OnStylusEnter(StylusEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnStylusInAirMove_System_Windows_Input_StylusEventArgs_\" data-linktype=\"relative-path\">OnStylusInAirMove(StylusEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnStylusInRange_System_Windows_Input_StylusEventArgs_\" data-linktype=\"relative-path\">OnStylusInRange(StylusEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnStylusLeave_System_Windows_Input_StylusEventArgs_\" data-linktype=\"relative-path\">OnStylusLeave(StylusEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnStylusMove_System_Windows_Input_StylusEventArgs_\" data-linktype=\"relative-path\">OnStylusMove(StylusEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnStylusOutOfRange_System_Windows_Input_StylusEventArgs_\" data-linktype=\"relative-path\">OnStylusOutOfRange(StylusEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnStylusSystemGesture_System_Windows_Input_StylusSystemGestureEventArgs_\" data-linktype=\"relative-path\">OnStylusSystemGesture(StylusSystemGestureEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnStylusUp_System_Windows_Input_StylusEventArgs_\" data-linktype=\"relative-path\">OnStylusUp(StylusEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnTextInput_System_Windows_Input_TextCompositionEventArgs_\" data-linktype=\"relative-path\">OnTextInput(TextCompositionEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnTouchDown_System_Windows_Input_TouchEventArgs_\" data-linktype=\"relative-path\">OnTouchDown(TouchEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnTouchEnter_System_Windows_Input_TouchEventArgs_\" data-linktype=\"relative-path\">OnTouchEnter(TouchEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnTouchLeave_System_Windows_Input_TouchEventArgs_\" data-linktype=\"relative-path\">OnTouchLeave(TouchEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnTouchMove_System_Windows_Input_TouchEventArgs_\" data-linktype=\"relative-path\">OnTouchMove(TouchEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnTouchUp_System_Windows_Input_TouchEventArgs_\" data-linktype=\"relative-path\">OnTouchUp(TouchEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Opacity\" data-linktype=\"relative-path\">Opacity</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OpacityMask\" data-linktype=\"relative-path\">OpacityMask</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OpacityMaskProperty\" data-linktype=\"relative-path\">OpacityMaskProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OpacityProperty\" data-linktype=\"relative-path\">OpacityProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PersistId\" data-linktype=\"relative-path\">PersistId</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewDragEnter\" data-linktype=\"relative-path\">PreviewDragEnter</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewDragEnterEvent\" data-linktype=\"relative-path\">PreviewDragEnterEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewDragLeave\" data-linktype=\"relative-path\">PreviewDragLeave</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewDragLeaveEvent\" data-linktype=\"relative-path\">PreviewDragLeaveEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewDragOver\" data-linktype=\"relative-path\">PreviewDragOver</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewDragOverEvent\" data-linktype=\"relative-path\">PreviewDragOverEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewDrop\" data-linktype=\"relative-path\">PreviewDrop</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewDropEvent\" data-linktype=\"relative-path\">PreviewDropEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewGiveFeedback\" data-linktype=\"relative-path\">PreviewGiveFeedback</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewGiveFeedbackEvent\" data-linktype=\"relative-path\">PreviewGiveFeedbackEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewGotKeyboardFocus\" data-linktype=\"relative-path\">PreviewGotKeyboardFocus</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewGotKeyboardFocusEvent\" data-linktype=\"relative-path\">PreviewGotKeyboardFocusEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewKeyDown\" data-linktype=\"relative-path\">PreviewKeyDown</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewKeyDownEvent\" data-linktype=\"relative-path\">PreviewKeyDownEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewKeyUp\" data-linktype=\"relative-path\">PreviewKeyUp</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewKeyUpEvent\" data-linktype=\"relative-path\">PreviewKeyUpEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewLostKeyboardFocus\" data-linktype=\"relative-path\">PreviewLostKeyboardFocus</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewLostKeyboardFocusEvent\" data-linktype=\"relative-path\">PreviewLostKeyboardFocusEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewMouseDown\" data-linktype=\"relative-path\">PreviewMouseDown</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewMouseDownEvent\" data-linktype=\"relative-path\">PreviewMouseDownEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewMouseLeftButtonDown\" data-linktype=\"relative-path\">PreviewMouseLeftButtonDown</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewMouseLeftButtonDownEvent\" data-linktype=\"relative-path\">PreviewMouseLeftButtonDownEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewMouseLeftButtonUp\" data-linktype=\"relative-path\">PreviewMouseLeftButtonUp</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewMouseLeftButtonUpEvent\" data-linktype=\"relative-path\">PreviewMouseLeftButtonUpEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewMouseMove\" data-linktype=\"relative-path\">PreviewMouseMove</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewMouseMoveEvent\" data-linktype=\"relative-path\">PreviewMouseMoveEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewMouseRightButtonDown\" data-linktype=\"relative-path\">PreviewMouseRightButtonDown</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewMouseRightButtonDownEvent\" data-linktype=\"relative-path\">PreviewMouseRightButtonDownEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewMouseRightButtonUp\" data-linktype=\"relative-path\">PreviewMouseRightButtonUp</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewMouseRightButtonUpEvent\" data-linktype=\"relative-path\">PreviewMouseRightButtonUpEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewMouseUp\" data-linktype=\"relative-path\">PreviewMouseUp</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewMouseUpEvent\" data-linktype=\"relative-path\">PreviewMouseUpEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewMouseWheel\" data-linktype=\"relative-path\">PreviewMouseWheel</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewMouseWheelEvent\" data-linktype=\"relative-path\">PreviewMouseWheelEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewQueryContinueDrag\" data-linktype=\"relative-path\">PreviewQueryContinueDrag</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewQueryContinueDragEvent\" data-linktype=\"relative-path\">PreviewQueryContinueDragEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusButtonDown\" data-linktype=\"relative-path\">PreviewStylusButtonDown</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusButtonDownEvent\" data-linktype=\"relative-path\">PreviewStylusButtonDownEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusButtonUp\" data-linktype=\"relative-path\">PreviewStylusButtonUp</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusButtonUpEvent\" data-linktype=\"relative-path\">PreviewStylusButtonUpEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusDown\" data-linktype=\"relative-path\">PreviewStylusDown</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusDownEvent\" data-linktype=\"relative-path\">PreviewStylusDownEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusInAirMove\" data-linktype=\"relative-path\">PreviewStylusInAirMove</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusInAirMoveEvent\" data-linktype=\"relative-path\">PreviewStylusInAirMoveEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusInRange\" data-linktype=\"relative-path\">PreviewStylusInRange</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusInRangeEvent\" data-linktype=\"relative-path\">PreviewStylusInRangeEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusMove\" data-linktype=\"relative-path\">PreviewStylusMove</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusMoveEvent\" data-linktype=\"relative-path\">PreviewStylusMoveEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusOutOfRange\" data-linktype=\"relative-path\">PreviewStylusOutOfRange</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusOutOfRangeEvent\" data-linktype=\"relative-path\">PreviewStylusOutOfRangeEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusSystemGesture\" data-linktype=\"relative-path\">PreviewStylusSystemGesture</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusSystemGestureEvent\" data-linktype=\"relative-path\">PreviewStylusSystemGestureEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusUp\" data-linktype=\"relative-path\">PreviewStylusUp</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewStylusUpEvent\" data-linktype=\"relative-path\">PreviewStylusUpEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewTextInput\" data-linktype=\"relative-path\">PreviewTextInput</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewTextInputEvent\" data-linktype=\"relative-path\">PreviewTextInputEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewTouchDown\" data-linktype=\"relative-path\">PreviewTouchDown</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewTouchDownEvent\" data-linktype=\"relative-path\">PreviewTouchDownEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewTouchMove\" data-linktype=\"relative-path\">PreviewTouchMove</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewTouchMoveEvent\" data-linktype=\"relative-path\">PreviewTouchMoveEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewTouchUp\" data-linktype=\"relative-path\">PreviewTouchUp</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_PreviewTouchUpEvent\" data-linktype=\"relative-path\">PreviewTouchUpEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_QueryContinueDrag\" data-linktype=\"relative-path\">QueryContinueDrag</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_QueryContinueDragEvent\" data-linktype=\"relative-path\">QueryContinueDragEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_QueryCursor\" data-linktype=\"relative-path\">QueryCursor</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_QueryCursorEvent\" data-linktype=\"relative-path\">QueryCursorEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_RaiseEvent_System_Windows_RoutedEventArgs_\" data-linktype=\"relative-path\">RaiseEvent(RoutedEventArgs)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ReleaseAllTouchCaptures\" data-linktype=\"relative-path\">ReleaseAllTouchCaptures()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ReleaseMouseCapture\" data-linktype=\"relative-path\">ReleaseMouseCapture()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ReleaseStylusCapture\" data-linktype=\"relative-path\">ReleaseStylusCapture()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ReleaseTouchCapture_System_Windows_Input_TouchDevice_\" data-linktype=\"relative-path\">ReleaseTouchCapture(TouchDevice)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_RemoveHandler_System_Windows_RoutedEvent_System_Delegate_\" data-linktype=\"relative-path\">RemoveHandler(RoutedEvent,Delegate)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_RenderSize\" data-linktype=\"relative-path\">RenderSize</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_RenderTransform\" data-linktype=\"relative-path\">RenderTransform</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_RenderTransformOrigin\" data-linktype=\"relative-path\">RenderTransformOrigin</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_RenderTransformOriginProperty\" data-linktype=\"relative-path\">RenderTransformOriginProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_RenderTransformProperty\" data-linktype=\"relative-path\">RenderTransformProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ShouldSerializeCommandBindings\" data-linktype=\"relative-path\">ShouldSerializeCommandBindings()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ShouldSerializeInputBindings\" data-linktype=\"relative-path\">ShouldSerializeInputBindings()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_SnapsToDevicePixels\" data-linktype=\"relative-path\">SnapsToDevicePixels</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_SnapsToDevicePixelsProperty\" data-linktype=\"relative-path\">SnapsToDevicePixelsProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusButtonDown\" data-linktype=\"relative-path\">StylusButtonDown</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusButtonDownEvent\" data-linktype=\"relative-path\">StylusButtonDownEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusButtonUp\" data-linktype=\"relative-path\">StylusButtonUp</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusButtonUpEvent\" data-linktype=\"relative-path\">StylusButtonUpEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusDown\" data-linktype=\"relative-path\">StylusDown</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusDownEvent\" data-linktype=\"relative-path\">StylusDownEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusEnter\" data-linktype=\"relative-path\">StylusEnter</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusEnterEvent\" data-linktype=\"relative-path\">StylusEnterEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusInAirMove\" data-linktype=\"relative-path\">StylusInAirMove</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusInAirMoveEvent\" data-linktype=\"relative-path\">StylusInAirMoveEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusInRange\" data-linktype=\"relative-path\">StylusInRange</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusInRangeEvent\" data-linktype=\"relative-path\">StylusInRangeEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusLeave\" data-linktype=\"relative-path\">StylusLeave</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusLeaveEvent\" data-linktype=\"relative-path\">StylusLeaveEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusMove\" data-linktype=\"relative-path\">StylusMove</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusMoveEvent\" data-linktype=\"relative-path\">StylusMoveEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusOutOfRange\" data-linktype=\"relative-path\">StylusOutOfRange</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusOutOfRangeEvent\" data-linktype=\"relative-path\">StylusOutOfRangeEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusPlugIns\" data-linktype=\"relative-path\">StylusPlugIns</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusSystemGesture\" data-linktype=\"relative-path\">StylusSystemGesture</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusSystemGestureEvent\" data-linktype=\"relative-path\">StylusSystemGestureEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusUp\" data-linktype=\"relative-path\">StylusUp</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_StylusUpEvent\" data-linktype=\"relative-path\">StylusUpEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TextInput\" data-linktype=\"relative-path\">TextInput</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TextInputEvent\" data-linktype=\"relative-path\">TextInputEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchDown\" data-linktype=\"relative-path\">TouchDown</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchDownEvent\" data-linktype=\"relative-path\">TouchDownEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchEnter\" data-linktype=\"relative-path\">TouchEnter</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchEnterEvent\" data-linktype=\"relative-path\">TouchEnterEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchesCaptured\" data-linktype=\"relative-path\">TouchesCaptured</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchesCapturedWithin\" data-linktype=\"relative-path\">TouchesCapturedWithin</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchesDirectlyOver\" data-linktype=\"relative-path\">TouchesDirectlyOver</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchesOver\" data-linktype=\"relative-path\">TouchesOver</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchLeave\" data-linktype=\"relative-path\">TouchLeave</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchLeaveEvent\" data-linktype=\"relative-path\">TouchLeaveEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchMove\" data-linktype=\"relative-path\">TouchMove</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchMoveEvent\" data-linktype=\"relative-path\">TouchMoveEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchUp\" data-linktype=\"relative-path\">TouchUp</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TouchUpEvent\" data-linktype=\"relative-path\">TouchUpEvent</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_TranslatePoint_System_Windows_Point_System_Windows_UIElement_\" data-linktype=\"relative-path\">TranslatePoint(Point,UIElement)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Uid\" data-linktype=\"relative-path\">Uid</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_UidProperty\" data-linktype=\"relative-path\">UidProperty</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_UpdateLayout\" data-linktype=\"relative-path\">UpdateLayout()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Visibility\" data-linktype=\"relative-path\">Visibility</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_VisibilityProperty\" data-linktype=\"relative-path\">VisibilityProperty</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>FrameworkElement is the connecting point between WPF framework-level element classes and the WPF core-level set of <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> presentation services. For more information about these concepts, see <a href=\"../Topic/WPF%20Architecture.md\" data-linktype=\"relative-path\">WPF Architecture</a>.  </p>\n<p> FrameworkElement extends <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a> and adds the following capabilities:  </p>\n<ul>\n<li><p><strong>Layout system definition</strong>: FrameworkElement provides specific WPF framework-level implementations for certain methods that were defined as virtual members in  <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a>. Most notably, FrameworkElement seals certain WPF core-level layout overrides, and instead provides a WPF framework-level equivalent that derived classes should override instead. For example, FrameworkElement seals <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ArrangeCore_\" data-linktype=\"relative-path\">ArrangeCore</a> but provides <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ArrangeOverride_\" data-linktype=\"relative-path\">ArrangeOverride</a>. These changes reflect the fact that at the WPF framework-level there is a full layout system in place that can render any FrameworkElement derived class. At the WPF core level, certain members that will structure a general WPF based layout solution are in place, but the actual engine of the layout system is not defined. For more information, see <a href=\"../Topic/Layout.md\" data-linktype=\"relative-path\">Layout</a>.  </p>\n</li>\n<li><p><strong>The logical tree:</strong> The general WPF programming model is often expressed in terms of being a tree of elements. Support for expressing the tree of elements as a logical tree, and accompanying support for defining that tree in markup is implemented at the FrameworkElement level. Note however that FrameworkElement deliberately does not define a content model, and leaves that responsibility to derived classes. For more information, see <a href=\"../Topic/Trees%20in%20WPF.md\" data-linktype=\"relative-path\">Trees in WPF</a>.  </p>\n</li>\n<li><p><strong>Object lifetime events:</strong> It is often useful to know when an element is initialized (the constructor is called) or when the element is first loaded into a logical tree. FrameworkElement defines several events related to object lifetime that provide useful hooks for code-behind operations that involve elements, such as adding more child elements. For more information, see <a href=\"../Topic/Object%20Lifetime%20Events.md\" data-linktype=\"relative-path\">Object Lifetime Events</a>.  </p>\n</li>\n<li><p><strong>Support for data binding and dynamic resource references:</strong> The property-level support for data binding and resources is implemented by the <a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a> class and embodied in the property system, but the ability to resolve a member value that is stored as an <a class=\"xref\" href=\"system.windows.expression\" data-linktype=\"relative-path\">Expression</a> (the programming construct that underlies both data binding and dynamic resources) is implemented by FrameworkElement. For more information, see <a href=\"../Topic/Data%20Binding%20Overview.md\" data-linktype=\"relative-path\">Data Binding Overview</a> and <a href=\"../Topic/XAML%20Resources.md\" data-linktype=\"relative-path\">XAML Resources</a>.  </p>\n</li>\n<li><p><strong>Styles:</strong> FrameworkElement defines the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Style_\" data-linktype=\"relative-path\">Style</a> property. However, FrameworkElement does not yet define support for templates, or support decorators. These features are introduced by control classes such as <a class=\"xref\" href=\"system.windows.controls.control\" data-linktype=\"relative-path\">Control</a> and <a class=\"xref\" href=\"system.windows.controls.contentcontrol\" data-linktype=\"relative-path\">ContentControl</a>.  </p>\n</li>\n<li><p><strong>More animation support:</strong> Some animation support was already defined at the WPF core level, but FrameworkElement extends this by implementing <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_BeginStoryboard_\" data-linktype=\"relative-path\">BeginStoryboard</a> and related members.  </p>\n<p>As can be seen from the class hierarchy, many WPF classes derive from FrameworkElement, either directly or through intermediate base classes such as <a class=\"xref\" href=\"system.windows.controls.panel\" data-linktype=\"relative-path\">Panel</a> or <a class=\"xref\" href=\"system.windows.controls.control\" data-linktype=\"relative-path\">Control</a>.  </p>\n<p>If you intend to use FrameworkElement as a base class, you might want to first examine the existing derived classes. FrameworkElement provides support for a number of basic scenarios, but also lacks a number of features that are desirable for an &quot;element&quot; in the sense of a building block that you use to create user interface (UI) in Extensible Application Markup Language (XAML). For instance, a FrameworkElement does not define any true content model; FrameworkElement as a base class does not define a property that can create XAML child elements. In particular, you might want to look at <a class=\"xref\" href=\"system.windows.controls.control\" data-linktype=\"relative-path\">Control</a> and <a class=\"xref\" href=\"system.windows.controls.contentcontrol\" data-linktype=\"relative-path\">ContentControl</a>.</p>\n</li>\n</ul>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Constructors\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement__ctor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FrameworkElement()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Initializes a new instance of the <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public FrameworkElement ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Fields\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ActualHeightProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ActualHeightProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.ActualHeight*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty ActualHeightProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ActualWidthProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ActualWidthProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.ActualWidth*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty ActualWidthProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_BindingGroupProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BindingGroupProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.BindingGroup*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty BindingGroupProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ContextMenuClosingEvent\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ContextMenuClosingEvent</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ContextMenuClosing\" data-linktype=\"relative-path\">ContextMenuClosing</a> routed event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.RoutedEvent ContextMenuClosingEvent;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  </p>\n<p> For more information about registering routed events, see <a class=\"xref\" href=\"system.windows.eventmanager#System_Windows_EventManager_RegisterRoutedEvent_\" data-linktype=\"relative-path\">RegisterRoutedEvent</a>. For more information about using routed event identifiers to add class handlers, see <a class=\"xref\" href=\"system.windows.eventmanager#System_Windows_EventManager_RegisterClassHandler_\" data-linktype=\"relative-path\">RegisterClassHandler</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ContextMenuOpeningEvent\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ContextMenuOpeningEvent</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ContextMenuOpening\" data-linktype=\"relative-path\">ContextMenuOpening</a> routed event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.RoutedEvent ContextMenuOpeningEvent;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  </p>\n<p> For more information about registering routed events, see <a class=\"xref\" href=\"system.windows.eventmanager#System_Windows_EventManager_RegisterRoutedEvent_\" data-linktype=\"relative-path\">RegisterRoutedEvent</a>. For more information about using routed event identifiers to add class handlers, see <a class=\"xref\" href=\"system.windows.eventmanager#System_Windows_EventManager_RegisterClassHandler_\" data-linktype=\"relative-path\">RegisterClassHandler</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ContextMenuProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ContextMenuProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.ContextMenu*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty ContextMenuProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_CursorProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">CursorProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.Cursor*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty CursorProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_DataContextProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataContextProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.DataContext*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty DataContextProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_DefaultStyleKeyProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultStyleKeyProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.DefaultStyleKey*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected static readonly System.Windows.DependencyProperty DefaultStyleKeyProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_FlowDirectionProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FlowDirectionProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.FlowDirection*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty FlowDirectionProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_FocusVisualStyleProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FocusVisualStyleProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.FocusVisualStyle*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty FocusVisualStyleProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ForceCursorProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ForceCursorProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.ForceCursor*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty ForceCursorProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_HeightProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HeightProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.Height*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty HeightProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_HorizontalAlignmentProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HorizontalAlignmentProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.HorizontalAlignment*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty HorizontalAlignmentProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_InputScopeProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InputScopeProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.InputScope*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty InputScopeProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_LanguageProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LanguageProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.Language*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty LanguageProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_LayoutTransformProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LayoutTransformProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.LayoutTransform*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty LayoutTransformProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_LoadedEvent\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LoadedEvent</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Loaded\" data-linktype=\"relative-path\">Loaded</a> routed event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.RoutedEvent LoadedEvent;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  </p>\n<p> For more information about registering routed events, see <a class=\"xref\" href=\"system.windows.eventmanager#System_Windows_EventManager_RegisterRoutedEvent_\" data-linktype=\"relative-path\">RegisterRoutedEvent</a>. For more information about using routed event identifiers to add class handlers, see <a class=\"xref\" href=\"system.windows.eventmanager#System_Windows_EventManager_RegisterClassHandler_\" data-linktype=\"relative-path\">RegisterClassHandler</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_MarginProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MarginProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.Margin*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty MarginProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_MaxHeightProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MaxHeightProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.MaxHeight*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty MaxHeightProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_MaxWidthProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MaxWidthProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.MaxWidth*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty MaxWidthProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_MinHeightProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MinHeightProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.MinHeight*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty MinHeightProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_MinWidthProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MinWidthProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.MinWidth*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty MinWidthProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_NameProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">NameProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.Name*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty NameProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_OverridesDefaultStyleProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OverridesDefaultStyleProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.OverridesDefaultStyle*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty OverridesDefaultStyleProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_RequestBringIntoViewEvent\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RequestBringIntoViewEvent</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_RequestBringIntoView\" data-linktype=\"relative-path\">RequestBringIntoView</a> routed event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.RoutedEvent RequestBringIntoViewEvent;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_SizeChangedEvent\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SizeChangedEvent</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_SizeChanged\" data-linktype=\"relative-path\">SizeChanged</a> routed event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.RoutedEvent SizeChangedEvent;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  </p>\n<p> For more information about registering routed events, see <a class=\"xref\" href=\"system.windows.eventmanager#System_Windows_EventManager_RegisterRoutedEvent_\" data-linktype=\"relative-path\">RegisterRoutedEvent</a>. For more information about using routed event identifiers to add class handlers, see <a class=\"xref\" href=\"system.windows.eventmanager#System_Windows_EventManager_RegisterClassHandler_\" data-linktype=\"relative-path\">RegisterClassHandler</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_StyleProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">StyleProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.Style*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty StyleProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_TagProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TagProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.Tag*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty TagProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ToolTipClosingEvent\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToolTipClosingEvent</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ToolTipClosing\" data-linktype=\"relative-path\">ToolTipClosing</a> routed event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.RoutedEvent ToolTipClosingEvent;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  </p>\n<p> For more information about registering routed events, see <a class=\"xref\" href=\"system.windows.eventmanager#System_Windows_EventManager_RegisterRoutedEvent_\" data-linktype=\"relative-path\">RegisterRoutedEvent</a>. For more information about using routed event identifiers to add class handlers, see <a class=\"xref\" href=\"system.windows.eventmanager#System_Windows_EventManager_RegisterClassHandler_\" data-linktype=\"relative-path\">RegisterClassHandler</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ToolTipOpeningEvent\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToolTipOpeningEvent</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ToolTipOpening\" data-linktype=\"relative-path\">ToolTipOpening</a> routed event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.RoutedEvent ToolTipOpeningEvent;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  </p>\n<p> For more information about registering routed events, see <a class=\"xref\" href=\"system.windows.eventmanager#System_Windows_EventManager_RegisterRoutedEvent_\" data-linktype=\"relative-path\">RegisterRoutedEvent</a>. For more information about using routed event identifiers to add class handlers, see <a class=\"xref\" href=\"system.windows.eventmanager#System_Windows_EventManager_RegisterClassHandler_\" data-linktype=\"relative-path\">RegisterClassHandler</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ToolTipProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToolTipProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.ToolTip*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty ToolTipProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_UnloadedEvent\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UnloadedEvent</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Unloaded\" data-linktype=\"relative-path\">Unloaded</a> routed event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.RoutedEvent UnloadedEvent;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers.  </p>\n<p> For more information about registering routed events, see <a class=\"xref\" href=\"system.windows.eventmanager#System_Windows_EventManager_RegisterRoutedEvent_\" data-linktype=\"relative-path\">RegisterRoutedEvent</a>. For more information about using routed event identifiers to add class handlers, see <a class=\"xref\" href=\"system.windows.eventmanager#System_Windows_EventManager_RegisterClassHandler_\" data-linktype=\"relative-path\">RegisterClassHandler</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_UseLayoutRoundingProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UseLayoutRoundingProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.UseLayoutRounding*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty UseLayoutRoundingProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_VerticalAlignmentProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">VerticalAlignmentProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.VerticalAlignment*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty VerticalAlignmentProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_WidthProperty\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">WidthProperty</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Identifies the <span class=\"xref\">stem.Windows.FrameworkElement.Width*</span> dependency property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static readonly System.Windows.DependencyProperty WidthProperty;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ActualHeight\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ActualHeight</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the rendered height of this element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public double ActualHeight { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The element&#39;s height, as a value in device-independent units (1/96th inch per unit). The default value is 0 (zero).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is a calculated value based on other height inputs, and the layout system. The value is set by the layout system itself, based on an actual rendering pass, and may therefore lag slightly behind the set value of properties such as <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Height_\" data-linktype=\"relative-path\">Height</a> that are the basis of the input change.  </p>\n<p> Because ActualHeight is a calculated value, you should be aware that there could be multiple or incremental reported changes to it as a result of various operations by the layout system. The layout system may be calculating required measure space for child elements, constraints by the parent element, and so on.  </p>\n<p> Although you cannot set this property from XAML, you can base a <a class=\"xref\" href=\"system.windows.trigger\" data-linktype=\"relative-path\">Trigger</a> upon its value in a style.  </p>\n<p><a name=\"dependencyPropertyInfo_ActualHeight\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ActualHeightProperty\" data-linktype=\"relative-path\">ActualHeightProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ActualWidth\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ActualWidth</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the rendered width of this element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public double ActualWidth { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The element&#39;s width, as a value in device-independent units (1/96th inch per unit). The default value is 0 (zero).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is a calculated value based on other width inputs, and the layout system. The value is set by the layout system itself, based on an actual rendering pass, and may therefore lag slightly behind the set value of properties such as <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Width_\" data-linktype=\"relative-path\">Width</a> that are the basis of the input change.  </p>\n<p> Because ActualWidth is a calculated value, you should be aware that there could be multiple or incremental reported changes to it as a result of various operations by the layout system. The layout system may be calculating required measure space for child elements, constraints by the parent element, and so on.  </p>\n<p> Although you cannot set this property from XAML, you can base a <a class=\"xref\" href=\"system.windows.trigger\" data-linktype=\"relative-path\">Trigger</a> upon its value in a style.  </p>\n<p><a name=\"dependencyPropertyInfo_ActualWidth\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ActualWidthProperty\" data-linktype=\"relative-path\">ActualWidthProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_BindingGroup\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BindingGroup</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the <a class=\"xref\" href=\"system.windows.data.bindinggroup\" data-linktype=\"relative-path\">BindingGroup</a> that is used for the element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Data.BindingGroup BindingGroup { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.data.bindinggroup\" data-linktype=\"relative-path\">BindingGroup</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.data.bindinggroup\" data-linktype=\"relative-path\">BindingGroup</a> that is used for the element.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.data.bindinggroup\" data-linktype=\"relative-path\">BindingGroup</a> can be used to validate the values of multiple properties of an object. For example, suppose that an application prompts the user to enter an address and then populates an object of type <code>Address</code>, which has the properties <code>Street</code>, <code>City</code>, <code>ZipCode</code>, and <code>Country</code>, with the values that the user provided. The application has a panel that contains four <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a> controls, each of which is bound to one of the object’s properties. You can use a <a class=\"xref\" href=\"system.windows.controls.validationrule\" data-linktype=\"relative-path\">ValidationRule</a> in a <a class=\"xref\" href=\"system.windows.data.bindinggroup\" data-linktype=\"relative-path\">BindingGroup</a> to validate the <code>Address</code> object. For example, the <a class=\"xref\" href=\"system.windows.controls.validationrule\" data-linktype=\"relative-path\">ValidationRule</a> can ensure that the zip code is valid for the country of the address.  </p>\n<p> Child elements inherit the <a class=\"xref\" href=\"system.windows.data.bindinggroup\" data-linktype=\"relative-path\">BindingGroup</a> from their parent elements, just as with any other inheritable property.  </p>\n<p><a name=\"dependencyPropertyInfo_BindingGroup\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_BindingGroupProperty\" data-linktype=\"relative-path\">BindingGroupProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <strong>true</strong></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_Inherits_\" data-linktype=\"relative-path\">Inherits</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ContextMenu\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ContextMenu</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Controls.ContextMenu ContextMenu { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.controls.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The context menu assigned to this element.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p><a class=\"xref\" href=\"system.windows.controls.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> itself is a <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> derived class, and it is technically possible for <a class=\"xref\" href=\"system.windows.controls.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> itself to have a ContextMenu property. However, this creates a confusing context menu experience for the user and this practice is not recommended.  </p>\n<p><a name=\"dependencyPropertyInfo_ContextMenu\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ContextMenuProperty\" data-linktype=\"relative-path\">ContextMenuProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_Cursor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Cursor</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the cursor that displays when the mouse pointer is over this element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Input.Cursor Cursor { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.cursor\" data-linktype=\"relative-path\">Cursor</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The cursor to display. The default value is defined as <code>null</code> per this dependency property. However, the practical default at run time will come from a variety of factors.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When you set this property in XAML, the XAML processor relies on type conversion for the <a class=\"xref\" href=\"system.windows.input.cursor\" data-linktype=\"relative-path\">Cursor</a> class to evaluate the string. The provided string should evaluate to a <a class=\"xref\" href=\"system.windows.input.cursortype\" data-linktype=\"relative-path\">CursorType</a> value. See <a class=\"xref\" href=\"system.windows.input.cursor\" data-linktype=\"relative-path\">Cursor</a> for details.  </p>\n<p> Whether the cursor as established by this property will or will not display when the mouse pointer is over this element is also dependent on the value of the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ForceCursor_\" data-linktype=\"relative-path\">ForceCursor</a> property. Also, event-related considerations such as an active drag, mouse capture, text editing modes within controls, and so on, will also affect the cursor with higher priority than the value you specify in this property.  </p>\n<p> To revert the behavior of setting this property to the eventual default, set it to <code>null</code> again.  </p>\n<p> The <code>null</code> default really means that determination of the practical cursor value is deferred here and should be obtained from elsewhere. If presented without programmatic values from any source, the default cursor that is visually over a Windows Presentation Foundation (WPF) application will be an arrow. However, the transient cursor changes are not set to the Cursor values of the elements when they are passed over. The Cursor property will only report non null values in cases where it was actually set, for instance through code or a style. Each movement of the mouse over a WPF application raises a <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_QueryCursor\" data-linktype=\"relative-path\">QueryCursor</a> event. The event bubbles, and any element along the route has the opportunity to handle the event and to set the value of the cursor through the arguments of this event. This is the mechanism that produces the visually apparent cursor in most cases. If a <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_QueryCursor\" data-linktype=\"relative-path\">QueryCursor</a> handler returns a cursor result, then the fact that the event is handled and has a changed value in the arguments takes precedence over the value of the Cursor property at any level, unless <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ForceCursor_\" data-linktype=\"relative-path\">ForceCursor</a> is set.  </p>\n<p> If not are not creating a custom cursor, you typically set this property to a static property value of the <a class=\"xref\" href=\"system.windows.input.cursors\" data-linktype=\"relative-path\">Cursors</a> class. Setting Cursor in code requires one of the following:  </p>\n<ul>\n<li><p>Call the <a class=\"xref\" href=\"system.windows.input.cursor\" data-linktype=\"relative-path\">Cursor</a> constructor to get a <a class=\"xref\" href=\"system.windows.input.cursor\" data-linktype=\"relative-path\">Cursor</a> instance. Both signatures of the <a class=\"xref\" href=\"system.windows.input.cursor\" data-linktype=\"relative-path\">Cursor</a> constructor use streams or files, in anticipation that you are creating the <a class=\"xref\" href=\"system.windows.input.cursor\" data-linktype=\"relative-path\">Cursor</a> object for a custom cursor.  </p>\n</li>\n<li><p>Use the <a class=\"xref\" href=\"system.windows.input.cursorconverter\" data-linktype=\"relative-path\">CursorConverter</a> class and its <a class=\"xref\" href=\"system.windows.input.cursorconverter#System_Windows_Input_CursorConverter_ConvertFrom_\" data-linktype=\"relative-path\">ConvertFrom</a> method to specify a cursor by <a class=\"xref\" href=\"system.windows.input.cursortype\" data-linktype=\"relative-path\">CursorType</a>, or a string that can evaluate to a <a class=\"xref\" href=\"system.windows.input.cursortype\" data-linktype=\"relative-path\">CursorType</a>, and cast the return to <a class=\"xref\" href=\"system.windows.input.cursor\" data-linktype=\"relative-path\">Cursor</a>.  </p>\n<p>Setting the <a class=\"xref\" href=\"system.windows.input.cursor\" data-linktype=\"relative-path\">Cursor</a> to a custom value is not enabled in partial trust. For more information on custom cursors, see <a href=\"../Topic/Input%20Overview.md\" data-linktype=\"relative-path\">Input Overview</a>.  </p>\n</li>\n</ul>\n<p><a name=\"dependencyPropertyInfo_Cursor\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_CursorProperty\" data-linktype=\"relative-path\">CursorProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_DataContext\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataContext</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the data context for an element when it participates in data binding.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object DataContext { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The object to use as data context.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p><em>Data context</em> is a concept that allows elements to inherit information from their parent elements about the data source that is used for binding, as well as other characteristics of the binding, such as the path.  </p>\n<p> Data context can be set directly to a common language runtime (CLR) object, with the bindings evaluating to properties of that object. Alternatively, you can set the data context to a <a class=\"xref\" href=\"system.windows.data.datasourceprovider\" data-linktype=\"relative-path\">DataSourceProvider</a> object.  </p>\n<p> This dependency property inherits property values. If there are child elements without other values for DataContext established through local values or styles, then the property system will set the value to be the DataContext value of the nearest parent element with this value assigned.  </p>\n<p> Alternatively, you can use one of the following properties of the <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> class to specify the binding source explicitly: <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_ElementName_\" data-linktype=\"relative-path\">ElementName</a>, <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_Source_\" data-linktype=\"relative-path\">Source</a>, or <a class=\"xref\" href=\"system.windows.data.binding#System_Windows_Data_Binding_RelativeSource_\" data-linktype=\"relative-path\">RelativeSource</a>. For more information, see <a href=\"../Topic/How%20to:%20Specify%20the%20Binding%20Source.md\" data-linktype=\"relative-path\">How to: Specify the Binding Source</a>.  </p>\n<p> In XAML, DataContext is most typically set to as a <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> declaration. You can use either property element syntax or attribute syntax. Attribute syntax is shown in the example on this page. You can also use code to set DataContext.  </p>\n<p> DataContext is a bindable property, to facilitate scenarios where one context might be bound to another. However, if you bind to DataContext, be careful to not create circular binding references (do not bind a DataContext to itself, which is possible to do because of the property value inheritance nature of the DataContext property).  </p>\n<p><a name=\"xamlPropertyElementUsage_DataContext\"></a>   </p>\n<h2 id=\"xaml-property-element-usage\">XAML Property Element Usage</h2>\n<pre><code>&lt;object&gt;  \n  &lt;object.DataContext&gt;  \n    &lt;dataContextObject /&gt;  \n  &lt;/object.DataContext&gt;  \n&lt;/object&gt;  \n</code></pre><p><a name=\"xamlAttributeUsage_DataContext\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object DataContext=&quot;bindingUsage&quot;/&gt;  \n- or -  \n&lt;object DataContext=&quot;{resourceExtension contextResourceKey}&quot;/&gt;  \n</code></pre><p><a name=\"xamlValues_DataContext\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>dataContextObject</em><br> A directly embedded object that serves as data context for any bindings within the parent element. Typically, this object is a <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> or another <a class=\"xref\" href=\"system.windows.data.bindingbase\" data-linktype=\"relative-path\">BindingBase</a> derived class. Alternatively, raw data of any CLR object type intended for binding may be placed here, with the actual bindings defined later.  </p>\n<p> <em>bindingUsage</em><br> A binding usage that evaluates to an appropriate data context. For details, see <a href=\"../Topic/Binding%20Markup%20Extension.md\" data-linktype=\"relative-path\">Binding Markup Extension</a>.  </p>\n<p> <em>resourceExtension</em><br> One of the following:  or . This usage is used when referring to raw data defined as an object in resources. See <a href=\"../Topic/XAML%20Resources.md\" data-linktype=\"relative-path\">XAML Resources</a>.  </p>\n<p> <em>contextResourceKey</em><br> The key identifier for the object being requested from within a <a class=\"xref\" href=\"system.windows.resourcedictionary\" data-linktype=\"relative-path\">ResourceDictionary</a>.  </p>\n<p><a name=\"dependencyPropertyInfo_DataContext\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_DataContextProperty\" data-linktype=\"relative-path\">DataContextProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_Inherits_\" data-linktype=\"relative-path\">Inherits</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_DefaultStyleKey\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DefaultStyleKey</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the key to use to reference the style for this control, when theme styles are used or defined.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected object DefaultStyleKey { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The style key. To work correctly as part of theme style lookup, this value is expected to be the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the control being styled.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is typically not set through any of its direct property accessors. Instead, you override the type-specific metadata of this dependency property every time you create a new <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> derived class. When you derive a control, call the <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_OverrideMetadata_\" data-linktype=\"relative-path\">OverrideMetadata</a> method against the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_DefaultStyleKeyProperty\" data-linktype=\"relative-path\">DefaultStyleKeyProperty</a> identifier, within the static constructor of the control derived class (or equivalent class initialization).  </p>\n<p> A control typically overrides the default value of this property to be its own type, but in some cases could also use a base type for which a style in the theme dictionaries exists. This is only practical if the control templates of the base control entirely define the visual representation of that derived control, and if whatever additional members the derived types expose do not require additional elements as part of the control template.  </p>\n<p> If you want your element or control to deliberately not use theme styles, set the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_OverridesDefaultStyle_\" data-linktype=\"relative-path\">OverridesDefaultStyle</a> property to <code>true</code>.  </p>\n<p><a name=\"dependencyPropertyInfo_DefaultStyleKey\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_DefaultStyleKeyProperty\" data-linktype=\"relative-path\">DefaultStyleKeyProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsMeasure_\" data-linktype=\"relative-path\">AffectsMeasure</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_FlowDirection\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FlowDirection</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the direction that text and other user interface (UI) elements flow within any parent element that controls their layout.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.FlowDirection FlowDirection { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.flowdirection\" data-linktype=\"relative-path\">FlowDirection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The direction that text and other UI elements flow within their parent element, as a value of the enumeration. The default value is <a class=\"xref\" href=\"system.windows.flowdirection\" data-linktype=\"relative-path\">FlowDirection</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The dependency property usage sets the FlowDirection on this element. Because of property value inheritance, setting FlowDirection on an element can potentially set FlowDirection on all child elements that did not set FlowDirection locally or though other means such as styles.  </p>\n<p> This property is not automatically set as part of any application culture information, because an element might contain content that is not necessarily intended to obey the general flow direction implied by the culture information. For more information on globalization considerations, see <a href=\"../Topic/Globalization%20for%20WPF.md\" data-linktype=\"relative-path\">Globalization for WPF</a>.  </p>\n<p> This property has a defined common language runtime (CLR) property accessor, so it functions as a dependency property. However, it is also registered as attached, so it can also function as an attached property. The attached registration is mainly so that property value inheritance is supported, but the property can also be used as a true attached property. The attached property usage is only relevant if the object you intend to set the flow direction on has a <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> parent element that performs layout upon it, is itself not a <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a>, and does not already have a more directly defined <code>FlowDirection</code> property. (Some of the flow document classes such as <a class=\"xref\" href=\"system.windows.documents.block\" data-linktype=\"relative-path\">Block</a> and <a class=\"xref\" href=\"system.windows.documents.inline\" data-linktype=\"relative-path\">Inline</a> define their own <code>FlowDirection</code>, and this property can also set the flow direction. The property value is then read by the eventual content host without requiring attached property usage.)  </p>\n<p><a name=\"xamlAttributeUsage_FlowDirection\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<p> &lt;<em>object</em> <strong>FlowDirection</strong>=&quot;<a class=\"xref\" href=\"system.windows.flowdirection\" data-linktype=\"relative-path\">FlowDirection</a>&quot;/&gt;  </p>\n<p><a name=\"xamlTextUsage_FlowDirection\"></a>   </p>\n<h2 id=\"xaml-text-usage\">XAML Text Usage</h2>\n<p> This property can also be set on classes that are not <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> derived classes, by the following XAML attached property usage:  </p>\n<p> <code>&lt;</code> <em>object</em> <code>FrameworkElement.</code><strong>FlowDirection</strong>=&quot;<a class=\"xref\" href=\"system.windows.flowdirection\" data-linktype=\"relative-path\">FlowDirection</a><code>&quot;/&gt;</code>  </p>\n<p><a name=\"dependencyPropertyInfo_FlowDirection\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_FlowDirectionProperty\" data-linktype=\"relative-path\">FlowDirectionProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsMeasure_\" data-linktype=\"relative-path\">AffectsMeasure</a>, <a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsParentArrange_\" data-linktype=\"relative-path\">AffectsParentArrange</a>, <a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_Inherits_\" data-linktype=\"relative-path\">Inherits</a></td>\n</tr>\n</tbody>\n</table>\n<p> This property is both a dependency property and an attached property; see Remarks.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_FocusVisualStyle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FocusVisualStyle</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Style FocusVisualStyle { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The desired style to apply on focus. The default value as declared in the dependency property is an empty static <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a>. However, the effective value at run time is often (but not always) a style as supplied by theme support for controls.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property affects visual appearance but does not report <a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsRender_\" data-linktype=\"relative-path\">AffectsRender</a> in metadata. This is because the visual appearance change is event-driven and may not apply at all times, and therefore should not generally report any visual or layout information in metadata.  </p>\n<p> Conceptually, the visual behavior of focus applied to a control should be coherent from control to control. The most sensible way to enforce coherence is to only change the focus visual style if you are composing an entire theme. Setting this property on individual control styles and not as part of a theme is not the intended usage of this property, because it may lead to a confusing user experience regarding keyboard focus. If you are intending control-specific behavior that is deliberately not coherent across a theme, a much better approach is to use triggers in styles for individual input state properties, such as <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsFocused_\" data-linktype=\"relative-path\">IsFocused</a> or <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_IsKeyboardFocusWithin_\" data-linktype=\"relative-path\">IsKeyboardFocusWithin</a>, and to do so in a way that does not visually interfere with any existing focus visual style. For more information on the design intention of FocusVisualStyle and alternative focus properties, see <a href=\"../Topic/Styling%20for%20Focus%20in%20Controls,%20and%20FocusVisualStyle.md\" data-linktype=\"relative-path\">Styling for Focus in Controls, and FocusVisualStyle</a>.  </p>\n<p><a name=\"xamlAttributeUsage_FocusVisualStyle\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object FocusVisualStyle=&quot;{resourceExtension styleResourceKey}&quot;/&gt;  \n</code></pre><p><a name=\"xamlPropertyElementUsage_FocusVisualStyle\"></a>   </p>\n<h2 id=\"xaml-property-element-usage\">XAML Property Element Usage</h2>\n<p><a name=\"xamlValues_FocusVisualStyle\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>resourceExtension</em><br> One of the following: , or . See <a href=\"../Topic/XAML%20Resources.md\" data-linktype=\"relative-path\">XAML Resources</a>.  </p>\n<p> <em>styleResourceKey</em><br> The key that identifies the style being requested. The key refers to an existing resource in a <a class=\"xref\" href=\"system.windows.resourcedictionary\" data-linktype=\"relative-path\">ResourceDictionary</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Property element syntax is technically possible, but not recommended. See <a href=\"../Topic/Inline%20Styles%20and%20Templates.md\" data-linktype=\"relative-path\">Inline Styles and Templates</a>. A binding reference using  or <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> is also possible, but uncommon.  </p>\n</div>\n<p><a name=\"dependencyPropertyInfo_FocusVisualStyle\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_FocusVisualStyleProperty\" data-linktype=\"relative-path\">FocusVisualStyleProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ForceCursor\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ForceCursor</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value that indicates whether this <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> should force the user interface (UI) to render the cursor as declared by the <span class=\"xref\">stem.Windows.FrameworkElement.Cursor*</span> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool ForceCursor { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if cursor presentation while over this element is forced to use current <span class=\"xref\">stem.Windows.FrameworkElement.Cursor*</span> settings for the cursor (including on all child elements); otherwise <code>false</code>. The default value is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If you set this property to <code>true</code> you will override the cursor preferences established by child elements. Doing so in general application UI might be confusing for the user, particularly if child elements are attempting to specify cursors. Setting ForceCursor is more appropriate in control subclassing or compositing scenarios.  </p>\n<p><a name=\"dependencyPropertyInfo_ForceCursor\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ForceCursorProperty\" data-linktype=\"relative-path\">ForceCursorProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_Height\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Height</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the suggested height of the element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public double Height { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The height of the element, in device-independent units (1/96th inch per unit). The default value is <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>. This value must be equal to or greater than 0.0. See Remarks for upper bound information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Height is one of three writable properties on <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> that specify height information. The other two are <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MinHeight_\" data-linktype=\"relative-path\">MinHeight</a> and <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MaxHeight_\" data-linktype=\"relative-path\">MaxHeight</a>. If there is a conflict between these values, the order of application for actual height determination is that first <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MinHeight_\" data-linktype=\"relative-path\">MinHeight</a> must be honored, then <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MaxHeight_\" data-linktype=\"relative-path\">MaxHeight</a>, and finally, if it is within bounds, Height.  </p>\n<p> If this element is a child element within some other element, then setting this property to a value is really only a suggested value. The layout system as well as the particular layout logic of the parent element will use the value as a nonbinding input during the layout process. In practical terms, a <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> is almost always the child element of something else; even when you set the Height on <a class=\"xref\" href=\"system.windows.window\" data-linktype=\"relative-path\">Window</a>. (For <a class=\"xref\" href=\"system.windows.window\" data-linktype=\"relative-path\">Window</a>, that value is used when the underlying application model establishes the basic rendering assumptions that create the Hwnd that hosts the application.)  </p>\n<p> In addition to acceptable <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> values, this property can also be <a class=\"xref\" href=\"system.double#System_Double_NaN\" data-linktype=\"relative-path\">System.Double.NaN</a>. This is how you specify auto sizing behavior in code. In XAML you set the value to the string &quot;Auto&quot; (case insensitive) to enable the auto sizing behavior. Auto sizing behavior implies that the element will fill the height available to it. Note however that specific controls frequently supply default values through their default theme styles that will disable the auto sizing behavior unless it is specifically re-enabled.  </p>\n<p> The return value of this property is always the same as any value that was set to it. In contrast, the value of the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ActualHeight_\" data-linktype=\"relative-path\">ActualHeight</a> may vary. This can happen either statically because the layout rejected the suggested size for some reason, or momentarily. The layout system itself works asynchronously relative to the property system&#39;s set of Height and may not have processed that particular sizing property change yet.  </p>\n<p> The value restrictions on the <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> value are enforced by a <a class=\"xref\" href=\"system.windows.validatevaluecallback\" data-linktype=\"relative-path\">ValidateValueCallback</a> mechanism. If you attempt to set an invalid value, a run-time exception is thrown.  </p>\n<p> In addition to the validation check, there is a nondeterministic upper value bound for Height that is enforced by the layout system (this is a very large number, larger than <a class=\"xref\" href=\"system.single#System_Single_MaxValue\" data-linktype=\"relative-path\">System.Single.MaxValue</a> but smaller than <a class=\"xref\" href=\"system.double#System_Double_MaxValue\" data-linktype=\"relative-path\">System.Double.MaxValue</a>). If you exceed this bound, the element will not render, and no exception is thrown. Do not set Height to a value that is significantly larger than the maximum size of any possible visual display, or you may exceed this nondeterministic upper bound.  </p>\n<p><a name=\"xamlAttributeUsage_Height\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object Height=&quot;double&quot;/&gt;  \n- or -  \n&lt;object Height=&quot;qualifiedDouble&quot;/&gt;  \n- or -  \n&lt;object Height=&quot;Auto&quot;/&gt;  \n</code></pre><p><a name=\"xamlValues_Height\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>double</em>  </p>\n <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>  \n\n<p> String representation of a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> value equal to or greater than 0.0. See Remarks for upper bound information. This value is interpreted as a device-independent unit (1/96th inch) measurement. Strings need not explicitly include decimal points. For instance a value of <code>1</code> is acceptable.  </p>\n<p> <em>qualifiedDouble</em><br> A <em>double</em> value as described above, followed by one of the following unit declaration strings: <code>px</code>, <code>in</code>, <code>cm</code>, <code>pt</code>.  </p>\n<p> <code>px</code> (default) is device-independent units (1/96th inch per unit)  </p>\n<p> <code>in</code> is inches; 1in==96px  </p>\n<p> <code>cm</code> is centimeters; 1cm==(96/2.54) px  </p>\n<p> <code>pt</code> is points; 1pt==(96/72) px  </p>\n<p> <strong>Auto</strong><br> Enables autosizing behavior. See Remarks.  </p>\n<p><a name=\"dependencyPropertyInfo_Height\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_HeightProperty\" data-linktype=\"relative-path\">HeightProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsMeasure_\" data-linktype=\"relative-path\">AffectsMeasure</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_HorizontalAlignment\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">HorizontalAlignment</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the horizontal alignment characteristics applied to this element when it is composed within a parent element, such as a panel or items control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.HorizontalAlignment HorizontalAlignment { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A horizontal alignment setting, as a value of the enumeration. The default is <a class=\"xref\" href=\"system.windows.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Height_\" data-linktype=\"relative-path\">Height</a> and <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Width_\" data-linktype=\"relative-path\">Width</a> properties are explicitly set on an element, these measurements take higher precedent during layout and will cancel the typical effects of setting HorizontalAlignment to <a class=\"xref\" href=\"system.windows.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a>.  </p>\n<p> HorizontalAlignment is the Microsoft .NET property accessor for what is in reality a dependency property. This particular dependency property quite frequently has its apparent &quot;default&quot; value set differently in subclassed elements, particularly controls. This generally occurs in one of two ways: the dependency property is re-registered to a particular subclass, but with different metadata for setting its defaults; or there is a default style being applied that sets that dependency property value differently. For example, the apparent &quot;default&quot; of HorizontalAlignment for a <a class=\"xref\" href=\"system.windows.controls.label\" data-linktype=\"relative-path\">Label</a> control will be <a class=\"xref\" href=\"system.windows.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a>, even though <a class=\"xref\" href=\"system.windows.controls.label\" data-linktype=\"relative-path\">Label</a> inherits HorizontalAlignment direct from <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a>. This is because that value was reset within the default style of <a class=\"xref\" href=\"system.windows.controls.label\" data-linktype=\"relative-path\">Label</a>, within the style&#39;s control template.  </p>\n<p> <a class=\"xref\" href=\"system.windows.controls.canvas\" data-linktype=\"relative-path\">Canvas</a> does not use HorizontalAlignment when composing layout, because <a class=\"xref\" href=\"system.windows.controls.canvas\" data-linktype=\"relative-path\">Canvas</a> is based on absolute positioning.  </p>\n<p> When inherited by <a class=\"xref\" href=\"system.windows.controls.label\" data-linktype=\"relative-path\">Label</a> or derived classes, <a class=\"xref\" href=\"system.windows.controls.label\" data-linktype=\"relative-path\">Label</a> redefines the default value of this dependency property to be <a class=\"xref\" href=\"system.windows.horizontalalignment\" data-linktype=\"relative-path\">HorizontalAlignment</a>.  </p>\n<p><a name=\"dependencyPropertyInfo_HorizontalAlignment\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_HorizontalAlignmentProperty\" data-linktype=\"relative-path\">HorizontalAlignmentProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsArrange_\" data-linktype=\"relative-path\">AffectsArrange</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_InheritanceBehavior\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InheritanceBehavior</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the scope limits for property value inheritance, resource key lookup, and RelativeSource FindAncestor lookup.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Windows.InheritanceBehavior InheritanceBehavior { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.inheritancebehavior\" data-linktype=\"relative-path\">InheritanceBehavior</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A value of the enumeration. The default is <a class=\"xref\" href=\"system.windows.inheritancebehavior\" data-linktype=\"relative-path\">InheritanceBehavior</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Certain boundaries in the element tree set InheritanceBehavior to deliberately limit the scope of inheritance behavior, to a force resource lookup to check the application resources, or to prevent a RelativeSource FindAncestor lookup from querying the current element or any further. RelativeSource FindAncestor lookup occurs when a binding uses a <a class=\"xref\" href=\"system.windows.data.relativesource\" data-linktype=\"relative-path\">RelativeSource</a> that has its <a class=\"xref\" href=\"system.windows.data.relativesource#System_Windows_Data_RelativeSource_Mode_\" data-linktype=\"relative-path\">Mode</a> property set to the <a class=\"xref\" href=\"system.windows.data.relativesourcemode\" data-linktype=\"relative-path\">System.Windows.Data.RelativeSourceMode</a> value.  </p>\n<p> If you want your derived class to set this property, you should do so within the static constructor or in other initialization routines.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_InputScope\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">InputScope</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the context for input used by this <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Input.InputScope InputScope { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.inputscope\" data-linktype=\"relative-path\">InputScope</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The input scope, which modifies how input from alternative input methods is interpreted. The default value is <code>null</code> (which results in a default handling of commands).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This dependency property inherits property values. If there are child elements without other values for InputScope established through local values or styles, then the property system will set the value to be the InputScope value of the nearest ancestor element with this value assigned.  </p>\n<p> Although a XAML syntax usage is listed and is syntactically allowed, setting this property in XAML is not common.  </p>\n<p><a name=\"dependencyPropertyInfo_InputScope\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_InputScopeProperty\" data-linktype=\"relative-path\">InputScopeProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_Inherits_\" data-linktype=\"relative-path\">Inherits</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_IsInitialized\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsInitialized</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates whether this element has been initialized, either during processing by a XAML processor, or by explicitly having its <span class=\"xref\">stem.Windows.FrameworkElement.EndInit*</span> method called.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsInitialized { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the element is initialized per the aforementioned XAML processing or method calls; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property may also be <code>true</code> if this element has been moved within the logical tree such that it has a new parent element, and therefore becomes reloaded again.  </p>\n<p> This property is useful if you also are using <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_BeginInit_\" data-linktype=\"relative-path\">BeginInit</a> and <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_EndInit_\" data-linktype=\"relative-path\">EndInit</a>. Elements in the logical tree that is loaded by a XAML processor are assured to be initialized. Elements not in the logical tree are initialized when <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_EndInit_\" data-linktype=\"relative-path\">EndInit</a> is called. In absence of any specific handling of <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_BeginInit_\" data-linktype=\"relative-path\">BeginInit</a> and <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_EndInit_\" data-linktype=\"relative-path\">EndInit</a>, this will happen as soon as the constructor returns the initialized result.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_IsLoaded\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IsLoaded</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a value that indicates whether this element has been loaded for presentation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool IsLoaded { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the current element is attached to an element tree; <code>false</code> if the element has never been attached to a loaded element tree.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>From a newly constructed <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a>, this property starts off <code>false</code>, and remains <code>true</code> after it is set to <code>true</code>, even if the element is subsequently removed from a connected logical tree by code. <code>true</code> state is set by the general presentation logic when elements are loaded into the presentation engine.  </p>\n<p> Typically, loaded elements are rendered, but not all <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> derived classes have a presentation, and other properties such as <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Visibility_\" data-linktype=\"relative-path\">Visibility</a> can influence presentation.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_Language\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Language</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets localization/globalization language information that applies to an element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Markup.XmlLanguage Language { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.markup.xmllanguage\" data-linktype=\"relative-path\">XmlLanguage</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The language information for this element. The default value is an <a class=\"xref\" href=\"system.windows.markup.xmllanguage\" data-linktype=\"relative-path\">XmlLanguage</a> with its <span class=\"xref\">stem.Windows.Markup.XmlLanguage.IetfLanguageTag*</span> value set to the string &quot;en-US&quot;.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The string formats follow the RFC 3066 standard. For example, U.S. English is &quot;en-US&quot;. For more information on the values and format, see <a class=\"xref\" href=\"system.windows.markup.xmllanguage\" data-linktype=\"relative-path\">XmlLanguage</a>.  </p>\n<p> This dependency property inherits property values. If there are child elements without other values for Language established through local values or styles, the property system will set the value to be the Language value of the nearest ancestor element with this value assigned.  </p>\n<p> XML defines the general meaning of the <code>xml:lang</code> attribute. Language essentially exposes the meaning of this attribute as a dependency property. Language can be adjusted programmatically, and can participate in property system value inheritance in a way that parallels how the <code>xml:lang</code> attribute can inherit to child element scope in XML. If you set Language, that value becomes the <code>xml:lang</code> and overwrites any previous value. For more information, see <a href=\"../Topic/xml:lang%20Handling%20in%20XAML.md\" data-linktype=\"relative-path\">xml:lang Handling in XAML</a>.  </p>\n<p><a name=\"dependencyPropertyInfo_CultureInfo\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_LanguageProperty\" data-linktype=\"relative-path\">LanguageProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_Inherits_\" data-linktype=\"relative-path\">Inherits</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_LayoutTransform\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LayoutTransform</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a graphics transformation that should apply to this element when  layout is performed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Media.Transform LayoutTransform { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.transform\" data-linktype=\"relative-path\">Transform</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The transform this element should use. The default is <span class=\"xref\">stem.Windows.Media.Transform.Identity*</span>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In contrast to <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_RenderTransform_\" data-linktype=\"relative-path\">RenderTransform</a>, LayoutTransform will affect results of layout.  </p>\n<p> Setting a transform provides powerful capabilities of scaling and rotating. However, LayoutTransform ignores <a class=\"xref\" href=\"system.windows.media.translatetransform\" data-linktype=\"relative-path\">TranslateTransform</a> operations. This is because the layout system behavior for child elements of a <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> auto-corrects any offsets to the position of a scaled or rotated element into the layout and coordinate system of the parent element.  </p>\n<p> LayoutTransform can lead to poor application performance if you invoke it in a scenario that does not require a full pass by the layout system. When you apply a LayoutTransform to the <a class=\"xref\" href=\"system.windows.controls.panel#System_Windows_Controls_Panel_Children_\" data-linktype=\"relative-path\">Children</a> collection of the <a class=\"xref\" href=\"system.windows.controls.panel\" data-linktype=\"relative-path\">Panel</a>, it triggers a new pass by the layout system and forces all on-screen objects to be remeasured and rearranged. If you are updating the complete application user interface (UI), this functionality might be exactly what you need. However, if you do not need a full layout pass, use the <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_RenderTransform_\" data-linktype=\"relative-path\">RenderTransform</a> property, which does not invoke the layout system, and therefore, is typically a better choice for this scenario.  </p>\n<p> Example scenarios where LayoutTransform would be useful include: rotating elements such as menu components from horizontal to vertical or vice versa, scaling elements (zooming in) on focus, providing editing behavior, etc.  </p>\n<p><a name=\"dependencyPropertyInfo_LayoutTransform\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_LayoutTransformProperty\" data-linktype=\"relative-path\">LayoutTransformProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsMeasure_\" data-linktype=\"relative-path\">AffectsMeasure</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_LogicalChildren\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">LogicalChildren</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets an enumerator for logical child elements of this element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Collections.IEnumerator LogicalChildren { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.ienumerator\" data-linktype=\"relative-path\">IEnumerator</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>An enumerator for logical child elements of this element.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>LogicalChildren allows you to iterate over child elements. This is useful for elements that may not have a defined, dedicated collection but still contain more than one child element, particularly <a class=\"xref\" href=\"system.windows.frameworkcontentelement\" data-linktype=\"relative-path\">FrameworkContentElement</a> child elements.  </p>\n<p> For more information on how to use LogicalChildren and <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_AddLogicalChild_\" data-linktype=\"relative-path\">AddLogicalChild</a>, see <a href=\"../Topic/Trees%20in%20WPF.md\" data-linktype=\"relative-path\">Trees in WPF</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_Margin\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Margin</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the outer margin of an element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Thickness Margin { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.thickness\" data-linktype=\"relative-path\">Thickness</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Provides margin values for the element. The default value is a <a class=\"xref\" href=\"system.windows.thickness\" data-linktype=\"relative-path\">Thickness</a> with all properties equal to 0 (zero).</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The margin is the space between this element and other elements that will be adjacent when layout creates the user interface (UI). Shared elements might be peer elements (such as other elements in the collection of a common parent control), or might also be this element&#39;s parent.  </p>\n<p> Margin is set as a <a class=\"xref\" href=\"system.windows.thickness\" data-linktype=\"relative-path\">Thickness</a> structure rather than as a number so that the margin can be set asymmetrically. The <a class=\"xref\" href=\"system.windows.thickness\" data-linktype=\"relative-path\">Thickness</a> structure itself supports string type conversion so that you can specify an asymmetric Margin in XAML attribute syntax also.  </p>\n<p> A non-zero margin applies space outside the element layout&#39;s <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ActualWidth_\" data-linktype=\"relative-path\">ActualWidth</a> and <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ActualHeight_\" data-linktype=\"relative-path\">ActualHeight</a>.  </p>\n<p> Margins are additive for sibling elements in a layout; for example, two adjacent elements both with a margin of 30 set on the adjoining edge would have 60 units of space between them.  </p>\n<p> Elements that have margins set will not typically constrain the size of the specified Margin if the allotted rectangle space is not large enough for the margin plus the element content area. The element content area will be constrained instead when layout is calculated. The only case where margins would be constrained also is if the content is already constrained all the way to zero.  </p>\n<p><a name=\"xamlAttributeUsage_Margin\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object Margin=&quot;left,top,right,bottom&quot;/&gt;  \n- or -  \n&lt;object Margin=&quot;left,top&quot;/&gt;  \n- or -  \n&lt;object Margin=&quot;thicknessReference&quot;/&gt;  \n</code></pre><p><a name=\"xamlPropertyElementUsage_Margin\"></a>   </p>\n<h2 id=\"xaml-property-element-usage\">XAML Property Element Usage</h2>\n<pre><code>&lt;object&gt;  \n  &lt;object.Margin&gt;  \n    &lt;Thickness Left=&quot;left&quot; Top=&quot;top&quot; Right=&quot;right&quot; Bottom=&quot;bottom&quot;/&gt;  \n  &lt;/object.Margin&gt;  \n&lt;/object&gt;  \n</code></pre><p><a name=\"xamlValues_Margin\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>left, top, right, bottom</em><br> Number values between 0 and <a class=\"xref\" href=\"system.double#System_Double_PositiveInfinity\" data-linktype=\"relative-path\">PositiveInfinity</a> that specify the four possible dimension properties of a <a class=\"xref\" href=\"system.windows.thickness\" data-linktype=\"relative-path\">Thickness</a> structure.  </p>\n<p> The attribute usage will also accept abbreviated values that apply in the order provided, symmetrically and logically. For instance, <code>Margin=&quot;20&quot;</code> will be interpreted to mean a <a class=\"xref\" href=\"system.windows.thickness\" data-linktype=\"relative-path\">Thickness</a> with all properties set to 20. <code>Margin=&quot;20,50&quot;</code> will be interpreted to mean a <a class=\"xref\" href=\"system.windows.thickness\" data-linktype=\"relative-path\">Thickness</a> with <a class=\"xref\" href=\"system.windows.thickness#System_Windows_Thickness_Left_\" data-linktype=\"relative-path\">Left</a> and <a class=\"xref\" href=\"system.windows.thickness#System_Windows_Thickness_Right_\" data-linktype=\"relative-path\">Right</a> set to 20, and <a class=\"xref\" href=\"system.windows.thickness#System_Windows_Thickness_Top_\" data-linktype=\"relative-path\">Top</a> and <a class=\"xref\" href=\"system.windows.thickness#System_Windows_Thickness_Bottom_\" data-linktype=\"relative-path\">Bottom</a> set to 50.  </p>\n<p> The default unit for a <a class=\"xref\" href=\"system.windows.thickness\" data-linktype=\"relative-path\">Thickness</a> measure is device-independent unit (1/96th inch). You can also specify other units by appending the unit type strings <code>cm</code>, <code>in</code>, or <code>pt</code> to any measure.  </p>\n<p> Number values provided as XAML attributes need not specify decimal points (0 is acceptable, does not have to be provided as 0.0). For more information on Extensible Application Markup Language (XAML) usage, see <a class=\"xref\" href=\"system.windows.thickness\" data-linktype=\"relative-path\">Thickness</a>.  </p>\n<p> <em>thicknessReference</em><br> An object reference to an existing <a class=\"xref\" href=\"system.windows.thickness\" data-linktype=\"relative-path\">Thickness</a>. This might be a <code>}</code>, a , or <code>}</code> reference. For more information on Extensible Application Markup Language (XAML) usage, see <a class=\"xref\" href=\"system.windows.thickness\" data-linktype=\"relative-path\">Thickness</a>.  </p>\n<p><a name=\"dependencyPropertyInfo_Margin\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MarginProperty\" data-linktype=\"relative-path\">MarginProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsMeasure_\" data-linktype=\"relative-path\">AffectsMeasure</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_MaxHeight\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MaxHeight</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the maximum height constraint of the element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public double MaxHeight { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The maximum height of the element, in device-independent units (1/96th inch per unit). The default value is <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>. This value can be any value equal to or greater than 0.0. <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> is also valid.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This is one of three properties on <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> that specify height information. The other two are <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MinHeight_\" data-linktype=\"relative-path\">MinHeight</a> and <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Height_\" data-linktype=\"relative-path\">Height</a>.  If there is a conflict between these values, the order of application for actual height determination is first <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MinHeight_\" data-linktype=\"relative-path\">MinHeight</a> must be honored, then MaxHeight, and finally if each of these are within bounds, <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Height_\" data-linktype=\"relative-path\">Height</a>.  </p>\n<p> The value restrictions on the <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> value are enforced by a <a class=\"xref\" href=\"system.windows.validatevaluecallback\" data-linktype=\"relative-path\">ValidateValueCallback</a> mechanism. If you attempt to set an invalid value a run-time exception is thrown.  </p>\n<p><a name=\"xamlAttributeUsage_MaxHeight\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object MaxHeight=&quot;double&quot;/&gt;  \n- or –  \n&lt;object MaxHeight =&quot;qualifiedDouble&quot;/&gt;  \n</code></pre><p><a name=\"xamlValues_MaxHeight\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>double</em>  </p>\n <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>  \n\n<p> String representation of a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> value equal to or greater than 0.0. This is interpreted as a device-independent unit (1/96th inch) measurement. Strings need not explicitly include decimal points. For instance a value of <code>1</code> is acceptable.  </p>\n<p> The same <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> range restrictions as mentioned in the Property Value section apply, except that you must use <a href=\"../Topic/x:Static%20Markup%20Extension.md\" data-linktype=\"relative-path\">x:Static Markup Extension</a> if you need to explicitly set the value to be <a class=\"xref\" href=\"system.double#System_Double_PositiveInfinity\" data-linktype=\"relative-path\">PositiveInfinity</a>.  </p>\n<p> <em>qualifiedDouble</em><br> A <em>double</em> value as described above, followed by one of the following unit declaration strings: <code>px</code>, <code>in</code>, <code>cm</code>, <code>pt</code>.  </p>\n<p> <code>px</code> (default) is device-independent units (1/96th inch per unit)  </p>\n<p> <code>in</code> is inches; 1in==96px  </p>\n<p> <code>cm</code> is centimeters; 1cm==(96/2.54) px  </p>\n<p> <code>pt</code> is points; 1pt==(96/72) px  </p>\n<p><a name=\"dependencyPropertyInfo_MaxHeight\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MaxHeightProperty\" data-linktype=\"relative-path\">MaxHeightProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsMeasure_\" data-linktype=\"relative-path\">AffectsMeasure</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_MaxWidth\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MaxWidth</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the maximum width constraint of the element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public double MaxWidth { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The maximum width of the element, in device-independent units (1/96th inch per unit). The default value is <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>. This value can be any value equal to or greater than 0.0. <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> is also valid.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This is one of three properties on <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> that specify width information. The other two are <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MinWidth_\" data-linktype=\"relative-path\">MinWidth</a> and <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Width_\" data-linktype=\"relative-path\">Width</a>. If there is a conflict between these values, the order of application for actual width determination is first <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MinWidth_\" data-linktype=\"relative-path\">MinWidth</a> must be honored, then MaxWidth, and finally if each of these are within bounds, <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Width_\" data-linktype=\"relative-path\">Width</a>.  </p>\n<p> The value restrictions on the <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> value are enforced by a <a class=\"xref\" href=\"system.windows.validatevaluecallback\" data-linktype=\"relative-path\">ValidateValueCallback</a> mechanism. If you attempt to set an invalid value, a run-time exception is thrown.  </p>\n<p><a name=\"xamlAttributeUsage_MaxWidth\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object MaxWidth=&quot;double&quot;/&gt;  \n- or -  \n&lt;object MaxWidth=&quot;qualifiedDouble&quot;/&gt;  \n</code></pre><p><a name=\"xamlValues_MaxWidth\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>double</em>  </p>\n <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>  \n\n<p> String representation of a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> value equal to or greater than 0.0. This is interpreted as a device-independent unit (1/96th inch) measurement. Strings need not explicitly include decimal points. For instance a value of <code>1</code> is acceptable.  </p>\n<p> The same <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> range restrictions as mentioned in the Property Value section apply, except that you must use <a href=\"../Topic/x:Static%20Markup%20Extension.md\" data-linktype=\"relative-path\">x:Static Markup Extension</a> to set the value to be <a class=\"xref\" href=\"system.double#System_Double_PositiveInfinity\" data-linktype=\"relative-path\">PositiveInfinity</a>.  </p>\n<p> <em>qualifiedDouble</em><br> A <em>double</em> value as described above, followed by one of the following unit declaration strings: <code>px</code>, <code>in</code>, <code>cm</code>, <code>pt</code>.  </p>\n<p> <code>px</code> (default) is device-independent units (1/96th inch per unit)  </p>\n<p> <code>in</code> is inches; 1in==96px  </p>\n<p> <code>cm</code> is centimeters; 1cm==(96/2.54) px  </p>\n<p> <code>pt</code> is points; 1pt==(96/72) px  </p>\n<p><a name=\"dependencyPropertyInfo_MaxWidth\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MaxWidthProperty\" data-linktype=\"relative-path\">MaxWidthProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsMeasure_\" data-linktype=\"relative-path\">AffectsMeasure</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_MinHeight\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MinHeight</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the minimum height constraint of the element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public double MinHeight { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The minimum height of the element, in device-independent units (1/96th inch per unit). The default value is 0.0. This value can be any value equal to or greater than 0.0. However, <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> is NOT valid, nor is <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This is one of three properties on <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> that specify height information.  The other two are <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Height_\" data-linktype=\"relative-path\">Height</a> and <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MaxHeight_\" data-linktype=\"relative-path\">MaxHeight</a>. If there is a conflict between these values, the order of application for actual height determination is first MinHeight must be honored, then <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MaxHeight_\" data-linktype=\"relative-path\">MaxHeight</a>, and finally if each of these are within bounds, <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Height_\" data-linktype=\"relative-path\">Height</a>.  </p>\n<p> The value restrictions on the <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> value are enforced by a <a class=\"xref\" href=\"system.windows.validatevaluecallback\" data-linktype=\"relative-path\">ValidateValueCallback</a> mechanism. If you attempt to set an invalid value, a run-time exception is thrown.  </p>\n<p><a name=\"xamlAttributeUsage_MinHeight\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object MinHeight=&quot;double&quot;/&gt;  \n- or -  \n&lt;object MinHeight=&quot;qualifiedDouble&quot;/&gt;  \n</code></pre><p><a name=\"xamlValues_MinHeight\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>double</em>  </p>\n <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>  \n\n<p> String representation of a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> value equal to or greater than 0.0. This is interpreted as a device-independent unit (1/96th inch) measurement. Strings need not explicitly include decimal points. For instance a value of <code>1</code> is acceptable.  </p>\n<p> The same <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> range restrictions as mentioned in the Property Value section apply.  </p>\n<p> <em>qualifiedDouble</em><br> A <em>double</em> value as described above, followed by one of the following unit declaration strings: <code>px</code>, <code>in</code>, <code>cm</code>, <code>pt</code>.  </p>\n<p> <code>px</code> (default) is device-independent units (1/96th inch per unit)  </p>\n<p> <code>in</code> is inches; 1in==96px  </p>\n<p> <code>cm</code> is centimeters; 1cm==(96/2.54) px  </p>\n<p> <code>pt</code> is points; 1pt==(96/72) px  </p>\n<p><a name=\"dependencyPropertyInfo_MinHeight\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MinHeightProperty\" data-linktype=\"relative-path\">MinHeightProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsMeasure_\" data-linktype=\"relative-path\">AffectsMeasure</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_MinWidth\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MinWidth</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the minimum width constraint of the element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public double MinWidth { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The minimum width of the element, in device-independent units (1/96th inch per unit). The default value is 0.0. This value can be any value equal to or greater than 0.0. However, <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> is not valid, nor is <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This is one of three properties on <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> that specify width information.  The other two are <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Width_\" data-linktype=\"relative-path\">Width</a> and <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MaxWidth_\" data-linktype=\"relative-path\">MaxWidth</a>.  If there is a conflict between these values, the order of application for actual width determination is first MinWidth must be honored, then <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MaxWidth_\" data-linktype=\"relative-path\">MaxWidth</a>, and finally if each of these are within bounds, <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Width_\" data-linktype=\"relative-path\">Width</a>.  </p>\n<p> The value restrictions on the <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> value are enforced by a <a class=\"xref\" href=\"system.windows.validatevaluecallback\" data-linktype=\"relative-path\">ValidateValueCallback</a> mechanism. If you attempt to set an invalid value, a run-time exception is thrown.  </p>\n<p><a name=\"xamlAttributeUsage_MinWidth\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object MinWidth=&quot;double&quot;/&gt;  \n- or -  \n&lt;object MinWidth=&quot;qualifiedDouble&quot;/&gt;  \n</code></pre><p><a name=\"xamlValues_MinWidth\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>double</em>  </p>\n <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>  \n\n<p> String representation of a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> value equal to or greater than 0.0. This is interpreted as a device-independent unit (1/96th inch) measurement. Strings need not explicitly include decimal points. For instance a value of <code>1</code> is acceptable.  </p>\n<p> The same <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> range restrictions as mentioned in the Property Value section apply.  </p>\n<p> <em>qualifiedDouble</em><br> A <em>double</em> value as described above, followed by one of the following unit declaration strings: <code>px</code>, <code>in</code>, <code>cm</code>, <code>pt</code>.  </p>\n<p> <code>px</code> (default) is device-independent units (1/96th inch per unit)  </p>\n<p> <code>in</code> is inches; 1in==96px  </p>\n<p> <code>cm</code> is centimeters; 1cm==(96/2.54) px  </p>\n<p> <code>pt</code> is points; 1pt==(96/72) px  </p>\n<p><a name=\"dependencyPropertyInfo_MinWidth\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MinWidthProperty\" data-linktype=\"relative-path\">MinWidthProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsMeasure_\" data-linktype=\"relative-path\">AffectsMeasure</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_Name\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Name</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the identifying name of the element. The name provides a reference so that code-behind, such as event handler code, can refer to a markup element after it is constructed during processing by a XAML processor.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public string Name { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the element. The default is an empty string.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The most common usage of this property is to specify a XAML element name as an attribute in markup.  </p>\n<p> This property essentially provides a WPF framework-level convenience property to set the XAML <a href=\"../Topic/x:Name%20Directive.md\" data-linktype=\"relative-path\">x:Name Directive</a>.  </p>\n<p> Names must be unique within a namescope. For more information, see <a href=\"../Topic/WPF%20XAML%20Namescopes.md\" data-linktype=\"relative-path\">WPF XAML Namescopes</a>.  </p>\n<p> Getting a Name if you are creating elements in code is not common. If you have the appropriate reference in code already, you can just call methods and properties on the element reference and will not generally need the Name. An exception to this is if the Name string has some overloaded meaning, for instance if it is useful to display that name in UI. Setting a Name from code-behind if the original Name was set from markup is also not recommended, and changing the property after loading the XAML will not change the original object reference. The object references are created only when the underlying namescopes are explicitly created during parsing. You must specifically call <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_RegisterName_\" data-linktype=\"relative-path\">RegisterName</a> to make an effective change to the Name property of an already loaded element.  </p>\n<p> One notable case where setting Name from code is important is when registering names for elements that storyboards will run against, so that they can be referenced at run time. Before you can register a name, might also need to instantiate and assign a <a class=\"xref\" href=\"system.windows.namescope\" data-linktype=\"relative-path\">NameScope</a> instance. See the Example section, or <a href=\"../Topic/Storyboards%20Overview.md\" data-linktype=\"relative-path\">Storyboards Overview</a>.  </p>\n<p> Setting Name from code has limited applications, but getting an element by Name is more common. One particular scenario is if your application supports a navigation model where pages reload into the application, and the run time code is not necessarily code-behind defined for that page. The utility method <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_FindName_\" data-linktype=\"relative-path\">FindName</a>, which is available from any <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a>, can find any element by Name in the logical tree for that element, searching the tree recursively as necessary. Or you can use the <a class=\"xref\" href=\"system.windows.logicaltreehelper#System_Windows_LogicalTreeHelper_FindLogicalNode_\" data-linktype=\"relative-path\">FindLogicalNode</a> static method of <a class=\"xref\" href=\"system.windows.logicaltreehelper\" data-linktype=\"relative-path\">LogicalTreeHelper</a>, which also takes a Name string as an argument.  </p>\n<p> Typically used root elements (<a class=\"xref\" href=\"system.windows.window\" data-linktype=\"relative-path\">Window</a>, <a class=\"xref\" href=\"system.windows.controls.page\" data-linktype=\"relative-path\">Page</a> for example) implement the interface <a class=\"xref\" href=\"system.windows.markup.inamescope\" data-linktype=\"relative-path\">INameScope</a>. Implementations of this interface are expected to enforce that names be unambiguous within their scope. The root elements that define this interface also define the namescope behavior boundaries for all the related APIs.  </p>\n<p> The Name property also serves as an identifier for other processes. For instance, the WPF automation model will use Name as the AutomationId for clients and providers.  </p>\n<p> The string values used for Name have some restrictions, as imposed by the underlying <a href=\"../Topic/x:Name%20Directive.md\" data-linktype=\"relative-path\">x:Name Directive</a> defined by the XAML specification. Most notably, a Name must start with a letter or the underscore character (_), and must contain only letters, digits, or underscores. For more information, see <a href=\"../Topic/WPF%20XAML%20Namescopes.md\" data-linktype=\"relative-path\">WPF XAML Namescopes</a>.  </p>\n<p> Name is one of the very few dependency properties that cannot be animated (<a class=\"xref\" href=\"system.windows.uipropertymetadata#System_Windows_UIPropertyMetadata_IsAnimationProhibited_\" data-linktype=\"relative-path\">IsAnimationProhibited</a> is <code>true</code> in metadata), because the name itself is vital for targeting an animation. Data binding a Name is technically possible, but is an extremely uncommon scenario because a data-bound Name cannot serve the main intended purpose of the property: to provide an identifier connection point for code-behind.  </p>\n<p><a name=\"dependencyPropertyInfo_Name\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_NameProperty\" data-linktype=\"relative-path\">NameProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.uipropertymetadata#System_Windows_UIPropertyMetadata_IsAnimationProhibited_\" data-linktype=\"relative-path\">IsAnimationProhibited</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_OverridesDefaultStyle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OverridesDefaultStyle</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value that indicates whether this element incorporates style properties from theme styles.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool OverridesDefaultStyle { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply. <code>false</code> if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The most common usage of this property is an indirect usage within the setter of a style that is supplying a themed style.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> If you set OverridesDefaultStyle to <code>true</code> on a control, you will be suppressing the default control template supplied by the theme styles. That control template typically includes the content presenter and other composited elements that provide basic UI functionality and visualization for the control. If you want the control to continue to support the same features as the default theme styles, you must supply an alternate style with a control template that replicates the same structure. For more information, see <a href=\"../Topic/Control%20Authoring%20Overview.md\" data-linktype=\"relative-path\">Control Authoring Overview</a>.  </p>\n</div>\n<p><a name=\"dependencyPropertyInfo_OverridesDefaultStyle\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_OverridesDefaultStyleProperty\" data-linktype=\"relative-path\">OverridesDefaultStyleProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsMeasure_\" data-linktype=\"relative-path\">AffectsMeasure</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_Parent\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Parent</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the logical parent  element of this element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.DependencyObject Parent { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>This element&#39;s logical parent.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Parent may be <code>null</code> in cases where an element was instantiated, but is not attached to any logical tree that eventually connects to the page level root element, or the application object.  </p>\n<p> Note that the logical parent of an element can potentially change depending on your application&#39;s functionality, and keeping the value of this property will not reflect that change. You typically should get the value immediately before you need it.  </p>\n<p> See <a href=\"../Topic/Trees%20in%20WPF.md\" data-linktype=\"relative-path\">Trees in WPF</a> for more information about logical tree  traversal, and the scenarios where using  Parent as a technique of parent element discovery is appropriate.  </p>\n<p> The property engine will potentially recalculate all property values of an element when it is reparented, because some properties inherit values through the logical tree. The <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_DataContext_\" data-linktype=\"relative-path\">DataContext</a> that applies for bindings can also change when elements are reparented.  </p>\n<p> Changing an element&#39;s parent is typically only done through manipulation of collections, by using dedicated add or remove methods, or through setting content properties of elements.  </p>\n<p> The most typical scenario for using the Parent property is to obtain a reference and then get various <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> property values from the parent. For templates, the Parent of the template eventually will be <code>null</code>. To get past this point and extend into the logical tree where the template is actually applied, use <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_TemplatedParent_\" data-linktype=\"relative-path\">TemplatedParent</a>.  </p>\n<p> Note that this property does not report visual tree parents in cases where these vary from the logical tree parents. Visual tree parents are not typically important for general application cases but may be the desired parent elements for certain visual level cases. See <a class=\"xref\" href=\"system.windows.media.visualtreehelper\" data-linktype=\"relative-path\">VisualTreeHelper</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_Resources\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Resources</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the locally-defined resource dictionary.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.ResourceDictionary Resources { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.resourcedictionary\" data-linktype=\"relative-path\">ResourceDictionary</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The current locally-defined dictionary of resources, where each resource can be accessed by key.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Resource dictionaries that can be defined completely or partially in Extensible Application Markup Language (XAML) are typically created as a property element, and are typically on the root element for any individual page or for the application. Placing the resource dictionary at this level makes it easier to find from individual child elements in the page (or from any page, in the application case). In most application scenarios, we recommend that styles be defined as object elements within a resource dictionary, or be defined as external resources so that the entire style resource can be self-contained (this approach helps separate designer responsibilities from developer responsibilities by separating the physical files that need to be edited).  </p>\n<p> Note that this property returns only the resource dictionary declared directly within that element. This is different than the actual resource lookup process, where a child element can access any of the resources defined in each parent element, searching recursively upwards.  </p>\n<p> Resources can also be referenced by code from within the collection, but be aware that resources created in XAML will definitely not be accessible until after <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Loaded\" data-linktype=\"relative-path\">Loaded</a> is raised by the element that declares the dictionary. In fact, resources are parsed asynchronously and not even the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Loaded\" data-linktype=\"relative-path\">Loaded</a> event is an assurance that you can reference a XAML defined resource. For this reason you should generally only access XAML defined resources as part of run-time code, or through other XAML techniques such as styles or resource extension references for attribute values. When you access resources through code, it is essentially equivalent to a  reference made from XAML.  </p>\n<p> The underlying <a class=\"xref\" href=\"system.windows.resourcedictionary\" data-linktype=\"relative-path\">ResourceDictionary</a> supports the methods required to add, remove or query resources from within the collection by using code. The Resources property is settable to support the scenario of completely replacing the resources collection of an element to be a new or different <a class=\"xref\" href=\"system.windows.resourcedictionary\" data-linktype=\"relative-path\">ResourceDictionary</a>.  </p>\n<p> Notice that the XAML syntax shown does not include an element for the <a class=\"xref\" href=\"system.windows.resourcedictionary\" data-linktype=\"relative-path\">ResourceDictionary</a>. This is an example of implicit collection syntax; a tag representing the collection element can be omitted. The elements that are added as items to the collection are specified instead. For more information about implicit collections and XAML, see <a href=\"../Topic/XAML%20Syntax%20In%20Detail.md\" data-linktype=\"relative-path\">XAML Syntax In Detail</a>. One case where a <a class=\"xref\" href=\"system.windows.resourcedictionary\" data-linktype=\"relative-path\">ResourceDictionary</a> is still specified explicitly as an element is if you are introducing a merged dictionary, in which case there are typically no child elements for that <a class=\"xref\" href=\"system.windows.resourcedictionary\" data-linktype=\"relative-path\">ResourceDictionary</a>. For details, see <a href=\"../Topic/Merged%20Resource%20Dictionaries.md\" data-linktype=\"relative-path\">Merged Resource Dictionaries</a>.  </p>\n<p><a name=\"xamlPropertyElementUsage_Resources\"></a>   </p>\n<h2 id=\"xaml-property-element-usage\">XAML Property Element Usage</h2>\n<pre><code>&lt;object&gt;  \n  &lt;object.Resources&gt;  \n    oneOrMoreResourceElements  \n  &lt;/object.Resources&gt;  \n&lt;/object&gt;  \n</code></pre><p><a name=\"xamlValues_Resources\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>oneOrMoreResourceElements</em><br> One or more object elements, each of which defines a resource. Each resource property element within each <a class=\"xref\" href=\"system.windows.resourcedictionary\" data-linktype=\"relative-path\">ResourceDictionary</a> must have a unique value for the <a href=\"../Topic/x:Key%20Directive.md\" data-linktype=\"relative-path\">x:Key Directive</a>, which serves as the unique key when values are retrieved from the <a class=\"xref\" href=\"system.windows.resourcedictionary\" data-linktype=\"relative-path\">ResourceDictionary</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_Style\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Style</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the style used by this element when it is rendered.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Style Style { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The applied, nondefault style for the element, if present. Otherwise, <code>null</code>. The default for a default-constructed <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For controls, the current style is often provided by a default style from control theming, or from styles generally applied to controls of that type by resources at page or application level (an implicit style). This property does not set or return default (theme) styles, but it does return either an implicit style or an explicit style that is acting on the element. In the case of implicit or explicit styles, it does not matter whether the style is specified as a resource or defined locally.  </p>\n<p> Setting the styles has some restrictions. You can reset the entire Style property to a new <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> at any time, which will force a layout recomposition. However, as soon as that style is placed in use by a loaded element, the <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> should be considered sealed. Attempting to make a change to any individual property of an in-use style (such as anything within the collection of <a class=\"xref\" href=\"system.windows.style#System_Windows_Style_Setters_\" data-linktype=\"relative-path\">Setters</a>) causes an exception to be thrown. A style that is defined in markup is considered to be in use as soon as it is loaded from a resource dictionary (for resources), or the page it is contained within is loaded (for inline styles).  </p>\n<p> Style is a dependency property with special precedence. The locally set style generally operates at the highest precedence in the property system. If the Style is null at this point, during loading the property system checks for implicit styles in local or application resources that specify that type. If the style is still null after this step, then the acting style for presentation purposes generally comes from the default (theme) style, but the default style is not returned in the Style property value. See <a href=\"../Topic/Dependency%20Property%20Value%20Precedence.md\" data-linktype=\"relative-path\">Dependency Property Value Precedence</a> or <a href=\"../Topic/Styling%20and%20Templating.md\" data-linktype=\"relative-path\">Styling and Templating</a>.  </p>\n<p><a name=\"xamlAttributeUsage_Style\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object Style=&quot;{resourceExtension styleResourceKey}&quot;/&gt;  \n</code></pre><p><a name=\"xamlPropertyElementUsage_Style\"></a>   </p>\n<h2 id=\"xaml-property-element-usage\">XAML Property Element Usage</h2>\n<p><a name=\"xamlValues_Style\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>resourceExtension</em><br> One of the following: , or . See <a href=\"../Topic/XAML%20Resources.md\" data-linktype=\"relative-path\">XAML Resources</a>.  </p>\n<p> <em>styleResourceKey</em><br> The key that identifies the style being requested. The key refers to an existing resource in a <a class=\"xref\" href=\"system.windows.resourcedictionary\" data-linktype=\"relative-path\">ResourceDictionary</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Property element syntax is technically possible, but not recommended for most style scenarios. See <a href=\"../Topic/Inline%20Styles%20and%20Templates.md\" data-linktype=\"relative-path\">Inline Styles and Templates</a>. A binding reference using  or <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> is also possible, but uncommon.  </p>\n</div>\n<p><a name=\"dependencyPropertyInfo_Style\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_StyleProperty\" data-linktype=\"relative-path\">StyleProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsMeasure_\" data-linktype=\"relative-path\">AffectsMeasure</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_Tag\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Tag</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets an arbitrary object value that can be used to store custom information about this element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object Tag { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The intended value. This property has no default value.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This property is analogous to Tag properties in other Microsoft programming models, such as Microsoft Visual Basic for Applications (VBA) or Windows Forms. Tag is intended to provide a pre-existing property location where you can store some basic custom information about any <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> without requiring you to subclass an element.  </p>\n<p> Because this property takes an object, you would need to use the property element usage in order to set the Tag property in Extensible Application Markup Language (XAML) to anything other than an object with a known and built-in type converter, such as a string. Objects used in this manner are typically not within the standard Windows Presentation Foundation (WPF) namespaces and therefore may require namespace mapping to the external namespace in order to be introduced as XAML elements. For details, see <a href=\"../Topic/XAML%20Namespaces%20and%20Namespace%20Mapping%20for%20WPF%20XAML.md\" data-linktype=\"relative-path\">XAML Namespaces and Namespace Mapping for WPF XAML</a> and <a href=\"../Topic/XAML%20and%20Custom%20Classes%20for%20WPF.md\" data-linktype=\"relative-path\">XAML and Custom Classes for WPF</a>.  </p>\n<p><a name=\"dependencyPropertyInfo_Tag\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_TagProperty\" data-linktype=\"relative-path\">TagProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_TemplatedParent\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TemplatedParent</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets a reference to the template parent of this element. This property is not relevant if the element was not created through a template.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.DependencyObject TemplatedParent { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The element whose <a class=\"xref\" href=\"system.windows.frameworktemplate\" data-linktype=\"relative-path\">FrameworkTemplate</a><span class=\"xref\">stem.Windows.FrameworkTemplate.VisualTree*</span> caused this element to be created. This value is frequently <code>null</code>; see Remarks.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>TemplatedParent is frequently <code>null</code> for objects that are created in your application markup or code. This is because you create those objects directly, not via a template. Object references obtained by walking the logical tree from the root, or by typical name references, do not come from a template.  </p>\n<p> Cases where TemplatedParent might not be <code>null</code> include operations such as hit-testing, event handling for certain low-level input events, walking the visual tree with <a class=\"xref\" href=\"system.windows.media.visualtreehelper\" data-linktype=\"relative-path\">VisualTreeHelper</a>, or working with enumerators, which might return elements that came from templates. Another case is if you specifically call <a class=\"xref\" href=\"system.windows.frameworktemplate#System_Windows_FrameworkTemplate_FindName_\" data-linktype=\"relative-path\">FindName</a> against an existing <a class=\"xref\" href=\"system.windows.frameworktemplate\" data-linktype=\"relative-path\">FrameworkTemplate</a> and are work with the returned object.  </p>\n<p> Templates are actually shared objects, where the contents of the template are created only once. Therefore, if you obtain an object reference to an element that came from a template, you may find that the apparent logical tree does not reach to the page root. In order to connect such a template reference to the page&#39;s logical tree, you should get the TemplatedParent value and continue to navigate that element tree as desired.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ToolTip\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToolTip</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object ToolTip { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The tooltip object. See Remarks below for details on why this parameter is not strongly typed.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the value of this property is of type <a class=\"xref\" href=\"system.windows.controls.tooltip\" data-linktype=\"relative-path\">ToolTip</a>, then that value is the tool-tip that will be used in the UI.  If the value is of any other type, then that value will be used as the <em>content</em> for a <a class=\"xref\" href=\"system.windows.controls.tooltip\" data-linktype=\"relative-path\">ToolTip</a> provided (constructed) by the system. For more information, see <a class=\"xref\" href=\"system.windows.controls.tooltipservice\" data-linktype=\"relative-path\">ToolTipService</a>. The service class provides attached properties that can be used to further customize a <a class=\"xref\" href=\"system.windows.controls.tooltip\" data-linktype=\"relative-path\">ToolTip</a>.  </p>\n<p><a name=\"xamlAttributeUsage_ToolTip\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object ToolTip=&quot;toolTipContent&quot;/&gt;  \n</code></pre><p><a name=\"xamlPropertyElementUsage_ToolTip\"></a>   </p>\n<h2 id=\"xaml-property-element-usage\">XAML Property Element Usage</h2>\n<pre><code>&lt;object&gt;  \n  &lt;object.ToolTip&gt;  \n    &lt;ToolTip .../&gt;  \n  &lt;/object.ToolTip&gt;  \n&lt;/object&gt;  \n- or -  \n&lt;object&gt;  \n  &lt;object.ToolTip&gt;  \n    toolTipObjectContent  \n  &lt;/object.ToolTip&gt;  \n&lt;/object&gt;  \n</code></pre><p><a name=\"xamlValues_ToolTip\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>toolTipContent</em><br> A string that becomes the display text for the ToolTip.  </p>\n<p> <em>toolTipObjectContent</em><br> Some object, provided in object element form, that should be used as the content for the <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> . Typically this would be a <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> or some other element that creates layout compositing for the ToolTip, eventually containing text content within the compositing. In this usage, the <a class=\"xref\" href=\"system.windows.controls.tooltip\" data-linktype=\"relative-path\">ToolTip</a> element is created implicitly from the parsed XAML, and the <em>toolTipObjectContent</em> content is set as its <a class=\"xref\" href=\"system.windows.controls.contentcontrol#System_Windows_Controls_ContentControl_Content_\" data-linktype=\"relative-path\">Content</a> property.  </p>\n<p> &lt;<code>ToolTip</code> .../&gt;<br> See <a class=\"xref\" href=\"system.windows.controls.tooltip\" data-linktype=\"relative-path\">ToolTip</a>.  </p>\n<p><a name=\"dependencyPropertyInfo_ToolTip\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ToolTipProperty\" data-linktype=\"relative-path\">ToolTipProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td>None</td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_Triggers\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Triggers</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the collection of triggers established directly on this element, or in child elements.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.TriggerCollection Triggers { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.triggercollection\" data-linktype=\"relative-path\">TriggerCollection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A strongly typed collection of <a class=\"xref\" href=\"system.windows.trigger\" data-linktype=\"relative-path\">Trigger</a> objects.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"NOTE\"><h5>Note</h5><p> This property can only be set in Extensible Application Markup Language (XAML) through the collection syntax shown, or by accessing the collection object and using its various methods such as Add. The property to access the collection object itself is read-only, the collection itself is read-write. The property only exists on root elements; attempting to find it or set it elsewhere will cause an exception to be thrown.  </p>\n</div>\n<p> This property does not enable you to examine triggers that exist as part of styles in use on this element. It only reports the collection of triggers that are literally added to the collection, either in markup or code. Elements do not typically have such elements existing by default (through a template for instance); it is more common for triggers that come from control compositing to be established in styles instead.  </p>\n<p> In terms of behavior (and trying to establish which effect came from which element&#39;s declared Triggers collection), both the triggering condition and the trigger effect might be on this element, or might be on its child elements in the logical tree. Note that if you use lifetime events such as <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Loaded\" data-linktype=\"relative-path\">Loaded</a> to get this collection, the child element&#39;s triggers might not yet be fully loaded, and the collection will be smaller than it would truly be at run time.  </p>\n<p> Note that the collection of triggers established on an element only supports <a class=\"xref\" href=\"system.windows.eventtrigger\" data-linktype=\"relative-path\">EventTrigger</a>, not property triggers (<a class=\"xref\" href=\"system.windows.trigger\" data-linktype=\"relative-path\">Trigger</a>). If you require property triggers, you must place these within a style or template and then assign that style or template to the element either directly through the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Style_\" data-linktype=\"relative-path\">Style</a> property, or indirectly through an implicit style reference.  </p>\n<p><a name=\"xamlPropertyElementUsage_Triggers\"></a>   </p>\n<h2 id=\"xaml-property-element-usage\">XAML Property Element Usage</h2>\n<pre><code>&lt;object&gt;  \n  &lt;object.Triggers&gt;  \n    oneOrMoreTriggers  \n  &lt;/object.Triggers&gt;  \n&lt;/object&gt;  \n</code></pre><p><a name=\"xamlValues_Triggers\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>oneOrMoreTriggers</em><br> One or more defined <a class=\"xref\" href=\"system.windows.eventtrigger\" data-linktype=\"relative-path\">EventTrigger</a> elements. Each such trigger is expected to contain valid storyboard actions and references. Note that this collection can only be established on the root element of a page. For more information, see <a href=\"../Topic/Storyboards%20Overview.md\" data-linktype=\"relative-path\">Storyboards Overview</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_UseLayoutRounding\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UseLayoutRounding</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets a value that indicates whether layout rounding should be applied to this element&#39;s size and position during layout.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool UseLayoutRounding { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if layout rounding is applied; otherwise, <code>false</code>. The default is <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When the UseLayoutRounding property for an element is <code>true</code>, all non-integral pixel values that are calculated during the <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Measure_\" data-linktype=\"relative-path\">Measure</a> and <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Arrange_\" data-linktype=\"relative-path\">Arrange</a> passes are rounded to whole pixel values.  </p>\n<p> This property is inherited by child elements.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> You should set UseLayoutRounding to <code>true</code> on the root element. The layout system adds child coordinates to the parent coordinates; therefore, if the parent coordinates are not on a pixel boundary, the child coordinates are also not on a pixel boundary. If UseLayoutRounding cannot be set at the root, set <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_SnapsToDevicePixels_\" data-linktype=\"relative-path\">SnapsToDevicePixels</a> on the child to obtain the effect that you want.  </p>\n</div>\n<p> Drawing objects on pixel boundaries eliminates the semi-transparent edges that are produced by anti-aliasing, when an edge falls in the middle of a device pixel. The following illustration shows the output of a single pixel-width line that falls in the middle of a device pixel. The line on the left does not use layout rounding and is anti-aliased. The line on the right uses layout rounding.  </p>\n<p> <img src=\"add/media/pixelsnaplinecompare.png\" alt=\"Anti&#45;aliased line compared to single pixel line.\" title=\"Anti-aliased line compared to single pixel line.\" data-linktype=\"relative-path\">  </p>\n<p> When you use layout rounding and <a class=\"xref\" href=\"system.windows.gridunittype\" data-linktype=\"relative-path\">GridUnitType</a> sizing, the layout system creates small variations in the column or row measurements to avoid subpixel rendering. For example, if a grid has a total width of 100 with 3 columns each of size <a class=\"xref\" href=\"system.windows.gridunittype\" data-linktype=\"relative-path\">GridUnitType</a>, instead of creating three columns that have an equal width of 33.3, the layout system creates 2 columns that have a width of 33 and one that has a width of 34.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In .NET 4.6 changes were made to layout rounding to reduce instances of clipping in controls with borders. By default, this feature is enabled if your Target Framework is .NET Framework 4.6 or higher. Applications that target earlier versions of the framework can opt in into the new behavior by adding the following setting to an app.config file: <code>&lt;runtime&gt;``&lt;AppContextSwitchOverrides      value=&quot;Switch.MS.Internal.DoNotApplyLayoutRoundingToMarginsAndBorderThickness=false&quot;/&gt;``&lt;/runtime&gt;</code> The setting only takes effect when the application is running on the .NET Framework 4.6.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_VerticalAlignment\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">VerticalAlignment</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the vertical alignment characteristics applied to this element when it is composed within a parent element such as a panel or items control.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.VerticalAlignment VerticalAlignment { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.verticalalignment\" data-linktype=\"relative-path\">VerticalAlignment</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A vertical alignment setting. The default is <a class=\"xref\" href=\"system.windows.verticalalignment\" data-linktype=\"relative-path\">VerticalAlignment</a>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>When <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Height_\" data-linktype=\"relative-path\">Height</a> and <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Width_\" data-linktype=\"relative-path\">Width</a> properties are explicitly set on an element, these measurements take layout precedent and cancel the regular effects of setting this property to <a class=\"xref\" href=\"system.windows.verticalalignment\" data-linktype=\"relative-path\">VerticalAlignment</a>.  </p>\n<p> VerticalAlignment is the Microsoft .NET property accessor for what is in reality a dependency property. This particular dependency property quite frequently has its apparent &quot;default&quot; value set differently in derived element classes, particularly controls. This generally occurs in one of two ways: the dependency property is re-registered to a particular  derived class, but with different metadata for setting its defaults; or there is a default style being applied that sets that dependency property value differently. For example, the apparent &quot;default&quot; of VerticalAlignment for a <a class=\"xref\" href=\"system.windows.controls.comboboxitem\" data-linktype=\"relative-path\">ComboBoxItem</a> control will be <a class=\"xref\" href=\"system.windows.verticalalignment\" data-linktype=\"relative-path\">VerticalAlignment</a>, even though <a class=\"xref\" href=\"system.windows.controls.comboboxitem\" data-linktype=\"relative-path\">ComboBoxItem</a> inherits VerticalAlignment direct from <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a>. This is because that value was reset within the default style of <a class=\"xref\" href=\"system.windows.controls.comboboxitem\" data-linktype=\"relative-path\">ComboBoxItem</a>, within the style&#39;s control template.  </p>\n<p> <a class=\"xref\" href=\"system.windows.controls.canvas\" data-linktype=\"relative-path\">Canvas</a> does not use VerticalAlignment when composing layout, because <a class=\"xref\" href=\"system.windows.controls.canvas\" data-linktype=\"relative-path\">Canvas</a> is based on absolute positioning.  </p>\n<p> When inherited by <a class=\"xref\" href=\"system.windows.controls.comboboxitem\" data-linktype=\"relative-path\">ComboBoxItem</a> or any derived classes, <a class=\"xref\" href=\"system.windows.controls.comboboxitem\" data-linktype=\"relative-path\">ComboBoxItem</a> redefines the default value of this property to be <a class=\"xref\" href=\"system.windows.verticalalignment\" data-linktype=\"relative-path\">VerticalAlignment</a>.  </p>\n<p><a name=\"dependencyPropertyInfo_VerticalAlignment\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_VerticalAlignmentProperty\" data-linktype=\"relative-path\">VerticalAlignmentProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsArrange_\" data-linktype=\"relative-path\">AffectsArrange</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_VisualChildrenCount\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">VisualChildrenCount</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the number of visual child elements within this element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override int VisualChildrenCount { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The number of visual child elements for this element.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> implementation of VisualChildrenCount always returns either zero or one. Classes that maintain a visual child collection that might exceed one must override both this property and <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_GetVisualChild_\" data-linktype=\"relative-path\">GetVisualChild</a>.  </p>\n<p> This property is generally used to determine the upper bounds of the current child collection for purposes of implementing the layout overrides (<a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MeasureOverride_\" data-linktype=\"relative-path\">MeasureOverride</a>, <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ArrangeOverride_\" data-linktype=\"relative-path\">ArrangeOverride</a>).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_Width\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Width</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets or sets the width of the element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public double Width { get; set; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The width of the element, in device-independent units (1/96th inch per unit). The default value is <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>. This value must be equal to or greater than 0.0. See Remarks for upper bound information.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This is one of three properties on <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> that specify width information.  The other two are <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MinWidth_\" data-linktype=\"relative-path\">MinWidth</a> and <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MaxWidth_\" data-linktype=\"relative-path\">MaxWidth</a>.  If there is a conflict between these values, the order of application for actual width determination is first <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MinWidth_\" data-linktype=\"relative-path\">MinWidth</a> must be honored, then <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MaxWidth_\" data-linktype=\"relative-path\">MaxWidth</a>, and finally if each of these are within bounds, Width.  </p>\n<p> The return value of this property is always the same as any value that was set to it. In contrast, the value of the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ActualWidth_\" data-linktype=\"relative-path\">ActualWidth</a> may vary. The layout may have rejected the suggested size for some reason. Also, the layout system itself works asynchronously relative to the property system set of Width and may not have processed that particular sizing property change yet.  </p>\n<p> In addition to acceptable <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> values, this property can also be <a class=\"xref\" href=\"system.double#System_Double_NaN\" data-linktype=\"relative-path\">System.Double.NaN</a>. This is how you specify auto sizing behavior. In XAML you set the value to the string &quot;Auto&quot; (case insensitive) to enable the auto sizing behavior. Auto sizing behavior implies that the element will fill the width available to it. Note however that specific controls frequently supply default values in their default styles that will disable the auto sizing behavior unless it is specifically re-enabled.  </p>\n<p> In addition to the validation check, there is a nondeterministic upper value bound for Width that is enforced by the layout system (this is a very large number, larger than <a class=\"xref\" href=\"system.single#System_Single_MaxValue\" data-linktype=\"relative-path\">System.Single.MaxValue</a> but smaller than <a class=\"xref\" href=\"system.double#System_Double_MaxValue\" data-linktype=\"relative-path\">System.Double.MaxValue</a>). If you exceed this bound, the element will not render, and no exception is thrown. Do not set Width to a value that is significantly larger than the maximum size of any possible visual display, or you may exceed this nondeterministic upper bound.  </p>\n<p><a name=\"xamlAttributeUsage_Width\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object Width=&quot;double&quot;/&gt;  \n- or –  \n&lt;object Width =&quot;qualifiedDouble&quot;/&gt;  \n- or -  \n&lt;object Width =&quot;Auto&quot;/&gt;  \n</code></pre><p><a name=\"xamlValues_Width\"></a>   </p>\n<h2 id=\"xaml-values\">XAML Values</h2>\n<p> <em>double</em>  </p>\n <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a>  \n\n<p> String representation of a <a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a> value equal to or greater than 0.0. See Remarks for upper bound information. This value is interpreted as a device-independent unit (1/96th inch) measurement. Strings need not explicitly include decimal points. For instance a value of <code>1</code> is acceptable.  </p>\n<p> <em>qualifiedDouble</em><br> A <em>double</em> value as described above, followed by one of the following unit declaration strings: <code>px</code>, <code>in</code>, <code>cm</code>, <code>pt</code>.  </p>\n<p> <code>px</code> (default) is device-independent units (1/96th inch per unit)  </p>\n<p> <code>in</code> is inches; 1in==96px  </p>\n<p> <code>cm</code> is centimeters; 1cm==(96/2.54) px  </p>\n<p> <code>pt</code> is points; 1pt==(96/72) px  </p>\n<p> <code>Auto</code><br> Enables autosizing behavior. See Remarks.  </p>\n<p><a name=\"dependencyPropertyInfo_Width\"></a>   </p>\n<h2 id=\"dependency-property-information\">Dependency Property Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_WidthProperty\" data-linktype=\"relative-path\">WidthProperty</a></td>\n</tr>\n<tr>\n<td>Metadata properties set to <code>true</code></td>\n<td><a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsMeasure_\" data-linktype=\"relative-path\">AffectsMeasure</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Methods\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_AddLogicalChild_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">AddLogicalChild(Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Adds the provided object to the logical tree of this element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void AddLogicalChild (object child);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>child</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Child element to be added.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method for the implementation of collections on objects that represent logical child elements of an element. Collection maintenance for child element collections might be done in property getters or setters, class handling of Changed events, constructors, or within the collection types themselves.  </p>\n<p> For control authors, manipulating the logical tree at this level is not the recommended practice, unless none of the content models for available base control classes are appropriate for your control scenario. Consider subclassing at the level of <a class=\"xref\" href=\"system.windows.controls.contentcontrol\" data-linktype=\"relative-path\">ContentControl</a>, <a class=\"xref\" href=\"system.windows.controls.itemscontrol\" data-linktype=\"relative-path\">ItemsControl</a>, and <a class=\"xref\" href=\"system.windows.controls.headereditemscontrol\" data-linktype=\"relative-path\">HeaderedItemsControl</a>. These classes provide a content model with particular enforcement of logical tree child elements through dedicated APIs, as well as support for other features typically desirable in a WPF control such as styling through templates. For more information on how to use <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_LogicalChildren_\" data-linktype=\"relative-path\">LogicalChildren</a> and AddLogicalChild, see <a href=\"../Topic/Trees%20in%20WPF.md\" data-linktype=\"relative-path\">Trees in WPF</a>.  </p>\n<p> AddLogicalChild may throw an exception if called at a time when the logical tree is being iterated by another process.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ApplyTemplate\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ApplyTemplate()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Builds the current template&#39;s visual tree if necessary, and returns a value that indicates whether the visual tree was rebuilt by this call.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool ApplyTemplate ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if visuals were added to the tree; returns <code>false</code> otherwise.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Applications can call this method to guarantee that the visual tree of an element is complete. This guarantee step might be necessary if code will be checking the child elements in the tree. For typical element logic within applications, calling ApplyTemplate is not necessary, because templates will be applied to elements at an appropriate point in their lifetimes automatically.  </p>\n<p> ApplyTemplate is called on every Measure pass by the WPF framework-level layout system.  </p>\n<p> <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> derived classes can use the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_OnApplyTemplate_\" data-linktype=\"relative-path\">OnApplyTemplate</a> class handler to be notified of cases where this method was called explicitly, or by the layout system. <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_OnApplyTemplate_\" data-linktype=\"relative-path\">OnApplyTemplate</a> is called after the template is completely generated and attached to the logical tree.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ArrangeCore_System_Windows_Rect_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ArrangeCore(Rect)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Implements <span class=\"xref\">stem.Windows.UIElement.ArrangeCore*</span> (defined as virtual in <a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">UIElement</a>) and seals the implementation.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override sealed void ArrangeCore (System.Windows.Rect finalRect);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>finalRect</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.rect\" data-linktype=\"relative-path\">Rect</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The final area within the parent that this element should use to arrange itself and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is sealed. In order to override the logic in your custom element specifically for the arrange pass of element layout, your <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> derived class must override <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ArrangeOverride_\" data-linktype=\"relative-path\">ArrangeOverride</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ArrangeOverride_System_Windows_Size_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ArrangeOverride(Size)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, positions child elements and determines a size for a <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Windows.Size ArrangeOverride (System.Windows.Size finalSize);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>finalSize</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The final area within the parent that this element should use to arrange itself and its children.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The actual size used.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_BeginInit\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BeginInit()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Starts the initialization process for this element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void BeginInit ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You can call this method on individual elements if you are adjusting them in ways that do not yet expose or connect the element to any element tree. For instance, you might have created a new <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a>, but have not yet attached it to any logical tree. Or, the logical tree where your element is a child element within it might not be connected to a window or page of the application.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_BeginStoryboard_System_Windows_Media_Animation_Storyboard_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BeginStoryboard(Storyboard)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Begins the sequence of actions that are contained in the provided storyboard.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>storyboard</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The storyboard to begin.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Most typical animation scenarios do not use this method. Typically, you create the <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> or <a class=\"xref\" href=\"system.windows.media.animation.beginstoryboard\" data-linktype=\"relative-path\">BeginStoryboard</a> element in markup, and then you place these as the <a class=\"xref\" href=\"system.windows.eventtrigger\" data-linktype=\"relative-path\">EventTrigger</a> content on an element. When triggered by the event, the animation then runs. Most of the control aspects of a <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> can be addressed by properties that are exposed in markup.  </p>\n<p> For the signatures that do not use the <code>isControllable</code>, parameter, or when that parameter is specified <code>false</code>, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the &quot;Fill&quot; period. Therefore the animation cannot be restarted after running once. Controlling an animation also requires that the storyboard have an <a href=\"../Topic/x:Name%20Directive.md\" data-linktype=\"relative-path\">x:Name Directive</a> or be accessible by reference in code.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_BeginStoryboard_System_Windows_Media_Animation_Storyboard_System_Windows_Media_Animation_HandoffBehavior_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BeginStoryboard(Storyboard,HandoffBehavior)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Begins the sequence of actions contained in the provided storyboard, with options specified for what should happen if the property is already animated.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>storyboard</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The storyboard to begin.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>handoffBehavior</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Most typical animation scenarios do not use this method. Typically, you create the <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> or <a class=\"xref\" href=\"system.windows.media.animation.beginstoryboard\" data-linktype=\"relative-path\">BeginStoryboard</a> element in markup, and then you place these as the <a class=\"xref\" href=\"system.windows.eventtrigger\" data-linktype=\"relative-path\">EventTrigger</a> content on an element. When triggered by the event, the animation then runs. Most of the control aspects of a <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> can be addressed by properties that are exposed in markup.  </p>\n<p> For the signatures that do not use the <code>isControllable</code>, parameter, or when that parameter is specified <code>false</code>, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the &quot;Fill&quot; period. Therefore the animation cannot be restarted after running once. Controlling an animation also requires that the storyboard have an <a href=\"../Topic/x:Name%20Directive.md\" data-linktype=\"relative-path\">x:Name Directive</a> or be accessible by reference in code.  </p>\n<p> Handoff behavior can be specified as an attribute of <a class=\"xref\" href=\"system.windows.media.animation.beginstoryboard\" data-linktype=\"relative-path\">BeginStoryboard</a>.  </p>\n<h2 id=\"using-the-compose-handoffbehavior\">Using the Compose HandoffBehavior</h2>\n<p> When you apply a <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>, <a class=\"xref\" href=\"system.windows.media.animation.animationtimeline\" data-linktype=\"relative-path\">AnimationTimeline</a>, or <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> to a property by using the <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a> <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>, any <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.  </p>\n<p> To avoid performance issues when you apply a large number of clocks by using <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock:  </p>\n<ul>\n<li><p>To remove all clocks from a property, use the <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_ApplyAnimationClock_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationClock_\" data-linktype=\"relative-path\">ApplyAnimationClock(DependencyProperty,AnimationClock)</a> or <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationTimeline_\" data-linktype=\"relative-path\">BeginAnimation(DependencyProperty,AnimationTimeline)</a> method of the animated object. Specify the property being animated as the first parameter, and <code>null</code> as the second. This removes all animation clocks from the property.  </p>\n</li>\n<li><p>To remove a specific <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> from a list of clocks, use the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Controller_\" data-linktype=\"relative-path\">Controller</a> property of the <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> to retrieve a <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>, then call the <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller#System_Windows_Media_Animation_ClockController_Remove_\" data-linktype=\"relative-path\">Remove</a> method of the <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>. This is typically done in the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Completed\" data-linktype=\"relative-path\">Completed</a> event handler for a clock. Note that only root clocks can be controlled by a <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>; the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Controller_\" data-linktype=\"relative-path\">Controller</a> property of a child clock returns <code>null</code>. Note also that the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Completed\" data-linktype=\"relative-path\">Completed</a> event is not raised if the effective duration of the clock is forever.  In that case, the user must determine when to call <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller#System_Windows_Media_Animation_ClockController_Remove_\" data-linktype=\"relative-path\">Remove</a>.  </p>\n<p>This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  </p>\n<p>For more information about clock objects, see <a href=\"../Topic/Animation%20and%20Timing%20System%20Overview.md\" data-linktype=\"relative-path\">Animation and Timing System Overview</a>.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_BeginStoryboard_System_Windows_Media_Animation_Storyboard_System_Windows_Media_Animation_HandoffBehavior_System_Boolean_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BeginStoryboard(Storyboard,HandoffBehavior,Boolean)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Begins the sequence of actions contained in the provided storyboard, with specified state for control of the animation after it is started.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>storyboard</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The storyboard to begin.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>handoffBehavior</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>isControllable</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Declares whether the animation is controllable (can be paused) after it is started.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Most typical animation scenarios do not use this method. Typically, you create the <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> or <a class=\"xref\" href=\"system.windows.media.animation.beginstoryboard\" data-linktype=\"relative-path\">BeginStoryboard</a> element in markup, and then you place these as the <a class=\"xref\" href=\"system.windows.eventtrigger\" data-linktype=\"relative-path\">EventTrigger</a> content on an element. When triggered by the event, the animation then runs. Most of the control aspects of a <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a> can be addressed by properties that are exposed in markup.  </p>\n<p> For the signatures that do not use the <code>isControllable</code>, parameter, or when that parameter is specified <code>false</code>, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the &quot;Fill&quot; period. Therefore the animation cannot be restarted after running once. Controlling an animation also requires that the storyboard have an <a href=\"../Topic/x:Name%20Directive.md\" data-linktype=\"relative-path\">x:Name Directive</a> or be accessible by reference in code.  </p>\n<p> Handoff behavior can be specified as an attribute of <a class=\"xref\" href=\"system.windows.media.animation.beginstoryboard\" data-linktype=\"relative-path\">BeginStoryboard</a>.  </p>\n<h2 id=\"using-the-compose-handoffbehavior\">Using the Compose HandoffBehavior</h2>\n<p> When you apply a <a class=\"xref\" href=\"system.windows.media.animation.storyboard\" data-linktype=\"relative-path\">Storyboard</a>, <a class=\"xref\" href=\"system.windows.media.animation.animationtimeline\" data-linktype=\"relative-path\">AnimationTimeline</a>, or <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> to a property by using the <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a> <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>, any <a class=\"xref\" href=\"system.windows.media.animation.clock\" data-linktype=\"relative-path\">Clock</a> objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.  </p>\n<p> To avoid performance issues when you apply a large number of clocks by using <a class=\"xref\" href=\"system.windows.media.animation.handoffbehavior\" data-linktype=\"relative-path\">HandoffBehavior</a>, you should remove composing clocks from the animated property after they complete. There are several ways to remove a clock:  </p>\n<ul>\n<li><p>To remove all clocks from a property, use the <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_ApplyAnimationClock_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationClock_\" data-linktype=\"relative-path\">ApplyAnimationClock(DependencyProperty,AnimationClock)</a> or <a class=\"xref\" href=\"system.windows.media.animation.animatable#System_Windows_Media_Animation_Animatable_BeginAnimation_System_Windows_DependencyProperty_System_Windows_Media_Animation_AnimationTimeline_\" data-linktype=\"relative-path\">BeginAnimation(DependencyProperty,AnimationTimeline)</a> method of the animated object. Specify the property being animated as the first parameter, and <code>null</code> as the second. This removes all animation clocks from the property.  </p>\n</li>\n<li><p>To remove a specific <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> from a list of clocks, use the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Controller_\" data-linktype=\"relative-path\">Controller</a> property of the <a class=\"xref\" href=\"system.windows.media.animation.animationclock\" data-linktype=\"relative-path\">AnimationClock</a> to retrieve a <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>, then call the <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller#System_Windows_Media_Animation_ClockController_Remove_\" data-linktype=\"relative-path\">Remove</a> method of the <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>. This is typically done in the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Completed\" data-linktype=\"relative-path\">Completed</a> event handler for a clock. Note that only root clocks can be controlled by a <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller\" data-linktype=\"relative-path\">ClockController</a>; the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Controller_\" data-linktype=\"relative-path\">Controller</a> property of a child clock returns <code>null</code>. Note also that the <a class=\"xref\" href=\"system.windows.media.animation.clock#System_Windows_Media_Animation_Clock_Completed\" data-linktype=\"relative-path\">Completed</a> event is not raised if the effective duration of the clock is forever.  In that case, the user must determine when to call <a class=\"xref\" href=\"system.windows.media.animation.clockcontroller#System_Windows_Media_Animation_ClockController_Remove_\" data-linktype=\"relative-path\">Remove</a>.  </p>\n<p>This is primarily an issue for animations on objects that have a long lifetime.  When an object is garbage collected, its clocks are also disconnected and garbage collected.  </p>\n<p>For more information about clock objects, see <a href=\"../Topic/Animation%20and%20Timing%20System%20Overview.md\" data-linktype=\"relative-path\">Animation and Timing System Overview</a>.</p>\n</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_BringIntoView\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BringIntoView()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Attempts to bring this element into view, within any scrollable regions it is contained within.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void BringIntoView ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By calling this method, you raise a <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_RequestBringIntoView\" data-linktype=\"relative-path\">RequestBringIntoView</a> event that originates from the current element. This event is raised so that it can be handled by a <a class=\"xref\" href=\"system.windows.controls.scrollviewer\" data-linktype=\"relative-path\">ScrollViewer</a>, or a derived or similar class. The expected behavior is that the event is handled by the parent element, marked handled in the event data, and the source of the event is brought into view through the logic embedded in the <a class=\"xref\" href=\"system.windows.controls.scrollviewer\" data-linktype=\"relative-path\">ScrollViewer</a> control. Neither the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_RequestBringIntoView\" data-linktype=\"relative-path\">RequestBringIntoView</a> event nor the BringIntoView method transmit any information about success or failure, other than that the event is typically marked handled on success. Reasons for failure can include the element settings, such as <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Visibility_\" data-linktype=\"relative-path\">Visibility</a> being some value other than <a class=\"xref\" href=\"system.windows.visibility\" data-linktype=\"relative-path\">Visibility</a>.  </p>\n<p> If you use the signature that does not specify a <code>targetRectangle</code>, then the entire element size (its <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_RenderSize_\" data-linktype=\"relative-path\">RenderSize</a>) will be made visible.  </p>\n<p> By calling this method, you potentially will call <a class=\"xref\" href=\"system.windows.controls.scrollcontentpresenter#System_Windows_Controls_ScrollContentPresenter_MakeVisible_\" data-linktype=\"relative-path\">MakeVisible</a> on any parent scrollable area that contains the element. If this element is not contained in a scrollable area, the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_RequestBringIntoView\" data-linktype=\"relative-path\">RequestBringIntoView</a> event is still raised, but there will be no effect because there are no event listeners.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_BringIntoView_System_Windows_Rect_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">BringIntoView(Rect)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Attempts to bring the provided region size of this element into view, within any scrollable regions it is contained within.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void BringIntoView (System.Windows.Rect targetRectangle);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>targetRectangle</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.rect\" data-linktype=\"relative-path\">Rect</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Specified size of the element that should also be brought into view.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>By calling this method, you raise a <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_RequestBringIntoView\" data-linktype=\"relative-path\">RequestBringIntoView</a> event that originates from the current element. This event is raised so that it can be handled by a <a class=\"xref\" href=\"system.windows.controls.scrollviewer\" data-linktype=\"relative-path\">ScrollViewer</a>, or a derived or similar class. The expected behavior is that the event is handled by the parent element, marked handled in the event data, and the source of the event is brought into view through the logic embedded in the <a class=\"xref\" href=\"system.windows.controls.scrollviewer\" data-linktype=\"relative-path\">ScrollViewer</a> control. Neither the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_RequestBringIntoView\" data-linktype=\"relative-path\">RequestBringIntoView</a> event nor the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_BringIntoView_\" data-linktype=\"relative-path\">BringIntoView</a> method transmit any information about success or failure, other than that the event is typically marked handled on success. Reasons for failure can include the element settings, such as <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Visibility_\" data-linktype=\"relative-path\">Visibility</a> being some value other than <a class=\"xref\" href=\"system.windows.visibility\" data-linktype=\"relative-path\">Visibility</a>.  </p>\n<p> If you use the signature that does not specify a <code>targetRectangle</code>, then the entire element size (its <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_RenderSize_\" data-linktype=\"relative-path\">RenderSize</a>) will be made visible.  </p>\n<p> By calling this method, you potentially will call <a class=\"xref\" href=\"system.windows.controls.scrollcontentpresenter#System_Windows_Controls_ScrollContentPresenter_MakeVisible_\" data-linktype=\"relative-path\">MakeVisible</a> on any parent scrollable area that contains the element. If this element is not contained in a scrollable area, the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_RequestBringIntoView\" data-linktype=\"relative-path\">RequestBringIntoView</a> event is still raised, but there will be no effect because there are no event listeners.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_EndInit\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">EndInit()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Indicates that the initialization process for the element is complete.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void EndInit ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>EndInit was called without <span class=\"xref\">stem.Windows.FrameworkElement.BeginInit*</span> having previously been called on the element.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_BeginInit_\" data-linktype=\"relative-path\">BeginInit</a> was previously called, the base implementation will raise the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Initialized\" data-linktype=\"relative-path\">Initialized</a> event. Otherwise, if <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_BeginInit_\" data-linktype=\"relative-path\">BeginInit</a> was not called or it could not be determined whether <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_BeginInit_\" data-linktype=\"relative-path\">BeginInit</a> was called, <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Initialized\" data-linktype=\"relative-path\">Initialized</a> is not raised and an exception is thrown instead.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_FindName_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FindName(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Finds an element that has the provided identifier name.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object FindName (string name);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the requested element.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The requested element. This can be <code>null</code> if no matching element was found.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the element has child elements, these child elements are all searched recursively for the requested named element.  </p>\n<p> FindName operates within the current element&#39;s namescope. For details, see <a href=\"../Topic/WPF%20XAML%20Namescopes.md\" data-linktype=\"relative-path\">WPF XAML Namescopes</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_FindResource_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">FindResource(Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Searches for a resource with the specified key, and throws an exception if the requested resource is not found.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object FindResource (object resourceKey);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resourceKey</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The key identifier for the requested resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The requested resource. If no resource with the provided key was found, an exception is thrown. An <a class=\"xref\" href=\"system.windows.dependencyproperty#System_Windows_DependencyProperty_UnsetValue\" data-linktype=\"relative-path\">UnsetValue</a> value might also be returned in the exception case.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.resourcereferencekeynotfoundexception\" data-linktype=\"relative-path\">ResourceReferenceKeyNotFoundException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>resourceKey</code> was not found and an event handler does not exist for the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_UnhandledException\" data-linktype=\"relative-path\">UnhandledException</a> event.  </p>\n<p> -or-  </p>\n<p> <code>resourceKey</code> was not found and the <span class=\"xref\">stem.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled*</span> property is <code>false</code> in the <a class=\"xref\" href=\"system.windows.threading.dispatcher#System_Windows_Threading_Dispatcher_UnhandledException\" data-linktype=\"relative-path\">UnhandledException</a> event.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo stack\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p><code>resourceKey</code> is <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<div class=\"IMPORTANT\"><h5>Important</h5><p> If you call this method for a key that cannot be found, an exception is thrown. If you do not want to handle exceptions that result from calling FindResource, call <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_TryFindResource_\" data-linktype=\"relative-path\">TryFindResource</a> instead. <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_TryFindResource_\" data-linktype=\"relative-path\">TryFindResource</a> returns <code>null</code> when a requested resource cannot be found, and does not throw an exception.  </p>\n</div>\n<p> If the resource is not found on the calling element, the parent element in the logical tree is searched next, then the application, then themes, and finally system resources. This lookup methodology is identical to how the tree is searched if a resource were requested by a dynamic resource reference in markup. For more information about resource lookup, see <a href=\"../Topic/XAML%20Resources.md\" data-linktype=\"relative-path\">XAML Resources</a>.  </p>\n<p> Typically, you immediately cast a FindResource return value to the type of the property that you setting with the returned resource value.  </p>\n<p> Resource keys are not necessarily strings. For instance, styles for controls at the theme level are deliberately keyed to the <a class=\"xref\" href=\"system.type\" data-linktype=\"relative-path\">Type</a> of the control, and application or page styles for controls typically use this same key convention. For details, see <a href=\"../Topic/Styling%20and%20Templating.md\" data-linktype=\"relative-path\">Styling and Templating</a> or <a href=\"../Topic/XAML%20Resources.md\" data-linktype=\"relative-path\">XAML Resources</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_GetBindingExpression_System_Windows_DependencyProperty_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetBindingExpression(DependencyProperty)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the <a class=\"xref\" href=\"system.windows.data.bindingexpression\" data-linktype=\"relative-path\">BindingExpression</a> that represents the binding on the specified property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Data.BindingExpression GetBindingExpression (System.Windows.DependencyProperty dp);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dp</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The target <a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a> to get the binding from.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.data.bindingexpression\" data-linktype=\"relative-path\">BindingExpression</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A <a class=\"xref\" href=\"system.windows.data.bindingexpression\" data-linktype=\"relative-path\">BindingExpression</a> if the target property has an active binding; otherwise, returns <code>null</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Checking the return value for <code>null</code> is a technique you can use to determine whether a property has an active binding.  </p>\n<p> This method is really just a convenience wrapper around the <a class=\"xref\" href=\"system.windows.data.bindingoperations#System_Windows_Data_BindingOperations_GetBindingExpression_\" data-linktype=\"relative-path\">GetBindingExpression</a> method. GetBindingExpression passes the current instance and the <code>dp</code> parameter to <a class=\"xref\" href=\"system.windows.data.bindingoperations#System_Windows_Data_BindingOperations_GetBindingExpression_\" data-linktype=\"relative-path\">GetBindingExpression</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_GetFlowDirection_System_Windows_DependencyObject_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetFlowDirection(DependencyObject)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value of the <span class=\"xref\">stem.Windows.FrameworkElement.FlowDirection*</span> attached property for the specified <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.FlowDirection GetFlowDirection (System.Windows.DependencyObject element);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>element</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The element to return a <span class=\"xref\">stem.Windows.FrameworkElement.FlowDirection*</span> for.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.flowdirection\" data-linktype=\"relative-path\">FlowDirection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The requested flow direction, as a value of the enumeration.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The main purpose of this method is to support attached property syntax for the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_FlowDirection_\" data-linktype=\"relative-path\">FlowDirection</a> property, therefore allowing child elements of a provided <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> to specify flow direction for the arrangement within their parent element. To get the value on the current <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a>, use the direct common language runtime (CLR) accessor <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_FlowDirection_\" data-linktype=\"relative-path\">FlowDirection</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_GetLayoutClip_System_Windows_Size_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetLayoutClip(Size)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns a geometry for a clipping mask. The mask applies if the layout system attempts to arrange an element that is larger than the available display space.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override System.Windows.Media.Geometry GetLayoutClip (System.Windows.Size layoutSlotSize);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>layoutSlotSize</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The size of the part of the element that does visual presentation.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.geometry\" data-linktype=\"relative-path\">Geometry</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The clipping geometry.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Margins will be subtracted from the <code>layoutSlotSize</code> as part of layout system behavior.  </p>\n<p> A returned null reference indicates that no clipping will occur. The default implementation always returns <code>null</code> when <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ClipToBounds_\" data-linktype=\"relative-path\">ClipToBounds</a> is <code>false</code>. This method overrides <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_GetLayoutClip_\" data-linktype=\"relative-path\">GetLayoutClip</a>. The <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> implementation uses <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MaxHeight_\" data-linktype=\"relative-path\">MaxHeight</a> and <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MaxWidth_\" data-linktype=\"relative-path\">MaxWidth</a> in its calculations. Several subclasses of <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> override this method again. <a class=\"xref\" href=\"system.windows.documents.adorner#System_Windows_Documents_Adorner_GetLayoutClip_\" data-linktype=\"relative-path\">GetLayoutClip</a>, overrides to always return <code>null</code> because adorners are often deliberately outside the ordinary bounds. <a class=\"xref\" href=\"system.windows.controls.canvas#System_Windows_Controls_Canvas_GetLayoutClip_\" data-linktype=\"relative-path\">GetLayoutClip</a> and <a class=\"xref\" href=\"system.windows.controls.inkpresenter#System_Windows_Controls_InkPresenter_GetLayoutClip_\" data-linktype=\"relative-path\">GetLayoutClip</a> return <code>null</code> if <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_ClipToBounds_\" data-linktype=\"relative-path\">ClipToBounds</a> is <code>false</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_GetTemplateChild_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetTemplateChild(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns the named element in the visual tree of an instantiated <a class=\"xref\" href=\"system.windows.controls.controltemplate\" data-linktype=\"relative-path\">ControlTemplate</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected System.Windows.DependencyObject GetTemplateChild (string childName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>childName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Name of the child to find.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The requested element. May be <code>null</code> if no element of the requested name exists.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Templates in WPF have a self-contained namescope. This is because templates are re-used, and any name defined in a template cannot remain unique when multiple instances of a control each instantiate its template. Call the GetTemplateChild method to return references to objects that come from the template after it is instantiated. You cannot use the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_FindName_\" data-linktype=\"relative-path\">FindName</a> method to find items from templates because <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_FindName_\" data-linktype=\"relative-path\">FindName</a> acts in a more general scope, and there is no connection between the <a class=\"xref\" href=\"system.windows.controls.controltemplate\" data-linktype=\"relative-path\">ControlTemplate</a> class itself and the instantiated template once it is applied.  </p>\n<p> <a class=\"xref\" href=\"system.windows.frameworktemplate#System_Windows_FrameworkTemplate_FindName_\" data-linktype=\"relative-path\">FindName</a> supplies the same function as this method. <a class=\"xref\" href=\"system.windows.frameworktemplate#System_Windows_FrameworkTemplate_FindName_\" data-linktype=\"relative-path\">FindName</a> is public instead of protected, and it uses correct name-scoping considerations that allow it to access the template within an element and find named items within it. Use <a class=\"xref\" href=\"system.windows.frameworktemplate#System_Windows_FrameworkTemplate_FindName_\" data-linktype=\"relative-path\">FindName</a> when you need to get an element outside of its parent control.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_GetUIParentCore\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetUIParentCore()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns an alternative logical parent for this element if there is no visual parent.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override System.Windows.DependencyObject GetUIParentCore ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns something other than <code>null</code> whenever a WPF framework-level implementation of this method has a non-visual parent connection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method overrides <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_GetUIParentCore_\" data-linktype=\"relative-path\">GetUIParentCore</a>. The default <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> implementation returns the expected single visual parent, which is the same result as getting the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Parent_\" data-linktype=\"relative-path\">Parent</a> value. Derived class implementations might return alternate parent relationships.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_GetVisualChild_System_Int32_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">GetVisualChild(Int32)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Overrides <span class=\"xref\">stem.Windows.Media.Visual.GetVisualChild*</span>, and returns a child at the specified index from a collection of child elements.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override System.Windows.Media.Visual GetVisualChild (int index);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>index</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The zero-based index of the requested child element in the collection.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.media.visual\" data-linktype=\"relative-path\">Visual</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The requested child element. This should not return <code>null</code>; if the provided index is out of range, an exception is thrown.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>In the <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> implementation, the only valid index is zero. The content model for GetVisualChild supports either zero or one child elements, not a collection.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_MeasureCore_System_Windows_Size_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MeasureCore(Size)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Implements basic measure-pass layout system behavior for <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override sealed System.Windows.Size MeasureCore (System.Windows.Size availableSize);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>availableSize</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The available size that the parent element can give to the child elements.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The desired size of this element in layout.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method overrides <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MeasureCore_\" data-linktype=\"relative-path\">MeasureCore</a> to connect the  WPF core-level and WPF framework-level layout measure implementations. The <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> implementation seals the method. To adjust the measure pass layout behavior of any element that builds on the WPF framework-level, override <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MeasureOverride_\" data-linktype=\"relative-path\">MeasureOverride</a> instead. To adjust the measure pass layout behavior of an element that deliberately does not build on the WPF framework-level or use <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a>, override <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MeasureCore_\" data-linktype=\"relative-path\">MeasureCore</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_MeasureOverride_System_Windows_Size_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MeasureOverride(Size)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a>-derived class.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual System.Windows.Size MeasureOverride (System.Windows.Size availableSize);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>availableSize</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.size\" data-linktype=\"relative-path\">Size</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The size that this element determines it needs during layout, based on its calculations of child element sizes.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Override MeasureOverride to implement custom layout sizing behavior for your element as it participates in the Windows Presentation Foundation (WPF) layout system. Your implementation should do the following:  </p>\n<ol>\n<li><p>Iterate your element&#39;s particular collection of children that are part of layout, call <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Measure_\" data-linktype=\"relative-path\">Measure</a> on each child element.  </p>\n</li>\n<li><p>Immediately get <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_DesiredSize_\" data-linktype=\"relative-path\">DesiredSize</a> on the child (this is set as a property after <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Measure_\" data-linktype=\"relative-path\">Measure</a> is called).  </p>\n</li>\n<li><p>Compute the net desired size of the parent based upon the measurement of the child elements.  </p>\n<p>The return value of MeasureOverride should be the element&#39;s own desired size, which then becomes the measure input for the parent element of the current element. This same process continues through the layout system until the root element of the page is reached.  </p>\n<p>During this process, child elements might return a larger <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_DesiredSize_\" data-linktype=\"relative-path\">DesiredSize</a> size than the initial <code>availableSize</code> to indicate that the child element wants more space. This might be handled in your own implementation by introducing a scrollable region, by resizing the parent control, by establishing some manner of stacked order, or any number of solutions for measuring or arranging content.  </p>\n</li>\n</ol>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> Elements should call <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Measure_\" data-linktype=\"relative-path\">Measure</a> on each child during this process, otherwise the child elements will not be correctly sized or arranged.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_MoveFocus_System_Windows_Input_TraversalRequest_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveFocus(TraversalRequest)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Moves the keyboard focus away from this element and to another element in a provided traversal direction.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override sealed bool MoveFocus (System.Windows.Input.TraversalRequest request);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>request</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.traversalrequest\" data-linktype=\"relative-path\">TraversalRequest</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The direction that focus is to be moved, as a value of the enumeration.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Returns <code>true</code> if focus is moved successfully; <code>false</code> if the target element in direction as specified does not exist or could not be keyboard focused.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This implementation overrides <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_MoveFocus_\" data-linktype=\"relative-path\">MoveFocus</a> and seals the method.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_OnApplyTemplate\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnApplyTemplate()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>When overridden in a derived class, is invoked whenever application code or internal processes call <span class=\"xref\">stem.Windows.FrameworkElement.ApplyTemplate*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public virtual void OnApplyTemplate ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method has no default implementation.  </p>\n<p> Templates are the section of an element&#39;s completed visual tree that comes from the Template property of a <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> that is applied for the element. For more information, see <a href=\"../Topic/Styling%20and%20Templating.md\" data-linktype=\"relative-path\">Styling and Templating</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_OnContextMenuClosing_System_Windows_Controls_ContextMenuEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnContextMenuClosing(ContextMenuEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Invoked whenever an unhandled <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ContextMenuClosing\" data-linktype=\"relative-path\">ContextMenuClosing</a> routed event reaches this class in its route. Implement this method to add class handling for this event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnContextMenuClosing (System.Windows.Controls.ContextMenuEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.controls.contextmenueventargs\" data-linktype=\"relative-path\">ContextMenuEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Provides data about the event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method has no default implementation. You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.  </p>\n<p> The purpose of this method is somewhat similar to common language runtime (CLR) event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments&#39; source properties into account (and should not try to re-raise the event in most cases). Subclasses of <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> could choose to call private class handler methods when the event is received along the route. One potential scenario is to take the arguments of the event and deliberately mark the event as handled.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_OnContextMenuOpening_System_Windows_Controls_ContextMenuEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnContextMenuOpening(ContextMenuEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Invoked whenever an unhandled <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ContextMenuOpening\" data-linktype=\"relative-path\">ContextMenuOpening</a> routed event reaches this class in its route. Implement this method to add class handling for this event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.controls.contextmenueventargs\" data-linktype=\"relative-path\">ContextMenuEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.routedeventargs\" data-linktype=\"relative-path\">RoutedEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method has no default implementation. You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.  </p>\n<p> The purpose of this method is somewhat similar to common language runtime (CLR) event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments&#39; source properties into account (and should not try to re-raise the event in most cases). Subclasses of <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> could choose to call private class handler methods when the event is received along the route. One potential scenario is to take the arguments of the event and deliberately mark the event as handled.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_OnGotFocus_System_Windows_RoutedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnGotFocus(RoutedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Invoked whenever an unhandled <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_GotFocus\" data-linktype=\"relative-path\">GotFocus</a> event reaches this element in its route.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override void OnGotFocus (System.Windows.RoutedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.routedeventargs\" data-linktype=\"relative-path\">RoutedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.routedeventargs\" data-linktype=\"relative-path\">RoutedEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Unlike some other On* methods exposed by the base elements, OnGotFocus does have a default implementation. Specifically, it has an implementation that overrides the null implementation in the next level of base element down, <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnGotFocus_\" data-linktype=\"relative-path\">OnGotFocus</a>. When invoked, OnGotFocus sets appropriate focus behavior on this element in cases where the event originated from the current element due to keyboard focus. The OnGotFocus handler does not mark the event arguments as handled, even when focus is set to the current element. If the event&#39;s source was another element in the tree (not the current element), the handler does nothing.  </p>\n<p> You can override this method in order to change the default focus behavior on your element, but be aware that changing focus behavior in this way might be better accomplished by not allowing the element to be focusable at all (see <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_Focusable_\" data-linktype=\"relative-path\">Focusable</a>).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_OnInitialized_System_EventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnInitialized(EventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Initialized\" data-linktype=\"relative-path\">Initialized</a> event. This method is invoked whenever <span class=\"xref\">stem.Windows.FrameworkElement.IsInitialized*</span> is set to <code>true</code>internally.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnInitialized (EventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.eventargs\" data-linktype=\"relative-path\">EventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The <a class=\"xref\" href=\"system.windows.routedeventargs\" data-linktype=\"relative-path\">RoutedEventArgs</a> that contains the event data.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This particular On* method is not a class handler hook. Nor does it exactly follow the established common language runtime (CLR) On* method convention that the matching event could be suppressed by overriding this method and not calling the base implementation.  </p>\n<p> Note that the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_IsInitialized_\" data-linktype=\"relative-path\">IsInitialized</a> property is read-only, so you cannot set <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_IsInitialized_\" data-linktype=\"relative-path\">IsInitialized</a> to force initialization behavior. Setting the initialization state is intended to be done only by the Windows Presentation Foundation (WPF) framework.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_OnPropertyChanged_System_Windows_DependencyPropertyChangedEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnPropertyChanged(DependencyPropertyChangedEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Invoked whenever the effective value of any dependency property on this <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> has been updated. The specific dependency property that changed is reported in the arguments parameter. Overrides <span class=\"xref\">stem.Windows.DependencyObject.OnPropertyChanged*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencypropertychangedeventargs\" data-linktype=\"relative-path\">DependencyPropertyChangedEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The event data that describes the property that changed, as well as old and new values.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is not intended to generally detect property changes or invalidations. It is instead intended for modifications of the general invalidation pattern if certain information is known about wide classifications of properties.  </p>\n<p> This method is potentially invoked many times during the life of an object. Therefore, you can achieve better performance if you override the metadata of specific properties and then attach <a class=\"xref\" href=\"system.windows.coercevaluecallback\" data-linktype=\"relative-path\">CoerceValueCallback</a> or <a class=\"xref\" href=\"system.windows.propertychangedcallback\" data-linktype=\"relative-path\">PropertyChangedCallback</a> functions for individual properties. However, you would use this method if a <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.  </p>\n<p> Note that there is an identically named <code>OnPropertyChanged</code> method with a different signature (the parameter type is <a class=\"xref\" href=\"system.componentmodel.propertychangedeventargs\" data-linktype=\"relative-path\">PropertyChangedEventArgs</a>) that can appear on a number of classes. That <code>OnPropertyChanged</code> is used for data object notifications, and is part of the contract for <a class=\"xref\" href=\"system.componentmodel.inotifypropertychanged\" data-linktype=\"relative-path\">INotifyPropertyChanged</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_OnRenderSizeChanged_System_Windows_SizeChangedInfo_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnRenderSizeChanged(SizeChangedInfo)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Raises the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_SizeChanged\" data-linktype=\"relative-path\">SizeChanged</a> event, using the specified information as part of the eventual event data.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override void OnRenderSizeChanged (System.Windows.SizeChangedInfo sizeInfo);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>sizeInfo</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.sizechangedinfo\" data-linktype=\"relative-path\">SizeChangedInfo</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Details of the old and new size involved in the change.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method overrides <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_OnRenderSizeChanged_\" data-linktype=\"relative-path\">OnRenderSizeChanged</a>. If you call this method you will reset the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ActualWidth_\" data-linktype=\"relative-path\">ActualWidth</a> property, the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ActualHeight_\" data-linktype=\"relative-path\">ActualHeight</a> property, or both, depending on what is specified as changed in the supplied arguments, and will you always raise the event.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_OnStyleChanged_System_Windows_Style_System_Windows_Style_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnStyleChanged(Style,Style)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Invoked when the style in use on this element changes, which will invalidate the layout.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnStyleChanged (System.Windows.Style oldStyle, System.Windows.Style newStyle);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>oldStyle</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The old style.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>newStyle</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The new style.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method has a default implementation that sets an internal flag that notes the style changed condition.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_OnToolTipClosing_System_Windows_Controls_ToolTipEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnToolTipClosing(ToolTipEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Invoked whenever an unhandled <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ToolTipClosing\" data-linktype=\"relative-path\">ToolTipClosing</a> routed event reaches this class in its route. Implement this method to add class handling for this event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnToolTipClosing (System.Windows.Controls.ToolTipEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.controls.tooltipeventargs\" data-linktype=\"relative-path\">ToolTipEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Provides data about the event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method has no default implementation. You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.  </p>\n<p> The purpose of this method is somewhat similar to common language runtime (CLR) event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments&#39; source properties into account (and should not try to re-raise the event in most cases). Subclasses of <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> could choose to call private class handler methods when the event is received along the route. One potential scenario is to take the arguments of the event and deliberately mark the event as handled.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_OnToolTipOpening_System_Windows_Controls_ToolTipEventArgs_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnToolTipOpening(ToolTipEventArgs)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Invoked whenever the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ToolTipOpening\" data-linktype=\"relative-path\">ToolTipOpening</a> routed event reaches this class in its route. Implement this method to add class handling for this event.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void OnToolTipOpening (System.Windows.Controls.ToolTipEventArgs e);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>e</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.controls.tooltipeventargs\" data-linktype=\"relative-path\">ToolTipEventArgs</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Provides data about the event.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method has no default implementation. You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.  </p>\n<p> The purpose of this method is somewhat similar to common language runtime (CLR) event pattern On* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler. In this case the matching event is a routed event. The implementation pattern of the On* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments&#39; source properties into account (and should not try to re-raise the event in most cases). Subclasses of <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> could choose to call private class handler methods when the event is received along the route. One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_OnVisualParentChanged_System_Windows_DependencyObject_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">OnVisualParentChanged(DependencyObject)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Invoked when the parent of this element in the visual tree is changed. Overrides <span class=\"xref\">stem.Windows.UIElement.OnVisualParentChanged*</span>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>oldParent</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The old parent element. May be <code>null</code> to indicate that the element did not have a visual parent previously.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>The visual tree is potentially different from the logical tree because it omits elements that do not render visually, such as collections, and expands some elements on the basis of their theme and style compositing. For more information, see <a href=\"../Topic/Trees%20in%20WPF.md\" data-linktype=\"relative-path\">Trees in WPF</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ParentLayoutInvalidated_System_Windows_UIElement_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ParentLayoutInvalidated(UIElement)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Supports incremental layout implementations in specialized subclasses of <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a>. ParentLayoutInvalidated is invoked when a child element has invalidated a property that is marked in metadata as affecting the parent&#39;s measure or arrange passes during layout.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected virtual void ParentLayoutInvalidated (System.Windows.UIElement child);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>child</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.uielement\" data-linktype=\"relative-path\">System.Windows.UIElement</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The child element reporting the change.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If this element has a child element on which some property was invalidated and the property was marked as <a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsParentMeasure_\" data-linktype=\"relative-path\">AffectsParentMeasure</a> or <a class=\"xref\" href=\"system.windows.frameworkpropertymetadata#System_Windows_FrameworkPropertyMetadata_AffectsParentArrange_\" data-linktype=\"relative-path\">AffectsParentArrange</a> in property metadata during registration, this method is invoked. The method invocation notifies the parent element which particular child element must be re-measured if this element supports partial (incremental) update of layout.  </p>\n<p> By default, <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> does not support incremental layout, and in the <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> class this method has no default implementation. The scenario where overriding this method would be necessary is not common, because it requires you to modify the default layout system behavior.  </p>\n<p> An example implementation scenario might be if a class had type limitations for possible child elements that are significantly more restrictive than the WPF framework-level layout system. Because of the nature of these custom elements, property changes could be deliberately deferred when you implement some custom layout behavior. For instance, measure/arrange method overrides, which try to optimize the child element render pass, could be deferred for certain types of changes that would ordinarily result in another layout pass.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_PredictFocus_System_Windows_Input_FocusNavigationDirection_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">PredictFocus(FocusNavigationDirection)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public override sealed System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>direction</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.focusnavigationdirection\" data-linktype=\"relative-path\">FocusNavigationDirection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The direction for which a prospective focus change should be determined.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The next element that focus would move to if focus were actually traversed. May return <code>null</code> if focus cannot be moved relative to this element for the provided direction.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfoTitle stack\">Exceptions</div>\r\n  \t\t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t\t<div class=\"subtle\">\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.componentmodel.invalidenumargumentexception\" data-linktype=\"relative-path\">InvalidEnumArgumentException</a></span>\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t\t<p>Specified one of the following directions in the <a class=\"xref\" href=\"system.windows.input.traversalrequest\" data-linktype=\"relative-path\">TraversalRequest</a>: <a class=\"xref\" href=\"system.windows.input.focusnavigationdirection\" data-linktype=\"relative-path\">FocusNavigationDirection</a>, <a class=\"xref\" href=\"system.windows.input.focusnavigationdirection\" data-linktype=\"relative-path\">FocusNavigationDirection</a>, <a class=\"xref\" href=\"system.windows.input.focusnavigationdirection\" data-linktype=\"relative-path\">FocusNavigationDirection</a>, <a class=\"xref\" href=\"system.windows.input.focusnavigationdirection\" data-linktype=\"relative-path\">FocusNavigationDirection</a>. These directions are not legal for PredictFocus (but they are legal for <span class=\"xref\">stem.Windows.FrameworkElement.MoveFocus*</span>).</p>\n\r\n  \t\t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_MoveFocus_\" data-linktype=\"relative-path\">MoveFocus</a> is the related method that actually does move focus.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_RegisterName_System_String_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RegisterName(String,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Provides an accessor that simplifies access to the <a class=\"xref\" href=\"system.windows.namescope\" data-linktype=\"relative-path\">NameScope</a> registration method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void RegisterName (string name, object scopedElement);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Name to use for the specified name-object mapping.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>scopedElement</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Object for the mapping.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is a convenience method for calling <a class=\"xref\" href=\"system.windows.namescope#System_Windows_NameScope_RegisterName_\" data-linktype=\"relative-path\">RegisterName</a>. The implementation will check successive parent elements until it finds the applicable <a class=\"xref\" href=\"system.windows.namescope\" data-linktype=\"relative-path\">NameScope</a> implementation, which is found by finding an element that implements <a class=\"xref\" href=\"system.windows.markup.inamescope\" data-linktype=\"relative-path\">INameScope</a>. For more information about namescopes, see <a href=\"../Topic/WPF%20XAML%20Namescopes.md\" data-linktype=\"relative-path\">WPF XAML Namescopes</a>.  </p>\n<p> Calling RegisterName is necessary in order to correctly hook up animation storyboards for applications when created in code. This is because one of the key storyboard properties, &lt;xref:System.Windows.Media.Animation.Storyboard.TargetName%2A&gt;, uses a run-time name lookup instead of being able to take a reference to a target element. This is true even if that element is accessible by reference from the code. For more information on why you need to register names for storyboard targets, see <a href=\"../Topic/Storyboards%20Overview.md\" data-linktype=\"relative-path\">Storyboards Overview</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_RemoveLogicalChild_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RemoveLogicalChild(Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Removes the provided object from this element&#39;s logical tree. <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> updates the affected logical tree parent pointers to keep in sync with this deletion.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">protected void RemoveLogicalChild (object child);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>child</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The element to remove.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Use this method for the implementation of collections on objects that represent logical children of an element. This might be done in property getters or setters, class handlers of <code>Changed</code> events, constructors, or within the collection types themselves.  </p>\n<p> For control authors, manipulating the logical tree at this level is not the recommended practice, unless none of the provided base control class&#39; content models are appropriate. Consider subclassing at the level of <a class=\"xref\" href=\"system.windows.controls.contentcontrol\" data-linktype=\"relative-path\">ContentControl</a>, <a class=\"xref\" href=\"system.windows.controls.itemscontrol\" data-linktype=\"relative-path\">ItemsControl</a>, and <a class=\"xref\" href=\"system.windows.controls.headereditemscontrol\" data-linktype=\"relative-path\">HeaderedItemsControl</a>. These classes provide a content model with particular enforcement of logical children through dedicated APIs, as well as support for other features typically desirable in a WPF control such as styling through templates.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_SetBinding_System_Windows_DependencyProperty_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetBinding(DependencyProperty,String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Attaches a binding to this element, based on the provided source property name as a path qualification to the data source.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Data.BindingExpression SetBinding (System.Windows.DependencyProperty dp, string path);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dp</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Identifies the destination property where the binding should be established.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>path</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The source property name or the path to the property used for the binding.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.data.bindingexpression\" data-linktype=\"relative-path\">BindingExpression</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Records the conditions of the binding. This return value can be useful for error checking.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is a convenience method for calling <a class=\"xref\" href=\"system.windows.data.bindingoperations#System_Windows_Data_BindingOperations_SetBinding_\" data-linktype=\"relative-path\">SetBinding</a>, which passes the current instance as the <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>, and creates a new <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> based on the provided <code>path</code> parameter. This signature is more convenient if you are establishing a simple default binding. If you need to specify any binding properties to non-default conditions, or want to use a <a class=\"xref\" href=\"system.windows.data.multibinding\" data-linktype=\"relative-path\">MultiBinding</a> or <a class=\"xref\" href=\"system.windows.data.prioritybinding\" data-linktype=\"relative-path\">PriorityBinding</a>,you should use the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_SetBinding_System_Windows_DependencyProperty_System_Windows_Data_BindingBase_\" data-linktype=\"relative-path\">SetBinding(DependencyProperty,BindingBase)</a> signature.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_SetBinding_System_Windows_DependencyProperty_System_Windows_Data_BindingBase_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetBinding(DependencyProperty,BindingBase)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Attaches a binding to this element, based on the provided binding object.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public System.Windows.Data.BindingExpressionBase SetBinding (System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dp</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Identifies the property where the binding should be established.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>binding</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.data.bindingbase\" data-linktype=\"relative-path\">BindingBase</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Represents the specifics of the data binding.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.data.bindingexpressionbase\" data-linktype=\"relative-path\">BindingExpressionBase</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Records the conditions of the binding. This return value can be useful for error checking.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method is a convenience method for calling <a class=\"xref\" href=\"system.windows.data.bindingoperations#System_Windows_Data_BindingOperations_SetBinding_\" data-linktype=\"relative-path\">SetBinding</a>, which passes the current instance as the <a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_SetFlowDirection_System_Windows_DependencyObject_System_Windows_FlowDirection_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetFlowDirection(DependencyObject,FlowDirection)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Sets the value of the <span class=\"xref\">stem.Windows.FrameworkElement.FlowDirection*</span> attached property for the provided element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static void SetFlowDirection (System.Windows.DependencyObject element, System.Windows.FlowDirection value);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>element</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyobject\" data-linktype=\"relative-path\">DependencyObject</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The element that specifies a flow direction.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.flowdirection\" data-linktype=\"relative-path\">FlowDirection</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>A value of the enumeration, specifying the direction.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method supports attached property syntax for the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_FlowDirection_\" data-linktype=\"relative-path\">FlowDirection</a> property, therefore allowing child elements of a provided <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> to specify flow direction for the arrangement within their parent element. To set the value on the current <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a>, use the direct common language runtime (CLR) accessor <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_FlowDirection_\" data-linktype=\"relative-path\">FlowDirection</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_SetResourceReference_System_Windows_DependencyProperty_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SetResourceReference(DependencyProperty,Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Searches for a resource with the specified name and sets up a resource reference to it for the specified property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void SetResourceReference (System.Windows.DependencyProperty dp, object name);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>dp</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.dependencyproperty\" data-linktype=\"relative-path\">DependencyProperty</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The property to which the resource is bound.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the resource.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>A resource reference is similar to the use of a <a href=\"../Topic/DynamicResource%20Markup%20Extension.md\" data-linktype=\"relative-path\">DynamicResource Markup Extension</a> in markup. The resource reference creates an internal expression that supplies the value of the specified property on a run-time deferred basis. The expression will be re-evaluated whenever the resource dictionary indicates a changed value through internal events, or whenever the current element is reparented (a parent change would change the dictionary lookup path).</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ShouldSerializeResources\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ShouldSerializeResources()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns whether serialization processes should serialize the contents of the <span class=\"xref\">stem.Windows.FrameworkElement.Resources*</span> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool ShouldSerializeResources ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <span class=\"xref\">stem.Windows.FrameworkElement.Resources*</span> property value should be serialized; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This will return <code>true</code> as long as there is at least one keyed resource in the local <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Resources_\" data-linktype=\"relative-path\">Resources</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ShouldSerializeStyle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ShouldSerializeStyle()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns whether serialization processes should serialize the contents of the <span class=\"xref\">stem.Windows.FrameworkElement.Style*</span> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool ShouldSerializeStyle ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <span class=\"xref\">stem.Windows.FrameworkElement.Style*</span> property value should be serialized; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This will return <code>true</code> if the <a class=\"xref\" href=\"system.windows.style\" data-linktype=\"relative-path\">Style</a> is locally set.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ShouldSerializeTriggers\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ShouldSerializeTriggers()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Returns whether serialization processes should serialize the contents of the <span class=\"xref\">stem.Windows.FrameworkElement.Triggers*</span> property.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public bool ShouldSerializeTriggers ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if the <span class=\"xref\">stem.Windows.FrameworkElement.Triggers*</span> property value should be serialized; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This method returns <code>true</code> if the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Triggers_\" data-linktype=\"relative-path\">Triggers</a> property is locally set.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_TryFindResource_System_Object_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TryFindResource(Object)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Searches for a resource with the specified key, and returns that resource if found.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public object TryFindResource (object resourceKey);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>resourceKey</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The key identifier of the resource to be found.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The found resource, or <code>null</code> if no resource with the provided <code>key</code> is found.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>If the resource is not found on the calling element, the parent resource tree is searched upward through the logical tree, in the same way that the tree would be searched if a resource were requested by key at run time. The method returns <code>null</code> only if no resource of that key existed anywhere in the resource tree, per the existing conditions of the tree at the time that TryFindResource is called.  </p>\n<p> Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_FindResource_\" data-linktype=\"relative-path\">FindResource</a> method has similar behavior, except that it throws an exception if no resource with the provided key was returned.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_UnregisterName_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UnregisterName(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Simplifies access to the <a class=\"xref\" href=\"system.windows.namescope\" data-linktype=\"relative-path\">NameScope</a> de-registration method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UnregisterName (string name);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>name</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>Name of the name-object pair to remove from the current scope.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>You only need to un-register names if you intend to re-register another element with that same name.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_UpdateDefaultStyle\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">UpdateDefaultStyle()</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Reapplies the default style to the current <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public void UpdateDefaultStyle ();</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Events\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ContextMenuClosing\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ContextMenuClosing</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs just before any context menu on the element is closed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Controls.ContextMenuEventHandler ContextMenuClosing;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To suppress closing context menus, handlers of the event should mark it as handled.  </p>\n<p> To use this event as an <a class=\"xref\" href=\"system.windows.eventtrigger\" data-linktype=\"relative-path\">EventTrigger</a> in a style, you must reference the underlying service&#39;s definition of the event:  </p>\n<pre><code class=\"lang-xml\" name=\"CorePseudocode#FEContextMenuClosing\">&lt;EventTrigger RoutedEvent=&quot;ContextMenuService.ContextMenuClosing&quot;&gt;\n  &lt;!-- storyboard here ... --&gt;\n&lt;/EventTrigger&gt;\n</code></pre><p> (This usage is required because the event implementation on <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> that exposes the underlying service event does not map the ContextMenuClosing identifier such that you can use it as a trigger).  </p>\n<p> <a class=\"xref\" href=\"system.windows.controls.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> itself is a <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> derived class, but the ContextMenuClosing event will not be raised by a context menu directly. Instead, the event is raised from the element that &quot;owns&quot; the context menu as a property and is only raised when a user attempts to close a context menu in the UI. However it is possible for <a class=\"xref\" href=\"system.windows.controls.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> itself to have a <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a> property (a nested context menu). In this case the <a class=\"xref\" href=\"system.windows.controls.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> really does own the nested <a class=\"xref\" href=\"system.windows.controls.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> and might raise the event, with the source of the event being the nested context menu.  </p>\n<p> The <a class=\"xref\" href=\"system.windows.controls.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> class itself also has a similar event (<a class=\"xref\" href=\"system.windows.controls.contextmenu#System_Windows_Controls_ContextMenu_Closed\" data-linktype=\"relative-path\">Closed</a>) but the <a class=\"xref\" href=\"system.windows.controls.contextmenu#System_Windows_Controls_ContextMenu_Closed\" data-linktype=\"relative-path\">Closed</a> event does not provide you the opportunity to cancel the user action.  </p>\n<p><a name=\"routedEventInfo_ContextMenuClosing\"></a>   </p>\n<h2 id=\"routed-event-information\">Routed Event Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ContextMenuClosingEvent\" data-linktype=\"relative-path\">ContextMenuClosingEvent</a></td>\n</tr>\n<tr>\n<td>Routing strategy</td>\n<td>Bubbling</td>\n</tr>\n<tr>\n<td>Delegate</td>\n<td><a class=\"xref\" href=\"system.windows.controls.contextmenueventhandler\" data-linktype=\"relative-path\">ContextMenuEventHandler</a></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Override <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_OnContextMenuClosing_\" data-linktype=\"relative-path\">OnContextMenuClosing</a> to implement class handling for this event in derived classes.</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ContextMenuOpening\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ContextMenuOpening</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when any context menu on the element is opened.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Controls.ContextMenuEventHandler ContextMenuOpening;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To manually open context menus, handlers of the events should mark the relevant event as handled. Otherwise, the existing value of the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a> property will be used to automatically open a context menu. Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a> property and then open the new <a class=\"xref\" href=\"system.windows.controls.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a>. However, there is a timing issue you should be aware of. In order to completely replace the context menu through a ContextMenuOpening handler, the initial context menu must not be null / empty. Alternatively, you might need to handle the event and then manually open a new context menu. For details, see <a href=\"../Topic/How%20to:%20Handle%20the%20ContextMenuOpening%20Event.md\" data-linktype=\"relative-path\">How to: Handle the ContextMenuOpening Event</a>.  </p>\n<p> To use this event as an <a class=\"xref\" href=\"system.windows.eventtrigger\" data-linktype=\"relative-path\">EventTrigger</a> in a style, you must reference the underlying attached event:  </p>\n<pre><code class=\"lang-xml\" name=\"CorePseudocode#FEContextMenuOpening\">&lt;EventTrigger RoutedEvent=&quot;ContextMenuService.ContextMenuOpening&quot;&gt;\n  &lt;!-- storyboard here ... --&gt;\n&lt;/EventTrigger&gt;\n</code></pre><p> (This usage is required because the event implementation on <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> that exposes the underlying service event does not map the ContextMenuOpening identifier such that you can use it in triggers).  </p>\n<p> <a class=\"xref\" href=\"system.windows.controls.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> itself is a <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> derived class, but this event will not be raised from the context menu being opened as a source. The event is raised from the element that &quot;owns&quot; the context menu as a property and is only raised when a user attempts to open a context menu in the UI. It is possible for <a class=\"xref\" href=\"system.windows.controls.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> itself to have a <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a> property, but you should avoid this scenario (for details, see <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ContextMenu_\" data-linktype=\"relative-path\">ContextMenu</a>).  </p>\n<p> The <a class=\"xref\" href=\"system.windows.controls.contextmenu\" data-linktype=\"relative-path\">ContextMenu</a> class itself also has a similar event (<a class=\"xref\" href=\"system.windows.controls.contextmenu#System_Windows_Controls_ContextMenu_Opened\" data-linktype=\"relative-path\">Opened</a>) but <a class=\"xref\" href=\"system.windows.controls.contextmenu#System_Windows_Controls_ContextMenu_Opened\" data-linktype=\"relative-path\">Opened</a> does not provide you the opportunity to cancel the user action.  </p>\n<p><a name=\"routedEventInfo_ContextMenuOpening\"></a>   </p>\n<h2 id=\"routed-event-information\">Routed Event Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ContextMenuOpeningEvent\" data-linktype=\"relative-path\">ContextMenuOpeningEvent</a></td>\n</tr>\n<tr>\n<td>Routing strategy</td>\n<td>Bubbling</td>\n</tr>\n<tr>\n<td>Delegate</td>\n<td><a class=\"xref\" href=\"system.windows.controls.contextmenueventhandler\" data-linktype=\"relative-path\">ContextMenuEventHandler</a></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Override <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_OnContextMenuOpening_\" data-linktype=\"relative-path\">OnContextMenuOpening</a> to implement class handling for this event in derived classes.</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_DataContextChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">DataContextChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the data context for this element changes.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.DependencyPropertyChangedEventHandler DataContextChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>For an explanation of data contexts and data binding, see <a href=\"../Topic/Data%20Binding%20Overview.md\" data-linktype=\"relative-path\">Data Binding Overview</a>.  </p>\n<div class=\"IMPORTANT\"><h5>Important</h5><p> When the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_DataContext_\" data-linktype=\"relative-path\">DataContext</a> for an element changes, all data-bound properties on this element are potentially affected. This applies to any elements that are child elements of the current element in the logical tree, which inherit the data context, and also the current element itself. All such existing bindings must re-interpret the new <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_DataContext_\" data-linktype=\"relative-path\">DataContext</a> and will reevaluate the binding results. The data binding engine is not deterministic about the order of these reevaluations, relative to the raising of the DataContextChanged event. The reevaluations can occur before the event, after the event, or in any mixture.</p>\n</div>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_Initialized\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Initialized</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when this <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> is initialized. This event coincides with cases where the value of the <span class=\"xref\">stem.Windows.FrameworkElement.IsInitialized*</span> property changes from <code>false</code> (or undefined) to <code>true</code>.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler Initialized;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event will be raised whenever the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_EndInit_\" data-linktype=\"relative-path\">EndInit</a> or <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_OnVisualParentChanged_\" data-linktype=\"relative-path\">OnVisualParentChanged</a> methods are called. Calls to either method could have come from application code, or through the Extensible Application Markup Language (XAML) processor behavior when a XAML page is processed.  </p>\n<p> Whether you choose to handle <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Loaded\" data-linktype=\"relative-path\">Loaded</a> or Initialized depends on your requirements. If you do not need to read element properties, intend to reset properties, and do not need any layout information, Initialized might be the better event to act upon. If you need all properties of the element to be available, and you will be setting properties that are likely to reset the layout, <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Loaded\" data-linktype=\"relative-path\">Loaded</a> might be the better event to act upon. Be careful of reentrancy if your handler resets any properties that are interpreted by the layout system to mean that a new layout pass is required. (You might need to check the <a class=\"xref\" href=\"system.windows.frameworkpropertymetadata\" data-linktype=\"relative-path\">FrameworkPropertyMetadata</a> values on the property if you are unsure of which properties can require a new layout pass if they are changed.)  </p>\n<p> For more information about the sequence of object events for a <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a>, and also for several related application and element classes, see <a href=\"../Topic/Object%20Lifetime%20Events.md\" data-linktype=\"relative-path\">Object Lifetime Events</a>.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_Loaded\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Loaded</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the element is laid out, rendered, and ready for interaction.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.RoutedEventHandler Loaded;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Loaded is usually the last event raised in an element initialization sequence. It will always be raised after <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Initialized\" data-linktype=\"relative-path\">Initialized</a>. Whether you choose to handle Loaded or <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Initialized\" data-linktype=\"relative-path\">Initialized</a> depends on your requirements. If you do not need to read element properties, intend to reset properties, and do not need any layout information, <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Initialized\" data-linktype=\"relative-path\">Initialized</a> might be the better event to act upon. If you need all properties of the element to be available, and you will be setting properties that are likely to reset the layout, Loaded might be the better event to act upon. Be careful of reentrancy if your handler resets any properties that are interpreted by the layout system to mean that a new layout pass is required. (You might need to check the <a class=\"xref\" href=\"system.windows.frameworkpropertymetadata\" data-linktype=\"relative-path\">FrameworkPropertyMetadata</a> values on the property if you are unsure of which properties can require a new layout pass if they are changed.)  </p>\n<p> For more information about the sequence of object events for a <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a>, and also for several related application and element classes, see <a href=\"../Topic/Object%20Lifetime%20Events.md\" data-linktype=\"relative-path\">Object Lifetime Events</a>.  </p>\n<p> Direct routed events do not follow a route, they are only handled within the same element on which they are raised. Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <a class=\"xref\" href=\"system.windows.eventtrigger\" data-linktype=\"relative-path\">EventTrigger</a> in a style.  </p>\n<p> Loaded and <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Unloaded\" data-linktype=\"relative-path\">Unloaded</a> might both be raised on controls as a result of user-initiated system theme changes. A theme change causes an invalidation of the control template and the contained visual tree, which in turn causes the entire control to unload and reload. Therefore Loaded cannot be assumed to occur only when a page is first loaded through navigation to the page.  </p>\n<p><a name=\"routedEventInfo_Loaded\"></a>   </p>\n<h2 id=\"routed-event-information\">Routed Event Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_LoadedEvent\" data-linktype=\"relative-path\">LoadedEvent</a></td>\n</tr>\n<tr>\n<td>Routing strategy</td>\n<td>Direct</td>\n</tr>\n<tr>\n<td>Delegate</td>\n<td><a class=\"xref\" href=\"system.windows.routedeventhandler\" data-linktype=\"relative-path\">RoutedEventHandler</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_RequestBringIntoView\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">RequestBringIntoView</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when <span class=\"xref\">stem.Windows.FrameworkElement.BringIntoView*</span> is called on this element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.RequestBringIntoViewEventHandler RequestBringIntoView;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event indicates to a parent <a class=\"xref\" href=\"system.windows.controls.scrollviewer\" data-linktype=\"relative-path\">ScrollViewer</a> (or derived class) that the element that raises the RequestBringIntoView event should be made visible within the scrollable region. The <a class=\"xref\" href=\"system.windows.controls.scrollviewer\" data-linktype=\"relative-path\">ScrollViewer</a> will then mark the RequestBringIntoView event as handled, by using class handling of the event. In general RequestBringIntoView event data should not be marked handled by any class that does control a scrolling region, or by any instance handler, because doing so would interfere with the intended goal of the element that called <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_BringIntoView_\" data-linktype=\"relative-path\">BringIntoView</a>.  </p>\n<p><a name=\"routedEventInfo_RequestBringIntoView\"></a>   </p>\n<h2 id=\"routed-event-information\">Routed Event Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_RequestBringIntoViewEvent\" data-linktype=\"relative-path\">RequestBringIntoViewEvent</a></td>\n</tr>\n<tr>\n<td>Routing strategy</td>\n<td>Bubbling</td>\n</tr>\n<tr>\n<td>Delegate</td>\n<td><a class=\"xref\" href=\"system.windows.requestbringintovieweventhandler\" data-linktype=\"relative-path\">RequestBringIntoViewEventHandler</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_SizeChanged\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SizeChanged</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when either the <span class=\"xref\">stem.Windows.FrameworkElement.ActualHeight*</span> or the <span class=\"xref\">stem.Windows.FrameworkElement.ActualWidth*</span> properties change value on this element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.SizeChangedEventHandler SizeChanged;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Direct routed events do not follow a route, they are only handled within the same element on which they are raised. Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <a class=\"xref\" href=\"system.windows.eventtrigger\" data-linktype=\"relative-path\">EventTrigger</a> in a style.  </p>\n<p> The layout system reads properties within the <a class=\"xref\" href=\"system.windows.sizechangedeventargs\" data-linktype=\"relative-path\">SizeChangedEventArgs</a> argument class of this event, to  determine whether the reported size changes should be considered significant. This allows the layout system or your control-specific layout implementations to avoid forcing a layout change due to visually imperceptible differences between old and new height or width values. The imperceptible differences might be due to rounding or same-result calculations of a floating-point data types.  </p>\n<p><a name=\"routedEventInfo_SizeChanged\"></a>   </p>\n<h2 id=\"routed-event-information\">Routed Event Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_SizeChangedEvent\" data-linktype=\"relative-path\">SizeChangedEvent</a></td>\n</tr>\n<tr>\n<td>Routing strategy</td>\n<td>Direct</td>\n</tr>\n<tr>\n<td>Delegate</td>\n<td><a class=\"xref\" href=\"system.windows.sizechangedeventhandler\" data-linktype=\"relative-path\">SizeChangedEventHandler</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_SourceUpdated\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SourceUpdated</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the source value changes for any existing property binding on this element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; SourceUpdated;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event creates an alias for the &lt;xref:System.Windows.Data.Binding.SourceUpdated&gt; event that is raised by any <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> associated with this element.  </p>\n<p><a name=\"xamlAttributeUsage_SourceUpdated\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object SourceUpdated=&quot;eventHandler&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_TargetUpdated\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">TargetUpdated</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the target value changes for any property binding on this element.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; TargetUpdated;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This event creates an alias for the &lt;xref:System.Windows.Data.Binding.TargetUpdated&gt; event that is raised by any <a class=\"xref\" href=\"system.windows.data.binding\" data-linktype=\"relative-path\">Binding</a> associated with this element. This usually means that the binding in question is a two-way binding, and that the bound  dependency property affirms that the previous property value is now invalid according to any validation or caching scheme that the property or the data source support.  </p>\n<p> Use the event data of the TargetUpdated event to determine the specific property that is reporting the target value update.  </p>\n<p><a name=\"xamlAttributeUsage_TargetUpdated\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object TargetUpdated=&quot;eventHandler&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ToolTipClosing\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToolTipClosing</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs just before any tooltip on the element is closed.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Controls.ToolTipEventHandler ToolTipClosing;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Marking the ToolTipClosing event as handled does not cancel closing the tooltip. Once the tooltip is displayed, closing the tooltip is done only in response to user interaction with the UI.  </p>\n<p> This event cannot be an <a class=\"xref\" href=\"system.windows.eventtrigger\" data-linktype=\"relative-path\">EventTrigger</a> in a style. This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove event methods for the service-level event.  </p>\n<p><a name=\"routedEventInfo_ToolTipClosing\"></a>   </p>\n<h2 id=\"routed-event-information\">Routed Event Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ToolTipClosingEvent\" data-linktype=\"relative-path\">ToolTipClosingEvent</a></td>\n</tr>\n<tr>\n<td>Routing strategy</td>\n<td>Direct</td>\n</tr>\n<tr>\n<td>Delegate</td>\n<td><a class=\"xref\" href=\"system.windows.controls.tooltipeventhandler\" data-linktype=\"relative-path\">ToolTipEventHandler</a></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Override <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_OnToolTipClosing_\" data-linktype=\"relative-path\">OnToolTipClosing</a> to implement class handling for this event in derived classes.</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_ToolTipOpening\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ToolTipOpening</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when any tooltip on the element is opened.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.Controls.ToolTipEventHandler ToolTipOpening;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>To prevent a tooltip from appearing in the UI, your handler for ToolTipOpening can mark the <a class=\"xref\" href=\"system.windows.controls.tooltipeventargs\" data-linktype=\"relative-path\">ToolTipEventArgs</a> event data handled. Otherwise, the tooltip is displayed, using the value of the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ToolTip_\" data-linktype=\"relative-path\">ToolTip</a> property as the tooltip content. Another possible scenario is that you could write a handler that resets the value of the <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ToolTip_\" data-linktype=\"relative-path\">ToolTip</a> property for the element that is the event source, just before the tooltip is displayed.  </p>\n<p> ToolTipOpening will not be raised if the value of <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ToolTip_\" data-linktype=\"relative-path\">ToolTip</a> is <code>null</code> or otherwise unset. Do not deliberately set <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ToolTip_\" data-linktype=\"relative-path\">ToolTip</a> to <code>null</code> while a tooltip is open or opening; this will not have the effect of closing the tooltip, and will instead create an undesirable visual artifact in the UI.  </p>\n<p> The ToolTipOpening event cannot be an <a class=\"xref\" href=\"system.windows.eventtrigger\" data-linktype=\"relative-path\">EventTrigger</a> in a style. This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove event methods for the service-level event.  </p>\n<p><a name=\"routedEventInfo_ToolTipOpening\"></a>   </p>\n<h2 id=\"routed-event-information\">Routed Event Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_ToolTipOpeningEvent\" data-linktype=\"relative-path\">ToolTipOpeningEvent</a></td>\n</tr>\n<tr>\n<td>Routing strategy</td>\n<td>Direct</td>\n</tr>\n<tr>\n<td>Delegate</td>\n<td><a class=\"xref\" href=\"system.windows.controls.tooltipeventhandler\" data-linktype=\"relative-path\">ToolTipEventHandler</a></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Override <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_OnToolTipClosing_\" data-linktype=\"relative-path\">OnToolTipClosing</a> to implement class handling for this event in derived classes.</li>\n</ul>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_Unloaded\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">Unloaded</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Occurs when the element is removed from within an element tree of loaded elements.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public event System.Windows.RoutedEventHandler Unloaded;</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>Direct routed events do not follow a route, they are only handled within the same element on which they are raised. Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <a class=\"xref\" href=\"system.windows.eventtrigger\" data-linktype=\"relative-path\">EventTrigger</a> in a style.  </p>\n<p> <a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_Loaded\" data-linktype=\"relative-path\">Loaded</a> and Unloaded might both be raised on controls as a result of user-initiated system theme changes. A theme change causes an invalidation of the control template and the contained visual tree, which in turn causes the entire control to unload and reload. Therefore Unloaded cannot be assumed to occur only on navigation away from the page.  </p>\n<p> Note that the Unloaded event is not raised after an application begins shutting down. Application shutdown occurs when the condition defined by the <a class=\"xref\" href=\"system.windows.application#System_Windows_Application_ShutdownMode_\" data-linktype=\"relative-path\">ShutdownMode</a> property occurs. If you place cleanup code within a handler for the Unloaded event, such as for a <a class=\"xref\" href=\"system.windows.window\" data-linktype=\"relative-path\">Window</a> or a <a class=\"xref\" href=\"system.windows.controls.usercontrol\" data-linktype=\"relative-path\">UserControl</a>, it may not be called as expected.  </p>\n<p><a name=\"routedEventInfo_Unloaded\"></a>   </p>\n<h2 id=\"routed-event-information\">Routed Event Information</h2>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Identifier field</td>\n<td><a class=\"xref\" href=\"system.windows.frameworkelement#System_Windows_FrameworkElement_UnloadedEvent\" data-linktype=\"relative-path\">UnloadedEvent</a></td>\n</tr>\n<tr>\n<td>Routing strategy</td>\n<td>Direct</td>\n</tr>\n<tr>\n<td>Delegate</td>\n<td><a class=\"xref\" href=\"system.windows.routedeventhandler\" data-linktype=\"relative-path\">RoutedEventHandler</a></td>\n</tr>\n</tbody>\n</table>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Explicit Interface Implementations\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_FrameworkElement_System_Windows_Markup_IQueryAmbient_IsAmbientPropertyAvailable_System_String_\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">IQueryAmbient.IsAmbientPropertyAvailable(String)</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>For a description of this member, see the <span class=\"xref\">stem.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable*</span> method.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"parameterList\">\r\n  \t\t\t\t\t\t\t\t<dt>propertyName</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The name of the requested ambient property.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Returns</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p><code>true</code> if <code>propertyName</code> is available; otherwise, <code>false</code>.</p>\n\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This member is an explicit interface member implementation. It can be used only when the <a class=\"xref\" href=\"system.windows.frameworkelement\" data-linktype=\"relative-path\">FrameworkElement</a> instance is cast to an <a class=\"xref\" href=\"system.windows.markup.iqueryambient\" data-linktype=\"relative-path\">IQueryAmbient</a> interface.</p>\n\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.FrameworkElement.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.FrameworkElement.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement..ctor\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ActualHeight\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ActualHeightProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ActualWidth\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ActualWidthProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.AddLogicalChild\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ApplyTemplate\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ArrangeCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ArrangeOverride\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.BeginInit\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.BeginStoryboard\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.BindingGroup\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.BindingGroupProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.BringIntoView\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ContextMenu\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ContextMenuClosing\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.add_ContextMenuClosing\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.remove_ContextMenuClosing\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ContextMenuClosingEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ContextMenuOpening\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.add_ContextMenuOpening\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.remove_ContextMenuOpening\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ContextMenuOpeningEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ContextMenuProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.Cursor\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.CursorProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.DataContext\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.DataContextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.add_DataContextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.remove_DataContextChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.DataContextProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.DefaultStyleKey\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.DefaultStyleKeyProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.EndInit\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.FindName\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.FindResource\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.FlowDirection\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.FlowDirectionProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.FocusVisualStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.FocusVisualStyleProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ForceCursor\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ForceCursorProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.GetBindingExpression\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.GetFlowDirection\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.GetLayoutClip\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.GetTemplateChild\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.GetUIParentCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.GetVisualChild\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.Height\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.HeightProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.HorizontalAlignment\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.HorizontalAlignmentProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.InheritanceBehavior\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.Initialized\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.add_Initialized\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.remove_Initialized\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.InputScope\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.InputScopeProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.IsInitialized\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.IsLoaded\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.Language\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.LanguageProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.LayoutTransform\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.LayoutTransformProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.Loaded\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.add_Loaded\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.remove_Loaded\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.LoadedEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.LogicalChildren\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.Margin\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.MarginProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.MaxHeight\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.MaxHeightProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.MaxWidth\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.MaxWidthProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.MeasureCore\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.MeasureOverride\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.MinHeight\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.MinHeightProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.MinWidth\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.MinWidthProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.MoveFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.Name\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.NameProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.OnApplyTemplate\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.OnContextMenuClosing\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.OnContextMenuOpening\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.OnGotFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.OnInitialized\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.OnPropertyChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.OnRenderSizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.OnStyleChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.OnToolTipClosing\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.OnToolTipOpening\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.OnVisualParentChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.OverridesDefaultStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.OverridesDefaultStyleProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.Parent\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ParentLayoutInvalidated\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.PredictFocus\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.RegisterName\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.RemoveLogicalChild\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.RequestBringIntoView\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.add_RequestBringIntoView\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.remove_RequestBringIntoView\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.RequestBringIntoViewEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.Resources\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.SetBinding\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.SetFlowDirection\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.SetResourceReference\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ShouldSerializeResources\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ShouldSerializeStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ShouldSerializeTriggers\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.SizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.add_SizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.remove_SizeChanged\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.SizeChangedEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.SourceUpdated\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.add_SourceUpdated\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.remove_SourceUpdated\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.Style\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.StyleProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.IQueryAmbient.IsAmbientPropertyAvailable\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.Tag\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.TagProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.TargetUpdated\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.add_TargetUpdated\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.remove_TargetUpdated\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.TemplatedParent\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ToolTip\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ToolTipClosing\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.add_ToolTipClosing\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.remove_ToolTipClosing\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ToolTipClosingEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ToolTipOpening\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.add_ToolTipOpening\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.remove_ToolTipOpening\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ToolTipOpeningEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.ToolTipProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.Triggers\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.TryFindResource\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.Unloaded\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.add_Unloaded\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.remove_Unloaded\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.UnloadedEvent\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.UnregisterName\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.UpdateDefaultStyle\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.UseLayoutRounding\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.UseLayoutRoundingProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.VerticalAlignment\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.VerticalAlignmentProperty\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.VisualChildrenCount\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.Width\">\r\n<meta name=\"APIName\" content=\"System.Windows.FrameworkElement.WidthProperty\">\r\n<meta name=\"APILocation\" content=\"PresentationFramework.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"2a52eb6a-7e6c-5eff-29a9-27a57f59813e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a WPF framework-level set of properties, events, and methods for Windows Presentation Foundation (WPF) elements. This class represents the provided WPF framework-level implementation that is…\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.FrameworkElement\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.FrameworkElement.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.FrameworkElement.yml","open_to_public_contributors":true,"api_name":["System.Windows.FrameworkElement","System.Windows.FrameworkElement..ctor","System.Windows.FrameworkElement.ActualHeight","System.Windows.FrameworkElement.ActualHeightProperty","System.Windows.FrameworkElement.ActualWidth","System.Windows.FrameworkElement.ActualWidthProperty","System.Windows.FrameworkElement.AddLogicalChild","System.Windows.FrameworkElement.ApplyTemplate","System.Windows.FrameworkElement.ArrangeCore","System.Windows.FrameworkElement.ArrangeOverride","System.Windows.FrameworkElement.BeginInit","System.Windows.FrameworkElement.BeginStoryboard","System.Windows.FrameworkElement.BindingGroup","System.Windows.FrameworkElement.BindingGroupProperty","System.Windows.FrameworkElement.BringIntoView","System.Windows.FrameworkElement.ContextMenu","System.Windows.FrameworkElement.ContextMenuClosing","System.Windows.FrameworkElement.add_ContextMenuClosing","System.Windows.FrameworkElement.remove_ContextMenuClosing","System.Windows.FrameworkElement.ContextMenuClosingEvent","System.Windows.FrameworkElement.ContextMenuOpening","System.Windows.FrameworkElement.add_ContextMenuOpening","System.Windows.FrameworkElement.remove_ContextMenuOpening","System.Windows.FrameworkElement.ContextMenuOpeningEvent","System.Windows.FrameworkElement.ContextMenuProperty","System.Windows.FrameworkElement.Cursor","System.Windows.FrameworkElement.CursorProperty","System.Windows.FrameworkElement.DataContext","System.Windows.FrameworkElement.DataContextChanged","System.Windows.FrameworkElement.add_DataContextChanged","System.Windows.FrameworkElement.remove_DataContextChanged","System.Windows.FrameworkElement.DataContextProperty","System.Windows.FrameworkElement.DefaultStyleKey","System.Windows.FrameworkElement.DefaultStyleKeyProperty","System.Windows.FrameworkElement.EndInit","System.Windows.FrameworkElement.FindName","System.Windows.FrameworkElement.FindResource","System.Windows.FrameworkElement.FlowDirection","System.Windows.FrameworkElement.FlowDirectionProperty","System.Windows.FrameworkElement.FocusVisualStyle","System.Windows.FrameworkElement.FocusVisualStyleProperty","System.Windows.FrameworkElement.ForceCursor","System.Windows.FrameworkElement.ForceCursorProperty","System.Windows.FrameworkElement.GetBindingExpression","System.Windows.FrameworkElement.GetFlowDirection","System.Windows.FrameworkElement.GetLayoutClip","System.Windows.FrameworkElement.GetTemplateChild","System.Windows.FrameworkElement.GetUIParentCore","System.Windows.FrameworkElement.GetVisualChild","System.Windows.FrameworkElement.Height","System.Windows.FrameworkElement.HeightProperty","System.Windows.FrameworkElement.HorizontalAlignment","System.Windows.FrameworkElement.HorizontalAlignmentProperty","System.Windows.FrameworkElement.InheritanceBehavior","System.Windows.FrameworkElement.Initialized","System.Windows.FrameworkElement.add_Initialized","System.Windows.FrameworkElement.remove_Initialized","System.Windows.FrameworkElement.InputScope","System.Windows.FrameworkElement.InputScopeProperty","System.Windows.FrameworkElement.IsInitialized","System.Windows.FrameworkElement.IsLoaded","System.Windows.FrameworkElement.Language","System.Windows.FrameworkElement.LanguageProperty","System.Windows.FrameworkElement.LayoutTransform","System.Windows.FrameworkElement.LayoutTransformProperty","System.Windows.FrameworkElement.Loaded","System.Windows.FrameworkElement.add_Loaded","System.Windows.FrameworkElement.remove_Loaded","System.Windows.FrameworkElement.LoadedEvent","System.Windows.FrameworkElement.LogicalChildren","System.Windows.FrameworkElement.Margin","System.Windows.FrameworkElement.MarginProperty","System.Windows.FrameworkElement.MaxHeight","System.Windows.FrameworkElement.MaxHeightProperty","System.Windows.FrameworkElement.MaxWidth","System.Windows.FrameworkElement.MaxWidthProperty","System.Windows.FrameworkElement.MeasureCore","System.Windows.FrameworkElement.MeasureOverride","System.Windows.FrameworkElement.MinHeight","System.Windows.FrameworkElement.MinHeightProperty","System.Windows.FrameworkElement.MinWidth","System.Windows.FrameworkElement.MinWidthProperty","System.Windows.FrameworkElement.MoveFocus","System.Windows.FrameworkElement.Name","System.Windows.FrameworkElement.NameProperty","System.Windows.FrameworkElement.OnApplyTemplate","System.Windows.FrameworkElement.OnContextMenuClosing","System.Windows.FrameworkElement.OnContextMenuOpening","System.Windows.FrameworkElement.OnGotFocus","System.Windows.FrameworkElement.OnInitialized","System.Windows.FrameworkElement.OnPropertyChanged","System.Windows.FrameworkElement.OnRenderSizeChanged","System.Windows.FrameworkElement.OnStyleChanged","System.Windows.FrameworkElement.OnToolTipClosing","System.Windows.FrameworkElement.OnToolTipOpening","System.Windows.FrameworkElement.OnVisualParentChanged","System.Windows.FrameworkElement.OverridesDefaultStyle","System.Windows.FrameworkElement.OverridesDefaultStyleProperty","System.Windows.FrameworkElement.Parent","System.Windows.FrameworkElement.ParentLayoutInvalidated","System.Windows.FrameworkElement.PredictFocus","System.Windows.FrameworkElement.RegisterName","System.Windows.FrameworkElement.RemoveLogicalChild","System.Windows.FrameworkElement.RequestBringIntoView","System.Windows.FrameworkElement.add_RequestBringIntoView","System.Windows.FrameworkElement.remove_RequestBringIntoView","System.Windows.FrameworkElement.RequestBringIntoViewEvent","System.Windows.FrameworkElement.Resources","System.Windows.FrameworkElement.SetBinding","System.Windows.FrameworkElement.SetFlowDirection","System.Windows.FrameworkElement.SetResourceReference","System.Windows.FrameworkElement.ShouldSerializeResources","System.Windows.FrameworkElement.ShouldSerializeStyle","System.Windows.FrameworkElement.ShouldSerializeTriggers","System.Windows.FrameworkElement.SizeChanged","System.Windows.FrameworkElement.add_SizeChanged","System.Windows.FrameworkElement.remove_SizeChanged","System.Windows.FrameworkElement.SizeChangedEvent","System.Windows.FrameworkElement.SourceUpdated","System.Windows.FrameworkElement.add_SourceUpdated","System.Windows.FrameworkElement.remove_SourceUpdated","System.Windows.FrameworkElement.Style","System.Windows.FrameworkElement.StyleProperty","System.Windows.FrameworkElement.IQueryAmbient.IsAmbientPropertyAvailable","System.Windows.FrameworkElement.Tag","System.Windows.FrameworkElement.TagProperty","System.Windows.FrameworkElement.TargetUpdated","System.Windows.FrameworkElement.add_TargetUpdated","System.Windows.FrameworkElement.remove_TargetUpdated","System.Windows.FrameworkElement.TemplatedParent","System.Windows.FrameworkElement.ToolTip","System.Windows.FrameworkElement.ToolTipClosing","System.Windows.FrameworkElement.add_ToolTipClosing","System.Windows.FrameworkElement.remove_ToolTipClosing","System.Windows.FrameworkElement.ToolTipClosingEvent","System.Windows.FrameworkElement.ToolTipOpening","System.Windows.FrameworkElement.add_ToolTipOpening","System.Windows.FrameworkElement.remove_ToolTipOpening","System.Windows.FrameworkElement.ToolTipOpeningEvent","System.Windows.FrameworkElement.ToolTipProperty","System.Windows.FrameworkElement.Triggers","System.Windows.FrameworkElement.TryFindResource","System.Windows.FrameworkElement.Unloaded","System.Windows.FrameworkElement.add_Unloaded","System.Windows.FrameworkElement.remove_Unloaded","System.Windows.FrameworkElement.UnloadedEvent","System.Windows.FrameworkElement.UnregisterName","System.Windows.FrameworkElement.UpdateDefaultStyle","System.Windows.FrameworkElement.UseLayoutRounding","System.Windows.FrameworkElement.UseLayoutRoundingProperty","System.Windows.FrameworkElement.VerticalAlignment","System.Windows.FrameworkElement.VerticalAlignmentProperty","System.Windows.FrameworkElement.VisualChildrenCount","System.Windows.FrameworkElement.Width","System.Windows.FrameworkElement.WidthProperty"],"api_location":["PresentationFramework.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.FrameworkElement","System::Windows::FrameworkElement","System.Windows.FrameworkElement.#ctor","System::Windows::FrameworkElement::#ctor","System.Windows.FrameworkElement.ActualHeight","System::Windows::FrameworkElement::ActualHeight","System.Windows.FrameworkElement.ActualHeightProperty","System::Windows::FrameworkElement::ActualHeightProperty","System.Windows.FrameworkElement.ActualWidth","System::Windows::FrameworkElement::ActualWidth","System.Windows.FrameworkElement.ActualWidthProperty","System::Windows::FrameworkElement::ActualWidthProperty","System.Windows.FrameworkElement.AddLogicalChild","System::Windows::FrameworkElement::AddLogicalChild","System.Windows.FrameworkElement.ApplyTemplate","System::Windows::FrameworkElement::ApplyTemplate","System.Windows.FrameworkElement.ArrangeCore","System::Windows::FrameworkElement::ArrangeCore","System.Windows.FrameworkElement.ArrangeOverride","System::Windows::FrameworkElement::ArrangeOverride","System.Windows.FrameworkElement.BeginInit","System::Windows::FrameworkElement::BeginInit","System.Windows.FrameworkElement.BeginStoryboard","System::Windows::FrameworkElement::BeginStoryboard","System.Windows.FrameworkElement.BindingGroup","System::Windows::FrameworkElement::BindingGroup","System.Windows.FrameworkElement.BindingGroupProperty","System::Windows::FrameworkElement::BindingGroupProperty","System.Windows.FrameworkElement.BringIntoView","System::Windows::FrameworkElement::BringIntoView","System.Windows.FrameworkElement.ContextMenu","System::Windows::FrameworkElement::ContextMenu","System.Windows.FrameworkElement.ContextMenuClosing","System::Windows::FrameworkElement::ContextMenuClosing","System.Windows.FrameworkElement.ContextMenuClosingEvent","System::Windows::FrameworkElement::ContextMenuClosingEvent","System.Windows.FrameworkElement.ContextMenuOpening","System::Windows::FrameworkElement::ContextMenuOpening","System.Windows.FrameworkElement.ContextMenuOpeningEvent","System::Windows::FrameworkElement::ContextMenuOpeningEvent","System.Windows.FrameworkElement.ContextMenuProperty","System::Windows::FrameworkElement::ContextMenuProperty","System.Windows.FrameworkElement.Cursor","System::Windows::FrameworkElement::Cursor","System.Windows.FrameworkElement.CursorProperty","System::Windows::FrameworkElement::CursorProperty","System.Windows.FrameworkElement.DataContext","System::Windows::FrameworkElement::DataContext","System.Windows.FrameworkElement.DataContextChanged","System::Windows::FrameworkElement::DataContextChanged","System.Windows.FrameworkElement.DataContextProperty","System::Windows::FrameworkElement::DataContextProperty","System.Windows.FrameworkElement.DefaultStyleKey","System::Windows::FrameworkElement::DefaultStyleKey","System.Windows.FrameworkElement.DefaultStyleKeyProperty","System::Windows::FrameworkElement::DefaultStyleKeyProperty","System.Windows.FrameworkElement.EndInit","System::Windows::FrameworkElement::EndInit","System.Windows.FrameworkElement.FindName","System::Windows::FrameworkElement::FindName","System.Windows.FrameworkElement.FindResource","System::Windows::FrameworkElement::FindResource","System.Windows.FrameworkElement.FlowDirection","System::Windows::FrameworkElement::FlowDirection","System.Windows.FrameworkElement.FlowDirectionProperty","System::Windows::FrameworkElement::FlowDirectionProperty","System.Windows.FrameworkElement.FocusVisualStyle","System::Windows::FrameworkElement::FocusVisualStyle","System.Windows.FrameworkElement.FocusVisualStyleProperty","System::Windows::FrameworkElement::FocusVisualStyleProperty","System.Windows.FrameworkElement.ForceCursor","System::Windows::FrameworkElement::ForceCursor","System.Windows.FrameworkElement.ForceCursorProperty","System::Windows::FrameworkElement::ForceCursorProperty","System.Windows.FrameworkElement.GetBindingExpression","System::Windows::FrameworkElement::GetBindingExpression","System.Windows.FrameworkElement.GetFlowDirection","System::Windows::FrameworkElement::GetFlowDirection","System.Windows.FrameworkElement.GetLayoutClip","System::Windows::FrameworkElement::GetLayoutClip","System.Windows.FrameworkElement.GetTemplateChild","System::Windows::FrameworkElement::GetTemplateChild","System.Windows.FrameworkElement.GetUIParentCore","System::Windows::FrameworkElement::GetUIParentCore","System.Windows.FrameworkElement.GetVisualChild","System::Windows::FrameworkElement::GetVisualChild","System.Windows.FrameworkElement.Height","System::Windows::FrameworkElement::Height","System.Windows.FrameworkElement.HeightProperty","System::Windows::FrameworkElement::HeightProperty","System.Windows.FrameworkElement.HorizontalAlignment","System::Windows::FrameworkElement::HorizontalAlignment","System.Windows.FrameworkElement.HorizontalAlignmentProperty","System::Windows::FrameworkElement::HorizontalAlignmentProperty","System.Windows.FrameworkElement.InheritanceBehavior","System::Windows::FrameworkElement::InheritanceBehavior","System.Windows.FrameworkElement.Initialized","System::Windows::FrameworkElement::Initialized","System.Windows.FrameworkElement.InputScope","System::Windows::FrameworkElement::InputScope","System.Windows.FrameworkElement.InputScopeProperty","System::Windows::FrameworkElement::InputScopeProperty","System.Windows.FrameworkElement.IsInitialized","System::Windows::FrameworkElement::IsInitialized","System.Windows.FrameworkElement.IsLoaded","System::Windows::FrameworkElement::IsLoaded","System.Windows.FrameworkElement.Language","System::Windows::FrameworkElement::Language","System.Windows.FrameworkElement.LanguageProperty","System::Windows::FrameworkElement::LanguageProperty","System.Windows.FrameworkElement.LayoutTransform","System::Windows::FrameworkElement::LayoutTransform","System.Windows.FrameworkElement.LayoutTransformProperty","System::Windows::FrameworkElement::LayoutTransformProperty","System.Windows.FrameworkElement.Loaded","System::Windows::FrameworkElement::Loaded","System.Windows.FrameworkElement.LoadedEvent","System::Windows::FrameworkElement::LoadedEvent","System.Windows.FrameworkElement.LogicalChildren","System::Windows::FrameworkElement::LogicalChildren","System.Windows.FrameworkElement.Margin","System::Windows::FrameworkElement::Margin","System.Windows.FrameworkElement.MarginProperty","System::Windows::FrameworkElement::MarginProperty","System.Windows.FrameworkElement.MaxHeight","System::Windows::FrameworkElement::MaxHeight","System.Windows.FrameworkElement.MaxHeightProperty","System::Windows::FrameworkElement::MaxHeightProperty","System.Windows.FrameworkElement.MaxWidth","System::Windows::FrameworkElement::MaxWidth","System.Windows.FrameworkElement.MaxWidthProperty","System::Windows::FrameworkElement::MaxWidthProperty","System.Windows.FrameworkElement.MeasureCore","System::Windows::FrameworkElement::MeasureCore","System.Windows.FrameworkElement.MeasureOverride","System::Windows::FrameworkElement::MeasureOverride","System.Windows.FrameworkElement.MinHeight","System::Windows::FrameworkElement::MinHeight","System.Windows.FrameworkElement.MinHeightProperty","System::Windows::FrameworkElement::MinHeightProperty","System.Windows.FrameworkElement.MinWidth","System::Windows::FrameworkElement::MinWidth","System.Windows.FrameworkElement.MinWidthProperty","System::Windows::FrameworkElement::MinWidthProperty","System.Windows.FrameworkElement.MoveFocus","System::Windows::FrameworkElement::MoveFocus","System.Windows.FrameworkElement.Name","System::Windows::FrameworkElement::Name","System.Windows.FrameworkElement.NameProperty","System::Windows::FrameworkElement::NameProperty","System.Windows.FrameworkElement.OnApplyTemplate","System::Windows::FrameworkElement::OnApplyTemplate","System.Windows.FrameworkElement.OnContextMenuClosing","System::Windows::FrameworkElement::OnContextMenuClosing","System.Windows.FrameworkElement.OnContextMenuOpening","System::Windows::FrameworkElement::OnContextMenuOpening","System.Windows.FrameworkElement.OnGotFocus","System::Windows::FrameworkElement::OnGotFocus","System.Windows.FrameworkElement.OnInitialized","System::Windows::FrameworkElement::OnInitialized","System.Windows.FrameworkElement.OnPropertyChanged","System::Windows::FrameworkElement::OnPropertyChanged","System.Windows.FrameworkElement.OnRenderSizeChanged","System::Windows::FrameworkElement::OnRenderSizeChanged","System.Windows.FrameworkElement.OnStyleChanged","System::Windows::FrameworkElement::OnStyleChanged","System.Windows.FrameworkElement.OnToolTipClosing","System::Windows::FrameworkElement::OnToolTipClosing","System.Windows.FrameworkElement.OnToolTipOpening","System::Windows::FrameworkElement::OnToolTipOpening","System.Windows.FrameworkElement.OnVisualParentChanged","System::Windows::FrameworkElement::OnVisualParentChanged","System.Windows.FrameworkElement.OverridesDefaultStyle","System::Windows::FrameworkElement::OverridesDefaultStyle","System.Windows.FrameworkElement.OverridesDefaultStyleProperty","System::Windows::FrameworkElement::OverridesDefaultStyleProperty","System.Windows.FrameworkElement.Parent","System::Windows::FrameworkElement::Parent","System.Windows.FrameworkElement.ParentLayoutInvalidated","System::Windows::FrameworkElement::ParentLayoutInvalidated","System.Windows.FrameworkElement.PredictFocus","System::Windows::FrameworkElement::PredictFocus","System.Windows.FrameworkElement.RegisterName","System::Windows::FrameworkElement::RegisterName","System.Windows.FrameworkElement.RemoveLogicalChild","System::Windows::FrameworkElement::RemoveLogicalChild","System.Windows.FrameworkElement.RequestBringIntoView","System::Windows::FrameworkElement::RequestBringIntoView","System.Windows.FrameworkElement.RequestBringIntoViewEvent","System::Windows::FrameworkElement::RequestBringIntoViewEvent","System.Windows.FrameworkElement.Resources","System::Windows::FrameworkElement::Resources","System.Windows.FrameworkElement.SetBinding","System::Windows::FrameworkElement::SetBinding","System.Windows.FrameworkElement.SetFlowDirection","System::Windows::FrameworkElement::SetFlowDirection","System.Windows.FrameworkElement.SetResourceReference","System::Windows::FrameworkElement::SetResourceReference","System.Windows.FrameworkElement.ShouldSerializeResources","System::Windows::FrameworkElement::ShouldSerializeResources","System.Windows.FrameworkElement.ShouldSerializeStyle","System::Windows::FrameworkElement::ShouldSerializeStyle","System.Windows.FrameworkElement.ShouldSerializeTriggers","System::Windows::FrameworkElement::ShouldSerializeTriggers","System.Windows.FrameworkElement.SizeChanged","System::Windows::FrameworkElement::SizeChanged","System.Windows.FrameworkElement.SizeChangedEvent","System::Windows::FrameworkElement::SizeChangedEvent","System.Windows.FrameworkElement.SourceUpdated","System::Windows::FrameworkElement::SourceUpdated","System.Windows.FrameworkElement.Style","System::Windows::FrameworkElement::Style","System.Windows.FrameworkElement.StyleProperty","System::Windows::FrameworkElement::StyleProperty","System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable","System::Windows::FrameworkElement::System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable","System.Windows.FrameworkElement.Tag","System::Windows::FrameworkElement::Tag","System.Windows.FrameworkElement.TagProperty","System::Windows::FrameworkElement::TagProperty","System.Windows.FrameworkElement.TargetUpdated","System::Windows::FrameworkElement::TargetUpdated","System.Windows.FrameworkElement.TemplatedParent","System::Windows::FrameworkElement::TemplatedParent","System.Windows.FrameworkElement.ToolTip","System::Windows::FrameworkElement::ToolTip","System.Windows.FrameworkElement.ToolTipClosing","System::Windows::FrameworkElement::ToolTipClosing","System.Windows.FrameworkElement.ToolTipClosingEvent","System::Windows::FrameworkElement::ToolTipClosingEvent","System.Windows.FrameworkElement.ToolTipOpening","System::Windows::FrameworkElement::ToolTipOpening","System.Windows.FrameworkElement.ToolTipOpeningEvent","System::Windows::FrameworkElement::ToolTipOpeningEvent","System.Windows.FrameworkElement.ToolTipProperty","System::Windows::FrameworkElement::ToolTipProperty","System.Windows.FrameworkElement.Triggers","System::Windows::FrameworkElement::Triggers","System.Windows.FrameworkElement.TryFindResource","System::Windows::FrameworkElement::TryFindResource","System.Windows.FrameworkElement.Unloaded","System::Windows::FrameworkElement::Unloaded","System.Windows.FrameworkElement.UnloadedEvent","System::Windows::FrameworkElement::UnloadedEvent","System.Windows.FrameworkElement.UnregisterName","System::Windows::FrameworkElement::UnregisterName","System.Windows.FrameworkElement.UpdateDefaultStyle","System::Windows::FrameworkElement::UpdateDefaultStyle","System.Windows.FrameworkElement.UseLayoutRounding","System::Windows::FrameworkElement::UseLayoutRounding","System.Windows.FrameworkElement.UseLayoutRoundingProperty","System::Windows::FrameworkElement::UseLayoutRoundingProperty","System.Windows.FrameworkElement.VerticalAlignment","System::Windows::FrameworkElement::VerticalAlignment","System.Windows.FrameworkElement.VerticalAlignmentProperty","System::Windows::FrameworkElement::VerticalAlignmentProperty","System.Windows.FrameworkElement.VisualChildrenCount","System::Windows::FrameworkElement::VisualChildrenCount","System.Windows.FrameworkElement.Width","System::Windows::FrameworkElement::Width","System.Windows.FrameworkElement.WidthProperty","System::Windows::FrameworkElement::WidthProperty"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"2a52eb6a-7e6c-5eff-29a9-27a57f59813e","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows/FrameworkElement.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"FrameworkElement class | Microsoft Docs","_op_ogTitle":"FrameworkElement class","description":"Provides a WPF framework-level set of properties, events, and methods for Windows Presentation Foundation (WPF) elements. This class represents the provided WPF framework-level implementation that is…","toc_asset_id":"_splitted/System.Windows/toc.json","toc_rel":"_splitted/System.Windows/toc.json","source_url":"","ms.assetid":"System.Windows.FrameworkElement","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.frameworkelement","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.frameworkelement","fileRelativePath":"System.Windows.FrameworkElement.html"},"themesRelativePathToOutputRoot":"_themes/"}