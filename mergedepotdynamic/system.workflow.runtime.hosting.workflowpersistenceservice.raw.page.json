{"content":"    \r\n    <h1 id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService\">\r\n      <span class=\"lang-csharp\">WorkflowPersistenceService</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>The abstract base class from which all persistence services are derived.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Obsolete(&quot;The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*&quot;)]\npublic abstract class WorkflowPersistenceService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowruntimeservice\" data-linktype=\"relative-path\">System.Workflow.Runtime.Hosting.WorkflowRuntimeService</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">WorkflowPersistenceService</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowruntimeservice#System_Workflow_Runtime_Hosting_WorkflowRuntimeService_OnStarted\" data-linktype=\"relative-path\">OnStarted()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowruntimeservice#System_Workflow_Runtime_Hosting_WorkflowRuntimeService_OnStopped\" data-linktype=\"relative-path\">OnStopped()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowruntimeservice#System_Workflow_Runtime_Hosting_WorkflowRuntimeService_RaiseServicesExceptionNotHandledEvent_System_Exception_System_Guid_\" data-linktype=\"relative-path\">RaiseServicesExceptionNotHandledEvent(Exception,Guid)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowruntimeservice#System_Workflow_Runtime_Hosting_WorkflowRuntimeService_Runtime\" data-linktype=\"relative-path\">Runtime</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowruntimeservice#System_Workflow_Runtime_Hosting_WorkflowRuntimeService_Start\" data-linktype=\"relative-path\">Start()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowruntimeservice#System_Workflow_Runtime_Hosting_WorkflowRuntimeService_State\" data-linktype=\"relative-path\">State</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowruntimeservice#System_Workflow_Runtime_Hosting_WorkflowRuntimeService_Stop\" data-linktype=\"relative-path\">Stop()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <div class=\"NOTE\"><h5>Note</h5><p> <!-- BEGIN INCLUDE: Include content from &quot;~/add/includes/deprecatedcontent-md.md&quot; -->This material discusses types and namespaces that are obsolete. For more information, see <a href=\"http://aka.ms/wfdeprecatedtypes\" data-linktype=\"external\">Deprecated Types in Windows Workflow Foundation 4.5</a>.<!--END INCLUDE -->  </p>\n</div>\n<p> When certain conditions occur while the workflow is running, the workflow runtime engine persists state information about the workflow instance. Persistence can occur, for example, when an atomic transaction finishes, when the workflow instance becomes idle, when the host calls <a class=\"xref\" href=\"system.workflow.runtime.workflowinstance#System_Workflow_Runtime_WorkflowInstance_Unload_\" data-linktype=\"relative-path\">Unload</a> on the workflow instance, or when a workflow instance is terminated or finishes. When the workflow runtime engine semantics dictate that persistence should occur, the workflow runtime engine calls methods that are supplied by a persistence service to save state information about the workflow instance. Likewise, when the workflow runtime engine needs to restore a previously persisted workflow instance, it calls methods that are supplied by the persistence service to load this state information. The workflow runtime engine handles all the semantics regarding when to perform persistence. The persistence service handles actually saving and loading the workflow state information to or from a data store.  </p>\n<p> You can create a persistence service by deriving a class from the WorkflowPersistenceService class.  You can add your persistence service to the workflow runtime engine by calling <a class=\"xref\" href=\"system.workflow.runtime.workflowruntime#System_Workflow_Runtime_WorkflowRuntime_AddService_\" data-linktype=\"relative-path\">AddService</a> or by making an appropriate entry in the application configuration file. The <a class=\"xref\" href=\"system.workflow.runtime.workflowruntime\" data-linktype=\"relative-path\">WorkflowRuntime</a> should only contain one persistence service. Windows Workflow Foundation provides the <a class=\"xref\" href=\"system.workflow.runtime.hosting.sqlworkflowpersistenceservice\" data-linktype=\"relative-path\">SqlWorkflowPersistenceService</a> class, an out-of-box persistence service, which you can use as is or extend.  </p>\n<p> The workflow runtime engine has semantics for locking workflow state information for use in environments where persistence services that run in different processes might have access to a single data store. The WorkflowPersistenceService class provides the capability to support this functionality of the workflow runtime engine by providing a parameter to <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowpersistenceservice#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_SaveWorkflowInstanceState_\" data-linktype=\"relative-path\">SaveWorkflowInstanceState</a> that specifies whether the state information of a workflow instance should be unlocked in the data store, and by providing a method <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowpersistenceservice#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_UnlockWorkflowInstanceState_\" data-linktype=\"relative-path\">UnlockWorkflowInstanceState</a> to unlock previously locked workflow state information. In a persistence service that implements locking, a call to <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowpersistenceservice#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_LoadWorkflowInstanceState_\" data-linktype=\"relative-path\">LoadWorkflowInstanceState</a> should lock the state information for a workflow instance.  </p>\n<p> Your persistence service should throw a <a class=\"xref\" href=\"system.workflow.runtime.hosting.persistenceexception\" data-linktype=\"relative-path\">PersistenceException</a> if it fails to save state information to its data store or load state information from its data store. The workflow runtime engine expects this behavior.  </p>\n<p> A batching mechanism is provided for services that use a durable store to save workflow state information. It is important in these cases to maintain consistency between the durable store that is used by the persistence service and the internal state of the workflow runtime engine. You can add functionality defined by the <a class=\"xref\" href=\"system.workflow.runtime.ipendingwork\" data-linktype=\"relative-path\">IPendingWork</a> interface to your service, and then participate in workflow transaction batching provided by the <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowcommitworkbatchservice\" data-linktype=\"relative-path\">WorkflowCommitWorkBatchService</a> by adding changes to your data store as work items to the <a class=\"xref\" href=\"system.workflow.runtime.workflowenvironment#System_Workflow_Runtime_WorkflowEnvironment_WorkBatch_\" data-linktype=\"relative-path\">WorkBatch</a>. The durable store itself should implement the <a class=\"xref\" href=\"system.transactions.ienlistmentnotification\" data-linktype=\"relative-path\">IEnlistmentNotification</a> interface, so that workflow information is not persisted incorrectly in the event of a transaction rollback. For more information, see <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowpersistenceservice#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_SaveCompletedContextActivity_\" data-linktype=\"relative-path\">SaveCompletedContextActivity</a> or <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowpersistenceservice#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_SaveWorkflowInstanceState_\" data-linktype=\"relative-path\">SaveWorkflowInstanceState</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_Runtime_Hosting_WorkflowPersistenceService__ctor\" data-linktype=\"self-bookmark\">WorkflowPersistenceService()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When implemented in a derived class, initializes a new instance of the <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowpersistenceservice\" data-linktype=\"relative-path\">WorkflowPersistenceService</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_GetDefaultSerializedForm_System_Workflow_ComponentModel_Activity_\" data-linktype=\"self-bookmark\">GetDefaultSerializedForm(Activity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the serialized default form of the <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_GetIsBlocked_System_Workflow_ComponentModel_Activity_\" data-linktype=\"self-bookmark\">GetIsBlocked(Activity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the given activity is blocked.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_GetSuspendOrTerminateInfo_System_Workflow_ComponentModel_Activity_\" data-linktype=\"self-bookmark\">GetSuspendOrTerminateInfo(Activity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the termination or suspend information of the given activity.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_GetWorkflowStatus_System_Workflow_ComponentModel_Activity_\" data-linktype=\"self-bookmark\">GetWorkflowStatus(Activity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Retrieves the status of the workflow.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_LoadCompletedContextActivity_System_Guid_System_Workflow_ComponentModel_Activity_\" data-linktype=\"self-bookmark\">LoadCompletedContextActivity(Guid,Activity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When implemented in a derived class, loads the specified completed scope back into memory.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_LoadWorkflowInstanceState_System_Guid_\" data-linktype=\"self-bookmark\">LoadWorkflowInstanceState(Guid)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When implemented in a derived class, loads the specified state of the workflow instance back into memory.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_RestoreFromDefaultSerializedForm_System_Byte___System_Workflow_ComponentModel_Activity_\" data-linktype=\"self-bookmark\">RestoreFromDefaultSerializedForm(Byte[],Activity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Restores the <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a> from its serialized form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_SaveCompletedContextActivity_System_Workflow_ComponentModel_Activity_\" data-linktype=\"self-bookmark\">SaveCompletedContextActivity(Activity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When implemented in a derived class, saves the specified completed scope to a data store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_SaveWorkflowInstanceState_System_Workflow_ComponentModel_Activity_System_Boolean_\" data-linktype=\"self-bookmark\">SaveWorkflowInstanceState(Activity,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When implemented in a derived class, saves the workflow instance state to a data store.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_UnloadOnIdle_System_Workflow_ComponentModel_Activity_\" data-linktype=\"self-bookmark\">UnloadOnIdle(Activity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether a workflow should be unloaded when idle.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_UnlockWorkflowInstanceState_System_Workflow_ComponentModel_Activity_\" data-linktype=\"self-bookmark\">UnlockWorkflowInstanceState(Activity)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, unlocks the workflow instance state.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService__ctor\">\r\n    \r\n            <a id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">WorkflowPersistenceService()</div>        \r\n          </div>\r\n    \r\n            <p>When implemented in a derived class, initializes a new instance of the <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowpersistenceservice\" data-linktype=\"relative-path\">WorkflowPersistenceService</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected WorkflowPersistenceService ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates creating an instance of the <code>SqlWorkflowPersistenceService</code> class (derived from <code>WorkflowPersistenceService</code>). This example is from the Nested Exception Handlers SDK sample, from the Program.cs class.  For more information, see the <a href=\"http://msdn.microsoft.com/en-us/d1da0209-842b-41c8-9b7c-0cbaa1034265\" data-linktype=\"external\">Nested Exception Handlers Sample</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#161\">// A workflow is always run asychronously; the main thread waits on this event so the program\n// doesn&#39;t exit before the workflow completes\nworkflowRuntime.AddService(new SqlWorkflowPersistenceService(&quot;Initial Catalog=SqlPersistenceService;Data Source=localhost;Integrated Security=SSPI;&quot;));\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#161\">&#39; A workflow is always run asychronously the main thread waits on Me event so the program\n&#39; doesn&#39;t exit before the workflow completes\nWorkflowRuntime.AddService(New SqlWorkflowPersistenceService(&quot;Initial Catalog=SqlPersistenceServiceData Source=localhostIntegrated Security=SSPI&quot;))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_GetDefaultSerializedForm_System_Workflow_ComponentModel_Activity_\">\r\n    \r\n            <a id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_GetDefaultSerializedForm_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetDefaultSerializedForm(Activity)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the serialized default form of the <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected static byte[] GetDefaultSerializedForm (System.Workflow.ComponentModel.Activity activity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>activity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a> whose serialized form is requested.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </div>\r\n                  <p>The serialized default form of the <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_GetIsBlocked_System_Workflow_ComponentModel_Activity_\">\r\n    \r\n            <a id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_GetIsBlocked_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetIsBlocked(Activity)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the given activity is blocked.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected static bool GetIsBlocked (System.Workflow.ComponentModel.Activity rootActivity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rootActivity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The root activity of the workflow instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the given activity is blocked; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_GetSuspendOrTerminateInfo_System_Workflow_ComponentModel_Activity_\">\r\n    \r\n            <a id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_GetSuspendOrTerminateInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetSuspendOrTerminateInfo(Activity)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the termination or suspend information of the given activity.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected static string GetSuspendOrTerminateInfo (System.Workflow.ComponentModel.Activity rootActivity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rootActivity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The root activity of the workflow instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the termination or suspend information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_GetWorkflowStatus_System_Workflow_ComponentModel_Activity_\">\r\n    \r\n            <a id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_GetWorkflowStatus_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetWorkflowStatus(Activity)</div>        \r\n          </div>\r\n    \r\n            <p>Retrieves the status of the workflow.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected static System.Workflow.Runtime.WorkflowStatus GetWorkflowStatus (System.Workflow.ComponentModel.Activity rootActivity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rootActivity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The root activity of the workflow instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.runtime.workflowstatus\" data-linktype=\"relative-path\">WorkflowStatus</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.workflow.runtime.workflowstatus\" data-linktype=\"relative-path\">WorkflowStatus</a> enumeration value that denotes the status of the workflow.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_LoadCompletedContextActivity_System_Guid_System_Workflow_ComponentModel_Activity_\">\r\n    \r\n            <a id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_LoadCompletedContextActivity_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadCompletedContextActivity(Guid,Activity)</div>        \r\n          </div>\r\n    \r\n            <p>When implemented in a derived class, loads the specified completed scope back into memory.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract System.Workflow.ComponentModel.Activity LoadCompletedContextActivity (Guid scopeId, System.Workflow.ComponentModel.Activity outerActivity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>scopeId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> of the completed scope.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>outerActivity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a> that represents the activity that encloses the completed scope.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a> that represents the completed scope.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The workflow runtime engine uses LoadCompletedContextActivity to implement compensation. You must restore an identical copy of the completed scope. To do this, you must restore a valid <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> from your representation of the completed scope in the data store. Then you must pass this <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to one of the overloaded methods of <a class=\"xref\" href=\"system.workflow.componentmodel.activity#System_Workflow_ComponentModel_Activity_Load_\" data-linktype=\"relative-path\">Load</a> to perform deserialization of the scope.  </p>\n<p> If your persistence service cannot load the completed scope from its data store, it should throw a <a class=\"xref\" href=\"system.workflow.runtime.hosting.persistenceexception\" data-linktype=\"relative-path\">PersistenceException</a> with an appropriate message.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates an implementation of the <code>LoadCompletedContextActivity</code> method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see <a href=\"http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d\" data-linktype=\"external\">Custom Persistence Service Sample</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#269\">// Load the completed activity state.\nprotected override Activity LoadCompletedContextActivity(Guid activityId, Activity outerActivity)\n{\n    Console.WriteLine(&quot;Loading completed activity context: {0}&quot;, activityId);\n    byte[] workflowBytes = DeserializeFromFile(activityId);\n    Activity deserializedActivities = WorkflowPersistenceService.RestoreFromDefaultSerializedForm(workflowBytes, outerActivity);\n    return deserializedActivities;\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#269\">&#39; Load completed activity state.\nProtected Overrides Function LoadCompletedContextActivity(ByVal scopeId As System.Guid, ByVal outerActivity As System.Workflow.ComponentModel.Activity) As System.Workflow.ComponentModel.Activity\n    Console.WriteLine(&quot;Loading completed activity context: 0}&quot;, scopeId)\n    Dim workflowBytes As Byte() = DeserializeFromFile(scopeId)\n    Dim deserializedActivities As Activity = WorkflowPersistenceService.RestoreFromDefaultSerializedForm(workflowBytes, outerActivity)\n    Return deserializedActivities\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_LoadWorkflowInstanceState_System_Guid_\">\r\n    \r\n            <a id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_LoadWorkflowInstanceState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LoadWorkflowInstanceState(Guid)</div>        \r\n          </div>\r\n    \r\n            <p>When implemented in a derived class, loads the specified state of the workflow instance back into memory.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState (Guid instanceId);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>instanceId</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> of the root activity of the workflow instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a> that represents the root activity of the workflow instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You must restore an identical copy of the activity. To do this, you must restore a valid <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> from your representation of the workflow instance in the data store; then you must pass this <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> to one of the overloaded <a class=\"xref\" href=\"system.workflow.componentmodel.activity#System_Workflow_ComponentModel_Activity_Load_\" data-linktype=\"relative-path\">Load</a> methods to deserialize the workflow instance state. If your persistence service cannot load the workflow instance state from its data store, it should throw a <a class=\"xref\" href=\"system.workflow.runtime.hosting.persistenceexception\" data-linktype=\"relative-path\">PersistenceException</a> with an appropriate message.  </p>\n<p> The workflow runtime engine implements locking semantics to restrict access to a workflow instance state that is saved in a data store. This can be accessed by persistence services that run in multiple processes. The locking semantics are designed to prevent persistence services that run in two different processes from loading the same workflow instance into memory at the same time. Depending on the type of environment that your persistence service is designed to support, you may choose whether to support this functionality. If you choose to support the runtime locking semantics, and if this workflow instance state has been previously locked by another process, then you should throw a <a class=\"xref\" href=\"system.workflow.runtime.workflowownershipexception\" data-linktype=\"relative-path\">WorkflowOwnershipException</a>. Otherwise, you should lock access to the workflow instance state in your data store. The workflow instance state can be unlocked by a call to <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowpersistenceservice#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_UnlockWorkflowInstanceState_\" data-linktype=\"relative-path\">UnlockWorkflowInstanceState</a> or a call to <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowpersistenceservice#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_SaveWorkflowInstanceState_\" data-linktype=\"relative-path\">SaveWorkflowInstanceState</a> with the unlock parameter set to <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates an implementation of the <code>LoadWorkflowInstanceState</code> method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see <a href=\"http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d\" data-linktype=\"external\">Custom Persistence Service Sample</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#266\">// Load workflow instance state.\nprotected override Activity LoadWorkflowInstanceState(Guid instanceId)\n{\n    Console.WriteLine(&quot;Loading instance: {0}<br>&quot;, instanceId);\n    byte[] workflowBytes = DeserializeFromFile(instanceId);\n    return WorkflowPersistenceService.RestoreFromDefaultSerializedForm(workflowBytes, null);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#266\">&#39; Load workflow instance state.\nProtected Overrides Function LoadWorkflowInstanceState(ByVal instanceId As System.Guid) As System.Workflow.ComponentModel.Activity\n    Console.WriteLine(&quot;Loading instance: 0}&quot; + vbLf, instanceId)\n    Dim obj As Object = DeserializeFromFile(instanceId)\n    Dim workflowBytes As Byte() = DeserializeFromFile(instanceId)\n    Return WorkflowPersistenceService.RestoreFromDefaultSerializedForm(workflowBytes, Nothing)\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_RestoreFromDefaultSerializedForm_System_Byte___System_Workflow_ComponentModel_Activity_\">\r\n    \r\n            <a id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_RestoreFromDefaultSerializedForm_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">RestoreFromDefaultSerializedForm(Byte[],Activity)</div>        \r\n          </div>\r\n    \r\n            <p>Restores the <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a> from its serialized form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected static System.Workflow.ComponentModel.Activity RestoreFromDefaultSerializedForm (byte[] activityBytes, System.Workflow.ComponentModel.Activity outerActivity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>activityBytes</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.byte\" data-linktype=\"relative-path\">Byte</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The serialized form of <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>outerActivity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The outer <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a>, containing the <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a> to restore.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a></div>\r\n                  </div>\r\n                  <p>The restored <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates an implementation of the <code>RestoreFromDefaultSerializedForm</code> method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see <a href=\"http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d\" data-linktype=\"external\">Custom Persistence Service Sample</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#269\">// Load the completed activity state.\nprotected override Activity LoadCompletedContextActivity(Guid activityId, Activity outerActivity)\n{\n    Console.WriteLine(&quot;Loading completed activity context: {0}&quot;, activityId);\n    byte[] workflowBytes = DeserializeFromFile(activityId);\n    Activity deserializedActivities = WorkflowPersistenceService.RestoreFromDefaultSerializedForm(workflowBytes, outerActivity);\n    return deserializedActivities;\n\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#269\">&#39; Load completed activity state.\nProtected Overrides Function LoadCompletedContextActivity(ByVal scopeId As System.Guid, ByVal outerActivity As System.Workflow.ComponentModel.Activity) As System.Workflow.ComponentModel.Activity\n    Console.WriteLine(&quot;Loading completed activity context: 0}&quot;, scopeId)\n    Dim workflowBytes As Byte() = DeserializeFromFile(scopeId)\n    Dim deserializedActivities As Activity = WorkflowPersistenceService.RestoreFromDefaultSerializedForm(workflowBytes, outerActivity)\n    Return deserializedActivities\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_SaveCompletedContextActivity_System_Workflow_ComponentModel_Activity_\">\r\n    \r\n            <a id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_SaveCompletedContextActivity_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SaveCompletedContextActivity(Activity)</div>        \r\n          </div>\r\n    \r\n            <p>When implemented in a derived class, saves the specified completed scope to a data store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract void SaveCompletedContextActivity (System.Workflow.ComponentModel.Activity activity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>activity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a> that represents the completed scope.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The workflow runtime engine saves the state of completed scope activities in order to implement compensation. You must call one of the overloaded <a class=\"xref\" href=\"system.workflow.componentmodel.activity#System_Workflow_ComponentModel_Activity_Save_\" data-linktype=\"relative-path\">Save</a> methods to serialize <code>activity</code> into a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>; you may then choose to additionally process the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> before writing it to your data store. However, when the workflow runtime engine calls <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowpersistenceservice#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_LoadCompletedContextActivity_\" data-linktype=\"relative-path\">LoadCompletedContextActivity</a>, you must restore an identical copy of the activity.  </p>\n<p> You must be able to associate the completed scope with its enclosing workflow instance to mark the scope as unneeded in your data store when the workflow instance finishes or is terminated. Therefore, you should also save the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> of the workflow instance that is associated with the completed scope; this can be obtained from the <a class=\"xref\" href=\"system.workflow.runtime.workflowinstance#System_Workflow_Runtime_WorkflowInstance_InstanceId_\" data-linktype=\"relative-path\">InstanceId</a> property of the <a class=\"xref\" href=\"system.workflow.runtime.workflowinstance\" data-linktype=\"relative-path\">WorkflowInstance</a> associated with <code>activity</code>.  </p>\n<p> <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowpersistenceservice#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_LoadCompletedContextActivity_\" data-linktype=\"relative-path\">LoadCompletedContextActivity</a> takes the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> of the completed scope as a parameter. Therefore, you must also save the <a class=\"xref\" href=\"system.workflow.componentmodel.activityexecutioncontext#System_Workflow_ComponentModel_ActivityExecutionContext_ContextGuid_\" data-linktype=\"relative-path\">ContextGuid</a> property associated with <code>activity</code>. This property can be referenced through the <a class=\"xref\" href=\"system.workflow.componentmodel.activity#System_Workflow_ComponentModel_Activity_ActivityContextGuidProperty\" data-linktype=\"relative-path\">ActivityContextGuidProperty</a> field of <code>activity</code>.  </p>\n<p> If you are implementing a persistence service that uses a durable store, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point. To participate in batching, add a work item to the <a class=\"xref\" href=\"system.workflow.runtime.workflowenvironment#System_Workflow_Runtime_WorkflowEnvironment_WorkBatch_\" data-linktype=\"relative-path\">WorkBatch</a> property that represents the pending changes to the database, and implement the <a class=\"xref\" href=\"system.workflow.runtime.ipendingwork\" data-linktype=\"relative-path\">IPendingWork</a> interface in your persistence service.  </p>\n<p> If you cannot save the completed scope to your data store, you should throw a <a class=\"xref\" href=\"system.workflow.runtime.hosting.persistenceexception\" data-linktype=\"relative-path\">PersistenceException</a> with an appropriate error message.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates an implementation of the <code>SaveCompletedContextActivity</code> method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see <a href=\"http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d\" data-linktype=\"external\">Custom Persistence Service Sample</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#268\">// Save the completed activity state.\nprotected override void SaveCompletedContextActivity(Activity activity)\n{\n    Guid contextGuid = (Guid)activity.GetValue(Activity.ActivityContextGuidProperty);\n    Console.WriteLine(&quot;Saving completed activity context: {0}&quot;, contextGuid);\n    SerializeToFile(\n        WorkflowPersistenceService.GetDefaultSerializedForm(activity), contextGuid);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#268\">&#39; Save completed activity state\nProtected Overrides Sub SaveCompletedContextActivity(ByVal activity As System.Workflow.ComponentModel.Activity)\n    Dim contextGuid As Guid = CType(activity.GetValue(activity.ActivityContextGuidProperty), Guid)\n    Console.WriteLine(&quot;Saving completed activity context: 0}&quot;, contextGuid)\n    SerializeToFile( _\n        WorkflowPersistenceService.GetDefaultSerializedForm(activity), contextGuid)\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_SaveWorkflowInstanceState_System_Workflow_ComponentModel_Activity_System_Boolean_\">\r\n    \r\n            <a id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_SaveWorkflowInstanceState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SaveWorkflowInstanceState(Activity,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>When implemented in a derived class, saves the workflow instance state to a data store.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract void SaveWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity, bool unlock);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rootActivity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The root activity of the workflow instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>unlock</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if the workflow instance should not be locked; <code>false</code> if the workflow instance should be locked.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You must call one of the overloaded <a class=\"xref\" href=\"system.workflow.componentmodel.activity#System_Workflow_ComponentModel_Activity_Save_\" data-linktype=\"relative-path\">Save</a> methods to serialize <code>rootActivity</code> into a <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a>. You can then choose to additionally process the <a class=\"xref\" href=\"system.io.stream\" data-linktype=\"relative-path\">Stream</a> before writing it to your data store. However, when the workflow runtime engine calls <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowpersistenceservice#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_LoadWorkflowInstanceState_\" data-linktype=\"relative-path\">LoadWorkflowInstanceState</a>, you must restore an identical copy of the root activity. If you cannot save the workflow instance state to your data store, you should throw a <a class=\"xref\" href=\"system.workflow.runtime.hosting.persistenceexception\" data-linktype=\"relative-path\">PersistenceException</a> with an appropriate error message.  </p>\n<p> The workflow runtime engine provides locking semantics to restrict access to a workflow instance state that is saved in the data store. This can be accessed by the persistence services running in multiple hosts and pointing to the same data store. The locking semantics are designed to prevent persistence services that run in two different workflow runtimes from loading the same workflow instance into memory at the same time. Depending on the type of environment your persistence service is designed to support, you can choose whether to support this functionality. If you choose to support the runtime locking semantics, then, if a persistence service tries to save a workflow instance state that has been previously locked by another persistence service, you should throw a <a class=\"xref\" href=\"system.workflow.runtime.workflowownershipexception\" data-linktype=\"relative-path\">WorkflowOwnershipException</a>. If <code>unlock</code> is <code>true</code>, you should unlock access to the workflow instance state after you save it.  </p>\n<p> <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowpersistenceservice#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_LoadWorkflowInstanceState_\" data-linktype=\"relative-path\">LoadWorkflowInstanceState</a> takes the <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> of the workflow instance as a parameter. Therefore, you should save this <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a>. You can also use this <a class=\"xref\" href=\"system.guid\" data-linktype=\"relative-path\">Guid</a> to associate the workflow instance with the saved states of its completed scopes. You must do this because you must be able to mark these completed scopes as unneeded when the workflow instance completes.  </p>\n<p> The workflow runtime engine calls SaveWorkflowInstanceState a final time when the workflow instance is completed or terminated. Therefore, if <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowpersistenceservice#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_GetWorkflowStatus_\" data-linktype=\"relative-path\">GetWorkflowStatus</a> is equal to <a class=\"xref\" href=\"system.workflow.runtime.workflowstatus\" data-linktype=\"relative-path\">WorkflowStatus</a> or <a class=\"xref\" href=\"system.workflow.runtime.workflowstatus\" data-linktype=\"relative-path\">WorkflowStatus</a>, you can safely delete the workflow instance and all its associated completed scopes from your data store. Alternatively, you can subscribe to the <a class=\"xref\" href=\"system.workflow.runtime.workflowruntime#System_Workflow_Runtime_WorkflowRuntime_WorkflowCompleted\" data-linktype=\"relative-path\">WorkflowCompleted</a> or <a class=\"xref\" href=\"system.workflow.runtime.workflowruntime#System_Workflow_Runtime_WorkflowRuntime_WorkflowTerminated\" data-linktype=\"relative-path\">WorkflowTerminated</a> events to determine when it is safe to delete records associated with the workflow instance. Whether you actually delete the records from your data store depends on your implementation.  </p>\n<p> If you implement a persistence service that uses a durable store, then, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point. To participate in batching, add a work item that represents the pending changes to your durable store to the <a class=\"xref\" href=\"system.workflow.runtime.workflowenvironment#System_Workflow_Runtime_WorkflowEnvironment_WorkBatch_\" data-linktype=\"relative-path\">WorkBatch</a> property, and implement the <a class=\"xref\" href=\"system.workflow.runtime.ipendingwork\" data-linktype=\"relative-path\">IPendingWork</a> interface in your persistence service.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates an implementation of the <code>SaveWorkflowInstanceState</code> method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see <a href=\"http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d\" data-linktype=\"external\">Custom Persistence Service Sample</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#264\">// Save the workflow instance state at the point of persistence with option of locking the instance state if it is shared\n// across multiple runtimes or multiple phase instance updates\nprotected override void SaveWorkflowInstanceState(Activity rootActivity, bool unlock)\n{\n    // Save the workflow\n    Guid contextGuid = (Guid)rootActivity.GetValue(Activity.ActivityContextGuidProperty);\n    Console.WriteLine(&quot;Saving instance: {0}<br>&quot;, contextGuid);\n    SerializeToFile(\n        WorkflowPersistenceService.GetDefaultSerializedForm(rootActivity), contextGuid);\n\n    // See when the next timer (Delay activity) for this workflow will expire\n    TimerEventSubscriptionCollection timers = (TimerEventSubscriptionCollection)rootActivity.GetValue(TimerEventSubscriptionCollection.TimerCollectionProperty);\n    TimerEventSubscription subscription = timers.Peek();\n    if (subscription != null)\n    {\n        // Set a system timer to automatically reload this workflow when its next timer expires\n        TimerCallback callback = new TimerCallback(ReloadWorkflow);\n        TimeSpan timeDifference = subscription.ExpiresAt - DateTime.UtcNow;\n        System.Threading.Timer timer = new System.Threading.Timer(\n            callback,\n            subscription.WorkflowInstanceId,\n            timeDifference &lt; TimeSpan.Zero ? TimeSpan.Zero : timeDifference,\n            new TimeSpan(-1));\n    }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#264\">&#39; Save the workflow instance state at the point of persistence with option of locking the instance state if it is shared\n&#39; across multiple runtimes or multiple phase instance updates\nProtected Overrides Sub SaveWorkflowInstanceState(ByVal rootActivity As System.Workflow.ComponentModel.Activity, ByVal unlock As Boolean)\n    Dim contextGuid As Guid = CType(rootActivity.GetValue(Activity.ActivityContextGuidProperty), Guid)\n    Console.WriteLine(&quot;Saving instance: 0}&quot; + vbLf, contextGuid)\n    SerializeToFile( _\n        WorkflowPersistenceService.GetDefaultSerializedForm(rootActivity), contextGuid)\n\n    &#39; See when the next timer (Delay activity) for this workflow will expire\n    Dim timers As TimerEventSubscriptionCollection = CType(rootActivity.GetValue(TimerEventSubscriptionCollection.TimerCollectionProperty), TimerEventSubscriptionCollection)\n    Dim subscription As TimerEventSubscription = timers.Peek()\n    If subscription IsNot Nothing Then\n        &#39; Set a system timer to automatically reload this workflow when it&#39;s next timer expires\n        Dim timeDifference As TimeSpan = subscription.ExpiresAt - DateTime.UtcNow\n        Dim callback As TimerCallback = New TimerCallback(AddressOf ReloadWorkflow)\n        Dim timer As New System.Threading.Timer( _\n            callback, _\n            subscription.WorkflowInstanceId, _\n            CType(IIf(timeDifference &lt; TimeSpan.Zero, TimeSpan.Zero, timeDifference), TimeSpan), _\n            New TimeSpan(-1))\n    End If\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_UnloadOnIdle_System_Workflow_ComponentModel_Activity_\">\r\n    \r\n            <a id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_UnloadOnIdle_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnloadOnIdle(Activity)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether a workflow should be unloaded when idle.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract bool UnloadOnIdle (System.Workflow.ComponentModel.Activity activity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>activity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a> that represents the completed scope.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>If <code>true</code>, the workflow runtime engine unloads the specified workflow when it becomes idle.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates an implementation of the <code>UnloadOnIdle</code> method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see <a href=\"http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d\" data-linktype=\"external\">Custom Persistence Service Sample</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#270\">protected override bool UnloadOnIdle(Activity activity)\n{\n    return unloadOnIdle;\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#270\">&#39; Returns status of unloadOnIdle flag\nProtected Overrides Function UnloadOnIdle(ByVal rootActivity As System.Workflow.ComponentModel.Activity) As Boolean\n    Return unloadOnIdleValue\nEnd Function\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_UnlockWorkflowInstanceState_System_Workflow_ComponentModel_Activity_\">\r\n    \r\n            <a id=\"System_Workflow_Runtime_Hosting_WorkflowPersistenceService_UnlockWorkflowInstanceState_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnlockWorkflowInstanceState(Activity)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, unlocks the workflow instance state.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected abstract void UnlockWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>rootActivity</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.workflow.componentmodel.activity\" data-linktype=\"relative-path\">Activity</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The root activity of the workflow instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is abstract, so it does not contain a default implementation on locking and unlocking.  </p>\n<p> While implementing a custom persistence service, if you want to implement a locking scheme you will need to override this method and provide a locking-unlocking mechanism in the <a class=\"xref\" href=\"system.workflow.runtime.hosting.workflowpersistenceservice#System_Workflow_Runtime_Hosting_WorkflowPersistenceService_SaveWorkflowInstanceState_\" data-linktype=\"relative-path\">SaveWorkflowInstanceState</a> method based on the value of the unlock parameter.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates an implementation of the <code>UnlockWorkflowInstanceState</code> method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see <a href=\"http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d\" data-linktype=\"external\">Custom Persistence Service Sample</a>.  </p>\n<pre><code class=\"lang-cs\" name=\"WF_Samples#267\">// Unlock the workflow instance state.  \n// Instance state locking is necessary when multiple runtimes share instance persistence store\nprotected override void UnlockWorkflowInstanceState(Activity state)\n{\n    //File locking is not supported in this sample\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"WF_Samples#267\">&#39; unlock workflow instance state.  \n&#39; instance state locking is necessary when multiple runtimes share instance persistence store\nProtected Overrides Sub UnlockWorkflowInstanceState(ByVal rootActivity As System.Workflow.ComponentModel.Activity)\n    &#39; File locking is not supported in this sample\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Workflow.Runtime.Hosting.WorkflowPersistenceService.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Workflow.Runtime.Hosting.WorkflowPersistenceService.yml\">\r\n<meta name=\"APIName\" content=\"System.Workflow.Runtime.Hosting.WorkflowPersistenceService\">\r\n<meta name=\"APIName\" content=\"System.Workflow.Runtime.Hosting.WorkflowPersistenceService..ctor\">\r\n<meta name=\"APIName\" content=\"System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm\">\r\n<meta name=\"APIName\" content=\"System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked\">\r\n<meta name=\"APIName\" content=\"System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo\">\r\n<meta name=\"APIName\" content=\"System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus\">\r\n<meta name=\"APIName\" content=\"System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity\">\r\n<meta name=\"APIName\" content=\"System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState\">\r\n<meta name=\"APIName\" content=\"System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm\">\r\n<meta name=\"APIName\" content=\"System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity\">\r\n<meta name=\"APIName\" content=\"System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState\">\r\n<meta name=\"APIName\" content=\"System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle\">\r\n<meta name=\"APIName\" content=\"System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState\">\r\n<meta name=\"APILocation\" content=\"System.Workflow.Runtime.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"48927189-2294-e578-78b9-28f7515a87d4\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Workflow.Runtime.Hosting\\WorkflowPersistenceService.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"The abstract base class from which all persistence services are derived.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Workflow.Runtime.Hosting/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Workflow.Runtime.Hosting.WorkflowPersistenceService\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Workflow.Runtime.Hosting.WorkflowPersistenceService.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Workflow.Runtime.Hosting.WorkflowPersistenceService.yml","open_to_public_contributors":true,"api_name":["System.Workflow.Runtime.Hosting.WorkflowPersistenceService","System.Workflow.Runtime.Hosting.WorkflowPersistenceService..ctor","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState"],"api_location":["System.Workflow.Runtime.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Workflow.Runtime.Hosting.WorkflowPersistenceService","System::Workflow::Runtime::Hosting::WorkflowPersistenceService","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor","System::Workflow::Runtime::Hosting::WorkflowPersistenceService::#ctor","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm","System::Workflow::Runtime::Hosting::WorkflowPersistenceService::GetDefaultSerializedForm","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked","System::Workflow::Runtime::Hosting::WorkflowPersistenceService::GetIsBlocked","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo","System::Workflow::Runtime::Hosting::WorkflowPersistenceService::GetSuspendOrTerminateInfo","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus","System::Workflow::Runtime::Hosting::WorkflowPersistenceService::GetWorkflowStatus","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity","System::Workflow::Runtime::Hosting::WorkflowPersistenceService::LoadCompletedContextActivity","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState","System::Workflow::Runtime::Hosting::WorkflowPersistenceService::LoadWorkflowInstanceState","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm","System::Workflow::Runtime::Hosting::WorkflowPersistenceService::RestoreFromDefaultSerializedForm","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity","System::Workflow::Runtime::Hosting::WorkflowPersistenceService::SaveCompletedContextActivity","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState","System::Workflow::Runtime::Hosting::WorkflowPersistenceService::SaveWorkflowInstanceState","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle","System::Workflow::Runtime::Hosting::WorkflowPersistenceService::UnloadOnIdle","System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState","System::Workflow::Runtime::Hosting::WorkflowPersistenceService::UnlockWorkflowInstanceState"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"48927189-2294-e578-78b9-28f7515a87d4","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Workflow.Runtime.Hosting\\WorkflowPersistenceService.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Workflow.Runtime.Hosting/WorkflowPersistenceService.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"WorkflowPersistenceService class | Microsoft Docs","_op_ogTitle":"WorkflowPersistenceService class","description":"The abstract base class from which all persistence services are derived.\n","toc_asset_id":"_splitted/System.Workflow.Runtime.Hosting/toc.json","toc_rel":"_splitted/System.Workflow.Runtime.Hosting/toc.json","source_url":"","ms.assetid":"System.Workflow.Runtime.Hosting.WorkflowPersistenceService","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.workflow.runtime.hosting.workflowpersistenceservice","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.workflow.runtime.hosting.workflowpersistenceservice","fileRelativePath":"System.Workflow.Runtime.Hosting.WorkflowPersistenceService.html"},"themesRelativePathToOutputRoot":"_themes/"}