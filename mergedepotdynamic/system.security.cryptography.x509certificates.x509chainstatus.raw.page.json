{"content":"    \r\n    <h1 id=\"System_Security_Cryptography_X509Certificates_X509ChainStatus\">\r\n      <span class=\"lang-csharp\">X509ChainStatus</span>\r\n        Struct\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a simple structure for storing X509 chain status and error information.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public struct X509ChainStatus</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">System.ValueType</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">X509ChainStatus</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>This structure is used in conjunction with the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509chain#System_Security_Cryptography_X509Certificates_X509Chain_ChainStatus_\" data-linktype=\"relative-path\">ChainStatus</a> property.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509ChainStatus_Status\" data-linktype=\"self-bookmark\">Status</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the status of the X509 chain.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Security_Cryptography_X509Certificates_X509ChainStatus_StatusInformation\" data-linktype=\"self-bookmark\">StatusInformation</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies a description of the <span class=\"xref\">stem.Security.Cryptography.X509Certificates.X509Chain.ChainStatus*</span> value.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509ChainStatus_Status\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509ChainStatus_Status_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Status</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the status of the X509 chain.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Security.Cryptography.X509Certificates.X509ChainStatusFlags Status { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509chainstatusflags\" data-linktype=\"relative-path\">X509ChainStatusFlags</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509chainstatusflags\" data-linktype=\"relative-path\">X509ChainStatusFlags</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The flag can be used to determine the details of a chain error.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example opens the current user&#39;s personal certificate store, allows the user to select a certificate, then writes certificate and certificate chain information to the console. The output depends on the certificate you select.  </p>\n<pre><code class=\"lang-cpp\" name=\"x509chaintest#4\">   //Output chain element information.\n   Console::WriteLine( &quot;Chain Element Information&quot; );\n   Console::WriteLine( &quot;Number of chain elements: {0}&quot;, ch-&gt;ChainElements-&gt;Count );\n   Console::WriteLine( &quot;Chain elements synchronized? {0} {1}&quot;, ch-&gt;ChainElements-&gt;IsSynchronized, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum = ch-&gt;ChainElements-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509ChainElement ^ element = safe_cast&lt;X509ChainElement ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;Element issuer name: {0}&quot;, element-&gt;Certificate-&gt;Issuer );\n      Console::WriteLine( &quot;Element certificate valid until: {0}&quot;, element-&gt;Certificate-&gt;NotAfter );\n      Console::WriteLine( &quot;Element certificate is valid: {0}&quot;, element-&gt;Certificate-&gt;Verify() );\n      Console::WriteLine( &quot;Element error status length: {0}&quot;, element-&gt;ChainElementStatus-&gt;Length );\n      Console::WriteLine( &quot;Element information: {0}&quot;, element-&gt;Information );\n      Console::WriteLine( &quot;Number of element extensions: {0}{1}&quot;, element-&gt;Certificate-&gt;Extensions-&gt;Count, Environment::NewLine );\n      if ( ch-&gt;ChainStatus-&gt;Length &gt; 1 )\n      {\n         for ( int index = 0; index &lt; element-&gt;ChainElementStatus-&gt;Length; index++ )\n         {\n            Console::WriteLine( element-&gt;ChainElementStatus[ index ].Status );\n            Console::WriteLine( element-&gt;ChainElementStatus[ index ].StatusInformation );\n         }\n      }\n   }\n\n   store-&gt;Close();\n</code></pre><pre><code class=\"lang-cs\" name=\"x509chaintest#4\">\t\t//Output chain element information.\n\t\tConsole.WriteLine (&quot;Chain Element Information&quot;);\n\t\tConsole.WriteLine (&quot;Number of chain elements: {0}&quot;, ch.ChainElements.Count);\n\t\tConsole.WriteLine (&quot;Chain elements synchronized? {0} {1}&quot;, ch.ChainElements.IsSynchronized, Environment.NewLine);\n\t\n\t\tforeach (X509ChainElement element in ch.ChainElements)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Element issuer name: {0}&quot;, element.Certificate.Issuer);\n\t\t\tConsole.WriteLine (&quot;Element certificate valid until: {0}&quot;, element.Certificate.NotAfter);\n\t\t\tConsole.WriteLine (&quot;Element certificate is valid: {0}&quot;, element.Certificate.Verify ());\n\t\t\tConsole.WriteLine (&quot;Element error status length: {0}&quot;, element.ChainElementStatus.Length);\n\t\t\tConsole.WriteLine (&quot;Element information: {0}&quot;, element.Information);\n\t\t\tConsole.WriteLine (&quot;Number of element extensions: {0}{1}&quot;, element.Certificate.Extensions.Count, Environment.NewLine);\n\n\t\t\tif (ch.ChainStatus.Length &gt; 1)\n\t\t\t{\n\t\t\t\tfor (int index = 0; index &lt; element.ChainElementStatus.Length; index++)\n\t\t\t\t{\n\t\t\t\t\tConsole.WriteLine (element.ChainElementStatus[index].Status);\n\t\t\t\t\tConsole.WriteLine (element.ChainElementStatus[index].StatusInformation);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tstore.Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"x509chaintest#4\">        &#39;Output chain element information.\n        Console.WriteLine(&quot;Chain Element Information&quot;)\n        Console.WriteLine(&quot;Number of chain elements: {0}&quot;, ch.ChainElements.Count)\n        Console.WriteLine(&quot;Chain elements synchronized? {0} {1}&quot;, ch.ChainElements.IsSynchronized, Environment.NewLine)\n\n        Dim element As X509ChainElement\n        For Each element In ch.ChainElements\n            Console.WriteLine(&quot;Element issuer name: {0}&quot;, element.Certificate.Issuer)\n            Console.WriteLine(&quot;Element certificate valid until: {0}&quot;, element.Certificate.NotAfter)\n            Console.WriteLine(&quot;Element certificate is valid: {0}&quot;, element.Certificate.Verify())\n            Console.WriteLine(&quot;Element error status length: {0}&quot;, element.ChainElementStatus.Length)\n            Console.WriteLine(&quot;Element information: {0}&quot;, element.Information)\n            Console.WriteLine(&quot;Number of element extensions: {0}{1}&quot;, element.Certificate.Extensions.Count, Environment.NewLine)\n\n            If ch.ChainStatus.Length &gt; 1 Then\n                Dim index As Integer\n                For index = 0 To element.ChainElementStatus.Length\n                    Console.WriteLine(element.ChainElementStatus(index).Status)\n                    Console.WriteLine(element.ChainElementStatus(index).StatusInformation)\n                Next index\n            End If\n        Next element\n        store.Close()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Security_Cryptography_X509Certificates_X509ChainStatus_StatusInformation\">\r\n    \r\n            <a id=\"System_Security_Cryptography_X509Certificates_X509ChainStatus_StatusInformation_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">StatusInformation</div>        \r\n          </div>\r\n    \r\n            <p>Specifies a description of the <span class=\"xref\">stem.Security.Cryptography.X509Certificates.X509Chain.ChainStatus*</span> value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string StatusInformation { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A localizable string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is a localized string that provides a description of the <a class=\"xref\" href=\"system.security.cryptography.x509certificates.x509chain#System_Security_Cryptography_X509Certificates_X509Chain_ChainStatus_\" data-linktype=\"relative-path\">ChainStatus</a> enumeration.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example opens the current user&#39;s personal certificate store, allows the user to select a certificate, then writes certificate and certificate chain information to the console. The output depends on the certificate you select.  </p>\n<pre><code class=\"lang-cpp\" name=\"x509chaintest#4\">   //Output chain element information.\n   Console::WriteLine( &quot;Chain Element Information&quot; );\n   Console::WriteLine( &quot;Number of chain elements: {0}&quot;, ch-&gt;ChainElements-&gt;Count );\n   Console::WriteLine( &quot;Chain elements synchronized? {0} {1}&quot;, ch-&gt;ChainElements-&gt;IsSynchronized, Environment::NewLine );\n   System::Collections::IEnumerator^ myEnum = ch-&gt;ChainElements-&gt;GetEnumerator();\n   while ( myEnum-&gt;MoveNext() )\n   {\n      X509ChainElement ^ element = safe_cast&lt;X509ChainElement ^&gt;(myEnum-&gt;Current);\n      Console::WriteLine( &quot;Element issuer name: {0}&quot;, element-&gt;Certificate-&gt;Issuer );\n      Console::WriteLine( &quot;Element certificate valid until: {0}&quot;, element-&gt;Certificate-&gt;NotAfter );\n      Console::WriteLine( &quot;Element certificate is valid: {0}&quot;, element-&gt;Certificate-&gt;Verify() );\n      Console::WriteLine( &quot;Element error status length: {0}&quot;, element-&gt;ChainElementStatus-&gt;Length );\n      Console::WriteLine( &quot;Element information: {0}&quot;, element-&gt;Information );\n      Console::WriteLine( &quot;Number of element extensions: {0}{1}&quot;, element-&gt;Certificate-&gt;Extensions-&gt;Count, Environment::NewLine );\n      if ( ch-&gt;ChainStatus-&gt;Length &gt; 1 )\n      {\n         for ( int index = 0; index &lt; element-&gt;ChainElementStatus-&gt;Length; index++ )\n         {\n            Console::WriteLine( element-&gt;ChainElementStatus[ index ].Status );\n            Console::WriteLine( element-&gt;ChainElementStatus[ index ].StatusInformation );\n         }\n      }\n   }\n\n   store-&gt;Close();\n</code></pre><pre><code class=\"lang-cs\" name=\"x509chaintest#4\">\t\t//Output chain element information.\n\t\tConsole.WriteLine (&quot;Chain Element Information&quot;);\n\t\tConsole.WriteLine (&quot;Number of chain elements: {0}&quot;, ch.ChainElements.Count);\n\t\tConsole.WriteLine (&quot;Chain elements synchronized? {0} {1}&quot;, ch.ChainElements.IsSynchronized, Environment.NewLine);\n\t\n\t\tforeach (X509ChainElement element in ch.ChainElements)\n\t\t{\n\t\t\tConsole.WriteLine (&quot;Element issuer name: {0}&quot;, element.Certificate.Issuer);\n\t\t\tConsole.WriteLine (&quot;Element certificate valid until: {0}&quot;, element.Certificate.NotAfter);\n\t\t\tConsole.WriteLine (&quot;Element certificate is valid: {0}&quot;, element.Certificate.Verify ());\n\t\t\tConsole.WriteLine (&quot;Element error status length: {0}&quot;, element.ChainElementStatus.Length);\n\t\t\tConsole.WriteLine (&quot;Element information: {0}&quot;, element.Information);\n\t\t\tConsole.WriteLine (&quot;Number of element extensions: {0}{1}&quot;, element.Certificate.Extensions.Count, Environment.NewLine);\n\n\t\t\tif (ch.ChainStatus.Length &gt; 1)\n\t\t\t{\n\t\t\t\tfor (int index = 0; index &lt; element.ChainElementStatus.Length; index++)\n\t\t\t\t{\n\t\t\t\t\tConsole.WriteLine (element.ChainElementStatus[index].Status);\n\t\t\t\t\tConsole.WriteLine (element.ChainElementStatus[index].StatusInformation);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tstore.Close();\n</code></pre><pre><code class=\"lang-vb\" name=\"x509chaintest#4\">        &#39;Output chain element information.\n        Console.WriteLine(&quot;Chain Element Information&quot;)\n        Console.WriteLine(&quot;Number of chain elements: {0}&quot;, ch.ChainElements.Count)\n        Console.WriteLine(&quot;Chain elements synchronized? {0} {1}&quot;, ch.ChainElements.IsSynchronized, Environment.NewLine)\n\n        Dim element As X509ChainElement\n        For Each element In ch.ChainElements\n            Console.WriteLine(&quot;Element issuer name: {0}&quot;, element.Certificate.Issuer)\n            Console.WriteLine(&quot;Element certificate valid until: {0}&quot;, element.Certificate.NotAfter)\n            Console.WriteLine(&quot;Element certificate is valid: {0}&quot;, element.Certificate.Verify())\n            Console.WriteLine(&quot;Element error status length: {0}&quot;, element.ChainElementStatus.Length)\n            Console.WriteLine(&quot;Element information: {0}&quot;, element.Information)\n            Console.WriteLine(&quot;Number of element extensions: {0}{1}&quot;, element.Certificate.Extensions.Count, Environment.NewLine)\n\n            If ch.ChainStatus.Length &gt; 1 Then\n                Dim index As Integer\n                For index = 0 To element.ChainElementStatus.Length\n                    Console.WriteLine(element.ChainElementStatus(index).Status)\n                    Console.WriteLine(element.ChainElementStatus(index).StatusInformation)\n                Next index\n            End If\n        Next element\n        store.Close()\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.X509Certificates.X509ChainStatus.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.X509Certificates.X509ChainStatus.yml\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509ChainStatus\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509ChainStatus.Status\">\r\n<meta name=\"APIName\" content=\"System.Security.Cryptography.X509Certificates.X509ChainStatus.StatusInformation\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"3aa26323-fcc2-ebcc-9fff-7d727bb1355e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a simple structure for storing X509 chain status and error information.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Security.Cryptography.X509Certificates/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Security.Cryptography.X509Certificates.X509ChainStatus\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Security.Cryptography.X509Certificates.X509ChainStatus.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Security.Cryptography.X509Certificates.X509ChainStatus.yml","open_to_public_contributors":true,"api_name":["System.Security.Cryptography.X509Certificates.X509ChainStatus","System.Security.Cryptography.X509Certificates.X509ChainStatus.Status","System.Security.Cryptography.X509Certificates.X509ChainStatus.StatusInformation"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Security.Cryptography.X509Certificates.X509ChainStatus","System::Security::Cryptography::X509Certificates::X509ChainStatus","System.Security.Cryptography.X509Certificates.X509ChainStatus.Status","System::Security::Cryptography::X509Certificates::X509ChainStatus::Status","System.Security.Cryptography.X509Certificates.X509ChainStatus.StatusInformation","System::Security::Cryptography::X509Certificates::X509ChainStatus::StatusInformation"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"3aa26323-fcc2-ebcc-9fff-7d727bb1355e","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Security.Cryptography.X509Certificates/X509ChainStatus.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"X509ChainStatus struct | Microsoft Docs","_op_ogTitle":"X509ChainStatus struct","description":"Provides a simple structure for storing X509 chain status and error information.\n","toc_asset_id":"_splitted/System.Security.Cryptography.X509Certificates/toc.json","toc_rel":"_splitted/System.Security.Cryptography.X509Certificates/toc.json","source_url":"","ms.assetid":"System.Security.Cryptography.X509Certificates.X509ChainStatus","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.x509certificates.x509chainstatus","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.security.cryptography.x509certificates.x509chainstatus","fileRelativePath":"System.Security.Cryptography.X509Certificates.X509ChainStatus.html"},"themesRelativePathToOutputRoot":"_themes/"}