{"content":"    \r\n    <h1 id=\"System_CodeDom_CodeTypeDeclaration\">\r\n      <span class=\"lang-csharp\">CodeTypeDeclaration</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents a type declaration for a class, structure, interface, or enumeration.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n[System.Runtime.InteropServices.ComVisible(true)]\npublic class CodeTypeDeclaration : System.CodeDom.CodeTypeMember</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codeobject\" data-linktype=\"relative-path\">CodeObject</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codetypemember\" data-linktype=\"relative-path\">System.CodeDom.CodeTypeMember</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">CodeTypeDeclaration</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codeobject#System_CodeDom_CodeObject_UserData\" data-linktype=\"relative-path\">UserData</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_Attributes\" data-linktype=\"relative-path\">Attributes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_Comments\" data-linktype=\"relative-path\">Comments</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_CustomAttributes\" data-linktype=\"relative-path\">CustomAttributes</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_EndDirectives\" data-linktype=\"relative-path\">EndDirectives</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_LinePragma\" data-linktype=\"relative-path\">LinePragma</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_Name\" data-linktype=\"relative-path\">Name</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_StartDirectives\" data-linktype=\"relative-path\">StartDirectives</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>CodeTypeDeclaration can be used to represent code that declares a class, structure, interface, or enumeration. CodeTypeDeclaration can be used to declare a type that is nested within another type.  </p>\n<p> The <a class=\"xref\" href=\"system.codedom.codetypedeclaration#System_CodeDom_CodeTypeDeclaration_BaseTypes_\" data-linktype=\"relative-path\">BaseTypes</a> property specifies the base type or base types of the type being declared. The <a class=\"xref\" href=\"system.codedom.codetypedeclaration#System_CodeDom_CodeTypeDeclaration_Members_\" data-linktype=\"relative-path\">Members</a> property contains the type members, which can include methods, fields, properties, comments and other types. The <a class=\"xref\" href=\"system.codedom.codetypedeclaration#System_CodeDom_CodeTypeDeclaration_TypeAttributes_\" data-linktype=\"relative-path\">TypeAttributes</a> property indicates the <a class=\"xref\" href=\"system.reflection.typeattributes\" data-linktype=\"relative-path\">TypeAttributes</a> values for the type declaration, which indicate the type category of the type. The <a class=\"xref\" href=\"system.codedom.codetypedeclaration#System_CodeDom_CodeTypeDeclaration_IsClass_\" data-linktype=\"relative-path\">IsClass</a>, <a class=\"xref\" href=\"system.codedom.codetypedeclaration#System_CodeDom_CodeTypeDeclaration_IsStruct_\" data-linktype=\"relative-path\">IsStruct</a>, <a class=\"xref\" href=\"system.codedom.codetypedeclaration#System_CodeDom_CodeTypeDeclaration_IsEnum_\" data-linktype=\"relative-path\">IsEnum</a>, and <a class=\"xref\" href=\"system.codedom.codetypedeclaration#System_CodeDom_CodeTypeDeclaration_IsInterface_\" data-linktype=\"relative-path\">IsInterface</a> methods indicate whether the type is a class, structure, enumeration, or interface type, respectively.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Some programming languages only support the declaration of reference types, or classes. To check a language-specific CodeDOM code generator for support for declaring interfaces, enumerations, or value types, call the <a class=\"xref\" href=\"system.codedom.compiler.icodegenerator#System_CodeDom_Compiler_ICodeGenerator_Supports_\" data-linktype=\"relative-path\">Supports</a> method to test for the appropriate <a class=\"xref\" href=\"system.codedom.compiler.generatorsupport\" data-linktype=\"relative-path\">GeneratorSupport</a> flags. <a class=\"xref\" href=\"system.codedom.compiler.generatorsupport\" data-linktype=\"relative-path\">GeneratorSupport</a> indicates support for interfaces, <a class=\"xref\" href=\"system.codedom.compiler.generatorsupport\" data-linktype=\"relative-path\">GeneratorSupport</a> indicates support for enumerations, and <a class=\"xref\" href=\"system.codedom.compiler.generatorsupport\" data-linktype=\"relative-path\">GeneratorSupport</a> indicates support for value types such as structures.  </p>\n</div>\n<p> You can build a class or a structure implementation in one complete declaration, or spread the implementation across multiple declarations. The <a class=\"xref\" href=\"system.codedom.codetypedeclaration#System_CodeDom_CodeTypeDeclaration_IsPartial_\" data-linktype=\"relative-path\">IsPartial</a> property indicates whether the type declaration is complete or partial. Not all code generators support partial type declarations, so you should test for this support by calling the <a class=\"xref\" href=\"system.codedom.compiler.icodegenerator#System_CodeDom_Compiler_ICodeGenerator_Supports_\" data-linktype=\"relative-path\">Supports</a> method with the flag <a class=\"xref\" href=\"system.codedom.compiler.generatorsupport\" data-linktype=\"relative-path\">GeneratorSupport</a>.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeTypeDeclaration__ctor\" data-linktype=\"self-bookmark\">CodeTypeDeclaration()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeTypeDeclaration__ctor_System_String_\" data-linktype=\"self-bookmark\">CodeTypeDeclaration(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a> class with the specified name.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeTypeDeclaration_BaseTypes\" data-linktype=\"self-bookmark\">BaseTypes</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the base types of the type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeTypeDeclaration_IsClass\" data-linktype=\"self-bookmark\">IsClass</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the type is a class or reference type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeTypeDeclaration_IsEnum\" data-linktype=\"self-bookmark\">IsEnum</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the type is an enumeration.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeTypeDeclaration_IsInterface\" data-linktype=\"self-bookmark\">IsInterface</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the type is an interface.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeTypeDeclaration_IsPartial\" data-linktype=\"self-bookmark\">IsPartial</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the type declaration is complete or partial.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeTypeDeclaration_IsStruct\" data-linktype=\"self-bookmark\">IsStruct</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets a value indicating whether the type is a value type (struct).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeTypeDeclaration_Members\" data-linktype=\"self-bookmark\">Members</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the collection of class members for the represented type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeTypeDeclaration_TypeAttributes\" data-linktype=\"self-bookmark\">TypeAttributes</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets the attributes of the type.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeTypeDeclaration_TypeParameters\" data-linktype=\"self-bookmark\">TypeParameters</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the type parameters for the type declaration.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Events\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeTypeDeclaration_PopulateBaseTypes\" data-linktype=\"self-bookmark\">PopulateBaseTypes</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.CodeDom.CodeTypeDeclaration.BaseTypes*</span> collection is accessed for the first time.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_CodeDom_CodeTypeDeclaration_PopulateMembers\" data-linktype=\"self-bookmark\">PopulateMembers</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Occurs when the <span class=\"xref\">stem.CodeDom.CodeTypeDeclaration.Members*</span> collection is accessed for the first time.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeTypeDeclaration__ctor\">\r\n    \r\n            <a id=\"System_CodeDom_CodeTypeDeclaration__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CodeTypeDeclaration()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CodeTypeDeclaration ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeTypeDeclaration__ctor_System_String_\">\r\n    \r\n            <a id=\"System_CodeDom_CodeTypeDeclaration__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CodeTypeDeclaration(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a> class with the specified name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public CodeTypeDeclaration (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name for the new type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeTypeDeclaration_BaseTypes\">\r\n    \r\n            <a id=\"System_CodeDom_CodeTypeDeclaration_BaseTypes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BaseTypes</div>        \r\n          </div>\r\n    \r\n            <p>Gets the base types of the type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.CodeDom.CodeTypeReferenceCollection BaseTypes { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codetypereferencecollection\" data-linktype=\"relative-path\">CodeTypeReferenceCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codetypereferencecollection\" data-linktype=\"relative-path\">CodeTypeReferenceCollection</a> object that indicates the base types of the type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>To generate a class in Visual Basic that does not inherit from a base type, but that does implement one or more interfaces, you must include <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> as the first item in the BaseTypes collection.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In the .NET Framework version 2.0 you do not need the <a class=\"xref\" href=\"system.codedom.codetypereference\" data-linktype=\"relative-path\">CodeTypeReference</a> for <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> if the interface you are implementing already exists and you are referring to it by type. For example, if you are implementing the <a class=\"xref\" href=\"system.collections.icollection\" data-linktype=\"relative-path\">ICollection</a> interface and add it to the collection with this statement, <code>ctd.BaseTypes.Add(New CodeTypeReference(typeof(ICollection)))</code>, you do not need the preceding <code>ctd.BaseTypes.Add(New CodeTypeReference(GetType(Object)))</code> statement.  </p>\n</div>\n<p> The following code illustrates the addition of a <a class=\"xref\" href=\"system.codedom.codetypereference\" data-linktype=\"relative-path\">CodeTypeReference</a> to the collection that refers to <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>.  </p>\n<p> [Visual Basic]  </p>\n<pre><code>Dim ctd As New CodeTypeDeclaration(&quot;Class1&quot;)  \nctd.IsClass = True  \nctd.BaseTypes.Add(New CodeTypeReference(GetType(Object)))  \nctd.BaseTypes.Add(New CodeTypeReference(&quot;Interface1&quot;))\n</code></pre><p> [C#]  </p>\n<pre><code>CodeTypeDeclaration ctd = new CodeTypeDeclaration(&quot;Class1&quot;);  \nctd.IsClass = true;  \nctd.BaseTypes.Add(new CodeTypeReference(typeof(Object)));  \nctd.BaseTypes.Add(new CodeTypeReference(&quot;Interface1&quot;));\n</code></pre><p> The preceding code generates the equivalent of the following Visual Basic code.  </p>\n<pre><code>Public Class Class1  \nImplements Interface1\n</code></pre><p> However, the Visual Basic code actually generated is the following.  </p>\n<pre><code>Public Class Class1  \nInherits Object  \nImplements Interface1\n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeTypeDeclaration_IsClass\">\r\n    \r\n            <a id=\"System_CodeDom_CodeTypeDeclaration_IsClass_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsClass</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the type is a class or reference type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsClass { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the type is a class or reference type; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeTypeDeclaration_IsEnum\">\r\n    \r\n            <a id=\"System_CodeDom_CodeTypeDeclaration_IsEnum_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsEnum</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the type is an enumeration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsEnum { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the type is an enumeration; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeTypeDeclaration_IsInterface\">\r\n    \r\n            <a id=\"System_CodeDom_CodeTypeDeclaration_IsInterface_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsInterface</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the type is an interface.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsInterface { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the type is an interface; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeTypeDeclaration_IsPartial\">\r\n    \r\n            <a id=\"System_CodeDom_CodeTypeDeclaration_IsPartial_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsPartial</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the type declaration is complete or partial.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsPartial { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the class or structure declaration is a partial representation of the implementation; <code>false</code> if the declaration is a complete implementation of the class or structure. The default is <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You can build a class or structure implementation in one complete declaration, or spread the implementation across multiple declarations. Implementations are commonly supplied in one complete type declaration. In this case, set the type declaration IsPartial property to <code>false</code>, which indicates that the type declaration represents all details for the class or structure implementation.  </p>\n<p> A partial type declaration makes it easier to build different portions of a class or structure implementation in different modules of your application. The partial type declarations can be stored in one source file, or spread across multiple source files that are eventually compiled together to form the combined type implementation.  </p>\n<p> The C# language supports partial type declarations of classes and structures through the <code>partial</code> keyword. Visual Basic supports partial type declarations of classes and structures with the <code>Partial</code> keyword. Not all code generators support partial type declarations, so you should test for this support by calling the <a class=\"xref\" href=\"system.codedom.compiler.icodegenerator#System_CodeDom_Compiler_ICodeGenerator_Supports_\" data-linktype=\"relative-path\">Supports</a> method with the flag <a class=\"xref\" href=\"system.codedom.compiler.generatorsupport\" data-linktype=\"relative-path\">GeneratorSupport</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Partial type declarations are supported for classes and structures. If you specify a partial type declaration for an enumeration or interface, the generated code produces compiler errors.  </p>\n</div>\n<p> When supplying a class or structure implementation across multiple declarations, set the IsPartial property to <code>true</code> for the initial declaration and all supplemental declarations. The initial declaration must fully specify the type signature, including access modifiers, inherited types, and implemented interfaces. The supplementary declarations do not need to re-specify the type signature. A compiler error typically results if you redefine the type signature in a supplementary declaration.  </p>\n<p> Visual Studio 2005 uses partial types to separate user-generated code from designer code. In Visual Basic Windows Application projects, the user code is placed in a partial class that is not qualified by the <code>Partial</code> keyword; the designer-provided code appears in the partial class that has the <code>Partial</code> keyword. In C#, both the user code and designer code appear in partial classes identified by the <code>partial</code> keyword.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example demonstrates using a <a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a> to supply a class implementation across multiple declarations. The example builds the initial class declaration statement and sets the IsPartial property to <code>true</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"CodeDomPartialTypeExample#3\">   CodeTypeDeclaration^ baseClass = gcnew CodeTypeDeclaration( &quot;DocumentProperties&quot; );\n   baseClass-&gt;IsPartial = true;\n   baseClass-&gt;IsClass = true;\n   baseClass-&gt;Attributes = MemberAttributes::Public;\n   baseClass-&gt;BaseTypes-&gt;Add( gcnew CodeTypeReference( System::Object::typeid ) );\n\n   // Add the DocumentProperties class to the namespace.\n   sampleSpace-&gt;Types-&gt;Add( baseClass );\n</code></pre><pre><code class=\"lang-cs\" name=\"CodeDomPartialTypeExample#3\">            CodeTypeDeclaration baseClass = new CodeTypeDeclaration(&quot;DocumentProperties&quot;);\n            baseClass.IsPartial = true;\n            baseClass.IsClass = true;\n            baseClass.Attributes = MemberAttributes.Public;\n            baseClass.BaseTypes.Add(new CodeTypeReference(typeof(System.Object\n)));\n\n            // Add the DocumentProperties class to the namespace.\n            sampleSpace.Types.Add(baseClass);\n</code></pre><pre><code class=\"lang-vb\" name=\"CodeDomPartialTypeExample#3\">            Dim baseClass As CodeTypeDeclaration = New CodeTypeDeclaration(&quot;DocumentProperties&quot;)\n            baseClass.IsPartial = True\n            baseClass.IsClass = True\n            baseClass.Attributes = MemberAttributes.Public\n            baseClass.BaseTypes.Add(New CodeTypeReference(GetType(System.Object)))\n\n            &#39; Add the DocumentProperties class to the namespace.\n            sampleSpace.Types.Add(baseClass)\n</code></pre><p> A different method in the example extends the class implementation. This method builds a new type declaration statement for the existing class and sets the IsPartial property to <code>true</code>. The compiler combines the two partial type declarations together for the complete class implementation.  </p>\n<pre><code class=\"lang-cpp\" name=\"CodeDomPartialTypeExample#7\">   CodeTypeDeclaration^ baseClass = gcnew CodeTypeDeclaration( &quot;DocumentProperties&quot; );\n   baseClass-&gt;IsPartial = true;\n   baseClass-&gt;IsClass = true;\n   baseClass-&gt;Attributes = MemberAttributes::Public;\n\n   // Extend the DocumentProperties class in the unit namespace.\n   ( *docPropUnit)-&gt;Namespaces[ 0 ]-&gt;Types-&gt;Add( baseClass );\n</code></pre><pre><code class=\"lang-cs\" name=\"CodeDomPartialTypeExample#7\">            CodeTypeDeclaration baseClass = new CodeTypeDeclaration(&quot;DocumentProperties&quot;);\n            baseClass.IsPartial = true;\n            baseClass.IsClass = true;\n            baseClass.Attributes = MemberAttributes.Public;\n\n            // Extend the DocumentProperties class in the unit namespace.\n            docPropUnit.Namespaces[0].Types.Add(baseClass);\n</code></pre><pre><code class=\"lang-vb\" name=\"CodeDomPartialTypeExample#7\">            Dim baseClass As CodeTypeDeclaration = New CodeTypeDeclaration(&quot;DocumentProperties&quot;)\n            baseClass.IsPartial = True\n            baseClass.IsClass = True\n            baseClass.Attributes = MemberAttributes.Public\n\n            &#39; Extend the DocumentProperties class in the unit namespace.\n            docPropUnit.Namespaces(0).Types.Add(baseClass)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeTypeDeclaration_IsStruct\">\r\n    \r\n            <a id=\"System_CodeDom_CodeTypeDeclaration_IsStruct_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsStruct</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets a value indicating whether the type is a value type (struct).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsStruct { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the type is a value type; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeTypeDeclaration_Members\">\r\n    \r\n            <a id=\"System_CodeDom_CodeTypeDeclaration_Members_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Members</div>        \r\n          </div>\r\n    \r\n            <p>Gets the collection of class members for the represented type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.CodeDom.CodeTypeMemberCollection Members { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codetypemembercollection\" data-linktype=\"relative-path\">CodeTypeMemberCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codetypemembercollection\" data-linktype=\"relative-path\">CodeTypeMemberCollection</a> object that indicates the class members.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeTypeDeclaration_TypeAttributes\">\r\n    \r\n            <a id=\"System_CodeDom_CodeTypeDeclaration_TypeAttributes_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TypeAttributes</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets the attributes of the type.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Reflection.TypeAttributes TypeAttributes { get; set; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.reflection.typeattributes\" data-linktype=\"relative-path\">TypeAttributes</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.reflection.typeattributes\" data-linktype=\"relative-path\">TypeAttributes</a> object that indicates the attributes of the type.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.reflection.typeattributes\" data-linktype=\"relative-path\">TypeAttributes</a> property contains the same type of values used by <a class=\"xref\" href=\"system.reflection\" data-linktype=\"relative-path\">System.Reflection</a> when investigating a type at run time. Many of these flags do not correspond to the type declaration syntax for some languages. As a result, only the following flags are significant to <a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a> : <a class=\"xref\" href=\"system.reflection.typeattributes\" data-linktype=\"relative-path\">TypeAttributes</a>, <a class=\"xref\" href=\"system.reflection.typeattributes\" data-linktype=\"relative-path\">TypeAttributes</a>, <a class=\"xref\" href=\"system.reflection.typeattributes\" data-linktype=\"relative-path\">TypeAttributes</a>, <a class=\"xref\" href=\"system.reflection.typeattributes\" data-linktype=\"relative-path\">TypeAttributes</a>, <a class=\"xref\" href=\"system.reflection.typeattributes\" data-linktype=\"relative-path\">TypeAttributes</a>, <a class=\"xref\" href=\"system.reflection.typeattributes\" data-linktype=\"relative-path\">TypeAttributes</a>, <a class=\"xref\" href=\"system.reflection.typeattributes\" data-linktype=\"relative-path\">TypeAttributes</a>, and <a class=\"xref\" href=\"system.reflection.typeattributes\" data-linktype=\"relative-path\">TypeAttributes</a>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> Some of the flags such as <a class=\"xref\" href=\"system.reflection.typeattributes\" data-linktype=\"relative-path\">TypeAttributes</a> overlap with the meaning of flags in the <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_Attributes_\" data-linktype=\"relative-path\">Attributes</a> property of <a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a> that is inherited from <a class=\"xref\" href=\"system.codedom.codetypemember\" data-linktype=\"relative-path\">CodeTypeMember</a>. The <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_Attributes_\" data-linktype=\"relative-path\">Attributes</a> property is a side effect of the <a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a> class inheriting from <a class=\"xref\" href=\"system.codedom.codetypemember\" data-linktype=\"relative-path\">CodeTypeMember</a> so that classes can be nested. The flags in the TypeAttributes property should be used instead of the flags in the <a class=\"xref\" href=\"system.codedom.codetypemember#System_CodeDom_CodeTypeMember_Attributes_\" data-linktype=\"relative-path\">Attributes</a> property.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> The pattern for setting the visibility flags (flags containing the words <code>Public</code> or <code>Nested</code>) is to mask out all visibility flags using the <a class=\"xref\" href=\"system.reflection.typeattributes\" data-linktype=\"relative-path\">TypeAttributes</a> and then set the desired visibility flag. For example, the C# code statement to identify the <a class=\"xref\" href=\"system.codedom.codetypedeclaration\" data-linktype=\"relative-path\">CodeTypeDeclaration</a> (named <code>cd</code>) as an internal class is <code>cd.TypeAttributes = (cd.TypeAttributes &amp; ~TypeAttributes.VisibilityMask) | TypeAttributes.NotPublic;</code>.  The code to set the same value in Visual Basic is <code>cd.TypeAttributes = (cd.TypeAttributes And (TypeAttributes.VisibilityMask Xor -1)) Or TypeAttributes.NotPublic</code>. Setting the TypeAttributes property directly to a visibility flag (<code>cd.TypeAttributes = TypeAttributes.NotPublic;</code>) erases all other flags that might be set.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeTypeDeclaration_TypeParameters\">\r\n    \r\n            <a id=\"System_CodeDom_CodeTypeDeclaration_TypeParameters_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TypeParameters</div>        \r\n          </div>\r\n    \r\n            <p>Gets the type parameters for the type declaration.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.CodeDom.CodeTypeParameterCollection TypeParameters { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.codedom.codetypeparametercollection\" data-linktype=\"relative-path\">CodeTypeParameterCollection</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.codedom.codetypeparametercollection\" data-linktype=\"relative-path\">CodeTypeParameterCollection</a> that contains the type parameters for the type declaration.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A generic type declaration contains one or more unspecified types known as type parameters. A type parameter name stands for the type within the body of the generic declaration. For example, the generic declaration for the <a class=\"xref\" href=\"system.collections.generic.list-1\" data-linktype=\"relative-path\">List&lt;T&gt;</a> class contains the type parameter <code>T</code>.  </p>\n<p> For more information on generics, see <a href=\"../Topic/Generics%20in%20the%20.NET%20Framework%20Class%20Library%20(C%23%20Programming%20Guide).md\" data-linktype=\"relative-path\">Generics in the .NET Framework Class Library</a>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"events\">\r\n        <h2>Events\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeTypeDeclaration_PopulateBaseTypes\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PopulateBaseTypes</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.CodeDom.CodeTypeDeclaration.BaseTypes*</span> collection is accessed for the first time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler PopulateBaseTypes;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_CodeDom_CodeTypeDeclaration_PopulateMembers\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PopulateMembers</div>        \r\n          </div>\r\n    \r\n            <p>Occurs when the <span class=\"xref\">stem.CodeDom.CodeTypeDeclaration.Members*</span> collection is accessed for the first time.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public event EventHandler PopulateMembers;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.CodeDom.CodeTypeDeclaration.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.CodeDom.CodeTypeDeclaration.yml\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration..ctor\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration.BaseTypes\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration.IsClass\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration.IsEnum\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration.IsInterface\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration.IsPartial\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration.IsStruct\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration.Members\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration.add_PopulateBaseTypes\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration.remove_PopulateBaseTypes\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration.PopulateMembers\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration.add_PopulateMembers\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration.remove_PopulateMembers\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration.TypeAttributes\">\r\n<meta name=\"APIName\" content=\"System.CodeDom.CodeTypeDeclaration.TypeParameters\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"e3bc2f75-56f9-b094-a7e2-8f7c0a4071a7\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.CodeDom\\CodeTypeDeclaration.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents a type declaration for a class, structure, interface, or enumeration.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.CodeDom/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.CodeDom.CodeTypeDeclaration\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.CodeDom.CodeTypeDeclaration.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.CodeDom.CodeTypeDeclaration.yml","open_to_public_contributors":true,"api_name":["System.CodeDom.CodeTypeDeclaration","System.CodeDom.CodeTypeDeclaration..ctor","System.CodeDom.CodeTypeDeclaration.BaseTypes","System.CodeDom.CodeTypeDeclaration.IsClass","System.CodeDom.CodeTypeDeclaration.IsEnum","System.CodeDom.CodeTypeDeclaration.IsInterface","System.CodeDom.CodeTypeDeclaration.IsPartial","System.CodeDom.CodeTypeDeclaration.IsStruct","System.CodeDom.CodeTypeDeclaration.Members","System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes","System.CodeDom.CodeTypeDeclaration.add_PopulateBaseTypes","System.CodeDom.CodeTypeDeclaration.remove_PopulateBaseTypes","System.CodeDom.CodeTypeDeclaration.PopulateMembers","System.CodeDom.CodeTypeDeclaration.add_PopulateMembers","System.CodeDom.CodeTypeDeclaration.remove_PopulateMembers","System.CodeDom.CodeTypeDeclaration.TypeAttributes","System.CodeDom.CodeTypeDeclaration.TypeParameters"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.CodeDom.CodeTypeDeclaration","System::CodeDom::CodeTypeDeclaration","System.CodeDom.CodeTypeDeclaration.#ctor","System::CodeDom::CodeTypeDeclaration::#ctor","System.CodeDom.CodeTypeDeclaration.BaseTypes","System::CodeDom::CodeTypeDeclaration::BaseTypes","System.CodeDom.CodeTypeDeclaration.IsClass","System::CodeDom::CodeTypeDeclaration::IsClass","System.CodeDom.CodeTypeDeclaration.IsEnum","System::CodeDom::CodeTypeDeclaration::IsEnum","System.CodeDom.CodeTypeDeclaration.IsInterface","System::CodeDom::CodeTypeDeclaration::IsInterface","System.CodeDom.CodeTypeDeclaration.IsPartial","System::CodeDom::CodeTypeDeclaration::IsPartial","System.CodeDom.CodeTypeDeclaration.IsStruct","System::CodeDom::CodeTypeDeclaration::IsStruct","System.CodeDom.CodeTypeDeclaration.Members","System::CodeDom::CodeTypeDeclaration::Members","System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes","System::CodeDom::CodeTypeDeclaration::PopulateBaseTypes","System.CodeDom.CodeTypeDeclaration.PopulateMembers","System::CodeDom::CodeTypeDeclaration::PopulateMembers","System.CodeDom.CodeTypeDeclaration.TypeAttributes","System::CodeDom::CodeTypeDeclaration::TypeAttributes","System.CodeDom.CodeTypeDeclaration.TypeParameters","System::CodeDom::CodeTypeDeclaration::TypeParameters"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"e3bc2f75-56f9-b094-a7e2-8f7c0a4071a7","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.CodeDom\\CodeTypeDeclaration.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.CodeDom/CodeTypeDeclaration.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"CodeTypeDeclaration class | Microsoft Docs","_op_ogTitle":"CodeTypeDeclaration class","description":"Represents a type declaration for a class, structure, interface, or enumeration.\n","toc_asset_id":"_splitted/System.CodeDom/toc.json","toc_rel":"_splitted/System.CodeDom/toc.json","source_url":"","ms.assetid":"System.CodeDom.CodeTypeDeclaration","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.codedom.codetypedeclaration","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.codedom.codetypedeclaration","fileRelativePath":"System.CodeDom.CodeTypeDeclaration.html"},"themesRelativePathToOutputRoot":"_themes/"}