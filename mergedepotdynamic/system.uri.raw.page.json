{"content":"    \r\n    <h1 id=\"System_Uri\">\r\n      <span class=\"lang-csharp\">Uri</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides an object representation of a uniform resource identifier (URI) and easy access to the parts of the URI.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))]\npublic class Uri : System.Runtime.Serialization.ISerializable</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">Uri</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>A URI is a compact representation of a resource available to your application on the intranet or Internet. The Uri class defines the properties and methods for handling URIs, including parsing, comparing, and combining. The Uri class properties are read-only; to create a modifiable object, use the <a class=\"xref\" href=\"system.uribuilder\" data-linktype=\"relative-path\">UriBuilder</a> class.  </p>\n<p> Relative URIs (for example, &quot;/new/index.htm&quot;) must be expanded with respect to a base URI so that they are absolute. The <a class=\"xref\" href=\"system.uri#System_Uri_MakeRelative_\" data-linktype=\"relative-path\">MakeRelative</a> method is provided to convert absolute URIs to relative URIs when necessary.  </p>\n<p> The Uri constructors do not escape URI strings if the string is a well-formed URI including a scheme identifier.  </p>\n<p> The Uri properties return a canonical data representation in escaped encoding, with all characters with Unicode values greater than 127 replaced with their hexadecimal equivalents. To put the URI in canonical form, the Uri constructor performs the following steps:  </p>\n<ul>\n<li><p>Converts the URI scheme to lowercase.  </p>\n</li>\n<li><p>Converts the host name to lowercase.  </p>\n</li>\n<li><p>If the host name is an IPv6 address, the canonical IPv6 address is used. ScopeId and other optional IPv6 data are removed.  </p>\n</li>\n<li><p>Removes default and empty port numbers.  </p>\n</li>\n<li><p>Canonicalizes the path for hierarchical URIs by compacting sequences such as /./, /../, //, including escaped representations. Note that there are some schemes for which escaped representations are not compacted.  </p>\n</li>\n<li><p>For hierarchical URIs, if the host is not terminated with a forward slash (/), one is added.  </p>\n</li>\n<li><p>By default, any reserved characters in the URI are escaped in accordance with RFC 2396. This behavior changes if International Resource Identifiers or International Domain Name parsing is enabled in which case reserved characters in the URI are escaped in accordance with RFC 3986 and RFC 3987.  </p>\n<p>As part of canonicalization in the constructor for some schemes, escaped representations are compacted. The schemes for which URI will compact escaped sequences include the following: file, http, https, net.pipe, and net.tcp. For all other schemes, escaped sequences are not compacted. For example: if you percent encode the two dots &quot;..&quot; as &quot;%2E%2E&quot; then the URI constructor will compact this sequence for some schemes. For example, the following code sample shows a URI constructor for the http scheme.  </p>\n</li>\n</ul>\n<pre><code>\nUri uri = new Uri(&quot;http://myUrl/%2E%2E/%2E%2E&quot;);  \nConsole.WriteLine(uri.AbsoluteUri);  \nConsole.WriteLine(uri.PathAndQuery);  \n</code></pre><p> When this code is executed, it returns the following output with the escaped sequence compacted.  </p>\n<pre><code>\nhttp://myUrl/  \n/  \n</code></pre><p> The following code example shows a URI constructor for the ftp scheme:  </p>\n<pre><code>\nUri uri = new Uri(&quot;ftp://myUrl/%2E%2E/%2E%2E&quot;);  \nConsole.WriteLine(uri.AbsoluteUri);  \nConsole.WriteLine(uri.PathAndQuery);  \n</code></pre><p> When this code is executed, it returns the following output with the escaped sequence not compacted.  </p>\n<pre><code>\nftp://myUrl/%2E%2E/%2E%2E  \n/%2E%2E/%2E%2E  \n</code></pre><p> You can transform the contents of the Uri class from an escape encoded URI reference to a readable URI reference by using the <a class=\"xref\" href=\"system.uri#System_Uri_ToString_\" data-linktype=\"relative-path\">ToString</a> method. Note that some reserved characters might still be escaped in the output of the <a class=\"xref\" href=\"system.uri#System_Uri_ToString_\" data-linktype=\"relative-path\">ToString</a> method. This is to support unambiguous reconstruction of a URI from the value returned by <a class=\"xref\" href=\"system.uri#System_Uri_ToString_\" data-linktype=\"relative-path\">ToString</a>.  </p>\n<p> Some URIs include a fragment identifier or a query or both. A fragment identifier is any text that follows a number sign (#), not including the number sign; the fragment text is stored in the <a class=\"xref\" href=\"system.uri#System_Uri_Fragment_\" data-linktype=\"relative-path\">Fragment</a> property. Query information is any text that follows a question mark (?) in the URI; the query text is stored in the <a class=\"xref\" href=\"system.uri#System_Uri_Query_\" data-linktype=\"relative-path\">Query</a> property.  </p>\n<p> In the .NET Framework version 1.1, if the string specified to a constructor contains an unknown scheme and &quot;c:\\&quot;, the Uri class inserts &quot;//&quot; after the colon. For example, the URI <code>xyz:c:\\abc</code> is converted to <code>xyz://c:/abc</code>. In the .NET Framework version 2.0, this behavior has been removed, and the example string is converted to <code>xyz:c:/abc</code>.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The URI class supports the use of IP addresses in both quad-notation for IPv4 protocol and colon-hexadecimal for IPv6 protocol. Remember to enclose the IPv6 address in square brackets, as in http://[::1].  </p>\n</div>\n<h2 id=\"international-resource-identifier-support\">International Resource Identifier Support</h2>\n<p> Web addresses are typically expressed using uniform resource identifiers that consist of a very restricted set of characters:  </p>\n<ul>\n<li><p>Upper and lower case ASCII letters from the English alphabet.  </p>\n</li>\n<li><p>Digits from 0 to 9.  </p>\n</li>\n<li><p>A small number of other ASCII symbols.  </p>\n<p>The specifications for URIs are documented in RFC 2396, RFC 2732, RFC 3986, and RFC 3987 published by the Internet Engineering Task Force (IETF).  </p>\n<p>With the growth of the Internet, there is a growing need to identify resources using languages other than English. Identifiers which facilitate this need and allow non-ASCII characters (characters in the Unicode/ISO 10646 character set) are known as International Resource Identifiers (IRIs). The specifications for IRIs are documented in RFC 3987 published by IETF. Using IRIs allows a URL to contain Unicode characters.  </p>\n<p>The existing Uri class has been extended in .NET Framework v3.5, 3.0 SP1, and 2.0 SP1 to provide IRI support based on RFC 3987. Users of .NET Framework versions before version 4.5 will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI. This ensures application compatibility with prior versions of the .NET Framework.  </p>\n<p>To enable support for IRI, the following change is required:  </p>\n</li>\n<li><p>Specify whether you want Internationalized Domain Name (IDN) parsing applied to the domain name and whether IRI parsing rules should be applied. This can be done in the machine.config or in the app.config file. For example, add the following:  </p>\n<pre><code>&lt;configuration&gt;  \n  &lt;uri&gt;  \n  &lt;idn enabled=&quot;All&quot; /&gt;  \n  &lt;iriParsing enabled=&quot;true&quot; /&gt;  \n  &lt;/uri&gt;  \n&lt;/configuration&gt;  \n</code></pre><p>Users of .NET Framework 4.5 and newer always have IRI enabled. IRI parsing cannot be changed using a .config file.  </p>\n<p>Enabling IDN will convert all Unicode labels in a domain name to their Punycode equivalents. Punycode names contain only ASCII characters and always start with the xn-- prefix. The reason for this is to support existing DNS servers on the Internet, since most DNS servers only support ASCII characters (see RFC 3940).  </p>\n<p>Enabling IRI and IDN affects the value of the <a class=\"xref\" href=\"system.uri#System_Uri_DnsSafeHost_\" data-linktype=\"relative-path\">DnsSafeHost</a> property. Enabling IRI and IDN can also change the behavior of the <a class=\"xref\" href=\"system.uri#System_Uri_Equals_\" data-linktype=\"relative-path\">Equals</a>, <a class=\"xref\" href=\"system.uri#System_Uri_OriginalString_\" data-linktype=\"relative-path\">OriginalString</a>, <a class=\"xref\" href=\"system.uri#System_Uri_GetComponents_\" data-linktype=\"relative-path\">GetComponents</a>, and <a class=\"xref\" href=\"system.uri#System_Uri_IsWellFormedOriginalString_\" data-linktype=\"relative-path\">IsWellFormedOriginalString</a> methods.  </p>\n<p>There are three possible values for IDN depending on the DNS servers that are used:  </p>\n</li>\n<li><p>idn enabled = All  </p>\n<p> This value will convert any Unicode domain names to their Punycode equivalents (IDN names).  </p>\n</li>\n<li><p>idn enabled = AllExceptIntranet  </p>\n<p> This value will convert all Unicode domain names not on the local Intranet to use the Punycode equivalents (IDN names). In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode name resolution.  </p>\n</li>\n<li><p>idn enabled = None  </p>\n<p> This value will not convert any Unicode domain names to use Punycode. This is the default value which is consistent with the .NET Framework 2.0 behaviour.  </p>\n<p>When IRI parsing is enabled (iriParsing enabled = <code>true</code>) normalization and character checking are done according to the latest IRI rules in RFC 3986 and RFC 3987. When IRI parsing is disabled, normalization and character checking are performed according to RFC 2396 and RFC 2732 (for IPv6 literals).  In versions of the .NET Framework before version 4.5, the default value is <code>false</code>. In .NET Framework version 4.5 and newer, the default value is <code>true</code>, and the enabled state of IRI parsing cannot be modified by settings in a .config file.  </p>\n<p>IRI and IDN processing in the Uri class can also be controlled using the <a class=\"xref\" href=\"system.configuration.iriparsingelement\" data-linktype=\"relative-path\">System.Configuration.IriParsingElement</a>, <a class=\"xref\" href=\"system.configuration.idnelement\" data-linktype=\"relative-path\">System.Configuration.IdnElement</a>, and <a class=\"xref\" href=\"system.configuration.urisection\" data-linktype=\"relative-path\">System.Configuration.UriSection</a> configuration setting classes. The <a class=\"xref\" href=\"system.configuration.iriparsingelement\" data-linktype=\"relative-path\">System.Configuration.IriParsingElement</a> setting enables or disables IRI processing in the Uri class. The <a class=\"xref\" href=\"system.configuration.idnelement\" data-linktype=\"relative-path\">System.Configuration.IdnElement</a> setting enables or disables IDN processing in the Uri class. The <a class=\"xref\" href=\"system.configuration.iriparsingelement\" data-linktype=\"relative-path\">System.Configuration.IriParsingElement</a> setting also indirectly controls IDN. IRI processing must be enabled for IDN processing to be possible. If IRI processing is disabled, then IDN processing will be set to the default setting where the .NET Framework 2.0 behavior is used for compatibility and IDN names are not used.  </p>\n<p>The configuration setting for the <a class=\"xref\" href=\"system.configuration.iriparsingelement\" data-linktype=\"relative-path\">System.Configuration.IriParsingElement</a> and <a class=\"xref\" href=\"system.configuration.idnelement\" data-linktype=\"relative-path\">System.Configuration.IdnElement</a> will be read once when the first Uri class is constructed. Changes to configuration settings after that time are ignored.  </p>\n<p>The <a class=\"xref\" href=\"system.genericuriparser\" data-linktype=\"relative-path\">System.GenericUriParser</a> class has also been extended to allow creating a customizable parser that supports IRI and IDN. The behavior of a <a class=\"xref\" href=\"system.genericuriparser\" data-linktype=\"relative-path\">System.GenericUriParser</a> object is specified by passing a bitwise combination of the values available in the <a class=\"xref\" href=\"system.genericuriparseroptions\" data-linktype=\"relative-path\">System.GenericUriParserOptions</a> enumeration to the <a class=\"xref\" href=\"system.genericuriparser\" data-linktype=\"relative-path\">System.GenericUriParser</a> constructor. The <a class=\"xref\" href=\"system.genericuriparseroptions\" data-linktype=\"relative-path\">System.GenericUriParserOptions</a> type indicates the parser supports the parsing rules specified in RFC 3987 for International Resource Identifiers (IRI). Whether IRI is used is dictated by the configuration values previously discussed.  </p>\n<p>The <a class=\"xref\" href=\"system.genericuriparseroptions\" data-linktype=\"relative-path\">System.GenericUriParserOptions</a> type indicates the parser supports Internationalized Domain Name (IDN) parsing (IDN) of host names. Whether IDN is used is dictated by the configuration values previously discussed.  </p>\n</li>\n</ul>\n<h2 id=\"performance-considerations\">Performance Considerations</h2>\n<p> If you use a Web.config file that contains URIs to initialize your application, additional time is required to process the URIs if their scheme identifiers are nonstandard. In such a case, initialize the affected parts of your application when the URIs are needed, not at start time.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri__ctor_System_String_\" data-linktype=\"self-bookmark\">Uri(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class with the specified URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">Uri(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class from the specified instances of the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> and <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> classes.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri__ctor_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">Uri(String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class with the specified URI, with explicit control of character escaping.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri__ctor_System_String_System_UriKind_\" data-linktype=\"self-bookmark\">Uri(String,UriKind)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class with the specified URI. This constructor allows you to specify if the URI string is a relative URI, absolute URI, or is indeterminate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri__ctor_System_Uri_System_String_\" data-linktype=\"self-bookmark\">Uri(Uri,String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class based on the specified base URI and relative URI string.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri__ctor_System_Uri_System_Uri_\" data-linktype=\"self-bookmark\">Uri(Uri,Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class based on the combination of a specified base <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and a relative <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri__ctor_System_Uri_System_String_System_Boolean_\" data-linktype=\"self-bookmark\">Uri(Uri,String,Boolean)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class based on the specified base and relative URIs, with explicit control of character escaping.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Fields\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_SchemeDelimiter\" data-linktype=\"self-bookmark\">SchemeDelimiter</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies the characters that separate the communication protocol scheme from the address portion of the URI. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_UriSchemeFile\" data-linktype=\"self-bookmark\">UriSchemeFile</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies that the URI is a pointer to a file. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_UriSchemeFtp\" data-linktype=\"self-bookmark\">UriSchemeFtp</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies that the URI is accessed through the File Transfer Protocol (FTP). This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_UriSchemeGopher\" data-linktype=\"self-bookmark\">UriSchemeGopher</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies that the URI is accessed through the Gopher protocol. This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_UriSchemeHttp\" data-linktype=\"self-bookmark\">UriSchemeHttp</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP). This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_UriSchemeHttps\" data-linktype=\"self-bookmark\">UriSchemeHttps</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS). This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_UriSchemeMailto\" data-linktype=\"self-bookmark\">UriSchemeMailto</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies that the URI is an e-mail address and is accessed through the Simple Mail Transport Protocol (SMTP). This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_UriSchemeNetPipe\" data-linktype=\"self-bookmark\">UriSchemeNetPipe</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies that the URI is accessed through the NetPipe scheme used by Windows Communication Foundation (WCF). This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_UriSchemeNetTcp\" data-linktype=\"self-bookmark\">UriSchemeNetTcp</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies that the URI is accessed through the NetTcp scheme used by Windows Communication Foundation (WCF). This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_UriSchemeNews\" data-linktype=\"self-bookmark\">UriSchemeNews</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP). This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_UriSchemeNntp\" data-linktype=\"self-bookmark\">UriSchemeNntp</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP). This field is read-only.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_AbsolutePath\" data-linktype=\"self-bookmark\">AbsolutePath</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the absolute path of the URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_AbsoluteUri\" data-linktype=\"self-bookmark\">AbsoluteUri</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the absolute URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_Authority\" data-linktype=\"self-bookmark\">Authority</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the Domain Name System (DNS) host name or IP address and the port number for a server.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_DnsSafeHost\" data-linktype=\"self-bookmark\">DnsSafeHost</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an unescaped host name that is safe to use for DNS resolution.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_Fragment\" data-linktype=\"self-bookmark\">Fragment</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the escaped URI fragment.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_Host\" data-linktype=\"self-bookmark\">Host</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the host component of this instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_HostNameType\" data-linktype=\"self-bookmark\">HostNameType</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the type of the host name specified in the URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_IdnHost\" data-linktype=\"self-bookmark\">IdnHost</a></div>\r\n          </td>\r\n            <td>\r\n            <p>The RFC 3490 compliant International Domain Name of the host, using Punycode as appropriate.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_IsAbsoluteUri\" data-linktype=\"self-bookmark\">IsAbsoluteUri</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets whether the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance is absolute.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_IsDefaultPort\" data-linktype=\"self-bookmark\">IsDefaultPort</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets whether the port value of the URI is the default for this scheme.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_IsFile\" data-linktype=\"self-bookmark\">IsFile</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the specified <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> is a file URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_IsLoopback\" data-linktype=\"self-bookmark\">IsLoopback</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets whether the specified <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> references the local host.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_IsUnc\" data-linktype=\"self-bookmark\">IsUnc</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets whether the specified <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> is a universal naming convention (UNC) path.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_LocalPath\" data-linktype=\"self-bookmark\">LocalPath</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a local operating-system representation of a file name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_OriginalString\" data-linktype=\"self-bookmark\">OriginalString</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the original URI string that was passed to the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> constructor.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_PathAndQuery\" data-linktype=\"self-bookmark\">PathAndQuery</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <span class=\"xref\">stem.Uri.AbsolutePath*</span> and <span class=\"xref\">stem.Uri.Query*</span> properties separated by a question mark (?).</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_Port\" data-linktype=\"self-bookmark\">Port</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the port number of this URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_Query\" data-linktype=\"self-bookmark\">Query</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets any query information included in the specified URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_Scheme\" data-linktype=\"self-bookmark\">Scheme</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the scheme name for this URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_Segments\" data-linktype=\"self-bookmark\">Segments</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an array containing the path segments that make up the specified URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_UserEscaped\" data-linktype=\"self-bookmark\">UserEscaped</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates that the URI string was completely escaped before the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance was created.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_UserInfo\" data-linktype=\"self-bookmark\">UserInfo</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the user name, password, or other user-specific information associated with the specified URI.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_Canonicalize\" data-linktype=\"self-bookmark\">Canonicalize()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the internally stored URI to canonical form.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_CheckHostName_System_String_\" data-linktype=\"self-bookmark\">CheckHostName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified host name is a valid DNS name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_CheckSchemeName_System_String_\" data-linktype=\"self-bookmark\">CheckSchemeName(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified scheme name is valid.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_CheckSecurity\" data-linktype=\"self-bookmark\">CheckSecurity()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Calling this method has no effect.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_Compare_System_Uri_System_Uri_System_UriComponents_System_UriFormat_System_StringComparison_\" data-linktype=\"self-bookmark\">Compare(Uri,Uri,UriComponents,UriFormat,StringComparison)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares the specified parts of two URIs using the specified comparison rules.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_Equals_System_Object_\" data-linktype=\"self-bookmark\">Equals(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Compares two <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances for equality.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_Escape\" data-linktype=\"self-bookmark\">Escape()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts any unsafe or reserved characters in the path component to their hexadecimal character representations.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_EscapeDataString_System_String_\" data-linktype=\"self-bookmark\">EscapeDataString(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a string to its escaped representation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_EscapeString_System_String_\" data-linktype=\"self-bookmark\">EscapeString(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a string to its escaped representation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_EscapeUriString_System_String_\" data-linktype=\"self-bookmark\">EscapeUriString(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a URI string to its escaped representation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_FromHex_System_Char_\" data-linktype=\"self-bookmark\">FromHex(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the decimal value of a hexadecimal digit.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_GetComponents_System_UriComponents_System_UriFormat_\" data-linktype=\"self-bookmark\">GetComponents(UriComponents,UriFormat)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the specified components of the current instance using the specified escaping for special characters.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_GetHashCode\" data-linktype=\"self-bookmark\">GetHashCode()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the hash code for the URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_GetLeftPart_System_UriPartial_\" data-linktype=\"self-bookmark\">GetLeftPart(UriPartial)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the specified portion of a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the data needed to serialize the current instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_HexEscape_System_Char_\" data-linktype=\"self-bookmark\">HexEscape(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a specified character into its hexadecimal equivalent.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_HexUnescape_System_String_System_Int32__\" data-linktype=\"self-bookmark\">HexUnescape(String,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a specified hexadecimal representation of a character to the character.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_IsBadFileSystemCharacter_System_Char_\" data-linktype=\"self-bookmark\">IsBadFileSystemCharacter(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets whether a character is invalid in a file system name.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_IsBaseOf_System_Uri_\" data-linktype=\"self-bookmark\">IsBaseOf(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the current <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance is a base of the specified <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_IsExcludedCharacter_System_Char_\" data-linktype=\"self-bookmark\">IsExcludedCharacter(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets whether the specified character should be escaped.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_IsHexDigit_System_Char_\" data-linktype=\"self-bookmark\">IsHexDigit(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether a specified character is a valid hexadecimal digit.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_IsHexEncoding_System_String_System_Int32_\" data-linktype=\"self-bookmark\">IsHexEncoding(String,Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether a character in a string is hexadecimal encoded.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_IsReservedCharacter_System_Char_\" data-linktype=\"self-bookmark\">IsReservedCharacter(Char)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets whether the specified character is a reserved character.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_IsWellFormedOriginalString\" data-linktype=\"self-bookmark\">IsWellFormedOriginalString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the string used to construct this <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> was well-formed and is not required to be further escaped.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_IsWellFormedUriString_System_String_System_UriKind_\" data-linktype=\"self-bookmark\">IsWellFormedUriString(String,UriKind)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Indicates whether the string is well-formed by attempting to construct a URI with the string and ensures that the string does not require further escaping.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_MakeRelative_System_Uri_\" data-linktype=\"self-bookmark\">MakeRelative(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines the difference between two <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_MakeRelativeUri_System_Uri_\" data-linktype=\"self-bookmark\">MakeRelativeUri(Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines the difference between two <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_Parse\" data-linktype=\"self-bookmark\">Parse()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Parses the URI of the current instance to ensure it contains all the parts required for a valid URI.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_ToString\" data-linktype=\"self-bookmark\">ToString()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a canonical string representation for the specified <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_TryCreate_System_String_System_UriKind_System_Uri__\" data-linktype=\"self-bookmark\">TryCreate(String,UriKind,Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> using the specified <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> instance and a <a class=\"xref\" href=\"system.urikind\" data-linktype=\"relative-path\">UriKind</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_TryCreate_System_Uri_System_String_System_Uri__\" data-linktype=\"self-bookmark\">TryCreate(Uri,String,Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> using the specified base and relative <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> instances.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_TryCreate_System_Uri_System_Uri_System_Uri__\" data-linktype=\"self-bookmark\">TryCreate(Uri,Uri,Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Creates a new <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> using the specified base and relative <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_Unescape_System_String_\" data-linktype=\"self-bookmark\">Unescape(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts the specified string by replacing any escape sequences with their unescaped representation.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_UnescapeDataString_System_String_\" data-linktype=\"self-bookmark\">UnescapeDataString(String)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Converts a string to its unescaped representation.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Operators\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_op_Equality_System_Uri_System_Uri_\" data-linktype=\"self-bookmark\">op_Equality(Uri,Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether two <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances have the same value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_op_Inequality_System_Uri_System_Uri_\" data-linktype=\"self-bookmark\">op_Inequality(Uri,Uri)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether two <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances do not have the same value.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Uri_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\" data-linktype=\"self-bookmark\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns the data needed to serialize the current instance.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Uri__ctor_System_String_\">\r\n    \r\n            <a id=\"System_Uri__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Uri(String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class with the specified URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri (string uriString);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uriString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A URI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>uriString</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <p><div class=\"alert NOTE\"><br> In the <a href=\"http://go.microsoft.com/fwlink/?LinkID=247912\" data-linktype=\"external\">.NET for Windows Store apps</a> or the <a href=\"../Topic/Cross-Platform%20Development%20with%20the%20Portable%20Class%20Library.md\" data-linktype=\"relative-path\">Portable Class Library</a>, catch the base class exception, <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>, instead.  <p>\n<p></div>\n    <code>uriString</code> is empty.  </p>\n<p> -or-  </p>\n<p> The scheme specified in <code>uriString</code> is not correctly formed. See <span class=\"xref\">stem.Uri.CheckSchemeName*</span>.  </p>\n<p> -or-  </p>\n<p> <code>uriString</code> contains too many slashes.  </p>\n<p> -or-  </p>\n<p> The password specified in <code>uriString</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The host name specified in <code>uriString</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The file name specified in <code>uriString</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The user name specified in <code>uriString</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The host or authority name specified in <code>uriString</code> cannot be terminated by backslashes.  </p>\n<p> -or-  </p>\n<p> The port number specified in <code>uriString</code> is not valid or cannot be parsed.  </p>\n<p> -or-  </p>\n<p> The length of <code>uriString</code> exceeds 65519 characters.  </p>\n<p> -or-  </p>\n<p> The length of the scheme specified in <code>uriString</code> exceeds 1023 characters.  </p>\n<p> -or-  </p>\n<p> There is an invalid character sequence in <code>uriString</code>.  </p>\n<p> -or-  </p>\n<p> The MS-DOS path specified in <code>uriString</code> must start with c:\\\\.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance from a URI string. It parses the URI, puts it in canonical format, and makes any required escape encodings.  </p>\n<p> This constructor does not ensure that the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> refers to an accessible resource.  </p>\n<p> This constructor assumes that the <code>string</code> parameter references an absolute URI and is equivalent to calling the <a class=\"xref\" href=\"system.uri#System_Uri__ctor_\" data-linktype=\"relative-path\">Uri</a> constructor with <a class=\"xref\" href=\"system.urikind\" data-linktype=\"relative-path\">UriKind</a> set to <a class=\"xref\" href=\"system.urikind\" data-linktype=\"relative-path\">UriKind</a>. If the <code>string</code> parameter passed to the constructor is a relative URI, this constructor will throw a <a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance with the URI &quot;<a href=\"http://www.contoso.com/\" data-linktype=\"external\">http://www.contoso.com/</a>&quot;.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Uri.Uri Example#1\">   Uri^ baseUri = gcnew Uri( &quot;http://www.contoso.com/&quot; );\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Uri.Uri Example#1\">Uri myUri = new Uri(&quot;http://www.contoso.com/&quot;);\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Uri.Uri Example#1\"> Dim myUri As New Uri(&quot;http://www.contoso.com/&quot;)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri__ctor_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Uri__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Uri(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class from the specified instances of the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> and <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> classes.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected Uri (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of the <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> class containing the information required to serialize the new <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>streamingContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An instance of the <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> class containing the source of the serialized stream associated with the new <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The <code>serializationInfo</code> parameter contains a <code>null</code> URI.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <p>The <code>serializationInfo</code> parameter contains a URI that is empty.  </p>\n<p> -or-  </p>\n<p> The scheme specified is not correctly formed. See <span class=\"xref\">stem.Uri.CheckSchemeName*</span>.  </p>\n<p> -or-  </p>\n<p> The URI contains too many slashes.  </p>\n<p> -or-  </p>\n<p> The password specified in the URI is not valid.  </p>\n<p> -or-  </p>\n<p> The host name specified in URI is not valid.  </p>\n<p> -or-  </p>\n<p> The file name specified in the URI is not valid.  </p>\n<p> -or-  </p>\n<p> The user name specified in the URI is not valid.  </p>\n<p> -or-  </p>\n<p> The host or authority name specified in the URI cannot be terminated by backslashes.  </p>\n<p> -or-  </p>\n<p> The port number specified in the URI is not valid or cannot be parsed.  </p>\n<p> -or-  </p>\n<p> The length of URI exceeds 65519 characters.  </p>\n<p> -or-  </p>\n<p> The length of the scheme specified in the URI exceeds 1023 characters.  </p>\n<p> -or-  </p>\n<p> There is an invalid character sequence in the URI.  </p>\n<p> -or-  </p>\n<p> The MS-DOS path specified in the URI must start with c:\\\\.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor implements the <a class=\"xref\" href=\"system.runtime.serialization.iserializable\" data-linktype=\"relative-path\">ISerializable</a> interface for the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri__ctor_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Uri__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Uri(String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class with the specified URI, with explicit control of character escaping.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri (string uriString, bool dontEscape);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uriString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dontEscape</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if <code>uriString</code> is completely escaped; otherwise, <code>false</code>. See Remarks.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>uriString</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <p><code>uriString</code> is empty or contains only spaces.  </p>\n<p> -or-  </p>\n<p> The scheme specified in <code>uriString</code> is not valid.  </p>\n<p> -or-  </p>\n<p> <code>uriString</code> contains too many slashes.  </p>\n<p> -or-  </p>\n<p> The password specified in <code>uriString</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The host name specified in <code>uriString</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The file name specified in <code>uriString</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The user name specified in <code>uriString</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The host or authority name specified in <code>uriString</code> cannot be terminated by backslashes.  </p>\n<p> -or-  </p>\n<p> The port number specified in <code>uriString</code> is not valid or cannot be parsed.  </p>\n<p> -or-  </p>\n<p> The length of <code>uriString</code> exceeds 65519 characters.  </p>\n<p> -or-  </p>\n<p> The length of the scheme specified in <code>uriString</code> exceeds 1023 characters.  </p>\n<p> -or-  </p>\n<p> There is an invalid character sequence in <code>uriString</code>.  </p>\n<p> -or-  </p>\n<p> The MS-DOS path specified in <code>uriString</code> must start with c:\\\\.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance from a URI string. It parses the URI and puts it in canonical format.  </p>\n<p> The <code>dontEscape</code> parameter controls whether reserved characters are translated into escape sequences. This parameter should be set to <code>true</code> only if you are certain that all reserved characters in the URI have been escaped. Setting the value to <code>true</code> for a URI that has not been completely escaped can cause unexpected behavior. It is strongly recommended that you always set this parameter to <code>false</code>.  </p>\n<p> If <code>dontEscape</code> is set to <code>false</code>, the constructor escapes any reserved characters by checking that all occurrences of percent (%) are followed by a valid escape sequence. If the character sequence following a percent is not valid, the percent is replaced by %25.  </p>\n<p> This constructor does not ensure that the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> refers to an accessible resource.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance for the URI <a href=\"http://www.contoso.com/Hello%20World.htm\" data-linktype=\"external\">http://www.contoso.com/Hello%20World.htm</a>. Because the contained URI is completely escaped and is in canonical form, the <code>dontEscape</code> parameter can be set to <code>true</code>.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic Uri.Uri1 Example#1\"> Dim myUri As New Uri(&quot;http://www.contoso.com/Hello%20World.htm&quot;, True)\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Uri.Uri1 Example#1\">Uri myUri = new Uri(&quot;http://www.contoso.com/Hello%20World.htm&quot;, true);\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Uri.Uri1 Example#1\">   Uri^ myUri = gcnew Uri(  &quot;http://www.contoso.com/Hello%20World.htm&quot;,true );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri__ctor_System_String_System_UriKind_\">\r\n    \r\n            <a id=\"System_Uri__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Uri(String,UriKind)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class with the specified URI. This constructor allows you to specify if the URI string is a relative URI, absolute URI, or is indeterminate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri (string uriString, UriKind uriKind);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uriString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A string that identifies the resource to be represented by the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>uriKind</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.urikind\" data-linktype=\"relative-path\">UriKind</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Specifies whether the URI string is a relative URI, absolute URI, or is indeterminate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>uriKind</code> is invalid.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>uriString</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <p><div class=\"alert NOTE\"><br> In the <a href=\"http://go.microsoft.com/fwlink/?LinkID=247912\" data-linktype=\"external\">.NET for Windows Store apps</a> or the <a href=\"../Topic/Cross-Platform%20Development%20with%20the%20Portable%20Class%20Library.md\" data-linktype=\"relative-path\">Portable Class Library</a>, catch the base class exception, <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>, instead.  <p>\n<p></div>\n    <code>uriString</code> contains a relative URI and <code>uriKind</code> is <a class=\"xref\" href=\"system.urikind\" data-linktype=\"relative-path\">UriKind</a>.  </p>\n<p> or  </p>\n<p> <code>uriString</code> contains an absolute URI and <code>uriKind</code> is <a class=\"xref\" href=\"system.urikind\" data-linktype=\"relative-path\">UriKind</a>.  </p>\n<p> or  </p>\n<p> <code>uriString</code> is empty.  </p>\n<p> -or-  </p>\n<p> The scheme specified in <code>uriString</code> is not correctly formed. See <span class=\"xref\">stem.Uri.CheckSchemeName*</span>.  </p>\n<p> -or-  </p>\n<p> <code>uriString</code> contains too many slashes.  </p>\n<p> -or-  </p>\n<p> The password specified in <code>uriString</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The host name specified in <code>uriString</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The file name specified in <code>uriString</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The user name specified in <code>uriString</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The host or authority name specified in <code>uriString</code> cannot be terminated by backslashes.  </p>\n<p> -or-  </p>\n<p> The port number specified in <code>uriString</code> is not valid or cannot be parsed.  </p>\n<p> -or-  </p>\n<p> The length of <code>uriString</code> exceeds 65519 characters.  </p>\n<p> -or-  </p>\n<p> The length of the scheme specified in <code>uriString</code> exceeds 1023 characters.  </p>\n<p> -or-  </p>\n<p> There is an invalid character sequence in <code>uriString</code>.  </p>\n<p> -or-  </p>\n<p> The MS-DOS path specified in <code>uriString</code> must start with c:\\\\.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Relative and absolute URIs have different restrictions on their format. For example, a relative URI does not require a scheme or an authority. The value you specify in <code>uriKind</code> must match the type of URI passed in <code>uriString</code>. However, if <a class=\"xref\" href=\"system.urikind\" data-linktype=\"relative-path\">UriKind</a> is specified, the URI string can be relative or absolute.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri__ctor_System_Uri_System_String_\">\r\n    \r\n            <a id=\"System_Uri__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Uri(Uri,String)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class based on the specified base URI and relative URI string.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri (Uri baseUri, string relativeUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>baseUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The base URI.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>relativeUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The relative URI to add to the base URI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>baseUri</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>baseUri</code> is not an absolute <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <div class=\"alert NOTE\"><br> In the <a href=\"http://go.microsoft.com/fwlink/?LinkID=247912\" data-linktype=\"external\">.NET for Windows Store apps</a> or the <a href=\"../Topic/Cross-Platform%20Development%20with%20the%20Portable%20Class%20Library.md\" data-linktype=\"relative-path\">Portable Class Library</a>, catch the base class exception, <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>, instead.<br>\n</div>  \n\n<p> The URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is empty or contains only spaces.  </p>\n<p> -or-  </p>\n<p> The scheme specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The URI formed by combining <code>baseUri</code> and <code>relativeUri</code> contains too many slashes.  </p>\n<p> -or-  </p>\n<p> The password specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The host name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The file name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The user name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The host or authority name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> cannot be terminated by backslashes.  </p>\n<p> -or-  </p>\n<p> The port number specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid or cannot be parsed.  </p>\n<p> -or-  </p>\n<p> The length of the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> exceeds 65519 characters.  </p>\n<p> -or-  </p>\n<p> The length of the scheme specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> exceeds 1023 characters.  </p>\n<p> -or-  </p>\n<p> There is an invalid character sequence in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code>.  </p>\n<p> -or-  </p>\n<p> The MS-DOS path specified in <code>uriString</code> must start with c:\\\\.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance by combining the <code>baseUri</code> and the <code>relativeUri</code>. If <code>relativeUri</code> is an absolute URI (containing a scheme, host name, and optionally a port number), the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance is created using only <code>relativeUri</code>.  </p>\n<p> This constructor does not ensure that the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> refers to an accessible resource.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new instance of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class by combining the relative URIs <a href=\"http://www.contoso.com\" data-linktype=\"external\">http://www.contoso.com</a> and catalog/showew.htm to form the absolute URI <a href=\"http://www.contoso.com/catalog/shownew.htm\" data-linktype=\"external\">http://www.contoso.com/catalog/shownew.htm</a>.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Uri.Uri3 Example#1\">   Uri^ baseUri = gcnew Uri(  &quot;http://www.contoso.com&quot; );\n   Uri^ myUri = gcnew Uri( baseUri, &quot;catalog/shownew.htm&quot; );\n   Console::WriteLine( myUri-&gt;ToString() );\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Uri.Uri3 Example#1\"> Dim baseUri As New Uri(&quot;http://www.contoso.com&quot;)\n Dim myUri As New Uri(baseUri, &quot;catalog/shownew.htm&quot;)\n\n Console.WriteLine(myUri.ToString())\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Uri.Uri3 Example#1\">Uri baseUri = new Uri(&quot;http://www.contoso.com&quot;);\n Uri myUri = new Uri(baseUri, &quot;catalog/shownew.htm&quot;);\n\nConsole.WriteLine(myUri.ToString());\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri__ctor_System_Uri_System_Uri_\">\r\n    \r\n            <a id=\"System_Uri__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Uri(Uri,Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class based on the combination of a specified base <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and a relative <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri (Uri baseUri, Uri relativeUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>baseUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An absolute <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> that is the base for the new <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>relativeUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A relative <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance that is combined with <code>baseUri</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>baseUri</code> is not an absolute <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>baseUri</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>baseUri</code> is not an absolute <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <div class=\"alert NOTE\"><br> In the <a href=\"http://go.microsoft.com/fwlink/?LinkID=247912\" data-linktype=\"external\">.NET for Windows Store apps</a> or the <a href=\"../Topic/Cross-Platform%20Development%20with%20the%20Portable%20Class%20Library.md\" data-linktype=\"relative-path\">Portable Class Library</a>, catch the base class exception, <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>, instead.<br>\n</div>  \n\n<p> The URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is empty or contains only spaces.  </p>\n<p> -or-  </p>\n<p> The scheme specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The URI formed by combining <code>baseUri</code> and <code>relativeUri</code> contains too many slashes.  </p>\n<p> -or-  </p>\n<p> The password specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The host name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The file name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The user name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The host or authority name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> cannot be terminated by backslashes.  </p>\n<p> -or-  </p>\n<p> The port number specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid or cannot be parsed.  </p>\n<p> -or-  </p>\n<p> The length of the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> exceeds 65519 characters.  </p>\n<p> -or-  </p>\n<p> The length of the scheme specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> exceeds 1023 characters.  </p>\n<p> -or-  </p>\n<p> There is an invalid character sequence in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code>.  </p>\n<p> -or-  </p>\n<p> The MS-DOS path specified in <code>uriString</code> must start with c:\\\\.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates a new <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance by combining an absolute <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance, <code>baseUri</code>, with a relative <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance, <code>relativeUri</code>. If <code>relativeUri</code> is an absolute <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance (containing a scheme, host name, and optionally a port number), the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance is created using only <code>relativeUri</code>.  </p>\n<p> This constructor does not ensure that the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> refers to an accessible resource.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example creates an absolute <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance, <code>absoluteUri</code>, and a relative <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance, <code>relativeUri</code>. A new <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance, <code>combinedUri</code>, is then created from these two instances.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLUriEnhancements#2\">   // Create an absolute Uri from a string.\n   String^ addressString1 = &quot;http://www.contoso.com/&quot;;\n   String^ addressString2 = &quot;catalog/shownew.htm?date=today&quot;;\n   Uri^ absoluteUri = gcnew Uri(addressString1);\n\n   // Create a relative Uri from a string.  allowRelative = true to allow for \n   // creating a relative Uri.\n   Uri^ relativeUri = gcnew Uri(addressString2);\n\n   // Check whether the new Uri is absolute or relative.\n   if (  !relativeUri-&gt;IsAbsoluteUri )\n      Console::WriteLine( &quot;{0} is a relative Uri.&quot;, relativeUri );\n\n   // Create a new Uri from an absolute Uri and a relative Uri.\n   Uri^ combinedUri = gcnew Uri( absoluteUri,relativeUri );\n   Console::WriteLine( combinedUri-&gt;AbsoluteUri );\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLUriEnhancements#2\">            // Create an absolute Uri from a string.\n            Uri absoluteUri = new Uri(&quot;http://www.contoso.com/&quot;);\n\n            // Create a relative Uri from a string.  allowRelative = true to allow for \n            // creating a relative Uri.\n            Uri relativeUri = new Uri(&quot;/catalog/shownew.htm?date=today&quot;, UriKind.Relative);\n         \n            // Check whether the new Uri is absolute or relative.\n            if (!relativeUri.IsAbsoluteUri)\n                Console.WriteLine(&quot;{0} is a relative Uri.&quot;, relativeUri);\n\n            // Create a new Uri from an absolute Uri and a relative Uri.\n            Uri combinedUri = new Uri(absoluteUri, relativeUri);\n            Console.WriteLine(combinedUri.AbsoluteUri);\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriEnhancements#2\">        &#39; Create an absolute Uri from a string.\n        Dim absoluteUri As New Uri(&quot;http://www.contoso.com/&quot;)\n        \n        &#39; Create a relative Uri from a string.  allowRelative = true to allow for \n        &#39; creating a relative Uri.\n        Dim relativeUri As New Uri(&quot;/catalog/shownew.htm?date=today&quot;)\n        \n        &#39; Check whether the new Uri is absolute or relative.\n        If Not relativeUri.IsAbsoluteUri Then\n            Console.WriteLine(&quot;{0} is a relative Uri.&quot;, relativeUri)\n        End If \n        &#39; Create a new Uri from an absolute Uri and a relative Uri.\n        Dim combinedUri As New Uri(absoluteUri, relativeUri)\n        Console.WriteLine(combinedUri.AbsoluteUri)\n    \n    End Sub &#39;SampleConstructor\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri__ctor_System_Uri_System_String_System_Boolean_\">\r\n    \r\n            <a id=\"System_Uri__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Uri(Uri,String,Boolean)</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class based on the specified base and relative URIs, with explicit control of character escaping.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri (Uri baseUri, string relativeUri, bool dontEscape);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>baseUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The base URI.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>relativeUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The relative URI to add to the base URI.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>dontEscape</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p><code>true</code> if <code>uriString</code> is completely escaped; otherwise, <code>false</code>. See Remarks.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>baseUri</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>baseUri</code> is not an absolute <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <p>The URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is empty or contains only spaces.  </p>\n<p> -or-  </p>\n<p> The scheme specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The URI formed by combining <code>baseUri</code> and <code>relativeUri</code> contains too many slashes.  </p>\n<p> -or-  </p>\n<p> The password specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The host name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The file name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The user name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid.  </p>\n<p> -or-  </p>\n<p> The host or authority name specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> cannot be terminated by backslashes.  </p>\n<p> -or-  </p>\n<p> The port number specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> is not valid or cannot be parsed.  </p>\n<p> -or-  </p>\n<p> The length of the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> exceeds 65519 characters.  </p>\n<p> -or-  </p>\n<p> The length of the scheme specified in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code> exceeds 1023 characters.  </p>\n<p> -or-  </p>\n<p> There is an invalid character sequence in the URI formed by combining <code>baseUri</code> and <code>relativeUri</code>.  </p>\n<p> -or-  </p>\n<p> The MS-DOS path specified in <code>uriString</code> must start with c:\\\\.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance by combining <code>baseUri</code> and <code>relativeUri</code>. If the URI passed in <code>relativeUri</code> is an absolute URI (containing a scheme, host name, and optionally a port number), the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance is created using only <code>relativeUri</code>.  </p>\n<p> The <code>dontEscape</code> parameter controls whether reserved characters are translated into escape sequences. This parameter should be set to <code>true</code> only if you are certain that all reserved characters in the URI have been escaped. Setting the value to <code>true</code> for a URI that has not been completely escaped can cause unexpected behavior. It is strongly recommended that you always set this parameter to <code>false</code>. If <code>dontEscape</code> is set to <code>false</code>, the constructor escapes any reserved characters by checking that all occurrences of percent (%) are followed by a valid escape sequence. If the character sequence following a percent is not valid, the percent is replaced by %25.  </p>\n<p> This constructor does not ensure that the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> refers to an accessible resource.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new instance of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class by combining the relative URIs <a href=\"http://www.contoso.com\" data-linktype=\"external\">http://www.contoso.com</a> and Hello%20World.htm to form an absolute URI.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Uri.Uri4 Example#1\">   Uri^ baseUri = gcnew Uri( &quot;http://www.contoso.com/&quot; );\n   Uri^ myUri = gcnew Uri( baseUri,&quot;Hello%20World.htm&quot;,false );\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Uri.Uri4 Example#1\"> Dim baseUri As New Uri(&quot;http://www.contoso.com&quot;)\n Dim myUri As New Uri(baseUri, &quot;Hello%20World.htm&quot;, False)\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Uri.Uri4 Example#1\">    Uri baseUri = new Uri(&quot;http://www.contoso.com&quot;);\n    Uri myUri = new Uri(baseUri, &quot;Hello%20World.htm&quot;,false);\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"fields\">\r\n        <h2>Fields\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_SchemeDelimiter\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SchemeDelimiter</div>        \r\n          </div>\r\n    \r\n            <p>Specifies the characters that separate the communication protocol scheme from the address portion of the URI. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly string SchemeDelimiter;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a string from <a class=\"xref\" href=\"system.uri#System_Uri_UriSchemeHttp\" data-linktype=\"relative-path\">UriSchemeHttp</a>, SchemeDelimiter, and an address. A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance is then created from the string.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#17\">            string address = &quot;www.contoso.com&quot;;\n            string uriString = String.Format(&quot;{0}{1}{2}/&quot;, Uri.UriSchemeHttp, Uri.SchemeDelimiter, address); \n #if OLDMETHOD           \n            Uri result;\n            if (Uri.TryParse(uriString, false, false, out result) == true)\n                Console.WriteLine(&quot;{0} is a valid Uri&quot;, result.ToString());\n            else\n                Console.WriteLine(&quot;Uri not created&quot;);\n#endif\n            Uri result = new Uri(uriString);\n            if (result.IsWellFormedOriginalString())\n                Console.WriteLine(&quot;{0} is a well formed Uri&quot;, uriString);\n            else\n                Console.WriteLine(&quot;{0} is not a well formed Uri&quot;, uriString);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#17\">         String^ address = &quot;www.contoso.com&quot;;\n         String^ uriString = String::Format( &quot;{0}{1}{2}&quot;,\n            Uri::UriSchemeHttp, Uri::SchemeDelimiter, address );\n\n#if OLDMETHOD           \n         Uri^ result;\n         if ( Uri::TryParse( uriString, false, false, result ) == true )\n         {\n            Console::WriteLine( &quot;{0} is a valid Uri&quot;, result );\n         }\n         else\n         {\n            Console::WriteLine( &quot;Uri not created&quot; );\n         }\n#endif\n         Uri ^result = gcnew Uri(uriString);\n         if (result-&gt;IsWellFormedOriginalString())\n             Console::WriteLine(&quot;{0} is a well formed Uri&quot;, uriString);\n         else\n             Console::WriteLine(&quot;{0} is not a well formed Uri&quot;, uriString);\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#17\">        Dim address As String = &quot;www.contoso.com&quot;\n        Dim uriString As String = String.Format(&quot;{0}{1}{2}&quot;, Uri.UriSchemeHttp, Uri.SchemeDelimiter, address)\n        \n        Dim result As Uri = New Uri(uriString)\n\n        If result.IsWellFormedOriginalString() = True Then\n            Console.WriteLine(&quot;{0} is a well formed Uri&quot;, uriString)\n        else\n            Console.WriteLine(&quot;{0} is not a well formed Uri&quot;, uriString)\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_UriSchemeFile\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UriSchemeFile</div>        \r\n          </div>\r\n    \r\n            <p>Specifies that the URI is a pointer to a file. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly string UriSchemeFile;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In .NET Framework version 1.1, a &quot;<code>file:///path</code>&quot; URI was translated to &quot;<code>file:/path</code>&quot;. This has been corrected for version 2.0.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and determines whether the scheme is UriSchemeFile.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#10\">            Uri address2 =  new Uri(&quot;file://server/filename.ext&quot;);\n            if (address2.Scheme == Uri.UriSchemeFile) \n                Console.WriteLine(&quot;Uri is a file&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#10\">         Uri^ address2 = gcnew Uri( &quot;file://server/filename.ext&quot; );\n         if ( address2-&gt;Scheme == Uri::UriSchemeFile )\n         {\n            Console::WriteLine( &quot;Uri is a file&quot; );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#10\">        Dim address2 As New Uri(&quot;file://server/filename.ext&quot;)\n        If address2.Scheme = Uri.UriSchemeFile Then\n            Console.WriteLine(&quot;Uri is a file&quot;)\n        End If \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_UriSchemeFtp\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UriSchemeFtp</div>        \r\n          </div>\r\n    \r\n            <p>Specifies that the URI is accessed through the File Transfer Protocol (FTP). This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly string UriSchemeFtp;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and determines whether the scheme is UriSchemeFtp.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#15\">            Uri address7 = new Uri(&quot;ftp://contoso/files/testfile.txt&quot;);\n            if (address7.Scheme == Uri.UriSchemeFtp)\n                Console.WriteLine(&quot;Uri is Ftp protocol&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#15\">         Uri^ address7 = gcnew Uri( &quot;ftp://contoso/files/testfile.txt&quot; );\n         if ( address7-&gt;Scheme == Uri::UriSchemeFtp )\n         {\n            Console::WriteLine( &quot;Uri is Ftp protocol&quot; );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#15\">        Dim address7 As New Uri(&quot;ftp://contoso/files/testfile.txt&quot;)\n        If address7.Scheme = Uri.UriSchemeFtp Then\n            Console.WriteLine(&quot;Uri is Ftp protocol&quot;)\n        End If \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_UriSchemeGopher\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UriSchemeGopher</div>        \r\n          </div>\r\n    \r\n            <p>Specifies that the URI is accessed through the Gopher protocol. This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly string UriSchemeGopher;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and determines whether the scheme is UriSchemeGopher.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#14\">            Uri address6 = new Uri(&quot;gopher://example.contoso.com/&quot;);\n            if (address6.Scheme == Uri.UriSchemeGopher)\n                Console.WriteLine(&quot;Uri is Gopher protocol&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#14\">         Uri^ address6 = gcnew Uri( &quot;gopher://example.contoso.com/&quot; );\n         if ( address6-&gt;Scheme == Uri::UriSchemeGopher )\n         {\n            Console::WriteLine( &quot;Uri is Gopher protocol&quot; );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#14\">        Dim address6 As New Uri(&quot;gopher://example.contoso.com/&quot;)\n        If address6.Scheme = Uri.UriSchemeGopher Then\n            Console.WriteLine(&quot;Uri is Gopher protocol&quot;)\n        End If \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_UriSchemeHttp\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UriSchemeHttp</div>        \r\n          </div>\r\n    \r\n            <p>Specifies that the URI is accessed through the Hypertext Transfer Protocol (HTTP). This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly string UriSchemeHttp;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and determines whether the scheme is UriSchemeHttp.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#9\">            Uri address1 = new Uri(&quot;http://www.contoso.com/index.htm#search&quot;);\n            Console.WriteLine(&quot;address 1 {0} a valid scheme name&quot;,\n                  Uri.CheckSchemeName(address1.Scheme) ? &quot; has&quot; : &quot; does not have&quot;);\n\n            if (address1.Scheme == Uri.UriSchemeHttp)\n                Console.WriteLine(&quot;Uri is HTTP type&quot;);\n                  \n            Console.WriteLine(address1.HostNameType);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#9\">         Uri^ address1 = gcnew Uri( &quot;http://www.contoso.com/index.htm#search&quot; );\n         Console::WriteLine( &quot;address 1 {0} a valid scheme name&quot;,\n            Uri::CheckSchemeName( address1-&gt;Scheme ) ? (String^)&quot; has&quot; : &quot; does not have&quot; );\n         if ( address1-&gt;Scheme == Uri::UriSchemeHttp )\n         {\n            Console::WriteLine( &quot;Uri is HTTP type&quot; );\n         }\n\n         Console::WriteLine( address1-&gt;HostNameType );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#9\">        Dim address1 As New Uri(&quot;http://www.contoso.com/index.htm#search&quot;)\n        Console.WriteLine(&quot;address 1 {0} a valid scheme name&quot;, IIf(Uri.CheckSchemeName(address1.Scheme), &quot; has&quot;, &quot; does not have&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n        \n        If address1.Scheme = Uri.UriSchemeHttp Then\n            Console.WriteLine(&quot;Uri is HTTP type&quot;)\n        End If \n        Console.WriteLine(address1.HostNameType)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_UriSchemeHttps\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UriSchemeHttps</div>        \r\n          </div>\r\n    \r\n            <p>Specifies that the URI is accessed through the Secure Hypertext Transfer Protocol (HTTPS). This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly string UriSchemeHttps;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and determines whether the scheme is UriSchemeHttps.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#16\">            Uri address8 = new Uri(&quot;https://example.contoso.com&quot;);\n            if (address8.Scheme == Uri.UriSchemeHttps)\n                Console.WriteLine(&quot;Uri is Https protocol.&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#16\">         Uri^ address8 = gcnew Uri( &quot;https://example.contoso.com&quot; );\n         if ( address8-&gt;Scheme == Uri::UriSchemeHttps )\n         {\n            Console::WriteLine( &quot;Uri is Https protocol.&quot; );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#16\">        Dim address8 As New Uri(&quot;https://example.contoso.com&quot;)\n        If address8.Scheme = Uri.UriSchemeHttps Then\n            Console.WriteLine(&quot;Uri is Https protocol.&quot;)\n        End If \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_UriSchemeMailto\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UriSchemeMailto</div>        \r\n          </div>\r\n    \r\n            <p>Specifies that the URI is an e-mail address and is accessed through the Simple Mail Transport Protocol (SMTP). This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly string UriSchemeMailto;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and determines whether the scheme is UriSchemeMailto.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#11\">            Uri address3 = new Uri(&quot;mailto:user@contoso.com?subject=uri&quot;);\n            if (address3.Scheme == Uri.UriSchemeMailto) \n                Console.WriteLine(&quot;Uri is an email address&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#11\">         Uri^ address3 = gcnew Uri( &quot;mailto:user@contoso.com?subject=uri&quot; );\n         if ( address3-&gt;Scheme == Uri::UriSchemeMailto )\n         {\n            Console::WriteLine( &quot;Uri is an email address&quot; );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#11\">        Dim address3 As New Uri(&quot;mailto:user@contoso.com?subject=uri&quot;)\n        If address3.Scheme = Uri.UriSchemeMailto Then\n            Console.WriteLine(&quot;Uri is an email address&quot;)\n        End If \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_UriSchemeNetPipe\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UriSchemeNetPipe</div>        \r\n          </div>\r\n    \r\n            <p>Specifies that the URI is accessed through the NetPipe scheme used by Windows Communication Foundation (WCF). This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly string UriSchemeNetPipe;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_UriSchemeNetTcp\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UriSchemeNetTcp</div>        \r\n          </div>\r\n    \r\n            <p>Specifies that the URI is accessed through the NetTcp scheme used by Windows Communication Foundation (WCF). This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly string UriSchemeNetTcp;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_UriSchemeNews\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UriSchemeNews</div>        \r\n          </div>\r\n    \r\n            <p>Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP). This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly string UriSchemeNews;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and determines whether the scheme is UriSchemeNews.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#12\">            Uri address4 = new Uri(&quot;news:123456@contoso.com&quot;);\n            if (address4.Scheme == Uri.UriSchemeNews)\n                Console.WriteLine(&quot;Uri is an Internet news group&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#12\">         Uri^ address4 = gcnew Uri( &quot;news:123456@contoso.com&quot; );\n         if ( address4-&gt;Scheme == Uri::UriSchemeNews )\n         {\n            Console::WriteLine( &quot;Uri is an Internet news group&quot; );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#12\">        Dim address4 As New Uri(&quot;news:123456@contoso.com&quot;)\n        If address4.Scheme = Uri.UriSchemeNews Then\n            Console.WriteLine(&quot;Uri is an Internet news group&quot;)\n        End If \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_UriSchemeNntp\">\r\n    \r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UriSchemeNntp</div>        \r\n          </div>\r\n    \r\n            <p>Specifies that the URI is an Internet news group and is accessed through the Network News Transport Protocol (NNTP). This field is read-only.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static readonly string UriSchemeNntp;</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The NNTP <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> parsing errors in .NET Framework version 1.1 have been corrected.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and determines whether the scheme is UriSchemeNntp.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#13\">            Uri address5 = new Uri(&quot;nntp://news.contoso.com/123456@contoso.com&quot;);\n            if (address5.Scheme == Uri.UriSchemeNntp)\n                Console.WriteLine(&quot;Uri is nntp protocol&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#13\">         Uri^ address5 = gcnew Uri( &quot;nntp://news.contoso.com/123456@contoso.com&quot; );\n         if ( address5-&gt;Scheme == Uri::UriSchemeNntp )\n         {\n            Console::WriteLine( &quot;Uri is nntp protocol&quot; );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#13\">        Dim address5 As New Uri(&quot;nntp://news.contoso.com/123456@contoso.com&quot;)\n        If address5.Scheme = Uri.UriSchemeNntp Then\n            Console.WriteLine(&quot;Uri is nntp protocol&quot;)\n        End If \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_AbsolutePath\">\r\n    \r\n            <a id=\"System_Uri_AbsolutePath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AbsolutePath</div>        \r\n          </div>\r\n    \r\n            <p>Gets the absolute path of the URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string AbsolutePath { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the absolute path to the resource.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The AbsolutePath property contains the path information that the server uses to resolve requests for information. Typically this is the path to the desired information on the server&#39;s file system, although it also can indicate the application or script the server must run to provide the information.  </p>\n<p> The path information does not include the scheme, host name, or query portion of the URI.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes the path /catalog/shownew.htm to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Uri.AbsolutePath Example#1\">Uri baseUri = new Uri(&quot;http://www.contoso.com/&quot;);\n Uri myUri = new Uri(baseUri, &quot;catalog/shownew.htm?date=today&quot;);\n \n Console.WriteLine(myUri.AbsolutePath);\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Uri.AbsolutePath Example#1\"> Dim baseUri As New Uri(&quot;http://www.contoso.com/&quot;)\n Dim myUri As New Uri(baseUri, &quot;catalog/shownew.htm?date=today&quot;)\n        \n Console.WriteLine(myUri.AbsolutePath)\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Uri.AbsolutePath Example#1\">      Uri^ baseUri = gcnew Uri( &quot;http://www.contoso.com/&quot; );\n      Uri^ myUri = gcnew Uri( baseUri,&quot;catalog/shownew.htm?date=today&quot; );\n      Console::WriteLine( myUri-&gt;AbsolutePath );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_AbsoluteUri\">\r\n    \r\n            <a id=\"System_Uri_AbsoluteUri_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AbsoluteUri</div>        \r\n          </div>\r\n    \r\n            <p>Gets the absolute URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string AbsoluteUri { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the entire URI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The AbsoluteUri property includes the entire URI stored in the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance, including all fragments and query strings.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes the complete contents of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance to the console. In the example shown, <a href=\"http://www.contoso.com/catalog/shownew.htm?date=today\" data-linktype=\"external\">http://www.contoso.com/catalog/shownew.htm?date=today</a> is written to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Uri.AbsoluteUri Example#1\">Uri baseUri= new Uri(&quot;http://www.contoso.com&quot;);\n Uri myUri = new Uri(baseUri,&quot;catalog/shownew.htm?date=today&quot;);\n Console.WriteLine(myUri.AbsoluteUri);\n   \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Uri.AbsoluteUri Example#1\">   Uri^ baseUri = gcnew Uri( &quot;http://www.contoso.com&quot; );\n   Uri^ myUri = gcnew Uri( baseUri,&quot;catalog/shownew.htm?date=today&quot; );\n   Console::WriteLine( myUri-&gt;AbsoluteUri );\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Uri.AbsoluteUri Example#1\"> Dim baseUri As New Uri(&quot;http://www.contoso.com&quot;)\n Dim myUri As New Uri(baseUri, &quot;catalog/shownew.htm?date=today&quot;)\n Console.WriteLine(myUri.AbsoluteUri)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_Authority\">\r\n    \r\n            <a id=\"System_Uri_Authority_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Authority</div>        \r\n          </div>\r\n    \r\n            <p>Gets the Domain Name System (DNS) host name or IP address and the port number for a server.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Authority { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the authority component of the URI represented by this instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Authority property is typically a server DNS host name or IP address. This property might include the service port number if it differs from the default port for the URI. If the Authority component contains reserved characters, these are escaped in the string value returned by this property.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes the host name (www.contoso.com) and port number (8080) of the server to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Uri.Authority Example#1\">   Uri^ baseUri = gcnew Uri( &quot;http://www.contoso.com:8080/&quot; );\n   Uri^ myUri = gcnew Uri( baseUri,&quot;shownew.htm?date=today&quot; );\n   Console::WriteLine( myUri-&gt;Authority );\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Uri.Authority Example#1\"> Dim baseUri As New Uri(&quot;http://www.contoso.com:8080/&quot;)\n Dim myUri As New Uri(baseUri,&quot;shownew.htm?date=today&quot;)\n        \n Console.WriteLine(myUri.Authority)\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Uri.Authority Example#1\"> Uri baseUri = new Uri(&quot;http://www.contoso.com:8080/&quot;);\n Uri myUri = new Uri(baseUri,&quot;shownew.htm?date=today&quot;);\n \n Console.WriteLine(myUri.Authority);\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_DnsSafeHost\">\r\n    \r\n            <a id=\"System_Uri_DnsSafeHost_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">DnsSafeHost</div>        \r\n          </div>\r\n    \r\n            <p>Gets an unescaped host name that is safe to use for DNS resolution.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string DnsSafeHost { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the unescaped host part of the URI that is suitable for DNS resolution; or the original unescaped host string, if it is already suitable for resolution.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>For IPv6 addresses, the brackets ([]) are removed and the <a class=\"xref\" href=\"system.net.ipaddress#System_Net_IPAddress_ScopeId_\" data-linktype=\"relative-path\">ScopeId</a> property is set, if one was specified when this instance was constructed.  </p>\n<p> The DnsSafeHost property is dependent on configuration settings, as discussed later in this topic. Configuration settings cannot be changed by Windows Store applications, which can lead to inconsistent results when using DnsSafeHost. The <a class=\"xref\" href=\"system.uri#System_Uri_IdnHost_\" data-linktype=\"relative-path\">IdnHost</a>property is provided as the preferred alternative to using DnsSafeHost, because <a class=\"xref\" href=\"system.uri#System_Uri_IdnHost_\" data-linktype=\"relative-path\">IdnHost</a> is guaranteed to always be DNS safe, no matter what the current app.config settings might be.  </p>\n<p> The DnsSafeHost property has been extended in .NET Framework v3.5, 3.0 SP1, and 2.0 SP1 to provide International Resource Identifier (IRI) support based on RFC 3987. Current users will not see any change from the .NET Framework 2.0 behavior unless they specifically enable IRI. This ensures application compatibility with prior versions of the .NET Framework.  </p>\n<p> To enable support for IRI, the following two changes are required:  </p>\n<ol>\n<li><p>Add the following line to the machine.config file under the .NET Framework 2.0 directory  </p>\n<p> &lt;section name=&quot;uri&quot; type=&quot;System.Configuration.UriSection, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot; /&gt;  </p>\n</li>\n<li><p>Specify whether you want Internationalized Domain Name (IDN) parsing applied to the domain name and whether IRI parsing rules should be applied. This can be done in the machine.config or in the app.config file. For example, add the following:  </p>\n<pre><code>&lt;configuration&gt;  \n  &lt;uri&gt;  \n  &lt;idn enabled=&quot;All&quot; /&gt;  \n  &lt;iriParsing enabled=&quot;true&quot; /&gt;  \n  &lt;/uri&gt;  \n&lt;/configuration&gt;  \n</code></pre><p>Enabling IDN will convert all Unicode labels in a domain name to their Punycode equivalents. Punycode names contain only ASCII characters and always start with the xn-- prefix. The reason for this is to support existing DNS servers on the Internet, since most DNS servers only support ASCII characters (see RFC 3940).  </p>\n<p>Enabling IDN only affects the value of the DnsSafeHost property.  </p>\n<p>There are three possible values for IDN depending on the DNS servers that are used:  </p>\n</li>\n</ol>\n<ul>\n<li><p>idn enabled = All  </p>\n<p> This value will convert any Unicode domain names to their Punycode equivalents (IDN names).  </p>\n</li>\n<li><p>idn enabled = AllExceptIntranet  </p>\n<p> This value will convert all external Unicode domain names to use the Punycode equivalents (IDN names). In this case to handle international names on the local Intranet, the DNS servers that are used for the Intranet should support Unicode names.  </p>\n</li>\n<li><p>idn enabled = None  </p>\n<p> This value will not convert any Unicode domain names to use Punycode. This is the default value which is consistent with the .NET Framework 2.0 behaviour.  </p>\n<p>Enabling IRI parsing (iriParsing enabled = <code>true</code>) will do normalization and character checking according to the latest IRI rules in RFC 3987. The default value is <code>false</code> and will do normalization and character checking according to RFC 2396 and RFC 2732 (for IPv6 literals).  </p>\n<p>For more information on IRI support, see the Remarks section for the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class.</p>\n</li>\n</ul>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance from a string. It illustrates the difference between the value returned from <a class=\"xref\" href=\"system.uri#System_Uri_Host_\" data-linktype=\"relative-path\">Host</a>, which returns the host name or address specified in the URI, and the value returned from DnsSafeHost, which returns an address that is safe to use in DNS resolution.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLUriEnhancements#4\">   // Create new Uri using a string address.         \n   Uri^ address = gcnew Uri( &quot;http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm&quot; );\n\n   // Make the address DNS safe. \n   // The following outputs &quot;[fe80::200:39ff:fe36:1a2d]&quot;.\n   Console::WriteLine( address-&gt;Host );\n\n   // The following outputs &quot;fe80::200:39ff:fe36:1a2d%4&quot;.\n   Console::WriteLine( address-&gt;DnsSafeHost );\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLUriEnhancements#4\">            // Create new Uri using a string address.         \n            Uri address = new Uri(&quot;http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm&quot;);\n\n            // Make the address DNS safe. \n\n            // The following outputs &quot;[fe80::200:39ff:fe36:1a2d]&quot;.\n            Console.WriteLine(address.Host);\n\n            // The following outputs &quot;fe80::200:39ff:fe36:1a2d%4&quot;.\n            Console.WriteLine(address.DnsSafeHost);\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriEnhancements#4\">        &#39; Create new Uri using a string address.         \n        Dim address As New Uri(&quot;http://[fe80::200:39ff:fe36:1a2d%4]/temp/example.htm&quot;)\n        \n        &#39; Make the address DNS safe. \n        &#39; The following outputs &quot;[fe80::200:39ff:fe36:1a2d]&quot;.\n        Console.WriteLine(address.Host)\n        \n        &#39; The following outputs &quot;fe80::200:39ff:fe36:1a2d%4&quot;.\n        Console.WriteLine(address.DnsSafeHost)\n    \n    End Sub &#39;SampleDNSSafeHost\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_Fragment\">\r\n    \r\n            <a id=\"System_Uri_Fragment_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Fragment</div>        \r\n          </div>\r\n    \r\n            <p>Gets the escaped URI fragment.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Fragment { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains any URI fragment information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Fragment property gets any text following a fragment marker (#) in the URI, including the fragment marker itself. Given the URI <a href=\"http://www.contoso.com/index.htm#main\" data-linktype=\"external\">http://www.contoso.com/index.htm#main</a>, the Fragment property would return #main.  </p>\n<p> The Fragment property is not considered in any <a class=\"xref\" href=\"system.uri#System_Uri_Equals_\" data-linktype=\"relative-path\">Equals</a> comparison.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and writes the fragment information to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#4\">            // Create Uri\n            Uri uriAddress = new Uri(&quot;http://www.contoso.com/index.htm#search&quot;);\n            Console.WriteLine(uriAddress.Fragment);\n            Console.WriteLine(&quot;Uri {0} the default port &quot;, uriAddress.IsDefaultPort ? &quot;uses&quot; : &quot;does not use&quot;);\n             \n            Console.WriteLine(&quot;The path of this Uri is {0}&quot;, uriAddress.GetLeftPart(UriPartial.Path));\n            Console.WriteLine(&quot;Hash code {0}&quot;, uriAddress.GetHashCode());\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#4\">         // Create Uri\n         Uri^ uriAddress = gcnew Uri( &quot;http://www.contoso.com/index.htm#search&quot; );\n         Console::WriteLine( uriAddress-&gt;Fragment );\n         Console::WriteLine( &quot;Uri {0} the default port &quot;, uriAddress-&gt;IsDefaultPort ? (String^)&quot;uses&quot; : &quot;does not use&quot; );\n\n         Console::WriteLine( &quot;The path of this Uri is {0}&quot;, uriAddress-&gt;GetLeftPart( UriPartial::Path ) );\n         Console::WriteLine( &quot;Hash code {0}&quot;, uriAddress-&gt;GetHashCode() );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#4\">        &#39; Create Uri\n        Dim uriAddress As New Uri(&quot;http://www.contoso.com/index.htm#search&quot;)\n        Console.WriteLine(uriAddress.Fragment)\n        Console.WriteLine(&quot;Uri {0} the default port &quot;, IIf(uriAddress.IsDefaultPort, &quot;uses&quot;, &quot;does not use&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n        \n        Console.WriteLine(&quot;The path of this Uri is {0}&quot;, uriAddress.GetLeftPart(UriPartial.Path))\n        Console.WriteLine(&quot;Hash code {0}&quot;, uriAddress.GetHashCode())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_Host\">\r\n    \r\n            <a id=\"System_Uri_Host_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Host</div>        \r\n          </div>\r\n    \r\n            <p>Gets the host component of this instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Host { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the host name. This is usually the DNS host name or IP address of the server.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Unlike the <a class=\"xref\" href=\"system.uri#System_Uri_Authority_\" data-linktype=\"relative-path\">Authority</a> property, this property value does not include the port number.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes the host name (www.contoso.com) of the server to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Uri.Host Example#1\">   Uri^ baseUri = gcnew Uri( &quot;http://www.contoso.com:8080/&quot; );\n   Uri^ myUri = gcnew Uri( baseUri,&quot;shownew.htm?date=today&quot; );\n   Console::WriteLine( myUri-&gt;Host );\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Uri.Host Example#1\"> Dim baseUri As New Uri(&quot;http://www.contoso.com:8080/&quot;)\n Dim myUri As New Uri(baseUri,&quot;shownew.htm?date=today&quot;)\n        \n Console.WriteLine(myUri.Host)\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Uri.Host Example#1\">Uri baseUri = new Uri(&quot;http://www.contoso.com:8080/&quot;);\nUri myUri = new Uri(baseUri, &quot;shownew.htm?date=today&quot;);\n \n Console.WriteLine(myUri.Host);\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_HostNameType\">\r\n    \r\n            <a id=\"System_Uri_HostNameType_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HostNameType</div>        \r\n          </div>\r\n    \r\n            <p>Gets the type of the host name specified in the URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public UriHostNameType HostNameType { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.urihostnametype\" data-linktype=\"relative-path\">UriHostNameType</a></div>\r\n                  </div>\r\n                  <p>A member of the <a class=\"xref\" href=\"system.urihostnametype\" data-linktype=\"relative-path\">UriHostNameType</a> enumeration.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and writes the HostNameType to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#9\">            Uri address1 = new Uri(&quot;http://www.contoso.com/index.htm#search&quot;);\n            Console.WriteLine(&quot;address 1 {0} a valid scheme name&quot;,\n                  Uri.CheckSchemeName(address1.Scheme) ? &quot; has&quot; : &quot; does not have&quot;);\n\n            if (address1.Scheme == Uri.UriSchemeHttp)\n                Console.WriteLine(&quot;Uri is HTTP type&quot;);\n                  \n            Console.WriteLine(address1.HostNameType);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#9\">         Uri^ address1 = gcnew Uri( &quot;http://www.contoso.com/index.htm#search&quot; );\n         Console::WriteLine( &quot;address 1 {0} a valid scheme name&quot;,\n            Uri::CheckSchemeName( address1-&gt;Scheme ) ? (String^)&quot; has&quot; : &quot; does not have&quot; );\n         if ( address1-&gt;Scheme == Uri::UriSchemeHttp )\n         {\n            Console::WriteLine( &quot;Uri is HTTP type&quot; );\n         }\n\n         Console::WriteLine( address1-&gt;HostNameType );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#9\">        Dim address1 As New Uri(&quot;http://www.contoso.com/index.htm#search&quot;)\n        Console.WriteLine(&quot;address 1 {0} a valid scheme name&quot;, IIf(Uri.CheckSchemeName(address1.Scheme), &quot; has&quot;, &quot; does not have&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n        \n        If address1.Scheme = Uri.UriSchemeHttp Then\n            Console.WriteLine(&quot;Uri is HTTP type&quot;)\n        End If \n        Console.WriteLine(address1.HostNameType)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_IdnHost\">\r\n    \r\n            <a id=\"System_Uri_IdnHost_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IdnHost</div>        \r\n          </div>\r\n    \r\n            <p>The RFC 3490 compliant International Domain Name of the host, using Punycode as appropriate.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string IdnHost { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>Returns the hostname, formatted with Punycode according to the IDN standard.<a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is provided for the use of lower-level networking protocols that require the domain name in Punycode form. If your code does not require that specific format, use <a class=\"xref\" href=\"system.uri#System_Uri_Host_\" data-linktype=\"relative-path\">Host</a> for the hostname.  </p>\n<p> The deprecated <a class=\"xref\" href=\"system.uri#System_Uri_DnsSafeHost_\" data-linktype=\"relative-path\">DnsSafeHost</a> property is dependent on app.config settings, which cannot be changed by Windows Store applications. This property is provided as the preferred alternative to using <a class=\"xref\" href=\"system.uri#System_Uri_DnsSafeHost_\" data-linktype=\"relative-path\">DnsSafeHost</a>, because IdnHost is guaranteed to always be DNS safe, no matter what the current app.config settings might be.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_IsAbsoluteUri\">\r\n    \r\n            <a id=\"System_Uri_IsAbsoluteUri_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsAbsoluteUri</div>        \r\n          </div>\r\n    \r\n            <p>Gets whether the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance is absolute.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsAbsoluteUri { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance is absolute; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This property is <code>true</code> if the string or <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance that was passed into the constructor can be parsed as an absolute <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance, which contains a scheme, an authority, and a path. Otherwise, the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance is treated as relative and might omit the scheme or other URI components.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_IsDefaultPort\">\r\n    \r\n            <a id=\"System_Uri_IsDefaultPort_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsDefaultPort</div>        \r\n          </div>\r\n    \r\n            <p>Gets whether the port value of the URI is the default for this scheme.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsDefaultPort { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the value in the <span class=\"xref\">stem.Uri.Port*</span> property is the default port for this scheme; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and checks whether it uses the default port.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#4\">            // Create Uri\n            Uri uriAddress = new Uri(&quot;http://www.contoso.com/index.htm#search&quot;);\n            Console.WriteLine(uriAddress.Fragment);\n            Console.WriteLine(&quot;Uri {0} the default port &quot;, uriAddress.IsDefaultPort ? &quot;uses&quot; : &quot;does not use&quot;);\n             \n            Console.WriteLine(&quot;The path of this Uri is {0}&quot;, uriAddress.GetLeftPart(UriPartial.Path));\n            Console.WriteLine(&quot;Hash code {0}&quot;, uriAddress.GetHashCode());\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#4\">         // Create Uri\n         Uri^ uriAddress = gcnew Uri( &quot;http://www.contoso.com/index.htm#search&quot; );\n         Console::WriteLine( uriAddress-&gt;Fragment );\n         Console::WriteLine( &quot;Uri {0} the default port &quot;, uriAddress-&gt;IsDefaultPort ? (String^)&quot;uses&quot; : &quot;does not use&quot; );\n\n         Console::WriteLine( &quot;The path of this Uri is {0}&quot;, uriAddress-&gt;GetLeftPart( UriPartial::Path ) );\n         Console::WriteLine( &quot;Hash code {0}&quot;, uriAddress-&gt;GetHashCode() );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#4\">        &#39; Create Uri\n        Dim uriAddress As New Uri(&quot;http://www.contoso.com/index.htm#search&quot;)\n        Console.WriteLine(uriAddress.Fragment)\n        Console.WriteLine(&quot;Uri {0} the default port &quot;, IIf(uriAddress.IsDefaultPort, &quot;uses&quot;, &quot;does not use&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n        \n        Console.WriteLine(&quot;The path of this Uri is {0}&quot;, uriAddress.GetLeftPart(UriPartial.Path))\n        Console.WriteLine(&quot;Hash code {0}&quot;, uriAddress.GetHashCode())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_IsFile\">\r\n    \r\n            <a id=\"System_Uri_IsFile_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsFile</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the specified <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> is a file URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsFile { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> is a file URI; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsFile property is <code>true</code> when the <a class=\"xref\" href=\"system.uri#System_Uri_Scheme_\" data-linktype=\"relative-path\">Scheme</a> property equals <a class=\"xref\" href=\"system.uri#System_Uri_UriSchemeFile\" data-linktype=\"relative-path\">UriSchemeFile</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and determines whether it is a file URI.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#6\">            Uri uriAddress2 =  new Uri(&quot;file://server/filename.ext&quot;);\n            Console.WriteLine(uriAddress2.LocalPath);\n            Console.WriteLine(&quot;Uri {0} a UNC path&quot;, uriAddress2.IsUnc ? &quot;is&quot; : &quot;is not&quot;);\n            Console.WriteLine(&quot;Uri {0} a local host&quot;, uriAddress2.IsLoopback ? &quot;is&quot; : &quot;is not&quot;);\n            Console.WriteLine(&quot;Uri {0} a file&quot;, uriAddress2.IsFile ? &quot;is&quot; : &quot;is not&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#6\">         Uri^ uriAddress2 = gcnew Uri( &quot;file://server/filename.ext&quot; );\n         Console::WriteLine( uriAddress2-&gt;LocalPath );\n         Console::WriteLine( &quot;Uri {0} a UNC path&quot;, uriAddress2-&gt;IsUnc ? (String^)&quot;is&quot; : &quot;is not&quot; );\n         Console::WriteLine( &quot;Uri {0} a local host&quot;, uriAddress2-&gt;IsLoopback ? (String^)&quot;is&quot; : &quot;is not&quot; );\n         Console::WriteLine( &quot;Uri {0} a file&quot;, uriAddress2-&gt;IsFile ? (String^)&quot;is&quot; : &quot;is not&quot; );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#6\">        Dim uriAddress2 As New Uri(&quot;file://server/filename.ext&quot;)\n        Console.WriteLine(uriAddress2.LocalPath)\n        Console.WriteLine(&quot;Uri {0} a UNC path&quot;, IIf(uriAddress2.IsUnc, &quot;is&quot;, &quot;is not&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n        Console.WriteLine(&quot;Uri {0} a local host&quot;, IIf(uriAddress2.IsLoopback, &quot;is&quot;, &quot;is not&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n        Console.WriteLine(&quot;Uri {0} a file&quot;, IIf(uriAddress2.IsFile, &quot;is&quot;, &quot;is not&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n    \n    End Sub &#39;GetParts\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_IsLoopback\">\r\n    \r\n            <a id=\"System_Uri_IsLoopback_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsLoopback</div>        \r\n          </div>\r\n    \r\n            <p>Gets whether the specified <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> references the local host.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsLoopback { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if this <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> references the local host; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>IsLoopback returns <code>true</code> if the URI specified when this instance was created was 127.0.0.1, loopback, or localhost, or if the URI did not specify host information (for example, file:///c:Dir/file.txt). All other URIs return <code>false</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and determines whether it references a local host.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#6\">            Uri uriAddress2 =  new Uri(&quot;file://server/filename.ext&quot;);\n            Console.WriteLine(uriAddress2.LocalPath);\n            Console.WriteLine(&quot;Uri {0} a UNC path&quot;, uriAddress2.IsUnc ? &quot;is&quot; : &quot;is not&quot;);\n            Console.WriteLine(&quot;Uri {0} a local host&quot;, uriAddress2.IsLoopback ? &quot;is&quot; : &quot;is not&quot;);\n            Console.WriteLine(&quot;Uri {0} a file&quot;, uriAddress2.IsFile ? &quot;is&quot; : &quot;is not&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#6\">         Uri^ uriAddress2 = gcnew Uri( &quot;file://server/filename.ext&quot; );\n         Console::WriteLine( uriAddress2-&gt;LocalPath );\n         Console::WriteLine( &quot;Uri {0} a UNC path&quot;, uriAddress2-&gt;IsUnc ? (String^)&quot;is&quot; : &quot;is not&quot; );\n         Console::WriteLine( &quot;Uri {0} a local host&quot;, uriAddress2-&gt;IsLoopback ? (String^)&quot;is&quot; : &quot;is not&quot; );\n         Console::WriteLine( &quot;Uri {0} a file&quot;, uriAddress2-&gt;IsFile ? (String^)&quot;is&quot; : &quot;is not&quot; );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#6\">        Dim uriAddress2 As New Uri(&quot;file://server/filename.ext&quot;)\n        Console.WriteLine(uriAddress2.LocalPath)\n        Console.WriteLine(&quot;Uri {0} a UNC path&quot;, IIf(uriAddress2.IsUnc, &quot;is&quot;, &quot;is not&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n        Console.WriteLine(&quot;Uri {0} a local host&quot;, IIf(uriAddress2.IsLoopback, &quot;is&quot;, &quot;is not&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n        Console.WriteLine(&quot;Uri {0} a file&quot;, IIf(uriAddress2.IsFile, &quot;is&quot;, &quot;is not&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n    \n    End Sub &#39;GetParts\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_IsUnc\">\r\n    \r\n            <a id=\"System_Uri_IsUnc_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsUnc</div>        \r\n          </div>\r\n    \r\n            <p>Gets whether the specified <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> is a universal naming convention (UNC) path.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsUnc { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> is a UNC path; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsUnc property is <code>true</code> if the specified <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance is a UNC path (such as \\\\server\\folder or file://server/folder). This property always returns <code>true</code> if the URI has the file:// scheme and specifies a host component.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and determines whether it is a UNC path.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#6\">            Uri uriAddress2 =  new Uri(&quot;file://server/filename.ext&quot;);\n            Console.WriteLine(uriAddress2.LocalPath);\n            Console.WriteLine(&quot;Uri {0} a UNC path&quot;, uriAddress2.IsUnc ? &quot;is&quot; : &quot;is not&quot;);\n            Console.WriteLine(&quot;Uri {0} a local host&quot;, uriAddress2.IsLoopback ? &quot;is&quot; : &quot;is not&quot;);\n            Console.WriteLine(&quot;Uri {0} a file&quot;, uriAddress2.IsFile ? &quot;is&quot; : &quot;is not&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#6\">         Uri^ uriAddress2 = gcnew Uri( &quot;file://server/filename.ext&quot; );\n         Console::WriteLine( uriAddress2-&gt;LocalPath );\n         Console::WriteLine( &quot;Uri {0} a UNC path&quot;, uriAddress2-&gt;IsUnc ? (String^)&quot;is&quot; : &quot;is not&quot; );\n         Console::WriteLine( &quot;Uri {0} a local host&quot;, uriAddress2-&gt;IsLoopback ? (String^)&quot;is&quot; : &quot;is not&quot; );\n         Console::WriteLine( &quot;Uri {0} a file&quot;, uriAddress2-&gt;IsFile ? (String^)&quot;is&quot; : &quot;is not&quot; );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#6\">        Dim uriAddress2 As New Uri(&quot;file://server/filename.ext&quot;)\n        Console.WriteLine(uriAddress2.LocalPath)\n        Console.WriteLine(&quot;Uri {0} a UNC path&quot;, IIf(uriAddress2.IsUnc, &quot;is&quot;, &quot;is not&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n        Console.WriteLine(&quot;Uri {0} a local host&quot;, IIf(uriAddress2.IsLoopback, &quot;is&quot;, &quot;is not&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n        Console.WriteLine(&quot;Uri {0} a file&quot;, IIf(uriAddress2.IsFile, &quot;is&quot;, &quot;is not&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n    \n    End Sub &#39;GetParts\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_LocalPath\">\r\n    \r\n            <a id=\"System_Uri_LocalPath_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">LocalPath</div>        \r\n          </div>\r\n    \r\n            <p>Gets a local operating-system representation of a file name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string LocalPath { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the local operating-system representation of a file name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value returned by this property is unescaped. If the path is recognized as a Windows file path, all forward slashes (/) are replaced by backward slashes (\\).  </p>\n<p> For the URI <code>file://computer/file.ext</code>, the absolute path is <code>/file.ext</code> and the local path is <code>\\\\computer\\file.ext</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and writes the local path to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#6\">            Uri uriAddress2 =  new Uri(&quot;file://server/filename.ext&quot;);\n            Console.WriteLine(uriAddress2.LocalPath);\n            Console.WriteLine(&quot;Uri {0} a UNC path&quot;, uriAddress2.IsUnc ? &quot;is&quot; : &quot;is not&quot;);\n            Console.WriteLine(&quot;Uri {0} a local host&quot;, uriAddress2.IsLoopback ? &quot;is&quot; : &quot;is not&quot;);\n            Console.WriteLine(&quot;Uri {0} a file&quot;, uriAddress2.IsFile ? &quot;is&quot; : &quot;is not&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#6\">         Uri^ uriAddress2 = gcnew Uri( &quot;file://server/filename.ext&quot; );\n         Console::WriteLine( uriAddress2-&gt;LocalPath );\n         Console::WriteLine( &quot;Uri {0} a UNC path&quot;, uriAddress2-&gt;IsUnc ? (String^)&quot;is&quot; : &quot;is not&quot; );\n         Console::WriteLine( &quot;Uri {0} a local host&quot;, uriAddress2-&gt;IsLoopback ? (String^)&quot;is&quot; : &quot;is not&quot; );\n         Console::WriteLine( &quot;Uri {0} a file&quot;, uriAddress2-&gt;IsFile ? (String^)&quot;is&quot; : &quot;is not&quot; );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#6\">        Dim uriAddress2 As New Uri(&quot;file://server/filename.ext&quot;)\n        Console.WriteLine(uriAddress2.LocalPath)\n        Console.WriteLine(&quot;Uri {0} a UNC path&quot;, IIf(uriAddress2.IsUnc, &quot;is&quot;, &quot;is not&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n        Console.WriteLine(&quot;Uri {0} a local host&quot;, IIf(uriAddress2.IsLoopback, &quot;is&quot;, &quot;is not&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n        Console.WriteLine(&quot;Uri {0} a file&quot;, IIf(uriAddress2.IsFile, &quot;is&quot;, &quot;is not&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n    \n    End Sub &#39;GetParts\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_OriginalString\">\r\n    \r\n            <a id=\"System_Uri_OriginalString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OriginalString</div>        \r\n          </div>\r\n    \r\n            <p>Gets the original URI string that was passed to the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> constructor.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string OriginalString { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> containing the exact URI specified when this instance was constructed; otherwise, <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If the URI specified to the constructor contained leading or trailing spaces, these spaces are preserved.  </p>\n<p> The value returned by this property differs from <a class=\"xref\" href=\"system.uri#System_Uri_ToString_\" data-linktype=\"relative-path\">ToString</a> and <a class=\"xref\" href=\"system.uri#System_Uri_AbsoluteUri_\" data-linktype=\"relative-path\">AbsoluteUri</a>. <a class=\"xref\" href=\"system.uri#System_Uri_ToString_\" data-linktype=\"relative-path\">ToString</a> returns the canonically unescaped form of the URI. <a class=\"xref\" href=\"system.uri#System_Uri_AbsoluteUri_\" data-linktype=\"relative-path\">AbsoluteUri</a> returns the canonically escaped form of the URI.  </p>\n<p> When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, OriginalString returns the original non normalized string with Punycode host name if one was used to initialize the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance. Punycode names contain only ASCII characters and always start with the xn-- prefix.  </p>\n<p> For more information on IRI support, see the Remarks section for the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class.  </p>\n<p> When a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> object is serialized, the OriginalString is not preserved. The serialization process uses the fully escaped and canonicalized <a class=\"xref\" href=\"system.uri#System_Uri_AbsoluteUri_\" data-linktype=\"relative-path\">AbsoluteUri</a> property when serializing. For a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> that contains an IPv6 address, the IPv6 address and the scope ID are included in the serialized <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> object.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance from a string. It illustrates the difference between the value returned from OriginalString, which returns the string that was passed to the constructor, and from a call to <a class=\"xref\" href=\"system.uri#System_Uri_ToString_\" data-linktype=\"relative-path\">ToString</a>, which returns the canonical form of the string.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLUriEnhancements#3\">   // Create a new Uri from a string address.\n   Uri^ uriAddress = gcnew Uri( &quot;HTTP://www.ConToso.com:80//thick%20and%20thin.htm&quot; );\n\n   // Write the new Uri to the console and note the difference in the two values.\n   // ToString() gives the canonical version.  OriginalString gives the orginal \n   // string that was passed to the constructor.\n   // The following outputs &quot;http://www.contoso.com/thick and thin.htm&quot;.\n   Console::WriteLine( uriAddress );\n\n   // The following outputs &quot;HTTP://www.ConToso.com:80//thick%20and%20thin.htm&quot;.\n   Console::WriteLine( uriAddress-&gt;OriginalString );\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLUriEnhancements#3\">            // Create a new Uri from a string address.\n            Uri uriAddress = new Uri(&quot;HTTP://www.ConToso.com:80//thick%20and%20thin.htm&quot;);\n\n            // Write the new Uri to the console and note the difference in the two values.\n            // ToString() gives the canonical version.  OriginalString gives the orginal \n            // string that was passed to the constructor.\n\n            // The following outputs &quot;http://www.contoso.com/thick and thin.htm&quot;.\n            Console.WriteLine(uriAddress.ToString()); \n\n            // The following outputs &quot;HTTP://www.ConToso.com:80//thick%20and%20thin.htm&quot;.\n            Console.WriteLine(uriAddress.OriginalString);\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriEnhancements#3\">        &#39; Create a new Uri from a string address.\n        Dim uriAddress As New Uri(&quot;HTTP://www.ConToso.com:80//thick%20and%20thin.htm&quot;)\n        \n        &#39; Write the new Uri to the console and note the difference in the two values.\n        &#39; ToString() gives the canonical version.  OriginalString gives the orginal \n        &#39; string that was passed to the constructor.\n        &#39; The following outputs &quot;http://www.contoso.com/thick and thin.htm&quot;.\n        Console.WriteLine(uriAddress.ToString())\n        \n        &#39; The following outputs &quot;HTTP://www.ConToso.com:80//thick%20and%20thin.htm&quot;.\n        Console.WriteLine(uriAddress.OriginalString)\n    \n    End Sub &#39;SampleOriginalString\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_PathAndQuery\">\r\n    \r\n            <a id=\"System_Uri_PathAndQuery_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">PathAndQuery</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <span class=\"xref\">stem.Uri.AbsolutePath*</span> and <span class=\"xref\">stem.Uri.Query*</span> properties separated by a question mark (?).</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string PathAndQuery { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the <span class=\"xref\">stem.Uri.AbsolutePath*</span> and <span class=\"xref\">stem.Uri.Query*</span> properties separated by a question mark (?).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The PathAndQuery property contains the absolute path on the server and the query information sent with the request. It is identical to concatenating the <a class=\"xref\" href=\"system.uri#System_Uri_AbsolutePath_\" data-linktype=\"relative-path\">AbsolutePath</a> and <a class=\"xref\" href=\"system.uri#System_Uri_Query_\" data-linktype=\"relative-path\">Query</a> properties.  </p>\n<p> The PathAndQuery property is escaped according to RFC 2396 by default. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the PathAndQuery property is escaped according to RFC 3986 and RFC 3987.  </p>\n<p> For more information on IRI support, see the Remarks section for the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes the URI path (/catalog/shownew.htm) and query (date= today) information to the console.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic Uri.PathAndQuery Example#1\"> Dim baseUri As New Uri(&quot;http://www.contoso.com/&quot;)\n Dim myUri As New Uri(baseUri, &quot;catalog/shownew.htm?date=today&quot;)\n        \n Console.WriteLine(myUri.PathAndQuery)\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Uri.PathAndQuery Example#1\">   Uri^ baseUri = gcnew Uri( &quot;http://www.contoso.com/&quot; );\n   Uri^ myUri = gcnew Uri( baseUri, &quot;catalog/shownew.htm?date=today&quot; );\n\n   Console::WriteLine( myUri-&gt;PathAndQuery );\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Uri.PathAndQuery Example#1\">Uri baseUri = new Uri(&quot;http://www.contoso.com/&quot;);\n Uri myUri = new Uri(baseUri, &quot;catalog/shownew.htm?date=today&quot;);\n \n Console.WriteLine(myUri.PathAndQuery);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_Port\">\r\n    \r\n            <a id=\"System_Uri_Port_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Port</div>        \r\n          </div>\r\n    \r\n            <p>Gets the port number of this URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Port { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that contains the port number for this URI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The port number defines the protocol port used for contacting the server referenced in the URI. If a port is not specified as part of the URI, the Port property returns the default value for the protocol. If there is no default port number, this property returns -1.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes the URI port number to the console. In this case, the value is the default port number for HTTP, port 80.  </p>\n<pre><code class=\"lang-cpp\" name=\"Classic Uri.Port Example#1\">   Uri^ baseUri = gcnew Uri( &quot;http://www.contoso.com/&quot; );\n   Uri^ myUri = gcnew Uri( baseUri,&quot;catalog/shownew.htm?date=today&quot; );\n   Console::WriteLine( myUri-&gt;Port );\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Uri.Port Example#1\">Uri baseUri = new Uri(&quot;http://www.contoso.com/&quot;);\n Uri myUri = new Uri(baseUri,&quot;catalog/shownew.htm?date=today&quot;);\n \n Console.WriteLine(myUri.Port);\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Uri.Port Example#1\"> Dim baseUri As New Uri(&quot;http://www.contoso.com/&quot;)\n Dim myUri As New Uri(baseUri, &quot;catalog/shownew.htm?date=today&quot;)\n        \n Console.WriteLine(myUri.Port)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_Query\">\r\n    \r\n            <a id=\"System_Uri_Query_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Query</div>        \r\n          </div>\r\n    \r\n            <p>Gets any query information included in the specified URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Query { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains any query information included in the specified URI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Query property contains any query information included in the URI. Query information is separated from the path information by a question mark (?) and continues to the end of the URI. The query information returned includes the leading question mark.  </p>\n<p> The query information is escaped according to RFC 2396 by default. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the query information is escaped according to RFC 3986 and RFC 3987.  </p>\n<p> For more information on IRI support, see the Remarks section for the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes the query ?date= today to the console.  </p>\n<pre><code class=\"lang-vb\" name=\"Classic Uri.PathAndQuery Example#2\">        Dim baseUri As New Uri(&quot;http://www.contoso.com/&quot;)\n        Dim myUri As New Uri(baseUri, &quot;catalog/shownew.htm?date=today&quot;)\n\n        Console.WriteLine(myUri.Query)\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Uri.PathAndQuery Example#2\">   Uri^ baseUri = gcnew Uri( &quot;http://www.contoso.com/&quot; );\n   Uri^ myUri = gcnew Uri( baseUri, &quot;catalog/shownew.htm?date=today&quot; );\n\n   Console::WriteLine( myUri-&gt;Query );\n</code></pre><pre><code class=\"lang-cs\" name=\"Classic Uri.PathAndQuery Example#2\"> Uri baseUri = new Uri (&quot;http://www.contoso.com/&quot;);\n Uri myUri = new Uri (baseUri, &quot;catalog/shownew.htm?date=today&quot;);\n\n Console.WriteLine (myUri.Query);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_Scheme\">\r\n    \r\n            <a id=\"System_Uri_Scheme_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Scheme</div>        \r\n          </div>\r\n    \r\n            <p>Gets the scheme name for this URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string Scheme { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the scheme for this URI, converted to lowercase.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Scheme property returns the scheme used to initialize the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance. This property does not indicate that the scheme used to initialize the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance was recognized.  </p>\n<p> The following table shows examples of some possible values returned by the Scheme property.  </p>\n<table>\n<thead>\n<tr>\n<th>Scheme</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>file</td>\n<td>The resource is a file on the local computer.</td>\n</tr>\n<tr>\n<td>ftp</td>\n<td>The resource is accessed through FTP.</td>\n</tr>\n<tr>\n<td>gopher</td>\n<td>The resource is accessed through the Gopher protocol.</td>\n</tr>\n<tr>\n<td>http</td>\n<td>The resource is accessed through HTTP.</td>\n</tr>\n<tr>\n<td>https</td>\n<td>The resource is accessed through SSL-encrypted HTTP.</td>\n</tr>\n<tr>\n<td>ldap</td>\n<td>The resource is accessed through the LDAP protocol.</td>\n</tr>\n<tr>\n<td>mailto</td>\n<td>The resource is an e-mail address and accessed through the SMTP protocol.</td>\n</tr>\n<tr>\n<td>net.pipe</td>\n<td>The resource is accessed through a named pipe.</td>\n</tr>\n<tr>\n<td>net.tcp</td>\n<td>The resource is accessed from TCP endpoint.</td>\n</tr>\n<tr>\n<td>news</td>\n<td>The resource is accessed through the NNTP protocol.</td>\n</tr>\n<tr>\n<td>nntp</td>\n<td>The resource is accessed through the NNTP protocol.</td>\n</tr>\n<tr>\n<td>telnet</td>\n<td>The resource is accessed through the TELNET protocol.</td>\n</tr>\n<tr>\n<td>uuid</td>\n<td>The resource is accessed through a unique UUID endpoint name for communicating with a service.</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example writes the scheme name (http) to the console for the <a href=\"http://www.contoso.com/\" data-linktype=\"external\">http://www.contoso.com/</a> URI.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Uri.Scheme Example#1\">Uri baseUri = new Uri(&quot;http://www.contoso.com/&quot;);\n Uri myUri = new Uri(baseUri, &quot;catalog/shownew.htm?date=today&quot;);\n \n Console.WriteLine(myUri.Scheme);\n   \n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Uri.Scheme Example#1\"> Dim baseUri As New Uri(&quot;http://www.contoso.com/&quot;)\n Dim myUri As New Uri(baseUri, &quot;catalog/shownew.htm?date=today&quot;)\n        \n Console.WriteLine(myUri.Scheme)\n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Uri.Scheme Example#1\">   Uri^ baseUri = gcnew Uri( &quot;http://www.contoso.com/&quot; );\n   Uri^ myUri = gcnew Uri( baseUri,&quot;catalog/shownew.htm?date=today&quot; );\n   Console::WriteLine( myUri-&gt;Scheme );\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_Segments\">\r\n    \r\n            <a id=\"System_Uri_Segments_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Segments</div>        \r\n          </div>\r\n    \r\n            <p>Gets an array containing the path segments that make up the specified URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string[] Segments { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>[]</div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> array that contains the path segments that make up the specified URI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Segments property returns an array of strings containing the &quot;segments&quot; (substrings) that form the URI&#39;s absolute path. The first segment is obtained by parsing the absolute path from its first character until you reach a slash (/) or the end of the path. Each additional segment begins at the first character after the preceding segment, and terminates with the next slash or the end of the path. (A URI&#39;s absolute path contains everything after the host and port and before the query and fragment.)  </p>\n<p> The following example shows the absolute path and segments for two URIs. The second example illustrates that the fragment and query are not part of the absolute path and therefore are not segments.  </p>\n<p> Absolute URI<br> <a href=\"http://www.contoso.com/Chapters/Chapter1/Sections/Section1.htm\" data-linktype=\"external\">http://www.contoso.com/Chapters/Chapter1/Sections/Section1.htm</a>  </p>\n<p> Absolute path<br> /Chapters/Chapter1/Sections/Section1.htm  </p>\n<p> Segments<br> /Chapters/Chapter1/Sections/Section1.htm  </p>\n<p> Absolute URI<br> <a href=\"http://www.contoso.com/Chapters/Chapter1/Sections/Section1.htm#page1?answer=NO\" data-linktype=\"external\">http://www.contoso.com/Chapters/Chapter1/Sections/Section1.htm#page1?answer=NO</a>  </p>\n<p> Absolute path<br> /Chapters/Chapter1/Sections/Section1.htm  </p>\n<p> Segments<br> /Chapters/Chapter1/Sections/Section1.htm  </p>\n<p> Note that because the absolute path starts with a &#39;/&#39;, the first segment contains it and nothing else.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance with 3 segments and displays the segments on the screen.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#5\">            Uri uriAddress1 = new Uri(&quot;http://www.contoso.com/title/index.htm&quot;);\n            Console.WriteLine(&quot;The parts are {0}, {1}, {2}&quot;, uriAddress1.Segments[0], uriAddress1.Segments[1], uriAddress1.Segments[2]);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#5\">         Uri^ uriAddress1 = gcnew Uri( &quot;http://www.contoso.com/title/index.htm&quot; );\n         Console::WriteLine( &quot;The parts are {0}, {1}, {2}&quot;, uriAddress1-&gt;Segments[ 0 ], uriAddress1-&gt;Segments[ 1 ], uriAddress1-&gt;Segments[ 2 ] );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#5\">        Dim uriAddress1 As New Uri(&quot;http://www.contoso.com/title/index.htm&quot;)\n        Console.WriteLine(&quot;The parts are {0}, {1}, {2}&quot;, uriAddress1.Segments(0), uriAddress1.Segments(1), uriAddress1.Segments(2))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_UserEscaped\">\r\n    \r\n            <a id=\"System_Uri_UserEscaped_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserEscaped</div>        \r\n          </div>\r\n    \r\n            <p>Indicates that the URI string was completely escaped before the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance was created.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool UserEscaped { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the <code>dontEscape</code> parameter was set to <code>true</code> when the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance was created; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The UserEscaped property is set to <code>true</code> to indicate that the string used to create the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance was completely escaped before it was passed to the constructor; that is, the <code>dontEscape</code> parameter of the constructor call was set to <code>true</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and determines whether it was fully escaped when it was created.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#18\">            Uri uriAddress = new Uri (&quot;http://user:password@www.contoso.com/index.htm &quot;);\n            Console.WriteLine(uriAddress.UserInfo);\n            Console.WriteLine(&quot;Fully Escaped {0}&quot;, uriAddress.UserEscaped ? &quot;yes&quot; : &quot;no&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#18\">         Uri^ uriAddress = gcnew Uri( &quot;http://user:password@www.contoso.com/index.htm &quot; );\n         Console::WriteLine( uriAddress-&gt;UserInfo );\n         Console::WriteLine( &quot;Fully Escaped {0}&quot;,\n            uriAddress-&gt;UserEscaped ? (String^)&quot;yes&quot; : &quot;no&quot; );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#18\">        Dim uriAddress As New Uri(&quot;http://user:password@www.contoso.com/index.htm &quot;)\n        Console.WriteLine(uriAddress.UserInfo)\n        Console.WriteLine(&quot;Fully Escaped {0}&quot;, IIf(uriAddress.UserEscaped, &quot;yes&quot;, &quot;no&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n    \n    End Sub &#39;SampleUserInfo \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_UserInfo\">\r\n    \r\n            <a id=\"System_Uri_UserInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UserInfo</div>        \r\n          </div>\r\n    \r\n            <p>Gets the user name, password, or other user-specific information associated with the specified URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string UserInfo { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the user information associated with the URI. The returned value does not include the &#39;@&#39; character reserved for delimiting the user information part of the URI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The value returned by this property is usually in the format &quot;userName:password&quot;.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and writes the user information to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#18\">            Uri uriAddress = new Uri (&quot;http://user:password@www.contoso.com/index.htm &quot;);\n            Console.WriteLine(uriAddress.UserInfo);\n            Console.WriteLine(&quot;Fully Escaped {0}&quot;, uriAddress.UserEscaped ? &quot;yes&quot; : &quot;no&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#18\">         Uri^ uriAddress = gcnew Uri( &quot;http://user:password@www.contoso.com/index.htm &quot; );\n         Console::WriteLine( uriAddress-&gt;UserInfo );\n         Console::WriteLine( &quot;Fully Escaped {0}&quot;,\n            uriAddress-&gt;UserEscaped ? (String^)&quot;yes&quot; : &quot;no&quot; );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#18\">        Dim uriAddress As New Uri(&quot;http://user:password@www.contoso.com/index.htm &quot;)\n        Console.WriteLine(uriAddress.UserInfo)\n        Console.WriteLine(&quot;Fully Escaped {0}&quot;, IIf(uriAddress.UserEscaped, &quot;yes&quot;, &quot;no&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n    \n    End Sub &#39;SampleUserInfo \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_Canonicalize\">\r\n    \r\n            <a id=\"System_Uri_Canonicalize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Canonicalize()</div>        \r\n          </div>\r\n    \r\n            <p>Converts the internally stored URI to canonical form.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Canonicalize ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this method is valid only for absolute URIs.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <p>The URI is incorrectly formed.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Stores the canonical version of the URI internally.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_CheckHostName_System_String_\">\r\n    \r\n            <a id=\"System_Uri_CheckHostName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckHostName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified host name is a valid DNS name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static UriHostNameType CheckHostName (string name);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The host name to validate. This can be an IPv4 or IPv6 address or an Internet host name.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.urihostnametype\" data-linktype=\"relative-path\">UriHostNameType</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.urihostnametype\" data-linktype=\"relative-path\">UriHostNameType</a> that indicates the type of the host name. If the type of the host name cannot be determined or if the host name is <code>null</code> or a zero-length string, this method returns <a class=\"xref\" href=\"system.urihostnametype\" data-linktype=\"relative-path\">UriHostNameType</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The CheckHostName method checks that the host name provided meets the requirements for a valid Internet host name. It does not, however, perform a host-name lookup to verify the existence of the host.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example checks whether the host name is valid.  </p>\n<pre><code class=\"lang-cs\" name=\"Classic Uri.CheckHostName Example#1\">Console.WriteLine(Uri.CheckHostName(&quot;www.contoso.com&quot;));\n   \n</code></pre><pre><code class=\"lang-cpp\" name=\"Classic Uri.CheckHostName Example#1\">   Console::WriteLine( Uri::CheckHostName( &quot;www.contoso.com&quot; ) );\n</code></pre><pre><code class=\"lang-vb\" name=\"Classic Uri.CheckHostName Example#1\"> Console.WriteLine(Uri.CheckHostName(&quot;www.contoso.com&quot;))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_CheckSchemeName_System_String_\">\r\n    \r\n            <a id=\"System_Uri_CheckSchemeName_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckSchemeName(String)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified scheme name is valid.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool CheckSchemeName (string schemeName);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>schemeName</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The scheme name to validate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the scheme name is valid; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method checks the scheme name for validity according to RFC 2396 by default. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, this method checks the scheme name for validity according to RFC 3986. The scheme name must begin with a letter and must contain only letters, digits, and the characters &quot;.&quot;, &quot;+&quot;, or &quot;-&quot;.  </p>\n<p> For more information on IRI support, see the Remarks section for the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and checks whether the scheme name is valid.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#9\">            Uri address1 = new Uri(&quot;http://www.contoso.com/index.htm#search&quot;);\n            Console.WriteLine(&quot;address 1 {0} a valid scheme name&quot;,\n                  Uri.CheckSchemeName(address1.Scheme) ? &quot; has&quot; : &quot; does not have&quot;);\n\n            if (address1.Scheme == Uri.UriSchemeHttp)\n                Console.WriteLine(&quot;Uri is HTTP type&quot;);\n                  \n            Console.WriteLine(address1.HostNameType);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#9\">         Uri^ address1 = gcnew Uri( &quot;http://www.contoso.com/index.htm#search&quot; );\n         Console::WriteLine( &quot;address 1 {0} a valid scheme name&quot;,\n            Uri::CheckSchemeName( address1-&gt;Scheme ) ? (String^)&quot; has&quot; : &quot; does not have&quot; );\n         if ( address1-&gt;Scheme == Uri::UriSchemeHttp )\n         {\n            Console::WriteLine( &quot;Uri is HTTP type&quot; );\n         }\n\n         Console::WriteLine( address1-&gt;HostNameType );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#9\">        Dim address1 As New Uri(&quot;http://www.contoso.com/index.htm#search&quot;)\n        Console.WriteLine(&quot;address 1 {0} a valid scheme name&quot;, IIf(Uri.CheckSchemeName(address1.Scheme), &quot; has&quot;, &quot; does not have&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n        \n        If address1.Scheme = Uri.UriSchemeHttp Then\n            Console.WriteLine(&quot;Uri is HTTP type&quot;)\n        End If \n        Console.WriteLine(address1.HostNameType)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_CheckSecurity\">\r\n    \r\n            <a id=\"System_Uri_CheckSecurity_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CheckSecurity()</div>        \r\n          </div>\r\n    \r\n            <p>Calling this method has no effect.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void CheckSecurity ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_Compare_System_Uri_System_Uri_System_UriComponents_System_UriFormat_System_StringComparison_\">\r\n    \r\n            <a id=\"System_Uri_Compare_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Compare(Uri,Uri,UriComponents,UriFormat,StringComparison)</div>        \r\n          </div>\r\n    \r\n            <p>Compares the specified parts of two URIs using the specified comparison rules.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int Compare (Uri uri1, Uri uri2, UriComponents partsToCompare, UriFormat compareFormat, StringComparison comparisonType);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>partsToCompare</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uricomponents\" data-linktype=\"relative-path\">UriComponents</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the <a class=\"xref\" href=\"system.uricomponents\" data-linktype=\"relative-path\">UriComponents</a> values that specifies the parts of <code>uri1</code> and <code>uri2</code> to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>compareFormat</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformat\" data-linktype=\"relative-path\">UriFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.uriformat\" data-linktype=\"relative-path\">UriFormat</a> values that specifies the character escaping used when the URI components are compared.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>comparisonType</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.stringcomparison\" data-linktype=\"relative-path\">StringComparison</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.stringcomparison\" data-linktype=\"relative-path\">StringComparison</a> values.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that indicates the lexical relationship between the compared <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> components.  </p>\n <table><thead><tr><th> Value<br>\n </th><th> Meaning<br>\n </th></tr></thead><tbody><tr><td> Less than zero<br>\n </td><td><code>uri1</code> is less than <code>uri2</code>.<br>\n </td></tr><tr><td> Zero<br>\n </td><td><code>uri1</code> equals <code>uri2</code>.<br>\n </td></tr><tr><td> Greater than zero<br>\n </td><td><code>uri1</code> is greater than <code>uri2</code>.<br>\n </td></tr></tbody></table>\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>comparisonType</code> is not a valid <a class=\"xref\" href=\"system.stringcomparison\" data-linktype=\"relative-path\">StringComparison</a> value.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If both <code>uri1</code> and <code>uri2</code> are <code>null</code>, this method returns 0. When comparing URI values, a relative URI is always less than an absolute URI, and a non-null URI is always greater than a null URI. For cases where both <code>uri1</code> and <code>uri2</code> are not <code>null</code> and are both relative URIs or both absolute URIs, the <a class=\"xref\" href=\"system.string#System_String_Compare_System_String_System_String_System_StringComparison_\" data-linktype=\"relative-path\">System.String.Compare(String,String,StringComparison)</a> method performs the comparison.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_Equals_System_Object_\">\r\n    \r\n            <a id=\"System_Uri_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Compares two <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances for equality.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool Equals (object comparand);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>comparand</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance or a URI identifier to compare with the current instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the two instances represent the same URI; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Equals method compares the two instances without regard to user information (<a class=\"xref\" href=\"system.uri#System_Uri_UserInfo_\" data-linktype=\"relative-path\">UserInfo</a>) and fragment (<a class=\"xref\" href=\"system.uri#System_Uri_Fragment_\" data-linktype=\"relative-path\">Fragment</a>) parts that they might contain. For example, given the URIs <a href=\"http://www.contoso.com/index.htm#search\" data-linktype=\"external\">http://www.contoso.com/index.htm#search</a> and <a href=\"http://user:password@www.contoso.com/index.htm\" data-linktype=\"external\">http://user:password@www.contoso.com/index.htm</a>, the Equals method would return <code>true</code>.  </p>\n<p> If one <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance is formed with a Unicode host name and <code>comparand</code> parameter contains a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance or identifier that is formed with a host name that has the equivalent Punycode host name, then Equals returns <code>true</code> only if International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled. Punycode names contain only ASCII characters and always start with the xn-- prefix.  </p>\n<p> For more information on IRI support, see the Remarks section for the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In the .NET Framework versions 1.0 and 1.1, the <a class=\"xref\" href=\"system.uri#System_Uri_Query_\" data-linktype=\"relative-path\">Query</a> is also ignored.  </p>\n</div>\n<div class=\"NOTE\"><h5>Note</h5><p> The Equals method can be overridden in a derived class; use caution as a malicious entity could modify the method. You should not use this method to perform security checks unless you know that this instance came from a trusted source.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example creates two <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances from strings and compares them to determine whether they represent the same value. <code>address1</code> and <code>address2</code> are the same because the <a class=\"xref\" href=\"system.uri#System_Uri_Fragment_\" data-linktype=\"relative-path\">Fragment</a> portion is ignored for this comparison. The outcome is written to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#8\">            // Create some Uris.\n            Uri address1 = new Uri(&quot;http://www.contoso.com/index.htm#search&quot;);\n            Uri address2 = new Uri(&quot;http://www.contoso.com/index.htm&quot;); \n            if (address1.Equals(address2))\n                Console.WriteLine(&quot;The two addresses are equal&quot;);\n            else\n                Console.WriteLine(&quot;The two addresses are not equal&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#8\">         // Create some Uris.\n         Uri^ address1 = gcnew Uri( &quot;http://www.contoso.com/index.htm#search&quot; );\n         Uri^ address2 = gcnew Uri( &quot;http://www.contoso.com/index.htm&quot; );\n         if ( address1-&gt;Equals( address2 ) )\n         {\n            Console::WriteLine( &quot;The two addresses are equal&quot; );\n         }\n         else\n         {\n            Console::WriteLine( &quot;The two addresses are not equal&quot; );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#8\">        &#39; Create some Uris.\n        Dim address1 As New Uri(&quot;http://www.contoso.com/index.htm#search&quot;)\n        Dim address2 As New Uri(&quot;http://www.contoso.com/index.htm&quot;)\n        If address1.Equals(address2) Then\n            Console.WriteLine(&quot;The two addresses are equal&quot;)\n        Else\n            Console.WriteLine(&quot;The two addresses are not equal&quot;)\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_Escape\">\r\n    \r\n            <a id=\"System_Uri_Escape_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Escape()</div>        \r\n          </div>\r\n    \r\n            <p>Converts any unsafe or reserved characters in the path component to their hexadecimal character representations.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Escape ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <p>The URI passed from the constructor is invalid. This exception can occur if a URI has too many characters or the URI is relative.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_EscapeDataString_System_String_\">\r\n    \r\n            <a id=\"System_Uri_EscapeDataString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EscapeDataString(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a string to its escaped representation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string EscapeDataString (string stringToEscape);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stringToEscape</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to escape.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the escaped representation of <code>stringToEscape</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>stringToEscape</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <div class=\"alert NOTE\"><br> In the <a href=\"http://go.microsoft.com/fwlink/?LinkID=247912\" data-linktype=\"external\">.NET for Windows Store apps</a> or the <a href=\"../Topic/Cross-Platform%20Development%20with%20the%20Portable%20Class%20Library.md\" data-linktype=\"relative-path\">Portable Class Library</a>, catch the base class exception, <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>, instead.<br>\n</div>  \n\n<p> The length of <code>stringToEscape</code> exceeds 32766 characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>By default, the EscapeDataString method converts all characters except for RFC 2396 unreserved characters to their hexadecimal representation. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the EscapeDataString method converts all characters, except for RFC 3986 unreserved characters, to their hexadecimal representation. All Unicode characters are converted to UTF-8 format before being escaped.  </p>\n<p> This method assumes that <code>stringToEscape</code> has no escape sequences in it.  </p>\n<p> By default, the string is escaped according to RFC 2396. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987. See these RFCs for a definition of reserved and unreserved characters.  </p>\n<p> For more information on IRI support, see the Remarks section for the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_EscapeString_System_String_\">\r\n    \r\n            <a id=\"System_Uri_EscapeString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EscapeString(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a string to its escaped representation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected static string EscapeString (string str);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>str</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to transform to its escaped representation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The escaped representation of the string.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The EscapeString method converts RFC 2396 reserved characters and all characters with a character value greater than 127 to hexadecimal representation. All Unicode characters are converted to UTF-8 format before being escaped.  </p>\n<p> By default, the string is escaped according to RFC 2396. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987.  </p>\n<p> For more information on IRI support, see the Remarks section for the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_EscapeUriString_System_String_\">\r\n    \r\n            <a id=\"System_Uri_EscapeUriString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EscapeUriString(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a URI string to its escaped representation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string EscapeUriString (string stringToEscape);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stringToEscape</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to escape.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the escaped representation of <code>stringToEscape</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>stringToEscape</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <div class=\"alert NOTE\"><br> In the <a href=\"http://go.microsoft.com/fwlink/?LinkID=247912\" data-linktype=\"external\">.NET for Windows Store apps</a> or the <a href=\"../Topic/Cross-Platform%20Development%20with%20the%20Portable%20Class%20Library.md\" data-linktype=\"relative-path\">Portable Class Library</a>, catch the base class exception, <a class=\"xref\" href=\"system.formatexception\" data-linktype=\"relative-path\">FormatException</a>, instead.<br>\n</div>  \n\n<p> The length of <code>stringToEscape</code> exceeds 32766 characters.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Use the EscapeUriString method to prepare an unescaped URI string to be a parameter to the <a class=\"xref\" href=\"system.uri#System_Uri__ctor_\" data-linktype=\"relative-path\">Uri</a> constructor.  </p>\n<p> By default, the EscapeUriString method converts all characters, except RFC 2396 unreserved characters, to their hexadecimal representation. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the EscapeUriString method converts all characters, except for RFC 3986 unreserved characters, to their hexadecimal representation. All Unicode characters are converted to UTF-8 format before being escaped.  </p>\n<p> This method assumes that <code>stringToEscape</code> has no escape sequences in it.  </p>\n<p> By default, the string is escaped according to RFC 2396. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is escaped according to RFC 3986 and RFC 3987. See these RFCs for a definition of reserved and unreserved characters.  </p>\n<p> For more information on IRI support, see the Remarks section for the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_FromHex_System_Char_\">\r\n    \r\n            <a id=\"System_Uri_FromHex_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">FromHex(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the decimal value of a hexadecimal digit.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static int FromHex (char digit);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>digit</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The hexadecimal digit (0-9, a-f, A-F) to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> value that contains a number from 0 to 15 that corresponds to the specified hexadecimal digit.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>digit</code> is not a valid hexadecimal digit (0-9, a-f, A-F).</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The FromHex method converts a character representing a hexadecimal digit (0-9, a-f, A-F) to its decimal value (0 to 15). If <code>digit</code> is not a valid hexadecimal digit, an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> exception is thrown.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example determines whether a character is a hexadecimal character and, if it is, writes the corresponding decimal value to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#1\">            char  testChar = &#39;e&#39;;\n            if (Uri.IsHexDigit(testChar) == true)\n                Console.WriteLine(&quot;&#39;{0}&#39; is the hexadecimal representation of {1}&quot;, testChar, Uri.FromHex(testChar));\n            else \n                Console.WriteLine(&quot;&#39;{0}&#39; is not a hexadecimal character&quot;, testChar);\n            \n            string returnString = Uri.HexEscape(testChar);\n            Console.WriteLine(&quot;The hexadecimal value of &#39;{0}&#39; is {1}&quot;, testChar, returnString);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#1\">         char testChar = &#39;e&#39;;\n         if ( Uri::IsHexDigit( testChar ) == true )\n         {\n            Console::WriteLine( &quot;&#39;{0}&#39; is the hexadecimal representation of {1}&quot;,\n               testChar, Uri::FromHex( testChar ) );\n         }\n         else\n         {\n            Console::WriteLine( &quot;&#39;{0}&#39; is not a hex character&quot;, testChar );\n         }\n\n         String^ returnString = Uri::HexEscape( testChar );\n         Console::WriteLine( &quot;The hexadecimal value of &#39;{0}&#39; is {1}&quot;, testChar, returnString );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#1\">        Dim testChar As Char = &quot;e&quot;c\n        If Uri.IsHexDigit(testChar) = True Then\n            Console.WriteLine(&quot;&#39;{0}&#39; is the hexadecimal representation of {1}&quot;, testChar, Uri.FromHex(testChar))\n        Else\n            Console.WriteLine(&quot;&#39;{0}&#39; is not a hexadecimal character&quot;, testChar)\n        End If \n        Dim returnString As String = Uri.HexEscape(testChar)\n        Console.WriteLine(&quot;The hexadecimal value of &#39;{0}&#39; is {1}&quot;, testChar, returnString)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_GetComponents_System_UriComponents_System_UriFormat_\">\r\n    \r\n            <a id=\"System_Uri_GetComponents_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetComponents(UriComponents,UriFormat)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the specified components of the current instance using the specified escaping for special characters.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetComponents (UriComponents components, UriFormat format);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>components</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uricomponents\" data-linktype=\"relative-path\">UriComponents</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A bitwise combination of the <a class=\"xref\" href=\"system.uricomponents\" data-linktype=\"relative-path\">UriComponents</a> values that specifies which parts of the current instance to return to the caller.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>format</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformat\" data-linktype=\"relative-path\">UriFormat</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.uriformat\" data-linktype=\"relative-path\">UriFormat</a> values that controls how special characters are escaped.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the components.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>components</code> is not a combination of valid <a class=\"xref\" href=\"system.uricomponents\" data-linktype=\"relative-path\">UriComponents</a> values.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The current <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> is not an absolute URI. Relative URIs cannot be used with this method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.uricomponents\" data-linktype=\"relative-path\">UriComponents</a>, <a class=\"xref\" href=\"system.uricomponents\" data-linktype=\"relative-path\">UriComponents</a>, <a class=\"xref\" href=\"system.uricomponents\" data-linktype=\"relative-path\">UriComponents</a>, <a class=\"xref\" href=\"system.uricomponents\" data-linktype=\"relative-path\">UriComponents</a>, <a class=\"xref\" href=\"system.uricomponents\" data-linktype=\"relative-path\">UriComponents</a>, <a class=\"xref\" href=\"system.uricomponents\" data-linktype=\"relative-path\">UriComponents</a>, and <a class=\"xref\" href=\"system.uricomponents\" data-linktype=\"relative-path\">UriComponents</a> components do not include the delimiter. You can combine the <a class=\"xref\" href=\"system.uricomponents\" data-linktype=\"relative-path\">UriComponents</a> flag (using the bitwise OR operator) with any of those values to get the value with the delimiter. For all other <a class=\"xref\" href=\"system.uricomponents\" data-linktype=\"relative-path\">UriComponents</a> values, and combinations of values, the delimiters are included in the returned value.  </p>\n<p> The components are returned in the order that they appear in the URI. For example, if <a class=\"xref\" href=\"system.uricomponents\" data-linktype=\"relative-path\">UriComponents</a> is specified, it appears first.  </p>\n<p> When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, the number of characters returned in the <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> increases. Punycode names used to support IRI contain only ASCII characters and always start with the xn-- prefix. When IRI and IDN are enabled, Unicode surrogate characters are handled correctly by the GetComponents method.  </p>\n<p> For more information on IRI support, see the Remarks section for the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> If the GetComponents method is called with <code>format</code> set to <a class=\"xref\" href=\"system.uriformat\" data-linktype=\"relative-path\">UriFormat</a> , you cannot use the return value as an argument to a <a class=\"xref\" href=\"system.uri#System_Uri__ctor_\" data-linktype=\"relative-path\">Uri</a> constructor to create an equivalent <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n</div>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_GetHashCode\">\r\n    \r\n            <a id=\"System_Uri_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode()</div>        \r\n          </div>\r\n    \r\n            <p>Gets the hash code for the URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override int GetHashCode ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a> containing the hash value generated for this URI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and writes the hash code to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#4\">            // Create Uri\n            Uri uriAddress = new Uri(&quot;http://www.contoso.com/index.htm#search&quot;);\n            Console.WriteLine(uriAddress.Fragment);\n            Console.WriteLine(&quot;Uri {0} the default port &quot;, uriAddress.IsDefaultPort ? &quot;uses&quot; : &quot;does not use&quot;);\n             \n            Console.WriteLine(&quot;The path of this Uri is {0}&quot;, uriAddress.GetLeftPart(UriPartial.Path));\n            Console.WriteLine(&quot;Hash code {0}&quot;, uriAddress.GetHashCode());\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#4\">         // Create Uri\n         Uri^ uriAddress = gcnew Uri( &quot;http://www.contoso.com/index.htm#search&quot; );\n         Console::WriteLine( uriAddress-&gt;Fragment );\n         Console::WriteLine( &quot;Uri {0} the default port &quot;, uriAddress-&gt;IsDefaultPort ? (String^)&quot;uses&quot; : &quot;does not use&quot; );\n\n         Console::WriteLine( &quot;The path of this Uri is {0}&quot;, uriAddress-&gt;GetLeftPart( UriPartial::Path ) );\n         Console::WriteLine( &quot;Hash code {0}&quot;, uriAddress-&gt;GetHashCode() );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#4\">        &#39; Create Uri\n        Dim uriAddress As New Uri(&quot;http://www.contoso.com/index.htm#search&quot;)\n        Console.WriteLine(uriAddress.Fragment)\n        Console.WriteLine(&quot;Uri {0} the default port &quot;, IIf(uriAddress.IsDefaultPort, &quot;uses&quot;, &quot;does not use&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n        \n        Console.WriteLine(&quot;The path of this Uri is {0}&quot;, uriAddress.GetLeftPart(UriPartial.Path))\n        Console.WriteLine(&quot;Hash code {0}&quot;, uriAddress.GetHashCode())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_GetLeftPart_System_UriPartial_\">\r\n    \r\n            <a id=\"System_Uri_GetLeftPart_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetLeftPart(UriPartial)</div>        \r\n          </div>\r\n    \r\n            <p>Gets the specified portion of a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string GetLeftPart (UriPartial part);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>part</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uripartial\" data-linktype=\"relative-path\">UriPartial</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>One of the <a class=\"xref\" href=\"system.uripartial\" data-linktype=\"relative-path\">UriPartial</a> values that specifies the end of the URI portion to return.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the specified portion of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>The current <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance is not an absolute instance.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p>The specified <code>part</code> is not valid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The GetLeftPart method returns a string containing the leftmost portion of the URI string, ending with the portion specified by <code>part</code>.  </p>\n<p> GetLeftPart includes delimiters in the following cases:  </p>\n<ul>\n<li><p><a class=\"xref\" href=\"system.uripartial\" data-linktype=\"relative-path\">UriPartial</a> includes the scheme delimiter.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.uripartial\" data-linktype=\"relative-path\">UriPartial</a> does not include the path delimiter.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.uripartial\" data-linktype=\"relative-path\">UriPartial</a> includes any delimiters in the original URI up to the query or fragment delimiter.  </p>\n</li>\n<li><p><a class=\"xref\" href=\"system.uripartial\" data-linktype=\"relative-path\">UriPartial</a> includes the <a class=\"xref\" href=\"system.uripartial\" data-linktype=\"relative-path\">UriPartial</a>, plus the query and its delimiter.  </p>\n<p>The following examples show a URI and the results of calling GetLeftPart with <a class=\"xref\" href=\"system.uripartial\" data-linktype=\"relative-path\">UriPartial</a>, <a class=\"xref\" href=\"system.uripartial\" data-linktype=\"relative-path\">UriPartial</a>, <a class=\"xref\" href=\"system.uripartial\" data-linktype=\"relative-path\">UriPartial</a>, or <a class=\"xref\" href=\"system.uripartial\" data-linktype=\"relative-path\">UriPartial</a>.  </p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>URI</th>\n<th>Scheme</th>\n<th>Authority</th>\n<th>Path</th>\n<th>Query</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://www.contoso.com/index.htm?date=today\" data-linktype=\"external\">http://www.contoso.com/index.htm?date=today</a></td>\n<td>http://</td>\n<td><a href=\"http://www.contoso.com\" data-linktype=\"external\">http://www.contoso.com</a></td>\n<td><a href=\"http://www.contoso.com/index.htm\" data-linktype=\"external\">http://www.contoso.com/index.htm</a></td>\n<td><a href=\"http://www.contoso.com/index.htm?date=today\" data-linktype=\"external\">http://www.contoso.com/index.htm?date=today</a></td>\n</tr>\n<tr>\n<td><a href=\"http://www.contoso.com/index.htm#main\" data-linktype=\"external\">http://www.contoso.com/index.htm#main</a></td>\n<td>http://</td>\n<td><a href=\"http://www.contoso.com\" data-linktype=\"external\">http://www.contoso.com</a></td>\n<td><a href=\"http://www.contoso.com/index.htm\" data-linktype=\"external\">http://www.contoso.com/index.htm</a></td>\n<td><a href=\"http://www.contoso.com/index.htm\" data-linktype=\"external\">http://www.contoso.com/index.htm</a></td>\n</tr>\n<tr>\n<td>mailto:user@contoso.com?subject=uri</td>\n<td>mailto:</td>\n<td>mailto:user@contoso.com</td>\n<td>mailto:user@contoso.com?subject=uri</td>\n<td>&lt;none&gt;</td>\n</tr>\n<tr>\n<td>nntp://news.contoso.com/123456@contoso.com</td>\n<td>nntp://</td>\n<td>nntp://news.contoso.com</td>\n<td>nntp://news.contoso.com/123456@contoso.com</td>\n<td>nntp://news.contoso.com/123456@contoso.com</td>\n</tr>\n<tr>\n<td>news:123456@contoso.com</td>\n<td>news:</td>\n<td>news:123456@contoso.com</td>\n<td>news:123456@contoso.com</td>\n<td>&lt;none&gt;</td>\n</tr>\n<tr>\n<td>file://server/filename.ext</td>\n<td>file://</td>\n<td>file://server</td>\n<td>file://server/filename.ext</td>\n<td>file://server/filename.ext</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance and writes the path to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#4\">            // Create Uri\n            Uri uriAddress = new Uri(&quot;http://www.contoso.com/index.htm#search&quot;);\n            Console.WriteLine(uriAddress.Fragment);\n            Console.WriteLine(&quot;Uri {0} the default port &quot;, uriAddress.IsDefaultPort ? &quot;uses&quot; : &quot;does not use&quot;);\n             \n            Console.WriteLine(&quot;The path of this Uri is {0}&quot;, uriAddress.GetLeftPart(UriPartial.Path));\n            Console.WriteLine(&quot;Hash code {0}&quot;, uriAddress.GetHashCode());\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#4\">         // Create Uri\n         Uri^ uriAddress = gcnew Uri( &quot;http://www.contoso.com/index.htm#search&quot; );\n         Console::WriteLine( uriAddress-&gt;Fragment );\n         Console::WriteLine( &quot;Uri {0} the default port &quot;, uriAddress-&gt;IsDefaultPort ? (String^)&quot;uses&quot; : &quot;does not use&quot; );\n\n         Console::WriteLine( &quot;The path of this Uri is {0}&quot;, uriAddress-&gt;GetLeftPart( UriPartial::Path ) );\n         Console::WriteLine( &quot;Hash code {0}&quot;, uriAddress-&gt;GetHashCode() );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#4\">        &#39; Create Uri\n        Dim uriAddress As New Uri(&quot;http://www.contoso.com/index.htm#search&quot;)\n        Console.WriteLine(uriAddress.Fragment)\n        Console.WriteLine(&quot;Uri {0} the default port &quot;, IIf(uriAddress.IsDefaultPort, &quot;uses&quot;, &quot;does not use&quot;)) &#39;TODO: For performance reasons this should be changed to nested IF statements\n        \n        Console.WriteLine(&quot;The path of this Uri is {0}&quot;, uriAddress.GetLeftPart(UriPartial.Path))\n        Console.WriteLine(&quot;Hash code {0}&quot;, uriAddress.GetHashCode())\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Uri_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the data needed to serialize the current instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected void GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object containing the information required to serialize the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>streamingContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> object containing the source and destination of the serialized stream associated with the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_HexEscape_System_Char_\">\r\n    \r\n            <a id=\"System_Uri_HexEscape_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HexEscape(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a specified character into its hexadecimal equivalent.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string HexEscape (char character);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>character</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character to convert to hexadecimal representation.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The hexadecimal representation of the specified character.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>character</code> is greater than 255.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example converts a character to its hexadecimal equivalent and writes it to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#1\">            char  testChar = &#39;e&#39;;\n            if (Uri.IsHexDigit(testChar) == true)\n                Console.WriteLine(&quot;&#39;{0}&#39; is the hexadecimal representation of {1}&quot;, testChar, Uri.FromHex(testChar));\n            else \n                Console.WriteLine(&quot;&#39;{0}&#39; is not a hexadecimal character&quot;, testChar);\n            \n            string returnString = Uri.HexEscape(testChar);\n            Console.WriteLine(&quot;The hexadecimal value of &#39;{0}&#39; is {1}&quot;, testChar, returnString);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#1\">         char testChar = &#39;e&#39;;\n         if ( Uri::IsHexDigit( testChar ) == true )\n         {\n            Console::WriteLine( &quot;&#39;{0}&#39; is the hexadecimal representation of {1}&quot;,\n               testChar, Uri::FromHex( testChar ) );\n         }\n         else\n         {\n            Console::WriteLine( &quot;&#39;{0}&#39; is not a hex character&quot;, testChar );\n         }\n\n         String^ returnString = Uri::HexEscape( testChar );\n         Console::WriteLine( &quot;The hexadecimal value of &#39;{0}&#39; is {1}&quot;, testChar, returnString );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#1\">        Dim testChar As Char = &quot;e&quot;c\n        If Uri.IsHexDigit(testChar) = True Then\n            Console.WriteLine(&quot;&#39;{0}&#39; is the hexadecimal representation of {1}&quot;, testChar, Uri.FromHex(testChar))\n        Else\n            Console.WriteLine(&quot;&#39;{0}&#39; is not a hexadecimal character&quot;, testChar)\n        End If \n        Dim returnString As String = Uri.HexEscape(testChar)\n        Console.WriteLine(&quot;The hexadecimal value of &#39;{0}&#39; is {1}&quot;, testChar, returnString)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_HexUnescape_System_String_System_Int32__\">\r\n    \r\n            <a id=\"System_Uri_HexUnescape_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">HexUnescape(String,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a specified hexadecimal representation of a character to the character.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static char HexUnescape (string pattern, ref int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pattern</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The hexadecimal representation of a character.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location in <code>pattern</code> where the hexadecimal representation of a character begins.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </div>\r\n                  <p>The character represented by the hexadecimal encoding at position <code>index</code>. If the character at <code>index</code> is not hexadecimal encoded, the character at <code>index</code> is returned. The value of <code>index</code> is incremented to point to the character following the one returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentoutofrangeexception\" data-linktype=\"relative-path\">ArgumentOutOfRangeException</a></div>\r\n                  </div>\r\n                  <p><code>index</code> is less than 0 or greater than or equal to the number of characters in <code>pattern</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following code example determines whether a character is hexadecimal encoded and, if so, writes the equivalent character to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#2\">            string testString = &quot;%75&quot;;\n            int index = 0;\n            if (Uri.IsHexEncoding(testString, index))\n                 Console.WriteLine(&quot;The character is {0}&quot;, Uri.HexUnescape(testString, ref index));\n            else\n                 Console.WriteLine(&quot;The character is not hexadecimal encoded&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#2\">         String^ testString = &quot;%75&quot;;\n         int index = 0;\n         if ( Uri::IsHexEncoding( testString, index ) )\n         {\n            Console::WriteLine( &quot;The character is {0}&quot;,\n               Uri::HexUnescape( testString, index ) );\n         }\n         else\n         {\n            Console::WriteLine( &quot;The character is not hex encoded&quot; );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#2\">        Dim testString As String = &quot;%75&quot;\n        Dim index As Integer = 0\n        If Uri.IsHexEncoding(testString, index) Then\n            Console.WriteLine(&quot;The character is {0}&quot;, Uri.HexUnescape(testString, index))\n        Else\n            Console.WriteLine(&quot;The character is not hexadecimal encoded&quot;)\n        End If\n</code></pre>\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_IsBadFileSystemCharacter_System_Char_\">\r\n    \r\n            <a id=\"System_Uri_IsBadFileSystemCharacter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsBadFileSystemCharacter(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Gets whether a character is invalid in a file system name.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool IsBadFileSystemCharacter (char character);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>character</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the specified character is invalid; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The character is analyzed according to the rules for the NTFS file system.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_IsBaseOf_System_Uri_\">\r\n    \r\n            <a id=\"System_Uri_IsBaseOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsBaseOf(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the current <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance is a base of the specified <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsBaseOf (Uri uri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The specified <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the current <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance is a base of <code>uri</code>; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>uri</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>IsBaseOf is used to compare the current <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance to a specified <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> to determine whether this URI is a base for the specified <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>. When comparing two <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> objects to determine a base relationship, the user information (<a class=\"xref\" href=\"system.uri#System_Uri_UserInfo_\" data-linktype=\"relative-path\">UserInfo</a>) is not evaluated. When comparing two URIs (uri1 and uri2), uri1 is the base of uri2 if, when you ignore everything in uri2 after the last slash (/), the two URIs are identical. Using <a href=\"http://host/path/path/file?query\" data-linktype=\"external\">http://host/path/path/file?query</a> as the base URI, the following table shows whether it is a base for other URIs.  </p>\n<table>\n<thead>\n<tr>\n<th>URI</th>\n<th><a href=\"http://host/path/path/file?query\" data-linktype=\"external\">http://host/path/path/file?query</a> is base of</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://host/path/path/file/\" data-linktype=\"external\">http://host/path/path/file/</a></td>\n<td>yes</td>\n</tr>\n<tr>\n<td><a href=\"http://host/path/path/#fragment\" data-linktype=\"external\">http://host/path/path/#fragment</a></td>\n<td>yes</td>\n</tr>\n<tr>\n<td><a href=\"http://host/path/path/MoreDir/\" data-linktype=\"external\">http://host/path/path/MoreDir/</a>&quot;</td>\n<td>yes</td>\n</tr>\n<tr>\n<td><a href=\"http://host/path/path/OtherFile?Query\" data-linktype=\"external\">http://host/path/path/OtherFile?Query</a></td>\n<td>yes</td>\n</tr>\n<tr>\n<td><a href=\"http://host/path/path/\" data-linktype=\"external\">http://host/path/path/</a></td>\n<td>yes</td>\n</tr>\n<tr>\n<td><a href=\"http://host/path/path/file\" data-linktype=\"external\">http://host/path/path/file</a></td>\n<td>yes</td>\n</tr>\n<tr>\n<td><a href=\"http://host/path/path\" data-linktype=\"external\">http://host/path/path</a></td>\n<td>no</td>\n</tr>\n<tr>\n<td><a href=\"http://host/path/path?query\" data-linktype=\"external\">http://host/path/path?query</a></td>\n<td>no</td>\n</tr>\n<tr>\n<td><a href=\"http://host/path/path#Fragment\" data-linktype=\"external\">http://host/path/path#Fragment</a></td>\n<td>no</td>\n</tr>\n<tr>\n<td><a href=\"http://host/path/path2/\" data-linktype=\"external\">http://host/path/path2/</a></td>\n<td>no</td>\n</tr>\n<tr>\n<td>://host/path/path2/MoreDir</td>\n<td>no</td>\n</tr>\n<tr>\n<td><a href=\"http://host/path/File\" data-linktype=\"external\">http://host/path/File</a></td>\n<td>no</td>\n</tr>\n</tbody>\n</table>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example creates a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance that represents a base <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance. It then creates a second <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance from a string. It calls IsBaseOf to determine whether the base instance is the base of the second instance. The outcome is written to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLUriEnhancements#6\">   // Create a base Uri.\n   Uri^ baseUri = gcnew Uri( &quot;http://www.contoso.com/&quot; );\n\n   // Create a new Uri from a string.\n   Uri^ uriAddress = gcnew Uri( &quot;http://www.contoso.com/index.htm?date=today&quot; );\n\n   // Determine whether BaseUri is a base of UriAddress.  \n   if ( baseUri-&gt;IsBaseOf( uriAddress ) )\n      Console::WriteLine( &quot;{0} is the base of {1}&quot;, baseUri, uriAddress );\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLUriEnhancements#6\">            // Create a base Uri.\n            Uri baseUri = new Uri(&quot;http://www.contoso.com/&quot;);\n\n            // Create a new Uri from a string.\n            Uri uriAddress = new Uri(&quot;http://www.contoso.com/index.htm?date=today&quot;); \n\n            // Determine whether BaseUri is a base of UriAddress.  \n            if (baseUri.IsBaseOf(uriAddress))\n                Console.WriteLine(&quot;{0} is the base of {1}&quot;, baseUri, uriAddress);\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriEnhancements#6\">        &#39; Create a base Uri.\n        Dim baseUri As New Uri(&quot;http://www.contoso.com/&quot;)\n        \n        &#39; Create a new Uri from a string.\n        Dim uriAddress As New Uri(&quot;http://www.contoso.com/index.htm?date=today&quot;)\n        \n        &#39; Determine whether BaseUri is a base of UriAddress.  \n        If baseUri.IsBaseOf(uriAddress) Then\n            Console.WriteLine(&quot;{0} is the base of {1}&quot;, baseUri, uriAddress)\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_IsExcludedCharacter_System_Char_\">\r\n    \r\n            <a id=\"System_Uri_IsExcludedCharacter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsExcludedCharacter(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Gets whether the specified character should be escaped.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected static bool IsExcludedCharacter (char character);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>character</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the specified character should be escaped; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_IsHexDigit_System_Char_\">\r\n    \r\n            <a id=\"System_Uri_IsHexDigit_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsHexDigit(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether a specified character is a valid hexadecimal digit.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsHexDigit (char character);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>character</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The character to validate.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the character is a valid hexadecimal digit; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Hexadecimal digits are the digits 0 to 9 and the letters A-F or a-f.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example determines whether a character is a hexadecimal character and, if it is, writes the corresponding decimal value to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#1\">            char  testChar = &#39;e&#39;;\n            if (Uri.IsHexDigit(testChar) == true)\n                Console.WriteLine(&quot;&#39;{0}&#39; is the hexadecimal representation of {1}&quot;, testChar, Uri.FromHex(testChar));\n            else \n                Console.WriteLine(&quot;&#39;{0}&#39; is not a hexadecimal character&quot;, testChar);\n            \n            string returnString = Uri.HexEscape(testChar);\n            Console.WriteLine(&quot;The hexadecimal value of &#39;{0}&#39; is {1}&quot;, testChar, returnString);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#1\">         char testChar = &#39;e&#39;;\n         if ( Uri::IsHexDigit( testChar ) == true )\n         {\n            Console::WriteLine( &quot;&#39;{0}&#39; is the hexadecimal representation of {1}&quot;,\n               testChar, Uri::FromHex( testChar ) );\n         }\n         else\n         {\n            Console::WriteLine( &quot;&#39;{0}&#39; is not a hex character&quot;, testChar );\n         }\n\n         String^ returnString = Uri::HexEscape( testChar );\n         Console::WriteLine( &quot;The hexadecimal value of &#39;{0}&#39; is {1}&quot;, testChar, returnString );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#1\">        Dim testChar As Char = &quot;e&quot;c\n        If Uri.IsHexDigit(testChar) = True Then\n            Console.WriteLine(&quot;&#39;{0}&#39; is the hexadecimal representation of {1}&quot;, testChar, Uri.FromHex(testChar))\n        Else\n            Console.WriteLine(&quot;&#39;{0}&#39; is not a hexadecimal character&quot;, testChar)\n        End If \n        Dim returnString As String = Uri.HexEscape(testChar)\n        Console.WriteLine(&quot;The hexadecimal value of &#39;{0}&#39; is {1}&quot;, testChar, returnString)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_IsHexEncoding_System_String_System_Int32_\">\r\n    \r\n            <a id=\"System_Uri_IsHexEncoding_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsHexEncoding(String,Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether a character in a string is hexadecimal encoded.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsHexEncoding (string pattern, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>pattern</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to check.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The location in <code>pattern</code> to check for hexadecimal encoding.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if <code>pattern</code> is hexadecimal encoded at the specified location; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The IsHexEncoding method checks for hexadecimal encoding that follows the pattern &quot;%hexhex&quot; in a string, where &quot;hex&quot; is a digit from 0 to 9 or a letter from A-F (case-insensitive).</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example determines whether a character is hexadecimal encoded and, if so, writes the equivalent character to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#2\">            string testString = &quot;%75&quot;;\n            int index = 0;\n            if (Uri.IsHexEncoding(testString, index))\n                 Console.WriteLine(&quot;The character is {0}&quot;, Uri.HexUnescape(testString, ref index));\n            else\n                 Console.WriteLine(&quot;The character is not hexadecimal encoded&quot;);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#2\">         String^ testString = &quot;%75&quot;;\n         int index = 0;\n         if ( Uri::IsHexEncoding( testString, index ) )\n         {\n            Console::WriteLine( &quot;The character is {0}&quot;,\n               Uri::HexUnescape( testString, index ) );\n         }\n         else\n         {\n            Console::WriteLine( &quot;The character is not hex encoded&quot; );\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#2\">        Dim testString As String = &quot;%75&quot;\n        Dim index As Integer = 0\n        If Uri.IsHexEncoding(testString, index) Then\n            Console.WriteLine(&quot;The character is {0}&quot;, Uri.HexUnescape(testString, index))\n        Else\n            Console.WriteLine(&quot;The character is not hexadecimal encoded&quot;)\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_IsReservedCharacter_System_Char_\">\r\n    \r\n            <a id=\"System_Uri_IsReservedCharacter_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsReservedCharacter(Char)</div>        \r\n          </div>\r\n    \r\n            <p>Gets whether the specified character is a reserved character.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual bool IsReservedCharacter (char character);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>character</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.char\" data-linktype=\"relative-path\">Char</a> to test.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the specified character is a reserved character otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_IsWellFormedOriginalString\">\r\n    \r\n            <a id=\"System_Uri_IsWellFormedOriginalString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsWellFormedOriginalString()</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the string used to construct this <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> was well-formed and is not required to be further escaped.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool IsWellFormedOriginalString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the string was well-formed; else <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The string is considered to be well-formed in accordance with RFC 2396 and RFC 2732 by default. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing is enabled, the string is considered to be well-formed in accordance with RFC 3986 and RFC 3987  </p>\n<p> The string is considered poorly formed, causing the method to return false, if any of the following conditions occur.  </p>\n<table>\n<thead>\n<tr>\n<th>Error</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>The string is not correctly escaped.</td>\n<td><a href=\"http://www.contoso.com/path???/file\" data-linktype=\"external\">http://www.contoso.com/path???/file</a> name</td>\n</tr>\n<tr>\n<td>The string is an absolute <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> that represents an implicit file <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</td>\n<td>c:\\\\directory\\filename</td>\n</tr>\n<tr>\n<td>The string is an absolute URI that is missing a slash before the path.</td>\n<td>file://c:/directory/filename</td>\n</tr>\n<tr>\n<td>The string contains unescaped backslashes even if they are treated as forward slashes.</td>\n<td>http:\\\\host/path/file</td>\n</tr>\n<tr>\n<td>The string represents a hierarchical absolute <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> and does not contain &quot;://&quot;.</td>\n<td>www.contoso.com/path/file</td>\n</tr>\n<tr>\n<td>The parser for the <a class=\"xref\" href=\"system.uri#System_Uri_Scheme_\" data-linktype=\"relative-path\">Scheme</a> indicates that the original string was not well-formed.</td>\n<td>The example depends on the scheme of the URI.</td>\n</tr>\n</tbody>\n</table>\n<p> By default, the string used to construct this <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> are considered well-formed in accordance with RFC 2396 and RFC 2732.  </p>\n<p> When International Resource Identifier (IRI) and Internationalized Domain Name (IDN) support are enabled, the string used to construct this <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> are considered well-formed in accordance with RFC 3986 and RFC 3987. Punycode names used to support IRI contain only ASCII characters and always start with the xn-- prefix.  </p>\n<p> For more information on IRI support, see the Remarks section for the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_IsWellFormedUriString_System_String_System_UriKind_\">\r\n    \r\n            <a id=\"System_Uri_IsWellFormedUriString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IsWellFormedUriString(String,UriKind)</div>        \r\n          </div>\r\n    \r\n            <p>Indicates whether the string is well-formed by attempting to construct a URI with the string and ensures that the string does not require further escaping.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool IsWellFormedUriString (string uriString, UriKind uriKind);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uriString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string used to attempt to construct a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>uriKind</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.urikind\" data-linktype=\"relative-path\">UriKind</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> in <code>uriString</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code>if the string was well-formed; else <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>In versions of .NET before version 4.5, by default the string is considered well-formed in accordance with RFC 2396 and RFC 2732. If International Resource Identifiers (IRIs) or Internationalized Domain Name (IDN) parsing are enabled, the string is considered well-formed in accordance with RFC 3986 and RFC 3987.  </p>\n<p> Beginning in .NET 4.5, strings are always considered well-formed in accordance with RFC 3986 and RFC 3987, whether or not IRI or IDN are enabled. Note, however, that this is only true for apps that target .NET 4.5 or later. Apps that target .NET 4.0 invoke compatibility code, and experience the old (pre-4.5) behavior.  </p>\n<p> The string is considered poorly formed, causing the method to return false, if any of the following conditions occur  </p>\n<table>\n<thead>\n<tr>\n<th>Error</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>The string is not correctly escaped.</td>\n<td><a href=\"http://www.contoso.com/path???/file\" data-linktype=\"external\">http://www.contoso.com/path???/file</a> name</td>\n</tr>\n<tr>\n<td>The string is an absolute <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> that represents an implicit file <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</td>\n<td>c:\\\\directory\\filename</td>\n</tr>\n<tr>\n<td>The string is an absolute URI that is missing a slash before the path.</td>\n<td>file://c:/directory/filename</td>\n</tr>\n<tr>\n<td>The string contains unescaped backslashes even if they will be treated as forward slashes</td>\n<td>http:\\\\host/path/file</td>\n</tr>\n<tr>\n<td>The string represents a hierarchical absolute <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> and does not contain &quot;://&quot;</td>\n<td>www.contoso.com/path/file</td>\n</tr>\n<tr>\n<td>The parser for the <a class=\"xref\" href=\"system.uri#System_Uri_Scheme_\" data-linktype=\"relative-path\">Scheme</a> indicates that the original string was not well-formed.</td>\n<td>The example depends on the scheme of the URI.</td>\n</tr>\n<tr>\n<td>Beginning with .NET 4.5, relative URIs with a colon (&#39;:&#39;) in their first segment are not considered well-formed.</td>\n<td>2013.05.29_14:33:41</td>\n</tr>\n</tbody>\n</table>\n<p> For more information on IRI support, see the Remarks section for the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> class.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_MakeRelative_System_Uri_\">\r\n    \r\n            <a id=\"System_Uri_MakeRelative_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MakeRelative(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Determines the difference between two <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string MakeRelative (Uri toUri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>toUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI to compare to the current URI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>If the hostname and scheme of this URI instance and <code>toUri</code> are the same, then this method returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that represents a relative URI that, when appended to the current URI instance, yields the <code>toUri</code> parameter.  </p>\n<p> If the hostname or scheme is different, then this method returns a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that represents the <code>toUri</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>toUri</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this method is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table shows the URI instance, <code>toUri</code>, and the results of calling MakeRelative.  </p>\n<table>\n<thead>\n<tr>\n<th>Current URI instance</th>\n<th><code>toUri</code></th>\n<th>Return value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://www.contoso.com/\" data-linktype=\"external\">http://www.contoso.com/</a></td>\n<td><a href=\"http://www.contoso.com/test/test.htm\" data-linktype=\"external\">http://www.contoso.com/test/test.htm</a></td>\n<td>test/test.htm</td>\n</tr>\n<tr>\n<td><a href=\"http://www.contoso.com/test1/\" data-linktype=\"external\">http://www.contoso.com/test1/</a></td>\n<td><a href=\"http://www.contoso.com/\" data-linktype=\"external\">http://www.contoso.com/</a></td>\n<td>../</td>\n</tr>\n<tr>\n<td><a href=\"http://www.contoso.com:8000/\" data-linktype=\"external\">http://www.contoso.com:8000/</a></td>\n<td><a href=\"http://www.contoso.com/test/test.htm\" data-linktype=\"external\">http://www.contoso.com/test/test.htm</a></td>\n<td><a href=\"http://www.contoso.com/test/test.htm\" data-linktype=\"external\">http://www.contoso.com/test/test.htm</a></td>\n</tr>\n<tr>\n<td><a href=\"http://username@www.contoso.com/\" data-linktype=\"external\">http://username@www.contoso.com/</a></td>\n<td><a href=\"http://www.contoso.com/test1/test1.txt\" data-linktype=\"external\">http://www.contoso.com/test1/test1.txt</a></td>\n<td>test1/test1.txt</td>\n</tr>\n</tbody>\n</table>\n<p> User information, if present in the URI, is ignored.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates 2 <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances. The difference in the path information is written to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#3\">            // Create a base Uri.\n            Uri address1 = new Uri(&quot;http://www.contoso.com/&quot;);\n\n            // Create a new Uri from a string.\n            Uri address2 = new Uri(&quot;http://www.contoso.com/index.htm?date=today&quot;); \n           \n            // Determine the relative Uri.  \n            Console.WriteLine(&quot;The difference is {0}&quot;, address1.MakeRelativeUri(address2));\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#3\">         // Create a base Uri.\n         Uri^ address1 = gcnew Uri( &quot;http://www.contoso.com/&quot; );\n         \n         // Create a new Uri from a string.\n         Uri^ address2 = gcnew Uri( &quot;http://www.contoso.com/index.htm?date=today&quot; );\n         \n         // Determine the relative Uri.  \n         Console::WriteLine( &quot;The difference is {0}&quot;, address1-&gt;MakeRelativeUri( address2 ) );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#3\">        &#39; Create a base Uri.\n        Dim address1 As New Uri(&quot;http://www.contoso.com/&quot;)\n        \n        &#39; Create a new Uri from a string.\n        Dim address2 As New Uri(&quot;http://www.contoso.com/index.htm?date=today&quot;)\n        \n        &#39; Determine the relative Uri.  \n        Console.WriteLine(&quot;The difference is {0}&quot;, address1.MakeRelativeUri(address2))\n    \n    End Sub &#39;SampleMakeRelative\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_MakeRelativeUri_System_Uri_\">\r\n    \r\n            <a id=\"System_Uri_MakeRelativeUri_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MakeRelativeUri(Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Determines the difference between two <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public Uri MakeRelativeUri (Uri uri);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The URI to compare to the current URI.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </div>\r\n                  <p>If the hostname and scheme of this URI instance and <code>uri</code> are the same, then this method returns a relative <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> that, when appended to the current URI instance, yields <code>uri</code>.  </p>\n<p> If the hostname or scheme is different, then this method returns a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> that represents the <code>uri</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>uri</code> is <code>null</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>This instance represents a relative URI, and this property is valid only for absolute URIs.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The following table shows the URI instance, <code>toUri</code>, and the results of calling MakeRelativeUri.  </p>\n<table>\n<thead>\n<tr>\n<th>Current URI instance</th>\n<th><code>toUri</code></th>\n<th>Return value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"http://www.contoso.com/\" data-linktype=\"external\">http://www.contoso.com/</a></td>\n<td><a href=\"http://www.contoso.com/test/test.htm\" data-linktype=\"external\">http://www.contoso.com/test/test.htm</a></td>\n<td>test/test.htm</td>\n</tr>\n<tr>\n<td><a href=\"http://www.contoso.com/test1/\" data-linktype=\"external\">http://www.contoso.com/test1/</a></td>\n<td><a href=\"http://www.contoso.com/\" data-linktype=\"external\">http://www.contoso.com/</a></td>\n<td>../</td>\n</tr>\n<tr>\n<td><a href=\"http://www.contoso.com:8000/\" data-linktype=\"external\">http://www.contoso.com:8000/</a></td>\n<td><a href=\"http://www.contoso.com/test/test.htm\" data-linktype=\"external\">http://www.contoso.com/test/test.htm</a></td>\n<td><a href=\"http://www.contoso.com/test/test.htm\" data-linktype=\"external\">http://www.contoso.com/test/test.htm</a></td>\n</tr>\n<tr>\n<td><a href=\"http://username@www.contoso.com/\" data-linktype=\"external\">http://username@www.contoso.com/</a></td>\n<td><a href=\"http://www.contoso.com/test1/test1.txt\" data-linktype=\"external\">http://www.contoso.com/test1/test1.txt</a></td>\n<td>test1/test1.txt</td>\n</tr>\n</tbody>\n</table>\n<p> User information, if present in the URI, is ignored.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates 2 <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances. The difference in the path information is written to the console.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#3\">            // Create a base Uri.\n            Uri address1 = new Uri(&quot;http://www.contoso.com/&quot;);\n\n            // Create a new Uri from a string.\n            Uri address2 = new Uri(&quot;http://www.contoso.com/index.htm?date=today&quot;); \n           \n            // Determine the relative Uri.  \n            Console.WriteLine(&quot;The difference is {0}&quot;, address1.MakeRelativeUri(address2));\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#3\">         // Create a base Uri.\n         Uri^ address1 = gcnew Uri( &quot;http://www.contoso.com/&quot; );\n         \n         // Create a new Uri from a string.\n         Uri^ address2 = gcnew Uri( &quot;http://www.contoso.com/index.htm?date=today&quot; );\n         \n         // Determine the relative Uri.  \n         Console::WriteLine( &quot;The difference is {0}&quot;, address1-&gt;MakeRelativeUri( address2 ) );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#3\">        &#39; Create a base Uri.\n        Dim address1 As New Uri(&quot;http://www.contoso.com/&quot;)\n        \n        &#39; Create a new Uri from a string.\n        Dim address2 As New Uri(&quot;http://www.contoso.com/index.htm?date=today&quot;)\n        \n        &#39; Determine the relative Uri.  \n        Console.WriteLine(&quot;The difference is {0}&quot;, address1.MakeRelativeUri(address2))\n    \n    End Sub &#39;SampleMakeRelative\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_Parse\">\r\n    \r\n            <a id=\"System_Uri_Parse_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Parse()</div>        \r\n          </div>\r\n    \r\n            <p>Parses the URI of the current instance to ensure it contains all the parts required for a valid URI.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual void Parse ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uriformatexception\" data-linktype=\"relative-path\">UriFormatException</a></div>\r\n                  </div>\r\n                  <p>The Uri passed from the constructor is invalid.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_ToString\">\r\n    \r\n            <a id=\"System_Uri_ToString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ToString()</div>        \r\n          </div>\r\n    \r\n            <p>Gets a canonical string representation for the specified <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string ToString ();</code></pre>\r\n    \r\n    \r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> instance that contains the unescaped canonical representation of the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance. All characters are unescaped except #, ?, and %.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The string returned by this method does not contain port information when the port is the default port for the scheme.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> The string returned by the ToString method may contain control characters, which can corrupt the state of a console application. You can use the <a class=\"xref\" href=\"system.uri#System_Uri_GetComponents_\" data-linktype=\"relative-path\">GetComponents</a> method with the <a class=\"xref\" href=\"system.uriformat\" data-linktype=\"relative-path\">System.UriFormat</a> format to remove control characters from the returned string.</p>\n</div>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates a new <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance from a string. It illustrates the difference between the value returned from <a class=\"xref\" href=\"system.uri#System_Uri_OriginalString_\" data-linktype=\"relative-path\">OriginalString</a>, which returns the string that was passed to the constructor, and from a call to ToString, which returns the canonical form of the string.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#7\">            // Create a new Uri from a string address.\n            Uri uriAddress = new Uri(&quot;HTTP://www.Contoso.com:80/thick%20and%20thin.htm&quot;);\n\n            // Write the new Uri to the console and note the difference in the two values.\n            // ToString() gives the canonical version.  OriginalString gives the orginal \n            // string that was passed to the constructor.\n\n            // The following outputs &quot;http://www.contoso.com/thick and thin.htm&quot;.\n            Console.WriteLine(uriAddress.ToString()); \n\n            // The following outputs &quot;HTTP://www.Contoso.com:80/thick%20and%20thin.htm&quot;.\n            Console.WriteLine(uriAddress.OriginalString);\n</code></pre><pre><code class=\"lang-cpp\" name=\"NCLUriExamples#7\">         // Create a new Uri from a string address.\n         Uri^ uriAddress = gcnew Uri( &quot;HTTP://www.Contoso.com:80/thick%20and%20thin.htm&quot; );\n         \n         // Write the new Uri to the console and note the difference in the two values.\n         // ToString() gives the canonical version.  OriginalString gives the orginal \n         // string that was passed to the constructor.\n         // The following outputs &quot;http://www.contoso.com/thick and thin.htm&quot;.\n         Console::WriteLine( uriAddress );\n         \n         // The following outputs &quot;HTTP://www.Contoso.com:80/thick%20and%20thin.htm&quot;.\n         Console::WriteLine( uriAddress-&gt;OriginalString );\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriExamples#7\">        &#39; Create a new Uri from a string address.\n        Dim uriAddress As New Uri(&quot;HTTP://www.Contoso.com:80/thick%20and%20thin.htm&quot;)\n        \n        &#39; Write the new Uri to the console and note the difference in the two values.\n        &#39; ToString() gives the canonical version.  OriginalString gives the orginal \n        &#39; string that was passed to the constructor.\n        &#39; The following outputs &quot;http://www.contoso.com/thick and thin.htm&quot;.\n        Console.WriteLine(uriAddress.ToString())\n        \n        &#39; The following outputs &quot;HTTP://www.Contoso.com:80/thick%20and%20thin.htm&quot;.\n        Console.WriteLine(uriAddress.OriginalString)\n    \n    End Sub &#39;SampleToString\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_TryCreate_System_String_System_UriKind_System_Uri__\">\r\n    \r\n            <a id=\"System_Uri_TryCreate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryCreate(String,UriKind,Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> using the specified <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> instance and a <a class=\"xref\" href=\"system.urikind\" data-linktype=\"relative-path\">UriKind</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool TryCreate (string uriString, UriKind uriKind, out Uri result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uriString</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> representing the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>uriKind</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.urikind\" data-linktype=\"relative-path\">UriKind</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The type of the Uri.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains the constructed <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> was successfully created; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this method returns <code>true</code>, the new <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> is in <code>result</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_TryCreate_System_Uri_System_String_System_Uri__\">\r\n    \r\n            <a id=\"System_Uri_TryCreate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryCreate(Uri,String,Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> using the specified base and relative <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> instances.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool TryCreate (Uri baseUri, string relativeUri, out Uri result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>baseUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The base <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>relativeUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The relative <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>, represented as a <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a>, to add to the base <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> constructed from <code>baseUri</code> and <code>relativeUri</code>. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> was successfully created; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this method returns <code>true</code>, the new <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> is in <code>result</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_TryCreate_System_Uri_System_Uri_System_Uri__\">\r\n    \r\n            <a id=\"System_Uri_TryCreate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">TryCreate(Uri,Uri,Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Creates a new <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> using the specified base and relative <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool TryCreate (Uri baseUri, Uri relativeUri, out Uri result);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>baseUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The base <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>relativeUri</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The relative <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> to add to the base <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>result</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>When this method returns, contains a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> constructed from <code>baseUri</code> and <code>relativeUri</code>. This parameter is passed uninitialized.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> was successfully created; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>baseUri</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>If this method returns <code>true</code>, the new <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> is in <code>result</code>.  </p>\n<p> This method constructs the URI, puts it in canonical form, and validates it. If an unhandled exception occurs, this method catches it. If you want to create a <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> and get exceptions use one of the <a class=\"xref\" href=\"system.uri#System_Uri__ctor_\" data-linktype=\"relative-path\">Uri</a> constructors.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_Unescape_System_String_\">\r\n    \r\n            <a id=\"System_Uri_Unescape_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Unescape(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts the specified string by replacing any escape sequences with their unescaped representation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected virtual string Unescape (string path);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>path</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> to convert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the unescaped value of the <code>path</code> parameter.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_UnescapeDataString_System_String_\">\r\n    \r\n            <a id=\"System_Uri_UnescapeDataString_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UnescapeDataString(String)</div>        \r\n          </div>\r\n    \r\n            <p>Converts a string to its unescaped representation.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static string UnescapeDataString (string stringToUnescape);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>stringToUnescape</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The string to unescape.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a> that contains the unescaped representation of <code>stringToUnescape</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p><code>stringToUnescape</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>You should use this method with care. Unescaping a string that has been previously unescaped can lead to ambiguities and errors.  </p>\n<p> Many Web browsers escape spaces inside of URIs into plus (&quot;+&quot;) characters; however, the UnescapeDataString method does not convert plus characters into spaces because this behavior is not standard across all URI schemes.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example unescapes a URI, and then converts any plus characters (&quot;+&quot;) into spaces.  </p>\n<pre><code class=\"lang-cs\" name=\"NCLUriExamples#19\">            String DataString = Uri.UnescapeDataString(&quot;.NET+Framework&quot;);\n            Console.WriteLine(&quot;Unescaped string: {0}&quot;, DataString);\n\n            String PlusString = DataString.Replace(&#39;+&#39;,&#39; &#39;);\n            Console.WriteLine(&quot;plus to space string: {0}&quot;, PlusString);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"operators\">\r\n        <h2>Operators\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_op_Equality_System_Uri_System_Uri_\">\r\n    \r\n            <a id=\"System_Uri_op_Equality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Equality(Uri,Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether two <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances have the same value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Equality (Uri uri1, Uri uri2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance to compare with <code>uri2</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance to compare with <code>uri1</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances are equivalent; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload uses the <a class=\"xref\" href=\"system.uri#System_Uri_Equals_\" data-linktype=\"relative-path\">Equals</a> method to determine whether the two <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances are equivalent. <a class=\"xref\" href=\"system.uri#System_Uri_UserInfo_\" data-linktype=\"relative-path\">UserInfo</a> and <a class=\"xref\" href=\"system.uri#System_Uri_Fragment_\" data-linktype=\"relative-path\">Fragment</a> content is ignored when making this comparison.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example creates three <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances from strings and compares them to determine whether they represent the same value. <code>Address1</code> and <code>Address2</code> are the same because the <a class=\"xref\" href=\"system.uri#System_Uri_Fragment_\" data-linktype=\"relative-path\">Fragment</a> portion is ignored for this comparison. The outcome is written to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLUriEnhancements#5\">   // Create some Uris.\n   Uri^ address1 = gcnew Uri( &quot;http://www.contoso.com/index.htm#search&quot; );\n   Uri^ address2 = gcnew Uri( &quot;http://www.contoso.com/index.htm&quot; );\n   Uri^ address3 = gcnew Uri( &quot;http://www.contoso.com/index.htm?date=today&quot; );\n\n   // The first two are equal because the fragment is ignored.\n   if ( address1 == address2 )\n      Console::WriteLine( &quot;{0} is equal to {1}&quot;, address1, address2 );\n\n   // The second two are not equal.\n   if ( address2 != address3 )\n      Console::WriteLine( &quot;{0} is not equal to {1}&quot;, address2, address3 );\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLUriEnhancements#5\">            // Create some Uris.\n            Uri address1 = new Uri(&quot;http://www.contoso.com/index.htm#search&quot;);\n            Uri address2 = new Uri(&quot;http://www.contoso.com/index.htm&quot;); \n            Uri address3 = new Uri(&quot;http://www.contoso.com/index.htm?date=today&quot;); \n\n            // The first two are equal because the fragment is ignored.\n            if (address1 == address2)\n                Console.WriteLine(&quot;{0} is equal to {1}&quot;, address1.ToString(), address2.ToString());\n\n            // The second two are not equal.\n            if (address2 != address3)\n                Console.WriteLine(&quot;{0} is not equal to {1}&quot;, address2.ToString(), address3.ToString());\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriEnhancements#5\">        &#39; Create some Uris.\n        Dim address1 As New Uri(&quot;http://www.contoso.com/index.htm#search&quot;)\n        Dim address2 As New Uri(&quot;http://www.contoso.com/index.htm&quot;)\n        Dim address3 As New Uri(&quot;http://www.contoso.com/index.htm?date=today&quot;)\n        \n        &#39; The first two are equal because the fragment is ignored.\n        If address1 = address2 Then\n            Console.WriteLine(&quot;{0} is equal to {1}&quot;, address1.ToString(), address2.ToString())\n        End If \n        &#39; The second two are not equal.\n        If address2 &lt;&gt; address3 Then\n            Console.WriteLine(&quot;{0} is not equal to {1}&quot;, address2.ToString(), address3.ToString())\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_op_Inequality_System_Uri_System_Uri_\">\r\n    \r\n            <a id=\"System_Uri_op_Inequality_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">op_Inequality(Uri,Uri)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether two <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances do not have the same value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static bool op_Inequality (Uri uri1, Uri uri2);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri1</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance to compare with <code>uri2</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>uri2</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instance to compare with <code>uri1</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a> value that is <code>true</code> if the two <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances are not equal; otherwise, <code>false</code>. If either parameter is <code>null</code>, this method returns <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This overload uses the <a class=\"xref\" href=\"system.uri#System_Uri_Equals_\" data-linktype=\"relative-path\">Equals</a> method to determine whether the two <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances are not equivalent. <a class=\"xref\" href=\"system.uri#System_Uri_UserInfo_\" data-linktype=\"relative-path\">UserInfo</a> and <a class=\"xref\" href=\"system.uri#System_Uri_Fragment_\" data-linktype=\"relative-path\">Fragment</a> content is ignored when making this comparison.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>This example creates three <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a> instances from strings and compares them to determine whether they represent the same value. <code>Address2</code> and <code>Address3</code> are not the same because <code>Address3</code> contains a <a class=\"xref\" href=\"system.uri#System_Uri_Query_\" data-linktype=\"relative-path\">Query</a> that is not found in <code>Address2</code>. The outcome is written to the console.  </p>\n<pre><code class=\"lang-cpp\" name=\"NCLUriEnhancements#5\">   // Create some Uris.\n   Uri^ address1 = gcnew Uri( &quot;http://www.contoso.com/index.htm#search&quot; );\n   Uri^ address2 = gcnew Uri( &quot;http://www.contoso.com/index.htm&quot; );\n   Uri^ address3 = gcnew Uri( &quot;http://www.contoso.com/index.htm?date=today&quot; );\n\n   // The first two are equal because the fragment is ignored.\n   if ( address1 == address2 )\n      Console::WriteLine( &quot;{0} is equal to {1}&quot;, address1, address2 );\n\n   // The second two are not equal.\n   if ( address2 != address3 )\n      Console::WriteLine( &quot;{0} is not equal to {1}&quot;, address2, address3 );\n</code></pre><pre><code class=\"lang-cs\" name=\"NCLUriEnhancements#5\">            // Create some Uris.\n            Uri address1 = new Uri(&quot;http://www.contoso.com/index.htm#search&quot;);\n            Uri address2 = new Uri(&quot;http://www.contoso.com/index.htm&quot;); \n            Uri address3 = new Uri(&quot;http://www.contoso.com/index.htm?date=today&quot;); \n\n            // The first two are equal because the fragment is ignored.\n            if (address1 == address2)\n                Console.WriteLine(&quot;{0} is equal to {1}&quot;, address1.ToString(), address2.ToString());\n\n            // The second two are not equal.\n            if (address2 != address3)\n                Console.WriteLine(&quot;{0} is not equal to {1}&quot;, address2.ToString(), address3.ToString());\n</code></pre><pre><code class=\"lang-vb\" name=\"NCLUriEnhancements#5\">        &#39; Create some Uris.\n        Dim address1 As New Uri(&quot;http://www.contoso.com/index.htm#search&quot;)\n        Dim address2 As New Uri(&quot;http://www.contoso.com/index.htm&quot;)\n        Dim address3 As New Uri(&quot;http://www.contoso.com/index.htm?date=today&quot;)\n        \n        &#39; The first two are equal because the fragment is ignored.\n        If address1 = address2 Then\n            Console.WriteLine(&quot;{0} is equal to {1}&quot;, address1.ToString(), address2.ToString())\n        End If \n        &#39; The second two are not equal.\n        If address2 &lt;&gt; address3 Then\n            Console.WriteLine(&quot;{0} is not equal to {1}&quot;, address2.ToString(), address3.ToString())\n        End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Uri_System_Runtime_Serialization_ISerializable_GetObjectData_System_Runtime_Serialization_SerializationInfo_System_Runtime_Serialization_StreamingContext_\">\r\n    \r\n            <a id=\"System_Uri_System_Runtime_Serialization_ISerializable_GetObjectData_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ISerializable.GetObjectData(SerializationInfo,StreamingContext)</div>        \r\n          </div>\r\n    \r\n            <p>Returns the data needed to serialize the current instance.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>serializationInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.serializationinfo\" data-linktype=\"relative-path\">SerializationInfo</a> object containing the information required to serialize the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>streamingContext</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.runtime.serialization.streamingcontext\" data-linktype=\"relative-path\">StreamingContext</a> object containing the source and destination of the serialized stream associated with the <a class=\"xref\" href=\"system.uri\" data-linktype=\"relative-path\">Uri</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Uri.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Uri.yml\">\r\n<meta name=\"APIName\" content=\"System.Uri\">\r\n<meta name=\"APIName\" content=\"System.Uri..ctor\">\r\n<meta name=\"APIName\" content=\"System.Uri.AbsolutePath\">\r\n<meta name=\"APIName\" content=\"System.Uri.AbsoluteUri\">\r\n<meta name=\"APIName\" content=\"System.Uri.Authority\">\r\n<meta name=\"APIName\" content=\"System.Uri.Canonicalize\">\r\n<meta name=\"APIName\" content=\"System.Uri.CheckHostName\">\r\n<meta name=\"APIName\" content=\"System.Uri.CheckSchemeName\">\r\n<meta name=\"APIName\" content=\"System.Uri.CheckSecurity\">\r\n<meta name=\"APIName\" content=\"System.Uri.Compare\">\r\n<meta name=\"APIName\" content=\"System.Uri.DnsSafeHost\">\r\n<meta name=\"APIName\" content=\"System.Uri.Equals\">\r\n<meta name=\"APIName\" content=\"System.Uri.Escape\">\r\n<meta name=\"APIName\" content=\"System.Uri.EscapeDataString\">\r\n<meta name=\"APIName\" content=\"System.Uri.EscapeString\">\r\n<meta name=\"APIName\" content=\"System.Uri.EscapeUriString\">\r\n<meta name=\"APIName\" content=\"System.Uri.Fragment\">\r\n<meta name=\"APIName\" content=\"System.Uri.FromHex\">\r\n<meta name=\"APIName\" content=\"System.Uri.GetComponents\">\r\n<meta name=\"APIName\" content=\"System.Uri.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Uri.GetLeftPart\">\r\n<meta name=\"APIName\" content=\"System.Uri.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Uri.HexEscape\">\r\n<meta name=\"APIName\" content=\"System.Uri.HexUnescape\">\r\n<meta name=\"APIName\" content=\"System.Uri.Host\">\r\n<meta name=\"APIName\" content=\"System.Uri.HostNameType\">\r\n<meta name=\"APIName\" content=\"System.Uri.IdnHost\">\r\n<meta name=\"APIName\" content=\"System.Uri.IsAbsoluteUri\">\r\n<meta name=\"APIName\" content=\"System.Uri.IsBadFileSystemCharacter\">\r\n<meta name=\"APIName\" content=\"System.Uri.IsBaseOf\">\r\n<meta name=\"APIName\" content=\"System.Uri.IsDefaultPort\">\r\n<meta name=\"APIName\" content=\"System.Uri.IsExcludedCharacter\">\r\n<meta name=\"APIName\" content=\"System.Uri.IsFile\">\r\n<meta name=\"APIName\" content=\"System.Uri.IsHexDigit\">\r\n<meta name=\"APIName\" content=\"System.Uri.IsHexEncoding\">\r\n<meta name=\"APIName\" content=\"System.Uri.IsLoopback\">\r\n<meta name=\"APIName\" content=\"System.Uri.IsReservedCharacter\">\r\n<meta name=\"APIName\" content=\"System.Uri.IsUnc\">\r\n<meta name=\"APIName\" content=\"System.Uri.IsWellFormedOriginalString\">\r\n<meta name=\"APIName\" content=\"System.Uri.IsWellFormedUriString\">\r\n<meta name=\"APIName\" content=\"System.Uri.LocalPath\">\r\n<meta name=\"APIName\" content=\"System.Uri.MakeRelative\">\r\n<meta name=\"APIName\" content=\"System.Uri.MakeRelativeUri\">\r\n<meta name=\"APIName\" content=\"System.Uri.op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Uri.op_op_Equality\">\r\n<meta name=\"APIName\" content=\"System.Uri.op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Uri.op_op_Inequality\">\r\n<meta name=\"APIName\" content=\"System.Uri.OriginalString\">\r\n<meta name=\"APIName\" content=\"System.Uri.Parse\">\r\n<meta name=\"APIName\" content=\"System.Uri.PathAndQuery\">\r\n<meta name=\"APIName\" content=\"System.Uri.Port\">\r\n<meta name=\"APIName\" content=\"System.Uri.Query\">\r\n<meta name=\"APIName\" content=\"System.Uri.Scheme\">\r\n<meta name=\"APIName\" content=\"System.Uri.SchemeDelimiter\">\r\n<meta name=\"APIName\" content=\"System.Uri.Segments\">\r\n<meta name=\"APIName\" content=\"System.Uri.ISerializable.GetObjectData\">\r\n<meta name=\"APIName\" content=\"System.Uri.ToString\">\r\n<meta name=\"APIName\" content=\"System.Uri.TryCreate\">\r\n<meta name=\"APIName\" content=\"System.Uri.Unescape\">\r\n<meta name=\"APIName\" content=\"System.Uri.UnescapeDataString\">\r\n<meta name=\"APIName\" content=\"System.Uri.UriSchemeFile\">\r\n<meta name=\"APIName\" content=\"System.Uri.UriSchemeFtp\">\r\n<meta name=\"APIName\" content=\"System.Uri.UriSchemeGopher\">\r\n<meta name=\"APIName\" content=\"System.Uri.UriSchemeHttp\">\r\n<meta name=\"APIName\" content=\"System.Uri.UriSchemeHttps\">\r\n<meta name=\"APIName\" content=\"System.Uri.UriSchemeMailto\">\r\n<meta name=\"APIName\" content=\"System.Uri.UriSchemeNetPipe\">\r\n<meta name=\"APIName\" content=\"System.Uri.UriSchemeNetTcp\">\r\n<meta name=\"APIName\" content=\"System.Uri.UriSchemeNews\">\r\n<meta name=\"APIName\" content=\"System.Uri.UriSchemeNntp\">\r\n<meta name=\"APIName\" content=\"System.Uri.UserEscaped\">\r\n<meta name=\"APIName\" content=\"System.Uri.UserInfo\">\r\n<meta name=\"APILocation\" content=\"System.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"ebfce10a-3372-322e-e65c-acc09a2c8607\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides an object representation of a uniform resource identifier (URI) and easy access to the parts of the URI.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Uri\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Uri.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Uri.yml","open_to_public_contributors":true,"api_name":["System.Uri","System.Uri..ctor","System.Uri.AbsolutePath","System.Uri.AbsoluteUri","System.Uri.Authority","System.Uri.Canonicalize","System.Uri.CheckHostName","System.Uri.CheckSchemeName","System.Uri.CheckSecurity","System.Uri.Compare","System.Uri.DnsSafeHost","System.Uri.Equals","System.Uri.Escape","System.Uri.EscapeDataString","System.Uri.EscapeString","System.Uri.EscapeUriString","System.Uri.Fragment","System.Uri.FromHex","System.Uri.GetComponents","System.Uri.GetHashCode","System.Uri.GetLeftPart","System.Uri.GetObjectData","System.Uri.HexEscape","System.Uri.HexUnescape","System.Uri.Host","System.Uri.HostNameType","System.Uri.IdnHost","System.Uri.IsAbsoluteUri","System.Uri.IsBadFileSystemCharacter","System.Uri.IsBaseOf","System.Uri.IsDefaultPort","System.Uri.IsExcludedCharacter","System.Uri.IsFile","System.Uri.IsHexDigit","System.Uri.IsHexEncoding","System.Uri.IsLoopback","System.Uri.IsReservedCharacter","System.Uri.IsUnc","System.Uri.IsWellFormedOriginalString","System.Uri.IsWellFormedUriString","System.Uri.LocalPath","System.Uri.MakeRelative","System.Uri.MakeRelativeUri","System.Uri.op_Equality","System.Uri.op_op_Equality","System.Uri.op_Inequality","System.Uri.op_op_Inequality","System.Uri.OriginalString","System.Uri.Parse","System.Uri.PathAndQuery","System.Uri.Port","System.Uri.Query","System.Uri.Scheme","System.Uri.SchemeDelimiter","System.Uri.Segments","System.Uri.ISerializable.GetObjectData","System.Uri.ToString","System.Uri.TryCreate","System.Uri.Unescape","System.Uri.UnescapeDataString","System.Uri.UriSchemeFile","System.Uri.UriSchemeFtp","System.Uri.UriSchemeGopher","System.Uri.UriSchemeHttp","System.Uri.UriSchemeHttps","System.Uri.UriSchemeMailto","System.Uri.UriSchemeNetPipe","System.Uri.UriSchemeNetTcp","System.Uri.UriSchemeNews","System.Uri.UriSchemeNntp","System.Uri.UserEscaped","System.Uri.UserInfo"],"api_location":["System.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Uri","System::Uri","System.Uri.#ctor","System::Uri::#ctor","System.Uri.AbsolutePath","System::Uri::AbsolutePath","System.Uri.AbsoluteUri","System::Uri::AbsoluteUri","System.Uri.Authority","System::Uri::Authority","System.Uri.Canonicalize","System::Uri::Canonicalize","System.Uri.CheckHostName","System::Uri::CheckHostName","System.Uri.CheckSchemeName","System::Uri::CheckSchemeName","System.Uri.CheckSecurity","System::Uri::CheckSecurity","System.Uri.Compare","System::Uri::Compare","System.Uri.DnsSafeHost","System::Uri::DnsSafeHost","System.Uri.Equals","System::Uri::Equals","System.Uri.Escape","System::Uri::Escape","System.Uri.EscapeDataString","System::Uri::EscapeDataString","System.Uri.EscapeString","System::Uri::EscapeString","System.Uri.EscapeUriString","System::Uri::EscapeUriString","System.Uri.Fragment","System::Uri::Fragment","System.Uri.FromHex","System::Uri::FromHex","System.Uri.GetComponents","System::Uri::GetComponents","System.Uri.GetHashCode","System::Uri::GetHashCode","System.Uri.GetLeftPart","System::Uri::GetLeftPart","System.Uri.GetObjectData","System::Uri::GetObjectData","System.Uri.HexEscape","System::Uri::HexEscape","System.Uri.HexUnescape","System::Uri::HexUnescape","System.Uri.Host","System::Uri::Host","System.Uri.HostNameType","System::Uri::HostNameType","System.Uri.IdnHost","System::Uri::IdnHost","System.Uri.IsAbsoluteUri","System::Uri::IsAbsoluteUri","System.Uri.IsBadFileSystemCharacter","System::Uri::IsBadFileSystemCharacter","System.Uri.IsBaseOf","System::Uri::IsBaseOf","System.Uri.IsDefaultPort","System::Uri::IsDefaultPort","System.Uri.IsExcludedCharacter","System::Uri::IsExcludedCharacter","System.Uri.IsFile","System::Uri::IsFile","System.Uri.IsHexDigit","System::Uri::IsHexDigit","System.Uri.IsHexEncoding","System::Uri::IsHexEncoding","System.Uri.IsLoopback","System::Uri::IsLoopback","System.Uri.IsReservedCharacter","System::Uri::IsReservedCharacter","System.Uri.IsUnc","System::Uri::IsUnc","System.Uri.IsWellFormedOriginalString","System::Uri::IsWellFormedOriginalString","System.Uri.IsWellFormedUriString","System::Uri::IsWellFormedUriString","System.Uri.LocalPath","System::Uri::LocalPath","System.Uri.MakeRelative","System::Uri::MakeRelative","System.Uri.MakeRelativeUri","System::Uri::MakeRelativeUri","System.Uri.op_Equality","System::Uri::op_Equality","System.Uri.op_Inequality","System::Uri::op_Inequality","System.Uri.OriginalString","System::Uri::OriginalString","System.Uri.Parse","System::Uri::Parse","System.Uri.PathAndQuery","System::Uri::PathAndQuery","System.Uri.Port","System::Uri::Port","System.Uri.Query","System::Uri::Query","System.Uri.Scheme","System::Uri::Scheme","System.Uri.SchemeDelimiter","System::Uri::SchemeDelimiter","System.Uri.Segments","System::Uri::Segments","System.Uri.System#Runtime#Serialization#ISerializable#GetObjectData","System::Uri::System#Runtime#Serialization#ISerializable#GetObjectData","System.Uri.ToString","System::Uri::ToString","System.Uri.TryCreate","System::Uri::TryCreate","System.Uri.Unescape","System::Uri::Unescape","System.Uri.UnescapeDataString","System::Uri::UnescapeDataString","System.Uri.UriSchemeFile","System::Uri::UriSchemeFile","System.Uri.UriSchemeFtp","System::Uri::UriSchemeFtp","System.Uri.UriSchemeGopher","System::Uri::UriSchemeGopher","System.Uri.UriSchemeHttp","System::Uri::UriSchemeHttp","System.Uri.UriSchemeHttps","System::Uri::UriSchemeHttps","System.Uri.UriSchemeMailto","System::Uri::UriSchemeMailto","System.Uri.UriSchemeNetPipe","System::Uri::UriSchemeNetPipe","System.Uri.UriSchemeNetTcp","System::Uri::UriSchemeNetTcp","System.Uri.UriSchemeNews","System::Uri::UriSchemeNews","System.Uri.UriSchemeNntp","System::Uri::UriSchemeNntp","System.Uri.UserEscaped","System::Uri::UserEscaped","System.Uri.UserInfo","System::Uri::UserInfo"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"ebfce10a-3372-322e-e65c-acc09a2c8607","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/Uri.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"Uri class | Microsoft Docs","_op_ogTitle":"Uri class","description":"Provides an object representation of a uniform resource identifier (URI) and easy access to the parts of the URI.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.Uri","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.uri","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.uri","fileRelativePath":"System.Uri.html"},"themesRelativePathToOutputRoot":"_themes/"}