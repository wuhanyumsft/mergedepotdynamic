{"content":"    \r\n    <h1 id=\"System_Configuration_Install_InstallerCollection\">\r\n      <span class=\"lang-csharp\">InstallerCollection</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Contains a collection of installers to be run during an installation.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public class InstallerCollection : System.Collections.CollectionBase</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase\" data-linktype=\"relative-path\">System.Collections.CollectionBase</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">InstallerCollection</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_Capacity\" data-linktype=\"relative-path\">Capacity</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_Clear\" data-linktype=\"relative-path\">Clear()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_Count\" data-linktype=\"relative-path\">Count</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_GetEnumerator\" data-linktype=\"relative-path\">GetEnumerator()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_InnerList\" data-linktype=\"relative-path\">InnerList</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_List\" data-linktype=\"relative-path\">List</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_OnClear\" data-linktype=\"relative-path\">OnClear()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_OnClearComplete\" data-linktype=\"relative-path\">OnClearComplete()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_OnInsertComplete_System_Int32_System_Object_\" data-linktype=\"relative-path\">OnInsertComplete(Int32,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_OnRemoveComplete_System_Int32_System_Object_\" data-linktype=\"relative-path\">OnRemoveComplete(Int32,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_OnSetComplete_System_Int32_System_Object_System_Object_\" data-linktype=\"relative-path\">OnSetComplete(Int32,Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_OnValidate_System_Object_\" data-linktype=\"relative-path\">OnValidate(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_RemoveAt_System_Int32_\" data-linktype=\"relative-path\">RemoveAt(Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_ICollection_CopyTo_System_Array_System_Int32_\" data-linktype=\"relative-path\">ICollection.CopyTo(Array,Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_ICollection_IsSynchronized\" data-linktype=\"relative-path\">ICollection.IsSynchronized</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_ICollection_SyncRoot\" data-linktype=\"relative-path\">ICollection.SyncRoot</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_IList_Add_System_Object_\" data-linktype=\"relative-path\">IList.Add(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_IList_Contains_System_Object_\" data-linktype=\"relative-path\">IList.Contains(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_IList_IndexOf_System_Object_\" data-linktype=\"relative-path\">IList.IndexOf(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_IList_Insert_System_Int32_System_Object_\" data-linktype=\"relative-path\">IList.Insert(Int32,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_IList_IsFixedSize\" data-linktype=\"relative-path\">IList.IsFixedSize</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_IList_IsReadOnly\" data-linktype=\"relative-path\">IList.IsReadOnly</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_IList_Item_System_Int32_\" data-linktype=\"relative-path\">IList.Item(Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.collections.collectionbase#System_Collections_CollectionBase_System_Collections_IList_Remove_System_Object_\" data-linktype=\"relative-path\">IList.Remove(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The InstallerCollection provides the methods and properties that your application needs to manage a collection of <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> objects.  </p>\n<p> Use any of the following three ways to add installers to the collection:  </p>\n<ul>\n<li><p>The <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_Add_\" data-linktype=\"relative-path\">Add</a> method adds a single installer to the collection.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_AddRange_\" data-linktype=\"relative-path\">AddRange</a> methods add multiple installers to the collection.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_Insert_\" data-linktype=\"relative-path\">Insert</a> method and the <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_Item_\" data-linktype=\"relative-path\">Item</a> property, which is the InstallerCollection indexer, each add a single installer to the collection at the specified index.  </p>\n<p>Remove installers through the <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_Remove_\" data-linktype=\"relative-path\">Remove</a> method. Check whether an installer is in the collection by using the <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_Contains_\" data-linktype=\"relative-path\">Contains</a> method. Find where an installer is located in the collection by using the <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_IndexOf_\" data-linktype=\"relative-path\">IndexOf</a> method.  </p>\n<p>The installers in a collection are run when the installer containing the collection, as specified by the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Parent_\" data-linktype=\"relative-path\">Parent</a> property, calls their <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Install_\" data-linktype=\"relative-path\">Install</a>, <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Commit_\" data-linktype=\"relative-path\">Commit</a>, <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Rollback_\" data-linktype=\"relative-path\">Rollback</a>, or <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Uninstall_\" data-linktype=\"relative-path\">Uninstall</a> methods.  </p>\n<p>For examples of the usage of an installer collection, see the <a class=\"xref\" href=\"system.configuration.install.assemblyinstaller\" data-linktype=\"relative-path\">AssemblyInstaller</a> and <a class=\"xref\" href=\"system.configuration.install.transactedinstaller\" data-linktype=\"relative-path\">TransactedInstaller</a> classes.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_Install_InstallerCollection_Item_System_Int32_\" data-linktype=\"self-bookmark\">Item(Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets or sets an installer at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_Install_InstallerCollection_Add_System_Configuration_Install_Installer_\" data-linktype=\"self-bookmark\">Add(Installer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified installer to this collection of installers.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_Install_InstallerCollection_AddRange_System_Configuration_Install_Installer___\" data-linktype=\"self-bookmark\">AddRange(Installer[])</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified array of installers to this collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_Install_InstallerCollection_AddRange_System_Configuration_Install_InstallerCollection_\" data-linktype=\"self-bookmark\">AddRange(InstallerCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Adds the specified collection of installers to this collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_Install_InstallerCollection_Contains_System_Configuration_Install_Installer_\" data-linktype=\"self-bookmark\">Contains(Installer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified installer is included in collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_Install_InstallerCollection_CopyTo_System_Configuration_Install_Installer___System_Int32_\" data-linktype=\"self-bookmark\">CopyTo(Installer[],Int32)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Copies the items from the collection to an array, begining at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_Install_InstallerCollection_IndexOf_System_Configuration_Install_Installer_\" data-linktype=\"self-bookmark\">IndexOf(Installer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines the index of a specified installer in the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_Install_InstallerCollection_Insert_System_Int32_System_Configuration_Install_Installer_\" data-linktype=\"self-bookmark\">Insert(Int32,Installer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Inserts the specified installer into the collection at the specified index.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_Install_InstallerCollection_OnInsert_System_Int32_System_Object_\" data-linktype=\"self-bookmark\">OnInsert(Int32,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs additional custom processes before a new installer is inserted into the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_Install_InstallerCollection_OnRemove_System_Int32_System_Object_\" data-linktype=\"self-bookmark\">OnRemove(Int32,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs additional custom processes before an installer is removed from the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_Install_InstallerCollection_OnSet_System_Int32_System_Object_System_Object_\" data-linktype=\"self-bookmark\">OnSet(Int32,Object,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs additional custom processes before an existing installer is set to a new value.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Configuration_Install_InstallerCollection_Remove_System_Configuration_Install_Installer_\" data-linktype=\"self-bookmark\">Remove(Installer)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Removes the specified <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> from the collection.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_Install_InstallerCollection_Item_System_Int32_\">\r\n    \r\n            <a id=\"System_Configuration_Install_InstallerCollection_Item_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Item(Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Gets or sets an installer at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Configuration.Install.Installer this[int index] { get; set; }</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index of the installer to get or set.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a></div>\r\n                  </div>\r\n                  <p>An <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> that represents the installer at the specified index.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the specified <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> is placed in the <a class=\"xref\" href=\"system.configuration.install.installercollection\" data-linktype=\"relative-path\">InstallerCollection</a>, the <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Parent_\" data-linktype=\"relative-path\">Parent</a> property of the <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> is set to the <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> that contains the collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates <a class=\"xref\" href=\"system.configuration.install.assemblyinstaller\" data-linktype=\"relative-path\">AssemblyInstaller</a> instances for <code>MyAssembly1.exe</code> and <code>MyAssembly2.exe</code>. These instances are added to a <a class=\"xref\" href=\"system.configuration.install.transactedinstaller\" data-linktype=\"relative-path\">TransactedInstaller</a>. The names of all the assemblies that are to be installed are displayed to the console. The installation process installs both <code>MyAssembly1.exe</code> and <code>MyAssembly2.exe</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"InstallerCollection_Item#1\">         TransactedInstaller myTransactedInstaller = new TransactedInstaller();\n         AssemblyInstaller myAssemblyInstaller;\n         InstallContext myInstallContext;\n\n         // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n         myAssemblyInstaller = \n            new AssemblyInstaller(&quot;MyAssembly1.exe&quot;, null);\n\n         // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n         myTransactedInstaller.Installers.Add(myAssemblyInstaller);\n\n         // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n         myAssemblyInstaller = \n            new AssemblyInstaller(&quot;MyAssembly2.exe&quot;, null);\n\n         // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.  \n         myTransactedInstaller.Installers.Add(myAssemblyInstaller);\n\n         //Print the assemblies to be installed.\n         InstallerCollection myInstallers = myTransactedInstaller.Installers;\n         Console.WriteLine(&quot;<br>Printing all assemblies to be installed&quot;);\n         for(int i = 0; i &lt; myInstallers.Count; i++)\n         {\n            if((myInstallers[i].GetType()).Equals(typeof(AssemblyInstaller)))\n            {\n               Console.WriteLine(&quot;{0} {1}&quot;, i + 1, \n                  ((AssemblyInstaller)myInstallers[i]).Path);\n            }\n         }\n</code></pre><pre><code class=\"lang-cpp\" name=\"InstallerCollection_Item#1\">      TransactedInstaller^ myTransactedInstaller = gcnew TransactedInstaller;\n      AssemblyInstaller^ myAssemblyInstaller;\n      InstallContext^ myInstallContext;\n      \n      // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n      myAssemblyInstaller = gcnew AssemblyInstaller( &quot;MyAssembly1.exe&quot;,nullptr );\n      \n      // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller-&gt;Installers-&gt;Add( myAssemblyInstaller );\n      \n      // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n      myAssemblyInstaller = gcnew AssemblyInstaller( &quot;MyAssembly2.exe&quot;,nullptr );\n      \n      // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller-&gt;Installers-&gt;Add( myAssemblyInstaller );\n      \n      //Print the assemblies to be installed.\n      InstallerCollection^ myInstallers = myTransactedInstaller-&gt;Installers;\n      Console::WriteLine( &quot;<br>Printing all assemblies to be installed&quot; );\n      for ( int i = 0; i &lt; myInstallers-&gt;Count; i++ )\n      {\n         if ( dynamic_cast&lt;AssemblyInstaller^&gt;(myInstallers[ i ]) )\n         {\n            Console::WriteLine( &quot;{0} {1}&quot;, i + 1, safe_cast&lt;AssemblyInstaller^&gt;(myInstallers[ i ])-&gt;Path );\n         }\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"InstallerCollection_Item#1\">         Dim myTransactedInstaller As New TransactedInstaller()\n         Dim myAssemblyInstaller As AssemblyInstaller\n         Dim myInstallContext As InstallContext\n         \n         &#39; Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n         myAssemblyInstaller = New AssemblyInstaller(&quot;MyAssembly1.exe&quot;, Nothing)\n         \n         &#39; Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n         myTransactedInstaller.Installers.Add(myAssemblyInstaller)\n         \n         &#39; Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n         myAssemblyInstaller = New AssemblyInstaller(&quot;MyAssembly2.exe&quot;, Nothing)\n         \n         &#39; Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.  \n         myTransactedInstaller.Installers.Add(myAssemblyInstaller)\n         \n         &#39;Print the assemblies to be installed.\n         Dim myInstallers As InstallerCollection = myTransactedInstaller.Installers\n         Console.WriteLine(ControlChars.Newline + &quot;Printing all assemblies to be installed&quot;)\n         Dim i As Integer\n         For i = 0 To myInstallers.Count - 1\n            If myInstallers(i).GetType().Equals(GetType(AssemblyInstaller)) Then\n               Console.WriteLine(&quot;{0} {1}&quot;, i + 1, CType(myInstallers(i), AssemblyInstaller).Path)\n            End If\n         Next i\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_Install_InstallerCollection_Add_System_Configuration_Install_Installer_\">\r\n    \r\n            <a id=\"System_Configuration_Install_InstallerCollection_Add_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Add(Installer)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified installer to this collection of installers.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int Add (System.Configuration.Install.Installer value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> that represents the installer to add to the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The zero-based index of the added installer.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Parent_\" data-linktype=\"relative-path\">Parent</a> property of the added <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> is set to specify the <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> containing this collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is an excerpt of the example in the <a class=\"xref\" href=\"system.configuration.install.installercollection\" data-linktype=\"relative-path\">InstallerCollection</a> class.  </p>\n<pre><code class=\"lang-cpp\" name=\"InstallerCollection_Add#1\">#using &lt;System.dll&gt;\n#using &lt;System.Configuration.Install.dll&gt;\n\nusing namespace System;\nusing namespace System::ComponentModel;\nusing namespace System::Collections;\nusing namespace System::Configuration::Install;\nusing namespace System::IO;\n\nvoid PrintHelpMessage()\n{\n   Console::WriteLine( &quot;Usage : InstallerCollection_Add [/u | /uninstall] [option [...]] assembly &quot; +\n      &quot;[[option [...]] assembly] [...]]&quot; );\n   Console::WriteLine( &quot;InstallerCollection_Add executes the installers in each of&quot; +\n      &quot;the given assembly. If /u or /uninstall option&quot; + \n      &quot;option is given it uninstalls the assemblies.&quot; );\n}\n\nint main()\n{\n   array&lt;String^&gt;^ args = Environment::GetCommandLineArgs();\n   ArrayList^ options = gcnew ArrayList;\n   String^ myOption;\n   bool toUnInstall = false;\n   bool toPrintHelp = false;\n   TransactedInstaller^ myTransactedInstaller = gcnew TransactedInstaller;\n   AssemblyInstaller^ myAssemblyInstaller;\n   InstallContext^ myInstallContext;\n\n   try\n   {\n      for ( int i = 0; i &lt; args-&gt;Length; i++ )\n      {\n         // Process the arguments.\n         if ( args[ i ]-&gt;StartsWith( &quot;/&quot; ) || args[ i ]-&gt;StartsWith( &quot;-&quot; ) )\n         {\n            myOption = args[ i ]-&gt;Substring( 1 );\n            // Determine whether the option is to &#39;uninstall&#39; a assembly.\n            if ( String::Compare( myOption, &quot;u&quot;, true ) == 0 ||\n               String::Compare( myOption, &quot;uninstall&quot;, true ) == 0 )\n            {\n               toUnInstall = true;\n               continue;\n            }\n            // Determine whether the option is for printing help information.\n            if ( String::Compare( myOption, &quot;?&quot;, true ) == 0 ||\n               String::Compare( myOption, &quot;help&quot;, true ) == 0 )\n            {\n               toPrintHelp = true;\n               continue;\n            }\n            // Add the option encountered to the list of all options\n            // encountered for the current assembly.\n            options-&gt;Add( myOption );\n         }\n         else\n         {\n            // Determine whether the assembly file exists.\n            if (  !File::Exists( args[ i ] ) )\n            {\n               // If assembly file doesn&#39;t exist then print error.\n               Console::WriteLine( &quot; Error : {0} - Assembly file doesn&#39;t exist.&quot;, args[ i ] );\n               return 0;\n            }\n            // Create an instance of &#39;AssemblyInstaller&#39; that installs the given assembly.\n            myAssemblyInstaller = gcnew AssemblyInstaller( args[ i ],\n              (array&lt;String^&gt;^)(options-&gt;ToArray( String::typeid )) );\n            // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n            myTransactedInstaller-&gt;Installers-&gt;Add( myAssemblyInstaller );\n         }\n      }\n      // then print help message.\n      if ( toPrintHelp || myTransactedInstaller-&gt;Installers-&gt;Count == 0 )\n      {\n         PrintHelpMessage();\n         return 0;\n      }\n\n      // Create an instance of &#39;InstallContext&#39; with the options specified.\n      myInstallContext =\n         gcnew InstallContext( &quot;Install.log&quot;,\n              (array&lt;String^&gt;^)(options-&gt;ToArray( String::typeid )) );\n      myTransactedInstaller-&gt;Context = myInstallContext;\n\n      // Install or Uninstall an assembly depending on the option provided.\n      if (  !toUnInstall )\n         myTransactedInstaller-&gt;Install( gcnew Hashtable );\n      else\n         myTransactedInstaller-&gt;Uninstall( nullptr );\n   }\n   catch ( Exception^ e ) \n   {\n      Console::WriteLine( &quot; Exception raised : {0}&quot;, e-&gt;Message );\n   }\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"InstallerCollection_Add#1\">Imports System\nImports System.ComponentModel\nImports System.Collections\nImports System.Configuration.Install\nImports System.IO\n\nPublic Class InstallerCollection_Add\n   \n   &#39;Entry point which delegates to C-style main Private Function\n   Public Overloads Shared Sub Main()\n      Main(System.Environment.GetCommandLineArgs())\n   End Sub\n   \n   Overloads Public Shared Sub Main(args() As String)\n      Dim options As New ArrayList()\n      Dim myOption As String\n      Dim toUnInstall As Boolean = False\n      Dim toPrintHelp As Boolean = False\n      Dim myTransactedInstaller As New TransactedInstaller()\n      Dim myAssemblyInstaller As AssemblyInstaller\n      Dim myInstallContext As InstallContext\n      \n      Try\n         Dim i As Integer\n         For i = 1 To args.Length - 1\n            &#39; Process the arguments.\n            If args(i).StartsWith(&quot;/&quot;) Or args(i).StartsWith(&quot;-&quot;) Then\n               myOption = args(i).Substring(1)\n               &#39; Determine whether the option is to &#39;uninstall&#39; a assembly.\n               If String.Compare(myOption, &quot;u&quot;, True) = 0 Or String.Compare(myOption, &quot;uninstall&quot;, _\n                                                                              True) = 0 Then\n                  toUnInstall = True\n                  GoTo ContinueFor1\n               End If\n               &#39; Determine whether the option is for printing help information.\n               If String.Compare(myOption, &quot;?&quot;, True) = 0 Or String.Compare(myOption, &quot;help&quot;, _\n                                                                                 True) = 0 Then\n                  toPrintHelp = True\n                  GoTo ContinueFor1\n               End If\n               &#39; Add the option encountered to the list of all options\n               &#39; encountered for the current assembly.\n               options.Add(myOption)\n            Else\n               &#39; Determine whether the assembly file exists.\n               If Not File.Exists(args(i)) Then\n                  &#39; If assembly file doesn&#39;t exist then print error.\n                  Console.WriteLine(&quot; Error : {0} - Assembly file doesn&#39;t exist.&quot;, args(i))\n                  Return\n               End If\n               &#39; Create an instance of &#39;AssemblyInstaller&#39; that installs the given assembly.\n               myAssemblyInstaller = New AssemblyInstaller(args(i), CType(options.ToArray _\n                                                               (GetType(String)), String()))\n               &#39; Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n               myTransactedInstaller.Installers.Add(myAssemblyInstaller)\n            End If\n         ContinueFor1: \n         Next i\n         &#39; If user requested help or didn&#39;t provide any assemblies to install\n         &#39; then print help message.\n         If toPrintHelp Or myTransactedInstaller.Installers.Count = 0 Then\n            PrintHelpMessage()\n            Return\n         End If\n         \n         &#39; Create an instance of &#39;InstallContext&#39; with the options specified.\n         myInstallContext = New InstallContext(&quot;Install.log&quot;, CType(options.ToArray _\n                                                               (GetType(String)), String()))\n         myTransactedInstaller.Context = myInstallContext\n         \n         &#39; Install or Uninstall an assembly depending on the option provided.\n         If Not toUnInstall Then\n            myTransactedInstaller.Install(New Hashtable())\n         Else\n            myTransactedInstaller.Uninstall(Nothing)\n         End If\n      Catch e As Exception\n         Console.WriteLine(&quot; Exception raised : {0}&quot;, e.Message)\n      End Try\n   End Sub &#39;Main\n\n   Public Shared Sub PrintHelpMessage()\n      Console.WriteLine(&quot;Usage : InstallerCollection_Add [/u | /uninstall] [option [...]]assembly&quot;+ _\n                                                               &quot;[[option [...]] assembly] [...]]&quot;)\n      Console.WriteLine(&quot;InstallerCollection_Add executes the installers in each of&quot; + _\n      &quot; the given assembly. If /u or /uninstall option is given it uninstalls the assemblies.&quot;)\n   End Sub &#39;PrintHelpMessage\nEnd Class &#39;InstallerCollection_Add\n</code></pre><pre><code class=\"lang-cs\" name=\"InstallerCollection_Add#1\">using System;\nusing System.ComponentModel;\nusing System.Collections;\nusing System.Configuration.Install;\nusing System.IO;\n\npublic class InstallerCollection_Add\n{\n   public static void Main(String[] args)\n   {\n      ArrayList options = new ArrayList();\n      String myOption;\n      bool toUnInstall = false;\n      bool toPrintHelp = false;\n      TransactedInstaller myTransactedInstaller = new TransactedInstaller();\n      AssemblyInstaller myAssemblyInstaller;\n      InstallContext myInstallContext;\n\n      try\n      {\n         for(int i = 0; i &lt; args.Length; i++)\n         {\n            // Process the arguments.\n            if(args[i].StartsWith(&quot;/&quot;) || args[i].StartsWith(&quot;-&quot;))\n            {\n               myOption = args[i].Substring(1);\n               // Determine whether the option is to &#39;uninstall&#39; a assembly.\n               if(String.Compare(myOption, &quot;u&quot;, true) == 0 ||\n                  String.Compare(myOption, &quot;uninstall&quot;, true) == 0)\n               {\n                  toUnInstall = true;\n                  continue;\n               }\n               // Determine whether the option is for printing help information.\n               if(String.Compare(myOption, &quot;?&quot;, true) == 0 ||\n                  String.Compare(myOption, &quot;help&quot;, true) == 0)\n               {\n                  toPrintHelp = true;\n                  continue;\n               }\n               // Add the option encountered to the list of all options\n               // encountered for the current assembly.\n               options.Add(myOption);\n            }\n            else\n            {\n               // Determine whether the assembly file exists.\n               if(!File.Exists(args[i]))\n               {\n                  // If assembly file doesn&#39;t exist then print error.\n                  Console.WriteLine(&quot; Error : {0} - Assembly file doesn&#39;t exist.&quot;, args[i]);\n                  return;\n               }\n               // Create an instance of &#39;AssemblyInstaller&#39; that installs the given assembly.\n               myAssemblyInstaller = new AssemblyInstaller(args[i],\n                  (string[]) options.ToArray(typeof(string)));\n               // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n               myTransactedInstaller.Installers.Add(myAssemblyInstaller);\n            }\n         }\n         // If user requested help or didn&#39;t provide any assemblies to install\n         // then print help message.\n         if(toPrintHelp || myTransactedInstaller.Installers.Count == 0)\n         {\n            PrintHelpMessage();\n            return;\n         }\n\n         // Create an instance of &#39;InstallContext&#39; with the options specified.\n         myInstallContext =\n            new InstallContext(&quot;Install.log&quot;,\n            (string[]) options.ToArray(typeof(string)));\n         myTransactedInstaller.Context = myInstallContext;\n\n         // Install or Uninstall an assembly depending on the option provided.\n         if(!toUnInstall)\n            myTransactedInstaller.Install(new Hashtable());\n         else\n            myTransactedInstaller.Uninstall(null);\n      }\n      catch(Exception e)\n      {\n         Console.WriteLine(&quot; Exception raised : {0}&quot;, e.Message);\n      }\n   }\n\n   public static void PrintHelpMessage()\n   {\n      Console.WriteLine(&quot;Usage : InstallerCollection_Add [/u | /uninstall] [option [...]] assembly&quot; +\n         &quot;[[option [...]] assembly] [...]]&quot;);\n      Console.WriteLine(&quot;InstallerCollection_Add executes the installers in each of&quot; +\n         &quot; the given assembly. If /u or /uninstall option&quot; +\n         &quot; is given it uninstalls the assemblies.&quot;);\n   }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_Install_InstallerCollection_AddRange_System_Configuration_Install_Installer___\">\r\n    \r\n            <a id=\"System_Configuration_Install_InstallerCollection_AddRange_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddRange(Installer[])</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified array of installers to this collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddRange (System.Configuration.Install.Installer[] value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An array of type <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> that represents the installers to add to this collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Parent_\" data-linktype=\"relative-path\">Parent</a> property of each added <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> is set to the <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> containing this collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_AddRange_\" data-linktype=\"relative-path\">AddRange</a> method of the <a class=\"xref\" href=\"system.configuration.install.installercollection\" data-linktype=\"relative-path\">InstallerCollection</a> class. It creates <a class=\"xref\" href=\"system.configuration.install.assemblyinstaller\" data-linktype=\"relative-path\">AssemblyInstaller</a> instances for <code>MyAssembly1.exe</code> and <code>MyAssembly2.exe</code>.These instances are added to a <a class=\"xref\" href=\"system.configuration.install.transactedinstaller\" data-linktype=\"relative-path\">TransactedInstaller</a>. The installation process installs both <code>MyAssembly1.exe</code> and <code>MyAssembly2.exe</code>.  </p>\n<pre><code class=\"lang-cs\" name=\"InstallerCollection_AddRange1#1\">         ArrayList myInstallers =new ArrayList();\n         TransactedInstaller myTransactedInstaller = new TransactedInstaller();\n         AssemblyInstaller myAssemblyInstaller;\n         InstallContext myInstallContext;\n\n         // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n         myAssemblyInstaller = \n            new AssemblyInstaller(&quot;MyAssembly1.exe&quot;, null);\n\n         // Add the instance of &#39;AssemblyInstaller&#39; to the list of installers.  \n         myInstallers.Add(myAssemblyInstaller);\n\n         // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n         myAssemblyInstaller = \n            new AssemblyInstaller(&quot;MyAssembly2.exe&quot;, null);\n\n         // Add the instance of &#39;AssemblyInstaller&#39; to the list of installers.  \n         myInstallers.Add(myAssemblyInstaller);\n\n         // Add the installers to the &#39;TransactedInstaller&#39; instance.\n         myTransactedInstaller.Installers.AddRange((Installer[])myInstallers.ToArray(typeof(Installer)));\n</code></pre><pre><code class=\"lang-cpp\" name=\"InstallerCollection_AddRange1#1\">      ArrayList^ myInstallers = gcnew ArrayList;\n      TransactedInstaller^ myTransactedInstaller = gcnew TransactedInstaller;\n      AssemblyInstaller^ myAssemblyInstaller;\n      InstallContext^ myInstallContext;\n\n      // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n      myAssemblyInstaller =\n         gcnew AssemblyInstaller( &quot;MyAssembly1.exe&quot;,nullptr );\n\n      // Add the instance of &#39;AssemblyInstaller&#39; to the list of installers.\n      myInstallers-&gt;Add( myAssemblyInstaller );\n\n      // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n      myAssemblyInstaller =\n         gcnew AssemblyInstaller( &quot;MyAssembly2.exe&quot;,nullptr );\n\n      // Add the instance of &#39;AssemblyInstaller&#39; to the list of installers.\n      myInstallers-&gt;Add( myAssemblyInstaller );\n\n      // Add the installers to the &#39;TransactedInstaller&#39; instance.\n      myTransactedInstaller-&gt;Installers-&gt;AddRange( safe_cast&lt;array&lt;Installer^&gt;^&gt;(myInstallers-&gt;ToArray( Installer::typeid )) );\n</code></pre><pre><code class=\"lang-vb\" name=\"InstallerCollection_AddRange1#1\">         Dim myInstallers As New ArrayList()\n         Dim myTransactedInstaller As New TransactedInstaller()\n         Dim myAssemblyInstaller As AssemblyInstaller\n         Dim myInstallContext As InstallContext\n         \n         &#39; Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n         myAssemblyInstaller = New AssemblyInstaller(&quot;MyAssembly1.exe&quot;, Nothing)\n         \n         &#39; Add the instance of &#39;AssemblyInstaller&#39; to the list of installers.  \n         myInstallers.Add(myAssemblyInstaller)\n         \n         &#39; Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n         myAssemblyInstaller = New AssemblyInstaller(&quot;MyAssembly2.exe&quot;, Nothing)\n         \n         &#39; Add the instance of &#39;AssemblyInstaller&#39; to the list of installers.  \n         myInstallers.Add(myAssemblyInstaller)\n         \n         &#39; Add the installers to the &#39;TransactedInstaller&#39; instance.\n         myTransactedInstaller.Installers.AddRange(CType(myInstallers.ToArray(GetType(Installer)), _\n                                                                              Installer()))\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_Install_InstallerCollection_AddRange_System_Configuration_Install_InstallerCollection_\">\r\n    \r\n            <a id=\"System_Configuration_Install_InstallerCollection_AddRange_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">AddRange(InstallerCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Adds the specified collection of installers to this collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void AddRange (System.Configuration.Install.InstallerCollection value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installercollection\" data-linktype=\"relative-path\">InstallerCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.configuration.install.installercollection\" data-linktype=\"relative-path\">InstallerCollection</a> that represents the installers to add to this collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Parent_\" data-linktype=\"relative-path\">Parent</a> property of each added <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> is set to the <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> containing this collection.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_Insert_\" data-linktype=\"relative-path\">Insert</a> method and the AddRange methods of the <a class=\"xref\" href=\"system.configuration.install.installercollection\" data-linktype=\"relative-path\">InstallerCollection</a> class. It creates <a class=\"xref\" href=\"system.configuration.install.assemblyinstaller\" data-linktype=\"relative-path\">AssemblyInstaller</a> instances for <code>MyAssembly1.exe</code> and <code>MyAssembly2.exe</code>. These instances of <a class=\"xref\" href=\"system.configuration.install.assemblyinstaller\" data-linktype=\"relative-path\">AssemblyInstaller</a> are added to a <a class=\"xref\" href=\"system.configuration.install.transactedinstaller\" data-linktype=\"relative-path\">TransactedInstaller</a> named <code>myTransactedInstaller1</code>. The installers in the <code>myTransactedInstaller1</code> are copied to another <a class=\"xref\" href=\"system.configuration.install.transactedinstaller\" data-linktype=\"relative-path\">TransactedInstaller</a> named <code>myTransactedInstaller2</code>. The installation process installs both <code>MyAssembly1.exe</code> and <code>MyAssembly2.exe</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"InstallerCollection_Insert#1\">   TransactedInstaller^ myTransactedInstaller1 = gcnew TransactedInstaller;\n   TransactedInstaller^ myTransactedInstaller2 = gcnew TransactedInstaller;\n   AssemblyInstaller^ myAssemblyInstaller = gcnew AssemblyInstaller;\n   InstallContext^ myInstallContext;\n   \n   // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n   myAssemblyInstaller =\n      gcnew AssemblyInstaller( &quot;MyAssembly1.exe&quot;,nullptr );\n   \n   // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n   myTransactedInstaller1-&gt;Installers-&gt;Insert( 0, myAssemblyInstaller );\n   \n   // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n   myAssemblyInstaller =\n      gcnew AssemblyInstaller( &quot;MyAssembly2.exe&quot;,nullptr );\n   \n   // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n   myTransactedInstaller1-&gt;Installers-&gt;Insert( 1, myAssemblyInstaller );\n   \n   // Copy the installers of &#39;myTransactedInstaller1&#39; to &#39;myTransactedInstaller2&#39;.\n   myTransactedInstaller2-&gt;Installers-&gt;AddRange( myTransactedInstaller1-&gt;Installers );\n</code></pre><pre><code class=\"lang-vb\" name=\"InstallerCollection_Insert#1\">      Dim myTransactedInstaller1 As New TransactedInstaller()\n      Dim myTransactedInstaller2 As New TransactedInstaller()\n      Dim myAssemblyInstaller As New AssemblyInstaller()\n      Dim myInstallContext As InstallContext\n      \n      &#39; Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n      myAssemblyInstaller = New AssemblyInstaller(&quot;MyAssembly1.exe&quot;, Nothing)\n      \n      &#39; Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller1.Installers.Insert(0, myAssemblyInstaller)\n      \n      &#39; Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n      myAssemblyInstaller = New AssemblyInstaller(&quot;MyAssembly2.exe&quot;, Nothing)\n      \n      &#39; Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller1.Installers.Insert(1, myAssemblyInstaller)\n      \n      &#39; Copy the installers of &#39;myTransactedInstaller1&#39; to &#39;myTransactedInstaller2&#39;.\n      myTransactedInstaller2.Installers.AddRange(myTransactedInstaller1.Installers)\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"InstallerCollection_Insert#1\">      TransactedInstaller myTransactedInstaller1 = new TransactedInstaller();\n      TransactedInstaller myTransactedInstaller2 = new TransactedInstaller();\n      AssemblyInstaller myAssemblyInstaller = new AssemblyInstaller();\n      InstallContext myInstallContext;\n\n      // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n      myAssemblyInstaller = \n         new AssemblyInstaller(&quot;MyAssembly1.exe&quot;, null);\n\n      // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller1.Installers.Insert(0, myAssemblyInstaller);\n\n      // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n      myAssemblyInstaller = \n         new AssemblyInstaller(&quot;MyAssembly2.exe&quot;, null);\n\n      // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller1.Installers.Insert(1, myAssemblyInstaller);\n\n      // Copy the installers of &#39;myTransactedInstaller1&#39; to &#39;myTransactedInstaller2&#39;.\n      myTransactedInstaller2.Installers.AddRange(myTransactedInstaller1.Installers);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_Install_InstallerCollection_Contains_System_Configuration_Install_Installer_\">\r\n    \r\n            <a id=\"System_Configuration_Install_InstallerCollection_Contains_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Contains(Installer)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified installer is included in collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool Contains (System.Configuration.Install.Installer value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> that represents the installer to look for.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified installer is in this collection; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_Remove_\" data-linktype=\"relative-path\">Remove</a> method, Contains method, and <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_IndexOf_\" data-linktype=\"relative-path\">IndexOf</a> method of the <a class=\"xref\" href=\"system.configuration.install.installercollection\" data-linktype=\"relative-path\">InstallerCollection</a> class. It creates <a class=\"xref\" href=\"system.configuration.install.assemblyinstaller\" data-linktype=\"relative-path\">AssemblyInstaller</a> instances for <code>MyAssembly1.exe</code> and <code>MyAssembly2.exe</code>. These instances are added to a <a class=\"xref\" href=\"system.configuration.install.transactedinstaller\" data-linktype=\"relative-path\">TransactedInstaller</a>. <code>MyAssembly2.exe</code> is then removed from the <a class=\"xref\" href=\"system.configuration.install.installercollection\" data-linktype=\"relative-path\">InstallerCollection</a> of the <a class=\"xref\" href=\"system.configuration.install.transactedinstaller\" data-linktype=\"relative-path\">TransactedInstaller</a>. The installation process starts and installs only <code>MyAssembly1.exe</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"InstallerCollection_Remove#1\">      TransactedInstaller^ myTransactedInstaller = gcnew TransactedInstaller;\n      AssemblyInstaller^ myAssemblyInstaller1;\n      AssemblyInstaller^ myAssemblyInstaller2;\n      InstallContext^ myInstallContext;\n      \n      // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n      myAssemblyInstaller1 = gcnew AssemblyInstaller( &quot;MyAssembly1.exe&quot;,nullptr );\n      \n      // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller-&gt;Installers-&gt;Insert( 0, myAssemblyInstaller1 );\n      \n      // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n      myAssemblyInstaller2 = gcnew AssemblyInstaller( &quot;MyAssembly2.exe&quot;,nullptr );\n      \n      // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller-&gt;Installers-&gt;Insert( 1, myAssemblyInstaller2 );\n      \n      // Remove the &#39;myAssemblyInstaller2&#39; from the &#39;Installers&#39; collection.\n      if ( myTransactedInstaller-&gt;Installers-&gt;Contains( myAssemblyInstaller2 ) )\n      {\n         Console::WriteLine( &quot;<br>Installer at index : {0} is being removed&quot;, myTransactedInstaller-&gt;Installers-&gt;IndexOf( myAssemblyInstaller2 ) );\n         myTransactedInstaller-&gt;Installers-&gt;Remove( myAssemblyInstaller2 );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"InstallerCollection_Remove#1\">         TransactedInstaller myTransactedInstaller = new TransactedInstaller();\n         AssemblyInstaller myAssemblyInstaller1;\n         AssemblyInstaller myAssemblyInstaller2;\n         InstallContext myInstallContext;\n\n         // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n         myAssemblyInstaller1 = \n            new AssemblyInstaller(&quot;MyAssembly1.exe&quot;, null);\n\n         // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n         myTransactedInstaller.Installers.Insert(0, myAssemblyInstaller1);\n\n         // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n         myAssemblyInstaller2 = \n            new AssemblyInstaller(&quot;MyAssembly2.exe&quot;, null);\n\n         // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n         myTransactedInstaller.Installers.Insert(1, myAssemblyInstaller2);\n\n         // Remove the &#39;myAssemblyInstaller2&#39; from the &#39;Installers&#39; collection.\n         if(myTransactedInstaller.Installers.Contains(myAssemblyInstaller2))\n         {\n            Console.WriteLine(&quot;<br>Installer at index : {0} is being removed&quot;,\n               myTransactedInstaller.Installers.IndexOf(myAssemblyInstaller2));\n            myTransactedInstaller.Installers.Remove(myAssemblyInstaller2);\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"InstallerCollection_Remove#1\">         Dim myTransactedInstaller As New TransactedInstaller()\n         Dim myAssemblyInstaller1 As AssemblyInstaller\n         Dim myAssemblyInstaller2 As AssemblyInstaller\n         Dim myInstallContext As InstallContext\n         \n         &#39; Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n         myAssemblyInstaller1 = New AssemblyInstaller(&quot;MyAssembly1.exe&quot;, Nothing)\n         \n         &#39; Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n         myTransactedInstaller.Installers.Insert(0, myAssemblyInstaller1)\n         \n         &#39; Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n         myAssemblyInstaller2 = New AssemblyInstaller(&quot;MyAssembly2.exe&quot;, Nothing)\n         \n         &#39; Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n         myTransactedInstaller.Installers.Insert(1, myAssemblyInstaller2)\n         \n         &#39; Remove the &#39;myAssemblyInstaller2&#39; from the &#39;Installers&#39; collection.\n         If myTransactedInstaller.Installers.Contains(myAssemblyInstaller2) Then\n            Console.WriteLine(ControlChars.Newline + &quot;Installer at index : {0} is being removed&quot;, _\n                              myTransactedInstaller.Installers.IndexOf(myAssemblyInstaller2))\n            myTransactedInstaller.Installers.Remove(myAssemblyInstaller2)\n         End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_Install_InstallerCollection_CopyTo_System_Configuration_Install_Installer___System_Int32_\">\r\n    \r\n            <a id=\"System_Configuration_Install_InstallerCollection_CopyTo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CopyTo(Installer[],Int32)</div>        \r\n          </div>\r\n    \r\n            <p>Copies the items from the collection to an array, begining at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void CopyTo (System.Configuration.Install.Installer[] array, int index);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>array</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a>[]</div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The array to copy to.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The index of the array at which to paste the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example demonstrates the CopyTo method of the <a class=\"xref\" href=\"system.configuration.install.installercollection\" data-linktype=\"relative-path\">InstallerCollection</a> class. It creates <a class=\"xref\" href=\"system.configuration.install.assemblyinstaller\" data-linktype=\"relative-path\">AssemblyInstaller</a> instances for <code>MyAssembly1.exe</code> and <code>MyAssembly2.exe</code>. These instances are added to a <a class=\"xref\" href=\"system.configuration.install.transactedinstaller\" data-linktype=\"relative-path\">TransactedInstaller</a>. The names of the assemblies to be installed are displayed on the console. The installation process installs both <code>MyAssembly1.exe</code> and <code>MyAssembly2.exe</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"InstallerCollection_CopyTo#1\">   TransactedInstaller^ myTransactedInstaller = gcnew TransactedInstaller;\n   AssemblyInstaller^ myAssemblyInstaller;\n   InstallContext^ myInstallContext;\n   \n   // Create an instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n   myAssemblyInstaller =\n      gcnew AssemblyInstaller( &quot;MyAssembly1.exe&quot;,nullptr );\n   \n   // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n   myTransactedInstaller-&gt;Installers-&gt;Add( myAssemblyInstaller );\n   \n   // Create an instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n   myAssemblyInstaller =\n      gcnew AssemblyInstaller( &quot;MyAssembly2.exe&quot;,nullptr );\n   \n   // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n   myTransactedInstaller-&gt;Installers-&gt;Add( myAssemblyInstaller );\n\n   array&lt;Installer^&gt;^ myInstallers =\n      gcnew array&lt;Installer^&gt;(myTransactedInstaller-&gt;Installers-&gt;Count);\n\n   myTransactedInstaller-&gt;Installers-&gt;CopyTo( myInstallers, 0 );\n   // Print the assemblies to be installed.\n   Console::WriteLine( &quot;Printing all assemblies to be installed -&quot; );\n   for ( int i = 0; i &lt; myInstallers-&gt;Length; i++ )\n   {\n      if ( dynamic_cast&lt;AssemblyInstaller^&gt;( myInstallers[ i ] ) )\n      {\n         Console::WriteLine( &quot;{0} {1}&quot;, i + 1, ( (AssemblyInstaller^)( myInstallers[ i ]) )-&gt;Path );\n      }\n   }\n</code></pre><pre><code class=\"lang-cs\" name=\"InstallerCollection_CopyTo#1\">      TransactedInstaller myTransactedInstaller = new TransactedInstaller();\n      AssemblyInstaller myAssemblyInstaller;\n      InstallContext myInstallContext;\n\n      // Create an instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n      myAssemblyInstaller =\n         new AssemblyInstaller(&quot;MyAssembly1.exe&quot;, null);\n\n      // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller.Installers.Add(myAssemblyInstaller);\n\n      // Create an instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n      myAssemblyInstaller =\n         new AssemblyInstaller(&quot;MyAssembly2.exe&quot;, null);\n\n      // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller.Installers.Add(myAssemblyInstaller);\n     \n      Installer[] myInstallers =\n         new Installer[myTransactedInstaller.Installers.Count];\n\n      myTransactedInstaller.Installers.CopyTo(myInstallers, 0);\n      // Print the assemblies to be installed.\n      Console.WriteLine(&quot;Printing all assemblies to be installed -&quot;);\n      for(int i = 0; i &lt; myInstallers.Length; i++)\n      {\n         if((myInstallers[i].GetType()).Equals(typeof(AssemblyInstaller)))\n         {\n            Console.WriteLine(&quot;{0} {1}&quot;, i + 1,\n               ((AssemblyInstaller)myInstallers[i]).Path);\n         }\n      }\n</code></pre><pre><code class=\"lang-vb\" name=\"InstallerCollection_CopyTo#1\">      Dim myTransactedInstaller As New TransactedInstaller()\n      Dim myAssemblyInstaller As AssemblyInstaller\n      Dim myInstallContext As InstallContext\n      \n      &#39; Create an instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n      myAssemblyInstaller = New AssemblyInstaller(&quot;MyAssembly1.exe&quot;, Nothing)\n      \n      &#39; Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller.Installers.Add(myAssemblyInstaller)\n      \n      &#39; Create an instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n      myAssemblyInstaller = New AssemblyInstaller(&quot;MyAssembly2.exe&quot;, Nothing)\n      \n      &#39; Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller.Installers.Add(myAssemblyInstaller)\n      \n      Dim myInstallers(myTransactedInstaller.Installers.Count-1) As Installer\n      \n      myTransactedInstaller.Installers.CopyTo(myInstallers, 0)\n      &#39; Print the assemblies to be installed.\n      Console.WriteLine(&quot;Printing all assemblies to be installed -&quot;)\n      Dim i As Integer\n      For i = 0 To myInstallers.Length - 1\n         If myInstallers(i).GetType().Equals(GetType(AssemblyInstaller)) Then\n            Console.WriteLine(&quot;{0} {1}&quot;, i + 1, CType(myInstallers(i), AssemblyInstaller).Path)\n         End If\n      Next i\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_Install_InstallerCollection_IndexOf_System_Configuration_Install_Installer_\">\r\n    \r\n            <a id=\"System_Configuration_Install_InstallerCollection_IndexOf_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IndexOf(Installer)</div>        \r\n          </div>\r\n    \r\n            <p>Determines the index of a specified installer in the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public int IndexOf (System.Configuration.Install.Installer value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> to locate in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>The zero-based index of the installer in the collection.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is the same as the example in the <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_Contains_\" data-linktype=\"relative-path\">Contains</a> method. For more information on this example, please see the Example section of the <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_Contains_\" data-linktype=\"relative-path\">Contains</a> method.  </p>\n<pre><code class=\"lang-cpp\" name=\"InstallerCollection_Remove#1\">      TransactedInstaller^ myTransactedInstaller = gcnew TransactedInstaller;\n      AssemblyInstaller^ myAssemblyInstaller1;\n      AssemblyInstaller^ myAssemblyInstaller2;\n      InstallContext^ myInstallContext;\n      \n      // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n      myAssemblyInstaller1 = gcnew AssemblyInstaller( &quot;MyAssembly1.exe&quot;,nullptr );\n      \n      // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller-&gt;Installers-&gt;Insert( 0, myAssemblyInstaller1 );\n      \n      // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n      myAssemblyInstaller2 = gcnew AssemblyInstaller( &quot;MyAssembly2.exe&quot;,nullptr );\n      \n      // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller-&gt;Installers-&gt;Insert( 1, myAssemblyInstaller2 );\n      \n      // Remove the &#39;myAssemblyInstaller2&#39; from the &#39;Installers&#39; collection.\n      if ( myTransactedInstaller-&gt;Installers-&gt;Contains( myAssemblyInstaller2 ) )\n      {\n         Console::WriteLine( &quot;<br>Installer at index : {0} is being removed&quot;, myTransactedInstaller-&gt;Installers-&gt;IndexOf( myAssemblyInstaller2 ) );\n         myTransactedInstaller-&gt;Installers-&gt;Remove( myAssemblyInstaller2 );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"InstallerCollection_Remove#1\">         TransactedInstaller myTransactedInstaller = new TransactedInstaller();\n         AssemblyInstaller myAssemblyInstaller1;\n         AssemblyInstaller myAssemblyInstaller2;\n         InstallContext myInstallContext;\n\n         // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n         myAssemblyInstaller1 = \n            new AssemblyInstaller(&quot;MyAssembly1.exe&quot;, null);\n\n         // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n         myTransactedInstaller.Installers.Insert(0, myAssemblyInstaller1);\n\n         // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n         myAssemblyInstaller2 = \n            new AssemblyInstaller(&quot;MyAssembly2.exe&quot;, null);\n\n         // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n         myTransactedInstaller.Installers.Insert(1, myAssemblyInstaller2);\n\n         // Remove the &#39;myAssemblyInstaller2&#39; from the &#39;Installers&#39; collection.\n         if(myTransactedInstaller.Installers.Contains(myAssemblyInstaller2))\n         {\n            Console.WriteLine(&quot;<br>Installer at index : {0} is being removed&quot;,\n               myTransactedInstaller.Installers.IndexOf(myAssemblyInstaller2));\n            myTransactedInstaller.Installers.Remove(myAssemblyInstaller2);\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"InstallerCollection_Remove#1\">         Dim myTransactedInstaller As New TransactedInstaller()\n         Dim myAssemblyInstaller1 As AssemblyInstaller\n         Dim myAssemblyInstaller2 As AssemblyInstaller\n         Dim myInstallContext As InstallContext\n         \n         &#39; Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n         myAssemblyInstaller1 = New AssemblyInstaller(&quot;MyAssembly1.exe&quot;, Nothing)\n         \n         &#39; Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n         myTransactedInstaller.Installers.Insert(0, myAssemblyInstaller1)\n         \n         &#39; Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n         myAssemblyInstaller2 = New AssemblyInstaller(&quot;MyAssembly2.exe&quot;, Nothing)\n         \n         &#39; Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n         myTransactedInstaller.Installers.Insert(1, myAssemblyInstaller2)\n         \n         &#39; Remove the &#39;myAssemblyInstaller2&#39; from the &#39;Installers&#39; collection.\n         If myTransactedInstaller.Installers.Contains(myAssemblyInstaller2) Then\n            Console.WriteLine(ControlChars.Newline + &quot;Installer at index : {0} is being removed&quot;, _\n                              myTransactedInstaller.Installers.IndexOf(myAssemblyInstaller2))\n            myTransactedInstaller.Installers.Remove(myAssemblyInstaller2)\n         End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_Install_InstallerCollection_Insert_System_Int32_System_Configuration_Install_Installer_\">\r\n    \r\n            <a id=\"System_Configuration_Install_InstallerCollection_Insert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Insert(Int32,Installer)</div>        \r\n          </div>\r\n    \r\n            <p>Inserts the specified installer into the collection at the specified index.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Insert (int index, System.Configuration.Install.Installer value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index at which to insert the installer.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> to insert.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is the same as the example in the <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_AddRange_\" data-linktype=\"relative-path\">AddRange</a> method. For more information on this example, please see the Example section of the <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_AddRange_\" data-linktype=\"relative-path\">AddRange</a> method.  </p>\n<pre><code class=\"lang-cpp\" name=\"InstallerCollection_Insert#1\">   TransactedInstaller^ myTransactedInstaller1 = gcnew TransactedInstaller;\n   TransactedInstaller^ myTransactedInstaller2 = gcnew TransactedInstaller;\n   AssemblyInstaller^ myAssemblyInstaller = gcnew AssemblyInstaller;\n   InstallContext^ myInstallContext;\n   \n   // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n   myAssemblyInstaller =\n      gcnew AssemblyInstaller( &quot;MyAssembly1.exe&quot;,nullptr );\n   \n   // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n   myTransactedInstaller1-&gt;Installers-&gt;Insert( 0, myAssemblyInstaller );\n   \n   // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n   myAssemblyInstaller =\n      gcnew AssemblyInstaller( &quot;MyAssembly2.exe&quot;,nullptr );\n   \n   // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n   myTransactedInstaller1-&gt;Installers-&gt;Insert( 1, myAssemblyInstaller );\n   \n   // Copy the installers of &#39;myTransactedInstaller1&#39; to &#39;myTransactedInstaller2&#39;.\n   myTransactedInstaller2-&gt;Installers-&gt;AddRange( myTransactedInstaller1-&gt;Installers );\n</code></pre><pre><code class=\"lang-vb\" name=\"InstallerCollection_Insert#1\">      Dim myTransactedInstaller1 As New TransactedInstaller()\n      Dim myTransactedInstaller2 As New TransactedInstaller()\n      Dim myAssemblyInstaller As New AssemblyInstaller()\n      Dim myInstallContext As InstallContext\n      \n      &#39; Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n      myAssemblyInstaller = New AssemblyInstaller(&quot;MyAssembly1.exe&quot;, Nothing)\n      \n      &#39; Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller1.Installers.Insert(0, myAssemblyInstaller)\n      \n      &#39; Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n      myAssemblyInstaller = New AssemblyInstaller(&quot;MyAssembly2.exe&quot;, Nothing)\n      \n      &#39; Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller1.Installers.Insert(1, myAssemblyInstaller)\n      \n      &#39; Copy the installers of &#39;myTransactedInstaller1&#39; to &#39;myTransactedInstaller2&#39;.\n      myTransactedInstaller2.Installers.AddRange(myTransactedInstaller1.Installers)\n      \n</code></pre><pre><code class=\"lang-cs\" name=\"InstallerCollection_Insert#1\">      TransactedInstaller myTransactedInstaller1 = new TransactedInstaller();\n      TransactedInstaller myTransactedInstaller2 = new TransactedInstaller();\n      AssemblyInstaller myAssemblyInstaller = new AssemblyInstaller();\n      InstallContext myInstallContext;\n\n      // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n      myAssemblyInstaller = \n         new AssemblyInstaller(&quot;MyAssembly1.exe&quot;, null);\n\n      // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller1.Installers.Insert(0, myAssemblyInstaller);\n\n      // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n      myAssemblyInstaller = \n         new AssemblyInstaller(&quot;MyAssembly2.exe&quot;, null);\n\n      // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller1.Installers.Insert(1, myAssemblyInstaller);\n\n      // Copy the installers of &#39;myTransactedInstaller1&#39; to &#39;myTransactedInstaller2&#39;.\n      myTransactedInstaller2.Installers.AddRange(myTransactedInstaller1.Installers);\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_Install_InstallerCollection_OnInsert_System_Int32_System_Object_\">\r\n    \r\n            <a id=\"System_Configuration_Install_InstallerCollection_OnInsert_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnInsert(Int32,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Performs additional custom processes before a new installer is inserted into the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnInsert (int index, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index at which to insert <code>value</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new value of the installer at <code>index</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_Install_InstallerCollection_OnRemove_System_Int32_System_Object_\">\r\n    \r\n            <a id=\"System_Configuration_Install_InstallerCollection_OnRemove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnRemove(Int32,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Performs additional custom processes before an installer is removed from the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnRemove (int index, object value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index at which <code>value</code> can be found.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The installer to be removed from <code>index</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_Install_InstallerCollection_OnSet_System_Int32_System_Object_System_Object_\">\r\n    \r\n            <a id=\"System_Configuration_Install_InstallerCollection_OnSet_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnSet(Int32,Object,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Performs additional custom processes before an existing installer is set to a new value.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void OnSet (int index, object oldValue, object newValue);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>index</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The zero-based index at which to replace <code>oldValue</code>.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>oldValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The value to replace with <code>newValue.</code></p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>newValue</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new value of the installer at <code>index</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Configuration_Install_InstallerCollection_Remove_System_Configuration_Install_Installer_\">\r\n    \r\n            <a id=\"System_Configuration_Install_InstallerCollection_Remove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Remove(Installer)</div>        \r\n          </div>\r\n    \r\n            <p>Removes the specified <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> from the collection.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Remove (System.Configuration.Install.Installer value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> that represents the installer to remove.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The <a class=\"xref\" href=\"system.configuration.install.installer#System_Configuration_Install_Installer_Parent_\" data-linktype=\"relative-path\">Parent</a> property of the removed <a class=\"xref\" href=\"system.configuration.install.installer\" data-linktype=\"relative-path\">Installer</a> is set to <code>null</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example is the same as the example in the <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_Contains_\" data-linktype=\"relative-path\">Contains</a> method. For more information on this example, please see the Example section of the <a class=\"xref\" href=\"system.configuration.install.installercollection#System_Configuration_Install_InstallerCollection_Contains_\" data-linktype=\"relative-path\">Contains</a> method.  </p>\n<pre><code class=\"lang-cpp\" name=\"InstallerCollection_Remove#1\">      TransactedInstaller^ myTransactedInstaller = gcnew TransactedInstaller;\n      AssemblyInstaller^ myAssemblyInstaller1;\n      AssemblyInstaller^ myAssemblyInstaller2;\n      InstallContext^ myInstallContext;\n      \n      // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n      myAssemblyInstaller1 = gcnew AssemblyInstaller( &quot;MyAssembly1.exe&quot;,nullptr );\n      \n      // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller-&gt;Installers-&gt;Insert( 0, myAssemblyInstaller1 );\n      \n      // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n      myAssemblyInstaller2 = gcnew AssemblyInstaller( &quot;MyAssembly2.exe&quot;,nullptr );\n      \n      // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n      myTransactedInstaller-&gt;Installers-&gt;Insert( 1, myAssemblyInstaller2 );\n      \n      // Remove the &#39;myAssemblyInstaller2&#39; from the &#39;Installers&#39; collection.\n      if ( myTransactedInstaller-&gt;Installers-&gt;Contains( myAssemblyInstaller2 ) )\n      {\n         Console::WriteLine( &quot;<br>Installer at index : {0} is being removed&quot;, myTransactedInstaller-&gt;Installers-&gt;IndexOf( myAssemblyInstaller2 ) );\n         myTransactedInstaller-&gt;Installers-&gt;Remove( myAssemblyInstaller2 );\n      }\n</code></pre><pre><code class=\"lang-cs\" name=\"InstallerCollection_Remove#1\">         TransactedInstaller myTransactedInstaller = new TransactedInstaller();\n         AssemblyInstaller myAssemblyInstaller1;\n         AssemblyInstaller myAssemblyInstaller2;\n         InstallContext myInstallContext;\n\n         // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n         myAssemblyInstaller1 = \n            new AssemblyInstaller(&quot;MyAssembly1.exe&quot;, null);\n\n         // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n         myTransactedInstaller.Installers.Insert(0, myAssemblyInstaller1);\n\n         // Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n         myAssemblyInstaller2 = \n            new AssemblyInstaller(&quot;MyAssembly2.exe&quot;, null);\n\n         // Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n         myTransactedInstaller.Installers.Insert(1, myAssemblyInstaller2);\n\n         // Remove the &#39;myAssemblyInstaller2&#39; from the &#39;Installers&#39; collection.\n         if(myTransactedInstaller.Installers.Contains(myAssemblyInstaller2))\n         {\n            Console.WriteLine(&quot;<br>Installer at index : {0} is being removed&quot;,\n               myTransactedInstaller.Installers.IndexOf(myAssemblyInstaller2));\n            myTransactedInstaller.Installers.Remove(myAssemblyInstaller2);\n         }\n</code></pre><pre><code class=\"lang-vb\" name=\"InstallerCollection_Remove#1\">         Dim myTransactedInstaller As New TransactedInstaller()\n         Dim myAssemblyInstaller1 As AssemblyInstaller\n         Dim myAssemblyInstaller2 As AssemblyInstaller\n         Dim myInstallContext As InstallContext\n         \n         &#39; Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly1.exe&#39;.\n         myAssemblyInstaller1 = New AssemblyInstaller(&quot;MyAssembly1.exe&quot;, Nothing)\n         \n         &#39; Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n         myTransactedInstaller.Installers.Insert(0, myAssemblyInstaller1)\n         \n         &#39; Create a instance of &#39;AssemblyInstaller&#39; that installs &#39;MyAssembly2.exe&#39;.\n         myAssemblyInstaller2 = New AssemblyInstaller(&quot;MyAssembly2.exe&quot;, Nothing)\n         \n         &#39; Add the instance of &#39;AssemblyInstaller&#39; to the &#39;TransactedInstaller&#39;.\n         myTransactedInstaller.Installers.Insert(1, myAssemblyInstaller2)\n         \n         &#39; Remove the &#39;myAssemblyInstaller2&#39; from the &#39;Installers&#39; collection.\n         If myTransactedInstaller.Installers.Contains(myAssemblyInstaller2) Then\n            Console.WriteLine(ControlChars.Newline + &quot;Installer at index : {0} is being removed&quot;, _\n                              myTransactedInstaller.Installers.IndexOf(myAssemblyInstaller2))\n            myTransactedInstaller.Installers.Remove(myAssemblyInstaller2)\n         End If\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Configuration.Install.InstallerCollection.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Configuration.Install.InstallerCollection.yml\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallerCollection\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallerCollection.Add\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallerCollection.AddRange\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallerCollection.Contains\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallerCollection.CopyTo\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallerCollection.IndexOf\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallerCollection.Insert\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallerCollection.Item\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallerCollection.OnInsert\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallerCollection.OnRemove\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallerCollection.OnSet\">\r\n<meta name=\"APIName\" content=\"System.Configuration.Install.InstallerCollection.Remove\">\r\n<meta name=\"APILocation\" content=\"System.Configuration.Install.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"7cf5fe85-7588-a598-06e8-14eea10d50ca\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Contains a collection of installers to be run during an installation.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Configuration.Install/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Configuration.Install.InstallerCollection\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix pointer ref","commit_sha":"76befb0e7f7b41839ec719047e5b39a5981298f3","commit_date":"2017-02-28 15:47:23 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Configuration.Install.InstallerCollection.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Configuration.Install.InstallerCollection.yml","open_to_public_contributors":true,"api_name":["System.Configuration.Install.InstallerCollection","System.Configuration.Install.InstallerCollection.Add","System.Configuration.Install.InstallerCollection.AddRange","System.Configuration.Install.InstallerCollection.Contains","System.Configuration.Install.InstallerCollection.CopyTo","System.Configuration.Install.InstallerCollection.IndexOf","System.Configuration.Install.InstallerCollection.Insert","System.Configuration.Install.InstallerCollection.Item","System.Configuration.Install.InstallerCollection.OnInsert","System.Configuration.Install.InstallerCollection.OnRemove","System.Configuration.Install.InstallerCollection.OnSet","System.Configuration.Install.InstallerCollection.Remove"],"api_location":["System.Configuration.Install.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Configuration.Install.InstallerCollection","System::Configuration::Install::InstallerCollection","System.Configuration.Install.InstallerCollection.Add","System::Configuration::Install::InstallerCollection::Add","System.Configuration.Install.InstallerCollection.AddRange","System::Configuration::Install::InstallerCollection::AddRange","System.Configuration.Install.InstallerCollection.Contains","System::Configuration::Install::InstallerCollection::Contains","System.Configuration.Install.InstallerCollection.CopyTo","System::Configuration::Install::InstallerCollection::CopyTo","System.Configuration.Install.InstallerCollection.IndexOf","System::Configuration::Install::InstallerCollection::IndexOf","System.Configuration.Install.InstallerCollection.Insert","System::Configuration::Install::InstallerCollection::Insert","System.Configuration.Install.InstallerCollection.Item","System::Configuration::Install::InstallerCollection::Item","System.Configuration.Install.InstallerCollection.OnInsert","System::Configuration::Install::InstallerCollection::OnInsert","System.Configuration.Install.InstallerCollection.OnRemove","System::Configuration::Install::InstallerCollection::OnRemove","System.Configuration.Install.InstallerCollection.OnSet","System::Configuration::Install::InstallerCollection::OnSet","System.Configuration.Install.InstallerCollection.Remove","System::Configuration::Install::InstallerCollection::Remove"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"7cf5fe85-7588-a598-06e8-14eea10d50ca","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Configuration.Install/InstallerCollection.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"InstallerCollection class | Microsoft Docs","_op_ogTitle":"InstallerCollection class","description":"Contains a collection of installers to be run during an installation.\n","toc_asset_id":"_splitted/System.Configuration.Install/toc.json","toc_rel":"_splitted/System.Configuration.Install/toc.json","source_url":"","ms.assetid":"System.Configuration.Install.InstallerCollection","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.configuration.install.installercollection","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.configuration.install.installercollection","fileRelativePath":"System.Configuration.Install.InstallerCollection.html"},"themesRelativePathToOutputRoot":"_themes/"}