{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">PrincipalPermissionMode</span>\r\n      Enum\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Sets the mode for authorization checks when using the <a class=\"xref\" href=\"system.security.permissions.principalpermissionattribute\" data-linktype=\"relative-path\">PrincipalPermissionAttribute</a> to control access to a method.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\r\n  \t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public enum PrincipalPermissionMode</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.valuetype\" data-linktype=\"relative-path\">ValueType</a></span></div>\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.enum\" data-linktype=\"relative-path\">System.Enum</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">PrincipalPermissionMode</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>When applying the <a class=\"xref\" href=\"system.security.permissions.principalpermissionattribute\" data-linktype=\"relative-path\">PrincipalPermissionAttribute</a> to a method, this mode specifies which set of roles to use when authorizing access. By default, the attribute uses Windows groups (such as <code>Administrator</code> or <code>Users</code>) to specify the role to which the user must belong.  </p>\n<p> To set the mode programmatically, create an instance of the <code>ServiceHost</code> class, then find the <a class=\"xref\" href=\"system.servicemodel.description.serviceauthorizationbehavior\" data-linktype=\"relative-path\">ServiceAuthorizationBehavior</a> in its collection of behaviors, and set the <a class=\"xref\" href=\"system.servicemodel.description.serviceauthorizationbehavior#System_ServiceModel_Description_ServiceAuthorizationBehavior_PrincipalPermissionMode_\" data-linktype=\"relative-path\">PrincipalPermissionMode</a> to the appropriate enumeration. The following example sets the property to UseAspNetRoles.  </p>\n<pre><code class=\"lang-cs\" name=\"PrincipalPermissionMode#1\">            ServiceHost myServiceHost = new ServiceHost(typeof(Calculator), baseUri);\n            ServiceAuthorizationBehavior myServiceBehavior =\n                myServiceHost.Description.Behaviors.Find&lt;ServiceAuthorizationBehavior&gt;();\n            myServiceBehavior.PrincipalPermissionMode =\n                PrincipalPermissionMode.UseAspNetRoles;\n</code></pre><pre><code class=\"lang-vb\" name=\"PrincipalPermissionMode#1\">\t\t\tDim myServiceHost As New ServiceHost(GetType(Calculator), baseUri)\n\t\t\tDim myServiceBehavior As ServiceAuthorizationBehavior = myServiceHost.Description.Behaviors.Find(Of ServiceAuthorizationBehavior)()\n\t\t\tmyServiceBehavior.PrincipalPermissionMode = PrincipalPermissionMode.UseAspNetRoles\n</code></pre><p> You can also set the behavior in configuration by adding a <a href=\"../Topic/%3CserviceAuthorization%3E%20element.md\" data-linktype=\"relative-path\">&amp;lt;serviceAuthorization&amp;gt;</a> to the <a href=\"../Topic/%3CserviceBehaviors%3E.md\" data-linktype=\"relative-path\">&amp;lt;serviceBehaviors&amp;gt;</a> of a configuration file, as shown in the following code.  </p>\n<pre><code class=\"lang-cs\" name=\"PrincipalPermissionMode#10\">        // Only a client authenticated with a valid certificate that has the \n        // specified subject name and thumbprint can call this method.\n        [PrincipalPermission(SecurityAction.Demand,\n             Name = &quot;CN=ReplaceWithSubjectName; 123456712345677E8E230FDE624F841B1CE9D41E&quot;)]\n        public double Multiply(double a, double b)\n        {\n            return a * b;\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"PrincipalPermissionMode#10\">\t\t&#39; Only a client authenticated with a valid certificate that has the \n\t\t&#39; specified subject name and thumbprint can call this method.\n\t\t&lt;PrincipalPermission(SecurityAction.Demand, Name := &quot;CN=ReplaceWithSubjectName; 123456712345677E8E230FDE624F841B1CE9D41E&quot;)&gt; _\n\t\tPublic Function Multiply(ByVal a As Double, ByVal b As Double) As Double\n\t\t\tReturn a * b\n\t\tEnd Function\n</code></pre><p> The enumeration affects how the <a class=\"xref\" href=\"system.security.permissions.principalpermissionattribute\" data-linktype=\"relative-path\">PrincipalPermissionAttribute</a> attribute authorizes a user when it is applied to a method. The following example applies the attribute to a method and demands that the user belong to the Users group on the computer. This code works only when the <a class=\"xref\" href=\"system.servicemodel.description.serviceauthorizationbehavior#System_ServiceModel_Description_ServiceAuthorizationBehavior_PrincipalPermissionMode_\" data-linktype=\"relative-path\">PrincipalPermissionMode</a> is set to <code>UseWindowsGroup</code> (the default setting).  </p>\n<pre><code class=\"lang-cs\" name=\"PrincipalPermissionMode#2\">        // Only members of the CalculatorClients group can call this method.\n        [PrincipalPermission(SecurityAction.Demand, Role = &quot;Users&quot;)]\n        public double Add(double a, double b)\n        {\n            return a + b;\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"PrincipalPermissionMode#2\">\t\t&#39; Only members of the CalculatorClients group can call this method.\n\t\t&lt;PrincipalPermission(SecurityAction.Demand, Role := &quot;Users&quot;)&gt; _\n\t\tPublic Function Add(ByVal a As Double, ByVal b As Double) As Double\n\t\t\tReturn a + b\n\t\tEnd Function\n</code></pre><h2 id=\"useaspnetroles\">UseAspNetRoles</h2>\n<p> The UseAspNetRoles value is used for all credential types. This mode enables Windows Communication Foundation (WCF) to use the ASP.NET role provider to make authorization decisions.  </p>\n<p> When the credential for a service is an X.509 certificate, you can set the <code>Name</code> property of the <a class=\"xref\" href=\"system.security.permissions.principalpermissionattribute\" data-linktype=\"relative-path\">PrincipalPermissionAttribute</a> to a string that consists of the concatenated values of the Subject field and the Thumbprint field, as shown in the following example.  </p>\n<pre><code class=\"lang-cs\" name=\"PrincipalPermissionMode#3\">            ServiceHost myServiceHost = new ServiceHost(typeof(Calculator), baseUri);\n            ServiceAuthorizationBehavior myServiceBehavior =\n                myServiceHost.Description.Behaviors.Find&lt;ServiceAuthorizationBehavior&gt;();\n            myServiceBehavior.PrincipalPermissionMode =\n                PrincipalPermissionMode.UseAspNetRoles;\n            MyServiceAuthorizationManager sm = new MyServiceAuthorizationManager();\n            myServiceBehavior.ServiceAuthorizationManager = sm;\n</code></pre><pre><code class=\"lang-vb\" name=\"PrincipalPermissionMode#3\">\t\t\tDim myServiceHost As New ServiceHost(GetType(Calculator), baseUri)\n\t\t\tDim myServiceBehavior As ServiceAuthorizationBehavior = myServiceHost.Description.Behaviors.Find(Of ServiceAuthorizationBehavior)()\n\t\t\tmyServiceBehavior.PrincipalPermissionMode = PrincipalPermissionMode.UseAspNetRoles\n\t\t\tDim sm As New MyServiceAuthorizationManager()\n\t\t\tmyServiceBehavior.ServiceAuthorizationManager = sm\n</code></pre><p> The concatenated string consists of the subject and thumbprint values separated by a semicolon and a space.  </p>\n<p> It is also possible for a certificate to have a Subject field set to a null string. In that case, you can set the <code>Name</code> property to a semicolon followed by a space and then the thumbprint, as shown in the following example.  </p>\n<pre><code class=\"lang-cs\" name=\"PrincipalPermissionMode#4\">        // Only a client authenticated with a valid certificate that has the \n        // specified thumbprint can call this method.\n        [PrincipalPermission(SecurityAction.Demand,\n             Name = &quot;; 123456712345677E8E230FDE624F841B1CE9D41E&quot;)]\n        public double Divide(double a, double b)\n        {\n            return a * b;\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"PrincipalPermissionMode#4\">\t\t&#39; Only a client authenticated with a valid certificate that has the \n\t\t&#39; specified thumbprint can call this method.\n\t\t&lt;PrincipalPermission(SecurityAction.Demand, Name := &quot;; 123456712345677E8E230FDE624F841B1CE9D41E&quot;)&gt; _\n\t\tPublic Function Divide(ByVal a As Double, ByVal b As Double) As Double\n\t\t\tReturn a * b\n\t\tEnd Function\n</code></pre><p> If an ASP.NET role provider is present, you can also set the <a class=\"xref\" href=\"system.security.permissions.principalpermissionattribute#System_Security_Permissions_PrincipalPermissionAttribute_Role_\" data-linktype=\"relative-path\">Role</a> property to a role in the database. By default, the database is represented by the <a class=\"xref\" href=\"system.web.security.sqlroleprovider\" data-linktype=\"relative-path\">SqlRoleProvider</a>. You can also set a custom role provider with the <a class=\"xref\" href=\"system.servicemodel.description.serviceauthorizationbehavior#System_ServiceModel_Description_ServiceAuthorizationBehavior_RoleProvider_\" data-linktype=\"relative-path\">RoleProvider</a> property of the <a class=\"xref\" href=\"system.servicemodel.description.serviceauthorizationbehavior\" data-linktype=\"relative-path\">ServiceAuthorizationBehavior</a> class. The following code sets the role to <code>Administrators</code>. Note that the role provider must map the user account to that role.  </p>\n<pre><code class=\"lang-cs\" name=\"PrincipalPermissionMode#13\">        [PrincipalPermission(SecurityAction.Demand, Role = &quot;Administrators&quot;)]\n        public string ReadFile(string fileName)\n        {\n            // Code not shown.\n            return &quot;Not implemented&quot;;\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"PrincipalPermissionMode#13\">\t\t&lt;PrincipalPermission(SecurityAction.Demand, Role := &quot;Administrators&quot;)&gt; _\n\t\tPublic Function ReadFile(ByVal fileName As String) As String\n\t\t\t&#39; Code not shown.\n\t\t\tReturn &quot;Not implemented&quot;\n\t\tEnd Function\n</code></pre><p> For more information about the ASP.NET Role provider, see <a href=\"http://go.microsoft.com/fwlink/?LinkId=96692\" data-linktype=\"external\">How To: Use Role Manager in ASP.NET 2.0</a>.  </p>\n<p> For more information about using WCF and the role provider, see <a href=\"../Topic/How%20to:%20Use%20the%20ASP.NET%20Role%20Provider%20with%20a%20Service.md\" data-linktype=\"relative-path\">How to: Use the ASP.NET Role Provider with a Service</a>.  </p>\n<h2 id=\"custom\">Custom</h2>\n<p> When the property is set to Custom, you must also provide a custom class that implements the <a class=\"xref\" href=\"system.identitymodel.policy.iauthorizationpolicy\" data-linktype=\"relative-path\">IAuthorizationPolicy</a> class. This class is responsible for providing the caller&#39;s <code>IPrincipal</code> representation inside the <a class=\"xref\" href=\"system.identitymodel.policy.evaluationcontext#System_IdentityModel_Policy_EvaluationContext_Properties_\" data-linktype=\"relative-path\">Properties</a> collection. It must store the <code>IPrincipal</code> instance to the properties collection using the &quot;Principal&quot; string key, as shown in the following example.  </p>\n<pre><code>evaluationContext.Properties[&quot;Principal&quot;]=new CustomPrincipal(identity);  \n</code></pre><h2 id=\"background\">Background</h2>\n<p> The role-based security in .NET Framework enables applications to specify authorizations through code. By specifying the <a class=\"xref\" href=\"system.security.permissions.principalpermission\" data-linktype=\"relative-path\">PrincipalPermission</a> demand, the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_CurrentPrincipal_\" data-linktype=\"relative-path\">CurrentPrincipal</a> must satisfy the <code>PrincipalPermission</code> requirement. For example, that the user must be in a specific role or group. Otherwise, the thread is not authorized to execute the code, which results in an exception. WCF provides a set of PrincipalPermissionMode selections to specify the <a class=\"xref\" href=\"system.threading.thread#System_Threading_Thread_CurrentPrincipal_\" data-linktype=\"relative-path\">CurrentPrincipal</a> based on <a class=\"xref\" href=\"system.security.securitycontext\" data-linktype=\"relative-path\">SecurityContext</a> accordingly.</p>\n\r\n  \r\n      \t<h2 class=\"accented\">Fields\r\n      </h2>\r\n      <table class=\"nameValue\">\r\n      \t<tr><td id=\"System_ServiceModel_Description_PrincipalPermissionMode_Always\">\r\n      \t\t\t<span class=\"lang-csharp\">Always</span>\r\n      \t</td>\r\n      \t<td><p>Always enables the user to specify a <a class=\"xref\" href=\"system.security.principal.iprincipal\" data-linktype=\"relative-path\">IPrincipal</a> class for <span class=\"xref\">stem.Threading.Thread.CurrentPrincipal*</span>.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_ServiceModel_Description_PrincipalPermissionMode_Custom\">\r\n      \t\t\t<span class=\"lang-csharp\">Custom</span>\r\n      \t</td>\r\n      \t<td><p>Enables the user to specify a custom <a class=\"xref\" href=\"system.security.principal.iprincipal\" data-linktype=\"relative-path\">IPrincipal</a> class for <span class=\"xref\">stem.Threading.Thread.CurrentPrincipal*</span>.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_ServiceModel_Description_PrincipalPermissionMode_None\">\r\n      \t\t\t<span class=\"lang-csharp\">None</span>\r\n      \t</td>\r\n      \t<td><p><span class=\"xref\">stem.Threading.Thread.CurrentPrincipal*</span> is not set.</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_ServiceModel_Description_PrincipalPermissionMode_UseAspNetRoles\">\r\n      \t\t\t<span class=\"lang-csharp\">UseAspNetRoles</span>\r\n      \t</td>\r\n      \t<td><p><span class=\"xref\">stem.Threading.Thread.CurrentPrincipal*</span> is set based on the ASP.NET role provider (<a class=\"xref\" href=\"system.web.security.roleprovider\" data-linktype=\"relative-path\">RoleProvider</a>).</p>\n</td>\r\n      \t</tr>\r\n      \t<tr><td id=\"System_ServiceModel_Description_PrincipalPermissionMode_UseWindowsGroups\">\r\n      \t\t\t<span class=\"lang-csharp\">UseWindowsGroups</span>\r\n      \t</td>\r\n      \t<td><p><span class=\"xref\">stem.Threading.Thread.CurrentPrincipal*</span> is set based on Windows (<a class=\"xref\" href=\"system.security.principal.windowsprincipal\" data-linktype=\"relative-path\">WindowsPrincipal</a>). If the user identity is not associated with a Windows account, anonymous Windows is used.</p>\n</td>\r\n      \t</tr>\r\n      </table>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceModel.Description.PrincipalPermissionMode.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceModel.Description.PrincipalPermissionMode.yml\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Description.PrincipalPermissionMode\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Description.PrincipalPermissionMode.Always\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Description.PrincipalPermissionMode.Custom\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Description.PrincipalPermissionMode.None\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles\">\r\n<meta name=\"APIName\" content=\"System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups\">\r\n<meta name=\"APILocation\" content=\"System.ServiceModel.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"5080d3ad-faef-bf54-785a-b626b234bc6e\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Sets the mode for authorization checks when using the  to control access to a method.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.ServiceModel.Description/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.ServiceModel.Description.PrincipalPermissionMode\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.ServiceModel.Description.PrincipalPermissionMode.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.ServiceModel.Description.PrincipalPermissionMode.yml","open_to_public_contributors":true,"api_name":["System.ServiceModel.Description.PrincipalPermissionMode","System.ServiceModel.Description.PrincipalPermissionMode.Always","System.ServiceModel.Description.PrincipalPermissionMode.Custom","System.ServiceModel.Description.PrincipalPermissionMode.None","System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles","System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups"],"api_location":["System.ServiceModel.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.ServiceModel.Description.PrincipalPermissionMode","System::ServiceModel::Description::PrincipalPermissionMode","System.ServiceModel.Description.PrincipalPermissionMode.Always","System::ServiceModel::Description::PrincipalPermissionMode::Always","System.ServiceModel.Description.PrincipalPermissionMode.Custom","System::ServiceModel::Description::PrincipalPermissionMode::Custom","System.ServiceModel.Description.PrincipalPermissionMode.None","System::ServiceModel::Description::PrincipalPermissionMode::None","System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles","System::ServiceModel::Description::PrincipalPermissionMode::UseAspNetRoles","System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups","System::ServiceModel::Description::PrincipalPermissionMode::UseWindowsGroups"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"5080d3ad-faef-bf54-785a-b626b234bc6e","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.ServiceModel.Description/PrincipalPermissionMode.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"PrincipalPermissionMode enum | Microsoft Docs","_op_ogTitle":"PrincipalPermissionMode enum","description":"Sets the mode for authorization checks when using the  to control access to a method.\n","toc_asset_id":"_splitted/System.ServiceModel.Description/toc.json","toc_rel":"_splitted/System.ServiceModel.Description/toc.json","source_url":"","ms.assetid":"System.ServiceModel.Description.PrincipalPermissionMode","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.servicemodel.description.principalpermissionmode","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.servicemodel.description.principalpermissionmode","fileRelativePath":"System.ServiceModel.Description.PrincipalPermissionMode.html"},"themesRelativePathToOutputRoot":"_themes/"}