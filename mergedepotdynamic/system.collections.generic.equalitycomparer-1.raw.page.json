{"content":"    \r\n    <h1 id=\"System_Collections_Generic_EqualityComparer_1\">\r\n      <span class=\"lang-csharp\">EqualityComparer&lt;T&gt;</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a base class for implementations of the <span class=\"xref\">stem.Collections.Generic.IEqualityComparer`1</span> generic interface.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class EqualityComparer&lt;T&gt; : System.Collections.Generic.IEqualityComparer&lt;T&gt;, System.Collections.IEqualityComparer</code></pre>\r\n    \r\n    \r\n    \t<h2>Type Parameters</h2>\r\n    \r\n    \t<table class=\"nameValue\">\r\n    \t\t<tr>\r\n    \t\t<td>\r\n    \t\tT\r\n    \t\t</td>\r\n    \t\t<td>\r\n    \t\t<p>The type of objects to compare.</p>\n\r\n    \t\t</td>\r\n    \t\t</tr>\r\n    \t</table>\r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l1\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">EqualityComparer&lt;T&gt;</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Derive from this class to provide a custom implementation of the <a class=\"xref\" href=\"system.collections.generic.iequalitycomparer-1\" data-linktype=\"relative-path\">IEqualityComparer&lt;T&gt;</a> generic interface for use with collection classes such as the <a class=\"xref\" href=\"system.collections.generic.dictionary-2\" data-linktype=\"relative-path\">Dictionary&lt;TKey,TValue&gt;</a> generic class, or with methods such as <a class=\"xref\" href=\"system.collections.generic.list-1#System_Collections_Generic_List_1_Sort_\" data-linktype=\"relative-path\">Sort</a>.  </p>\n<p> The <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1#System_Collections_Generic_EqualityComparer_1_Default_\" data-linktype=\"relative-path\">Default</a> property checks whether type <code>T</code> implements the <a class=\"xref\" href=\"system.iequatable-1\" data-linktype=\"relative-path\">System.IEquatable&lt;T&gt;</a> generic interface and, if so, returns an EqualityComparer(T) that invokes the implementation of the <a class=\"xref\" href=\"system.iequatable-1#System_IEquatable_1_Equals_\" data-linktype=\"relative-path\">Equals</a> method. Otherwise, it returns an EqualityComparer(T), as provided by <code>T</code>.  </p>\n<p> We recommend that you derive from the EqualityComparer(T) class instead of implementing the <a class=\"xref\" href=\"system.collections.generic.iequalitycomparer-1\" data-linktype=\"relative-path\">IEqualityComparer&lt;T&gt;</a> interface, because the EqualityComparer(T) class tests for equality using the <a class=\"xref\" href=\"system.iequatable-1#System_IEquatable_1_Equals_\" data-linktype=\"relative-path\">Equals</a> method instead of the <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a> method. This is consistent with the <code>Contains</code>, <code>IndexOf</code>, <code>LastIndexOf</code>, and <code>Remove</code> methods of the <a class=\"xref\" href=\"system.collections.generic.dictionary-2\" data-linktype=\"relative-path\">Dictionary&lt;TKey,TValue&gt;</a> class and other generic collections.</p>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_EqualityComparer_1__ctor\" data-linktype=\"self-bookmark\">EqualityComparer&lt;T&gt;()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Collections.Generic.EqualityComparer`1</span> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_EqualityComparer_1_Default\" data-linktype=\"self-bookmark\">Default</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a default equality comparer for the type specified by the generic argument.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_EqualityComparer_1_Equals__0__0_\" data-linktype=\"self-bookmark\">Equals(T,T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, determines whether two objects of type <code>T</code> are equal.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_EqualityComparer_1_GetHashCode__0_\" data-linktype=\"self-bookmark\">GetHashCode(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Explicit Interface Implementations\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_EqualityComparer_1_System_Collections_IEqualityComparer_Equals_System_Object_System_Object_\" data-linktype=\"self-bookmark\">IEqualityComparer.Equals(Object,Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Determines whether the specified objects are equal.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Collections_Generic_EqualityComparer_1_System_Collections_IEqualityComparer_GetHashCode_System_Object_\" data-linktype=\"self-bookmark\">IEqualityComparer.GetHashCode(Object)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Returns a hash code for the specified object.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_EqualityComparer_1__ctor\">\r\n    \r\n            <a id=\"System_Collections_Generic_EqualityComparer_1__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EqualityComparer&lt;T&gt;()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <span class=\"xref\">stem.Collections.Generic.EqualityComparer`1</span> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected EqualityComparer ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_EqualityComparer_1_Default\">\r\n    \r\n            <a id=\"System_Collections_Generic_EqualityComparer_1_Default_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Default</div>        \r\n          </div>\r\n    \r\n            <p>Returns a default equality comparer for the type specified by the generic argument.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public static System.Collections.Generic.EqualityComparer&lt;T&gt; Default { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1\" data-linktype=\"relative-path\">EqualityComparer<t></t></a></div>\r\n                  </div>\r\n                  <p>The default instance of the <span class=\"xref\">stem.Collections.Generic.EqualityComparer`1</span> class for type <code>T</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Default property checks whether type <code>T</code> implements the <a class=\"xref\" href=\"system.iequatable-1\" data-linktype=\"relative-path\">System.IEquatable&lt;T&gt;</a> interface and, if so, returns an <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1\" data-linktype=\"relative-path\">EqualityComparer&lt;T&gt;</a> that uses that implementation. Otherwise, it returns an <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1\" data-linktype=\"relative-path\">EqualityComparer&lt;T&gt;</a> that uses the overrides of <a class=\"xref\" href=\"system.object#System_Object_Equals_\" data-linktype=\"relative-path\">Equals</a> and <a class=\"xref\" href=\"system.object#System_Object_GetHashCode_\" data-linktype=\"relative-path\">GetHashCode</a> provided by <code>T</code>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example creates two dictionary collections of type <code>Box</code>. Both dictionaries are created with the constructor that takes an <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1\" data-linktype=\"relative-path\">EqualityComparer&lt;T&gt;</a> as a parameter.  </p>\n<p> To determine the equality of dictionary keys, the <code>boxesByDim</code> dictionary uses an equality comparer (<code>BoxEqDimensions</code>) that uses the implementation of the <a class=\"xref\" href=\"system.iequatable-1#System_IEquatable_1_Equals_\" data-linktype=\"relative-path\">Equals</a> method in the <code>Box</code> class. Two boxes are considered equal if their dimensions are the same.  </p>\n<p> The <code>boxesByVol</code> dictionary uses an equality comparer (<code>BoxEqVolume</code>) that defines equality by volume. Two boxes are considered equal if their volumes are the same.  </p>\n<pre><code class=\"lang-cpp\" name=\"System.Collections.Generic.EqualityComparer.Default#1\">using namespace System;\nusing namespace System::Collections::Generic;\n\npublic ref class Box : public IEquatable&lt;Box^&gt;\n{\nprivate:\n    int height;\n    int length;\n    int width;\n\npublic:\n    Box(int h, int l, int w)\n    {\n        this-&gt;height = h;\n        this-&gt;length = l;\n        this-&gt;width = w;\n    }\n\n    property int Height\n    {\n        int get() {return this-&gt;height;}\n        void set(int value) {this-&gt;height = value;}\n    }\n\n    property int Length\n    {\n        int get() {return this-&gt;length;}\n        void set(int value) {this-&gt;length = value;}\n    }\n\n    property int Width\n    {\n        int get() {return this-&gt;width;}\n        void set(int value) {this-&gt;width = value;}\n    }\n\n    virtual bool Equals(Box^ other)\n    {\n        if (this-&gt;Height == other-&gt;Height &amp; this-&gt;Length == other-&gt;Length\n            &amp; this-&gt;Width == other-&gt;Width)\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n};\n\npublic ref class BoxEqDimensions : EqualityComparer&lt;Box^&gt;\n{\npublic:\n    virtual int GetHashCode(Box^ bx) override\n    {\n        int hCode = bx-&gt;Height ^ bx-&gt;Length ^ bx-&gt;Width;\n        return hCode.GetHashCode();\n    }\n\n    virtual bool Equals(Box^ b1, Box^ b2) override\n    {\n        return EqualityComparer&lt;Box^&gt;::Default-&gt;Equals(b1, b2);\n    }\n};\n\n\npublic ref class BoxEqVolume : EqualityComparer&lt;Box^&gt;\n{\npublic:\n    virtual int GetHashCode(Box^ bx) override\n    {\n        int hCode = bx-&gt;Height ^ bx-&gt;Length ^ bx-&gt;Width;\n        return hCode.GetHashCode();\n    }\n\n    virtual bool Equals(Box^ b1, Box^ b2) override\n    {\n        if (b1-&gt;Height * b1-&gt;Width * b1-&gt;Length ==\n            b2-&gt;Height * b2-&gt;Width * b2-&gt;Length)\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n};\n\npublic ref class Program\n{\npublic:\n    static void Main()\n    {\n        BoxEqDimensions^ bxd = gcnew BoxEqDimensions();\n        BoxEqVolume^ bxv = gcnew BoxEqVolume();\n\n        Dictionary&lt;Box^, String^&gt;^ boxesByDim = gcnew Dictionary&lt;Box^, String^&gt;(bxd);\n        Dictionary&lt;Box^, String^&gt;^ boxesByVol = gcnew Dictionary&lt;Box^, String^&gt;(bxv);\n\n        try\n        {\n            Box^ redBox = gcnew Box(8, 8, 4);\n            Box^ blueBox = gcnew Box(6, 8, 4);\n            Box^ greenBox = gcnew Box(4, 8, 8);\n\n            Console::WriteLine(&quot;Adding boxes by Dimension&quot;);\n\n            boxesByDim-&gt;Add(redBox, &quot;red&quot;);\n            boxesByDim-&gt;Add(blueBox, &quot;blue&quot;);\n            boxesByDim-&gt;Add(greenBox, &quot;green&quot;);\n\n            PrintBoxCollection(boxesByDim);\n\n            Console::WriteLine(&quot;<br>Adding boxes by Volume&quot;);\n\n            boxesByVol-&gt;Add(redBox, &quot;red&quot;);\n            boxesByVol-&gt;Add(blueBox, &quot;blue&quot;);\n            boxesByVol-&gt;Add(greenBox, &quot;green&quot;);\n\n            PrintBoxCollection(boxesByVol);\n        }\n        catch (ArgumentException^ argEx)\n        {\n            Console::WriteLine(argEx-&gt;Message);\n        }\n    }\nprivate:\n    static void PrintBoxCollection(Dictionary&lt;Box^,String^&gt;^ boxes)\n    {\n        for each (KeyValuePair&lt;Box^, String^&gt; kvp in boxes)\n        {\n            Console::WriteLine(&quot;{0} x {1} x {2} - {3}&quot;, kvp.Key-&gt;Height.ToString(),\n                                                       kvp.Key-&gt;Length.ToString(),\n                                                       kvp.Key-&gt;Width.ToString(), kvp.Value);\n        }\n    }\n};\n\nint main()\n{\n    Program::Main();\n}\n\n/* This example produces the following output:\n * \n   Adding boxes by Dimension\n    8 x 8 x 4 - red\n    6 x 8 x 4 - blue\n    4 x 8 x 8 - green\n\n    Adding boxes by Volume\n    An item with the same key has already been added.\n * \n */ \n</code></pre><pre><code class=\"lang-cs\" name=\"System.Collections.Generic.EqualityComparer.Default#1\">using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        BoxEqDimensions bxd = new BoxEqDimensions();\n        BoxEqVolume bxv = new BoxEqVolume();\n\n        Dictionary&lt;Box, string&gt; boxesByDim = new Dictionary&lt;Box, string&gt;(bxd);\n        Dictionary&lt;Box, string&gt; boxesByVol = new Dictionary&lt;Box, string&gt;(bxv);\n\n        try\n        {\n            Box redBox = new Box(8, 8, 4);\n            Box blueBox = new Box(6, 8, 4);\n            Box greenBox = new Box(4, 8, 8);\n\n            Console.WriteLine(&quot;Adding boxes by Dimension&quot;);\n\n            boxesByDim.Add(redBox, &quot;red&quot;);\n            boxesByDim.Add(blueBox, &quot;blue&quot;);\n            boxesByDim.Add(greenBox, &quot;green&quot;);\n\n            PrintBoxCollection(boxesByDim);\n\n            Console.WriteLine(&quot;<br>Adding boxes by Volume&quot;);\n\n            boxesByVol.Add(redBox, &quot;red&quot;);\n            boxesByVol.Add(blueBox, &quot;blue&quot;);\n            boxesByVol.Add(greenBox, &quot;green&quot;);\n\n            PrintBoxCollection(boxesByVol);\n        }\n        catch (ArgumentException argEx)\n        {\n            Console.WriteLine(argEx.Message);\n        }\n    }\n    private static void PrintBoxCollection(Dictionary&lt;Box,string&gt; boxes)\n    {\n        foreach (KeyValuePair&lt;Box, string&gt; kvp in boxes)\n        {\n            Console.WriteLine(&quot;{0} x {1} x {2} - {3}&quot;, kvp.Key.Height.ToString(),\n                                                       kvp.Key.Length.ToString(),\n                                                       kvp.Key.Width.ToString(), kvp.Value);\n        }\n    }\n}\n\npublic class BoxEqDimensions : EqualityComparer&lt;Box&gt;\n{\n    public override int GetHashCode(Box bx)\n    {\n        int hCode = bx.Height ^ bx.Length ^ bx.Width;\n        return hCode.GetHashCode();\n    }\n    \n    public override bool Equals(Box b1, Box b2)\n    {\n        return EqualityComparer&lt;Box&gt;.Default.Equals(b1, b2);\n    }\n}\n\n\npublic class BoxEqVolume : EqualityComparer&lt;Box&gt;\n{\n    public override int GetHashCode(Box bx)\n    {\n        int hCode = bx.Height ^ bx.Length ^ bx.Width;\n        return hCode.GetHashCode();\n    }\n\n    public override bool Equals(Box b1, Box b2)\n    {\n        if (b1.Height * b1.Width * b1.Length ==\n            b2.Height * b2.Width * b2.Length)\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n}\n\npublic class Box : IEquatable&lt;Box&gt;\n{\n\n    public Box(int h, int l, int w)\n    {\n        this.Height = h;\n        this.Length = l;\n        this.Width = w;\n    }\n    public int Height { get; set; }\n    public int Length { get; set; }\n    public int Width { get; set; }\n\n    public bool Equals(Box other)\n    {\n        if (this.Height == other.Height &amp; this.Length == other.Length\n            &amp; this.Width == other.Width)\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n}\n\n/* This example produces the following output:\n * \n   Adding boxes by Dimension\n    8 x 8 x 4 - red\n    6 x 8 x 4 - blue\n    4 x 8 x 8 - green\n\n    Adding boxes by Volume\n    An item with the same key has already been added.\n * \n */ \n</code></pre><pre><code class=\"lang-vb\" name=\"System.Collections.Generic.EqualityComparer.Default#1\">Imports System\nImports System.Collections\nImports System.Collections.Generic\n\nPublic Class Example\n    Public Shared Sub Main()\n        Dim bxd As New BoxEqDimensions()\n        Dim bxv As New BoxEqVolume()\n\n        Dim boxesByDim As New Dictionary(Of Box, String)(bxd)\n        Dim boxesByVol As New Dictionary(Of Box, String)(bxv)\n\n        Try\n            Dim redBox As New Box(8, 8, 4)\n            Dim blueBox As New Box(6, 8, 4)\n            Dim greenBox As New Box(4, 8, 8)\n\n            Console.WriteLine(&quot;Adding boxes by Dimension&quot;)\n\n            boxesByDim.Add(redBox, &quot;red&quot;)\n            boxesByDim.Add(blueBox, &quot;blue&quot;)\n            boxesByDim.Add(greenBox, &quot;green&quot;)\n\n            PrintBoxCollection(boxesByDim)\n\n            Console.WriteLine(vbLf &amp; &quot;Adding boxes by Volume&quot;)\n\n            boxesByDim.Add(redBox, &quot;red&quot;)\n            boxesByDim.Add(blueBox, &quot;blue&quot;)\n            boxesByDim.Add(greenBox, &quot;green&quot;)\n\n\n\n            PrintBoxCollection(boxesByVol)\n        Catch argEx As ArgumentException\n            Console.WriteLine(argEx.Message)\n        End Try\n    End Sub\n    Private Shared Sub PrintBoxCollection(ByVal boxes As Dictionary(Of Box, String))\n        For Each kvp As KeyValuePair(Of Box, String) In boxes\n            Console.WriteLine(&quot;{0} x {1} x {2} - {3}&quot;, kvp.Key.Height.ToString(), kvp.Key.Length.ToString(), kvp.Key.Width.ToString(), kvp.Value)\n        Next\n    End Sub\nEnd Class\nPublic Class BoxEqDimensions\n    Inherits EqualityComparer(Of Box)\n    Public Overloads Overrides Function GetHashCode(ByVal bx As Box) As Integer\n        Dim hCode As Integer = bx.Height Xor bx.Length Xor bx.Width\n        Return hCode.GetHashCode()\n    End Function\n\n    Public Overloads Overrides Function Equals(ByVal b1 As Box, ByVal b2 As Box) As Boolean\n        Return EqualityComparer(Of Box).[Default].Equals(b1, b2)\n    End Function\nEnd Class\n\n\nPublic Class BoxEqVolume\n    Inherits EqualityComparer(Of Box)\n    Public Overloads Overrides Function GetHashCode(ByVal bx As Box) As Integer\n        Dim hCode As Integer = bx.Height Xor bx.Length Xor bx.Width\n        Return hCode.GetHashCode()\n    End Function\n\n    Public Overloads Overrides Function Equals(ByVal b1 As Box, ByVal b2 As Box) As Boolean\n        If b1.Height * b1.Width * b1.Length = b2.Height * b2.Width * b2.Length Then\n            Return True\n        Else\n            Return False\n        End If\n    End Function\nEnd Class\n\nPublic Class Box\n    Implements IEquatable(Of Box)\n\n    Public Sub New(ByVal h As Integer, ByVal l As Integer, ByVal w As Integer)\n        Me.Height = h\n        Me.Length = l\n        Me.Width = w\n    End Sub\n    Private _Height As Integer\n    Public Property Height() As Integer\n        Get\n            Return _Height\n        End Get\n        Set(ByVal value As Integer)\n            _Height = value\n        End Set\n    End Property\n    Private _Length As Integer\n    Public Property Length() As Integer\n        Get\n            Return _Length\n        End Get\n        Set(ByVal value As Integer)\n            _Length = value\n        End Set\n    End Property\n    Private _Width As Integer\n    Public Property Width() As Integer\n        Get\n            Return _Width\n        End Get\n        Set(ByVal value As Integer)\n            _Width = value\n        End Set\n    End Property\n\n    Public Overloads Function Equals(ByVal other As Box) As Boolean Implements IEquatable(Of Box).Equals\n\n        If Me.Height = other.Height And Me.Length = other.Length And Me.Width = other.Width Then\n            Return True\n        Else\n            Return False\n        End If\n    End Function\nEnd Class\n&#39; This example produces the following output:\n&#39;  \n&#39; Adding boxes by Dimension\n&#39; 8 x 8 x 4 - red\n&#39; 6 x 8 x 4 - blue\n&#39; 4 x 8 x 8 - green\n&#39;\n&#39; Adding boxes by Volume\n&#39; An item with the same key has already been added.\n&#39; \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_EqualityComparer_1_Equals__0__0_\">\r\n    \r\n            <a id=\"System_Collections_Generic_EqualityComparer_1_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Equals(T,T)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, determines whether two objects of type <code>T</code> are equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract bool Equals (T x, T y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified objects are equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Equals method is reflexive, symmetric, and transitive. That is, it returns <code>true</code> if used to compare an object with itself; <code>true</code> for two objects <code>x</code> and <code>y</code> if it is <code>true</code> for <code>y</code> and <code>x</code>; and <code>true</code> for two objects <code>x</code> and <code>z</code> if it is <code>true</code> for <code>x</code> and <code>y</code> and also <code>true</code> for <code>y</code> and <code>z</code>.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_EqualityComparer_1_GetHashCode__0_\">\r\n    \r\n            <a id=\"System_Collections_Generic_EqualityComparer_1_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">GetHashCode(T)</div>        \r\n          </div>\r\n    \r\n            <p>When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract int GetHashCode (T obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The object for which to get a hash code.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A hash code for the specified object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The type of <code>obj</code> is a reference type and <code>obj</code> is <code>null</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"eii\">\r\n        <h2>Explicit Interface Implementations\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_EqualityComparer_1_System_Collections_IEqualityComparer_Equals_System_Object_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_Generic_EqualityComparer_1_System_Collections_IEqualityComparer_Equals_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IEqualityComparer.Equals(Object,Object)</div>        \r\n          </div>\r\n    \r\n            <p>Determines whether the specified objects are equal.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">bool IEqualityComparer.Equals (object x, object y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The first object to compare.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The second object to compare.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the specified objects are equal; otherwise, <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a></div>\r\n                  </div>\r\n                  <p><code>x</code> or <code>y</code> is of a type that cannot be cast to type <code>T</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is a wrapper for the <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1#System_Collections_Generic_EqualityComparer_1_Equals__0__0_\" data-linktype=\"relative-path\">Equals(T,T)</a> method, so <code>obj</code> must be cast to the type specified by the generic argument <code>T</code> of the current instance. If it cannot be cast to <code>T</code>, an <a class=\"xref\" href=\"system.argumentexception\" data-linktype=\"relative-path\">ArgumentException</a> is thrown.  </p>\n<p> Comparing <code>null</code> is allowed and does not generate an exception.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Collections_Generic_EqualityComparer_1_System_Collections_IEqualityComparer_GetHashCode_System_Object_\">\r\n    \r\n            <a id=\"System_Collections_Generic_EqualityComparer_1_System_Collections_IEqualityComparer_GetHashCode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">IEqualityComparer.GetHashCode(Object)</div>        \r\n          </div>\r\n    \r\n            <p>Returns a hash code for the specified object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">int IEqualityComparer.GetHashCode (object obj);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>obj</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a> for which a hash code is to be returned.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n              <h4>Returns</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.int32\" data-linktype=\"relative-path\">Int32</a></div>\r\n                  </div>\r\n                  <p>A hash code for the specified object.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.argumentnullexception\" data-linktype=\"relative-path\">ArgumentNullException</a></div>\r\n                  </div>\r\n                  <p>The type of <code>obj</code> is a reference type and <code>obj</code> is <code>null</code>.  </p>\n<p> -or-  </p>\n<p> <code>obj</code> is of a type that cannot be cast to type <code>T</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This method is a wrapper for the <a class=\"xref\" href=\"system.collections.generic.equalitycomparer-1#System_Collections_Generic_EqualityComparer_1_GetHashCode__0_\" data-linktype=\"relative-path\">GetHashCode(T)</a> method, so <code>obj</code> must be a type that can be cast to the type specified by the generic type argument <code>T</code> of the current instance.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.Generic.EqualityComparer-1.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.Generic.EqualityComparer-1.yml\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.EqualityComparer&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.EqualityComparer&lt;T&gt;..ctor\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.EqualityComparer&lt;T&gt;.Default\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.EqualityComparer&lt;T&gt;.Equals\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.EqualityComparer&lt;T&gt;.GetHashCode\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.EqualityComparer&lt;T&gt;.IEqualityComparer.Equals\">\r\n<meta name=\"APIName\" content=\"System.Collections.Generic.EqualityComparer&lt;T&gt;.IEqualityComparer.GetHashCode\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"f9d295fd-b5cd-cca7-2517-a6e8e604f306\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System.Collections.Generic\\EqualityComparer`1.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a base class for implementations of the  generic interface.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Collections.Generic/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Collections.Generic.EqualityComparer`1\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Collections.Generic.EqualityComparer-1.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Collections.Generic.EqualityComparer-1.yml","open_to_public_contributors":true,"api_name":["System.Collections.Generic.EqualityComparer<T>","System.Collections.Generic.EqualityComparer<T>..ctor","System.Collections.Generic.EqualityComparer<T>.Default","System.Collections.Generic.EqualityComparer<T>.Equals","System.Collections.Generic.EqualityComparer<T>.GetHashCode","System.Collections.Generic.EqualityComparer<T>.IEqualityComparer.Equals","System.Collections.Generic.EqualityComparer<T>.IEqualityComparer.GetHashCode"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Collections.Generic.EqualityComparer`1","System::Collections::Generic::EqualityComparer`1","System.Collections.Generic.EqualityComparer`1.#ctor","System::Collections::Generic::EqualityComparer`1::#ctor","System.Collections.Generic.EqualityComparer`1.Default","System::Collections::Generic::EqualityComparer`1::Default","System.Collections.Generic.EqualityComparer`1.Equals","System::Collections::Generic::EqualityComparer`1::Equals","System.Collections.Generic.EqualityComparer`1.GetHashCode","System::Collections::Generic::EqualityComparer`1::GetHashCode","System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals","System::Collections::Generic::EqualityComparer`1::System#Collections#IEqualityComparer#Equals","System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode","System::Collections::Generic::EqualityComparer`1::System#Collections#IEqualityComparer#GetHashCode"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"f9d295fd-b5cd-cca7-2517-a6e8e604f306","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System.Collections.Generic\\EqualityComparer`1.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Collections.Generic/EqualityComparer`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"EqualityComparer<T> class | Microsoft Docs","_op_ogTitle":"EqualityComparer<T> class","description":"Provides a base class for implementations of the  generic interface.\n","toc_asset_id":"_splitted/System.Collections.Generic/toc.json","toc_rel":"_splitted/System.Collections.Generic/toc.json","source_url":"","ms.assetid":"System.Collections.Generic.EqualityComparer`1","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.generic.equalitycomparer-1","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.collections.generic.equalitycomparer-1","fileRelativePath":"System.Collections.Generic.EqualityComparer-1.html"},"themesRelativePathToOutputRoot":"_themes/"}