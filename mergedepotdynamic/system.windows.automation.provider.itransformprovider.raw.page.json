{"content":"    \r\n    <h1 id=\"System_Windows_Automation_Provider_ITransformProvider\">\r\n      <span class=\"lang-csharp\">ITransformProvider</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Exposes methods and properties to support UI Automation client access to controls that can be moved, resized, or rotated within a two-dimensional space.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">[System.Runtime.InteropServices.ComVisible(true)]\n[System.Runtime.InteropServices.Guid(&quot;6829ddc4-4f91-4ffa-b86f-bd3e2987cb4c&quot;)]\n[System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]\npublic interface ITransformProvider</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>Implemented on a UI Automation provider that must support the <a class=\"xref\" href=\"system.windows.automation.transformpattern\" data-linktype=\"relative-path\">TransformPattern</a> control pattern.  </p>\n<p> Support for this control pattern is not limited to objects on the desktop. This control pattern must also be implemented by the children of a container object as long as the children can be moved, resized, or rotated freely within the boundaries of the container.</p>\n\r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Provider_ITransformProvider_CanMove\" data-linktype=\"self-bookmark\">CanMove</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that specifies whether the control can be moved.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Provider_ITransformProvider_CanResize\" data-linktype=\"self-bookmark\">CanResize</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that specifies whether the UI Automation element can be resized.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Provider_ITransformProvider_CanRotate\" data-linktype=\"self-bookmark\">CanRotate</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value that specifies whether the control can be rotated.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Provider_ITransformProvider_Move_System_Double_System_Double_\" data-linktype=\"self-bookmark\">Move(Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Moves the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Provider_ITransformProvider_Resize_System_Double_System_Double_\" data-linktype=\"self-bookmark\">Resize(Double,Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Resizes the control.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Windows_Automation_Provider_ITransformProvider_Rotate_System_Double_\" data-linktype=\"self-bookmark\">Rotate(Double)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Rotates the control.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Provider_ITransformProvider_CanMove\">\r\n    \r\n            <a id=\"System_Windows_Automation_Provider_ITransformProvider_CanMove_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanMove</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that specifies whether the control can be moved.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanMove { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the element can be moved; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an implementation of this method for a control that can be moved.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAITransformProvider_snip#CanMove\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Specifies whether moving is supported.\n&#39;&#39;&#39; &lt;/summary&gt;\nPrivate ReadOnly Property CanMove() As Boolean Implements ITransformProvider.CanMove\n\tGet\n\t\tReturn True\n\tEnd Get\nEnd Property\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAITransformProvider_snip#CanMove\">/// &lt;summary&gt;\n/// Specifies whether moving is supported.\n/// &lt;/summary&gt;\nbool ITransformProvider.CanMove\n{\n    get\n    {\n        return true;\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Provider_ITransformProvider_CanResize\">\r\n    \r\n            <a id=\"System_Windows_Automation_Provider_ITransformProvider_CanResize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanResize</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that specifies whether the UI Automation element can be resized.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanResize { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the element can be resized; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an implementation of this method for a control that can be resized.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAITransformProvider_snip#CanResize\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Specifies whether resizing is supported.\n&#39;&#39;&#39; &lt;/summary&gt;\nPrivate ReadOnly Property CanResize() As Boolean Implements ITransformProvider.CanResize\n\tGet\n\t\tReturn True\n\tEnd Get\nEnd Property\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAITransformProvider_snip#CanResize\">/// &lt;summary&gt;\n/// Specifies whether resizing is supported.\n/// &lt;/summary&gt;\nbool ITransformProvider.CanResize\n{\n    get\n    {\n        return true;\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Provider_ITransformProvider_CanRotate\">\r\n    \r\n            <a id=\"System_Windows_Automation_Provider_ITransformProvider_CanRotate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">CanRotate</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value that specifies whether the control can be rotated.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool CanRotate { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the element can be rotated; otherwise <code>false</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows an implementation of this method for a control that cannot be rotated.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAITransformProvider_snip#CanRotate\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Specifies whether rotating is supported.\n&#39;&#39;&#39; &lt;/summary&gt;\nPrivate ReadOnly Property CanRotate() As Boolean Implements ITransformProvider.CanRotate\n\tGet\n\t\tReturn False\n\tEnd Get\nEnd Property\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAITransformProvider_snip#CanRotate\">/// &lt;summary&gt;\n/// Specifies whether rotating is supported.\n/// &lt;/summary&gt;\nbool ITransformProvider.CanRotate\n{\n    get\n    {\n        return false;\n    }\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Provider_ITransformProvider_Move_System_Double_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Automation_Provider_ITransformProvider_Move_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Move(Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Moves the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Move (double x, double y);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>x</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Absolute screen coordinates of the left side of the control.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>y</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>Absolute screen coordinates of the top of the control.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>If the <span class=\"xref\">stem.Windows.Automation.Provider.ITransformProvider.CanMove*</span> property is false.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse. For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container&#39;s viewport. In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows one possible implementation of this method for a custom control that can be moved.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAITransformProvider_snip#Move\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Moves the provider to the specified position.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;x&quot;&gt;The specified X screen coordinate.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;y&quot;&gt;The specified Y screen coordinate&lt;/param&gt;\nPrivate Sub Move(ByVal x As Double, ByVal y As Double) Implements ITransformProvider.Move\n          Dim leftInt As Integer = CInt(x)\n          Dim topInt As Integer = CInt(y)\n\n\tIf Not(CType(Me, ITransformProvider)).CanMove Then\n\t\tThrow New InvalidOperationException(&quot;Operation cannot be performed.&quot;)\n\tEnd If\n\n\t&#39; Move should never be allowed to place a control outside the \n\t&#39; bounds of its container; the control should always be accessible \n\t&#39; using the keyboard or mouse.\n\t&#39; Use the bounds of the parent window to limit the placement \n\t&#39; of the custom control.\n\tDim maxLeft As Integer = 10\n\tDim maxTop As Integer = 10\n\tDim maxRight As Integer = Me.customControl.formWidth - Me.customControl.Width - 10\n\tDim maxBottom As Integer = Me.customControl.formHeight - Me.customControl.Height - 10\n\n\tIf leftInt &lt; maxLeft Then\n\t\tleftInt = 0\n\tEnd If\n\tIf topInt &lt; maxTop Then\n\t\ttopInt = 0\n\tEnd If\n\tIf leftInt &gt; maxRight Then\n\t\tleftInt = maxRight\n\tEnd If\n\tIf topInt &gt; maxBottom Then\n\t\ttopInt = maxBottom\n\tEnd If\n\n\t&#39; Invoke control method on separate thread to avoid clashing with UI.\n\t&#39; Use anonymous method for simplicity.\n\tMe.customControl.Invoke(New MethodInvoker(Sub()\n\t\tMe.customControl.Left = leftInt\n\t\tMe.customControl.Top = topInt\n\tEnd Sub))\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAITransformProvider_snip#Move\">/// &lt;summary&gt;\n/// Moves the provider to the specified position.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;x&quot;&gt;The specified X screen coordinate.&lt;/param&gt;\n/// &lt;param name=&quot;y&quot;&gt;The specified Y screen coordinate&lt;/param&gt;\nvoid ITransformProvider.Move(double x, double y)\n{\n    int leftInt = (int)x;\n    int topInt = (int)y;\n\n    if (!((ITransformProvider)this).CanMove)\n        throw new InvalidOperationException(\n            &quot;Operation cannot be performed.&quot;);\n\n    // Move should never be allowed to place a control outside the \n    // bounds of its container; the control should always be accessible \n    // using the keyboard or mouse.\n    // Use the bounds of the parent window to limit the placement \n    // of the custom control.\n    int maxLeft = 10;\n    int maxTop = 10;\n    int maxRight = \n        this.customControl.formWidth - this.customControl.Width - 10;\n    int maxBottom = \n        this.customControl.formHeight - this.customControl.Height - 10;\n\n    if (leftInt &lt; maxLeft)\n        leftInt = 0;\n    if (topInt &lt; maxTop)\n        topInt = 0;\n    if (leftInt &gt; maxRight)\n        leftInt = maxRight;\n    if (topInt &gt; maxBottom)\n        topInt = maxBottom;\n\n    // Invoke control method on separate thread to avoid clashing with UI.\n    // Use anonymous method for simplicity.\n    this.customControl.Invoke(new MethodInvoker(delegate()\n    {\n        this.customControl.Left = leftInt;\n        this.customControl.Top = topInt;\n    }));\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Provider_ITransformProvider_Resize_System_Double_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Automation_Provider_ITransformProvider_Resize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Resize(Double,Double)</div>        \r\n          </div>\r\n    \r\n            <p>Resizes the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Resize (double width, double height);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>width</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new width of the window, in pixels.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>height</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The new height of the window, in pixels.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>If the <span class=\"xref\">stem.Windows.Automation.Provider.ITransformProvider.CanResize*</span> property is false.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When called on a control that supports split panes, this method can have the side effect of resizing other contiguous panes.  </p>\n<p> An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse. For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container&#39;s viewport. In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows one possible implementation of this method for a custom control that can be resized.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAITransformProvider_snip#Resize\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Resizes the provider to the specified height and width.\n&#39;&#39;&#39; &lt;/summary&gt;\n&#39;&#39;&#39; &lt;param name=&quot;height&quot;&gt;The specified height.&lt;/param&gt;\n&#39;&#39;&#39; &lt;param name=&quot;width&quot;&gt;The specified width.&lt;/param&gt;\nPrivate Sub Resize(ByVal width As Double, ByVal height As Double) Implements ITransformProvider.Resize\n\tIf Not(CType(Me, ITransformProvider)).CanResize Then\n\t\tThrow New InvalidOperationException(&quot;Operation cannot be performed.&quot;)\n\tEnd If\n\n\tIf width &lt;= 0 Or height &lt;= 0 Then\n\t\tThrow New InvalidOperationException(&quot;Operation cannot be performed.&quot;)\n\tEnd If\n\n          Dim widthInt As Integer = CInt(width)\n          Dim heightInt As Integer = CInt(height)\n\n\t&#39; Resize should never be allowed to place a control outside the \n\t&#39; bounds of its container; the control should always be accessible \n\t&#39; using the keyboard or mouse.\n\t&#39; Use the bounds of the parent window to limit the placement \n\t&#39; of the custom control.\n\tDim MaxSize As New Size(Me.customControl.formWidth - 20, Me.customControl.formHeight - 20)\n\tDim MinSize As New Size(10, 10)\n\n\tIf widthInt &gt; MaxSize.Width Then\n\t\twidthInt = MaxSize.Width\n\tEnd If\n\tIf heightInt &gt; MaxSize.Height Then\n\t\theightInt = MaxSize.Height\n\tEnd If\n\tIf widthInt &lt; MinSize.Width Then\n\t\twidthInt = MinSize.Width\n\tEnd If\n\tIf heightInt &lt; MinSize.Height Then\n\t\theightInt = MinSize.Height\n\tEnd If\n\n\t&#39; Invoke control method on separate thread to avoid clashing with UI.\n          &#39; Use anonymous method for simplicity.\n\tMe.customControl.Invoke(New MethodInvoker(Sub() Me.customControl.Size = New Size(widthInt, heightInt)))\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAITransformProvider_snip#Resize\">/// &lt;summary&gt;\n/// Resizes the provider to the specified height and width.\n/// &lt;/summary&gt;\n/// &lt;param name=&quot;height&quot;&gt;The specified height.&lt;/param&gt;\n/// &lt;param name=&quot;width&quot;&gt;The specified width.&lt;/param&gt;\nvoid ITransformProvider.Resize(double width, double height)\n{\n    if (!((ITransformProvider)this).CanResize)\n        throw new InvalidOperationException(&quot;Operation cannot be performed.&quot;);\n\n    if (width &lt;= 0 | height &lt;= 0)\n        throw new InvalidOperationException(&quot;Operation cannot be performed.&quot;);\n\n    int widthInt = (int)width;\n    int heightInt = (int)height;\n\n    // Resize should never be allowed to place a control outside the \n    // bounds of its container; the control should always be accessible \n    // using the keyboard or mouse.\n    // Use the bounds of the parent window to limit the placement \n    // of the custom control.\n    Size MaxSize = \n        new Size(this.customControl.formWidth - 20, \n        this.customControl.formHeight - 20);\n    Size MinSize = new Size(10, 10);\n\n    if (widthInt &gt; MaxSize.Width)\n        widthInt = MaxSize.Width;\n    if (heightInt &gt; MaxSize.Height)\n        heightInt = MaxSize.Height;\n    if (widthInt &lt; MinSize.Width)\n        widthInt = MinSize.Width;\n    if (heightInt &lt; MinSize.Height)\n        heightInt = MinSize.Height;\n\n    // Invoke control method on separate thread to avoid clashing with UI.\n    // Use anonymous method for simplicity.\n    this.customControl.Invoke(new MethodInvoker(delegate()\n    {\n        this.customControl.Size = new Size(widthInt, heightInt);\n    }));\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Windows_Automation_Provider_ITransformProvider_Rotate_System_Double_\">\r\n    \r\n            <a id=\"System_Windows_Automation_Provider_ITransformProvider_Rotate_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Rotate(Double)</div>        \r\n          </div>\r\n    \r\n            <p>Rotates the control.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void Rotate (double degrees);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>degrees</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.double\" data-linktype=\"relative-path\">Double</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The number of degrees to rotate the control. A positive number rotates clockwise; a negative number rotates counterclockwise.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n              <h4>Exceptions</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.invalidoperationexception\" data-linktype=\"relative-path\">InvalidOperationException</a></div>\r\n                  </div>\r\n                  <p>If the <span class=\"xref\">stem.Windows.Automation.Provider.ITransformProvider.CanRotate*</span> property is false.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>An object cannot be moved, resized or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse. For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container&#39;s viewport. In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example shows one possible implementation of this method for a custom control that cannot be rotated.  </p>\n<pre><code class=\"lang-vb\" name=\"UIAITransformProvider_snip#Rotate\">&#39;&#39;&#39; &lt;summary&gt;\n&#39;&#39;&#39; Rotates the provider the specified number of degrees.\n&#39;&#39;&#39; &lt;/summary&gt;\nPrivate Sub Rotate(ByVal degreesToRotate As Double) Implements ITransformProvider.Rotate\n\tThrow New InvalidOperationException(&quot;Operation cannot be performed.&quot;)\nEnd Sub\n</code></pre><pre><code class=\"lang-cs\" name=\"UIAITransformProvider_snip#Rotate\">/// &lt;summary&gt;\n/// Rotates the provider the specified number of degrees.\n/// &lt;/summary&gt;\nvoid ITransformProvider.Rotate(double degreesToRotate)\n{\n    throw new InvalidOperationException(&quot;Operation cannot be performed.&quot;);\n}\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.Provider.ITransformProvider.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.Provider.ITransformProvider.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Provider.ITransformProvider\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Provider.ITransformProvider.CanMove\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Provider.ITransformProvider.CanResize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Provider.ITransformProvider.CanRotate\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Provider.ITransformProvider.Move\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Provider.ITransformProvider.Resize\">\r\n<meta name=\"APIName\" content=\"System.Windows.Automation.Provider.ITransformProvider.Rotate\">\r\n<meta name=\"APILocation\" content=\"UIAutomationProvider.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"cd9ad0a8-3779-4914-1da9-0d390d02c6d0\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Exposes methods and properties to support UI Automation client access to controls that can be moved, resized, or rotated within a two-dimensional space.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Automation.Provider/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Automation.Provider.ITransformProvider\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"add exceptions to reference section","commit_sha":"2f337ac32baa36b4ee4b5d8987b29dba4ce77336","commit_date":"2017-02-24 11:22:25 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Automation.Provider.ITransformProvider.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Automation.Provider.ITransformProvider.yml","open_to_public_contributors":true,"api_name":["System.Windows.Automation.Provider.ITransformProvider","System.Windows.Automation.Provider.ITransformProvider.CanMove","System.Windows.Automation.Provider.ITransformProvider.CanResize","System.Windows.Automation.Provider.ITransformProvider.CanRotate","System.Windows.Automation.Provider.ITransformProvider.Move","System.Windows.Automation.Provider.ITransformProvider.Resize","System.Windows.Automation.Provider.ITransformProvider.Rotate"],"api_location":["UIAutomationProvider.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Automation.Provider.ITransformProvider","System::Windows::Automation::Provider::ITransformProvider","System.Windows.Automation.Provider.ITransformProvider.CanMove","System::Windows::Automation::Provider::ITransformProvider::CanMove","System.Windows.Automation.Provider.ITransformProvider.CanResize","System::Windows::Automation::Provider::ITransformProvider::CanResize","System.Windows.Automation.Provider.ITransformProvider.CanRotate","System::Windows::Automation::Provider::ITransformProvider::CanRotate","System.Windows.Automation.Provider.ITransformProvider.Move","System::Windows::Automation::Provider::ITransformProvider::Move","System.Windows.Automation.Provider.ITransformProvider.Resize","System::Windows::Automation::Provider::ITransformProvider::Resize","System.Windows.Automation.Provider.ITransformProvider.Rotate","System::Windows::Automation::Provider::ITransformProvider::Rotate"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"cd9ad0a8-3779-4914-1da9-0d390d02c6d0","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Automation.Provider/ITransformProvider.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ITransformProvider interface | Microsoft Docs","_op_ogTitle":"ITransformProvider interface","description":"Exposes methods and properties to support UI Automation client access to controls that can be moved, resized, or rotated within a two-dimensional space.\n","toc_asset_id":"_splitted/System.Windows.Automation.Provider/toc.json","toc_rel":"_splitted/System.Windows.Automation.Provider/toc.json","source_url":"","ms.assetid":"System.Windows.Automation.Provider.ITransformProvider","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.provider.itransformprovider","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.automation.provider.itransformprovider","fileRelativePath":"System.Windows.Automation.Provider.ITransformProvider.html"},"themesRelativePathToOutputRoot":"_themes/"}