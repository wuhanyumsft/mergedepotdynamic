{"content":"    \r\n    <h1 id=\"System_Web_Management_BufferedWebEventProvider\">\r\n      <span class=\"lang-csharp\">BufferedWebEventProvider</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides the base functionality for creating event providers that require buffering.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract class BufferedWebEventProvider : System.Web.Management.WebEventProvider</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.configuration.provider.providerbase\" data-linktype=\"relative-path\">ProviderBase</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l2\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.management.webeventprovider\" data-linktype=\"relative-path\">System.Web.Management.WebEventProvider</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l3\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">BufferedWebEventProvider</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.configuration.provider.providerbase#System_Configuration_Provider_ProviderBase_Description\" data-linktype=\"relative-path\">Description</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.configuration.provider.providerbase#System_Configuration_Provider_ProviderBase_Name\" data-linktype=\"relative-path\">Name</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>ASP.NET health monitoring allows production and operations staff to manage deployed Web applications. The <a class=\"xref\" href=\"system.web.management\" data-linktype=\"relative-path\">System.Web.Management</a> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data. It also contains supporting types that help during the management of health events.  </p>\n<p> If you want to customize the health-event processing, you can derive from the BufferedWebEventProvider class to create your own custom buffered provider.  </p>\n<div class=\"NOTE\"><h5>Note</h5><p> In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the <code>healthMonitoring</code> configuration section. You can also derive from the health-monitoring types to create your own custom events and providers. For an example of creating a custom provider, see <a href=\"../Topic/How%20to:%20Implement%20the%20Health%20Monitoring%20Custom%20Provider%20Example.md\" data-linktype=\"relative-path\">How to: Implement the Health Monitoring Custom Provider Example</a>.</p>\n</div>\n\r\n    \r\n    \r\n    <h2>Constructors\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Management_BufferedWebEventProvider__ctor\" data-linktype=\"self-bookmark\">BufferedWebEventProvider()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.management.bufferedwebeventprovider\" data-linktype=\"relative-path\">BufferedWebEventProvider</a> class.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Management_BufferedWebEventProvider_BufferMode\" data-linktype=\"self-bookmark\">BufferMode</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating the buffering mode used by the provider.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Management_BufferedWebEventProvider_UseBuffering\" data-linktype=\"self-bookmark\">UseBuffering</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the provider is in buffered mode.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Management_BufferedWebEventProvider_Flush\" data-linktype=\"self-bookmark\">Flush()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Moves the events from the provider&#39;s buffer into the event log.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Management_BufferedWebEventProvider_Initialize_System_String_System_Collections_Specialized_NameValueCollection_\" data-linktype=\"self-bookmark\">Initialize(String,NameValueCollection)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Sets the initial values for this object.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Management_BufferedWebEventProvider_ProcessEvent_System_Web_Management_WebBaseEvent_\" data-linktype=\"self-bookmark\">ProcessEvent(WebBaseEvent)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the event passed to the provider.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Management_BufferedWebEventProvider_ProcessEventFlush_System_Web_Management_WebEventBufferFlushInfo_\" data-linktype=\"self-bookmark\">ProcessEventFlush(WebEventBufferFlushInfo)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Processes the buffered events.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Management_BufferedWebEventProvider_Shutdown\" data-linktype=\"self-bookmark\">Shutdown()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Performs tasks associated with shutting down the provider.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"constructors\">\r\n        <h2>Constructors\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Management_BufferedWebEventProvider__ctor\">\r\n    \r\n            <a id=\"System_Web_Management_BufferedWebEventProvider__ctor_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BufferedWebEventProvider()</div>        \r\n          </div>\r\n    \r\n            <p>Initializes a new instance of the <a class=\"xref\" href=\"system.web.management.bufferedwebeventprovider\" data-linktype=\"relative-path\">BufferedWebEventProvider</a> class.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected BufferedWebEventProvider ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This constructor is used internally by the ASP.NET health-monitoring system. You will never use it to instantiate a <a class=\"xref\" href=\"system.web.management.tracewebeventprovider\" data-linktype=\"relative-path\">TraceWebEventProvider</a> object, but you can call this constructor when implementing your own provider type that inherits from this class.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use this constructor in a custom event provider.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.Management.BufferedWebEventProvider#8\">        public SampleBufferedWebEventProvider()\n        {\n            // Perform local initializations.\n\n            // Path of local file where to store \n            // event info.\n            // Assure that the path works for you and\n            // that the right permissions are set.\n            logFilePath = &quot;C:/test/log.doc&quot;;\n            \n            // Instantiate buffer to contain \n            // local data.\n            customInfo = new StringBuilder();\n\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.Management.BufferedWebEventProvider#8\">   Public Sub New()\n      &#39; Perform local initializations.\n      &#39; Path of local file where to store \n      &#39; event info.\n      &#39; Assure that the path works for you and\n      &#39; that the right permissions are set.\n      logFilePath = &quot;C:/test/log.doc&quot;\n      \n      &#39; Instantiate buffer to contain \n      &#39; local data.\n      customInfo = New StringBuilder()\n   End Sub &#39;New\n    \n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Management_BufferedWebEventProvider_BufferMode\">\r\n    \r\n            <a id=\"System_Web_Management_BufferedWebEventProvider_BufferMode_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">BufferMode</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating the buffering mode used by the provider.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public string BufferMode { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The name of the buffering mode.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The BufferMode property contains the value defined by the <code>bufferMode</code> attribute in the <code>providers</code> element of the <code>healthMonitoring</code> section.  </p>\n<p> The following configuration-file excerpt shows how the name of the buffer mode should be defined in the <code>healthMonitoring</code> section.  </p>\n<pre><code>&lt;bufferModes&gt;  \n  &lt;add name =&quot;Custom Notification&quot; /&gt;  \n&lt;/bufferModes&gt;\n</code></pre>\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the BufferMode property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.Management.BufferedWebEventProvider#4\">        public string SampleBufferMode\n        {\n            get { return BufferMode; }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.Management.BufferedWebEventProvider#4\">   \n   Public ReadOnly Property SampleBufferMode() As String\n      Get\n         Return BufferMode\n      End Get\n    End Property\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Management_BufferedWebEventProvider_UseBuffering\">\r\n    \r\n            <a id=\"System_Web_Management_BufferedWebEventProvider_UseBuffering_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">UseBuffering</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the provider is in buffered mode.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public bool UseBuffering { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the provider is in buffered mode; otherwise, <code>false</code>. The default is <code>true</code>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The UseBuffering property contains the value defined by the <code>buffer</code> attribute in the <code>providers</code> element of the <code>healthMonitoring</code> section.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the UseBuffering property.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.Management.BufferedWebEventProvider#3\">        public bool SampleUseBuffering\n        {\n            get { return UseBuffering; }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.Management.BufferedWebEventProvider#3\">   \n   Public ReadOnly Property SampleUseBuffering() As Boolean\n      Get\n         Return UseBuffering\n      End Get\n    End Property\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Management_BufferedWebEventProvider_Flush\">\r\n    \r\n            <a id=\"System_Web_Management_BufferedWebEventProvider_Flush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Flush()</div>        \r\n          </div>\r\n    \r\n            <p>Moves the events from the provider&#39;s buffer into the event log.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Flush ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When this method is called, all the events in the buffer are immediately moved from the buffer to the log, regardless of how much time has elapsed since last write or how many events are in the buffer. The time of the last write is reset to the time of the flushing action.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the Flush method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.Management.BufferedWebEventProvider#9\">        public override void  Flush()\n        {\n            customInfo.AppendLine(&quot;Perform custom flush&quot;);\n            StoreToFile(customInfo, logFilePath, FileMode.Append);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.Management.BufferedWebEventProvider#9\">   Public Overrides Sub Flush()\n      customInfo.AppendLine(&quot;Perform custom flush&quot;)\n        StoreToFile(customInfo, _\n        logFilePath, FileMode.Append)\n   End Sub &#39;Flush\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Management_BufferedWebEventProvider_Initialize_System_String_System_Collections_Specialized_NameValueCollection_\">\r\n    \r\n            <a id=\"System_Web_Management_BufferedWebEventProvider_Initialize_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Initialize(String,NameValueCollection)</div>        \r\n          </div>\r\n    \r\n            <p>Sets the initial values for this object.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>name</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The name used in the configuration file to identify this provider.</p>\n\r\n                </li>\r\n                <li>\r\n                  <dl>\r\n                  <dt>config</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.collections.specialized.namevaluecollection\" data-linktype=\"relative-path\">NameValueCollection</a> that specifies the attributes assigned for this provider in the configuration file.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASP.NET calls the Initialize method after calling the <a class=\"xref\" href=\"system.web.management.bufferedwebeventprovider#System_Web_Management_BufferedWebEventProvider__ctor_\" data-linktype=\"relative-path\">BufferedWebEventProvider</a> constructor. This method is called to initialize the <a class=\"xref\" href=\"system.web.management.bufferedwebeventprovider\" data-linktype=\"relative-path\">BufferedWebEventProvider</a> with the configuration settings and name specified in the configuration file.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to use the Initialize method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.Management.BufferedWebEventProvider#2\">        // Initializes the provider.\n        public override void Initialize(string name,\n         NameValueCollection config)\n        {\n            base.Initialize(name, config);\n\n            // Get the configuration information.\n            providerName = name;\n            buffer = SampleUseBuffering.ToString();\n            bufferModality = SampleBufferMode;\n\n            customInfo.AppendLine(string.Format(\n                &quot;Provider name: {0}&quot;, providerName));\n            customInfo.AppendLine(string.Format(\n                &quot;Buffering: {0}&quot;, buffer));\n            customInfo.AppendLine(string.Format(\n                &quot;Buffering modality: {0}&quot;, bufferModality));\n\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.Management.BufferedWebEventProvider#2\">   &#39; Initializes the provider.\n    Public Overrides Sub Initialize(ByVal name As String, _\n    ByVal config As NameValueCollection)\n        MyBase.Initialize(name, config)\n\n        &#39; Get the configuration information.\n        providerName = name\n        buffer = SampleUseBuffering.ToString()\n        bufferModality = SampleBufferMode\n\n        customInfo.AppendLine(String.Format( _\n        &quot;Provider name: {0}&quot;, providerName))\n        customInfo.AppendLine(String.Format( _\n        &quot;Buffering: {0}&quot;, buffer))\n        customInfo.AppendLine(String.Format( _\n        &quot;Buffering modality: {0}&quot;, bufferModality))\n    End Sub &#39;Initialize\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Management_BufferedWebEventProvider_ProcessEvent_System_Web_Management_WebBaseEvent_\">\r\n    \r\n            <a id=\"System_Web_Management_BufferedWebEventProvider_ProcessEvent_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessEvent(WebBaseEvent)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the event passed to the provider.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>eventRaised</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.management.webbaseevent\" data-linktype=\"relative-path\">WebBaseEvent</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The <a class=\"xref\" href=\"system.web.management.webbaseevent\" data-linktype=\"relative-path\">WebBaseEvent</a> object to process.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>This is the method that ASP.NET health monitoring calls to start the processing of the event. If buffering is enabled, the event information is buffered; otherwise, it is dispatched to the current logging mechanism.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to implement the ProcessEvent method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.Management.BufferedWebEventProvider#5\">\n        // Processes the incoming events.\n        // This method performs custom processing and, \n        // if buffering is enabled, it calls the \n        // base.ProcessEvent to buffer the event\n        // information.\n        public override void ProcessEvent(\n            WebBaseEvent eventRaised)\n        {\n\n            if (UseBuffering)\n                // Buffering enabled, call the \n                // base event to buffer event information.\n                base.ProcessEvent(eventRaised);\n            else\n            {\n                // Buffering disabled, store the \n                // current event now.\n                customInfo.AppendLine(\n                    &quot;*** Buffering disabled ***&quot;);\n                customInfo.AppendLine(\n                    eventRaised.ToString());\n                // Store the information in the specified file.\n                StoreToFile(customInfo, \n                    logFilePath, FileMode.Append);\n            }\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.Management.BufferedWebEventProvider#5\">   &#39; Processes the incoming events.\n    &#39; This method performs custom \n    &#39; processing and, if buffering is \n    &#39; enabled, it calls the base.ProcessEvent\n    &#39; to buffer the event information.\n    Public Overrides Sub ProcessEvent( _\n    ByVal eventRaised As WebBaseEvent)\n\n        If UseBuffering Then\n            &#39; Buffering enabled, call the base event to\n            &#39; buffer event information.\n            MyBase.ProcessEvent(eventRaised)\n        Else\n            &#39; Buffering disabled, store the current event\n            &#39; now.\n            customInfo.AppendLine(&quot;*** Buffering disabled ***&quot;)\n            customInfo.AppendLine(eventRaised.ToString())\n            &#39; Store the information in the specified file.\n            StoreToFile(customInfo, _\n            logFilePath, FileMode.Append)\n        End If\n    End Sub &#39;ProcessEvent\n   \n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Management_BufferedWebEventProvider_ProcessEventFlush_System_Web_Management_WebEventBufferFlushInfo_\">\r\n    \r\n            <a id=\"System_Web_Management_BufferedWebEventProvider_ProcessEventFlush_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">ProcessEventFlush(WebEventBufferFlushInfo)</div>        \r\n          </div>\r\n    \r\n            <p>Processes the buffered events.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public abstract void ProcessEventFlush (System.Web.Management.WebEventBufferFlushInfo flushInfo);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>flushInfo</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.management.webeventbufferflushinfo\" data-linktype=\"relative-path\">WebEventBufferFlushInfo</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>A <a class=\"xref\" href=\"system.web.management.webeventbufferflushinfo\" data-linktype=\"relative-path\">WebEventBufferFlushInfo</a> that contains buffering information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The ProcessEventFlush method processes the messages that have been buffered. ASP.NET health monitoring calls the method when the flushing of the buffer is required. The intervals at which flushing is required is determined by the parameter value of the <code>bufferMode</code> attribute in the <code>providers</code> element in the <code>healthMonitoring</code> configuration section.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code example shows how to implement the ProcessEventFlush method.  </p>\n<pre><code class=\"lang-cs\" name=\"System.Web.Management.BufferedWebEventProvider#6\">\n        // Processes the messages that have been buffered.\n        // It is called by the ASP.NET when the flushing of \n        // the buffer is required.\n        public override void ProcessEventFlush(\n            WebEventBufferFlushInfo flushInfo)\n        {\n\n            // Customize event information to be sent to \n            // the Windows Event Viewer Application Log.\n            customInfo.AppendLine(\n                &quot;SampleEventLogWebEventProvider buffer flush.&quot;);\n\n            customInfo.AppendLine(\n                string.Format(&quot;NotificationType: {0}&quot;,\n                GetNotificationType(flushInfo)));\n\n            customInfo.AppendLine(\n                string.Format(&quot;EventsInBuffer: {0}&quot;,\n                GetEventsInBuffer(flushInfo)));\n\n            customInfo.AppendLine(\n                string.Format(\n                &quot;EventsDiscardedSinceLastNotification: {0}&quot;,\n                GetEventsDiscardedSinceLastNotification(flushInfo)));\n\n           \n            // Read each buffered event and send it to the\n            // Application Log.\n            foreach (WebBaseEvent eventRaised in flushInfo.Events)\n                customInfo.AppendLine(eventRaised.ToString());\n\n            // Store the information in the specified file.\n            StoreToFile(customInfo, logFilePath, FileMode.Append);\n        }\n</code></pre><pre><code class=\"lang-vb\" name=\"System.Web.Management.BufferedWebEventProvider#6\">    &#39; Processes the messages that have been buffered.\n    &#39; It is called by the ASP.NET when the flushing of \n    &#39; the buffer is required according to the parameters \n    &#39; defined in the &lt;bufferModes&gt; element of the \n    &#39; &lt;healthMonitoring&gt; configuration section.\n    Public Overrides Sub ProcessEventFlush(ByVal flushInfo _\n    As WebEventBufferFlushInfo)\n\n        &#39; Customize event information to be sent to \n        &#39; the Windows Event Viewer Application Log.\n        customInfo.AppendLine( _\n        &quot;SampleEventLogWebEventProvider buffer flush.&quot;)\n\n        customInfo.AppendLine(String.Format( _\n        &quot;NotificationType: {0}&quot;, _\n        GetNotificationType(flushInfo)))\n\n        customInfo.AppendLine(String.Format( _\n        &quot;EventsInBuffer: {0}&quot;, _\n        GetEventsInBuffer(flushInfo)))\n\n        customInfo.AppendLine(String.Format( _\n        &quot;EventsDiscardedSinceLastNotification: {0}&quot;, _\nGetEventsDiscardedSinceLastNotification( _\nflushInfo)))\n\n        &#39; Read each buffered event and send it to the\n        &#39; Application Log.\n        Dim eventRaised As WebBaseEvent\n        For Each eventRaised In flushInfo.Events\n            customInfo.AppendLine(eventRaised.ToString())\n        Next eventRaised\n        &#39; Store the information in the specified file.\n        StoreToFile(customInfo, logFilePath, _\n        FileMode.Append)\n    End Sub &#39;ProcessEventFlush\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Management_BufferedWebEventProvider_Shutdown\">\r\n    \r\n            <a id=\"System_Web_Management_BufferedWebEventProvider_Shutdown_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Shutdown()</div>        \r\n          </div>\r\n    \r\n            <p>Performs tasks associated with shutting down the provider.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override void Shutdown ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>ASP.NET calls the Shutdown method when the application domain hosting the Web application terminates. The method is called to perform tasks that will allow the application to end gracefully, such as closing resources.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Management.BufferedWebEventProvider.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Management.BufferedWebEventProvider.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Management.BufferedWebEventProvider\">\r\n<meta name=\"APIName\" content=\"System.Web.Management.BufferedWebEventProvider..ctor\">\r\n<meta name=\"APIName\" content=\"System.Web.Management.BufferedWebEventProvider.BufferMode\">\r\n<meta name=\"APIName\" content=\"System.Web.Management.BufferedWebEventProvider.Flush\">\r\n<meta name=\"APIName\" content=\"System.Web.Management.BufferedWebEventProvider.Initialize\">\r\n<meta name=\"APIName\" content=\"System.Web.Management.BufferedWebEventProvider.ProcessEvent\">\r\n<meta name=\"APIName\" content=\"System.Web.Management.BufferedWebEventProvider.ProcessEventFlush\">\r\n<meta name=\"APIName\" content=\"System.Web.Management.BufferedWebEventProvider.Shutdown\">\r\n<meta name=\"APIName\" content=\"System.Web.Management.BufferedWebEventProvider.UseBuffering\">\r\n<meta name=\"APILocation\" content=\"System.Web.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"830ed4cf-4378-746d-0b4f-3ef2d9003d07\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\o2y0\\s\\fulldocset\\xml\\System.Web.Management\\BufferedWebEventProvider.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides the base functionality for creating event providers that require buffering.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.Management/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Management.BufferedWebEventProvider\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"fix param transform, fix escaped xref","commit_sha":"2af997a764c82488dfa824f1c7bc4d736757d943","commit_date":"2017-02-22 17:04:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Management.BufferedWebEventProvider.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Management.BufferedWebEventProvider.yml","open_to_public_contributors":true,"api_name":["System.Web.Management.BufferedWebEventProvider","System.Web.Management.BufferedWebEventProvider..ctor","System.Web.Management.BufferedWebEventProvider.BufferMode","System.Web.Management.BufferedWebEventProvider.Flush","System.Web.Management.BufferedWebEventProvider.Initialize","System.Web.Management.BufferedWebEventProvider.ProcessEvent","System.Web.Management.BufferedWebEventProvider.ProcessEventFlush","System.Web.Management.BufferedWebEventProvider.Shutdown","System.Web.Management.BufferedWebEventProvider.UseBuffering"],"api_location":["System.Web.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Management.BufferedWebEventProvider","System::Web::Management::BufferedWebEventProvider","System.Web.Management.BufferedWebEventProvider.#ctor","System::Web::Management::BufferedWebEventProvider::#ctor","System.Web.Management.BufferedWebEventProvider.BufferMode","System::Web::Management::BufferedWebEventProvider::BufferMode","System.Web.Management.BufferedWebEventProvider.Flush","System::Web::Management::BufferedWebEventProvider::Flush","System.Web.Management.BufferedWebEventProvider.Initialize","System::Web::Management::BufferedWebEventProvider::Initialize","System.Web.Management.BufferedWebEventProvider.ProcessEvent","System::Web::Management::BufferedWebEventProvider::ProcessEvent","System.Web.Management.BufferedWebEventProvider.ProcessEventFlush","System::Web::Management::BufferedWebEventProvider::ProcessEventFlush","System.Web.Management.BufferedWebEventProvider.Shutdown","System::Web::Management::BufferedWebEventProvider::Shutdown","System.Web.Management.BufferedWebEventProvider.UseBuffering","System::Web::Management::BufferedWebEventProvider::UseBuffering"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"830ed4cf-4378-746d-0b4f-3ef2d9003d07","original_ecmaxml_local_path":"W:\\o2y0\\s\\fulldocset\\xml\\System.Web.Management\\BufferedWebEventProvider.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.Management/BufferedWebEventProvider.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"BufferedWebEventProvider class | Microsoft Docs","_op_ogTitle":"BufferedWebEventProvider class","description":"Provides the base functionality for creating event providers that require buffering.\n","toc_asset_id":"_splitted/System.Web.Management/toc.json","toc_rel":"_splitted/System.Web.Management/toc.json","source_url":"","ms.assetid":"System.Web.Management.BufferedWebEventProvider","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.management.bufferedwebeventprovider","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.management.bufferedwebeventprovider","fileRelativePath":"System.Web.Management.BufferedWebEventProvider.html"},"themesRelativePathToOutputRoot":"_themes/"}