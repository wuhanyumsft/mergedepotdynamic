{"content":"\r\n<div style=\"display:none\">\r\n\t\r\n</div>\r\n\r\n  \r\n  <h1>\r\n    <span class=\"lang-csharp\">ComponentCommands</span>\r\n    \t\t\t\tClass\r\n  </h1>\r\n  \r\n  <h2 class=\"hiddenAnchor\">Definition</h2>\r\n  \r\n  <div class=\"metadata\">\r\n  \r\n  \r\n  </div>\r\n  \r\n  <div class=\"summaryHolder\">\r\n  \t<div class=\"summary\">\r\n  \t\t<p>Provides a standard set of component-related commands, which have predefined key input gestures and <span class=\"xref\">stem.Windows.Input.RoutedUICommand.Text*</span> properties.</p>\n\r\n  \t</div>\r\n  </div><nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n    <h3>In this Article</h3>\r\n  </nav>\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\">public static class ComponentCommands</code></pre>\r\n  \r\n  \r\n  \r\n  \r\n  \t<dl class=\"attributeList stack\">\r\n  \t\t<dt>Inheritance</dt><dd>\r\n  \t\t<div class=\"pdlHolder\">\r\n  \t\t\t<div class=\"pdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">System.Object</a></span></div>\r\n  \t\t\t<span class=\"lang-csharp\">ComponentCommands</span>\r\n  \t\t</div>\r\n  \t\t</dd>\r\n  \t</dl>\r\n  \r\n  \r\n  \r\n  \r\n  \t<h3 class=\"accented\">Inherited Members</h3>\r\n  \t<h4 class=\"accented\"></h4>\r\n  \t<div class=\"cdlHolder\">\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a></span></div>\r\n  \t\t\t<div class=\"cdl\"><span class=\"lang-csharp\"><a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a></span></div>\r\n  \t</div>\r\n  \r\n  \t<h2 class=\"accented\">Remarks</h2>\r\n  \t<p>The commands in the ComponentCommands class and commands in the other command library classes, such as <a class=\"xref\" href=\"system.windows.input.applicationcommands\" data-linktype=\"relative-path\">ApplicationCommands</a> and <a class=\"xref\" href=\"system.windows.input.navigationcommands\" data-linktype=\"relative-path\">NavigationCommands</a>, are intended to represent a set of common commands that application programmers encounter frequently.  The commands only represent the instance of the <a class=\"xref\" href=\"system.windows.input.routedcommand\" data-linktype=\"relative-path\">RoutedCommand</a> and not the implementation logic for the command. The implementation logic is bound to the command via a <a class=\"xref\" href=\"system.windows.uielement#System_Windows_UIElement_CommandBindings_\" data-linktype=\"relative-path\">CommandBindings</a>. For example, if the <a class=\"xref\" href=\"system.windows.input.componentcommands#System_Windows_Input_ComponentCommands_MoveLeft_\" data-linktype=\"relative-path\">MoveLeft</a> command is executed on a control (the command target), the logic that performs the <a class=\"xref\" href=\"system.windows.input.componentcommands#System_Windows_Input_ComponentCommands_MoveLeft_\" data-linktype=\"relative-path\">MoveLeft</a> command may not be provided by the command target, so the application writer is responsible for writing the logic that determines how the command target handles the command.  </p>\n<p> Many controls do provide implementation logic, though, for many of the commands in the command library.  For example, the <a class=\"xref\" href=\"system.windows.controls.textbox\" data-linktype=\"relative-path\">TextBox</a> class provides logic for the <a class=\"xref\" href=\"system.windows.input.applicationcommands#System_Windows_Input_ApplicationCommands_Paste_\" data-linktype=\"relative-path\">Paste</a> command, <a class=\"xref\" href=\"system.windows.input.applicationcommands#System_Windows_Input_ApplicationCommands_Cut_\" data-linktype=\"relative-path\">Cut</a> command, <a class=\"xref\" href=\"system.windows.input.applicationcommands#System_Windows_Input_ApplicationCommands_Copy_\" data-linktype=\"relative-path\">Copy</a> command, <a class=\"xref\" href=\"system.windows.input.applicationcommands#System_Windows_Input_ApplicationCommands_Undo_\" data-linktype=\"relative-path\">Undo</a> command, and <a class=\"xref\" href=\"system.windows.input.applicationcommands#System_Windows_Input_ApplicationCommands_Redo_\" data-linktype=\"relative-path\">Redo</a> command. See the class documentation for particular control classes for more information.  </p>\n<p> For more information on commands and commanding, see <a href=\"../Topic/Commanding%20Overview.md\" data-linktype=\"relative-path\">Commanding Overview</a>.</p>\n\r\n  \r\n  \r\n  \t\t<section>\r\n  \t\t\t<h2 class=\"accented \">Properties\r\n  \t\t</h2>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_ExtendSelectionDown\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ExtendSelectionDown</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Extend Selection Down command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand ExtendSelectionDown { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Shift+Down<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Extend Selection Down<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to extend the selection downward.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_ExtendSelectionDown\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;ExtendSelectionDown&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_ExtendSelectionLeft\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ExtendSelectionLeft</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Extend Selection Left command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand ExtendSelectionLeft { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Shift+Left<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Extend Selection Left<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to extend the selection to the left.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_ExtendSelectionLeft\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;ExtendSelectionLeft&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_ExtendSelectionRight\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ExtendSelectionRight</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Extend Selection Right command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand ExtendSelectionRight { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Shift+Right<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Extend Selection Right<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to extend the selection to the right.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_ExtendSelectionRight\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;ExtendSelectionRight&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_ExtendSelectionUp\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ExtendSelectionUp</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Extend Selection Up command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand ExtendSelectionUp { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Shift+Up<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Extend Selection Up<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to extend the selection upward.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_ExtendSelectionUp\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;ExtendSelectionUp&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_MoveDown\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveDown</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Move Down command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand MoveDown { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Down<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Move Down<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to extend the selection down.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_MoveDown\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;MoveDown&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_MoveFocusBack\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveFocusBack</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Move Focus Back command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand MoveFocusBack { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Ctrl+Left<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Move Focus Back<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to extend the selection backward.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_MoveFocusBack\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;MoveFocusBack&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_MoveFocusDown\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveFocusDown</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Move Focus Down command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand MoveFocusDown { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Ctrl+Down<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Move Focus Down<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to extend move the focus down.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_MoveFocusDown\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;MoveFocusDown&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_MoveFocusForward\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveFocusForward</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Move Focus Forward command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand MoveFocusForward { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Ctrl+Right<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Move Focus Forward<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to move the focus forward.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_MoveFocusForward\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;MoveFocusForward&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_MoveFocusPageDown\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveFocusPageDown</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Move Focus Page Down command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand MoveFocusPageDown { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Ctrl+PageDown<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Move Focus Page Down<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to move the focus down one page.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_MoveFocusPageDown\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;MoveFocusPageDown&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_MoveFocusPageUp\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveFocusPageUp</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Move Focus Page Up command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand MoveFocusPageUp { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Ctrl+PageUp<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Move Focus Page Up<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to move the focus up one page.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_MoveFocusPageUp\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;MoveFocusPageUp&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_MoveFocusUp\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveFocusUp</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Move Focus Up command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand MoveFocusUp { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Ctrl+Up<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Move Focus Up<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to move the focus up.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_MoveFocusUp\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;MoveFocusUp&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_MoveLeft\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveLeft</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Move Left command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand MoveLeft { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Left<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Move Left<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to move the selection left.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_MoveLeft\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;MoveLeft&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_MoveRight\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveRight</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Move Right command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand MoveRight { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Right<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Move Right<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to move the selection right.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_MoveRight\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;MoveRight&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_MoveToEnd\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveToEnd</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Move To End command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand MoveToEnd { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> End<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Move To End<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to move the selection to the last item.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_MoveToEnd\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;MoveToEnd&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_MoveToHome\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveToHome</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Move To Home command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand MoveToHome { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Home<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Move To Home<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to move the selection to the first item.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_MoveToHome\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;MoveToHome&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_MoveToPageDown\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveToPageDown</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Move To Page Down command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand MoveToPageDown { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> PageDown<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Move To Page Down<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to move the selection down one page.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_MoveToPageDown\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;MoveToPageDown&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_MoveToPageUp\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveToPageUp</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Move To Page Up command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand MoveToPageUp { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> PageUp<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Move To Page Up<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to move the selection up one page.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_MoveToPageUp\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;MoveToPageUp&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_MoveUp\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">MoveUp</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Move Up command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand MoveUp { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Up<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Move Up<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to move the selection up.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_MoveUp\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;MoveUp&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_ScrollByLine\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ScrollByLine</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Scroll By Line command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand ScrollByLine { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> No gesture defined<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Scroll By Line<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to scroll vertically upward by a given number of lines.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_ScrollByLine\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;ScrollByLine&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_ScrollPageDown\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ScrollPageDown</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Scroll Page Down command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand ScrollPageDown { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> PageDown<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Scroll Page Down<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to scroll vertically downward by a page.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_ScrollPageDown\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;ScrollPageDown&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_ScrollPageLeft\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ScrollPageLeft</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Scroll Page Left command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand ScrollPageLeft { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> No gesture defined.<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Scroll Page Left<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to scroll one page to the left.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_ScrollPageLeft\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;ScrollPageLeft&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_ScrollPageRight\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ScrollPageRight</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Scroll Page Right command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand ScrollPageRight { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> No gesture defined.<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Scroll Page Right<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to scroll one page to the right.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_ScrollPageRight\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;ScrollPageRight&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_ScrollPageUp\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">ScrollPageUp</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Scroll Page Up command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand ScrollPageUp { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> PageUp<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Scroll Page Up<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to scroll vertically upward by a page.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_ScrollPageUp\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;ScrollPageUp&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_SelectToEnd\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SelectToEnd</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Select To End command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand SelectToEnd { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Shift+End<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Select To End<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to select the items from the current item to the last item.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_SelectToEnd\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;SelectToEnd&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_SelectToHome\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SelectToHome</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Select To Home command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand SelectToHome { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Shift+Home<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Select To Home<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to extend select the items from the current item to the first item.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_SelectToHome\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;SelectToHome&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_SelectToPageDown\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SelectToPageDown</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Select To Page Down command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand SelectToPageDown { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Shift+PageDown<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Select To Page Down<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to select from the current item down one page.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_SelectToPageDown\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;SelectToPageDown&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberNameHolder\" id=\"System_Windows_Input_ComponentCommands_SelectToPageUp\">\r\n  \t\t\t\t\t<h3 class=\"accented\">\r\n  \t\t\t\t\t\t<span class=\"lang-csharp\">SelectToPageUp</span>        \r\n  \t\t\t\t\t</h3>\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\t\t<div class=\"memberInfo\">\r\n  \t\t\t\t\t<p>Gets the value that represents the Select To Page Up command.</p>\n\r\n  \t\t\r\n  \t\t\t\t\t\t<pre class=\"wrap loading\"><code class=\"csharp lang-csharp\" dir=\"ltr\">public static System.Windows.Input.RoutedUICommand SelectToPageUp { get; }</code></pre>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t\t<div class=\"propertyInfo\">\r\n  \t\t\t\t\t\t\t<dl class=\"attributeList stack\">\r\n  \t\t\t\t\t\t\t\t<dt>Value</dt>\r\n  \t\t\t\t\t\t\t\t<dd>\r\n  \t\t\t\t\t\t\t\t\t\t<span class=\"lang-csharp\"><a class=\"xref\" href=\"system.windows.input.routeduicommand\" data-linktype=\"relative-path\">RoutedUICommand</a></span>\r\n  \t\t\t\t\t\t\t\t</dd>\r\n  \t\t\t\t\t\t\t</dl>\r\n  \t\t\t\t\t\t\t<p>The command.  </p>\n <table><thead><tr><th> Default Values<br>\n </th><th></th></tr></thead><tbody><tr><td> Key Gesture<br>\n </td><td> Shift+PageUp<br>\n </td></tr><tr><td> UI Text<br>\n </td><td> Select To Page Up<br>\n </td></tr></tbody></table>\r\n  \t\t\t\t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\r\n  \t\t\t\t\t\t<h4 class=\"accented\">Remarks</h4>\r\n  \t\t\t\t\t\t<p>This command indicates the intention to select from the current item up one page.  </p>\n<p> There is not necessarily an actual implementation responding to the command on any given object; in many cases the implementation in response to that command is the responsibility of the application writer.  </p>\n<p><a name=\"xamlAttributeUsage_SelectToPageUp\"></a>   </p>\n<h2 id=\"xaml-attribute-usage\">XAML Attribute Usage</h2>\n<pre><code>&lt;object property=&quot;SelectToPageUp&quot;/&gt;  \n</code></pre>\r\n  \t\t\r\n  \t\t\t\t</div>\r\n  \t\t\r\n  \t\t\r\n  \t\t  \r\n  \t\t</section>\r\n  \r\n  \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"author\" content=\"dotnet-bot\">\r\n<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.ComponentCommands.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.ComponentCommands.yml\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.ExtendSelectionDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.ExtendSelectionLeft\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.ExtendSelectionRight\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.ExtendSelectionUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.MoveDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.MoveFocusBack\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.MoveFocusDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.MoveFocusForward\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.MoveFocusPageDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.MoveFocusPageUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.MoveFocusUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.MoveLeft\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.MoveRight\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.MoveToEnd\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.MoveToHome\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.MoveToPageDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.MoveToPageUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.MoveUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.ScrollByLine\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.ScrollPageDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.ScrollPageLeft\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.ScrollPageRight\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.ScrollPageUp\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.SelectToEnd\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.SelectToHome\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.SelectToPageDown\">\r\n<meta name=\"APIName\" content=\"System.Windows.Input.ComponentCommands.SelectToPageUp\">\r\n<meta name=\"APILocation\" content=\"PresentationCore.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"fe914f74-7236-58d7-a2ff-b2fde7f6aeb7\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a standard set of component-related commands, which have predefined key input gestures and  properties.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Windows.Input/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Windows.Input.ComponentCommands\">\r\n","rawMetadata":{"author":"dotnet-bot","breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Windows.Input.ComponentCommands.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Windows.Input.ComponentCommands.yml","open_to_public_contributors":true,"api_name":["System.Windows.Input.ComponentCommands","System.Windows.Input.ComponentCommands.ExtendSelectionDown","System.Windows.Input.ComponentCommands.ExtendSelectionLeft","System.Windows.Input.ComponentCommands.ExtendSelectionRight","System.Windows.Input.ComponentCommands.ExtendSelectionUp","System.Windows.Input.ComponentCommands.MoveDown","System.Windows.Input.ComponentCommands.MoveFocusBack","System.Windows.Input.ComponentCommands.MoveFocusDown","System.Windows.Input.ComponentCommands.MoveFocusForward","System.Windows.Input.ComponentCommands.MoveFocusPageDown","System.Windows.Input.ComponentCommands.MoveFocusPageUp","System.Windows.Input.ComponentCommands.MoveFocusUp","System.Windows.Input.ComponentCommands.MoveLeft","System.Windows.Input.ComponentCommands.MoveRight","System.Windows.Input.ComponentCommands.MoveToEnd","System.Windows.Input.ComponentCommands.MoveToHome","System.Windows.Input.ComponentCommands.MoveToPageDown","System.Windows.Input.ComponentCommands.MoveToPageUp","System.Windows.Input.ComponentCommands.MoveUp","System.Windows.Input.ComponentCommands.ScrollByLine","System.Windows.Input.ComponentCommands.ScrollPageDown","System.Windows.Input.ComponentCommands.ScrollPageLeft","System.Windows.Input.ComponentCommands.ScrollPageRight","System.Windows.Input.ComponentCommands.ScrollPageUp","System.Windows.Input.ComponentCommands.SelectToEnd","System.Windows.Input.ComponentCommands.SelectToHome","System.Windows.Input.ComponentCommands.SelectToPageDown","System.Windows.Input.ComponentCommands.SelectToPageUp"],"api_location":["PresentationCore.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Windows.Input.ComponentCommands","System::Windows::Input::ComponentCommands","System.Windows.Input.ComponentCommands.ExtendSelectionDown","System::Windows::Input::ComponentCommands::ExtendSelectionDown","System.Windows.Input.ComponentCommands.ExtendSelectionLeft","System::Windows::Input::ComponentCommands::ExtendSelectionLeft","System.Windows.Input.ComponentCommands.ExtendSelectionRight","System::Windows::Input::ComponentCommands::ExtendSelectionRight","System.Windows.Input.ComponentCommands.ExtendSelectionUp","System::Windows::Input::ComponentCommands::ExtendSelectionUp","System.Windows.Input.ComponentCommands.MoveDown","System::Windows::Input::ComponentCommands::MoveDown","System.Windows.Input.ComponentCommands.MoveFocusBack","System::Windows::Input::ComponentCommands::MoveFocusBack","System.Windows.Input.ComponentCommands.MoveFocusDown","System::Windows::Input::ComponentCommands::MoveFocusDown","System.Windows.Input.ComponentCommands.MoveFocusForward","System::Windows::Input::ComponentCommands::MoveFocusForward","System.Windows.Input.ComponentCommands.MoveFocusPageDown","System::Windows::Input::ComponentCommands::MoveFocusPageDown","System.Windows.Input.ComponentCommands.MoveFocusPageUp","System::Windows::Input::ComponentCommands::MoveFocusPageUp","System.Windows.Input.ComponentCommands.MoveFocusUp","System::Windows::Input::ComponentCommands::MoveFocusUp","System.Windows.Input.ComponentCommands.MoveLeft","System::Windows::Input::ComponentCommands::MoveLeft","System.Windows.Input.ComponentCommands.MoveRight","System::Windows::Input::ComponentCommands::MoveRight","System.Windows.Input.ComponentCommands.MoveToEnd","System::Windows::Input::ComponentCommands::MoveToEnd","System.Windows.Input.ComponentCommands.MoveToHome","System::Windows::Input::ComponentCommands::MoveToHome","System.Windows.Input.ComponentCommands.MoveToPageDown","System::Windows::Input::ComponentCommands::MoveToPageDown","System.Windows.Input.ComponentCommands.MoveToPageUp","System::Windows::Input::ComponentCommands::MoveToPageUp","System.Windows.Input.ComponentCommands.MoveUp","System::Windows::Input::ComponentCommands::MoveUp","System.Windows.Input.ComponentCommands.ScrollByLine","System::Windows::Input::ComponentCommands::ScrollByLine","System.Windows.Input.ComponentCommands.ScrollPageDown","System::Windows::Input::ComponentCommands::ScrollPageDown","System.Windows.Input.ComponentCommands.ScrollPageLeft","System::Windows::Input::ComponentCommands::ScrollPageLeft","System.Windows.Input.ComponentCommands.ScrollPageRight","System::Windows::Input::ComponentCommands::ScrollPageRight","System.Windows.Input.ComponentCommands.ScrollPageUp","System::Windows::Input::ComponentCommands::ScrollPageUp","System.Windows.Input.ComponentCommands.SelectToEnd","System::Windows::Input::ComponentCommands::SelectToEnd","System.Windows.Input.ComponentCommands.SelectToHome","System::Windows::Input::ComponentCommands::SelectToHome","System.Windows.Input.ComponentCommands.SelectToPageDown","System::Windows::Input::ComponentCommands::SelectToPageDown","System.Windows.Input.ComponentCommands.SelectToPageUp","System::Windows::Input::ComponentCommands::SelectToPageUp"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"fe914f74-7236-58d7-a2ff-b2fde7f6aeb7","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Windows.Input/ComponentCommands.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"ComponentCommands class | Microsoft Docs","_op_ogTitle":"ComponentCommands class","description":"Provides a standard set of component-related commands, which have predefined key input gestures and  properties.\n","toc_asset_id":"_splitted/System.Windows.Input/toc.json","toc_rel":"_splitted/System.Windows.Input/toc.json","source_url":"","ms.assetid":"System.Windows.Input.ComponentCommands","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.componentcommands","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.windows.input.componentcommands","fileRelativePath":"System.Windows.Input.ComponentCommands.html"},"themesRelativePathToOutputRoot":"_themes/"}