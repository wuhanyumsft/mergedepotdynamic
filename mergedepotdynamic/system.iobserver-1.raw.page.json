{"content":"    \r\n    <h1 id=\"System_IObserver_1\">\r\n      <span class=\"lang-csharp\">IObserver&lt;T&gt;</span>\r\n        Interface\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Provides a mechanism for receiving push-based notifications.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public interface IObserver&lt;in T&gt;</code></pre>\r\n    \r\n    \r\n    \t<h2>Type Parameters</h2>\r\n    \r\n    \t<table class=\"nameValue\">\r\n    \t\t<tr>\r\n    \t\t<td>\r\n    \t\tT\r\n    \t\t</td>\r\n    \t\t<td>\r\n    \t\t<p>The object that provides notification information.</p>\n\r\n    \t\t</td>\r\n    \t\t</tr>\r\n    \t</table>\r\n    \r\n    \r\n    \r\n    \r\n      <h2>Remarks</h2>\r\n      <p>The IObserver(T) and <a class=\"xref\" href=\"system.iobservable-1\" data-linktype=\"relative-path\">IObservable&lt;T&gt;</a> interfaces provide a generalized mechanism for push-based notification, also known as the observer design pattern. The <a class=\"xref\" href=\"system.iobservable-1\" data-linktype=\"relative-path\">IObservable&lt;T&gt;</a> interface represents the class that sends notifications (the provider); the IObserver(T) interface represents the class that receives them (the observer). <code>T</code> represents the class that provides the notification information.  </p>\n<p> An IObserver(T) implementation arranges to receive notifications from a provider (an <a class=\"xref\" href=\"system.iobservable-1\" data-linktype=\"relative-path\">IObservable&lt;T&gt;</a> implementation) by passing an instance of itself to the provider&#39;s <a class=\"xref\" href=\"system.iobservable-1#System_IObservable_1_Subscribe_\" data-linktype=\"relative-path\">Subscribe</a> method. This method returns an <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> object that can be used to unsubscribe the observer before the provider finishes sending notifications.  </p>\n<p> The IObserver(T) interface defines the following three methods that the observer must implement:  </p>\n<ul>\n<li><p>The <a class=\"xref\" href=\"system.iobserver-1#System_IObserver_1_OnNext_\" data-linktype=\"relative-path\">OnNext</a> method, which is typically called by the provider to supply the observer with new data or state information.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.iobserver-1#System_IObserver_1_OnError_\" data-linktype=\"relative-path\">OnError</a> method, which is typically called by the provider to indicate that data is unavailable, inaccessible, or corrupted, or that the provider has experienced some other error condition.  </p>\n</li>\n<li><p>The <a class=\"xref\" href=\"system.iobserver-1#System_IObserver_1_OnCompleted_\" data-linktype=\"relative-path\">OnCompleted</a> method, which is typically called by the provider to indicate that it has finished sending notifications to observers.</p>\n</li>\n</ul>\n\r\n    \r\n    \r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IObserver_1_OnCompleted\" data-linktype=\"self-bookmark\">OnCompleted()</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Notifies the observer that the provider has finished sending push-based notifications.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IObserver_1_OnError_System_Exception_\" data-linktype=\"self-bookmark\">OnError(Exception)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Notifies the observer that the provider has experienced an error condition.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_IObserver_1_OnNext__0_\" data-linktype=\"self-bookmark\">OnNext(T)</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Provides the observer with new data.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_IObserver_1_OnCompleted\">\r\n    \r\n            <a id=\"System_IObserver_1_OnCompleted_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnCompleted()</div>        \r\n          </div>\r\n    \r\n            <p>Notifies the observer that the provider has finished sending push-based notifications.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void OnCompleted ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When the observer&#39;s OnCompleted implementation is called, the OnCompleted method can optionally call the <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> method of the <a class=\"xref\" href=\"system.idisposable\" data-linktype=\"relative-path\">IDisposable</a> object that was returned to the observer when it called the <a class=\"xref\" href=\"system.iobservable-1#System_IObservable_1_Subscribe_\" data-linktype=\"relative-path\">Subscribe</a> method.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example provides an implementation of the OnCompleted method in a latitude/longitude tracking application. The method simply reports that no further data is available and calls the provider&#39;s <a class=\"xref\" href=\"system.idisposable#System_IDisposable_Dispose_\" data-linktype=\"relative-path\">Dispose</a> implementation. See the Example section of the <a class=\"xref\" href=\"system.iobserver-1\" data-linktype=\"relative-path\">IObserver&lt;T&gt;</a> topic for the complete example.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IObserver.Class#11\">public virtual void OnCompleted()\n{\n   Console.WriteLine(&quot;The Location Tracker has completed transmitting data to {0}.&quot;, this.Name);\n   this.Unsubscribe();\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IObserver.Class#11\">Public Overridable Sub OnCompleted() Implements System.IObserver(Of Location).OnCompleted\n   Console.WriteLine(&quot;The Location Tracker has completed transmitting data to {0}.&quot;, Me.Name)\n   Me.Unsubscribe()\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IObserver_1_OnError_System_Exception_\">\r\n    \r\n            <a id=\"System_IObserver_1_OnError_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnError(Exception)</div>        \r\n          </div>\r\n    \r\n            <p>Notifies the observer that the provider has experienced an error condition.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void OnError (Exception error);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>error</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>An object that provides additional information about the error.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Although <code>error</code> is an object that is derived from <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">System.Exception</a>, it does not necessarily represent an exception that is thrown by the provider. It can also represent a routine or expected error condition, such as data that is missing or unavailable. The OnError method should be seen as informational, and the provider should not expect the observer to provide error handling.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example provides an implementation of the OnError method in a latitude/longitude tracking application. The method simply reports that data is currently unavailable; it does not make use of the <a class=\"xref\" href=\"system.exception\" data-linktype=\"relative-path\">Exception</a> object passed to it as a parameter. See the Example section of the <a class=\"xref\" href=\"system.iobserver-1\" data-linktype=\"relative-path\">IObserver&lt;T&gt;</a> topic for the complete example.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IObserver.Class#10\">public virtual void OnError(Exception e)\n{\n   Console.WriteLine(&quot;{0}: The location cannot be determined.&quot;, this.Name);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IObserver.Class#10\">Public Overridable Sub OnError(ByVal e As System.Exception) Implements System.IObserver(Of Location).OnError\n   Console.WriteLine(&quot;{0}: The location cannot be determined.&quot;, Me.Name)\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_IObserver_1_OnNext__0_\">\r\n    \r\n            <a id=\"System_IObserver_1_OnNext_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OnNext(T)</div>        \r\n          </div>\r\n    \r\n            <p>Provides the observer with new data.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public void OnNext (T value);</code></pre>\r\n    \r\n    \r\n              <h4>Parameters</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <dl>\r\n                  <dt>value</dt>\r\n                  <dd>\r\n                    <div class=\"lang-csharp\"><span class=\"xref\">T</span></div>\r\n                  </dd>\r\n                  </dl>\r\n                  <p>The current notification information.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>After an observer has called a provider&#39;s <a class=\"xref\" href=\"system.iobservable-1#System_IObservable_1_Subscribe_\" data-linktype=\"relative-path\">Subscribe</a> method, the provider calls the observer&#39;s OnNext method to provide notifications.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following example provides an implementation of the OnNext method in a latitude/longitude tracking application. See the Example section of the <a class=\"xref\" href=\"system.iobserver-1\" data-linktype=\"relative-path\">IObserver&lt;T&gt;</a> topic for the complete example.  </p>\n<pre><code class=\"lang-cs\" name=\"System.IObserver.Class#12\">public virtual void OnNext(Location value)\n{\n   Console.WriteLine(&quot;{2}: The current location is {0}, {1}&quot;, value.Latitude, value.Longitude, this.Name);\n}\n</code></pre><pre><code class=\"lang-vb\" name=\"System.IObserver.Class#12\">Public Overridable Sub OnNext(ByVal value As Location) Implements System.IObserver(Of Location).OnNext\n   Console.WriteLine(&quot;{2}: The current location is {0}, {1}&quot;, value.Latitude, value.Longitude, Me.Name)\nEnd Sub\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc1.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IObserver-1.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IObserver-1.yml\">\r\n<meta name=\"APIName\" content=\"System.IObserver&lt;T&gt;\">\r\n<meta name=\"APIName\" content=\"System.IObserver&lt;T&gt;.OnCompleted\">\r\n<meta name=\"APIName\" content=\"System.IObserver&lt;T&gt;.OnError\">\r\n<meta name=\"APIName\" content=\"System.IObserver&lt;T&gt;.OnNext\">\r\n<meta name=\"APILocation\" content=\"mscorlib.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"cf02bdd4-1622-a7be-5e18-89ffbde1e01a\">\r\n<meta name=\"original_ecmaxml_local_path\" content=\"W:\\vejk\\s\\fulldocset\\xml\\System\\IObserver`1.xml\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Provides a mechanism for receiving push-based notifications.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System/toc1.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.IObserver`1\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.IObserver-1.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.IObserver-1.yml","open_to_public_contributors":true,"api_name":["System.IObserver<T>","System.IObserver<T>.OnCompleted","System.IObserver<T>.OnError","System.IObserver<T>.OnNext"],"api_location":["mscorlib.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.IObserver`1","System::IObserver`1","System.IObserver`1.OnCompleted","System::IObserver`1::OnCompleted","System.IObserver`1.OnError","System::IObserver`1::OnError","System.IObserver`1.OnNext","System::IObserver`1::OnNext"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"cf02bdd4-1622-a7be-5e18-89ffbde1e01a","original_ecmaxml_local_path":"W:\\vejk\\s\\fulldocset\\xml\\System\\IObserver`1.xml","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System/IObserver`1.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"IObserver<T> interface | Microsoft Docs","_op_ogTitle":"IObserver<T> interface","description":"Provides a mechanism for receiving push-based notifications.\n","toc_asset_id":"_splitted/System/toc.json","toc_rel":"_splitted/System/toc.json","source_url":"","ms.assetid":"System.IObserver`1","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.iobserver-1","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.iobserver-1","fileRelativePath":"System.IObserver-1.html"},"themesRelativePathToOutputRoot":"_themes/"}