{"content":"    \r\n    <h1 id=\"System_Web_Services_Protocols_SoapClientMessage\">\r\n      <span class=\"lang-csharp\">SoapClientMessage</span>\r\n        Class\r\n    </h1>\r\n    \r\n    \r\n    <nav id=\"center-doc-outline\" class=\"doc-outline\" ms.cmpgrp=\"intopic toc\" role=\"navigation\" aria-label=\"On page navigation\">\r\n      <h3>In this Article</h3>\r\n    </nav><div class=\"summary\">\r\n    \t<p>Represents the data in a SOAP request sent or a SOAP response received by an XML Web service client at a specific <a class=\"xref\" href=\"system.web.services.protocols.soapmessagestage\" data-linktype=\"relative-path\">SoapMessageStage</a>. This class cannot be inherited.</p>\n\r\n    </div><h2>Syntax</h2>\r\n    \r\n    \t<h3>Declaration</h3>\r\n    \t<pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public sealed class SoapClientMessage : System.Web.Services.Protocols.SoapMessage</code></pre>\r\n    \r\n    \r\n    \r\n    <h3>Inheritance Hierarchy</h3>\r\n    <ul class=\"inheritance\">\r\n        <li class=\"l0\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object\" data-linktype=\"relative-path\">Object</a>\r\n          </div>\r\n        </li>\r\n        <li class=\"l1\">\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.soapmessage\" data-linktype=\"relative-path\">System.Web.Services.Protocols.SoapMessage</a>\r\n          </div>\r\n        </li>\r\n      <li class=\"l2\">\r\n        <div class=\"xref\">\r\n          <div class=\"lang-csharp\">SoapClientMessage</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    \r\n      <div class=\"referencebox inheritedMembers\">\r\n        <h3>Inherited Members</h3>\r\n        <h4></h4>\r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_\" data-linktype=\"relative-path\">Equals(Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_Equals_System_Object_System_Object_\" data-linktype=\"relative-path\">Equals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetHashCode\" data-linktype=\"relative-path\">GetHashCode()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_GetType\" data-linktype=\"relative-path\">GetType()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_MemberwiseClone\" data-linktype=\"relative-path\">MemberwiseClone()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ReferenceEquals_System_Object_System_Object_\" data-linktype=\"relative-path\">ReferenceEquals(Object,Object)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.object#System_Object_ToString\" data-linktype=\"relative-path\">ToString()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.soapmessage#System_Web_Services_Protocols_SoapMessage_ContentEncoding\" data-linktype=\"relative-path\">ContentEncoding</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.soapmessage#System_Web_Services_Protocols_SoapMessage_ContentType\" data-linktype=\"relative-path\">ContentType</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.soapmessage#System_Web_Services_Protocols_SoapMessage_EnsureStage_System_Web_Services_Protocols_SoapMessageStage_\" data-linktype=\"relative-path\">EnsureStage(SoapMessageStage)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.soapmessage#System_Web_Services_Protocols_SoapMessage_Exception\" data-linktype=\"relative-path\">Exception</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.soapmessage#System_Web_Services_Protocols_SoapMessage_GetInParameterValue_System_Int32_\" data-linktype=\"relative-path\">GetInParameterValue(Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.soapmessage#System_Web_Services_Protocols_SoapMessage_GetOutParameterValue_System_Int32_\" data-linktype=\"relative-path\">GetOutParameterValue(Int32)</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.soapmessage#System_Web_Services_Protocols_SoapMessage_GetReturnValue\" data-linktype=\"relative-path\">GetReturnValue()</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.soapmessage#System_Web_Services_Protocols_SoapMessage_Headers\" data-linktype=\"relative-path\">Headers</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.soapmessage#System_Web_Services_Protocols_SoapMessage_Stage\" data-linktype=\"relative-path\">Stage</a>\r\n          </div>\r\n          , \r\n          <div class=\"lang-csharp\">\r\n            <a class=\"xref\" href=\"system.web.services.protocols.soapmessage#System_Web_Services_Protocols_SoapMessage_Stream\" data-linktype=\"relative-path\">Stream</a>\r\n          </div>\r\n          \r\n      </div>\r\n    \r\n    \r\n    \r\n    \r\n    <h2>Properties\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Protocols_SoapClientMessage_Action\" data-linktype=\"self-bookmark\">Action</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the <code>SOAPAction</code> HTTP request header field for the SOAP request or SOAP response.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Protocols_SoapClientMessage_Client\" data-linktype=\"self-bookmark\">Client</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets an instance of the client proxy class, which derives from <a class=\"xref\" href=\"system.web.services.protocols.soaphttpclientprotocol\" data-linktype=\"relative-path\">SoapHttpClientProtocol</a>.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Protocols_SoapClientMessage_MethodInfo\" data-linktype=\"self-bookmark\">MethodInfo</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a representation of the method prototype of the XML Web service method for which the SOAP request is intended.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Protocols_SoapClientMessage_OneWay\" data-linktype=\"self-bookmark\">OneWay</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets a value indicating whether the client waits for the server to finish processing an XML Web service method.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Protocols_SoapClientMessage_SoapVersion\" data-linktype=\"self-bookmark\">SoapVersion</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the version of the SOAP protocol used to communicate with the XML Web service.</p>\n\r\n            </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td>\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Protocols_SoapClientMessage_Url\" data-linktype=\"self-bookmark\">Url</a></div>\r\n          </td>\r\n            <td>\r\n            <p>Gets the URL of the XML Web service.</p>\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n    <h2>Methods\r\n     summary</h2>\r\n    \r\n    <table class=\"nameValue\">\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Protocols_SoapClientMessage_EnsureInStage\" data-linktype=\"self-bookmark\">EnsureInStage()</a></div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\" enable-platform-filter\">\r\n          <td colspan=\"2\">\r\n            <div class=\"lang-csharp\"><a href=\"#System_Web_Services_Protocols_SoapClientMessage_EnsureOutStage\" data-linktype=\"self-bookmark\">EnsureOutStage()</a></div>\r\n          </td>\r\n        </tr>\r\n    </table>\r\n    <section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"properties\">\r\n        <h2>Properties\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Protocols_SoapClientMessage_Action\">\r\n    \r\n            <a id=\"System_Web_Services_Protocols_SoapClientMessage_Action_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Action</div>        \r\n          </div>\r\n    \r\n            <p>Gets the <code>SOAPAction</code> HTTP request header field for the SOAP request or SOAP response.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Action { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The <code>SOAPAction</code> HTTP request header field for the SOAP request or SOAP response.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Action property is available in any <a class=\"xref\" href=\"system.web.services.protocols.soapmessagestage\" data-linktype=\"relative-path\">SoapMessageStage</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code fragment is part of a SOAP extension that logs the SOAP messages sent and received by an XML Web service client. This particular fragment outputs to that log file the value of the <code>SOAPAction</code> HTTP request header field.  </p>\n<pre><code class=\"lang-cpp\" name=\"SoapClientMessage#2\">      newStream-&gt;Position = 0;\n      FileStream^ myFileStream = gcnew FileStream( filename, FileMode::Append,\n         FileAccess::Write );\n      StreamWriter^ myStreamWriter = gcnew StreamWriter( myFileStream );\n      myStreamWriter-&gt;WriteLine(\n         &quot;================================== Request at {0}&quot;, DateTime::Now );\n      \n      // Print to the log file the request header field for SoapAction header.\n      myStreamWriter-&gt;WriteLine( &quot;The SoapAction Http request header field is: &quot; );\n      myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, message-&gt;Action );\n      \n      // Print to the log file the type of the client that invoked \n      // the XML Web service method.\n      myStreamWriter-&gt;WriteLine( &quot;The type of the client is: &quot; );\n      if ( (message-&gt;Client-&gt;GetType())-&gt;Equals( typeid&lt;MathSvc^&gt; ) )\n      {\n         myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;MathSvc&quot; );\n      }\n      \n      // Print to the log file the method invoked by the client.\n      myStreamWriter-&gt;WriteLine(\n         &quot;The method that has been invoked by the client is:&quot; );\n      myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, message-&gt;MethodInfo-&gt;Name );\n      \n      // Print to the log file if the method invoked is OneWay.\n      if ( message-&gt;OneWay )\n      {\n         myStreamWriter-&gt;WriteLine(\n            &quot;The client doesn&#39;t wait for the server to finish processing&quot; );\n      }\n      else\n      {\n         myStreamWriter-&gt;WriteLine(\n         &quot;The client waits for the server to finish processing&quot; );\n      }\n      \n      // Print to the log file the URL of the site that provides \n      // implementation of the method.\n      myStreamWriter-&gt;WriteLine(\n         &quot;The URL of the XML Web service method that has been requested is: &quot; );\n      myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, message-&gt;Url );\n      myStreamWriter-&gt;WriteLine( &quot;The contents of the SOAP envelope are: &quot; );\n      myStreamWriter-&gt;Flush();\n      \n      // Copy the contents of one stream to another. \n      Copy( newStream, myFileStream );\n      myFileStream-&gt;Close();\n      newStream-&gt;Position = 0;\n      \n      // Copy the contents of one stream to another. \n      Copy( newStream, oldStream );\n</code></pre><pre><code class=\"lang-cs\" name=\"SoapClientMessage#2\">      newStream.Position = 0;\n      FileStream myFileStream = new FileStream(filename, FileMode.Append,\n         FileAccess.Write);\n      StreamWriter myStreamWriter = new StreamWriter(myFileStream);\n      myStreamWriter.WriteLine(\n         &quot;================================== Request at &quot;\n         + DateTime.Now);\n\n      // Print to the log file the request header field for SoapAction header.\n      myStreamWriter.WriteLine(&quot;The SoapAction Http request header field is: &quot;);\n      myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + message.Action);\n\n      // Print to the log file the type of the client that invoked \n      // the XML Web service method.\n      myStreamWriter.WriteLine(&quot;The type of the client is: &quot;);\n      if((message.Client.GetType()).Equals(typeof(MathSvc)))\n         myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;MathSvc&quot;);\n\n      // Print to the log file the method invoked by the client.\n      myStreamWriter.WriteLine(\n         &quot;The method that has been invoked by the client is:&quot;);\n      myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + message.MethodInfo.Name);\n\n      // Print to the log file if the method invoked is OneWay.\n      if(message.OneWay)\n         myStreamWriter.WriteLine(\n           &quot;The client doesn&#39;t wait for the server to finish processing&quot;);\n      else\n         myStreamWriter.WriteLine(\n           &quot;The client waits for the server to finish processing&quot;);\n\n      // Print to the log file the URL of the site that provides \n      // implementation of the method.\n      myStreamWriter.WriteLine(\n         &quot;The URL of the XML Web service method that has been requested is: &quot;);\n      myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + message.Url);\n      myStreamWriter.WriteLine(&quot;The contents of the SOAP envelope are: &quot;);\n      myStreamWriter.Flush();\n\n      // Copy the contents of one stream to another. \n      Copy(newStream, myFileStream);\n      myFileStream.Close();\n      newStream.Position = 0;\n\n      // Copy the contents of one stream to another. \n      Copy(newStream, oldStream);\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapClientMessage#2\">      newStream.Position = 0\n      Dim myFileStream As New FileStream(filename, FileMode.Append, _\n         FileAccess.Write)\n      Dim myStreamWriter As New StreamWriter(myFileStream)\n      myStreamWriter.WriteLine( _\n         &quot;================================== Request at &quot; &amp; DateTime.Now)\n\n      &#39; Print to the log file the request header field for SoapAction header.\n      myStreamWriter.WriteLine(&quot;The SoapAction Http request header field is: &quot;)\n      myStreamWriter.WriteLine(ControlChars.Tab &amp; message.Action)\n\n      &#39; Print to the log file the type of the client that invoked\n      &#39; the XML Web service method.\n      myStreamWriter.WriteLine(&quot;The type of the client is: &quot;)\n      If message.Client.GetType().Equals(GetType(MathSvc)) Then\n         myStreamWriter.WriteLine(ControlChars.Tab &amp; &quot;MathSvc&quot;)\n      End If\n\n     &#39; Print to the log file the method invoked by the client.\n      myStreamWriter.WriteLine( _\n         &quot;The method that has been invoked by the client is:&quot;)\n      myStreamWriter.WriteLine(ControlChars.Tab &amp; message.MethodInfo.Name)\n\n      &#39; Print to the log file if the method invoked is OneWay.\n      If message.OneWay Then\n         myStreamWriter.WriteLine( _\n            &quot;The client doesn&#39;t wait for the server to finish processing&quot;)\n      Else\n         myStreamWriter.WriteLine( _\n            &quot;The client waits for the server to finish processing&quot;)\n      End If \n\n      &#39; Print to the log file the URL of the site that provides \n      &#39; implementation of the method.\n      myStreamWriter.WriteLine( _\n         &quot;The url of the XML Web service method that has been requested is: &quot;)\n      myStreamWriter.WriteLine(ControlChars.Tab &amp; message.Url)\n      myStreamWriter.WriteLine(&quot;The contents of the SOAP envelope are: &quot;)\n      myStreamWriter.Flush()\n\n      &#39; Copy the contents of one stream to another. \n      Copy(newStream, myFileStream)\n      myStreamWriter.Close()\n      myFileStream.Close()\n      newStream.Position = 0\n\n      &#39; Copy the contents of one stream to another. \n      Copy(newStream, oldStream)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Protocols_SoapClientMessage_Client\">\r\n    \r\n            <a id=\"System_Web_Services_Protocols_SoapClientMessage_Client_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Client</div>        \r\n          </div>\r\n    \r\n            <p>Gets an instance of the client proxy class, which derives from <a class=\"xref\" href=\"system.web.services.protocols.soaphttpclientprotocol\" data-linktype=\"relative-path\">SoapHttpClientProtocol</a>.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public System.Web.Services.Protocols.SoapHttpClientProtocol Client { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.protocols.soaphttpclientprotocol\" data-linktype=\"relative-path\">SoapHttpClientProtocol</a></div>\r\n                  </div>\r\n                  <p>An instance of the client proxy class.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Client property can be accessed during any <a class=\"xref\" href=\"system.web.services.protocols.soapmessagestage\" data-linktype=\"relative-path\">SoapMessageStage</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code fragment is part of a SOAP extension that logs the SOAP messages sent and received by an XML Web service client. This particular fragment outputs to the log file the type of the proxy class, if it is <code>MathSvc</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"SoapClientMessage#3\">      newStream-&gt;Position = 0;\n      FileStream^ myFileStream = gcnew FileStream( filename, FileMode::Append,\n         FileAccess::Write );\n      StreamWriter^ myStreamWriter = gcnew StreamWriter( myFileStream );\n      myStreamWriter-&gt;WriteLine(\n         &quot;================================== Request at {0}&quot;, DateTime::Now );\n      \n      // Print to the log file the request header field for SoapAction header.\n      myStreamWriter-&gt;WriteLine( &quot;The SoapAction Http request header field is: &quot; );\n      myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, message-&gt;Action );\n      \n      // Print to the log file the type of the client that invoked \n      // the XML Web service method.\n      myStreamWriter-&gt;WriteLine( &quot;The type of the client is: &quot; );\n      if ( (message-&gt;Client-&gt;GetType())-&gt;Equals( typeid&lt;MathSvc^&gt; ) )\n      {\n         myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;MathSvc&quot; );\n      }\n      \n      // Print to the log file the method invoked by the client.\n      myStreamWriter-&gt;WriteLine(\n         &quot;The method that has been invoked by the client is:&quot; );\n      myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, message-&gt;MethodInfo-&gt;Name );\n      \n      // Print to the log file if the method invoked is OneWay.\n      if ( message-&gt;OneWay )\n      {\n         myStreamWriter-&gt;WriteLine(\n            &quot;The client doesn&#39;t wait for the server to finish processing&quot; );\n      }\n      else\n      {\n         myStreamWriter-&gt;WriteLine(\n         &quot;The client waits for the server to finish processing&quot; );\n      }\n      \n      // Print to the log file the URL of the site that provides \n      // implementation of the method.\n      myStreamWriter-&gt;WriteLine(\n         &quot;The URL of the XML Web service method that has been requested is: &quot; );\n      myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, message-&gt;Url );\n      myStreamWriter-&gt;WriteLine( &quot;The contents of the SOAP envelope are: &quot; );\n      myStreamWriter-&gt;Flush();\n      \n      // Copy the contents of one stream to another. \n      Copy( newStream, myFileStream );\n      myFileStream-&gt;Close();\n      newStream-&gt;Position = 0;\n      \n      // Copy the contents of one stream to another. \n      Copy( newStream, oldStream );\n</code></pre><pre><code class=\"lang-cs\" name=\"SoapClientMessage#3\">      newStream.Position = 0;\n      FileStream myFileStream = new FileStream(filename, FileMode.Append,\n         FileAccess.Write);\n      StreamWriter myStreamWriter = new StreamWriter(myFileStream);\n      myStreamWriter.WriteLine(\n         &quot;================================== Request at &quot;\n         + DateTime.Now);\n\n      // Print to the log file the request header field for SoapAction header.\n      myStreamWriter.WriteLine(&quot;The SoapAction Http request header field is: &quot;);\n      myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + message.Action);\n\n      // Print to the log file the type of the client that invoked \n      // the XML Web service method.\n      myStreamWriter.WriteLine(&quot;The type of the client is: &quot;);\n      if((message.Client.GetType()).Equals(typeof(MathSvc)))\n         myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;MathSvc&quot;);\n\n      // Print to the log file the method invoked by the client.\n      myStreamWriter.WriteLine(\n         &quot;The method that has been invoked by the client is:&quot;);\n      myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + message.MethodInfo.Name);\n\n      // Print to the log file if the method invoked is OneWay.\n      if(message.OneWay)\n         myStreamWriter.WriteLine(\n           &quot;The client doesn&#39;t wait for the server to finish processing&quot;);\n      else\n         myStreamWriter.WriteLine(\n           &quot;The client waits for the server to finish processing&quot;);\n\n      // Print to the log file the URL of the site that provides \n      // implementation of the method.\n      myStreamWriter.WriteLine(\n         &quot;The URL of the XML Web service method that has been requested is: &quot;);\n      myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + message.Url);\n      myStreamWriter.WriteLine(&quot;The contents of the SOAP envelope are: &quot;);\n      myStreamWriter.Flush();\n\n      // Copy the contents of one stream to another. \n      Copy(newStream, myFileStream);\n      myFileStream.Close();\n      newStream.Position = 0;\n\n      // Copy the contents of one stream to another. \n      Copy(newStream, oldStream);\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapClientMessage#3\">      newStream.Position = 0\n      Dim myFileStream As New FileStream(filename, FileMode.Append, _\n         FileAccess.Write)\n      Dim myStreamWriter As New StreamWriter(myFileStream)\n      myStreamWriter.WriteLine( _\n         &quot;================================== Request at &quot; &amp; DateTime.Now)\n\n      &#39; Print to the log file the request header field for SoapAction header.\n      myStreamWriter.WriteLine(&quot;The SoapAction Http request header field is: &quot;)\n      myStreamWriter.WriteLine(ControlChars.Tab &amp; message.Action)\n\n      &#39; Print to the log file the type of the client that invoked\n      &#39; the XML Web service method.\n      myStreamWriter.WriteLine(&quot;The type of the client is: &quot;)\n      If message.Client.GetType().Equals(GetType(MathSvc)) Then\n         myStreamWriter.WriteLine(ControlChars.Tab &amp; &quot;MathSvc&quot;)\n      End If\n\n     &#39; Print to the log file the method invoked by the client.\n      myStreamWriter.WriteLine( _\n         &quot;The method that has been invoked by the client is:&quot;)\n      myStreamWriter.WriteLine(ControlChars.Tab &amp; message.MethodInfo.Name)\n\n      &#39; Print to the log file if the method invoked is OneWay.\n      If message.OneWay Then\n         myStreamWriter.WriteLine( _\n            &quot;The client doesn&#39;t wait for the server to finish processing&quot;)\n      Else\n         myStreamWriter.WriteLine( _\n            &quot;The client waits for the server to finish processing&quot;)\n      End If \n\n      &#39; Print to the log file the URL of the site that provides \n      &#39; implementation of the method.\n      myStreamWriter.WriteLine( _\n         &quot;The url of the XML Web service method that has been requested is: &quot;)\n      myStreamWriter.WriteLine(ControlChars.Tab &amp; message.Url)\n      myStreamWriter.WriteLine(&quot;The contents of the SOAP envelope are: &quot;)\n      myStreamWriter.Flush()\n\n      &#39; Copy the contents of one stream to another. \n      Copy(newStream, myFileStream)\n      myStreamWriter.Close()\n      myFileStream.Close()\n      newStream.Position = 0\n\n      &#39; Copy the contents of one stream to another. \n      Copy(newStream, oldStream)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Protocols_SoapClientMessage_MethodInfo\">\r\n    \r\n            <a id=\"System_Web_Services_Protocols_SoapClientMessage_MethodInfo_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">MethodInfo</div>        \r\n          </div>\r\n    \r\n            <p>Gets a representation of the method prototype of the XML Web service method for which the SOAP request is intended.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Web.Services.Protocols.LogicalMethodInfo MethodInfo { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.protocols.logicalmethodinfo\" data-linktype=\"relative-path\">LogicalMethodInfo</a></div>\r\n                  </div>\r\n                  <p>A <a class=\"xref\" href=\"system.web.services.protocols.logicalmethodinfo\" data-linktype=\"relative-path\">LogicalMethodInfo</a> representing the XML Web service method for which the SOAP request is intended.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>Although the MethodInfo property can be accessed during any stage, the method information is only available during <a class=\"xref\" href=\"system.web.services.protocols.soapmessagestage\" data-linktype=\"relative-path\">SoapMessageStage</a> and <a class=\"xref\" href=\"system.web.services.protocols.soapmessagestage\" data-linktype=\"relative-path\">SoapMessageStage</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code fragment is part of a SOAP extension that logs the SOAP messages sent and received by an XML Web service client. This particular fragment outputs to that log file the name of the proxy class method invoked by the client.  </p>\n<pre><code class=\"lang-cpp\" name=\"SoapClientMessage#4\">      newStream-&gt;Position = 0;\n      FileStream^ myFileStream = gcnew FileStream( filename, FileMode::Append,\n         FileAccess::Write );\n      StreamWriter^ myStreamWriter = gcnew StreamWriter( myFileStream );\n      myStreamWriter-&gt;WriteLine(\n         &quot;================================== Request at {0}&quot;, DateTime::Now );\n      \n      // Print to the log file the request header field for SoapAction header.\n      myStreamWriter-&gt;WriteLine( &quot;The SoapAction Http request header field is: &quot; );\n      myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, message-&gt;Action );\n      \n      // Print to the log file the type of the client that invoked \n      // the XML Web service method.\n      myStreamWriter-&gt;WriteLine( &quot;The type of the client is: &quot; );\n      if ( (message-&gt;Client-&gt;GetType())-&gt;Equals( typeid&lt;MathSvc^&gt; ) )\n      {\n         myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;MathSvc&quot; );\n      }\n      \n      // Print to the log file the method invoked by the client.\n      myStreamWriter-&gt;WriteLine(\n         &quot;The method that has been invoked by the client is:&quot; );\n      myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, message-&gt;MethodInfo-&gt;Name );\n      \n      // Print to the log file if the method invoked is OneWay.\n      if ( message-&gt;OneWay )\n      {\n         myStreamWriter-&gt;WriteLine(\n            &quot;The client doesn&#39;t wait for the server to finish processing&quot; );\n      }\n      else\n      {\n         myStreamWriter-&gt;WriteLine(\n         &quot;The client waits for the server to finish processing&quot; );\n      }\n      \n      // Print to the log file the URL of the site that provides \n      // implementation of the method.\n      myStreamWriter-&gt;WriteLine(\n         &quot;The URL of the XML Web service method that has been requested is: &quot; );\n      myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, message-&gt;Url );\n      myStreamWriter-&gt;WriteLine( &quot;The contents of the SOAP envelope are: &quot; );\n      myStreamWriter-&gt;Flush();\n      \n      // Copy the contents of one stream to another. \n      Copy( newStream, myFileStream );\n      myFileStream-&gt;Close();\n      newStream-&gt;Position = 0;\n      \n      // Copy the contents of one stream to another. \n      Copy( newStream, oldStream );\n</code></pre><pre><code class=\"lang-cs\" name=\"SoapClientMessage#4\">      newStream.Position = 0;\n      FileStream myFileStream = new FileStream(filename, FileMode.Append,\n         FileAccess.Write);\n      StreamWriter myStreamWriter = new StreamWriter(myFileStream);\n      myStreamWriter.WriteLine(\n         &quot;================================== Request at &quot;\n         + DateTime.Now);\n\n      // Print to the log file the request header field for SoapAction header.\n      myStreamWriter.WriteLine(&quot;The SoapAction Http request header field is: &quot;);\n      myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + message.Action);\n\n      // Print to the log file the type of the client that invoked \n      // the XML Web service method.\n      myStreamWriter.WriteLine(&quot;The type of the client is: &quot;);\n      if((message.Client.GetType()).Equals(typeof(MathSvc)))\n         myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;MathSvc&quot;);\n\n      // Print to the log file the method invoked by the client.\n      myStreamWriter.WriteLine(\n         &quot;The method that has been invoked by the client is:&quot;);\n      myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + message.MethodInfo.Name);\n\n      // Print to the log file if the method invoked is OneWay.\n      if(message.OneWay)\n         myStreamWriter.WriteLine(\n           &quot;The client doesn&#39;t wait for the server to finish processing&quot;);\n      else\n         myStreamWriter.WriteLine(\n           &quot;The client waits for the server to finish processing&quot;);\n\n      // Print to the log file the URL of the site that provides \n      // implementation of the method.\n      myStreamWriter.WriteLine(\n         &quot;The URL of the XML Web service method that has been requested is: &quot;);\n      myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + message.Url);\n      myStreamWriter.WriteLine(&quot;The contents of the SOAP envelope are: &quot;);\n      myStreamWriter.Flush();\n\n      // Copy the contents of one stream to another. \n      Copy(newStream, myFileStream);\n      myFileStream.Close();\n      newStream.Position = 0;\n\n      // Copy the contents of one stream to another. \n      Copy(newStream, oldStream);\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapClientMessage#4\">      newStream.Position = 0\n      Dim myFileStream As New FileStream(filename, FileMode.Append, _\n         FileAccess.Write)\n      Dim myStreamWriter As New StreamWriter(myFileStream)\n      myStreamWriter.WriteLine( _\n         &quot;================================== Request at &quot; &amp; DateTime.Now)\n\n      &#39; Print to the log file the request header field for SoapAction header.\n      myStreamWriter.WriteLine(&quot;The SoapAction Http request header field is: &quot;)\n      myStreamWriter.WriteLine(ControlChars.Tab &amp; message.Action)\n\n      &#39; Print to the log file the type of the client that invoked\n      &#39; the XML Web service method.\n      myStreamWriter.WriteLine(&quot;The type of the client is: &quot;)\n      If message.Client.GetType().Equals(GetType(MathSvc)) Then\n         myStreamWriter.WriteLine(ControlChars.Tab &amp; &quot;MathSvc&quot;)\n      End If\n\n     &#39; Print to the log file the method invoked by the client.\n      myStreamWriter.WriteLine( _\n         &quot;The method that has been invoked by the client is:&quot;)\n      myStreamWriter.WriteLine(ControlChars.Tab &amp; message.MethodInfo.Name)\n\n      &#39; Print to the log file if the method invoked is OneWay.\n      If message.OneWay Then\n         myStreamWriter.WriteLine( _\n            &quot;The client doesn&#39;t wait for the server to finish processing&quot;)\n      Else\n         myStreamWriter.WriteLine( _\n            &quot;The client waits for the server to finish processing&quot;)\n      End If \n\n      &#39; Print to the log file the URL of the site that provides \n      &#39; implementation of the method.\n      myStreamWriter.WriteLine( _\n         &quot;The url of the XML Web service method that has been requested is: &quot;)\n      myStreamWriter.WriteLine(ControlChars.Tab &amp; message.Url)\n      myStreamWriter.WriteLine(&quot;The contents of the SOAP envelope are: &quot;)\n      myStreamWriter.Flush()\n\n      &#39; Copy the contents of one stream to another. \n      Copy(newStream, myFileStream)\n      myStreamWriter.Close()\n      myFileStream.Close()\n      newStream.Position = 0\n\n      &#39; Copy the contents of one stream to another. \n      Copy(newStream, oldStream)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Protocols_SoapClientMessage_OneWay\">\r\n    \r\n            <a id=\"System_Web_Services_Protocols_SoapClientMessage_OneWay_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">OneWay</div>        \r\n          </div>\r\n    \r\n            <p>Gets a value indicating whether the client waits for the server to finish processing an XML Web service method.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override bool OneWay { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.boolean\" data-linktype=\"relative-path\">Boolean</a></div>\r\n                  </div>\r\n                  <p><code>true</code> if the client does not wait for the server to completely process a method.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>A <a class=\"xref\" href=\"system.web.services.protocols.soapdocumentmethodattribute\" data-linktype=\"relative-path\">SoapDocumentMethodAttribute</a> or <a class=\"xref\" href=\"system.web.services.protocols.soaprpcmethodattribute\" data-linktype=\"relative-path\">SoapRpcMethodAttribute</a> applied to an XML Web service method or XML Web service client can specify whether the XML Web service method is one way by setting the <a class=\"xref\" href=\"system.web.services.protocols.soapdocumentmethodattribute#System_Web_Services_Protocols_SoapDocumentMethodAttribute_OneWay_\" data-linktype=\"relative-path\">OneWay</a> property of the attribute.  </p>\n<p> The OneWay property can be accessed during any <a class=\"xref\" href=\"system.web.services.protocols.soapmessagestage\" data-linktype=\"relative-path\">SoapMessageStage</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code fragment is part of a SOAP extension that logs the SOAP messages sent and received by an XML Web service client. This particular fragment outputs to that log file a phrase stating the XML Web service method is one-way, when the OneWay property is <code>true</code>.  </p>\n<pre><code class=\"lang-cpp\" name=\"SoapClientMessage#5\">      newStream-&gt;Position = 0;\n      FileStream^ myFileStream = gcnew FileStream( filename, FileMode::Append,\n         FileAccess::Write );\n      StreamWriter^ myStreamWriter = gcnew StreamWriter( myFileStream );\n      myStreamWriter-&gt;WriteLine(\n         &quot;================================== Request at {0}&quot;, DateTime::Now );\n      \n      // Print to the log file the request header field for SoapAction header.\n      myStreamWriter-&gt;WriteLine( &quot;The SoapAction Http request header field is: &quot; );\n      myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, message-&gt;Action );\n      \n      // Print to the log file the type of the client that invoked \n      // the XML Web service method.\n      myStreamWriter-&gt;WriteLine( &quot;The type of the client is: &quot; );\n      if ( (message-&gt;Client-&gt;GetType())-&gt;Equals( typeid&lt;MathSvc^&gt; ) )\n      {\n         myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;MathSvc&quot; );\n      }\n      \n      // Print to the log file the method invoked by the client.\n      myStreamWriter-&gt;WriteLine(\n         &quot;The method that has been invoked by the client is:&quot; );\n      myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, message-&gt;MethodInfo-&gt;Name );\n      \n      // Print to the log file if the method invoked is OneWay.\n      if ( message-&gt;OneWay )\n      {\n         myStreamWriter-&gt;WriteLine(\n            &quot;The client doesn&#39;t wait for the server to finish processing&quot; );\n      }\n      else\n      {\n         myStreamWriter-&gt;WriteLine(\n         &quot;The client waits for the server to finish processing&quot; );\n      }\n      \n      // Print to the log file the URL of the site that provides \n      // implementation of the method.\n      myStreamWriter-&gt;WriteLine(\n         &quot;The URL of the XML Web service method that has been requested is: &quot; );\n      myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, message-&gt;Url );\n      myStreamWriter-&gt;WriteLine( &quot;The contents of the SOAP envelope are: &quot; );\n      myStreamWriter-&gt;Flush();\n      \n      // Copy the contents of one stream to another. \n      Copy( newStream, myFileStream );\n      myFileStream-&gt;Close();\n      newStream-&gt;Position = 0;\n      \n      // Copy the contents of one stream to another. \n      Copy( newStream, oldStream );\n</code></pre><pre><code class=\"lang-cs\" name=\"SoapClientMessage#5\">      newStream.Position = 0;\n      FileStream myFileStream = new FileStream(filename, FileMode.Append,\n         FileAccess.Write);\n      StreamWriter myStreamWriter = new StreamWriter(myFileStream);\n      myStreamWriter.WriteLine(\n         &quot;================================== Request at &quot;\n         + DateTime.Now);\n\n      // Print to the log file the request header field for SoapAction header.\n      myStreamWriter.WriteLine(&quot;The SoapAction Http request header field is: &quot;);\n      myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + message.Action);\n\n      // Print to the log file the type of the client that invoked \n      // the XML Web service method.\n      myStreamWriter.WriteLine(&quot;The type of the client is: &quot;);\n      if((message.Client.GetType()).Equals(typeof(MathSvc)))\n         myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;MathSvc&quot;);\n\n      // Print to the log file the method invoked by the client.\n      myStreamWriter.WriteLine(\n         &quot;The method that has been invoked by the client is:&quot;);\n      myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + message.MethodInfo.Name);\n\n      // Print to the log file if the method invoked is OneWay.\n      if(message.OneWay)\n         myStreamWriter.WriteLine(\n           &quot;The client doesn&#39;t wait for the server to finish processing&quot;);\n      else\n         myStreamWriter.WriteLine(\n           &quot;The client waits for the server to finish processing&quot;);\n\n      // Print to the log file the URL of the site that provides \n      // implementation of the method.\n      myStreamWriter.WriteLine(\n         &quot;The URL of the XML Web service method that has been requested is: &quot;);\n      myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + message.Url);\n      myStreamWriter.WriteLine(&quot;The contents of the SOAP envelope are: &quot;);\n      myStreamWriter.Flush();\n\n      // Copy the contents of one stream to another. \n      Copy(newStream, myFileStream);\n      myFileStream.Close();\n      newStream.Position = 0;\n\n      // Copy the contents of one stream to another. \n      Copy(newStream, oldStream);\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapClientMessage#5\">      newStream.Position = 0\n      Dim myFileStream As New FileStream(filename, FileMode.Append, _\n         FileAccess.Write)\n      Dim myStreamWriter As New StreamWriter(myFileStream)\n      myStreamWriter.WriteLine( _\n         &quot;================================== Request at &quot; &amp; DateTime.Now)\n\n      &#39; Print to the log file the request header field for SoapAction header.\n      myStreamWriter.WriteLine(&quot;The SoapAction Http request header field is: &quot;)\n      myStreamWriter.WriteLine(ControlChars.Tab &amp; message.Action)\n\n      &#39; Print to the log file the type of the client that invoked\n      &#39; the XML Web service method.\n      myStreamWriter.WriteLine(&quot;The type of the client is: &quot;)\n      If message.Client.GetType().Equals(GetType(MathSvc)) Then\n         myStreamWriter.WriteLine(ControlChars.Tab &amp; &quot;MathSvc&quot;)\n      End If\n\n     &#39; Print to the log file the method invoked by the client.\n      myStreamWriter.WriteLine( _\n         &quot;The method that has been invoked by the client is:&quot;)\n      myStreamWriter.WriteLine(ControlChars.Tab &amp; message.MethodInfo.Name)\n\n      &#39; Print to the log file if the method invoked is OneWay.\n      If message.OneWay Then\n         myStreamWriter.WriteLine( _\n            &quot;The client doesn&#39;t wait for the server to finish processing&quot;)\n      Else\n         myStreamWriter.WriteLine( _\n            &quot;The client waits for the server to finish processing&quot;)\n      End If \n\n      &#39; Print to the log file the URL of the site that provides \n      &#39; implementation of the method.\n      myStreamWriter.WriteLine( _\n         &quot;The url of the XML Web service method that has been requested is: &quot;)\n      myStreamWriter.WriteLine(ControlChars.Tab &amp; message.Url)\n      myStreamWriter.WriteLine(&quot;The contents of the SOAP envelope are: &quot;)\n      myStreamWriter.Flush()\n\n      &#39; Copy the contents of one stream to another. \n      Copy(newStream, myFileStream)\n      myStreamWriter.Close()\n      myFileStream.Close()\n      newStream.Position = 0\n\n      &#39; Copy the contents of one stream to another. \n      Copy(newStream, oldStream)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Protocols_SoapClientMessage_SoapVersion\">\r\n    \r\n            <a id=\"System_Web_Services_Protocols_SoapClientMessage_SoapVersion_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">SoapVersion</div>        \r\n          </div>\r\n    \r\n            <p>Gets the version of the SOAP protocol used to communicate with the XML Web service.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.web.services.protocols.soapprotocolversion\" data-linktype=\"relative-path\">SoapProtocolVersion</a></div>\r\n                  </div>\r\n                  <p>One of the <a class=\"xref\" href=\"system.web.services.protocols.soapprotocolversion\" data-linktype=\"relative-path\">SoapProtocolVersion</a> values. The default is <a class=\"xref\" href=\"system.web.services.protocols.soapprotocolversion\" data-linktype=\"relative-path\">SoapProtocolVersion</a>.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>When an XML Web service supports SOAP version 1.1,.NET Framework clients communicate with an XML Web service in that version by default. For details on how to change the version of the SOAP protocol, see the <a class=\"xref\" href=\"system.web.services.protocols.soaphttpclientprotocol#System_Web_Services_Protocols_SoapHttpClientProtocol_SoapVersion_\" data-linktype=\"relative-path\">SoapVersion</a> property.</p>\n\r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Protocols_SoapClientMessage_Url\">\r\n    \r\n            <a id=\"System_Web_Services_Protocols_SoapClientMessage_Url_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">Url</div>        \r\n          </div>\r\n    \r\n            <p>Gets the URL of the XML Web service.</p>\n\r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">public override string Url { get; }</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n              <h4>Property Value</h4>\r\n              <ul class=\"memberDetails\">\r\n                <li>\r\n                  <div class=\"single\">                \r\n                      <div class=\"lang-csharp\"><a class=\"xref\" href=\"system.string\" data-linktype=\"relative-path\">String</a></div>\r\n                  </div>\r\n                  <p>The URL of the XML Web service.</p>\n\r\n                </li>\r\n              </ul>\r\n    \r\n    \r\n          \r\n    \r\n            <h4>Remarks</h4>\r\n            <p>The Url property can be accessed during any <a class=\"xref\" href=\"system.web.services.protocols.soapmessagestage\" data-linktype=\"relative-path\">SoapMessageStage</a>.</p>\n\r\n    \r\n            <h4>Example</h4>\r\n            <p>The following code fragment is part of a SOAP extension that logs the SOAP messages sent and received by an XML Web service client. This particular fragment outputs to that log file the URL of the XML Web service.  </p>\n<pre><code class=\"lang-cpp\" name=\"SoapClientMessage#6\">      newStream-&gt;Position = 0;\n      FileStream^ myFileStream = gcnew FileStream( filename, FileMode::Append,\n         FileAccess::Write );\n      StreamWriter^ myStreamWriter = gcnew StreamWriter( myFileStream );\n      myStreamWriter-&gt;WriteLine(\n         &quot;================================== Request at {0}&quot;, DateTime::Now );\n      \n      // Print to the log file the request header field for SoapAction header.\n      myStreamWriter-&gt;WriteLine( &quot;The SoapAction Http request header field is: &quot; );\n      myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, message-&gt;Action );\n      \n      // Print to the log file the type of the client that invoked \n      // the XML Web service method.\n      myStreamWriter-&gt;WriteLine( &quot;The type of the client is: &quot; );\n      if ( (message-&gt;Client-&gt;GetType())-&gt;Equals( typeid&lt;MathSvc^&gt; ) )\n      {\n         myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;MathSvc&quot; );\n      }\n      \n      // Print to the log file the method invoked by the client.\n      myStreamWriter-&gt;WriteLine(\n         &quot;The method that has been invoked by the client is:&quot; );\n      myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, message-&gt;MethodInfo-&gt;Name );\n      \n      // Print to the log file if the method invoked is OneWay.\n      if ( message-&gt;OneWay )\n      {\n         myStreamWriter-&gt;WriteLine(\n            &quot;The client doesn&#39;t wait for the server to finish processing&quot; );\n      }\n      else\n      {\n         myStreamWriter-&gt;WriteLine(\n         &quot;The client waits for the server to finish processing&quot; );\n      }\n      \n      // Print to the log file the URL of the site that provides \n      // implementation of the method.\n      myStreamWriter-&gt;WriteLine(\n         &quot;The URL of the XML Web service method that has been requested is: &quot; );\n      myStreamWriter-&gt;WriteLine( &quot;&nbsp;&nbsp;&nbsp;&nbsp;{0}&quot;, message-&gt;Url );\n      myStreamWriter-&gt;WriteLine( &quot;The contents of the SOAP envelope are: &quot; );\n      myStreamWriter-&gt;Flush();\n      \n      // Copy the contents of one stream to another. \n      Copy( newStream, myFileStream );\n      myFileStream-&gt;Close();\n      newStream-&gt;Position = 0;\n      \n      // Copy the contents of one stream to another. \n      Copy( newStream, oldStream );\n</code></pre><pre><code class=\"lang-cs\" name=\"SoapClientMessage#6\">      newStream.Position = 0;\n      FileStream myFileStream = new FileStream(filename, FileMode.Append,\n         FileAccess.Write);\n      StreamWriter myStreamWriter = new StreamWriter(myFileStream);\n      myStreamWriter.WriteLine(\n         &quot;================================== Request at &quot;\n         + DateTime.Now);\n\n      // Print to the log file the request header field for SoapAction header.\n      myStreamWriter.WriteLine(&quot;The SoapAction Http request header field is: &quot;);\n      myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + message.Action);\n\n      // Print to the log file the type of the client that invoked \n      // the XML Web service method.\n      myStreamWriter.WriteLine(&quot;The type of the client is: &quot;);\n      if((message.Client.GetType()).Equals(typeof(MathSvc)))\n         myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;MathSvc&quot;);\n\n      // Print to the log file the method invoked by the client.\n      myStreamWriter.WriteLine(\n         &quot;The method that has been invoked by the client is:&quot;);\n      myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + message.MethodInfo.Name);\n\n      // Print to the log file if the method invoked is OneWay.\n      if(message.OneWay)\n         myStreamWriter.WriteLine(\n           &quot;The client doesn&#39;t wait for the server to finish processing&quot;);\n      else\n         myStreamWriter.WriteLine(\n           &quot;The client waits for the server to finish processing&quot;);\n\n      // Print to the log file the URL of the site that provides \n      // implementation of the method.\n      myStreamWriter.WriteLine(\n         &quot;The URL of the XML Web service method that has been requested is: &quot;);\n      myStreamWriter.WriteLine(&quot;&nbsp;&nbsp;&nbsp;&nbsp;&quot; + message.Url);\n      myStreamWriter.WriteLine(&quot;The contents of the SOAP envelope are: &quot;);\n      myStreamWriter.Flush();\n\n      // Copy the contents of one stream to another. \n      Copy(newStream, myFileStream);\n      myFileStream.Close();\n      newStream.Position = 0;\n\n      // Copy the contents of one stream to another. \n      Copy(newStream, oldStream);\n</code></pre><pre><code class=\"lang-vb\" name=\"SoapClientMessage#6\">      newStream.Position = 0\n      Dim myFileStream As New FileStream(filename, FileMode.Append, _\n         FileAccess.Write)\n      Dim myStreamWriter As New StreamWriter(myFileStream)\n      myStreamWriter.WriteLine( _\n         &quot;================================== Request at &quot; &amp; DateTime.Now)\n\n      &#39; Print to the log file the request header field for SoapAction header.\n      myStreamWriter.WriteLine(&quot;The SoapAction Http request header field is: &quot;)\n      myStreamWriter.WriteLine(ControlChars.Tab &amp; message.Action)\n\n      &#39; Print to the log file the type of the client that invoked\n      &#39; the XML Web service method.\n      myStreamWriter.WriteLine(&quot;The type of the client is: &quot;)\n      If message.Client.GetType().Equals(GetType(MathSvc)) Then\n         myStreamWriter.WriteLine(ControlChars.Tab &amp; &quot;MathSvc&quot;)\n      End If\n\n     &#39; Print to the log file the method invoked by the client.\n      myStreamWriter.WriteLine( _\n         &quot;The method that has been invoked by the client is:&quot;)\n      myStreamWriter.WriteLine(ControlChars.Tab &amp; message.MethodInfo.Name)\n\n      &#39; Print to the log file if the method invoked is OneWay.\n      If message.OneWay Then\n         myStreamWriter.WriteLine( _\n            &quot;The client doesn&#39;t wait for the server to finish processing&quot;)\n      Else\n         myStreamWriter.WriteLine( _\n            &quot;The client waits for the server to finish processing&quot;)\n      End If \n\n      &#39; Print to the log file the URL of the site that provides \n      &#39; implementation of the method.\n      myStreamWriter.WriteLine( _\n         &quot;The url of the XML Web service method that has been requested is: &quot;)\n      myStreamWriter.WriteLine(ControlChars.Tab &amp; message.Url)\n      myStreamWriter.WriteLine(&quot;The contents of the SOAP envelope are: &quot;)\n      myStreamWriter.Flush()\n\n      &#39; Copy the contents of one stream to another. \n      Copy(newStream, myFileStream)\n      myStreamWriter.Close()\n      myFileStream.Close()\n      newStream.Position = 0\n\n      &#39; Copy the contents of one stream to another. \n      Copy(newStream, oldStream)\n</code></pre>\r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section><section class=\"memberGroup\">\r\n      <header class=\"header enable-platform-filter\" id=\"methods\">\r\n        <h2>Methods\r\n    </h2>\r\n      </header>\r\n    \r\n      <ul class=\"list-clean enable-platform-filter\">\r\n    \r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Protocols_SoapClientMessage_EnsureInStage\">\r\n    \r\n            <a id=\"System_Web_Services_Protocols_SoapClientMessage_EnsureInStage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnsureInStage()</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void EnsureInStage ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n        <li class=\" enable-platform-filter\" id=\"System_Web_Services_Protocols_SoapClientMessage_EnsureOutStage\">\r\n    \r\n            <a id=\"System_Web_Services_Protocols_SoapClientMessage_EnsureOutStage_\"></a>\r\n    \r\n    \r\n          <div class=\"memberName\">\r\n            <div class=\"lang-csharp\">EnsureOutStage()</div>        \r\n          </div>\r\n    \r\n    \r\n            <pre class=\"memberDeclaration\"><code class=\"csharp lang-csharp\">protected override void EnsureOutStage ();</code></pre>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          \r\n    \r\n    \r\n    \r\n    \r\n        </li>\r\n      </ul>\r\n    </section>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n","outputRootRelativePath":"./","pageMetadata":"<meta name=\"breadcrumb_path\" content=\"breadcrumb/toc.json\">\r\n<meta name=\"search.ms_sitename\" content=\"Docs\">\r\n<meta name=\"search.ms_docsetname\" content=\"fulldocset\">\r\n<meta name=\"locale\" content=\"en-us\">\r\n<meta name=\"site_name\" content=\"Docs\">\r\n<meta name=\"search.ms_product\" content=\"MSDN\">\r\n<meta name=\"depot_name\" content=\"MSDN.fulldocset\">\r\n<meta name=\"ref_skeleton_gitcommit\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Services.Protocols.SoapClientMessage.yml\">\r\n<meta name=\"original_ref_skeleton_git_url\" content=\"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Services.Protocols.SoapClientMessage.yml\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.SoapClientMessage\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.SoapClientMessage.Action\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.SoapClientMessage.Client\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.SoapClientMessage.EnsureInStage\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.SoapClientMessage.EnsureOutStage\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.SoapClientMessage.MethodInfo\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.SoapClientMessage.OneWay\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.SoapClientMessage.SoapVersion\">\r\n<meta name=\"APIName\" content=\"System.Web.Services.Protocols.SoapClientMessage.Url\">\r\n<meta name=\"APILocation\" content=\"System.Web.Services.dll\">\r\n<meta name=\"TopicType\" content=\"apiref\">\r\n<meta name=\"APIType\" content=\"Assembly\">\r\n<meta name=\"updated_at\" content=\"2017-03-01 01:37 AM\">\r\n<meta name=\"document_id\" content=\"45c26b7f-b53d-ad7b-70a0-2272d3aa570b\">\r\n<meta name=\"pagetype\" content=\"Reference\">\r\n<meta name=\"description\" content=\"Represents the data in a SOAP request sent or a SOAP response received by an XML Web service client at a specific . This class cannot be inherited.\n\">\r\n<meta name=\"toc_rel\" content=\"_splitted/System.Web.Services.Protocols/toc.json\">\r\n<meta name=\"source_url\" content=\"\">\r\n<meta name=\"ms.assetid\" content=\"System.Web.Services.Protocols.SoapClientMessage\">\r\n","rawMetadata":{"breadcrumb_path":"breadcrumb/toc.json","search.ms_sitename":"Docs","search.ms_docsetname":"fulldocset","version":null,"_op_canonicalUrlPrefix":"https://ppe.docs.microsoft.com/en-us/fulldotnet/","locale":"en-us","site_name":"Docs","search.ms_product":"MSDN","_op_openToPublicContributors":true,"depot_name":"MSDN.fulldocset","_op_gitRefSkeletonCommitHistory":[{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"use plugin in master","commit_sha":"501959ac03e19ac52a27aa4c6bbeb980f8b11c8c","commit_date":"2017-03-01 09:31:20 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"switch from platform to version","commit_sha":"78cdacb5ca782478af490a6b30c3a2cb2b6b873e","commit_date":"2017-02-28 15:09:51 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update platforms","commit_sha":"39ad5a8919a59afc93a79ac4bd8e07c3b471b37a","commit_date":"2017-02-28 10:38:59 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"checkin yml","commit_sha":"da161b792852497df7140d7768cee2eccd9cb43f","commit_date":"2017-02-28 09:36:15 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"delete ymls","commit_sha":"417c04fd1daf0cb211ec4909020356fc1fe69260","commit_date":"2017-02-27 14:12:48 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"update latest xml","commit_sha":"1e40a158586a88a698e0cb5342785002a56898b2","commit_date":"2017-02-24 16:20:57 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"transform see cref and fix paramref format","commit_sha":"3d0ea34483c97ac77f4020a7f294757d67a5c1d4","commit_date":"2017-02-23 10:03:17 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"convert exceptions","commit_sha":"0a5bf3370731dd35a596c91081e5dc82e2eace3a","commit_date":"2017-02-22 11:54:30 +0800"},{"author_name":"Tianqi Zhang","author_email":"tianzh@microsoft.com","committer_name":"Tianqi Zhang","comitter_email":"tianzh@microsoft.com","message":"remove _yml from url","commit_sha":"f9314af8858edb8c329d223328490093aef4f55f","commit_date":"2017-02-17 15:31:12 +0800"}],"ref_skeleton_gitcommit":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/501959ac03e19ac52a27aa4c6bbeb980f8b11c8c/fulldocset/System.Web.Services.Protocols.SoapClientMessage.yml","original_ref_skeleton_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/System.Web.Services.Protocols.SoapClientMessage.yml","open_to_public_contributors":true,"api_name":["System.Web.Services.Protocols.SoapClientMessage","System.Web.Services.Protocols.SoapClientMessage.Action","System.Web.Services.Protocols.SoapClientMessage.Client","System.Web.Services.Protocols.SoapClientMessage.EnsureInStage","System.Web.Services.Protocols.SoapClientMessage.EnsureOutStage","System.Web.Services.Protocols.SoapClientMessage.MethodInfo","System.Web.Services.Protocols.SoapClientMessage.OneWay","System.Web.Services.Protocols.SoapClientMessage.SoapVersion","System.Web.Services.Protocols.SoapClientMessage.Url"],"api_location":["System.Web.Services.dll"],"topic_type":["apiref"],"api_type":["Assembly"],"f1_keywords":["System.Web.Services.Protocols.SoapClientMessage","System::Web::Services::Protocols::SoapClientMessage","System.Web.Services.Protocols.SoapClientMessage.Action","System::Web::Services::Protocols::SoapClientMessage::Action","System.Web.Services.Protocols.SoapClientMessage.Client","System::Web::Services::Protocols::SoapClientMessage::Client","System.Web.Services.Protocols.SoapClientMessage.EnsureInStage","System::Web::Services::Protocols::SoapClientMessage::EnsureInStage","System.Web.Services.Protocols.SoapClientMessage.EnsureOutStage","System::Web::Services::Protocols::SoapClientMessage::EnsureOutStage","System.Web.Services.Protocols.SoapClientMessage.MethodInfo","System::Web::Services::Protocols::SoapClientMessage::MethodInfo","System.Web.Services.Protocols.SoapClientMessage.OneWay","System::Web::Services::Protocols::SoapClientMessage::OneWay","System.Web.Services.Protocols.SoapClientMessage.SoapVersion","System::Web::Services::Protocols::SoapClientMessage::SoapVersion","System.Web.Services.Protocols.SoapClientMessage.Url","System::Web::Services::Protocols::SoapClientMessage::Url"],"dev_langs":["csharp"],"updated_at":"2017-03-01 01:37 AM","document_id":"45c26b7f-b53d-ad7b-70a0-2272d3aa570b","content_git_url":"https://github.com/TianqiZhang/ECMA2YamlTestRepo2/blob/master/fulldocset/xml/System.Web.Services.Protocols/SoapClientMessage.xml","layout":"Reference","_op_layout":"Reference","pagetype":"Reference","title":"SoapClientMessage class | Microsoft Docs","_op_ogTitle":"SoapClientMessage class","description":"Represents the data in a SOAP request sent or a SOAP response received by an XML Web service client at a specific . This class cannot be inherited.\n","toc_asset_id":"_splitted/System.Web.Services.Protocols/toc.json","toc_rel":"_splitted/System.Web.Services.Protocols/toc.json","source_url":"","ms.assetid":"System.Web.Services.Protocols.SoapClientMessage","canonical_url":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.services.protocols.soapclientmessage","_op_canonicalUrl":"https://ppe.docs.microsoft.com/en-us/mergedepotdynamic/system.web.services.protocols.soapclientmessage","fileRelativePath":"System.Web.Services.Protocols.SoapClientMessage.html"},"themesRelativePathToOutputRoot":"_themes/"}